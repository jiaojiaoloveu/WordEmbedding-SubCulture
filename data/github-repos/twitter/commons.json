{"_default": {"1": {"jayeye": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/454", "title": "The release of twitter.common.app on pypi does not work with python3.5 (and possibly earlier)", "body": "This happens pretty much everywhere I've tried it, but to make sure I checked it in a fresh installation of python3.5 on Amazon Linux:\r\n\r\n    $ cat x.py\r\n    from twitter.common import app\r\n\r\n    $ python3.5 x.py\r\n    Traceback (most recent call last):\r\n      File \"x.py\", line 1, in <module>\r\n        from twitter.common import app\r\n      File \"/usr/local/lib/python3.5/site-packages/twitter/common/app/__init__.py\", line 39, in <module>\r\n        from .application import Application\r\n      File \"/usr/local/lib/python3.5/site-packages/twitter/common/app/application.py\", line 39, in <module>\r\n        from twitter.common.process import daemonize\r\n      File \"/usr/local/lib/python3.5/site-packages/twitter/common/process/__init__.py\", line 7, in <module>\r\n        from .process_provider_ps import ProcessProvider_PS\r\n      File \"/usr/local/lib/python3.5/site-packages/twitter/common/process/process_provider_ps.py\", line 2, in <module>\r\n        from process_handle_ps import ProcessHandlePs\r\n    ImportError: No module named 'process_handle_ps'\r\n\r\nAnd here is what's installed:\r\n\r\n    $ pip-3.5 freeze\r\n    twitter.common.app==0.3.9\r\n    twitter.common.collections==0.3.9\r\n    twitter.common.contextutil==0.3.9\r\n    twitter.common.dirutil==0.3.9\r\n    twitter.common.lang==0.3.9\r\n    twitter.common.log==0.3.9\r\n    twitter.common.options==0.3.9\r\n    twitter.common.process==0.3.9\r\n    twitter.common.string==0.3.9\r\n    twitter.common.util==0.3.9\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/291", "title": "API docs are for jvm API only", "body": "This link: http://twitter.github.io/commons/apidocs/index.html \nin http://twitter.github.io/commons is for the java API only. If there is documentation for the python APIs, it's not reachable from that page.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dslztx": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/438", "title": "I find a bug in src/java/com/twitter/common/objectsize/ObjectSizeCalculator.java", "body": "There are some classes as follows:\n\n```\nclass A {\n    int a;\n}\n\n\nclass B extends A {\n    long b;\n}\n\n\nclass C extends B {\n    char c;\n}\n\npublic class Main\n{\npublic static void main(String[] args)\n{\n    C c=new C();\n    System.out.println(ObjectSizeCalculator.getObjectSize(c));\n}\n}\n```\n\nIn 32 bits JDK,the result of your program execution is **24**,but the exact result is **32**.\nI also write a program for calculating java object size,please take a look at [java-object-size](https://github.com/dslztx/java-object-size)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kwlzn": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/437", "title": "Kill twitter.common.python vestiges", "body": "a while back, `twitter.common.python` became `pex`. there are still references to `twitter.common.python` scattered in the code base - particularly, a failure in the release script:\n\n```\n                   Running register sdist upload against /Users/kwilson/dev/commons/dist/twitter.common.python-0.7.0**** Failed to install twitter.common.python-0.7.0. stdout:\nrunning register\nrunning egg_info\ncreating src/twitter.common.python.egg-info\nwriting requirements to src/twitter.common.python.egg-info/requires.txt\nwriting src/twitter.common.python.egg-info/PKG-INFO\nwriting namespace_packages to src/twitter.common.python.egg-info/namespace_packages.txt\nwriting top-level names to src/twitter.common.python.egg-info/top_level.txt\nwriting dependency_links to src/twitter.common.python.egg-info/dependency_links.txt\nwriting manifest file 'src/twitter.common.python.egg-info/SOURCES.txt'\nreading manifest file 'src/twitter.common.python.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'src/twitter.common.python.egg-info/SOURCES.txt'\nrunning check\nRegistering twitter.common.python to https://pypi.python.org/pypi\nServer response (200): OK\nrunning sdist\ncreating twitter.common.python-0.7.0\ncreating twitter.common.python-0.7.0/src\ncreating twitter.common.python-0.7.0/src/twitter\ncreating twitter.common.python-0.7.0/src/twitter.common.python.egg-info\ncreating twitter.common.python-0.7.0/src/twitter/common\ncreating twitter.common.python-0.7.0/src/twitter/common/python\ncreating twitter.common.python-0.7.0/src/twitter/common/python/http\nmaking hard links in twitter.common.python-0.7.0...\nhard linking MANIFEST.in -> twitter.common.python-0.7.0\nhard linking setup.py -> twitter.common.python-0.7.0\nhard linking src/twitter/__init__.py -> twitter.common.python-0.7.0/src/twitter\nhard linking src/twitter.common.python.egg-info/PKG-INFO -> twitter.common.python-0.7.0/src/twitter.common.python.egg-info\nhard linking src/twitter.common.python.egg-info/SOURCES.txt -> twitter.common.python-0.7.0/src/twitter.common.python.egg-info\nhard linking src/twitter.common.python.egg-info/dependency_links.txt -> twitter.common.python-0.7.0/src/twitter.common.python.egg-info\nhard linking src/twitter.common.python.egg-info/namespace_packages.txt -> twitter.common.python-0.7.0/src/twitter.common.python.egg-info\nhard linking src/twitter.common.python.egg-info/requires.txt -> twitter.common.python-0.7.0/src/twitter.common.python.egg-info\nhard linking src/twitter.common.python.egg-info/top_level.txt -> twitter.common.python-0.7.0/src/twitter.common.python.egg-info\nhard linking src/twitter.common.python.egg-info/zip-safe -> twitter.common.python-0.7.0/src/twitter.common.python.egg-info\nhard linking src/twitter/common/__init__.py -> twitter.common.python-0.7.0/src/twitter/common\nhard linking src/twitter/common/python/__init__.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/base.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/common.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/compatibility.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/environment.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/fetcher.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/finders.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/installer.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/interpreter.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/marshaller.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/obtainer.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/orderedset.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/package.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/pep425.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/pex.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/pex_bootstrapper.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/pex_builder.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/pex_info.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/platforms.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/resolver.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/testing.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/tracer.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/translator.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/util.py -> twitter.common.python-0.7.0/src/twitter/common/python\nhard linking src/twitter/common/python/http/__init__.py -> twitter.common.python-0.7.0/src/twitter/common/python/http\nhard linking src/twitter/common/python/http/crawler.py -> twitter.common.python-0.7.0/src/twitter/common/python/http\nhard linking src/twitter/common/python/http/http.py -> twitter.common.python-0.7.0/src/twitter/common/python/http\nhard linking src/twitter/common/python/http/link.py -> twitter.common.python-0.7.0/src/twitter/common/python/http\nhard linking src/twitter/common/python/http/tracer.py -> twitter.common.python-0.7.0/src/twitter/common/python/http\nWriting twitter.common.python-0.7.0/setup.cfg\ncreating dist\nCreating tar archive\nremoving 'twitter.common.python-0.7.0' (and everything under it)\nrunning upload\nSubmitting dist/twitter.common.python-0.7.0.tar.gz to https://pypi.python.org/pypi\n\n**** Failed to install twitter.common.python-0.7.0. stderr:\nwarning: check: missing meta-data: either (author and author_email) or (maintainer and maintainer_email) must be supplied\n\nwarning: sdist: standard file not found: should have one of README, README.rst, README.txt\n\nUpload failed (400): A file named \"twitter.common.python-0.7.0.tar.gz\" already exists for  twitter.common.python-0.7.0. To fix problems with that file you should create a new release.\nerror: Upload failed (400): A file named \"twitter.common.python-0.7.0.tar.gz\" already exists for  twitter.common.python-0.7.0. To fix problems with that file you should create a new release.\n```\n\nwe should clean this up.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/issues/430", "title": "Flaky test: tests/python/twitter/common/metrics/test_sampling.py:test_sampler_base", "body": "this can manifest in CI as:\n\n```\n                     tests/python/twitter/common/metrics/test_sampling.py F..\n                     tests/python/twitter/common/metrics/test_gauges.py ......\n\n                     ==================== FAILURES ====================\n                     _______________ test_sampler_base ________________\n\n                         def test_sampler_base():\n                           class TestSampler(SamplerBase):\n                             def __init__(self, period, clock):\n                               self.count = 0\n                               SamplerBase.__init__(self, period, clock)\n\n                             def iterate(self):\n                               self.count += 1\n\n                           test_clock = ThreadedClock()\n                           sampler = TestSampler(Amount(1, Time.SECONDS), clock=test_clock)\n                           sampler.start()\n\n                           assert test_clock.converge(threads=[sampler])\n                           test_clock.assert_waiting(sampler, 1)\n\n                           test_clock.tick(0.5)\n                           assert test_clock.converge(threads=[sampler])\n                           assert sampler.count == 0\n\n                           test_clock.tick(0.5)\n                           assert test_clock.converge(threads=[sampler])\n                           assert sampler.count == 1\n\n                           test_clock.tick(5)\n                           assert test_clock.converge(threads=[sampler])\n                     >     assert sampler.count == 6\n                     E     assert 2 == 6\n                     E      +  where 2 = <TestSampler(Thread-1 [TID=5876], started daemon 140429632481024)>.count\n\n                     tests/python/twitter/common/metrics/test_sampling.py:58: AssertionError\n                     -------------- Captured stderr call --------------\n                     [<twitter.common.testing.clock.ThreadedClock object at 0x2dd1990>] Time now: 0.0\n                     [<twitter.common.testing.clock.ThreadedClock object at 0x2dd1990>] Time now: 0.0\n                     [<twitter.common.testing.clock.ThreadedClock object at 0x2dd1990>] Time now: 0.5\n                     [<twitter.common.testing.clock.ThreadedClock object at 0x2dd1990>] Time now: 0.5\n                     [<twitter.common.testing.clock.ThreadedClock object at 0x2dd1990>] Time now: 1.0\n                     [<twitter.common.testing.clock.ThreadedClock object at 0x2dd1990>] Time now: 1.0\n                     [<twitter.common.testing.clock.ThreadedClock object at 0x2dd1990>] Time now: 1.0\n                     [<twitter.common.testing.clock.ThreadedClock object at 0x2dd1990>] Time now: 2.0\n                     [<twitter.common.testing.clock.ThreadedClock object at 0x2dd1990>] Time now: 6.0\n                      1 failed, 21 passed, 1 warnings in 0.44 seconds =\n```\n\nbut succeeds on rebuild.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/89bc492969d735ea177374b178e39ea6cf0d85ed", "message": "Bump VERSION"}, {"url": "https://api.github.com/repos/twitter/commons/commits/941c7b4a06048e484e21f613bc04004f3756b16f", "message": "Repair ./rbt for review posting.\n\nAs Mateo noted in https://github.com/twitter/commons/pull/428, `./rbt` in the commons repo seems to have been broken @ 146de3 due to removal of the underlying virtualenv bits.\n\nThis RB restores the requisite venv deps and bumps both `virtualenv` and `rbtools` to their latest pypi versions to get `./rbt` functional again.\n\nTesting Done:\nDogfooded for this very review + green CI @ https://travis-ci.org/twitter/commons/builds/129290520 for good measure.\n\nbefore:\n\n```\n[illuminati commons (master)]$ ./rbt --version\n./rbt: line 3: build-support/python/libvirtualenv.sh: No such file or directory\n./rbt: line 4: setup_virtualenv: command not found\n./rbt: line 6: exec: rbt: not found\n```\n\nafter:\n\n```\n[illuminati commons (kwlzn/commons/rbt_fix)]$ ./rbt --version\nBootstrapping rbt with requirements RBTools==0.7.6\nUsing /Users/kwilson/Python/CPython-2.7.11/bin/python2.7\n~/dev/commons/build-support ~/dev/commons\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 1799k  100 1799k    0     0  2207k      0 --:--:-- --:--:-- --:--:-- 2205k\n...\n~/dev/commons\nNew python executable in /Users/kwilson/dev/commons/build-support/rbt.venv/bin/python2.7\nAlso creating executable in /Users/kwilson/dev/commons/build-support/rbt.venv/bin/python\nInstalling setuptools, pip, wheel...done.\nCollecting RBTools==0.7.6\n  Using cached RBTools-0.7.6-py2-none-any.whl\nCollecting six>=1.8.0 (from RBTools==0.7.6)\n  Using cached six-1.10.0-py2.py3-none-any.whl\nInstalling collected packages: six, RBTools\nSuccessfully installed RBTools-0.7.6 six-1.10.0\nRBTools 0.7.6\n```\n\nReviewed at https://rbcommons.com/s/twitter/r/3858/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/2097ff289d8e04040a6b004d2c6ba64a061661f0", "message": "Revert Diff 2 pants.ini changes from RB #3155"}, {"url": "https://api.github.com/repos/twitter/commons/commits/32011ab5351fea23e8c70e24e752540b06d1389f", "message": "[twitter/commons] Upgrade pants from 0.0.44 -> 0.0.59\n\nUpon merging an innocuous PR after 2+ months of no merges, CI broke in the commons repo due to https://github.com/pantsbuild/pants/issues/2566 + the public release of pytest-timeout-1.0.0 (which is visible by commons via open dep resolution against pypi). This change addresses that by upgrading the entire commons repo to pants 0.0.59 wherein #2566 is repaired.\n\n- Upgrade pants to 0.0.59.\n- Fixup various symbol references and usages throughout.\n- Update excludes syntax.\n- Upgrade to contrib python checks plugin for PythonEval (which brings along checkstyle).\n- Implement repo-wide python checkstyle suppression due to numerous checkstyle errors in the codebase.\n- Sync out latest twitter.common.args from Twitter's source repo to support removal of apt-args plugin.\n- Eliminate the apt-args plugin, which is no longer needed with isolation.\n\nTesting Done:\nhttps://travis-ci.org/twitter/commons/builds/92376412\n\nBugs closed: 414\n\nReviewed at https://rbcommons.com/s/twitter/r/3155/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/811ac6c0a31e8616c3be006e3a1b5d0b728297ec", "message": "Merge pull request #407 from johnskopis/jskopis/update-kazoo\n\nUpgrade kazoo 1.3.1 -> 2.2.1"}, {"url": "https://api.github.com/repos/twitter/commons/commits/5dfe7d4670c2a9a145b34ef8308eec5b59646274", "message": "Add pex_bootstrapper.bootstrap_pex_env() for simplified external pex bootstrapping."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/110285583", "body": "is this no longer useful/necessary?", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/110285583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/162155291", "body": "intentional?", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/162155291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/162162146", "body": "ah, cool", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/162162146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "mrwilby": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/432", "title": "Am I missing something - isn't this a thread leak?", "body": "Where does this thread (below):\n\n```\nThread watcherProcessor = new Thread(\"ZookeeperClient-watcherProcessor\") {\n```\n\nget cleaned up when close() is called? I see a ton of these threads lingering around in one open source project we are using. \n## \n\n public ZooKeeperClient(Amount<Integer, Time> sessionTimeout, Credentials credentials,\n      Optional<String> chrootPath, Iterable<InetSocketAddress> zooKeeperServers) {\n    this.sessionTimeoutMs = Preconditions.checkNotNull(sessionTimeout).as(Time.MILLISECONDS);\n    this.credentials = Preconditions.checkNotNull(credentials);\n\n```\nif (chrootPath.isPresent()) {\n  PathUtils.validatePath(chrootPath.get());\n}\n\nPreconditions.checkNotNull(zooKeeperServers);\nPreconditions.checkArgument(!Iterables.isEmpty(zooKeeperServers),\n    \"Must present at least 1 ZK server\");\n\nThread watcherProcessor = new Thread(\"ZookeeperClient-watcherProcessor\") {\n  @Override\n  public void run() {\n    while (true) {\n      try {\n        WatchedEvent event = eventQueue.take();\n        for (Watcher watcher : watchers) {\n          watcher.process(event);\n        }\n      } catch (InterruptedException e) { /* ignore */ }\n    }\n  }\n};\nwatcherProcessor.setDaemon(true);\nwatcherProcessor.start();\n\nIterable<String> servers =\n    Iterables.transform(ImmutableSet.copyOf(zooKeeperServers),\n        InetSocketAddressHelper.INET_TO_STR);\nthis.zooKeeperServers = Joiner.on(',').join(servers);\nthis.connectString = this.zooKeeperServers.concat(chrootPath.or(\"\"));\n```\n\n  }\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mateor": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/427", "title": "Request to update python `futures` library", "body": "The twitter.common libs depends on a pretty old version of `futures`, could you update to a more recent version?\n\nThis conflicts with the `futures` range required by some of our python libraries. `boto3-1.3.0` is the most recent example that sent me here, it requires `futures>=2.2.0,<4.0.0` for python 2.7. But this is not the first time I have seen it, just the first time I decided to try and solve the problem instead of working around it \ud83d\ude04 \n\nBoto3 requirements include [the dep here](https://github.com/boto/boto3/blob/67409f27c8e180b4e9e942fc2f795dbfc7e98c7f/setup.cfg).\n\nThe futures range above goes from 2.2.0 -> 4.0.0, but the most recent published version of `futures` is only 3.0.5, fyi.\n\nI cloned t.c. and upgraded `futures` to the minimum viable upgrade (to  `2.2.0`) and will be sending a pull request along.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/e8de9d16eda3c22c1a866178f73a12355fc5699c", "message": "Update the futures library.\n\nThis bumps futures to a more modern version,\nsome useful Python libraries are pinned to a range\nthat is later than the current t.c. `futures` version.\n\nex. boto3 is pinned to `futures>=2.2.0,<4.0.0` for python2.7\n\nThis is the minimum-viable change that makes the t.c.\nlibs compatible.\n\nTesting Done:\nRan ci.sh locally and Travis passed: https://github.com/twitter/commons/pull/428\n\nBugs closed: 427, 428\n\nReviewed at https://rbcommons.com/s/twitter/r/3857/"}], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/431", "title": "Convert 3rdparty/python to use the python_requirements target.", "body": "Twitter commons was using a wrapper function around its python\ndependencies to create python_requirement_library targets.\nThe python_requirements library is able to understand a pip\nrequirements.txt file and convert each entry into the\npython_requirement_library target needed by Pants.\n\nThe python_requirements target uses the project name as a target\nname. The original  wrapper was maintained for a few dependencies\nwhen their name clashed with Pants BUILD file conventions.\n\nI also removed the easy_install thrift, it looks like it was\nput in place to service aurora, who was later unblocked.\n\nLet me know if you think it should be returned:\nhttps://github.com/pantsbuild/pants/issues/2533\n\nThe purpose of this change is to enable a simple interface to convert\nsome python dependencies from being hardcoded to a single rev into\nbeing able to be satisfied by a release range. I will submit\nany dependency version changes separately.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mcandre": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/422", "title": "Can't find twitter common base Either in published apidocs", "body": "", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/418", "title": "Publish to Maven Central", "body": "twitter-commons has some really good stuff, especially the Zookeeper lock implementation. Could we publish twitter-commons to Maven Central, to make it easier for people to use these libs without having to link to custom artifact repos?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Abel123": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/413", "title": "bug in commons/src/java/com/twitter/common/metrics/Metrics.java", "body": "commons/src/java/com/twitter/common/metrics/Metrics.java\n\nline 39    if (gauges.containsKey(key) || counters.containsKey(key) || counters.containsKey(key)) {\n\nwhich should be     if (gauges.containsKey(key) || counters.containsKey(key) || histograms .containsKey(key)) {\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "orsenthil": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/411", "title": "Error while running tests. SourcePackage is not translateable by ChainedTranslator(EggTranslator, SourceTranslator)", "body": "On master\n\n```\n$ git log origin/master -n 1 |head -n 3\ncommit d4454f233914d0a7586da8c5d07575d8b63124fe\nAuthor: John Sirois <john.sirois@gmail.com>\nDate:   Mon Aug 24 15:09:53 2015\n```\n\nrunning the tests\n\n$ ./pants test tests/python/twitter/common:all\n\ngives me an error\n\n```\nException message: Package     SourcePackage(u'https://pypi.python.org/packages/source/w/wheel/wheel-0.24.0.tar.gz#md5=3b0d66f0d127ea8befaa5d11453107fd') is not translateable by ChainedTranslator(EggTranslator, SourceTranslator)\n```\n\nIf I go back to an old commit (this was the latest which succeeded for me)\n\n```\n$ git log HEAD -n 1 |head -n 6\ncommit bc7248da0974ab8a39ca36956ac6880029b85b00\nAuthor: John Sirois <john.sirois@gmail.com>\nDate:   Sun Aug 9 20:29:10 2015\n\n    Upgrade to pants 0.0.41\n```\n\nand run the tests.\n\n```\n$ ./pants test tests/python/twitter/common:all\n```\n\nThe test execution is successful.\n- The difference between these versions are only about pants version update.\n- FWIW, I tried the latest version of pants in pantsbuild/pants and **could not** reproduce this error. I am raising this against twitter/commons\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/405", "title": "checkstyle does not allow class scoped variables for staticmethod", "body": "It may be good idea to discuss this as a ticket.\n\nCheckstyle prevents the use of class scoped variables with a staticmethod. \n\n```\nclass MyClass(object):\n\n  VARIABLE = None\n\n  @staticmethod\n  def method():\n    return MyClass.VARIABLE\n```\n\n$ check.pex\n\n```\nT800:WARNING science/src/python/twitter/packer/lib/packer_client.py:046 Instead of MyClass.VARIABLE use self.VARIABLE or cls.VARIABLE with instancemethods and classmethods respectively.\n     |    return MyClass.VARIABLE\n```\n\nIt is entirely desirable to have a) staticmethod  b) have a class scoped variables in staticmethod. We do not care for subclassing in staticmethods, so enforcing the users to change it to classmethods may not be a good idea.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/151", "title": "Addition of system dependant .egg files - Documentation & change request", "body": "Recently I desired to include library 'urwid' into pants.pex. I ran into multiple troubles while including it and finally came to know that since urwid builds into system depended .egg files, I will have build them and them check them into pants/third_party/python/dist/ in the binaries branch and rebuild the index.\n\nIt will be a good idea to document this for future reference.\n\nAnd better will be:\n\nPants utilizes the python-standard way where in distribute library can just build those eggs during pants build time by downloading from pypi.python.org\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/7b4843fb2947ec9bc3ff7769a37d05ad2220fc48", "message": "Merge pull request #412 from landism/master\n\neliminate double slash in reviewboard urls"}, {"url": "https://api.github.com/repos/twitter/commons/commits/768d8b6d7b668bfb19ff46d02e954d174da2ea6d", "message": "Merge pull request #379 from mattastica/patch-1\n\nAdd closing parenthesis to indentation example in styleguide."}, {"url": "https://api.github.com/repos/twitter/commons/commits/454c096b9466a93ceac6a0832ef7f737915b9cd1", "message": "Merge pull request #364 from orsenthil/skumaran/update_readme\n\nUpdate README with supported python version and fix the test instructions."}, {"url": "https://api.github.com/repos/twitter/commons/commits/338abe8e6cd4963f1f1d70e6846ebe41590ce836", "message": "Update README."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4665923", "body": "I think, this is a typo. It should be extras_path\n\nOtherwise, it crashes with a NameError\n\nNameError: global name 'extra_paths' is not defined\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4665923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/9607348", "body": "HTTPException might be better idea IMO. It may capture more http related exceptions than just BadStatusLine\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/9607348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40158209", "body": "-1.\n%sr is meaningless. In case, if self.url is sent without trailing '/'. This will break. Instead, having // seems better as it can cause no harm.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40158209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40162424", "body": "@slyphon Ack. \n\n@landism \n- You could fix that at sender, if suitable.\n- or change to `return self.url  + 'r/%s' % (rb_id)`  which I assume was the original intention.\n- os.path.join() is okay, but is a hack in my opinion as rules of url joins are different from path joins.\n- Or anything you see fit.\n  This is a minor issue or a change not _strictly required_ IMO.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40162424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163259", "body": "s/2011/2015/g\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163358", "body": "It should be\n\n```\nfrom twitter.common.reviewboard import ReviewBoard\n\nimport pytest\n```\n- That is, import reorder and a newline between first and the second.\n\nWith these two comments addressed, you could merge it in. #shipit \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "brian-brazil": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/396", "title": "com.twitter.common.zookeeper:server-set references non-existant com.twitter.common:service-thrift:jar:0.2.21", "body": "Hi,\n\nI have the following in my POM:\n\n```\n                <dependency>\n                        <groupId>com.twitter.common.zookeeper</groupId>\n                        <artifactId>client</artifactId>\n                        <version>0.0.8</version>\n                </dependency>\n                <dependency>\n                        <groupId>com.twitter.common.zookeeper</groupId>\n                        <artifactId>server-set</artifactId>\n                        <version>1.0.110</version>\n                </dependency>\n```\n\nWhich results in:\n\n```\n[ERROR] Failed to execute goal on project boxever-dropwizard-extras-load-balancer: Could not resolve dependencies for project com.boxever:boxever-dropwizard-extras-load-balancer:jar:0.7.1.62-SNAPSHOT: Failure to find com.twitter.common:service-thrift:jar:0.2.21 in http://maven.twttr.com/ was cached in the local repository, resolution will not be reattempted until the update interval of twitter-twttr has elapsed or updates are forced -> [Help 1]\n\n```\n\nand indeed there is no such version at http://maven.twttr.com/com/twitter/common/service-thrift/\n\nMy guess is that the server-set pom is out of date.\n#346 may be related.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevints": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/387", "title": "Python releases exist that contain no code changes", "body": "This is a bug in the release process. It looks like releases get created as one atomic unit. This leads to a situation where there are releases of individual component libraries that don't actually contain any code changes (and nor do their parents), leaving downstream users to resolve version conflicts that don't actually exist.\n\nFor example, twitter.common.quantity==0.3.2 and twitter.common.quantity==0.3.3 have identical code, but the twitter.common.quantity==0.3.3 requires twitter.common.lang==0.3.3, so the metadata is different. Okay, that warrants releasing a new version. But wait, twitter.common.lang==0.3.2 and twitter.common.lang==0.3.3 have identical code and no dependencies. So twitter.common.lang's version should not have been incremented, and that increment should not have cascaded to its dependees.\n\nThe alternative: a version change for a component needs to \"cascade\" to its dependees, but only when there's an actual code change. This means that a change to twitter.common.quantity source files causes an increment to its version and its dependees, but not to its parent twitter.common.lang.\n\nI'm not sure how the version strategy is implemented currently but would like to start a discussion toward changing it before the next release.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/331", "title": "twitter.common.concurrent has unnecessary dependency on futures", "body": "twitter.common.concurrent contains a convenience import of concurrent.futures into its namespace (in **init**.py), adding an unnecessary dependency to futures. But none of the code in twitter.common.concurrent actually uses futures.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/315", "title": "GraphView servlet should use packaged jquery rather than CDN", "body": "", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/254", "title": "Consider adding a \"wrapper\" goal for pants", "body": "Create a \"wrapper\" goal to bootstrap a new repository with a self-bootstrapping pants wrapper script suitable for checkin similar to http://www.gradle.org/docs/current/userguide/gradle_wrapper.html\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/223", "title": "twitter.common.python: pex.pex should expose --interpreter", "body": "Similar to `./pants build -i`, `pex` should expose a `--interpreter` flag to control the python implementation used to execute it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/222", "title": "no module named _markerlib", "body": "The PEX bootstrapper assumes it can import pkg_resources.py assuming it's self-contained; however it doesn't include its dependency _markerlib.\n\n```\n~aurora git aurora/. master    \n% ./pants build -i Jython src/main/python/apache/aurora/client/bin:aurora_client\nBuild operating on targets: OrderedSet([PythonBinary(src/main/python/apache/aurora/client/bin/BUILD:aurora_client)])\nBuilding PythonBinary PythonBinary(src/main/python/apache/aurora/client/bin/BUILD:aurora_client):\nWrote /home/ksweeney/workspace/aurora/dist/aurora_client.pex\n~aurora git aurora/. master    \n% mkdir dist/aurora_client; unzip -qqd dist/aurora_client dist/aurora_client.pex\n~aurora git aurora/. master    \n% JYTHONPATH=dist/aurora_client jython dist/aurora_client/__main__.py \nTraceback (most recent call last):\n  File \"dist/aurora_client/__main__.py\", line 24, in <module>\n    bootstrap_pex(__entry_point__)\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/_twitter_common_python/pex_bootstrapper.py\", line 47, in bootstrap_pex\n    pex.PEX(entry_point).execute()\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/_twitter_common_python/pex.py\", line 128, in execute\n    self._env.activate()\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/_twitter_common_python/environment.py\", line 118, in activate\n    self._activate()\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/_twitter_common_python/environment.py\", line 136, in _activate\n    resolved = working_set.resolve(all_reqs, env=self)\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/_twitter_common_python/environment.py\", line 136, in _activate\n    resolved = working_set.resolve(all_reqs, env=self)\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/pkg_resources.py\", line 581, in resolve\n    requirements.extend(dist.requires(req.extras)[::-1])\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/pkg_resources.py\", line 2323, in requires\n    dm = self._dep_map\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/pkg_resources.py\", line 2312, in _dep_map\n    if invalid_marker(marker):\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/pkg_resources.py\", line 1167, in invalid_marker\n    evaluate_marker(text)\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/pkg_resources.py\", line 1167, in invalid_marker\n    evaluate_marker(text)\n  File \"/home/ksweeney/workspace/aurora/dist/aurora_client/.bootstrap/pkg_resources.py\", line 1268, in _markerlib_evaluate\n    import _markerlib\nImportError: No module named _markerlib\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/cdff6904fe0c44e30d406daa05e81a7f070aa009", "message": "Revert \"Catch EnvironmentError in DiskMetricsWriter\"\n\nThis reverts commit fe0b83c677b2d885623ac64caafe8461f9a1830f.\n\nAccidental click in github UI."}, {"url": "https://api.github.com/repos/twitter/commons/commits/fe0b83c677b2d885623ac64caafe8461f9a1830f", "message": "Catch EnvironmentError in DiskMetricsWriter"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jsirois": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/386", "title": "Consider restructuring python targets to be 1-1-1", "body": "See #385 for the java side of this.  In java, fine grained and deep package structures are more of-the-norm.  In python, less so; so this issue is phrased as a \"consider\".  The idea though is to eliminate most or all exclude lists in sources globs in the python codebase.  This would require re-structuring packages and thus risk breaking clients imports.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/385", "title": "Restructure java targets to be 1-1-1.", "body": "Today there are many java BUILD targets that are subsets of a package.  To maintain the BUILD files for these targets in a reasonable way, constant lists of source files are defined that can be subtracted out from target sources lists using the globs exclude facility.  At some point pants will likely remove the ability to define constants in BUILD files and this mode of defining non 1-1-1 targets will be taken away, forcing duplication of file lists and the associated maintenance risk.\n\nThere are 2 complicating factors here:\n1. re-packaging will likely break clients of the java jars - they'll need to fix imports; so, this will require a deprecation cycle\n2. IIUC the official home for the java code is still inside Twitter walls; so, this refactoring really needs to occur in Twitter's repo and then be synced out here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/338", "title": "Port remote thrift fetching for finagle's tracing.thrift to a sanctioned mechanism", "body": "Right now pants-`plugins/src/python/twitter/common/pants/python/commons/remote_python_thrift_fileset.py` uses backdoors to fetch remote thrift files transparently.  This very likely will break as pants BUILD parsing evolves and the BuildGraph is held in-memory by a daemon.  Sometime before that point pants will expose a native generic mechanism to specify remote filesets and at that point `twitter.common.pants.python.commons.remote_python_thrift_fileset.RemotePythonThriftFileset` should be ported to use that mechanism or it should be eliminated altogether in favor of that mechanism if it supports specifying file transformations.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/311", "title": "t.c.python.InstallerBase is unuseable for interactive commands", "body": "If a user is trying to upload an sdist and does not have a ~/.pypirc with user/pass info or, if signing the release does not have a gpg-agent with their signing key cracked open then the command will fail since all streams are captured preventing interaction: https://github.com/twitter/commons/blob/master/src/python/twitter/common/python/installer.py#L92\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/173", "title": "pants uses a man-in-the middle vulnerable pip to bootstrap", "body": "pip before 1.3 uses HTTP to retrieve packages from the PyPI repository, and does not perform integrity checks on package contents, which allows man-in-the-middle attackers to execute arbitrary code via a crafted response to a \"pip install\" operation.\n\nPants [setup](https://github.com/twitter/commons/blob/master/build-support/python/setup.sh#L36) uses pip 1.1 via virtualenv-1.7.1.2.  We should upgrade\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/172", "title": "tests/python/twitter/common/metrics/test_sampling.py#test_sampler_base is flaky", "body": "See the failure [here](https://travis-ci.org/twitter/commons/jobs/9836315):\n\n``` console\n______________________________ test_sampler_base _______________________________\n    def test_sampler_base():\n      class TestSampler(SamplerBase):\n        def __init__(self, period, clock):\n          self.count = 0\n          SamplerBase.__init__(self, period, clock)\n\n        def iterate(self):\n          self.count += 1\n\n      test_clock = ThreadedClock()\n      sampler = TestSampler(Amount(1, Time.SECONDS), clock=test_clock)\n      sampler.start()\n\n      test_clock.tick(0.5)\n      assert sampler.count == 0\n      test_clock.tick(0.5)\n      assert sampler.count == 1\n      test_clock.tick(5)\n>     assert sampler.count == 6\nE     assert 4 == 6\nE      +  where 4 = <TestSampler(Thread-1 [TID=3115], started daemon 139893466560256)>.count\ntests/python/twitter/common/metrics/test_sampling.py:50: AssertionError\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/0c5c6e3030b3890e20f3c2e85c5628d0ab7fc3d1", "message": "Work around lockfile break.\n\nThis pins lockfile's pbr dep on lockfile's behalf as reccomended here:\n  https://groups.google.com/d/topic/pants-devel/OnPISJosUoI/discussion\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/125937912\n\nBugs closed: 424\n\nReviewed at https://rbcommons.com/s/twitter/r/3762/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/d4454f233914d0a7586da8c5d07575d8b63124fe", "message": "Upgrade to pants 0.0.44.\n\nThe release notes are here:\n  https://pypi.python.org/pypi/pantsbuild.pants/0.0.44\n\nOf particular interest to twitter/commons is the graduation of the\nisolated jvm compile strategy to a viable out-of-the-box solution for\njava & scala compiles.  This change includes a switch over to that\nstrategy which necessitated an upgrade to scala 2.10.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/77066466\n\nBugs closed: 410\n\nReviewed at https://rbcommons.com/s/twitter/r/2691/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/146de30657b2f6c07fd16b6f250be0af73e0a2f6", "message": "Kill cruft no longer used/needed by comons.\n\nThe 0.0.42 upgrade and switch to the standard pants bootsrap script\nkilled the need for both build-support/virtualenv and\nbuild-support/python/libvirtualenv.sh.\n\nI also noticed build-support/ivy/ci.ivysettings.xml was unused.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/75838991\n\nBugs closed: 409\n\nReviewed at https://rbcommons.com/s/twitter/r/2641/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/88377b252f42319f55f97b7d03c25601f812473c", "message": "Upgrade to pants 0.0.42.\n\nThe release notes are here:\n  https://pypi.python.org/pypi/pantsbuild.pants/0.0.42\n\nThis change also switches over to the standard pants setup script\nfrom https://pantsbuild.github.io/setup and uses the new pants\nplugins loading mechanism.  Now the pants & plugins install is\ncompletely controlled in pants.ini.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/75833044\n\nBugs closed: 408\n\nReviewed at https://rbcommons.com/s/twitter/r/2636/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/bc7248da0974ab8a39ca36956ac6880029b85b00", "message": "Upgrade to pants 0.0.41\n\nThe release notes are here:\n  https://pypi.python.org/pypi/pantsbuild.pants/0.0.41\n\nOf note are fixes to python chroot caching which fixes behavior of\npython tasks when edits are made to a python_binary's python_library\ndependencies.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/74840320\n\nBugs closed: 406\n\nReviewed at https://rbcommons.com/s/twitter/r/2585/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/1510477d6fad4f2f890b61281d9574eabf1762c1", "message": "Upgrade to pants 0.0.40.\n\nRelease notes are here:\n  https://pypi.python.org/pypi/pantsbuild.pants/0.0.40\n\nThe upgrade necessitates a work around in our coding_style.xml for\ncustom Twitter Checkstyle checks that are shaded by the pants\nauto-tool-shading feature.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/73652274\n\nBugs closed: 404\n\nReviewed at https://rbcommons.com/s/twitter/r/2559/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/68fe0c91937975e483be796059595d2639aa3bff", "message": "Automate the release process a bit more.\n\nPreviously, registering new packages and then uploading new packages and\nupdated ones was a manual out of band process.  The script now does\nthese things with the caveat that the proper ~/.pypirc is setup for the\n'twitter' user."}, {"url": "https://api.github.com/repos/twitter/commons/commits/ef4c7c176bdeb01bb0b5f19009b8a53b2dd8b6fb", "message": "Open up the python thrift dep to 0.9.1 and 0.9.2.\n\nThis allows for a transition to pinned 0.9.2 while giving sdist\nconsumers a window to upgrade.\n\nSee the thrift 0.9.2 changelog here:\n  https://git-wip-us.apache.org/repos/asf?p=thrift.git;a=blob_plain;f=CHANGES;hb=HEAD\n\nTesting Done:\nI successfully tested a local release in aurora as part of work on:\n  https://issues.apache.org/jira/browse/AURORA-1083\n\nIt required 1 python change:\n```diff\n$ git diff\ndiff --git a/src/test/python/apache/aurora/client/api/test_updater.py b/src/test/python/apache/aurora/client/api/test_updater.py\nindex 8793555..c45d092 100644\n--- a/src/test/python/apache/aurora/client/api/test_updater.py\n+++ b/src/test/python/apache/aurora/client/api/test_updater.py\n@@ -811,7 +811,7 @@ class UpdaterTest(TestCase):\n     \"\"\"Diff between two config objects with different repr but identical content works ok.\"\"\"\n     from_config = self.make_task_configs()[0]\n     from_config.constraints = set([\n-        Constraint(name='value', constraint=ValueConstraint(values=set(['1', '2']))),\n+        Constraint(name='value', constraint=ValueConstraint(values=frozenset(['1', '2']))),\n         Constraint(name='limit', constraint=TaskConstraint(limit=LimitConstraint(limit=int(10))))])\n     from_config.taskLinks = {'task1': 'link1', 'task2': 'link2'}\n     from_config.metadata = set([\n```\n\nTo work around an unhashable error:\n```console\nself = ValueConstraint(negated=None, values=set(['1', '2']))\n\n   def __hash__(self):\n     value = 17\n     value = (value * 31) ^ hash(self.negated)\n>     value = (value * 31) ^ hash(self.values)\nE     TypeError: unhashable type: 'set'\n```\n\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/70783612\n\nBugs closed: 392, 393\n\nReviewed at https://rbcommons.com/s/twitter/r/2470/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/ba861a184d0c178362284ff21996ef6a3a55cc0d", "message": "Upgrade to pants 0.0.39\n\nSee the pants changelog here:\n  https://pypi.python.org/pypi/pantsbuild.pants/0.0.39\n\nThis pulls in 2 important fixes for commons python:\n1. Fixes broken thrift handling in the run, repl, compile, test and\n   binary goals.\n2. Fixes python thrift stub publishing to work in the setup-py goal.\n\nThe python thrift stub publishing fix does require a change to the old\npublishing scheme where the plain python_library target depending on the\npython thrift stub code would include that code in its sdist.  That\narrangment was not generally provably sound (more than one\npython_library might depend on the thrift stubs in which case both would\npublish with the embedded thrift stub code).  The new arrangement just\nrequires published python_thrift_libraries have their own setup_py and\nthis change adds those for the 2 python_thrift_libraries that were\nimplicitly published previously.\n\nSome additional BUILD and pants.ini config cleanups are also included.\n\nTesting Done:\nRan `./build-support/commons/scripts/build_py_commons.sh` which now\nworks again, generating all the prior sdists plus the 2 new broken-out\nthrift sdists.\n\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/72547292\n\nBugs closed: 394, 400\n\nReviewed at https://rbcommons.com/s/twitter/r/2530/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/9e48fa8d4075d973401eca15ad3877c050d3bd13", "message": "Upgrade to pantsbuild.pants 0.0.38.\n\nSee the changelog here:\n  https://pypi.python.org/pypi/pantsbuild.pants/0.0.38\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/72004759\n\nBugs closed: 398\n\nReviewed at https://rbcommons.com/s/twitter/r/2508/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/e44c5eaa27df3f6d5b60f7e59893d5c234f1ad59", "message": "Upgrade to latest pants release.\n\nRelease notes are here:\n  https://pypi.python.org/pypi/pantsbuild.pants/0.0.37\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/71873032\n\nBugs closed: 397\n\nReviewed at https://rbcommons.com/s/twitter/r/2502/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/399431aa4afb8c6b5d2770beec02360af64e3470", "message": "Make args-apt resource mapping paths more robust.\n\nPreviously the code used FileObject.getName() which has no guarantees to\nbe anything but a friendly name.  Switch to using the FileObject URI\nwhich has tighter semantics.  This fixes mappings under Sun JDK\n1.6.0_45-b06 for example and works with all four of OpenJDK & Oracle JDK\n1.7.0_79 & 1.8.0_45.\n\nTesting Done:\nRan `JAVA_HOME=XXX ./pants clean-all compile {src,tests}/java:: -ldebug`\nfor 5 XXX's representing:\n\n + Sun JDK 1.6.0_45-b06\n + Open JDK 1.7.0_79\n + Open JDK 1.8.0_45\n + Oracle JDK 1.7.0_79\n + Oracle JDK 1.8.0_45\n\nBefore the fix the Sun JDK 1.6.0_45-b06 due to mapping just a resource\nbasename and not a full path, ie:\n```console\nException message: cmdline.arg.info.txt.1 is not under /home/jsirois/dev/3rdparty/twitter-commons/.pants.d/compile/jvm/java/classes\n```\n\nAnd the underlying problem:\n```console\n$ head -3 .pants.d/compile/jvm/java/classes/META-INF/compiler/resource-mappings/com.twitter.common.args.apt.CmdLineProcessor\nresources by class name:\n76 items\ncom.twitter.common.args.parsers.CharacterParser -> cmdline.arg.info.txt.1\n```\n\nAfter the fix:\n```console\n$ head -3 .pants.d/compile/jvm/java/classes/META-INF/compiler/resource-mappings/com.twitter.common.args.apt.CmdLineProcessor\nresources by class name:\n76 items\ncom.twitter.common.args.parsers.CharacterParser -> /home/jsirois/dev/3rdparty/jsirois-twitter-commons/.pants.d/compile/jvm/java/classes/com/twitter/common/args/apt/cmdline.arg.info.txt.1\n```\n\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/70681083\n\nBugs closed: 391\n\nReviewed at https://rbcommons.com/s/twitter/r/2468/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/66fc3a07ff77094cb7f09d340cf6511877539786", "message": "Upgrade pants to 0.0.35.\n\nThe changelog is here:\n  https://pypi.python.org/pypi/pantsbuild.pants/0.0.35\n\nNotably, this brings in pex 1.0.1.\n\nI updated the ivy configuration to some new best practices demonstrated\nover at pantsbuild/pants for more robust downloads.\n\nThe rest is cleanup of deprecated constructs, migration of changed\noptions and upgrades to the latest pants jvm build tools.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/70465188\n\nBugs closed: 389\n\nReviewed at https://rbcommons.com/s/twitter/r/2460/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/da94c931655a66d9ed9599f7a2ce4a03c9da2d4f", "message": "Upgrade to pantsbuild.pants 0.0.33.\n\nThis change gets rid of twitter/commons dependence on the\npantsbuild/maven bintray repo and switches over to the new\norg.pantsbuild artifacts published to maven central.\n\nAlso, deprecated glob arithmetic is replaced with use of the new glob\n`exclude` parameter.\n\nTesting Done:\nI confirmed the output of `./pants filemap` was identical before and\nafter the change as a double-check of the globs math to exclude\nmigration.\n\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/67078785\n\nBugs closed: 361, 370, 384\n\nReviewed at https://rbcommons.com/s/twitter/r/2373/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/7bc6552793f295c72791c3a4395a09c404ab6e2f", "message": "Upgrade to RBTools latest.\n\nTesting Done:\nPosted this review using ./rbt.\n\nFor full disclosure, actually:\n```console\n./rbt post \\\n  -o \\\n  --target-groups=pants-reviews \\\n  --branch=\"$(git branch | grep \"*\" | cut -d \" \" -f2)\" \\\n  --description=\"$(git slog -1 --format=format:%b)\" \\\n  --summary=\"$(git log -1 --pretty=format:%s)\" \\\n  --bugs=382 \\\n  --parent=HEAD~1\n```\n\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/66606406\n\nBugs closed: 382\n\nReviewed at https://rbcommons.com/s/twitter/r/2361/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/d33d0e7cc7275e123a88d21218a319f9062d3c04", "message": "Avoid ivy cache thrash due to ivydata updates.\n\nThe `ivydata-*.properties` and root-level `*.{properties,xml}` files'\neffect on resolution time is in the noise, but they are re-timestamped\nin internal comments and fields by ivy on each run and this leads to\ncache thrash in travis-ci. Kill these files before the cache check to\navoid un-needed cache re-packing and re-upload which is a ~90s\noperation that occurs at the end of our CI run.\n\nTesting Done:\nSee the pantsbuild/pants RB here:\n  https://rbcommons.com/s/twitter/r/2333/\n\nThis technique has been vetted working there and is a significant\ntimesaver.\n\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/66608712\n\nBugs closed: 383\n\nReviewed at https://rbcommons.com/s/twitter/r/2359/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/7ab15b99ca2ba25d1c8a5fb4c4e4b4329b516639", "message": "Kill the last remaining pants tools.\n\nThe ExplicitSpecsRunnerMain was only used by pants but pants has now\ndiscontinued support and no longer uses the tool [1].\n\nThe DependencyEmitter scalac plugin has not been used since the move to\nzinc several years ago.\n\n[1] https://rbcommons.com/s/twitter/r/2208/\n\nTesting Done:\nLocally ran:\n```console\n$ ./pants clean-all\n$ ./pants list\n$ ./pants test {src,tests}/java::\n$ ./pants test {src,tests}/scala::\n```\n\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/62295637\n\nBugs closed: 377\n\nReviewed at https://rbcommons.com/s/twitter/r/2209/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/6769f5f593168ba7cb8cdf72514a03abdc6af343", "message": "Kill the java-compiler.\n\nThis has now been moved to pantsbuild/pants - the only user of\nthe tool. See the move RB's here:\n  https://rbcommons.com/s/twitter/r/2193/\n  https://rbcommons.com/s/twitter/r/2195/\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/61943213\n\nBugs closed: 376\n\nReviewed at https://rbcommons.com/s/twitter/r/2196/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/51469a70bdeca8f91a8beb713452f361eea8d9e3", "message": "Kill the junit-runner and jar-tool.\n\nThese have now been moved to pantsbuild/pants - the only user of these\ntools. See the move RB's here:\n  https://rbcommons.com/s/twitter/r/2043/\n  https://rbcommons.com/s/twitter/r/2071/\n  https://rbcommons.com/s/twitter/r/2186/\n\nFixup src/java/com/twitter/common/junit/annotations references to\npoint to a com.twiter.common#junit-runner-annotations jar until the\nnext pants upgade when the the deps can be re-pointed at the\norg.pantsbuild#junit-runner-annotations publication of the annotations.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/61856161\n\nBugs closed: 375\n\nReviewed at https://rbcommons.com/s/twitter/r/2187/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/22cb09f0ad234fa81b5c5e26a43c0ef3b040d69c", "message": "Drop the openjdk 6 CI shard.\n\nTwitter has moved on to ony support java 7 as a minimum internally and\nso fighting CI failures under java 6 is a losing battle going forward.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/57120567\n\nBugs closed: 371\n\nReviewed at https://rbcommons.com/s/twitter/r/2030/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/48f5e8bf08de4a24c756a28702031625f5dc2f6a", "message": "Switch to bintray for pants tools maven artifacts.\n\nAlso kill the now-unused jboss repo and comment why maven.twttr.com is\nstill needed as a repo.\n\nTesting Done:\nLocally flushed my cache and ran a green ci:\n```console\n$ rm -rf ~/.ivy2/twitter-commons/org.apache.thrift \\\n         ~/.ivy2/twitter-commons/com.twitter.common* \\\n         ~/.ivy2/twitter-commons/net.spy\n$ ./build-support/bin/ci.sh\n```\n\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/56834272\n\nBugs closed: 369, 370\n\nReviewed at https://rbcommons.com/s/twitter/r/2020/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/9f754882e7bc0d5d68521d487a7d1ef100818ec9", "message": "Kill an un-needed/un-used  __init__.py\n\nThe tests/python directory is not a package, its a source_root.\n\nTesting Done:\nNoticed while investigating:\n https://github.com/pantsbuild/pants/issues/1345\n\nLocal CI went green:\n```console\n$ ./pants test.pytest --no-fast  tests/python/twitter/common/:all\n```\n\nTravis CI away here:\n  https://travis-ci.org/twitter/commons/builds/56504747\n\nBugs closed: 368\n\nReviewed at https://rbcommons.com/s/twitter/r/2008/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/0b53efc8e8eb2324d1d7a8b49de45f97a4c62974", "message": "Upgrade to pantsbuild.pants 0.0.32.\n\nThis release brings in fixes for the idea and eclipse goals which were\npreviously broken with missing template resources.\n\nIt pulls in a similar fix for python-eval which is now enabled for the\nrepo and included in CI.  This provides a limited form of compile-time\nchecking that python target basics are in order:\n+ checks that transitive BUILD deps are sufficient\n+ validates that all top-level symbols are valid including function,\n  method and class declarations\n+ and decorators run at their top level of performing function wrapping\n\nThese compile checks smoked out 3 targets with missing deps that are now\nfixed.  It also identified 6 other special targets that do deliberate\ndependency gymnastics of one form or another and these are excluded from\nthe \"compile\" as a result.\n\nFinally a small config migration, simplification of the pants script and\nkilling of a few un-used build-support/python scripts round out the\ncleanups.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/55949350\n\nBugs closed: 367\n\nReviewed at https://rbcommons.com/s/twitter/r/1991/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/d2a4d9fddf17eb082aa138a44114fd1b61710c4d", "message": "Cleanup after a sloppy pants 0.0.31 upgrade.\n\nDo a config migration which hits scalastyle and scrooge option moves.\nAlso enable scalastyle and empty its excludes file since the scala\ncodebase complies.\n\nAlso get the thrift-linter goal working by defining its tool dep.\n\nFinally - leverage pants support for defining extras on its PYTHONPATH\nand kill the PYTHONPATH modification in the pants script.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/55499431\n\nBugs closed: 363\n\nReviewed at https://rbcommons.com/s/twitter/r/1972/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/e5a6127c0f97ba7adf0038763342fb0d548c4ea7", "message": "Upgrade to pants 0.0.31.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/55207052\n\nBugs closed: 362\n\nReviewed at https://rbcommons.com/s/twitter/r/1963/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/24fab7216404a12a85ab6cc8af72c59bd181ac99", "message": "Upgrade pants to 0.0.29\n\nThe scrooge plugin is now in contrib, so add this to the pants script\ndeps and the list of non-core plugin backends.\n\nAlso migrate pants.ini config changes and CLI flags, fixup BUILD\ndeprecations and upgrade some tool deps.\n\nTesting Done:\nCI went green here:\n  https://travis-ci.org/twitter/commons/builds/54198312\n\nBugs closed: 360, 361\n\nReviewed at https://rbcommons.com/s/twitter/r/1909/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/574d79891d74a3a142e1db6b085b4c7e13c67659", "message": "Upgrade to pants 0.0.28.\n\nThis picks up performance improvements in the python handling goals.\n\nTesting Done:\nCI went green here: https://travis-ci.org/twitter/commons/builds/49140746\n\nReviewed at https://rbcommons.com/s/twitter/r/1698/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/93c296ca4c4860decaad308ecd34c786eb290eb2", "message": "Fix LowResClockTest early notify hang.\n\nThere were 4 issues here:\n\n+ Transition from LowResClockTest.Token to direct use of a CountDownLatch\nto avoid the order dependence between waitForCompletion and notifyCompletion\nin LowResClockTest.Token.  In the prior arrangement the test assumed the\nToken would always `wait()` before being `notify()`ed.  This ordering is\nguaranteed in no way and so hangs could ensue.\n\n+ Ensure liveness of reads of FakeClock time. I suspect the SynchronousQueue\nused to pass signals between threads was acting as the memory barrier so\nthis change may not be strictly needed.\n\n+ Ensure signals are transferred by doing a blocking write with put instead\nof a possibly failing non-blocking write with offer.\n\n+ Ensure the start time of the test clock advancer thread is set without\narbitrary delay by lifting it out of the test clock advancer thread.\n\nAlso cleanup some indent and other style while\nin these files.\n\nTesting Done:\nLocally:\n```console\n$ ./pants goal test tests/java/com/twitter/common/util: --test-junit-test=tests/java/com/twitter/common/util/LowResClockTest.java\n...\n10:54:35 00:00   [test]\n10:54:35 00:00     [pytest]\n10:54:35 00:00     [junit]\n10:54:35 00:00       [run]\n                     .\n                     Time: 0.034\n\n                     OK (1 test)\n\n10:54:35 00:00     [specs]\n               SUCCESS\n```\n\nCI with 100K retries went green here: https://travis-ci.org/twitter/commons/builds/46030878\nNormal CI went green here: https://travis-ci.org/twitter/commons/builds/46034045\n\nBugs closed: 344\n\nReviewed at https://rbcommons.com/s/twitter/r/1558/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/a90fcd6d32b84ba7d6a4ef5806b9f4a231100881", "message": "Introduce a retry rule.\n\nTesting Done:\nThis code was used in https://rbcommons.com/s/twitter/r/1558 to setup\n100K retries for a test only failing (hanging) under Travis-CI.  With\nthe high retry count, local hangs were produced leading to quick\ndebugging of the underlying issues.\n\n```console\n$ ./pants goal test tests/java/com/twitter/common/testing/junit/rules\n...\n02:59:59 00:00   [test]\n02:59:59 00:00     [pytest]\n02:59:59 00:00     [junit]\n02:59:59 00:00       [run]\n                     ............\n                     Time: 0.038\n\n                     OK (12 tests)\n\n02:59:59 00:00     [specs]\n               SUCCESS\n```\n\nCI went green here: https://travis-ci.org/twitter/commons/builds/46033927\n\nBugs closed: 345\n\nReviewed at https://rbcommons.com/s/twitter/r/1562/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/2a6aced7ce94dd5d269ac026405837ace1c87970", "message": "Upgrade twitter/commons to pants 0.0.27.\n\nFixup BUILDs, plugins and scripts to work with pants API changes.\n\nRun the migrate_config tool from pants to convert many pants.ini sections\nand keys.  Also kill some un-needed keys.\n\nPrepare a twitter.common.pants 0.7.0 release.\n\nUpgrade BUILD.tools and fix code to conform to more stringent checkstyle\nand jmake expectations that result.\n\nAlso upgrade to virtualenv 1.11.6 and allow custom PIP_OPTIONS to\nbe specified (useful for bootstrapping pants as eggs in the venv for\neasy IDEA project setup to hack on pants-plugins).\n\nTesting Done:\nLocal CI ran green via `./build-support/bin/ci.sh`.\n\nTravis went green here: https://travis-ci.org/twitter/commons/builds/45985857\n\nBugs closed: 339\n\nReviewed at https://rbcommons.com/s/twitter/r/1513/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/2831b80645703c9f3882266b0da3fcd9ee4509cc", "message": "Use Travis CIs new container based builds.\n\nThe announcement is here:\n  http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure\nThe specs here:\n  http://docs.travis-ci.com/user/workers/container-based-infrastructure\n  http://docs.travis-ci.com/user/caching\n\nThis also turns on caching for ~/.pants.d, ~/.ivy2\nand the current pants version bootstraped in\nbuild-support.  To make virtualenv caching work, updates\nthe virtualenv bootstrap script to use a stable directory name\nacross virtualenv versions.\n\nTesting Done:\nManually tested virtualenv script change with a `git clean -fdx && ./pants && ./pants` - the 2nd pants run correctly nooped bootstrapping.\nThen edited the virtualenv script virtualenv version to 1.11.6, ran pants and observed a re-bootstrapping.\n\nCI went green here: https://travis-ci.org/twitter/commons/builds/44758450\n\nBugs closed: 342\n\nReviewed at https://rbcommons.com/s/twitter/r/1530/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/2441dcc73c59c978127645a5fbfbb025f55b13c1", "message": "Improve commons CI.\n\nPreviously we were building under python2.6 and 2.7 even\nthough Twitter has since moved on to drop support for python2.6.\n\nThis change instead fixes the build to python2.7 and leverages\nthat pinning to pivot the matrix axis to jvms and exercise 1.6 & 1.7.\n\nThis change also removes the custom notification and falls back to the\ndefault of emailing the submitter and comitter.  The idea here is\nto give responsible contributors the feedback they need to roll back\nor fix breaks instead of bottlenecking on 2 potentially unrelated\npeople.\n\nTesting Done:\nCI went green here: https://travis-ci.org/twitter/commons/builds/43776692\n\nBugs closed: 336\n\nReviewed at https://rbcommons.com/s/twitter/r/1472/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/df039342f946804464013f1e1c9c9beec87e4563", "message": "Upgrade to pantsbuild.pants 0.0.24.\n\nThere was 1 api break in BUILD files, repo no longer takes a\n`push_db` file, but a `push_db_basedir`.\n\nThe rest is cleanups of deprecated aliases:\n+ kill `pants()` wrappers\n+ s/dependencies/target/\n+ use `./pants goal test` in ci.sh for python tests\n\nThe pants-plugins/ needed no changes.\n\nTesting Done:\nCI went green here: https://travis-ci.org/twitter/commons/builds/36094495\n\nBugs closed: 325\n\nReviewed at https://rbcommons.com/s/twitter/r/1071/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/e150a90b45414b144f64ad20339167a604c9ff2b", "message": "Upgrade to pants 0.0.23\n\nNB: This picks up from the discarded https://rbcommons.com/s/twitter/r/827/\n\nThis also prepares a twitter.common.pants plugin release.\n\nTesting Done:\n$ ./build-support/bin/ci.sh\n\nBugs closed: 321\n\nReviewed at https://rbcommons.com/s/twitter/r/864/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/71a06f9c15f0bd2db67a63b32440278543864f18", "message": "Add support for the compiler/resource-mappings metadata protocol.\n\nSee linked issue 208 but the meat of the reason/protocol is defined here https://github.com/pantsbuild/pants/issues/416\n\nPants will use this initially to keep track of cmdline.arg.info.txt\nresource files in its distributed compilation cache.\n\nTesting Done:\n$ ./pants goal test {tests,src}/java/com/twitter/common/args::\n...\n12:09:03 00:21         [compile]\n12:09:03 00:21           [jmake]\n                         Jmake version 1.3.8-1\n                         warning: bootstrap class path not set in conjunction with -source 1.6\n                         Aug 04, 2014 12:09:04 PM com.twitter.common.args.apt.Configuration load\n                         INFO: No @CmdLine arg configs found on the classpath\n                         /home/jsirois/dev/3rdparty/jsirois-twitter-commons/tests/java/com/twitter/common/args/ArgsTest.java:30: mandatory_warning: junit.framework.Assert in junit.framework has been deprecated\n                         import static junit.framework.Assert.assertEquals;\n                                                      ^\n                         /home/jsirois/dev/3rdparty/jsirois-twitter-commons/tests/java/com/twitter/common/args/ArgsTest.java:30: mandatory_warning: junit.framework.Assert in junit.framework has been deprecated\n                         import static junit.framework.Assert.assertEquals;\n                                                      ^\n                         note: Writing file:/home/jsirois/dev/3rdparty/jsirois-twitter-commons/.pants.d/compile/jvm/java/classes/com/twitter/common/args/apt/cmdline.arg.info.txt.1\n                         note: Writing file:/home/jsirois/dev/3rdparty/jsirois-twitter-commons/.pants.d/compile/jvm/java/classes/META-INF/compiler/resource-mappings/com.twitter.common.args.apt.CmdLineProcessor\n...\n\n$ cat .pants.d/compile/jvm/java/classes/META-INF/compiler/resource-mappings/com.twitter.common.args.apt.CmdLineProcessor\nresources by class name:\n60 items\ncom.twitter.common.args.parsers.CharacterParser -> /home/jsirois/dev/3rdparty/jsirois-twitter-commons/.pants.d/compile/jvm/java/classes/com/twitter/common/args/apt/cmdline.arg.info.txt.1\n...\ncom.twitter.common.args.ArgScannerTest$SameName -> /home/jsirois/dev/3rdparty/jsirois-twitter-commons/.pants.d/compile/jvm/java/classes/com/twitter/common/args/apt/cmdline.arg.info.txt.1\n\nBugs closed: 208, 318\n\nReviewed at https://rbcommons.com/s/twitter/r/823/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/7d6a3af9b84ee2cdc2c884537af29781601ee54e", "message": "Fixup the 0.4.0 release date so this get corrected on the next version publish.\n\nCompare the 0.4.0 release date to the 'Uploaded on' date here: https://pypi.python.org/pypi/twitter.common.pants\nThis corrects the skew when we publish 0.4.1 or 0.5.0 or whatever the next version will be.\n\nTesting Done:\nnone\n\nBugs closed: 314\n\nReviewed at https://rbcommons.com/s/twitter/r/772/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/ffc9426fb8fa842dadb8b90824f427e0f253fcdf", "message": "Upgrade to pantsbuild.pants 0.0.21\n\nThis picks up support for t.c.python 0.6.0 and a broader\nrange of cheeseshops.\n\nAdapt to package rework in pants apis (goal -> goal.goal, goal.phase)\nin the t.c.pants plugins and prep them for a release with a minor\nversion bump and the start of a CHANGELOG.\n\nTesting Done:\n1.) local ci:\n==\n$ ./build-support/bin/ci.sh\n\n2.) publish test:\n==\n$ ./pants setup_py pants-plugins/src/python/twitter/common/pants:plugins\nRunning packager against /home/jsirois/dev/3rdparty/jsirois-twitter-commons/dist/twitter.common.pants-0.4.0\nWriting /home/jsirois/dev/3rdparty/jsirois-twitter-commons/dist/twitter.common.pants-0.4.0.tar.gz\n$ cd dist/ && tar -xzf twitter.common.pants-0.4.0.tar.gz && cd twitter.common.pants-0.4.0\n$ python setup.py --long-description | head\nRELEASE HISTORY\n===============\n\n0.4.0 (7/25/2014)\n------------------\n\nAPI Changes\n~~~~~~~~~~~\n\n* Update to ``pantsbuild.pants`` 0.0.20 api changes\n\nBugs closed: 313\n\nReviewed at https://rbcommons.com/s/twitter/r/763/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/60f2a876ab2686281adf785be4e8c7b906f402e1", "message": "Loosen up t.c.pants constraints.\n\nThe twitter.common.pants plugins were pinned hard to\npantsbuild.pants==0.0.17 limiting the context they could be used in.\n\nExpand the scope of supported pants releases up to 0.1.0 even though\nthis is likely to permissive.  The pantsbuild.pants distributions will\nprobably continue to break various APIs until we hit 0.1.0 and being\nmore permissive and then fixing the low bound on the range when the\nplugins break seems about the best we can do.\n\nThis also preps an sdist release with a version bump.\n\nTesting Done:\nI tried this locally on a pantsbuild.pants==0.0.18 (aka recent OSS pants master) + twitter.common.pants==0.3.2 release that was failing due to a dep conflict and using twitter.common.pants==0.3.3 the conflict is fixed.\n\nBugs closed: 312\n\nReviewed at https://rbcommons.com/s/twitter/r/712/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/afbca0b5ded2d6cf2d918bd0d7c85e43dc9919cf", "message": "Maintain line set type throughout branches that populate it.\n\nPrep for release of the bugfix with a version bump.\n\nTesting Done:\nDiscovered using this plugin in an internal twitter repo:\n===\n...\n12:19:25 00:03   [resources]\n12:19:25 00:03     [prepare]\n12:19:25 00:03     [args-apt]\n                   Added args-apt resource file .pants.d/resources/args-apt/eventbus.provisioning.core.src.main.java.api/com/twitter/common/args/apt/cmdline.arg.info.txt.1 for JavaLibrary(BuildFileAddress(/home/jsirois/dev/twitter/birdcage/eventbus/provisioning/core/src/main/java/BUILD, api)):\n                   # Created by pants goal args-apt\n                   # Fri Jul 18 12:08:32 PDT 2014\n                   # Fri Jul 18 12:10:53 PDT 2014\n                   # Generated via apt by com.twitter.common.args.apt.CmdLineProcessor\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule DLOG_READ_SERVERSET\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule DLOG_WRITE_SERVERSET\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule DLOG_ZK_CONNECT\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule KAFKA_REGION_ID\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule KAFKA_ZK\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_API_HOST\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_API_PORT\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_REQUEST_TIMEOUT_MILLIS\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK_CONNECT_TIMEOUT_SEC\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK_ROOT\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK_SESSION_TIMEOUT_SEC\n\n               FAILURE\nTraceback (most recent call last):\n  File \"/home/jsirois/.pants.dev/os_pants/src/python/pants/bin/pants_exe.py\", line 185, in <module>\n    main()\n  File \"/home/jsirois/.pants.dev/os_pants/src/python/pants/bin/pants_exe.py\", line 179, in main\n    _run()\n  File \"/home/jsirois/.pants.dev/os_pants/src/python/pants/bin/pants_exe.py\", line 160, in _run\n    result = command.run(lock)\n  File \"/home/jsirois/.pants.dev/os_pants/src/python/pants/commands/goal.py\", line 260, in run\n    return engine.execute(context, self.phases)\n  File \"/home/jsirois/.pants.dev/os_pants/src/python/pants/engine/engine.py\", line 50, in execute\n    self.attempt(context, phases)\n  File \"/home/jsirois/.pants.dev/os_pants/src/python/pants/engine/round_engine.py\", line 186, in attempt\n    phase_executor.attempt(explain)\n  File \"/home/jsirois/.pants.dev/os_pants/src/python/pants/engine/round_engine.py\", line 42, in attempt\n    task.execute()\n  File \"build/bdist.linux-x86_64/egg/twitter/common/pants/jvm/args/tasks/resource_mapper.py\", line 102, in execute\n  File \"build/bdist.linux-x86_64/egg/twitter/common/pants/jvm/args/tasks/resource_mapper.py\", line 139, in _add_args_resources\nAttributeError: 'list' object has no attribute 'update'\n\nTested using locally burned sdist:\n===\n...\n12:40:25 00:06   [resources]\n12:40:25 00:06     [prepare]\n12:40:25 00:06     [args-apt]\n                   Added args-apt resource file .pants.d/resources/args-apt/eventbus.provisioning.core.src.main.java.api/com/twitter/common/args/apt/cmdline.arg.info.txt.1 for JavaLibrary(BuildFileAddress(/home/jsirois/dev/twitter/birdcage/eventbus/provisioning/core/src/main/java/BUILD, api)):\n                   # Created by pants goal args-apt\n                   # Fri Jul 18 12:08:32 PDT 2014\n                   # Fri Jul 18 12:10:53 PDT 2014\n                   # Generated via apt by com.twitter.common.args.apt.CmdLineProcessor\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule DLOG_READ_SERVERSET\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule DLOG_WRITE_SERVERSET\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule DLOG_ZK_CONNECT\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule KAFKA_REGION_ID\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule KAFKA_ZK\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_API_HOST\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_API_PORT\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_REQUEST_TIMEOUT_MILLIS\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK_CONNECT_TIMEOUT_SEC\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK_ROOT\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK_SESSION_TIMEOUT_SEC\n\n                   Added args-apt resource file .pants.d/resources/args-apt/eventbus.provisioning.core.src.main.java.deploy/com/twitter/common/args/apt/cmdline.arg.info.txt.0 for JvmBinary(BuildFileAddress(/home/jsirois/dev/twitter/birdcage/eventbus/provisioning/core/src/main/java/BUILD, deploy)):\n                   # Created by pants goal args-apt\n                   # Created by pants goal args-apt\n                   # Fri Apr 04 16:24:12 PDT 2014\n                   # Fri Jul 18 12:08:32 PDT 2014\n                   # Fri Jul 18 12:10:53 PDT 2014\n                   # Fri May 09 13:56:27 PDT 2014\n                   # Fri May 16 22:44:44 PDT 2014\n                   # Fri May 23 08:21:59 PDT 2014\n                   # Generated via apt by com.twitter.common.args.apt.CmdLineProcessor\n                   # Mon Apr 07 17:26:24 PDT 2014\n                   # Mon May 19 21:15:29 PDT 2014\n                   # Sat May 03 23:34:34 PDT 2014\n                   # Sat May 03 23:34:44 PDT 2014\n                   # Sat May 03 23:41:15 PDT 2014\n                   # Thu May 08 15:57:51 PDT 2014\n                   # Thu May 22 22:08:22 PDT 2014\n                   # Tue Apr 01 08:52:42 PDT 2014\n                   # Tue May 06 22:32:52 PDT 2014\n                   # Tue May 06 22:38:49 PDT 2014\n                   # Wed Apr 02 16:25:34 PDT 2014\n                   # Wed May 14 15:17:25 PDT 2014\n                   # Wed May 28 11:27:32 PDT 2014\n                   field com.twitter.common.application.AppLauncher APP_CLASS\n                   field com.twitter.common.application.AppLauncher GUICE_STAGE\n                   field com.twitter.common.application.modules.HttpModule ANNOUNCE_NAMES\n                   field com.twitter.common.application.modules.HttpModule HTTP_PORT\n                   field com.twitter.common.application.modules.HttpModule HTTP_PRIMARY_SERVICE\n                   field com.twitter.common.application.modules.LogModule LOG_DIR\n                   field com.twitter.common.application.modules.LogModule USE_GLOG\n                   field com.twitter.common.application.modules.StatsModule RETENTION_PERIOD\n                   field com.twitter.common.application.modules.StatsModule SAMPLING_INTERVAL\n                   field com.twitter.common.logging.RootLogConfig ALSOLOGTOSTDERR\n                   field com.twitter.common.logging.RootLogConfig LOGTOSTDERR\n                   field com.twitter.common.logging.RootLogConfig USE_GLOG_FORMATTER\n                   field com.twitter.common.logging.RootLogConfig VLOG\n                   field com.twitter.common.logging.RootLogConfig VMODULE\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule DLOG_READ_SERVERSET\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule DLOG_WRITE_SERVERSET\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule DLOG_ZK_CONNECT\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule KAFKA_REGION_ID\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule KAFKA_ZK\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_API_HOST\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_API_PORT\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_REQUEST_TIMEOUT_MILLIS\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK_CONNECT_TIMEOUT_SEC\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK_ROOT\n                   field com.twitter.eventbus.provisioning.api.ProvisioningApiModule PROVISIONING_ZK_SESSION_TIMEOUT_SEC\n                   parser com.google.common.collect.Range com.twitter.common.args.parsers.RangeParser\n                   parser com.twitter.common.collections.Pair com.twitter.common.args.parsers.PairParser\n                   parser com.twitter.common.quantity.Amount com.twitter.common.args.parsers.AmountParser\n                   parser com.twitter.common.quantity.Unit com.twitter.common.args.parsers.UnitParser\n                   parser java.io.File com.twitter.common.args.parsers.FileParser\n                   parser java.lang.Boolean com.twitter.common.args.parsers.BooleanParser\n                   parser java.lang.Byte com.twitter.common.args.parsers.ByteParser\n                   parser java.lang.Character com.twitter.common.args.parsers.CharacterParser\n                   parser java.lang.Class com.twitter.common.args.parsers.ClassParser\n                   parser java.lang.Double com.twitter.common.args.parsers.DoubleParser\n                   parser java.lang.Enum com.twitter.common.args.parsers.EnumParser\n                   parser java.lang.Float com.twitter.common.args.parsers.FloatParser\n                   parser java.lang.Integer com.twitter.common.args.parsers.IntegerParser\n                   parser java.lang.Long com.twitter.common.args.parsers.LongParser\n                   parser java.lang.Short com.twitter.common.args.parsers.ShortParser\n                   parser java.lang.String com.twitter.common.args.parsers.StringParser\n                   parser java.net.InetSocketAddress com.twitter.common.args.parsers.InetSocketAddressParser\n                   parser java.net.URI com.twitter.common.args.parsers.URIParser\n                   parser java.net.URL com.twitter.common.args.parsers.URLParser\n                   parser java.util.Date com.twitter.common.args.parsers.DateParser\n                   parser java.util.List com.twitter.common.args.parsers.ListParser\n                   parser java.util.Map com.twitter.common.args.parsers.MapParser\n                   parser java.util.Set com.twitter.common.args.parsers.SetParser\n                   parser java.util.regex.Pattern com.twitter.common.args.parsers.PatternParser\n                   verifier java.io.File com.twitter.common.args.constraints.CanExecute com.twitter.common.args.constraints.CanExecuteFileVerifier\n                   verifier java.io.File com.twitter.common.args.constraints.CanRead com.twitter.common.args.constraints.CanReadFileVerifier\n                   verifier java.io.File com.twitter.common.args.constraints.CanWrite com.twitter.common.args.constraints.CanWriteFileVerifier\n                   verifier java.io.File com.twitter.common.args.constraints.Exists com.twitter.common.args.constraints.ExistsFileVerifier\n                   verifier java.io.File com.twitter.common.args.constraints.IsDirectory com.twitter.common.args.constraints.IsDirectoryFileVerifier\n                   verifier java.lang.Iterable com.twitter.common.args.constraints.NotEmpty com.twitter.common.args.constraints.NotEmptyIterableVerifier\n                   verifier java.lang.Number com.twitter.common.args.constraints.NotNegative com.twitter.common.args.constraints.NotNegativeNumberVerifier\n                   verifier java.lang.Number com.twitter.common.args.constraints.Positive com.twitter.common.args.constraints.PositiveNumberVerifier\n                   verifier java.lang.Number com.twitter.common.args.constraints.Range com.twitter.common.args.constraints.RangeNumberVerifier\n                   verifier java.lang.Object com.twitter.common.args.constraints.NotNull com.twitter.common.args.constraints.NotNullVerifier\n                   verifier java.lang.String com.twitter.common.args.constraints.NotEmpty com.twitter.common.args.constraints.NotEmptyStringVerifier\n\n12:40:25 00:06   [bundle]\n...\n\nBugs closed: 308\n\nReviewed at https://rbcommons.com/s/twitter/r/702/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/d2ea1b38a88c1f5c3ad9dc9f2a886d0062babc1b", "message": "Port twitter/commons to the pantsbuild/pants build system.\n\nThe {src,tests}/python/twitter/pants trees are conceptually deleted\nbut only the BUILD files in those trees really deleted to keep this\nchange reviewable.  A quick follow-up will delete those trees.\n\nThe custom goal installs have been moved to the pants plugin system\nand the ./pants & venv scripts as well as pants.ini have been updated\nas a result.\n\n2 sets of additional plugins have been factored up from BUILD files to\nthe new plugin system:\n+ commons_version() replaces the boilerplate VERSION file slurping\n+ args-apt ResourceMapper handles the @Cmdline Args apt generated\n  resource files from the com.twitter.common#args package hosted in\n  this repo.  Since any users of that lib that use pants will need this plugin\n  its exported as an sdist for re-use.\n\nThere are also alot of small BUILD file changes to catch up to new\nsyntax requirements including:\n+ eliminate inline jar and python_requirement dependencies\n+ segregate jar_library jars and dependencies lists\n+ wrap python_requirements in python_requirement_libraries\n+ use explicit resources lists in jvm targets\n+ forgo the use of __file__ (still supported but deprecated)\n\nTesting Done:\n$ ./build-support/bin/ci.sh\n\nAnd travis-ci went green here: https://travis-ci.org/twitter/commons/builds/29951599\n\nBugs closed: 304\n\nReviewed at https://rbcommons.com/s/twitter/r/681/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/ad15fc517a76a8c434071b4f203b79b707325770", "message": "Upgrade futures to pick up some fixes.\n\nTesting Done:\nNone yet - twitter/commons ci is broken atm on a hard coverage dep.\n\nI did find a safe looking changelog that seems to back up the patch version bump - no API breaks from the looks of things:\n  https://code.google.com/p/pythonfutures/source/browse/CHANGES\n\n2.1.6\n=====\n\n- Fixed a problem with files missing from the source distribution\n\n2.1.5\n=====\n\n- Fixed Jython compatibility\n- Added metadata for wheel support\n\n2.1.4\n=====\n\n- Ported the library again from Python 3.2.5 to get the latest bug fixes\n\n2.1.3\n=====\n\n- Fixed race condition in wait(return_when=ALL_COMPLETED)\n  (http://bugs.python.org/issue14406) -- thanks Ralf Schmitt\n- Added missing setUp() methods to several test classes\n\nBugs closed: 300\n\nReviewed at https://rbcommons.com/s/twitter/r/534/"}], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/342", "title": "Use Travis CIs new container based builds.", "body": "The announcement is here:\n  http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure\nThe specs here:\n  http://docs.travis-ci.com/user/workers/container-based-infrastructure\n  http://docs.travis-ci.com/user/caching/#Fetching-and-storing-caches\n\nThis also turns on caching for ~/.pants.d, ~/.ivy2\nand the current pants version bootstraped in\nbuild-support.  To make virtualenv caching work, updates\nthe virtualenv bootstrap script to use a stable directory name\nacross virtualenv versions.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/1030768", "body": "We need to update the README and will be blogging about pants and sapling by ~end of May, but the build already works - but is custom (uses ant/ivy behind the scenes).  You need python 2.6 and ant 1.8+ installed and then, from the root of the repo, you run:\n$ ./pants tests/java/com/twitter/common:all-tests!\n\nThis will likely fail on the 1st run and explain steps for installing a python templating library (mako) dependency.  After installing mako you should be good to go.\n\nFor example to compile all code and run all tests.\n$ ./pants tests/java/com/twitter/common:all-tests!\n\nYou can learn a bit more using:\n$ ./pants help\nTjis will list subcommands available.\n\n$ ./pants help [subcommand]\nThis will give even more info about a particular subcommand.\n\nIn short - the repo is a monolithic source tree, but it produces many jars - vs a typical gradle/buildr/maven multi-module project where there would be a top-level project directory for each artifact-producing project.  Currently pants provides 40 thin jars from its one source tree:\n$ ./pants list --provides --provides-columns=artifact_id\ncom.twitter.common#application-action\ncom.twitter.common#application\ncom.twitter.common#application-http\ncom.twitter.common#application-modules\ncom.twitter.common#args\ncom.twitter.common#base\ncom.twitter.common#collections\ncom.twitter.common#inject\ncom.twitter.common#inject-timed\ncom.twitter.common#io\ncom.twitter.common#io-thrift\ncom.twitter.common#logging\ncom.twitter.common#dynamic-host-set\ncom.twitter.common#net-util\ncom.twitter.common#net-pool\ncom.twitter.common#net-http\ncom.twitter.common#net-http-handlers-text\ncom.twitter.common#net-http-handlers-string-template\ncom.twitter.common#net-http-handlers\ncom.twitter.common#net-http-handlers-thrift\ncom.twitter.common#net-http-handlers-time-series\ncom.twitter.common#quantity\ncom.twitter#serverset\ncom.twitter.common#stats-provider\ncom.twitter.common#stats\ncom.twitter.common#stats-jvm\ncom.twitter.common#stats-time-series\ncom.twitter.common#stats-util\ncom.twitter.common#thrift\ncom.twitter.common#jdk-logging\ncom.twitter.common#util\ncom.twitter.common#util-system-mocks\ncom.twitter.common#util-sampler\ncom.twitter.common#util-testing\ncom.twitter.common#util-caching\ncom.twitter.common#zookeeper\ncom.twitter.common#zookeeper-testing\ncom.twitter.common#stats-ostrich-adapter\ncom.twitter.common#service-thrift\norg.apache.scribe#scribe_client\n\nAnd some of these jars are very thin in and of themselves, leveraging internal and external jars:\n$ ./pants files src/java/com/twitter/common/quantity\ncom/twitter/common/quantity/Amount.java\ncom/twitter/common/quantity/Data.java\ncom/twitter/common/quantity/Time.java\ncom/twitter/common/quantity/Unit.java\n\n$ ./pants depmap -m src/java/com/twitter/common/quantity\ncom.twitter.common-quantity\n  com.twitter.common-collections\n    commons-lang-commons-lang-2.4\n    com.google.guava-guava-r08\n    com.google.code.findbugs-jsr305-1.3.9\n\nThe goal is to make it _very_ easy to craft lean targets that export minimal APIs and compose these.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1030768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1090933", "body": "Looks good, but also needs to cover *.st and *.mk files\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1090933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1090952", "body": "Looks like this covers the missing transforms:\n$ find build-support/ 3rdparty/ src/ tests/  -type f | xargs grep \"Licensed\" | grep \" to \"\nsrc//python/pants/ant/templates/ivy.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/ant/templates/src/java/build.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/ant/templates/src/protobuf/build.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/ant/templates/src/scala/build.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/ant/templates/src/thrift/build.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/ant/templates/tests/java/build.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/ant/templates/tests/scala/build.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/commands/doc/assets/index.html:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/commands/doc/assets/javadoc.html:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/commands/eclipse/templates/classpath-3.5.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/commands/eclipse/templates/project-3.5.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/commands/eclipse/templates/pydevproject-3.5.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/commands/idea/templates/module-10.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//python/pants/commands/idea/templates/project-10.mk:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//resources/com/twitter/common/application/http/graphview.html:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//resources/com/twitter/common/net/http/handlers/logconfig.st:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//resources/com/twitter/common/net/http/handlers/logprinter.st:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//resources/com/twitter/common/net/http/handlers/thrift.st:Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//thrift/com/twitter/common/thrift/text/TTextProtocolTest.thrift:// Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//thrift/com/twitter/thrift/endpoint.thrift:// Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//thrift/com/twitter/thrift/twitter.thrift:// Licensed to the Apache Software Foundation (ASF) under one or more contributor license\nsrc//thrift/org/apache/scribe/0.1.2/fb303.thrift: \\* Licensed to the Apache Software Foundation (ASF) under one\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1090952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1097842", "body": "LGTM - thanks, merging\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1097842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1676395", "body": "Yes - scalability on 2 fronts:\n1.) What you see is a small slice of a much larger repo (using saplling: http://pypi.python.org/pypi/sapling https://github.com/jsirois/sapling) with >20 leaf projects and some common_internal libraries they share that are specific to internal twitter infrastucture.  In total, using a maven-like build system, we'd have > 120 top level projects in a classic maven multi-project build.  We were motivated by a strong desire to maintain a single source tree allowing for easy refactors across the global code base and easy discoverability of common code amongst 100s of developers scaling towards 1000s.\n2.) We needed to support several languages 1st class.  In particular - in this open source split you can see and use the excellent python support\n\nThe artifacts this build system exports are fully maven and ivy compatible, but a big shortcoming is that all the build documentation is still on internal wikis.  This will be remedied at some point.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1676395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677477", "body": "You could vote to change to maven or anything else if it fits the requirements described.  In particular, besides the shortcoming of scant (non-existant!) docs right now on the public wiki for operating the pants build tool, what additional pain points are you encountering?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677667", "body": "It does not support a single source tree though in any reasonable way afaict and does not support python.\nI understand the pain point on contribution though and its on us to update the wiki with good docs.\nThat said - if you are an eclipse or intellij user, the following works well for development:\n$ ./pants (idea|eclipse) tests/java/com/twitter/common:all -n common -c\nSee pants help (eclipse|idea) for more info.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1695375", "body": "Yes - the zk deps are a bit of a pain, we do the same (see: https://github.com/twitter/commons/blob/master/3rdparty/BUILD : 215).  com.twitter.common#zookeeper#0.0.24 itself depends on guava r09, see: http://maven.twttr.com/com/twitter/common/zookeeper/0.0.24/zookeeper-0.0.24.pom (or https://github.com/twitter/commons/blob/master/src/java/com/twitter/common/zookeeper/BUILD).  I think the interesting thing here will be a dependency report to show what is getting pulled in by whom.  I'll run an ivy dep-report for a fake project with 1 dep on com.twitter.common#zookeeper#0.0.24 and see what that reveals...\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1695375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1695410", "body": "Ok, so my experiment went as follows:\n\n$ git diff\ndiff --git a/src/java/com/twitter/common/zookeeper/BUILD b/src/java/com/twitter/common/zookeeper/BUILD\nindex a83fc74..aa39954 100644\n--- a/src/java/com/twitter/common/zookeeper/BUILD\n+++ b/src/java/com/twitter/common/zookeeper/BUILD\n@@ -60,3 +60,8 @@ java_library(name = 'testing',\n   ],\n   sources = globs('testing/*.java'),\n )\n+\n+java_library(name = 'repro',\n-  dependencies = [ pants(':zookeeper') ],\n-  sources = [ '**none_hack**' ]\n  +)\n  $ ./pants src/java/com/twitter/common/zookeeper:repro compile dep-report\n  $ grep google target/src.java.com.twitter.common.zookeeper.repro/reports/ivy/internal-src.java.com.twitter.common.zookeeper.repro-default.dot\n      \"com.google.inject-guice\" [label=\"guice\\n3.0\"];\n      \"com.google.code.gson-gson\" [label=\"gson\\n1.6\"];\n      \"com.google.code.findbugs-jsr305\" [label=\"jsr305\\n1.3.9\"];\n      \"com.google.guava-guava\" [label=\"guava\\nr09\"];\n  \"com.twitter.common-application-action\" -> \"com.google.inject-guice\" [label=\"3.0\"];\n  \"com.google.inject-guice\" -> \"org.sonatype.sisu.inject-cglib\" [label=\"2.2.1-v20090111\"];\n  \"com.google.inject-guice\" -> \"aopalliance-aopalliance\" [label=\"1.0\"];\n  \"com.twitter.common-io-json\" -> \"com.google.code.gson-gson\" [label=\"1.6\"];\n  \"com.twitter.common-util\" -> \"com.google.code.findbugs-jsr305\" [label=\"1.3.9\"];\n  \"com.twitter.common-stats\" -> \"com.google.code.findbugs-jsr305\" [label=\"1.3.9\"];\n  \"com.twitter.common-collections\" -> \"com.google.code.findbugs-jsr305\" [label=\"1.3.9\"];\n  \"com.twitter.common-net-pool\" -> \"com.google.code.findbugs-jsr305\" [label=\"1.3.9\"];\n  \"com.twitter.common-zookeeper\" -> \"com.google.code.findbugs-jsr305\" [label=\"1.3.9\"];\n  \"com.twitter.common-args-apt\" -> \"com.google.code.findbugs-jsr305\" [label=\"1.3.9\"];\n  \"com.google.inject-guice\" -> \"javax.inject-javax.inject\" [label=\"1\"];\n  \"com.twitter.common-io-json\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-util\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-base\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-collections\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-stats\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-io\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-jdk-logging\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-dynamic-host-set\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-net-pool\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-args\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-net-util\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-util-system-mocks\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-stats-provider\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-io-thrift\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-zookeeper\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-util-sampler\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-application-action\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-quantity\" -> \"com.google.guava-guava\" [label=\"r09\"];\n  \"com.twitter.common-args-apt\" -> \"com.google.guava-guava\" [label=\"r09\"];\n\nThis .dot file is generated by ivy:report (http://ant.apache.org/ivy/history/latest-milestone/use/report.html) and represents the full transitive dependency set of my fake target with its 1 dep on com.twitter.common#zookeeper.  I suspect your pom has a dependency on something elese that is pulling in the old google collections lib and you just need to exclude it.  We've run into this problem internally a few times (once this week even).  If you find new evidence please reopen.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1695410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1696002", "body": "Aha - ty.  The source from the last push on github is ahead of the last jar we cut.  We no longer use reflections, but instead a compile-time annotation processor, see: https://github.com/twitter/commons/blob/master/src/java/com/twitter/common/args/BUILD\n\nI'll push the updated jars and then close.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1696002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1696052", "body": "I'm in process of pushing the fixed jars, but note the previous rev of 3rdparty/BUILD https://github.com/twitter/commons/blob/89ae581d728aecc39bde1e8843209a0998cd2b96/3rdparty/BUILD : 130 \nIn the old args setup we ourselves exclude old guava for the reasons you're encountering.  Afaict excludes are not transitive in ivy or maven worlds, ie: if we exclude some artifacts, users of our artifact must also choose to add the excludes (zookeeper -> log4j case in point), they won't automatically propagate.  I may be completely wrong on this point though.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1696052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1696748", "body": "Ok - should be good to go now: http://twitter.github.com/commons/apidocs/index.html#com.twitter.common.zookeeper.Group\nPublished @ 0.0.25 -> args 0.1.10 -> args-apt 0.0.1\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1696748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1813190", "body": "Sorry - just noticed this issue.   There seem to be a few bugs here:\n1.) tryLock(long, TimeUnit) clocking forever is clearly one bug.\n2.) cleanup() / the ublic methods should throw documented unchecked exceptions at the very least\n\nThe 1st issue you mention can't be fully right.  A session timeout implies the lock ephemeral node dies which release the lock.  A disconnect is expected to happen and should not affect holdig of the lock, only session expiry or explict release should relinquish the lock.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1813190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/2533100", "body": "Thanks for the report, fixed here: https://github.com/twitter/commons/commit/faaa279231a432fef0d3613d92a769f7f432c96c\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/2533100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3340855", "body": "There is no plan to fix this TODO in the near term - the [loadbalancing](https://github.com/twitter/commons/tree/master/src/java/com/twitter/common/net/loadbalancing) has been pure client side so far for internal use.  We've switched nearly all internal uses of ThriftFactory/Thrift internally to finagle and so this bit of code has not seen active development in ~6 months.  Consider making this switch as well, our internal effort towards RPCs is all focused here and the client builder already supports a configurable connection [max idle time](https://github.com/twitter/finagle/blob/master/finagle-core/src/main/scala/com/twitter/finagle/builder/ClientBuilder.scala#L460) that does what you want.\n\nThat said, ee'd happily accept a patch.  Taking a quick look, it seems like adding a forwarding ConnectionPool that only managed idle timeouts would be straight forward.  The messier bit would be wiring this option in through ThriftFactory/Thrift.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3340855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3417480", "body": "Sorry for the large delay.\n\nThere will be a push this week with a much improved pants (no longer uses ant in the backend, uses compiler daemons for java and scala...).  I'll be updating the wiki at that time with our internal pants wiki.\n\nIn the meantime the following may be helpful to you:\n- show all build commands\n  `./pants help`\n- get help on a build command\n  `./pants help [command]`\n- list all available build targets (targets are per library or test suite):\n  `./pants list`\n- generate a project for an ide\n  `./pants (idea|eclipse) [targets]... -n myproject -c`\n- compile all java targets and run the full java test suite\n  `./pants tests/java/com/twitter/common:all`\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3417480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3469264", "body": "Yeah - we push as a squash commit, so the 100s of changes internally look like big single changes on github.\nWe definitely are happy to field pull requests and accept patches, although we would prefer keeping the build system as-is though.  I do need to get the wiki populated with docs.  Clearly thats a big problem.\nHave you tried / figured out build / test?\n- compile and run all tests\n  ./pants tests/java/com/twitter/common:all!\n- find all java targets\n  $ ./pants list -d src/java tests/java\n  src/java/com/twitter/common/application/BUILD:action\n  src/java/com/twitter/common/application/BUILD:application\n  src/java/com/twitter/common/application/http/BUILD:http\n  src/java/com/twitter/common/application/modules/BUILD:applauncher\n  src/java/com/twitter/common/application/modules/BUILD:http\n  src/java/com/twitter/common/application/modules/BUILD:lifecycle\n  src/java/com/twitter/common/application/modules/BUILD:log\n  src/java/com/twitter/common/application/modules/BUILD:stats\n  src/java/com/twitter/common/application/modules/BUILD:stats_export\n  src/java/com/twitter/common/application/modules/BUILD:thrift\n  src/java/com/twitter/common/args/BUILD:apt\n  src/java/com/twitter/common/args/BUILD:args\n  src/java/com/twitter/common/base/BUILD:base\n  src/java/com/twitter/common/checkstyle/BUILD:checkstyle\n  src/java/com/twitter/common/collections/BUILD:collections\n  src/java/com/twitter/common/inject/BUILD:inject\n  src/java/com/twitter/common/inject/BUILD:timed\n  src/java/com/twitter/common/io/BUILD:io\n  src/java/com/twitter/common/io/BUILD:streamer\n  src/java/com/twitter/common/io/BUILD:thrift\n  src/java/com/twitter/common/io/BUILD:json\n  src/java/com/twitter/common/logging/BUILD:logging\n  src/java/com/twitter/common/logging/BUILD:buffered\n  src/java/com/twitter/common/logging/BUILD:scribe\n  src/java/com/twitter/common/memcached/BUILD:memcached\n  src/java/com/twitter/common/memcached/BUILD:thrift-transcoder\n  src/java/com/twitter/common/net/BUILD:dynamic-host-set\n  src/java/com/twitter/common/net/BUILD:util\n  src/java/com/twitter/common/net/BUILD:url-resolver\n  src/java/com/twitter/common/net/BUILD:pool\n  src/java/com/twitter/common/net/http/BUILD:http\n  src/java/com/twitter/common/net/http/handlers/BUILD:text\n  src/java/com/twitter/common/net/http/handlers/BUILD:string-template\n  src/java/com/twitter/common/net/http/handlers/BUILD:handlers\n  src/java/com/twitter/common/net/http/handlers/BUILD:thrift\n  src/java/com/twitter/common/net/http/handlers/BUILD:time-series\n  src/java/com/twitter/common/objectsize/BUILD:objectsize\n  src/java/com/twitter/common/quantity/BUILD:quantity\n  src/java/com/twitter/common/stats/BUILD:stats-provider\n  src/java/com/twitter/common/stats/BUILD:stats\n  src/java/com/twitter/common/stats/BUILD:jvm\n  src/java/com/twitter/common/stats/BUILD:time-series\n  src/java/com/twitter/common/stats/BUILD:util\n  src/java/com/twitter/common/testing/BUILD:testing\n  src/java/com/twitter/common/text/BUILD:text\n  src/java/com/twitter/common/thrift/BUILD:thrift\n  src/java/com/twitter/common/thrift/BUILD:testing\n  src/java/com/twitter/common/thrift/text/BUILD:text\n  src/java/com/twitter/common/util/BUILD:logging\n  src/java/com/twitter/common/util/BUILD:util\n  src/java/com/twitter/common/util/BUILD:system-mocks\n  src/java/com/twitter/common/util/BUILD:sampler\n  src/java/com/twitter/common/util/BUILD:kestrel\n  src/java/com/twitter/common/util/BUILD:testing\n  src/java/com/twitter/common/util/caching/BUILD:caching\n  src/java/com/twitter/common/zookeeper/BUILD:zookeeper\n  src/java/com/twitter/common/zookeeper/BUILD:testing\n  tests/java/com/twitter/common/BUILD:small\n  tests/java/com/twitter/common/BUILD:medium\n  tests/java/com/twitter/common/BUILD:large\n  tests/java/com/twitter/common/BUILD:all\n  tests/java/com/twitter/common/BUILD:all-tests\n  tests/java/com/twitter/common/application/BUILD:application\n  tests/java/com/twitter/common/args/BUILD:small\n  tests/java/com/twitter/common/args/BUILD:medium\n  tests/java/com/twitter/common/args/BUILD:all\n  tests/java/com/twitter/common/args/BUILD:args\n  tests/java/com/twitter/common/base/BUILD:base\n  tests/java/com/twitter/common/collections/BUILD:collections\n  tests/java/com/twitter/common/inject/BUILD:inject\n  tests/java/com/twitter/common/io/BUILD:io\n  tests/java/com/twitter/common/logging/BUILD:logging\n  tests/java/com/twitter/common/memcached/BUILD:memcached\n  tests/java/com/twitter/common/net/BUILD:net\n  tests/java/com/twitter/common/net/http/handlers/BUILD:handlers\n  tests/java/com/twitter/common/objectsize/BUILD:objectsize\n  tests/java/com/twitter/common/quantity/BUILD:quantity\n  tests/java/com/twitter/common/stats/BUILD:stats\n  tests/java/com/twitter/common/testing/BUILD:testing\n  tests/java/com/twitter/common/testing/BUILD:test-basedir-test\n  tests/java/com/twitter/common/text/BUILD:text\n  tests/java/com/twitter/common/thrift/BUILD:thrift\n  tests/java/com/twitter/common/util/BUILD:util\n  tests/java/com/twitter/common/util/caching/BUILD:caching\n  tests/java/com/twitter/common/zookeeper/BUILD:small\n  tests/java/com/twitter/common/zookeeper/BUILD:medium\n  tests/java/com/twitter/common/zookeeper/BUILD:large\n  tests/java/com/twitter/common/zookeeper/BUILD:all\n  tests/java/com/twitter/common/zookeeper/BUILD:zookeeper\n- just build and test zk\n  $ ./pants list -d tests/java/com/twitter/common/zookeeper\n  tests/java/com/twitter/common/zookeeper/BUILD:small\n  tests/java/com/twitter/common/zookeeper/BUILD:medium\n  tests/java/com/twitter/common/zookeeper/BUILD:large\n  tests/java/com/twitter/common/zookeeper/BUILD:all\n  tests/java/com/twitter/common/zookeeper/BUILD:zookeeper\n  $ ./pants tests/java/com/twitter/common/zookeeper:all!\n- just test ZKMap\n  $ ./pants tests/java/com/twitter/common/zookeeper:all! -Dtest=com.twitter.common.zookeeper.ZooKeeperMapTest\n- create an intellij project to dev on this (kicks out common.ipr & common.iml) - requires IvyIDEA is installed - resolve all modules after you open the project and you're in business:\n  $ ./pants idea tests/java/com/twitter/common:all -n commons\n- ditto eclipse - import the project, must have IvyDE plugin\n  $ ./pants eclipse tests/java/com/twitter/common:all -n commons\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3469264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3500643", "body": "Sorry to see this late.\n\nAlthough the artifacts aren't on maven central, they are hosted by the public twitter maven repo:\n  http://maven.twttr.com/\n\nThe [project page](http://twitter.github.com/commons/) has some pointers, but the published API docs make it easier to find the jars you need.  For example, if you want to use the arg parsing system and You know you need ArgParser, Arg and Cmdline - you can see what jar(s) provide these classes:\nhttp://twitter.github.com/commons/apidocs/index.html#com.twitter.common.args.ArgScanner\n\nThe dependency info is shown in the banner in sbt/ivy/maven styles.  There are links on the upper left to download manually as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3500643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3639177", "body": "On Tue, Jan 24, 2012 at 12:42 PM, C. Scott Andreas <\nreply@reply.github.com\n\n> wrote:\n> \n> Hi John,\n> \n> We talked a bit about the contribution process for proposing and\n> implementing enhancements for the \"commons\" lib a few weeks ago. Thanks for\n> your help with the pants build process.\n> \n> I've attached a diff that adds an optional \"ZKMapListener\" to ZooKeeperMap\n> which allows users to be notified as child ZNodes are added, modified, and\n> removed. The change preserves existing compatibility and interfaces, with\n> the addition of a new constructor which optionally accepts the change\n> listener. When nodes are added or their data changed, it fires\n> \"mapListener.nodeChanged(key, value).\" Similarly when removed, the listener\n> fires \"mapListener.nodeRemoved(key).\"\n> \n> We're in the process of phasing in a stripped-down and mavenized version\n> of the ZooKeeperClient and ZooKeeperMap libs with this modification to\n> power our cluster membership and\n\nI'm really-really interested in this - pants makes slicing things up\nincredibly easy.  The current src/java/com/twitter/common/zookeeper target\ncan easily be broken into 1 per major api, ie:\nsrc/java/com/twitter/common/zookeeper:client\nsrc/java/com/twitter/common/zookeeper:map\nsrc/java/com/twitter/common/zookeeper:group\n...\netc.\nIts several lines of edit to that file and some pushes.\n\ndistributed stream processing at Boundary. We've been using this in\n\n> production for about a week and the client seems to be working well --\n> thanks for releasing it (previously, we'd used Twitter's\n> scala-zookeeper-client but noticed some odd behavior). I've begun the\n> process of integrating this version of the client into Ordasity, our\n> clustering library for stateful stream processing on the JVM (\n> http://github.com/boundary/ordasity). The change to ZooKeeperMap allows\n> Ordasity to be notified as topology and workload in ZooKeeper change,\n> triggering it to reconfigure itself appropriately.\n> \n> Let me know if you'd be interested in merging this pull request or if you\n> have questions / concerns about the implementation, code style, or comments.\n\nDefinitely interested - I commented on your diff.\n\n> Thanks,\n> \n>  Scott\n> \n> You can merge this Pull Request by running:\n> \n>  git pull https://github.com/cscotta/commons master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n>  https://github.com/twitter/commons/pull/11\n> \n> -- Commit Summary --\n> - Add an optional 'ZKMapListener' to ZooKeeperMap which fires as nodes are\n>   added, changed, and removed.\n> \n> -- File Changes --\n> \n> M src/java/com/twitter/common/zookeeper/ZooKeeperMap.java (83)\n> \n> -- Patch Links --\n> \n>  https://github.com/twitter/commons/pull/11.patch\n>  https://github.com/twitter/commons/pull/11.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/twitter/commons/pull/11\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3639177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3640026", "body": "If you have time, please check out this pull request: https://github.com/twitter/commons/pull/12\nIt brings us from 1 fat jar (+1 testing jar):\n(2.6.6) jsirois@tw-mbp17-jsirois ~/dev-twitter-commons (git::master) $ ./pants list src/java/com/twitter/common/zookeeper --provides\nsrc/java/com/twitter/common/zookeeper/BUILD:zookeeper com.twitter.common#zookeeper\nsrc/java/com/twitter/common/zookeeper/BUILD:testing com.twitter.common#zookeeper-testing\n\nTo 9 targeted jars:\n(2.6.6) jsirois@tw-mbp17-jsirois ~/dev-twitter-commons (git::master) $ git co jsirois/zk/slice\nSwitched to branch 'jsirois/zk/slice'\nYour branch is ahead of 'origin/master' by 1 commit.\n(2.6.6) jsirois@tw-mbp17-jsirois ~/dev-twitter-commons (git::jsirois/zk/slice) $ ./pants list src/java/com/twitter/common/zookeeper --provides\nsrc/java/com/twitter/common/zookeeper/BUILD:client com.twitter.common.zookeeper#client\nsrc/java/com/twitter/common/zookeeper/BUILD:node com.twitter.common.zookeeper#node\nsrc/java/com/twitter/common/zookeeper/BUILD:map com.twitter.common.zookeeper#map\nsrc/java/com/twitter/common/zookeeper/BUILD:lock com.twitter.common.zookeeper#lock\nsrc/java/com/twitter/common/zookeeper/BUILD:group com.twitter.common.zookeeper#group\nsrc/java/com/twitter/common/zookeeper/BUILD:partitioner com.twitter.common.zookeeper#partitioner\nsrc/java/com/twitter/common/zookeeper/BUILD:candidate com.twitter.common.zookeeper#candidate\nsrc/java/com/twitter/common/zookeeper/BUILD:server-set com.twitter.common.zookeeper#server-set\nsrc/java/com/twitter/common/zookeeper/BUILD:singleton-service com.twitter.common.zookeeper#singleton-service\nsrc/java/com/twitter/common/zookeeper/BUILD:testing com.twitter.common#zookeeper-testing\n\nIf this looks good to you, I'll merge into master, merge back to twitter and push the jars.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3640026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3678563", "body": "I'm going to merge in pull request 12 by EOD if I don't hear back.  Will loop back on any feedback if so.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3678563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3688522", "body": "No worries - and yes, sort-of.  The previous single zookeeper lib: http://maven.twttr.com/com/twitter/common/zookeeper/0.0.35/ is now broken into 9 libs - see dirs under http://maven.twttr.com/com/twitter/common/zookeeper/\n\n```\n$ for t in `pants list src/java/com/twitter/common/zookeeper`; do echo && pants depmap -im $t | grep zookeeper; done\n\ncom.twitter.common.zookeeper-client\n\ncom.twitter.common.zookeeper-node\n  com.twitter.common.zookeeper-client\n\ncom.twitter.common.zookeeper-map\n  com.twitter.common.zookeeper-client\n\ncom.twitter.common.zookeeper-lock\n  com.twitter.common.zookeeper-client\n\ncom.twitter.common.zookeeper-group\n  com.twitter.common.zookeeper-client\n\ncom.twitter.common.zookeeper-partitioner\n  com.twitter.common.zookeeper-group\n    com.twitter.common.zookeeper-client\n\ncom.twitter.common.zookeeper-candidate\n  com.twitter.common.zookeeper-client\n  com.twitter.common.zookeeper-group\n\ncom.twitter.common.zookeeper-server-set\n  com.twitter.common.zookeeper-client\n  com.twitter.common.zookeeper-group\n\ncom.twitter.common.zookeeper-singleton-service\n  com.twitter.common.zookeeper-candidate\n    com.twitter.common.zookeeper-client\n    com.twitter.common.zookeeper-group\n  com.twitter.common.zookeeper-server-set\n\ncom.twitter.common-zookeeper-testing\n  com.twitter.common.zookeeper-candidate\n    com.twitter.common.zookeeper-client\n    com.twitter.common.zookeeper-group\n  com.twitter.common.zookeeper-lock\n  com.twitter.common.zookeeper-map\n  com.twitter.common.zookeeper-node\n  com.twitter.common.zookeeper-partitioner\n  com.twitter.common.zookeeper-server-set\n  com.twitter.common.zookeeper-singleton-service\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3688522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3940119", "body": "Thanks Benjy - lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3940119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4011257", "body": "Awesome - thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4011257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4161887", "body": "See: https://github.com/twitter/commons/pull/18 - please retry as soon as I merge that in.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4161887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4161893", "body": "Addresses: https://github.com/twitter/commons/issues/17\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4161893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4162505", "body": "Benjy's fix is now in - please re-open if that does not fix you.\nOf note - the binary goal noops if there are no jvm_binary targets, so unless a/b/c/d/BUILD:e is a jvm_binary you'll see no output.  And actually - without -v you'll see no output anyway - add that switch to get info level logging, one line of which will be where the binary was written\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4162505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4383134", "body": "The pom is certainly there: http://maven.twttr.com/com/twitter/util/1.8.18/util-1.8.18.pom\nYour error implies your build system is trying to interpret a maven <packaging>pom</packaging> artifact as a jar which seems like a bug.\nWhat build tool is this?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4383134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4391489", "body": "Thanks for the info - I've filed an internal bug to narrow down our dependencies to just those parts of util we need.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4391489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4397060", "body": "This is now fixed: http://maven.twttr.com/com/twitter/common/service-thrift/0.0.23/service-thrift-0.0.23.pom\nThe push is still moving through all affected jars and when it completes I'll re-publish the api docs so they have fresh artifact links: http://twitter.github.com/commons/apidocs/#overview-summary\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4397060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4397471", "body": "Push complete: http://twitter.github.com/commons/apidocs/#com.twitter.common.thrift.Thrift\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4397471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4897439", "body": "Sorry for the delayed response - I was OOO last week and am just catching up on email.  Thank you for the contribution.  This looks good - but I do have 1 change change request surrounding FunctionPicker.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4897439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4897458", "body": "Checking in on this.  Did you still have an interest in finishing this off?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4897458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4897545", "body": "1 small reuse-fix commented.  I'm not sure what to do about the checkstyle classpath since we get errors in opposite senses.  I need to spend time looking into the errors I've seen when omitting cp Tomorrow evening.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4897545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4939020", "body": "A few final nits.  This looks great - will merge next round.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4939020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4959008", "body": "So - the issues removing the cp causes are of this ilk:\n\n$ pants.new checkstyle src/java/com/twitter/adserver::\n(using pantsrc expansion: pants goal checkstyle src/java/com/twitter/adserver:: -vx --ng-daemons)\n INFO] [gen:wtf-fetch]\n INFO] Extracting WTF thrift sources to: /Users/jsirois/development/twitter/science2/src/thrift/com/twitter/wtf/service/gen\n INFO] [gen:thrift]\n INFO] [gen:protoc]\n INFO] [gen:wtf-clean]\n INFO] Cleaning up WTF thrift sources from: /Users/jsirois/development/twitter/science2/src/thrift/com/twitter/wtf/service/gen\n INFO] [resolve:ivy]\n INFO] [checkstyle:gen:javac]\n INFO] [checkstyle:checkstyle]\n INFO] Operating on 982 files in 45 changed targets\nStarting audit...\n/Users/jsirois/development/twitter/science2/src/java/com/twitter/adserver/db/ChangeNotificationProcessorImpl.java:65:63: Redundant throws: UnidentifiedEntityException listed more than one time. This will trigger spuriously if checkstyle can't resolve UnidentifiedEntityException on its classpath.\n/Users/jsirois/development/twitter/science2/src/java/com/twitter/adserver/users/UsersInfoFetcher.java:21:63: Redundant throws: UsersInfoFetcherException listed more than one time. This will trigger spuriously if checkstyle can't resolve UsersInfoFetcherException on its classpath.\n/Users/jsirois/development/twitter/science2/src/java/com/twitter/adserver/db/ChangeNotificationProcessor.java:27:63: Redundant throws: UnidentifiedEntityException listed more than one time. This will trigger spuriously if checkstyle can't resolve UnidentifiedEntityException on its classpath.\n/Users/jsirois/development/twitter/science2/src/java/com/twitter/storage/config/ZookeeperConfigManager.java:63:24: Redundant throws: StorageException listed more than one time. This will trigger spuriously if checkstyle can't resolve StorageException on its classpath.\n/Users/jsirois/development/twitter/science2/src/java/com/twitter/adserver/events/JUserFatigueStore.java:28:6: Unable to get class information for @throws tag 'com.twitter.adserver.common.KeyValueStoreException'.\n/Users/jsirois/development/twitter/science2/src/java/com/twitter/adserver/events/JUserFatigueStore.java:32:65: Unable to get class information for @throws tag 'KeyValueStoreException'.\n/Users/jsirois/development/twitter/science2/src/java/com/twitter/storage/service/ThriftStoreModule.java:157:25: Redundant throws: ZooKeeperClient.ZooKeeperConnectionException listed more than one time. This will trigger spuriously if checkstyle can't resolve ZooKeeperClient.ZooKeeperConnectionException on its classpath.\nAudit done.\n\nFAILURE: com.puppycrawl.tools.checkstyle.Main returned 7\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4959008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4959097", "body": "Can you provide more details on the odd behavior you've seen?  It might be nice to back out that portion of the pull request to get the main fix in and circle back on the cs-issue.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4959097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4990340", "body": "Won't have time to get to this one this week, but an ack on this is a reasonable and good request\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4990340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5003655", "body": "I did a manual pull and push of this to make sure the commit was clean.\nThanks for the fix!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5003655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5105850", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5105850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5105887", "body": "hrm - borked that pull, trying again\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5105887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5106024", "body": "Did this the old fashioned way:\n$ git pull -n https://github.com/benjyw/commons.git master\n$ git push origin master\n\nThanks again.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5106024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5728381", "body": "I do - this lgtm. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5728381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5997817", "body": "Github push will likely not be until mid-June but the fix for this with the source jar is live at:\nhttp://maven.twttr.com/com/twitter/common/zookeeper/server-set/1.0.3/server-set-1.0.3.pom\nhttp://maven.twttr.com/com/twitter/common/service-thrift/1.0.1/service-thrift-1.0.1.pom\n\nThanks for the bug report.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/5997817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6563163", "body": "This is not a known issue - it was thought that all the proper excludes were in place.  What command line do you use? (what targets do you build?)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6563163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6563315", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6563315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6563497", "body": "Thanks for this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6563497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6568568", "body": "Aha.  Yes - this is all undocumented - but we are very close to gutting old pants - which shells out to ant after generating some build.xmls.  The new pants is pure python and these targets work:\n$ ./pants goal clean-all compile src/java/com/twitter/common/thrift --gen-thrift-lang=java -vx\n$ ./pants goal test tests/java/com/twitter/common:all -vx\n\nFor now all of new pants is implemented as subcommands to goal, so\n\nTo see all goals:\n$ ./pants goal\n\nTo see help for a goal:\n$ ./pants goal help compile\n\netc...\n\nNote that new pants will spawn nailgun servers for several goals (resolve, compile:javac, cmpile:scalac, checkstyle):\n$ ps -ef | grep nailgun\n  501 59387     1   0 12:00AM ??         0:02.60 /usr/bin/java -Xmx2g -XX:MaxPermSize=256m -Dtwitter.pants.buildroot=/Users/jsirois/development/third_party/twitter-commons -Dpidfile=.pants.d/ng/ivy/pid -jar /Users/jsirois/development/third_party/twitter-commons/build-support/ng/lib/nailgun-0.7.1.jar :0\n  501 59402     1   0 12:00AM ??         0:08.44 /usr/bin/java -Xmx2g -XX:MaxPermSize=256m -Dtwitter.pants.buildroot=/Users/jsirois/development/third_party/twitter-commons -Dpidfile=.pants.d/ng/jmake/pid -jar /Users/jsirois/development/third_party/twitter-commons/build-support/ng/lib/nailgun-0.7.1.jar :0\n  501 59404     1   0 12:00AM ??         0:06.39 /usr/bin/java -Xmx2g -XX:MaxPermSize=256m -Dtwitter.pants.buildroot=/Users/jsirois/development/third_party/twitter-commons -Dpidfile=.pants.d/ng/checkstyle/pid -jar /Users/jsirois/development/third_party/twitter-commons/build-support/ng/lib/nailgun-0.7.1.jar :0\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6568568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6677231", "body": "We talked about the dup offline and agreed to tkae this as they stand and refactor in a new change\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6677231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6854457", "body": "Thanks Benjy - this is huge\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6854457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6858629", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6858629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6862685", "body": "Thanks again!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6862685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6865276", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6865276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6892949", "body": "Thanks again\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6892949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7019904", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7019904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7025465", "body": "Seeing if I can loop in JC to take a peek at this\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7025465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7083029", "body": "Thanks for the quick fix\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7083029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7195434", "body": "Thanks - this got a lot nicer\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7195434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7250925", "body": "Thanks Leo - a few small things.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7250925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7262893", "body": "Thanks Leo - cli over-riding pants.ini is what we want and this looks right.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7262893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7361925", "body": "Fwiw, the internal change today did this + symlinked the binaries for thrift and protoc after testing this just works\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7361925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7388192", "body": "The tags are internal only - we cut them from a larger tree internally so the shas are different when we use [sapling](http://pypi.python.org/pypi/sapling/) to split what you see here out.  This is certainly not ideal and I think filing an issue to get this fixed is appropriate even though I'm not sure quite yet of the best fix.  \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7388192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7389663", "body": "Ack - this would be a nice improvement.  Definitely happy to take a patch if you're willing.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7389663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7389962", "body": "I'd prefer an additional chroot argument overload too to keep with the existing style - reasoning going like this:\nMost internal usages use the Arg parsing facility to parse Arg&lt;List&lt;InetSocketAddress&gt;&gt; at startup - validation can fail fast here.  The actual ZooKeeper client is then often created later in a background thread.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7389962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7600277", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7600277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7620428", "body": "I'd like to block on making this behavior per NailgunTask subclass, otherwise this lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7620428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7624699", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7624699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7838306", "body": "It does now - you implied as much but it was not sinking in w/o the custom scala codegen code present to look at.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7838306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7860352", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7860352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7861071", "body": "Small stuff - this lgtm on whole.  I believe I messed up a clean pull by merging the labels change 1st so you may need to rebase or ... ?  Ready to pull this in quickly tomorrow.  Thanks for your patience.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7861071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7874559", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7874559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7889334", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7889334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7890225", "body": "Thanks - lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7890225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7893006", "body": "This got moved to a ne pull request since merged, closing.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7893006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7908117", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7908117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7911948", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7911948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7956240", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7956240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8012100", "body": "This was sent up in a different pull request - closing out as obsolete\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8012100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8016611", "body": "Thanks a bunch\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8016611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8468313", "body": "Spoke with Benjy offline, rejecting this fix in anticipation of a different fix.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8468313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8469244", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8469244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8475722", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8475722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8492721", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8492721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8501813", "body": "Thanks Flo - this looks good.  Can you also add a new test method to https://github.com/twitter/commons/blob/master/tests/java/com/twitter/common/zookeeper/CandidateImplTest.java that confirms a custom endpoint supplier is respected?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8501813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8511621", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8511621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8511683", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8511683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8524745", "body": "lgtm - thanks for the fix\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8524745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8525144", "body": "Small stuff mod the test which needs to be fixed.  Looks good to merge after that.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8525144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8525563", "body": "Thanks.  The lack of documentation needs to be rectified.  This should be getting the love it deserves next week through the end of the month.  Some rudimentary docs are here: https://github.com/twitter/commons/tree/master/src/python/twitter/pants but in short:\n\npants started out as a thin ant shell and evolved to pure python.  The evolution is not complete and the old ant build system lives side-by-side and this is clearly very confusing.\n\nOld pants:\n\n```\n$ ./pants\nPants 0.0.3 @ PANTS_BUILD_ROOT: /home/jsirois/development/twitter/science\n\nAvailable subcommands:\n    files   Lists all source files owned by the given target.\n    setup_py    Generate setup.py-based Python projects from python_library targets.\n    goal    Lists installed goals or else executes a named goal.\n    filemap Outputs a mapping from source file to the target that owns the source file.\n    doc Generates documentation for a set of targets.\n    py  Python chroot manipulation.\n    eclipse Creates Eclipse projects for a set of BUILD targets.\n    idea    Creates IntelliJ IDEA projects for a set of BUILD targets.\n    list    Lists BUILD file targets.\n    build   Builds a specified target.\n    ivy_resolve Resolves ivy dependencies to a local directory, obviating the need for\n  an explicit resolve per build.\n    depmap  Generates either a textual dependency tree or a graphviz digraph dotfile for the dependency set\n  of a target.\n    help    Provides help for available commands or a single specified command.\n\nDefault subcommand flags can be stored in ~/.pantsrc using the 'options' key of a\nsection named for the subcommand in ini style format, ie:\n  [build]\n  options: --fast\n```\n\nOf these commands you only want to be using the metadata commands:\nfiles, goal, filemap, list, depmap\n\nAnd the python commands:\nsetup_py, py and build [python target]\n\nOtherwise you want to be working in 'pants.new', ie: alias pants.new='./pants goal':\n\n```\n./pants goal\nInstalled goals:\n               binary: Create a jvm binary jar.\n               bundle: Create an application bundle from binary targets.\n           checkstyle: Run checkstyle against java source code.\n            clean-all: Cleans all intermediate build output\n              compile: Compile both generated and checked in code.\n            dependees: Print a reverse dependency mapping for the given targets\n     dependees-owners: Print a list owners of dependees for the given targets\n              eclipse: Create an Eclipse project from the given targets.\n             filedeps: Print out a list of all files the target depends on\n                  gen: Generate code.\n                goals: List all documented goals.\n                 help: Provide help for the specified goal.\n                 idea: Create an IntelliJ IDEA project from the given targets.\n           invalidate: Invalidate all caches\n                  jar: Create one or more jars.\n              javadoc: Create javadoc.\n             markdown: Generate html from markdown docs.\n           ng-killall: Kill any running nailgun servers spawned by pants.\n             pathdeps: Print out a list of all paths containing build files the target depends on\n              publish: Publish one or more artifacts.\n            reinstall: Reinstalls pants from the current source tree.\n                 repl: Run a (currently Scala only) REPL with the classpath set according to the targets.\n              resolve: Resolves jar dependencies and produces dependency reports.\n                  run: Run a (currently JVM only) binary target.\n                setup: Setup the target's build environment.\n                 test: Test compiled code.\n```\n\nEither way - ant should not be involved any longer, so if you see ant-like output you'll want to find the hopefully sort of obvious ./pants goal [subcommand].  ./pants goal help [subcommand] or ./pants goal [subcommand] -h should be useful.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8525563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8559915", "body": "Thanks Flo!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8559915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8654953", "body": "A few things:\n- ThriftFactory -> Thrift -> Iface to reuse across multiple calls - the reasons for the 2 level of builder are mainly legacy.  With that change you chould see perf beat plain thrift since a poll will be reused across calls instead of a new pool per call getting created which is the case as you have it\n- We moved on to [finagle](http://twitter.github.com/finagle/) internally a while back.  So although this code is here for you to use and served its purpose for a time, finagle has better failure handling, nice async composition and its got ongoing support and backing by a small team of twitter eng.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8654953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8690924", "body": "Sorry about that - this is a thing that should be addressed in the javadoc!  The returned Iface instances are in fact thread-safe.  The idea is ThriftFactory/Thrift take care of all the heavy lifting.  You need only configure their parameters to adjust the internal pool size, timeouts on RPCs and backend backoff behavior under failure.  Another nudge to try finagle which provides the same general model plus much more.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8690924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8938902", "body": "Ok - thanks for background.  I'd like pants to support test parallelization as a 1st class option.  I'm not sure if you're gunning for local parallelization to utilize multiple cores or a distributed test solution.  If local, would you mind instead adding a config option &or flag (--test-junit-parallelize) that did something ~smart and just used the number of cores by default or a config/extra command line flag value and did something similar to [javadoc_gen](https://github.com/twitter/commons/blob/master/src/python/twitter/pants/tasks/javadoc_gen.py#L120)  The only trick would be picking chunks of targets to run through the process pool.  The obvious 2 are single targets and partition of targets into exactly the multiprocessing pool size chunks.\n\nIf this does not fit your aims the command-line-writing doesn't sound unreasonable I'm just having a bit of a hard time justifying isolating this option to junit - seems if we add it it should really be added to ~all Tasks with the behavior that they fail-fast after writing their terminal command line.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8938902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8947188", "body": "Ok - all done - this lgtm mod comments\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8947188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8980573", "body": "Thank you sir - excited to hook this up at work\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8980573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9363299", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9363299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9399923", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9399923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9539599", "body": "Thanks for moving the locking idea into goal from the old command layer - it will be happy day when the ant backen is gone and these 2 layers merge\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9539599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9830991", "body": "A few nits, but this looks good for a quick merge.  Please push back in the comments if need be, I'll merge after this round.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9830991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9832101", "body": "Thanks Benjy, LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/9832101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10133007", "body": "Sorry for the response black hole.  This direction seems good. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10133007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10133086", "body": "I'm not sure I like IdeGen -> Checkstyle but I'm not violently opposed for the moment for a lack of concise better ideas.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10133086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10136102", "body": "Thanks for the heads up.  We've seen this once before and had to work around by publishing a jar w/o compression.  I'll take this opportunity to do an audit and figure out the root cause.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10136102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10136836", "body": "Your test was hugely helpful.  It pinpointed directory entries as the problem leading to a quick fix.  I'll be publishing new jars tomorrow with the fix and I'll note those here (I wil not over-write artifacts but instead bump patch levels)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10136836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10177007", "body": "Ok - [com.twitter.common#thrift;0.0.50](http://maven.twttr.com/com/twitter/common/thrift/0.0.50/thrift-0.0.50.jar) is published using a fix to ensure dir entries are stored uncompressed (this fixes the zip corruption you found).  I've also re-published all other com.twitter.common artifacts with a patch bump to cover the 30 or so I found with this issue:\ncom/twitter/common/application/\ncom/twitter/common/application-http/\ncom/twitter/common/application-module-applauncher/\ncom/twitter/common/application-module-http/\ncom/twitter/common/application-module-log/\ncom/twitter/common/application-module-stats/\ncom/twitter/common/application-module-stats_export/\ncom/twitter/common/application-module-thrift/\ncom/twitter/common/junit-runner/\ncom/twitter/common/logging/\ncom/twitter/common/logging-scribe/\ncom/twitter/common/net-http-filters/\ncom/twitter/common/net-http-handlers/\ncom/twitter/common/net-http-handlers-params/\ncom/twitter/common/net-http-handlers-pprof/\ncom/twitter/common/net-http-handlers-string-template/\ncom/twitter/common/net-http-handlers-thrift/\ncom/twitter/common/net-pool/\ncom/twitter/common/service-thrift/\ncom/twitter/common/stats-util/\ncom/twitter/common/text/\ncom/twitter/common/thrift/\ncom/twitter/common/thrift-text/\ncom/twitter/common/util/\ncom/twitter/common/util-templating/\ncom/twitter/common/zookeeper/candidate/\ncom/twitter/common/zookeeper/group/\ncom/twitter/common/zookeeper/map/\ncom/twitter/common/zookeeper/node/\ncom/twitter/common/zookeeper/partitioner/\ncom/twitter/common/zookeeper/server-set/\ncom/twitter/common/zookeeper/singleton-service/\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10177007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10335780", "body": "Can the ivy.mk fixes be pulled out to another pull request?  They have nothing to do with this request fwict.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10335780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10336280", "body": "This lgtm mod a style nit and mixed-up changes.  Can you sep. out the color change so this pull is just cycle detection fixes?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10336280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10338239", "body": "Thanks - lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10338239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10339052", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10339052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10339570", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10339570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10820429", "body": "Done review of 1st 5 commits\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10820429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10837632", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10837632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/11211619", "body": "Thanks again - merged.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/11211619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12570083", "body": "LGTM mod last nits - sorry for the rat-a-tat-tat, I've routed a feature request through 2 sep. channels to allow for publishing several comments all at once instead of in realtime like things stand with github.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12570083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12571113", "body": "I'll take it as-is.  Need to figure out something better than what we get with the stock pull-request experience, but that's for another day.  Thanks again for this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12571113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12571424", "body": "Missing commas in dependencies lists will now be interesting!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12571424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12701716", "body": "Thanks again\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12701716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12890702", "body": "1 removal too far, otherwise lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12890702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12891018", "body": "Noted some pre-existing small stuff but pulling in this change which is a step forward - thanks Jon.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12891018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12899467", "body": "Yeah - that was .pyc's laying around.  Thanks for the fix.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12899467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13111416", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13111416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13261868", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13261868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13265208", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13265208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13309780", "body": "I like the idea and its hard to review - taking your no regressions word for it\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13309780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13971377", "body": "\"Something seems off about that being the way to declare thrift libs that can be used by different languages\" <- Agreed and that will be going away.  Brian Wickman has a big branch that brings the python handling into the goal infra (and will allow us to drop ./pant [goal]!).  After thats in I'd like to just have thrift_library - the thrift_gen.py task already supports treating python_thrift_library and java_thrift_library as the same and determining what to gen based on the types of dependency inbound edges.\n\nSo, I think you can picture what this build file looks like inside:\n$ ./pants goal list src/java/com/twitter/spiderduck/:\nsrc/java/com/twitter/spiderduck/BUILD:client-common\nsrc/java/com/twitter/spiderduck/BUILD:common\nsrc/java/com/twitter/spiderduck/BUILD:fetcher-client\nsrc/java/com/twitter/spiderduck/BUILD:metadata-store-client\nsrc/java/com/twitter/spiderduck/BUILD:metadata-extractor\nsrc/java/com/twitter/spiderduck/BUILD:fetcher-main\nsrc/java/com/twitter/spiderduck/BUILD:fetcher-binary\nsrc/java/com/twitter/spiderduck/BUILD:scheduler-main\nsrc/java/com/twitter/spiderduck/BUILD:scheduler-binary\nsrc/java/com/twitter/spiderduck/BUILD:metadata-store-common\nsrc/java/com/twitter/spiderduck/BUILD:metadata-store-main\nsrc/java/com/twitter/spiderduck/BUILD:metadata-store\nsrc/java/com/twitter/spiderduck/BUILD:metadata-store-binary\nsrc/java/com/twitter/spiderduck/BUILD:spiderduck-client-tool-main\nsrc/java/com/twitter/spiderduck/BUILD:spiderduck-client-tool-binary\nsrc/java/com/twitter/spiderduck/BUILD:url-metadata-tool\nsrc/java/com/twitter/spiderduck/BUILD:url-metadata-tool-binary\nsrc/java/com/twitter/spiderduck/BUILD:fetcher-load-tester\nsrc/java/com/twitter/spiderduck/BUILD:metadata-store-load-tester-main\nsrc/java/com/twitter/spiderduck/BUILD:metadata-store-load-tester-binary\nsrc/java/com/twitter/spiderduck/BUILD:domain-manager-tool-lib\nsrc/java/com/twitter/spiderduck/BUILD:domain-manager-tool\nsrc/java/com/twitter/spiderduck/BUILD:domain-manager-tool-app\nsrc/java/com/twitter/spiderduck/BUILD:postprocessor-binary\nsrc/java/com/twitter/spiderduck/BUILD:postprocessor-main\n\nGiven the established non-1:1:1 principle in that BUILD file, in the style of that BUILD file I add a new target to the bottom, leave off sources and overlap all the targets within.  Unless the failure is loud and fast I picture heartache.\n\nThis is not an isolated example in that repo.\n\nSo fundamentally it would be nice if it were easy to set policy at the top level in say BUILD.policy and have the registered defaults propagate.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13971377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13975926", "body": "I was not clear on the BUILD.policy idea - I mean that as one of the top-level BUILD file family thats bootstrapped by pants on every run.  It may or may not be clear but a BUILD file can have an arbitrary extension allowing a single logical BUILD file to be split into many:\n\n```\nrepo/BUILD # might contain some handy dependencies(...) target aliases or a page(...) pointing to\n           # README.md also in the repo root\nrepo/BUILD.layout # might contain the source_root definitions\nrepo/BUILD.policy # might contain the 1 time 1 place registration of defaults for the repo targets and more\n```\n\nscala_lib sounds ok-for-now but doesn't really scale (python_lib, ...).  Since there is no mechanism today to inject default imports into BUILD files we can't do clean custom types.  We have plans for this though and I'll need to transition to using github for these shortly instead of internal jira/confluence.\n\nThat makes sense Benjy - very cool carrot.  \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13975926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13979788", "body": "\"Are any of the targets you listed above currently \"sources\"-less?\" <- No. That said, my fear is that this change would allow a new hire for example to ~easily make the mistake - even though the pattern of specifying sources is established in the BUILD itself, from what I've seen this does not deter some >20% of code reviews to go out not respecting local style.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13979788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13979955", "body": "Not really apropos - but as a side note - I love the s/pants('([^']*)')/\\1/ change but already fear these bug reports under un-close code review:\n\n```\njava_library(name='canyouguess?',\n  dependencies=[\n    '3rdaprty:guava',\n    '3rdparty:4sq-magic-lib',\n    'src/java/com/twitter/common/base'\n    'src/java/com/twitter/common/quantity',\n    'src/java/com/twitter/common_internal/hdfs:util'\n  ]\n  # look - no sources! - but thats not the point\n)\n```\n\nHave you guys run into this?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13979955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14244292", "body": "Big yay - thanks for doing this.  That said I'm slow to respond - lots here.  I've slated time to give this a close review tomorrow morning.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14244292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14268617", "body": "Thanks again - LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14268617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14342134", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14342134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14596116", "body": "The latest version of args fixes this.  I published the jar on the 1st but have not synced the code yet to github: http://maven.twttr.com/com/twitter/common/args/0.1.53/\n\nDo you mind trying bumping your dep?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14596116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14882841", "body": "Thanks Flo - going to publish a new jar shortly.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14882841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15555920", "body": "We do this today in-house without the extra pointers:\n\n```\n$ ./pants goal depmap src/scala/com/twitter/common/args:flags\ninternal-src.scala.com.twitter.common.args.flags\n  internal-src.java.com.twitter.common.args.args\n    internal-src.java.com.twitter.common.args.apt\n      internal-src.java.com.twitter.common.args.core\n        com.google.guava-guava-14.0.1\n...\n```\n\nSo presumably you could just do a target.walk and figure this all out.  Is this a performance optimization because you've observed that's too slow?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15555920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15557999", "body": "Aha.  These now yield themselves internally, ie:\n\n```\nclass JarLibrary(Target):\n  \"\"\"Serves as a proxy for one or more JarDependencies or JavaTargets.\"\"\"\n\n  def __init__(self, name, dependencies):\n    \"\"\"name: The name of this module target, addressable via pants via the portion of the spec\n        following the colon\n    dependencies: one or more JarDependencies this JarLibrary bundles or Pants pointing to other\n        JarLibraries or JavaTargets\"\"\"\n\n    Target.__init__(self, name)\n\n    self.dependencies = OrderedSet(dependencies)\n\n  def resolve(self):\n    yield self\n    for dependency in self.dependencies:\n      for resolved_dependency in dependency.resolve():\n        yield resolved_dependency\n```\n\nAnd\n\n```\ndef is_concrete(target):\n  \"\"\"Returns true if a target resolves to itself.\"\"\"\n  targets = list(target.resolve())\n  return len(targets) == 1 and targets[0] == target\n```\n\nSo the console tasks could be adapted to include or exclude them based on an also new is_concrete predicate.  I'll take a look a deeper your diff though.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15557999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15558861", "body": "Still in Twitter - I'm almost done the mega-merge inbound to Twitter at which point I can outbound our stuff back here then converge and cut to pantsbuild/pants and end the merge hell.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15558861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15772583", "body": "Thanks - this works to bootstrap pants on 2.7.3 when I set that at the head of my $PATH\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15772583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15772626", "body": "Thanks Ken - closing this out as discarded.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15772626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15772662", "body": "Sorry for the delay - please do.  I should have the worlds synced shortly.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15772662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17136182", "body": "This works fine for me - can you provide more details on exactly how resolution of http://maven.twttr.com artifacts fails?.  My data:\n\n```\n[jsirois@gill /tmp/try/my-app] $ mvn --version\nApache Maven 3.0.4 (rNON-CANONICAL_2012-11-09_15-39_mockbuild; 2012-11-09 07:39:59-0800)\nMaven home: /usr/share/maven\nJava version: 1.7.0_21, vendor: Oracle Corporation\nJava home: /usr/java/jdk1.7.0_21/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.8.9-200.fc18.x86_64\", arch: \"amd64\", family: \"unix\"\n[jsirois@gill /tmp/try/my-app] $ mv ~/.m2/ ~/.m2-sav\n[jsirois@gill /tmp/try/my-app] $ cat pom.xml \n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.mycompany.app</groupId>\n  <artifactId>my-app</artifactId>\n  <packaging>jar</packaging>\n  <version>1.0-SNAPSHOT</version>\n  <name>my-app</name>\n  <repositories>\n    <repository>\n      <id>twitter-twttr</id>\n      <url>http://maven.twttr.com/</url>\n    </repository>\n  </repositories>\n  <dependencies>\n    <dependency>\n      <groupId>com.twitter.common</groupId>\n      <artifactId>quantity</artifactId>\n      <version>0.0.45</version>\n    </dependency>\n  </dependencies>\n</project>\n[jsirois@gill /tmp/try/my-app] $ mvn dependency:tree\n[INFO] Scanning for projects...\n...\n[INFO]                                                                         \n[INFO] ------------------------------------------------------------------------\n[INFO] Building my-app 1.0-SNAPSHOT\n[INFO] ------------------------------------------------------------------------\nDownloading: http://maven.twttr.com/com/twitter/common/quantity/0.0.45/quantity-0.0.45.pom\nDownloaded: http://maven.twttr.com/com/twitter/common/quantity/0.0.45/quantity-0.0.45.pom (2 KB at 2.8 KB/sec)\nDownloading: http://maven.twttr.com/com/twitter/common/collections/0.0.48/collections-0.0.48.pom\nDownloaded: http://maven.twttr.com/com/twitter/common/collections/0.0.48/collections-0.0.48.pom (2 KB at 5.8 KB/sec)\nDownloading: http://maven.twttr.com/commons-lang/commons-lang/2.5/commons-lang-2.5.pom\nDownloading: http://repo.maven.apache.org/maven2/commons-lang/commons-lang/2.5/commons-lang-2.5.pom\nDownloaded: http://repo.maven.apache.org/maven2/commons-lang/commons-lang/2.5/commons-lang-2.5.pom (17 KB at 36.6 KB/sec)\nDownloading: http://maven.twttr.com/org/apache/commons/commons-parent/12/commons-parent-12.pom\nDownloading: http://repo.maven.apache.org/maven2/org/apache/commons/commons-parent/12/commons-parent-12.pom\nDownloaded: http://repo.maven.apache.org/maven2/org/apache/commons/commons-parent/12/commons-parent-12.pom (27 KB at 51.5 KB/sec)\nDownloading: http://maven.twttr.com/com/google/guava/guava/14.0.1/guava-14.0.1.pom\nDownloading: http://repo.maven.apache.org/maven2/com/google/guava/guava/14.0.1/guava-14.0.1.pom\nDownloaded: http://repo.maven.apache.org/maven2/com/google/guava/guava/14.0.1/guava-14.0.1.pom (6 KB at 13.9 KB/sec)\nDownloading: http://maven.twttr.com/com/google/guava/guava-parent/14.0.1/guava-parent-14.0.1.pom\nDownloading: http://repo.maven.apache.org/maven2/com/google/guava/guava-parent/14.0.1/guava-parent-14.0.1.pom\nDownloaded: http://repo.maven.apache.org/maven2/com/google/guava/guava-parent/14.0.1/guava-parent-14.0.1.pom (3 KB at 12.7 KB/sec)\nDownloading: http://maven.twttr.com/org/sonatype/oss/oss-parent/7/oss-parent-7.pom\nDownloading: http://repo.maven.apache.org/maven2/org/sonatype/oss/oss-parent/7/oss-parent-7.pom\nDownloaded: http://repo.maven.apache.org/maven2/org/sonatype/oss/oss-parent/7/oss-parent-7.pom (5 KB at 17.2 KB/sec)\nDownloading: http://maven.twttr.com/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.pom\nDownloading: http://repo.maven.apache.org/maven2/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.pom\nDownloaded: http://repo.maven.apache.org/maven2/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.pom (965 B at 5.0 KB/sec)\nDownloading: http://maven.twttr.com/javax/inject/javax.inject/1/javax.inject-1.pom\nDownloading: http://repo.maven.apache.org/maven2/javax/inject/javax.inject/1/javax.inject-1.pom\nDownloaded: http://repo.maven.apache.org/maven2/javax/inject/javax.inject/1/javax.inject-1.pom (612 B at 6.0 KB/sec)\nDownloading: http://maven.twttr.com/com/twitter/common/quantity/0.0.45/quantity-0.0.45.jar\nDownloading: http://maven.twttr.com/com/twitter/common/collections/0.0.48/collections-0.0.48.jar\nDownloading: http://maven.twttr.com/commons-lang/commons-lang/2.5/commons-lang-2.5.jar\nDownloading: http://maven.twttr.com/com/google/guava/guava/14.0.1/guava-14.0.1.jar\nDownloading: http://maven.twttr.com/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar\nDownloading: http://maven.twttr.com/javax/inject/javax.inject/1/javax.inject-1.jar\nDownloaded: http://maven.twttr.com/com/twitter/common/quantity/0.0.45/quantity-0.0.45.jar (10 KB at 37.4 KB/sec)\nDownloaded: http://maven.twttr.com/com/twitter/common/collections/0.0.48/collections-0.0.48.jar (14 KB at 48.4 KB/sec)\nDownloading: http://repo.maven.apache.org/maven2/commons-lang/commons-lang/2.5/commons-lang-2.5.jar\nDownloading: http://repo.maven.apache.org/maven2/com/google/guava/guava/14.0.1/guava-14.0.1.jar\nDownloading: http://repo.maven.apache.org/maven2/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar\nDownloading: http://repo.maven.apache.org/maven2/javax/inject/javax.inject/1/javax.inject-1.jar\nDownloaded: http://repo.maven.apache.org/maven2/javax/inject/javax.inject/1/javax.inject-1.jar (3 KB at 11.1 KB/sec)\nDownloaded: http://repo.maven.apache.org/maven2/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar (33 KB at 94.5 KB/sec)\nDownloaded: http://repo.maven.apache.org/maven2/commons-lang/commons-lang/2.5/commons-lang-2.5.jar (273 KB at 380.8 KB/sec)\nDownloaded: http://repo.maven.apache.org/maven2/com/google/guava/guava/14.0.1/guava-14.0.1.jar (2138 KB at 293.5 KB/sec)\n[INFO] \n[INFO] --- maven-dependency-plugin:2.1:tree (default-cli) @ my-app ---\n...\n[INFO] com.mycompany.app:my-app:jar:1.0-SNAPSHOT\n[INFO] \\- com.twitter.common:quantity:jar:0.0.45:compile\n[INFO]    +- com.twitter.common:collections:jar:0.0.48:compile\n[INFO]    |  \\- commons-lang:commons-lang:jar:2.5:compile\n[INFO]    +- com.google.guava:guava:jar:14.0.1:compile\n[INFO]    +- com.google.code.findbugs:jsr305:jar:1.3.9:compile\n[INFO]    \\- javax.inject:javax.inject:jar:1:compile\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 51.829s\n[INFO] Finished at: Sun Apr 28 08:44:25 PDT 2013\n[INFO] Final Memory: 8M/144M\n[INFO] ------------------------------------------------------------------------\n```\n\nI'm going to close since I can't reproduce but please re-open if you continue to have issues and can provide more details.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17136182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17691459", "body": "Discarding - this was pushed directly.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17691459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17708368", "body": "This is an attempt to fixup the test failure seen here:\n  https://travis-ci.org/twitter/commons/builds/7036273\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17708368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17740316", "body": "Tested with:\n\n```\n./build-support/python/clean.sh && ./pants\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17740316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17740949", "body": "This breaks PANTS_DEV=1 ... more thought needed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17740949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17791953", "body": "ping - this makes ci green!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17791953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17829857", "body": "Sorry for this - now fixed.\nPublished here: https://github.com/twitter/commons/commit/4cebc4d234db4458c1cf469b8168391873236168\nUpdate to the facility here: http://maven.twttr.com/com/twitter/common/zookeeper/group/0.0.40/\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17829857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/18720914", "body": "And fwiw, to test using the undocumented build system, please:\n\n``` console\n $ ./pants goal test tests/java/com/twitter/common/zookeeper/ --test-junit-test=com.twitter.common.zookeeper.ZooKeeperMapTest \n\n20:58:21 00:00 [all]\n               See a report at: http://localhost:7268/run/pants_run_2013_05_30_20_58_21_503\n               (To run a reporting server: ./pants server)\n20:58:21 00:00   [setup]\n20:58:21 00:00     [bootstrap]\n20:58:21 00:00     [parse]\n20:58:22 00:01   [resolve-idl]\n20:58:22 00:01     [idl]\n20:58:22 00:01       [ivy]\n20:58:23 00:02     [extract]\n20:58:23 00:02   [gen]\n20:58:23 00:02     [thrift]\n20:58:23 00:02     [scrooge]\n20:58:23 00:02     [protoc]\n20:58:23 00:02     [antlr]\n20:58:23 00:02   [resolve]\n20:58:23 00:02     [ivy]\n20:58:23 00:02       [ivy]\n20:58:25 00:04   [compile]\n20:58:25 00:04     [jvm]\n20:58:25 00:04       [apt]\n20:58:25 00:04       [java]\n20:58:25 00:04     [checkstyle]\n20:58:25 00:04   [resources]\n20:58:25 00:04     [prepare]\n20:58:25 00:04   [test]\n20:58:25 00:04     [junit]\n20:58:25 00:04       [run]\n                     ...........\n                     Time: 7.024\n\n                     OK (11 tests)\n\n\n20:58:33 00:12     [specs]\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/18720914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/18722970", "body": "also, 2 space indents, +4 line continuation indents, but learning this ad-hoc and after the fact is super annoying to sat the least!  Merging.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/18722970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/18722992", "body": "Thanks again.  Merged.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/18722992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19278005", "body": "Thanks Brian.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19278005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19398936", "body": "Sharp eye!  Thanks.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19398936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19557898", "body": "Agreed on both points.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19557898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19580681", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19580681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19580739", "body": "Sorry for the massive delay.  Is this still relevant?  If so I'll take another look.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19580739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19627567", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19627567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20613665", "body": "Thanks for finding this and raising the issue, fix coming shortly.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20613665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20619476", "body": "Addressed here: https://github.com/twitter/commons/pull/156\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20619476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20716307", "body": "merged\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20716307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21634999", "body": "Thanks Bill\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21634999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21955543", "body": "Thanks a bunch.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21955543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22026842", "body": "Interesting.  The key line from your log was:\n\nCould not call install_name_tool -- you must have Apple's development\ntools installed\n\nThis generally means updating XCode and then going through its preferences\nmenu system to download a command line tools package.\n\nOn Thu, Aug 1, 2013 at 10:04 PM, Eric Lindvall notifications@github.comwrote:\n\n> I found that making /Library/Python/2.7/site-packages/ writable by my\n> user made it work.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/twitter/commons/issues/167#issuecomment-21985333\n> .\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22026842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22027023", "body": "embarrasing - thanks a bunch\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22027023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22027880", "body": "Thanks for picking this up Eric, a few small things but lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22027880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22036416", "body": "Eric - the best option I know of is to s/public constant/public function/ - see Closures for an example:\n  https://github.com/twitter/commons/blob/master/src/java/com/twitter/common/base/Closures.java#L126\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22036416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22036606", "body": "@eribeiro and I basically agree - the hybrid is what I suggest - private constant, public methos.  Sadly the commons closure code is bad, should be:\n\n``` java\n  private static final Closure<?> NOOP = new Closure<Object>() {\n    @Override public void execute(Object item) {\n      // noop\n    }\n  };\n\n  /**\n   * Returns a closure that will do nothing.\n   *\n   * @param <T> The closure argument type.\n   * @return A closure that does nothing.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public static <T> Closure<T> noop() {\n    return (Closure<T>) NOOP;\n  }\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22036606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22045004", "body": "Thanks Eric - I'll check out travis\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22045004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22072309", "body": "I've got these changes cherry-picked internally and out for review.  Should be accepted Monday and I'll publish promptly at that point and update this thread with versions.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22072309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22072584", "body": "Yup, looks like https://github.com/twitter/commons/commit/a489c3ad had checkstyle examining generated code and thus blowing up.  Fix coming.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22072584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22073394", "body": "Checkstyle issues are fixed but resources are not properly included on the classpath after modifications involved in the introduction of exclusives, tracking that as a seperate issue here: https://github.com/twitter/commons/issues/170\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22073394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076162", "body": "Thanks for the report - fix coming\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076176", "body": "Thanks for the detailed report, fix coming\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076189", "body": "Closing this is a duplicate of https://github.com/twitter/commons/issues/160 and https://github.com/twitter/commons/issues/163\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076204", "body": "I'm going to close in favor of https://github.com/twitter/commons/issues/160 and attache the pull request to that issue.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076456", "body": "Thanks @cscotta and @eric - closing this out and publishing a jar Monday.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22076456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22195161", "body": "These changes have been pushed and updated jars include:\n- com.twitter.common.zookeeper#node;0.0.34\n- com.twitter.common.zookeeper#map;0.0.34\n- com.twitter.common.zookeeper#partitioner;0.0.34\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22195161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22207821", "body": "Note 3 out of 4 travis runs went green here. The failing permutation [1] appears to be a flaky test:\n\n``` console\n=================================== FAILURES ===================================\n______________________________ test_sampler_base _______________________________\n    def test_sampler_base():\n      class TestSampler(SamplerBase):\n        def __init__(self, period, clock):\n          self.count = 0\n          SamplerBase.__init__(self, period, clock)\n\n        def iterate(self):\n          self.count += 1\n\n      test_clock = ThreadedClock()\n      sampler = TestSampler(Amount(1, Time.SECONDS), clock=test_clock)\n      sampler.start()\n\n      test_clock.tick(0.5)\n      assert sampler.count == 0\n      test_clock.tick(0.5)\n      assert sampler.count == 1\n      test_clock.tick(5)\n>     assert sampler.count == 6\nE     assert 4 == 6\nE      +  where 4 = <TestSampler(Thread-1 [TID=3115], started daemon 139893466560256)>.count\ntests/python/twitter/common/metrics/test_sampling.py:50: AssertionError\n```\n\n[1] https://travis-ci.org/twitter/commons/jobs/9836315\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22207821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22207970", "body": "Filed https://github.com/twitter/commons/issues/172 to track the flaky\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22207970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22768031", "body": "Sorry for the delay - this back and forth was quite laggy!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22768031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23137903", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23137903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23137928", "body": "I'm going to close since this never terminated and a year has passed.  Speak up if you'd like to continue.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23137928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23137962", "body": "Since fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23137962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23137998", "body": "You know me - I like many small libraries but in 1 big project.  Thanks for the heads up though.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23137998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23138082", "body": "We have no documents on usage even internally to Twitter to share.  Most clients have now moved off this client and on to a Twitter-internal finagle-based client.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23138082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23138103", "body": "This seems fixed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23138103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23287534", "body": "I'm going to see if Keita can have a look at this before dicing in.  He's more familiar with the code.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23287534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/24615557", "body": "So mod not having a proper source_root set up for your repo for resources targets, all the machinery is there and should work:\nThe PrepareResources task is installed [here](https://github.com/twitter/commons/blob/master/src/python/twitter/pants/commands/goal.py#L726)\nIts dependended on [here](https://github.com/twitter/commons/blob/master/src/python/twitter/pants/commands/goal.py#L743) by JarCreate\nAnd the resources get stuffed in the jars [here](https://github.com/twitter/commons/blob/master/src/python/twitter/pants/tasks/jar_create.py#L165) by JarCreate\n\nDo you mind verifying this works after adding a proper source_root or 2.  If not we should fix that.  Separately adding the ability to strip aprefix will make sense to support nasty things like logging.properties etc.  So that part of the change will be good to have.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/24615557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/24620995", "body": "Looks like maybe a bug in jvm_binary handling in particular.  Of 582 jvm_binary targets we have 0 that declare resources - folks just do this in {java,scala}_{library,tests}.  I do repro this does not work iff the jvm_binary declares no source.  With this diff against commons:\n\n``` diff\n[jsirois@gill ~/dev-twitter-commons] (master +) $ git rev-parse HEAD\n06aa4f52a03bb71b89a06f12349ee0e07a69143d\n[jsirois@gill ~/dev-twitter-commons] (master +) $ git diff --cached\ndiff --git a/src/java/com/twitter/common/examples/pingpong/BUILD b/src/java/com/twitter/common/examples/pingpong/BUILD\nindex 3847cff..422ebad 100644\n--- a/src/java/com/twitter/common/examples/pingpong/BUILD\n+++ b/src/java/com/twitter/common/examples/pingpong/BUILD\n@@ -39,8 +39,10 @@ java_library(name = 'pingpong-lib',\n jvm_binary(name='pingpong',\n   basename='pingpong',\n   main='com.twitter.common.examples.pingpong.Main',\n+  source='Main.java',\n   dependencies=[\n     pants(':pingpong-lib')\n-  ]\n+  ],\n+  resources=pants('src/resources/com/twitter/common/examples/pingpong')\n )\n\ndiff --git a/src/resources/com/twitter/common/examples/pingpong/BUILD b/src/resources/com/twitter/common/examples/pingpong/BUILD\nnew file mode 100644\nindex 0000000..7ecd57b\n--- /dev/null\n+++ b/src/resources/com/twitter/common/examples/pingpong/BUILD\n@@ -0,0 +1 @@\n+resources(name='pingpong', sources=['test'])\ndiff --git a/src/resources/com/twitter/common/examples/pingpong/test b/src/resources/com/twitter/common/examples/pingpong/test\nnew file mode 100644\nindex 0000000..ce01362\n--- /dev/null\n+++ b/src/resources/com/twitter/common/examples/pingpong/test\n@@ -0,0 +1 @@\n+hello\n\n```\n\nI get:\n\n``` console\n[jsirois@gill ~/dev-twitter-commons] (master +) $ ./pants goal bundle src/java/com/twitter/common/examples/pingpong\n[jsirois@gill ~/dev-twitter-commons] (master +) $ zipinfo -1 dist/pingpong.jar | grep test\ncom/twitter/common/examples/pingpong/test\n[jsirois@gill ~/dev-twitter-commons] (master +) $ unzip -qc dist/pingpong.jar com/twitter/common/examples/pingpong/test\nhello\n```\n\nIf I remove the jvm_binary.source argument though the resource is not packaged up.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/24620995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/twitter/commons/comments/897804", "body": "testing:\n$ ./pants src/java/com/twitter/common/zookeeper:client\n$ ./pants src/java/com/twitter/common/zookeeper:node\n$ ./pants src/java/com/twitter/common/zookeeper:map\n$ ./pants src/java/com/twitter/common/zookeeper:group\n$ ./pants src/java/com/twitter/common/zookeeper:partitioner\n$ ./pants src/java/com/twitter/common/zookeeper:candidate\n$ ./pants src/java/com/twitter/common/zookeeper:lock\n$ ./pants src/java/com/twitter/common/zookeeper:server-set\n$ ./pants src/java/com/twitter/common/zookeeper:singleton-service\n$ ./pants src/java/com/twitter/common/zookeeper\n$ ./pants tests/java/com/twitter/common/zookeeper\n$ ./pants list src/java/com/twitter/common/zookeeper --provides\nsrc/java/com/twitter/common/zookeeper/BUILD:client com.twitter.common.zookeeper#client\nsrc/java/com/twitter/common/zookeeper/BUILD:node com.twitter.common.zookeeper#node\nsrc/java/com/twitter/common/zookeeper/BUILD:map com.twitter.common.zookeeper#map\nsrc/java/com/twitter/common/zookeeper/BUILD:lock com.twitter.common.zookeeper#lock\nsrc/java/com/twitter/common/zookeeper/BUILD:group com.twitter.common.zookeeper#group\nsrc/java/com/twitter/common/zookeeper/BUILD:partitioner com.twitter.common.zookeeper#partitioner\nsrc/java/com/twitter/common/zookeeper/BUILD:candidate com.twitter.common.zookeeper#candidate\nsrc/java/com/twitter/common/zookeeper/BUILD:server-set com.twitter.common.zookeeper#server-set\nsrc/java/com/twitter/common/zookeeper/BUILD:singleton-service com.twitter.common.zookeeper#singleton-service\nsrc/java/com/twitter/common/zookeeper/BUILD:testing com.twitter.common#zookeeper-testing\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/897804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/comments/5109239", "body": "Thats sounds like an old pants.pex.  I'm not sure what your setup is, but you need to rebuild pants.pex.  This is done in the commons repo with:\n\n``` console\nrm pants.pex\n./pants.bootstrap\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/5109239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/comments/8923242", "body": "Was there a reviewboard for this?  Standard operating procedure is to post a review to rbcommons and apply the final shipped change via `rbt patch -c [RB ID]` which avoids merges and leaves a review trail in the commit message itself.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/8923242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/comments/8924057", "body": "I got here directly from a red travis build that I re-started (now green).  Thanks for the link.  So this was all kosher mod the change application to master at the very end.  I'll need to ressurrect the contirbutor guide info that went away when pants migrated out of commons.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/8924057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/comments/8939182", "body": "...and this change never made it to (twitter/commons) master.  I must have followed a _branch_ red ci to a _clone_ master merge which is all fine.  Sorry for the noise.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/8939182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/637972", "body": "typo? src/java/com/twitter/common/commons/BUILD does not exist\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/637972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/637995", "body": "With a new name and some docs, I'd prefer this be elevated to the fundamental public interface for the user-supplied node value materializer.  I think anytime you have a function that takes more than 1 arg in a public interface, its more clear to create a dedicated interface.  This affords an opportunity to choose a better name than apply if one exists and also choose a more apt name for the function interface.  I think the benefits this bestows users of the api often outweigh the inconvenience to the library author and those api users that might benefit from something like Functions.compose for example. \n\nNaming suggestion:\ninterface NodeDeserializer<T> {\n  T deserialize(byte[] data, Stat stat);\n}\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/637995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/642270", "body": "kill extra blank line above and kill @Nullable below - looks like you never pass null\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/642270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/642275", "body": "Add T docs:\n[newline]\n@param <T> .....\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/642275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/642280", "body": "this should chain to once of the creates below\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/642280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/631975", "body": "Hah - this actually fixed problems with classes being examined by checkstyle that depended on thrift gen code iirc.  I'll test on our codebase to confirm.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/631975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/638015", "body": "you could use self.context.id\nsee context.identify: https://github.com/twitter/commons/blob/master/src/python/twitter/pants/goal/context.py#L32\nIf you wan't to change that to use sha1 instead of md5 - sgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/638015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2733912", "body": "I think MockPantsTarget can just extend object now\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2733912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2733919", "body": "this fellow should have a license header too - Foursquare Labs lgtm\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2733919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2733952", "body": "> 100 cols\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2733952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4163162", "body": "Yeah - so the translator can only in practice translate for the current platform.  If the pants.ini or python_binary asks for a non-native platform, without this fix, a SourceLink will happily build for the native platform and return success.  We ask for linux - it hands us back mac.  This in fact accounts for many surprise build on mac, deploy to linux runtime failures at Twitter today.  I tried 3 variants of the fix - the other 2 were in Obtainer and in *Link - I landed here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4163162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4163226", "body": "Yup - Benjy added the old eggs (https://github.com/twitter/commons/tree/binaries/pants/third_party/python/dist) so I'll fix down.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4163226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4166566", "body": "Oops - read better and you're right - link.platform should be Platform.current()\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4166566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5631879", "body": "Nope:\n\n``` console\n$ find {src,tests}/python/twitter/pants -name \"*.py\" | xargs grep get_classpath_for_group\nsrc/python/twitter/pants/tasks/checkstyle.py:    cp = egroups.get_classpath_for_group(etag)\nsrc/python/twitter/pants/tasks/check_exclusives.py:  def get_classpath_for_group(self, group_key):\nsrc/python/twitter/pants/tasks/jvm_run.py:      group_classpath = egroups.get_classpath_for_group(group_key)\nsrc/python/twitter/pants/tasks/java_compile.py:          exclusives_classpath = egroups.get_classpath_for_group(group_id)\nsrc/python/twitter/pants/tasks/jvm_task.py:    return egroups.get_classpath_for_group(group_key)\nsrc/python/twitter/pants/tasks/scala_compile.py:    exclusives_classpath = egroups.get_classpath_for_group(exclusives_key)\nsrc/python/twitter/pants/tasks/scala_compile.py:          exclusives_classpath = egroups.get_classpath_for_group(exclusives_key)\ntests/python/twitter/pants/tasks/test_check_exclusives.py:    self.assertEquals(egroups.get_classpath_for_group(\"a=2,b=2\"),\ntests/python/twitter/pants/tasks/test_check_exclusives.py:    self.assertEquals(egroups.get_classpath_for_group(\"a=1,b=1\"),\ntests/python/twitter/pants/tasks/test_check_exclusives.py:    self.assertEquals(egroups.get_classpath_for_group(\"a=1,b=<none>\"),\ntests/python/twitter/pants/tasks/test_check_exclusives.py:    self.assertEquals(egroups.get_classpath_for_group(\"a=<none>,b=<none>\"),\ntests/python/twitter/pants/tasks/test_check_exclusives.py:    self.assertEquals(egroups.get_classpath_for_group(\"a=1,b=1\"),\n```\n\nAnd those egroups are in fact ExclusivesMapping objects which host the get_classpath_for_group method stored in the depmap.\n\n``` python\n$ ./pants py src/python/twitter/pants/:pants-lib\nPython 2.7.4 (default, Apr 19 2013, 18:28:01) \n[GCC 4.7.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n>>> import twitter.pants.tasks.check_exclusives\n>>> help(twitter.pants.tasks.check_exclusives)\n```\n\n``` console\nclass ExclusivesMapping(__builtin__.object)\n     |  Methods defined here:\n     |  \n     |  __init__(self, context)\n     |  \n     |  add_conflict(self, key, values)\n     |      Register a conflict on an exclusives key.\n     |      Parameters:\n     |        key the exclusives key with a conflicting_exclusives\n     |        value the different values used for the key in different targets.\n     |  \n     |  get_classpath_for_group(self, group_key)\n     |      Get the classpath to use for jvm compilations of a group.\n     |      \n     |      Each exclusives group requires a distinct classpath. We maintain\n     |      them here as a map from the exclusives key to a classpath. The\n     |      classpath is updated during compilations to add the results of\n     |      compiling a group to the classpaths of other groups that could depend on it.\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5631879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/9675545", "body": "Importing http.py's import of HTTPException here is a bad sign.  I think the right fix is to encapsulate all fetch errors in http.py's Web and CachedWed as FetchError's there so that here you can trap that exception type cleanly.  They handle their layer, you handle yours here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/9675545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/10857532", "body": "Thanks for catching that:\nhttps://rbcommons.com/s/twitter/r/132/\nhttps://github.com/twitter/commons/pull/264\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/10857532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163285", "body": "The most obvious answer is posixpath vs ntpath - though commons makes no pretense of supporting windows in general.  That said - url tools wipe away the ambiguity.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ericzundel": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/380", "title": "fnmatch_translate_extended() incorrectly translates wildcard pattern", "body": "I found that the fnmatch_translate_extended translation of the pattern 'squareup/inventory/adjustment*.proto' to a regular expression did not match the string 'squareup/inventory/adjustment.proto'\n\nThis is because the re returned expects at least one character to replace '*' in the expression above:\n\n```\nfrom twitter.common.dirutil.fileset import fnmatch_translate_extended\npattern = fnmatch_translate_extended('squareup/inventory/adjustment*.proto')\n(Pdb) p pattern\nu'squareup\\\\/inventory\\\\/adjustment([^/]+)\\\\.proto\\\\Z(?ms)'\n```\n\nA better translation would be to replace the '+' with '*':\n\n```\nu'squareup\\\\/inventory\\\\/adjustment([^/]*)\\\\.proto\\\\Z(?ms)'\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/359", "title": "Error from Junit Runner", "body": "See https://github.com/pantsbuild/pants/issues/1234 for some details.\n\nI'm getting this stacktrace when running a test in pants that uses the twitter junit runner:\n\n```\n./pants test foo:test --no-test-junit-suppress-output\n                   .E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E.E\n                     Time: 462.17\n                     There were 185 failures:\n                     1) Test mechanism\n                     java.lang.NullPointerException\n                        at com.twitter.common.junit.runner.ConsoleRunner$StreamCapturingListener.testStarted(ConsoleRunner.java:205)\n                        at com.twitter.common.junit.runner.ForwardingListener$3.fire(ForwardingListener.java:60)\n                        at com.twitter.common.junit.runner.ForwardingListener.fire(ForwardingListener.java:34)\n                        at com.twitter.common.junit.runner.ForwardingListener.testStarted(ForwardingListener.java:58)\n                        at com.twitter.common.junit.runner.AbortableListener.testStarted(AbortableListener.java:29)\n                        at org.junit.runner.notification.SynchronizedRunListener.testStarted(SynchronizedRunListener.java:49)\n                        at org.junit.runner.notification.RunNotifier$3.notifyListener(RunNotifier.java:121)\n                        at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)\n                        at org.junit.runner.notification.RunNotifier.fireTestStarted(RunNotifier.java:118)\n                        at org.junit.internal.runners.ErrorReportingRunner.runCause(ErrorReportingRunner.java:64)\n                        at org.junit.internal.runners.ErrorReportingRunner.run(ErrorReportingRunner.java:38)\n                        at com.twitter.common.junit.runner.CompositeRequest.runChild(CompositeRequest.java:63)\n                        at com.twitter.common.junit.runner.ConcurrentCompositeRequest$1$1.run(ConcurrentCompositeRequest.java:33)\n                        at com.twitter.common.junit.runner.ConcurrentRunnerScheduler.finished(ConcurrentRunnerScheduler.java:82)\n                        at com.twitter.common.junit.runner.ConcurrentCompositeRequest$1.evaluate(ConcurrentCompositeRequest.java:42)\n                        at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n                        at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n                        at com.twitter.common.junit.runner.ConsoleRunner.run(ConsoleRunner.java:323)\n                        at com.twitter.common.junit.runner.ConsoleRunner.main(ConsoleRunner.java:635)\n```\n\nThe code in question is:\n\n```\n203:    @Override\n204:    public void testStarted(Description description) throws Exception {\n205:      captures.get(description.getTestClass()).open();\n206:      super.testStarted(description);\n207:    }\n```\n\nThis code hasn't been updated in twitter commons since last May and I was hoping that maybe this has been encountered at Twitter and a fix not yet pushed to the open source version.  If not, let me know and I'll dig into it more.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/249", "title": "No verification for 'main' setting in jvm_binary definition", "body": "I fat-fingered a jvm_binary target in pants:\n\n``` python\njvm_binary(name='main',\n    basename='hello',\n    source='Main.java',\n    main='org.foo.hello.Hello',\n    dependencies = [\n      pants('/src/java/org/foo/hello')\n    ]\n)\n```\n\nBut the class org.foo.hello._Hello_ had no public static void main() method defined.  In my case, it should have been 'org.foo.hello._Main_'\n\nNevertheless, the invocation:\n\npants goal binary ...hello/BUILD:main \n\nended in SUCCESS.  It would be nice if there was a step to verify that org.foo.hello.Hello.main was a valid method before declaring success.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/0e803d54b7090cadce4565400e6d06fd4ce51050", "message": "Fixing VarsJsonHandler and VarsHandlerTest for Java 7+ which changes hashmap iteration order\n\nTesting Done:\nRan all java tests in commons with:\n\n./pants goal test {src,tests}/java/com/twitter/common::\n./pants goal test {src,tests}/scala/com/twitter/common::\n\nunder Java 7 and re-ran the java tests with Java 8\n\nReviewed at https://rbcommons.com/s/twitter/r/1368/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/a2bc13910f3a0305caf7c863e870108ad268e374", "message": "Close the open files before trying to move them"}, {"url": "https://api.github.com/repos/twitter/commons/commits/c350ca9df7c3a8e2ddd0fa99855b3111027affa4", "message": "In jar-tool, use apache commons FileUtils.moveFile to use copy when target of jar write is across filesystem boundary\n\nThis change updates File.rename() to use the apache commons FileUtils.moveFile() when writing out a jar file in JarBuilder.write().  This change uses a simple file rename when possible, or a copy if the two files can't be renamed (if the destination is on a different filesystem, for example.)\n\nTesting Done:\nRan ./pants goal test tests/java/com/twitter/common/jar/tool\n\nIt would be great if Patrick could test out in their environment where this is a problem:\n\n1.) in twitter/commons use `./pants goal binary --binary-deployjar src/java/com/twitter/common/jar/tool/:main` to produce a self-contained tool jar at dist/jar-tool.jar\n2.) in pantsbuild/pants edit like so adapted for your local paths:\n$ git diff\ndiff --git a/BUILD.tools b/BUILD.tools\nindex 0e39737..0562831 100644\n--- a/BUILD.tools\n+++ b/BUILD.tools\n@@ -95,6 +95,7 @@ jar_library(name = 'scrooge-legacy-gen',\n\n jar_library(name = 'jar-tool',\n             jars = [\n-              jar(org = 'com.twitter.common', name = 'jar-tool', rev = '0.1.5')\n+              jar(org = 'com.twitter.common', name = 'jar-tool', rev = '0.1.6-SNAPSHOT',\n+                  mutable=True, url=\"file:///home/<your path here>/commons/dist/jar-tool.jar\")\n             ])\n\nBugs closed: 295\n\nReviewed at https://rbcommons.com/s/twitter/r/440/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/ca45c17c23005904b2cd7be7ecfb0684c7176372", "message": "Remove ShutdownHook from jar-tool to prevent memory leak when running under nailgun.\n\nThis fixes a memory leak using nailgun with jar-tool caused by adding a Shutdown hook.\n\nTesting Done:\nInspected with jvisualvm to find memory leak\n\nIn pants.ini, crank down the heap size:\n\n while [ t ] ; do PANTS_DEV=1 ~/Src/pants/pants goal bundle <target> --bundle-deployjar ; done\n\nran for a while and heap did not grow, whereas before it would die after just a few iterations with a 64 MB heap.\n\nBugs closed: 293\n\nReviewed at https://rbcommons.com/s/twitter/r/428/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/3b9d3d01cf883d09e29e2d82a80d2f12add8c83d", "message": "Adds an optimized copy from one jar file to another.\n\nThe SuperShady.java code should be attributed to scottb@squareup.com\n\nTesting Done:\nTo test the updated jar-tool, I used one of our targets with about 100 jar files. The unpacked size is 303MB. The super-shady version takes under 7 seconds as compared to the default version\u2019s time of a little over 3 minutes:\n\njsirois/twitter-sync ./super-shady-exemplar\nreal    3m4.610s\nuser    14m10.336s\n\nsys    0m12.502s\n\nzundel/super-shady-jar-tool ./super-shady-exemplar\nreal    0m6.256s\nuser    0m5.061s\n\nsys    0m4.216s\nAlso, the super-shady version compression is much better.\n\n-rw-r--r--  1 zundel  zundel  198500393 May 11 11:51 /tmp/exemplar-orig.jar\n-rw-r--r--  1 zundel  zundel   84200072 May 12 04:55 /tmp/exemplar-super-shady.jar\n\nI don\u2019t know why that is, maybe a difference in the compression level passed to the zip algorithm. I did have to fix the unit test because it expected all entries in the zip file to be deflated. It might also be that using DEFLATE on directory entries and other zipfile entries that don\u2019t need it is mushrooming the size of the file in the original jar-tool version. I did a check to make sure that all the extracted files were the same between both versions. I unpacked the jars with \u2018unzip\u2019 into 2 directories and ran \u2018md5\u2019 on each file in each unpacked dir\n\nBugs closed: 290\n\nReviewed at https://rbcommons.com/s/twitter/r/345/"}], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/381", "title": "Bugfix for fnmatch_translate_extended() to match zero characters for '*'", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/306", "title": "Adds a DefaultOrderedDict class", "body": "This new class is meant to be a substitute for defaultdict().   I wanted to use it in pants because I'm trying to get to the bottom of what seems to be non-deterministic behavior in ordering the classpath for jvm compiles between different machines both working from head of master in the same repo.\n\nI also added some tests for OrderedDict while I was at it.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/commons/comments/6388651", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/6388651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/comments/6388662", "body": "There is one thing, it seems that the attribution to scottb@squareup.com might have gotten lost.  \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/6388662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "wanggaohang": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/378", "title": "TMonitoredProcessor has some problems", "body": "position\uff1acom.twitter.common.thrift.monitoring.TMonitoredProcessor\n1.when client transport is closed,code wrapped.process(in, out) will throws an exception even client donot invoke any service method.so this method can only monitor long-connect thrift client.\n2.the time computer way is wrong,because long startNanos = System.nanoTime(); will execute even no thrift client invoke any service method.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vkueffel": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/355", "title": "com.twitter.common.stats.Windowed.getCurrentIndex() needs to return a long", "body": "When using e.g. WindowedStatistics with a time window/number of slice combination that results in a sliceDuration of less than 662 ms(currently) index calculation in Windowed.getCurrentIndex() fails because System.currentTimeMillis()/662 > Integer.MAX_VALUE and casting it to int produces unpredictable results. \n\n\"Best case\" is that getCurrentIndex() returns a negative value (as happened to me), causing an ArrayIndexOutOfBoundsException because the whole code in sync() is skipped and index will remain at the initial value of -1.\n\nSimple fix, should just be like this:\n\n```\nprotected long getCurrentIndex() {\n  return clock.nowMillis() / sliceDuration;\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jinfeng": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/353", "title": "add argFile() to @Positional arguments", "body": "Related to https://github.com/twitter/commons/issues/352. Currently there is no use case, but eventually we may benefit from having a unified argfile mechanism for both optional (@cmdline) and positional arguments.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/352", "title": "add argFile() to @CmdLine and implement the argfile content reading logic", "body": "See details in https://github.com/pantsbuild/pants/issues/972.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/354", "title": "add cmdline argFileAllowed attribute to support @argfile for those options with extremely long values", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fommil": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/350", "title": "docs for maven artefact", "body": "nowhere on the README does it actually say what the groupId and artefactId are\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/348", "title": "common metrics not on maven central", "body": "com.twitter.common#metrics;0.0.29 is not available no maven central.\n\nThis means that much of finagle cannot be used without adding additional maven repositories: banned in many corporate environments.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexkravin": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/343", "title": "Merged changes for Checkstyle to Checkstyle main repo", "body": "Moved changes from https://github.com/twitter/commons/tree/master/src/java/com/twitter/common/checkstyle\nso in next CS version (6.3) there won't be need in this extension (except for CheckstyleUtils changes as we already have this functionality and SplitSuppressionsFilter)\n\nIf you have any other proposals you're welcome\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thoward": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/329", "title": "Error acquiring lock using src/python/twitter/common/dirutil/lock.py, \"Invalid literal for int() with base 10\"", "body": "Not sure what's going on here, but my assumption is a race condition where two processes both thought they had successfully obtained a lock, and one read a partial file while the other was writing to it. Doesn't happen often, but I see it in my Jenkins builds that use this code:\n\n```\nTraceback (most recent call last):\n# ... snip ...\n  lock = Lock.acquire(lockfile_for(filename))\n  File \"./my-little-tool.pex/.deps/twitter.common.dirutil-0.3.0-py2.7.egg/twitter/common/dirutil/lock.py\", line 49, in acquire\nValueError: invalid literal for int() with base 10: ''\n```\n\nCould be related to issue #294 ?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benmccann": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/323", "title": "Maven repository should be hosted via https", "body": "It's not safe to download software over http. See http://blog.ontoillogical.com/blog/2014/07/28/how-to-take-over-any-java-developer/\n\nRight now [the docs](http://twitter.github.io/commons/) suggest adding the Maven repo http://maven.twttr.com\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dturner-tw": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/322", "title": "Bogus NaN comparison", "body": "In com.twitter.common.args.apt Configuration.java, Azeem Jiva noticed the following (line 93-97)\nif ((denominatorValue == 0)\n        || (denominatorValue == Double.NaN)\n        || (numeratorValue == Double.NaN)) {\n      return 0d;\n}\nYou can't compare a floating point value to NaN. The right way is:\nif ((denominatorValue == 0)\n        || (Double.isNaN(denominatorValue))\n        || (Double.isNaN(numeratorValue))) {\n      return 0d;\n}\n\n(reporting it for Azeem since he filed it on the wrong project and I don't want it to get lost in the mists)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/f12153b322e8e9c678f5e8d2a970edf22904b8d0", "message": "Bump pants plugin version number\n\nMinor version bump because no API changes.\n\nReviewed at https://rbcommons.com/s/twitter/r/1789/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/1166ea03c62b5476e13900e9c17711bfa7acb088", "message": "Allow non-jar resources in resource-mapper\n\nNon-jar resources (which can't be unzipped) are permitted on the\nclasspath; these should be allowed in resource-mapper.\n\nTesting Done:\nManual testing.\n\nReviewed at https://rbcommons.com/s/twitter/r/1752/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/036fef914c0b848594e5e7eda783d92021fe23e4", "message": "Make globs('') match nothing at all.  This is consistent with rglobs and zglobs.  Include a few tests for globs(), including for this functionality.\n\nTesting Done:\nRan glob tests (red/green/go)\n\nReviewed at https://rbcommons.com/s/twitter/r/1187/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/f198bdce1f220c4662ce60f0f7cd34ed2eb87d79", "message": "OS X Compatibility fixes"}, {"url": "https://api.github.com/repos/twitter/commons/commits/35344086d0a7091197592d5ca77af0779798e259", "message": "Cleanup test so it can be run from any dir.\n\nReviewed at https://rbcommons.com/s/twitter/r/951/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/2f724b72b68f814e606ea69998cfa5d05247d40b", "message": "Handle merging an existing directory with an incoming directory.\n\nAdd tests for this new functionality.  Also test for repository\nbreakage (git fsck), and clean up test framework a bit.\n\nTesting Done:\nI ran the tests. I also redid the real-world import; git fsck on the newly-created branch reports no problems.\n\nReviewed at https://rbcommons.com/s/twitter/r/951/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/d0644226797b5d8d30ac5a168db3d4a7952a6220", "message": "error message on remote branch (Mark Christian hit this)\n\nReviewed at https://rbcommons.com/s/twitter/r/932/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/830c4e3c5cbd404791db76c387b5c171c135b8a5", "message": "bug fixes\n\nThis fixes some bugs in migrate with -o (reported by Mark Christian).  There are two commits here; the first just hardens the script a bit by quoting variables and crashing out on error better.  The second actually does the fixes.\n\nTesting Done:\nTested by migrated macaw-swift from twitter into birdcage.\n\nBugs closed: DPB-1796\n\nReviewed at https://rbcommons.com/s/twitter/r/792/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/708277e6d2557da62f943d5e718c52373289b06b", "message": "Make pex's -i argument compatible with pip's -i argument.  This also allows the use of alternate Python package indexes (e.g. devpi) which use paths other than .../simple.\n\nSince this is a backwards-incompatible change, bump the version number.\n\nTesting Done:\n./build-support/bin/ci.sh\n\nReviewed at https://rbcommons.com/s/twitter/r/737/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/dfb5e658d5e3e92611937d798d27f3e826d8f9a9", "message": "migrate-history.sh: Add -o subdir option\n\nThis option allows the usre to specify a subdirectory of the incoming\nrepository to be imported, instead of importing the whole thing.\nOnly commits which affect that subdirectory will be migrated.\n\nTesting Done:\nThe test script passes (added a test for the new option)\n\nReviewed at https://rbcommons.com/s/twitter/r/715/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/9da71aa6a6c21c47a08f8c52b3c6d7944eb6ad90", "message": "When translating a source package, translate it to the requested\nplatform, not the current platform."}, {"url": "https://api.github.com/repos/twitter/commons/commits/a3c1f2ee5eabcfc313a55f83c1ff25dba36d05fc", "message": "migrate-history: clean up text\n\nRearrange to move usage first; explain missing repeat-import feature."}, {"url": "https://api.github.com/repos/twitter/commons/commits/7e8d402a5c6260cea5ae2be827770f8433324346", "message": "[PATCH 6579/7508] Replace bin in gitignore with /bin/.\n\nRB_ID=309001\n\n(sapling split of ac417f740b99b4d70e172843a230a48931ffb645)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Yasumoto": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/317", "title": "Remove deprecated python twitter.common.zookeeper:zookeeper-old", "body": "Since all (most?) things are using the pure-python kazoo zookeeper library, we should remove the old c-zookeeper-based library to get rid of another native-code library.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/00623914bf820dd2128720aeffed30aa42d4c533", "message": "Merge pull request #395 from imsut/enrich_reviewboard\n\nEnrich reviewboard utility class for python"}, {"url": "https://api.github.com/repos/twitter/commons/commits/e477c952ceb883e93a2b5d367cdd5995e3d2d459", "message": "Merge pull request #402 from jsirois/jsirois/release_py_commons/fix\n\nAutomate the release process a bit more."}, {"url": "https://api.github.com/repos/twitter/commons/commits/2045a2f0b0346365b600b55490c35b6e8d643d1f", "message": "Merge pull request #388 from santazhang/patch-1\n\nfix python twitter.common.string.basic_scanf"}, {"url": "https://api.github.com/repos/twitter/commons/commits/4451ae98d26713c49a1ea532daef06aba7c38a11", "message": "Add contribution guidelines for Twitter Commons\n\nBugs closed: 330\n\nReviewed at https://rbcommons.com/s/twitter/r/2356/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/6989cdfb602644387d92fcf1bc61a1607b20f460", "message": "Fix Typos in App Modules Readme"}, {"url": "https://api.github.com/repos/twitter/commons/commits/af59f580624eddf104cdf380ddd956123ea19b15", "message": "Document twitter.common.app.modules is not available via PyPI\n\nFrom a conversation in https://rbcommons.com/s/twitter/r/1767/, t.c.a.modules will never be publishable as a dist.\n\nBugs closed: 356\n\nReviewed at https://rbcommons.com/s/twitter/r/1831/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/3307269be636627752dab2afe2fc86fb5f4a438e", "message": "Merge pull request #332 from zmanji/fix-tunnel\n\nRemove unnecessary atexit handler for tearing down ssh processes"}, {"url": "https://api.github.com/repos/twitter/commons/commits/a04ebc4fcc611907f86be9e09b39cd30f3eda5cf", "message": "Add Joe Smith to travis email notifications\n\nThis is primarily for the python side of the commons.\n\nTesting Done:\nhttps://travis-ci.org/twitter/commons/builds/36186847\n\nBugs closed: 326\n\nReviewed at https://rbcommons.com/s/twitter/r/1072/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/267c956515328307fa273c3f5864ef66f1768f71", "message": "Bump twitter.common.python to 0.5.7"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/commons/comments/8923996", "body": "Did you get here from #335 ? If so, see #334 and https://rbcommons.com/s/twitter/r/1460/\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/8923996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/15082359", "body": "I'm a -1 on the vague \"properties\" blob- instead I'd say we explicitly add fields we expect.\n\nIn that line, is there a 'server set version' proper tie somewhere? If we're starting to iterate on contents like this, we may benefit from explicit versioning to know what to expect ahead of time.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/15082359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/35902786", "body": "Mind adding `autospec=True, spec_set=True` to these patches?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/35902786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/35903004", "body": "mind moving this to:\n\n```\nassert mock_http_request.mock_calls == [mock.call( \"api/review-requests/?start=0&max-results=25\",\n    None, None, {'Accept': 'application/json'}, method=None)]\n```\n\nWe've found this helps make mocked calls much more explicit, and prevents typos in the assert calls.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/35903004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}]}, "jaybuff": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/316", "title": "missing dep on wheel", "body": "It looks like sometime between 0.6.0 and 0.7.0 a hard dependency on wheel was introduced.\n\nIf I install pex like this:\n\n```\npython -m virtualenv ve\n. ./ve/bin/activate; pip install twitter.common.python\n```\n\nThen I run pex I get this error:\n\n```\npex.installer.IncapableInterpreter: Interpreter PythonInterpreter('/vagrant/aurora-training/ve/bin/python', PythonIdentity('CPython', 2, 6, 6), {('twitter.common.python', '0.7.0'): '/vagrant/aurora-training/ve/lib/python2.6/site-packages', ('pip', '1.5.6'): '/vagrant/aurora-training/ve/lib/python2.6/site-packages', ('pex', '0.7.0'): '/vagrant/aurora-training/ve/lib/python2.6/site-packages', ('python', '2.6.6'): '/usr/lib64/python2.6/lib-dynload', ('setuptools', '3.6'): '/vagrant/aurora-training/ve/lib/python2.6/site-packages'}) not capable of running WheelInstaller\n```\n\nIt works when I use twitter.common.python==0.6.0\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "likebean": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/310", "title": "delete parent path will cause thread occupied in com.twitter.common.zookeeper.ZookeeperMap ", "body": "```\nzkClient.get().exists(nodePath, new Watcher() {\n  @Override public void process(WatchedEvent event) {\n    if (event.getType() == Watcher.Event.EventType.NodeDeleted) {\n      // If the parent node no longer exists\n      localMap.clear();\n      try {\n        tryWatchChildren();\n        //////this will cause thread occupied.\n      } catch (InterruptedException e) {\n        LOG.log(Level.WARNING, \"Interrupted while trying to watch children.\", e);\n        Thread.currentThread().interrupt();\n      }\n    }\n  }});\n```\n\nis this proper?should monitor nodeCreated?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TJ09": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/303", "title": "Add a command line parameter to specify IP to listen on for HTTP.", "body": "Right now, the HTTP module only accepts a port as configuration. In a machine with multiple IPs/interfaces, there is no way to set which interface is used (e.g. a system with an external and LAN IP has no way to force a service to listen only on the LAN IP and not all interfaces). It'd be nice to have --http_ip or something to control this behavior.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fsaintjacques": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/297", "title": "unclean state if pants fails on first call", "body": "On an unrelated problem, clang unknown-flag behaviour has changed from a warning to a hard error, thus making one of pants deps build fail:\n\n```\nRunning setup.py install for psutil\n  building '_psutil_osx' extension\n  cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-commonno-strict-aliasing -fwrapv -mno-fused-madd -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-protypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch6_64 -arch i386 -pipe -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2\n -c psutil/_psutil_osx.c -o build/temp.macosx-10.9-intel-2.7/psutil/_psutil_osx.o\n  clang: error: unknown argument: '-mno-fused-madd' [-Wunused-command-line-argument-hard-error-ifuture]\n  clang: note: this will be a hard error (cannot be downgraded to a warning) in the future\n  error: command 'cc' failed with exit status 1\n\n...\n\n----------------------------------------\nCleaning up...\nCommand /Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/bin/python -c \"import setuptools, tokenize;__file__='/Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/build/psutil/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n','\\n'), __file__, 'exec'))\" install --record /var/folders/s7/lph1f4g93nj7tpg8db03sv340000gn/T/pip-fvRyOg-record/install-record.txt --single-version-externally-managed --compile --install-headers /Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/include/site/python2.7 failed with\n error code 1 in /Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/build/psutil\nStoring debug log for failure in /Users/fsaintjacques/.pip/pip.log\nTraceback (most recent call last):\n  File \"/Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/bin/pants\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/lib/python2.7/site-packages/pkg_resources.py\", line 2716, in <module>\n    working_set.require(__requires__)\n  File \"/Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/lib/python2.7/site-packages/pkg_resources.py\", line 685, in require\n    needed = self.resolve(parse_requirements(requirements))\n  File \"/Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/lib/python2.7/site-packages/pkg_resources.py\", line 588, in resolve\n    raise DistributionNotFound(req)\npkg_resources.DistributionNotFound: twitter.common.threading==0.1.0\n[1]    86182 exit 1     ./pants\n```\n\nResulting in pants always failing on following calls: \n\n```\n./pants help\nTraceback (most recent call last):\n  File \"/Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/bin/pants\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/lib/python2.7/site-packages/pkg_resources.py\", line 2716, in <module>\n    working_set.require(__requires__)\n  File \"/Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/lib/python2.7/site-packages/pkg_resources.py\", line 685, in require\n    needed = self.resolve(parse_requirements(requirements))\n  File \"/Users/fsaintjacques/src/twitter/commons/build-support/pants.venv/lib/python2.7/site-packages/pkg_resources.py\", line 588, in resolve\n    raise DistributionNotFound(req)\npkg_resources.DistributionNotFound: twitter.common.threading==0.1.0\n[1]    1544 exit 1     ./pants help\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wickman": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/296", "title": "twitter checkstyle T800 false positive on classes-within-classes", "body": "T800 incorrectly warns on this:\n\n``` python\n\nclass Foo(object):\n  class Command(object):\n    pass\n\n  class FooCommand(Foo.Command):\n    def __init__(self):\n      super(Foo.Command, self).__init__()\n```\n\nIt things that you should be doing self.Command instead of Foo.Command.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/issues/283", "title": "pex doesn't seem to work inside a python3.4 venv", "body": "It works in python3.4 virtualenv but not in python3.4 stdlib venv:\n\n``` shell\nmba=dist=; python3.4 -m venv pex34\nmba=dist=; source pex34/bin/activate\n(pex34) mba=dist=; pip install twitter.common.python-0.5.0.tar.gz\nUnpacking ./twitter.common.python-0.5.0.tar.gz\n  Running setup.py (path:/var/folders/4d/9tz0cd5n2n7947xs21gspsxc0000gp/T/pip-87yp7_4h-build/setup.py) egg_info for package from file:///Users/wickman/clients/commons/dist/twitter.common.python-0.5.0.tar.gz\n\nDownloading/unpacking wheel (from twitter.common.python==0.5.0)\n  Downloading wheel-0.23.0-py2.py3-none-any.whl (61kB): 61kB downloaded\nRequirement already satisfied (use --upgrade to upgrade): setuptools>=1 in ./pex34/lib/python3.4/site-packages (from twitter.common.python==0.5.0)\nInstalling collected packages: wheel, twitter.common.python\n  Running setup.py install for twitter.common.python\n    Skipping installation of /Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/twitter/__init__.py (namespace package)\n    Skipping installation of /Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/twitter/common/__init__.py (namespace package)\n\n    Installing /Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/twitter.common.python-0.5.0-py3.4-nspkg.pth\n    Installing pex script to /Users/wickman/clients/commons/dist/pex34/bin\nSuccessfully installed wheel twitter.common.python\nCleaning up...\n(pex34) mba=dist=; pex --repo=. -r twitter.common.python==0.5.0 -o pex34.pex -e twitter.common.python.bin.pex:main\n**** Failed to install twitter.common.python-0.5.0. stdout:\n\n**** Failed to install twitter.common.python-0.5.0. stderr:\nTraceback (most recent call last):\n  File \"<stdin>\", line 3, in <module>\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/setuptools/__init__.py\", line 11, in <module>\n    from setuptools.extension import Extension\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/setuptools/extension.py\", line 5, in <module>\n    from setuptools.dist import _get_unpatched\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/setuptools/dist.py\", line 16, in <module>\n    import pkg_resources\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/pkg_resources.py\", line 2717, in <module>\n    add_activation_listener(lambda dist: dist.activate())\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/pkg_resources.py\", line 682, in subscribe\n    callback(dist)\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/pkg_resources.py\", line 2717, in <lambda>\n    add_activation_listener(lambda dist: dist.activate())\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/pkg_resources.py\", line 2255, in activate\n    list(map(declare_namespace, self._get_metadata('namespace_packages.txt')))\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/pkg_resources.py\", line 1851, in declare_namespace\n    path = sys.modules[parent].__path__\nKeyError: 'twitter'\n\nTraceback (most recent call last):\n  File \"/Users/wickman/clients/commons/dist/pex34/bin/pex\", line 9, in <module>\n    load_entry_point('twitter.common.python==0.5.0', 'console_scripts', 'pex')()\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/twitter/common/python/bin/pex.py\", line 309, in main\n    pex_builder = build_pex(args, options)\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/twitter/common/python/bin/pex.py\", line 273, in build_pex\n    platform=options.platform)\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/twitter/common/python/resolver.py\", line 107, in resolve\n    new_requirements.update(requires(highest_package, requirement))\n  File \"/Users/wickman/clients/commons/dist/pex34/lib/python3.4/site-packages/twitter/common/python/resolver.py\", line 81, in requires\n    raise Untranslateable('Package %s is not translateable.' % package)\ntwitter.common.python.resolver.Untranslateable: Package SourcePackage('./twitter.common.python-0.5.0.tar.gz') is not translateable.\n(pex34) mba=dist=; deactivate\n```\n\nBut when using python3.4 with third party virtualenv:\n\n``` shell\nmba=dist=; python3.4 -m virtualenv pex34legacy\nUsing base prefix '/Users/wickman/Python/CPython-3.4.0'\nNew python executable in pex34legacy/bin/python3.4\nAlso creating executable in pex34legacy/bin/python\nInstalling setuptools, pip...done.\nmba=dist=; source pex34legacy/bin/activate\n(pex34legacy)mba=dist=; pip install twitter.common.python-0.5.0.tar.gz \nUnpacking ./twitter.common.python-0.5.0.tar.gz\n  Running setup.py (path:/var/folders/4d/9tz0cd5n2n7947xs21gspsxc0000gp/T/pip-8f3py8_s-build/setup.py) egg_info for package from file:///Users/wickman/clients/commons/dist/twitter.common.python-0.5.0.tar.gz\n\nDownloading/unpacking wheel (from twitter.common.python==0.5.0)\n  Downloading wheel-0.23.0-py2.py3-none-any.whl (61kB): 61kB downloaded\nRequirement already satisfied (use --upgrade to upgrade): setuptools>=1 in ./pex34legacy/lib/python3.4/site-packages (from twitter.common.python==0.5.0)\nInstalling collected packages: wheel, twitter.common.python\n  Running setup.py install for twitter.common.python\n    Skipping installation of /Users/wickman/clients/commons/dist/pex34legacy/lib/python3.4/site-packages/twitter/__init__.py (namespace package)\n    Skipping installation of /Users/wickman/clients/commons/dist/pex34legacy/lib/python3.4/site-packages/twitter/common/__init__.py (namespace package)\n\n    Installing /Users/wickman/clients/commons/dist/pex34legacy/lib/python3.4/site-packages/twitter.common.python-0.5.0-py3.4-nspkg.pth\n    Installing pex script to /Users/wickman/clients/commons/dist/pex34legacy/bin\nSuccessfully installed wheel twitter.common.python\nCleaning up...\n(pex34legacy)mba=dist=; pex --repo=. -r twitter.common.python==0.5.0 -o pex34legacy.pex -e twitter.common.python.bin.pex:main\n(pex34legacy)mba=dist=; ./pex34legacy.pex --help\nUsage: pex34legacy.pex [options]\n\npex34legacy.pex builds a PEX (Python Executable) file based on the given specifications: sources, requirements, their dependencies and other options\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  --pypi, --no-pypi     Whether to use pypi to resolve dependencies; Default:\n                        use pypi\n  --wheel, --no-wheel   Whether to allow wheel distributions; Default: allow\n                        wheels\n  --build, --no-build   Whether to allow building of distributions from\n                        source; Default: allow builds\n  --python=PYTHON       The Python interpreter to use to build the pex.\n                        Either specify an explicit path to an interpreter, or\n                        specify a binary accessible on $PATH. Default: Use\n                        current interpreter.\n  --platform=PLATFORM   The platform for which to build the PEX.  Default:\n                        %macosx-10.7-x86_64\n  --zip-safe, --not-zip-safe\n                        Whether or not the sources in the pex file are zip\n                        safe.  If they are not zip safe, they will be written\n                        to disk prior to execution; Default: zip safe.\n  --always-write-cache  Always write the internally cached distributions to\n                        disk prior to invoking the pex source code.  This can\n                        use less memory in RAM constrained environments.\n                        [Default: False]\n  --ignore-errors       Ignore run-time requirement resolution errors when\n                        invoking the pex. [Default: False]\n  --inherit-path        Inherit the contents of sys.path (including site-\n                        packages) running the pex. [Default: False]\n  --cache-dir=CACHE_DIR\n                        The local cache directory to use for speeding up\n                        requirement lookups; [Default:\n                        /Users/wickman/.pex/build]\n  -o PEX_NAME, -p PEX_NAME, --output-file=PEX_NAME, --pex-name=PEX_NAME\n                        The name of the generated .pex file: Omiting this will\n                        run PEX immediately and not save it to a file.\n  -e ENTRY_POINT, --entry-point=ENTRY_POINT\n                        The entry point for this pex; Omiting this will enter\n                        the python REPL with sources and requirements\n                        available for import.  Can be either a module or\n                        EntryPoint (module:function) format.\n  -r REQUIREMENT, --requirement=REQUIREMENT\n                        requirement to be included; may be specified multiple\n                        times.\n  --repo=PATH           Additional repository path (directory or URL) to look\n                        for requirements.\n  -s DIR, --source-dir=DIR\n                        Source to be packaged; This <DIR> should be a pip-\n                        installable project with a setup.py.\n  -v, --verbosity       Turn on logging verbosity.\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/4f26f742c997c64758d172aa203873b105d13860", "message": "Merge pull request #374 from atollena/fix-checkstyle\n\nPython linter: improvements to git intergration"}, {"url": "https://api.github.com/repos/twitter/commons/commits/729bb7ba873a96e23cb2951341b4080dc4e178ec", "message": "Merge pull request #372 from twitter/jsimms/add-timeouts-to-reviewboard\n\nAdd a timeout parameter to ReviewBoardServer"}, {"url": "https://api.github.com/repos/twitter/commons/commits/06aa816309d47e37483a1dd9df8c65ad984f0cf9", "message": "Add tests and a converge method to ThreadedClock.\n\nTesting Done:\nRan the tests.\n\nReviewed at https://rbcommons.com/s/twitter/r/1766/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/36beb2131e0a24fb00cc63a50d586260406e6745", "message": "Merge pull request #327 from simonrad/sradford/set_usage_based_on_commands\n\nAdd to Application class a method to set the usage message automatically."}, {"url": "https://api.github.com/repos/twitter/commons/commits/5a56f3fd8c5d66431d67d9a26d1fdfc07d4b7205", "message": "Alias twitter.common.python to pex instead of the other way around.\n\nReviewed at https://rbcommons.com/s/twitter/r/765/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/e696b6104c967a1bf5272422166b389a8e5836b7", "message": "RSTify changes and plumb through sdist.\n\nTesting Done:\nManually converted CHANGES with rst2html to validate that it looks sane.\nWill publish 0.6.0 to pypi following this, then work on the pex split to\npantsbuild.\n\nReviewed at https://rbcommons.com/s/twitter/r/749/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/d2005b749f21b13ae1812eb5997c3b50636b87cd", "message": "Merge pull request #309 from benjyw/update_dist_mtimes\n\nUpdate the mtime on retranslation of existing distributions."}, {"url": "https://api.github.com/repos/twitter/commons/commits/1bff97ef489a14fcf8e39be00acb6b998798743d", "message": "We should never ever overwrite distributions that have ever been in use.\n\nThis is intended to fix https://issues.apache.org/jira/browse/AURORA-583\n\nTesting Done:\nBuild pants.pantsbuild twitter.common.python>=0.5.9 and tests passed.  No\nincidents of bad file headers encountered.\n\nReviewed at https://rbcommons.com/s/twitter/r/684/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/32ab0758d6da7ec94f150a6c8a905e40c53ce26f", "message": "Add --index support to pex.  Add a CHANGES file.\n\nReviewed at https://rbcommons.com/s/twitter/r/577/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/20fabe1bb0126dc5124e0d3e0cb8e965c4f991a5", "message": "Increment twitter.common to 0.3.1\n\nReviewed at https://rbcommons.com/s/twitter/r/571/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/f09fbf0038e8e676eae804df7c2ecbe26a7d24af", "message": "twitter.common.app should delegate exceptions to sys.excepthook\n\nReviewed at https://rbcommons.com/s/twitter/r/570/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/c4a0cd39293142e9d7714cc58396735e284c77d8", "message": "Apply checkstyle license headers.\n\nTesting Done:\nmba=commons=; ./pants py src/python/twitter/checkstyle:check src/python/twitter/checkstyle\nmba=commons=; echo $?\n0\n\nReviewed at https://rbcommons.com/s/twitter/r/343/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/127673d5be943584dc8bd03ab89273186ab9abea", "message": "Apply twitter.checkstyle split to commons repository.\n\nReviewed at https://rbcommons.com/s/twitter/r/341/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/ca71427a087ba46b2c55ba8418b931281b9b0ecb", "message": "[PATCH 7258/7508] Revert \"Upgrade pants to twitter.common.python 0.5.4\"\n\nSee\nhttps://groups.google.com/a/twitter.com/d/msg/devprod/86c7AHUuurY/Lewgfw6530sJ\nabout the decision to do this.  The follow-up will be to unrevert this but\ntightly couple it with a deploy from master.\n\nRB_ID=346113\n\n(sapling split of f6ea8a913cc50030fa1031234b51847018cf85e2)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/aaf86d076fcf3fa4588c580419686b4632e5b05f", "message": "[PATCH 7120/7508] Upgrade pants to twitter.common.python 0.5.4\n\nThis review is a minor diff over https://reviewboard.twitter.biz//r/337041\nbut is intended to replace it since that version was based off a science\nwith commons source.\n\nThis pulls in the resolver/interpreter_cache from commons (which may have\ndiverged slightly from pantsbuild.)\n\nRB_ID=343895\n\n(sapling split of cbe222ed5e8795ca60a4266856a350738fd965dc)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/665dcff9251c7cdead59897de332cf82cbb71627", "message": "[PATCH 7052/7508] kill the majority of python commons from science\n\nKills the majority of commons from science.  Exceptions:\n  - twitter.common.app (app.modules prevent it from being consumed by publishable artifacts)\n  - twitter.common.http (same)\n  - twitter.common.zookeeper (test_server is tied closely to the repo because it invokes pants)\n\nIncrements aurora to the 0.3.0 commons release.  Increments science to the same 0.3.0 release.\n\nThis is the second attempt at a submit.  The previous submitqueue run:\n  http://dopey.twitter.biz/job/science_queue/6040/\n\nThere were two failures:\n  tests.python.twitter.aurora.client.hooks_internal.deploydb\n  tests.python.twitter.servermaint.test_state\n\nFor the former, patched and fixed:\ntests.python.twitter.aurora.client.hooks_internal.calendar                      .....   SUCCESS\ntests.python.twitter.aurora.client.hooks_internal.campfire                      .....   SUCCESS\ntests.python.twitter.aurora.client.hooks_internal.cm                            .....   SUCCESS\ntests.python.twitter.aurora.client.hooks_internal.common                        .....   SUCCESS\ntests.python.twitter.aurora.client.hooks_internal.deploydb                      .....   SUCCESS\ntests.python.twitter.aurora.client.hooks_internal.release_db                    .....   SUCCESS\n\nFor the latter, it was a spurious timeout.  Filed SRE-1127 to triage.\n\nRB_ID=342271\nNO-QUEUE=true\n\n(sapling split of 8541483225345a47427cdb3148be183b6d9a0afd)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/7189721", "body": "Could you make this a python_requirement instead of an egg in 3rdparty/python?  Our next drop will get rid of eggs from 3rdparty/python completely, and instead rely upon fetching them via HTTP (then cached locally.)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7189721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8412728", "body": "Could you run:\n\nPANTS_VERBOSE=1 PEX_VERBOSE=1 ./pants\n\nand paste the output?  Looks like pants is failing to bootstrap itself.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8412728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8430408", "body": "on LinuxMint, it looks like your Python environment is not set up to allow for C extensions to be built.  you probably need to install the development package for Python, i.e. headers and the like.\n\nthe has_label issue I believe was fixed by Benjy.  is this a fresh clone off master?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8430408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8441227", "body": "This seems related: https://github.com/twitter/commons/issues/66\n\nIt appears the pull request (/67) has been merged in.  Not sure why it's still breaking.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8441227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17693974", "body": "shipit\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17693974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17735790", "body": "shipit!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17735790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/twitter/commons/comments/5462997", "body": "FYI this is fixed in my rework_dependency_resolution branch:\n\n```\n--- a/src/python/twitter/pants/targets/python_target.py\n+++ b/src/python/twitter/pants/targets/python_target.py \n@@ -42,3 +42,10 @@ class PythonTarget(TargetWithDependencies, TargetWithSources):\n       except ValueError as e:\n         raise TargetDefinitionException(str(e))\n\n+  def resolve(self):\n+    for dep in super(PythonTarget, self).resolve():\n+      yield dep\n+    if self.provides:\n+      for binary in self.provides.binaries.values():\n+        for dep in binary.resolve():\n+          yield dep\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/5462997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/comments/5607866", "body": "damn!  ok.  i'll audit the code on monday and replace all the os.renames with safe_rename.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/5607866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/1582996", "body": "if getattr(target, 'internal_dependencies', None):\n  ...\n\nachieves the same thing\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/1582996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2012724", "body": "in general you want to avoid type(foo) == concrete_type and instead use isinstance, e.g. isinstance(classifiers, list).  of course, there are other iterable things that are not lists, so to be fully compatible, you might want something like:\n\n``` python\ndef maybe_list(value, expected_type=str):\n  from collections import Iterable\n  if isinstance(value, expected_type):\n    return [value]\n  elif isinstance(value, Iterable):\n    real_values = list(iter(value))\n    if not all(isinstance(v, expected_type) for v in real_values):\n      raise ValueError('Element of list is not of type %r' % expected_type)\n    return real_values\n  else:\n    raise ValueError('Value must be a %r or iterable of %r' % (expected_type, expected_type))\n```\n\nthen in several places in twitter-commons, we should just be doing, e.g.\n\nself.classifiers = maybe_list(classifiers)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2012724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4162447", "body": "Please build artifacts for macosx-10.4-x86_64\n\nAs it stands, 10.8-intel won't work with most Twitter laptops, including mine, whereas 10.4-x86_64 should include everything we've had in the last four years.\n\nSee https://gist.github.com/wickman/5550908 for a bootstrapper script for rolling your own set of Python interpreters that build 10.4-x86_64.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4162447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4162479", "body": "This doesn't make sense to me.  'platform' is never populated for SourceLinks -- how could this ever be used?  SourceLinks are only e.g. .zip, .tar.gz, .tgz.  Am I missing something?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/4162479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832246", "body": "recommend 'from twitter.common.http.server import request'\nshould the interface of twitter.common.http change in the future, this will make it easier to track users of the 'request' object.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832320", "body": "no trailing slashes, instead do\nhelp = 'foo bar'\n           'baz bak'\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832400", "body": "rather than making comma reserved, you could just do default=[], action='append' and then allow the user to specify the flag multiple times, e.g. --vars-stats-filter foo --vars-stats-filter bar\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832518", "body": "vars_subsystem (no camelCase)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832526", "body": "no ()s on asserts\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832546", "body": "no spaces before/after '=' in the keyword arguments of VarsEndpoint()\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/13832546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "slyphon": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/294", "title": "Race condition in twitter.common.dirutil.lock.Lock", "body": "There's a pretty bad race condition in `src/python/twitter/common/dirutil/lock.py` \n\nIn [this section](https://github.com/twitter/commons/blob/master/src/python/twitter/common/dirutil/lock.py#L45-L54), the logic is:\n- try to acquire the lock, non-blocking\n- If we fail, _read the contents of the lock file without any synchronization_\n- call the user given function with the contents of the file\n- depending on the results of the user given function, maybe try to lock again.\n\nThe problem is that between line 45 and line 54:\n- A tries to grab the lock and fails\n- B (the original holder of the lock) releases the lock\n- A reads the file, thinks B holds the lock\n- C acquires the lock, zeros the file, writes its PID\n- A now thinks B holds the lock when its C, and has made a decision about whether to wait based on the contents of the file.\n\nI witnessed several cases where processes would deadlock, or incorrectly assume that they held the lock when they didn't because of this. Additionally, the function should call `os.fsync()` after writing the new value to the file, as noted in the docs:\n\n> flush() does not necessarily write the file\u2019s data to disk. Use flush() followed by os.fsync() to ensure this behavior.\n\nI tried to think of a way of preserving the existing semantics while only using a single file, but as far as I can tell, you can't. For my own purposes, I needed a same-process-reentrant flock, and used [this implementation](https://gist.github.com/slyphon/4e06594f5d0aabf23f07).\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/5aad9bf3f1ab94223ea583d50ffc6a2c261b7e9d", "message": "Add a timeout parameter to ReviewBoardServer\n\nPass through a timeout parameter to urllib2.urlopen"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40160031", "body": "use os.path.join() on these two things. \"Causing no harm\" doesn't mean it's not incorrect. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40160031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163008", "body": "In what way are the rules of url joins different from path joins, when you're trying to join an element to the end of a url? In what instance do you see this failing?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163257", "body": "Wait\n\n``` py\n>>> \"%sr/%s\" % (url, \"fungus\")\n'https://foo.host/bar/r/fungus'\n>>> url + \"r/%s\" % (\"fungus\",)\n'https://foo.host/bar/r/fungus'\n```\n\nyou need to put a ',' in your tuple when using % interpolation. the ',' is what makes it a tuple, not the parens.\n\nThe point being there's no semantic difference between your suggestion and @landism's original diff.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163356", "body": "@jsirois yeah, i had that thought in backchannel conversations. It's never come up for me, but yeah, I suppose if someone ran it on windows it could cause issues.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40163356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "agura": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/292", "title": "common net: Forced backends reviving not always needs in MarkDeadStrategy.", "body": "**Use case:** \n\nIf all backends marked as dead throw `TResourceExhaustedException`, handle it in client code and use failover transport (JMS for example).\n\n**Possible solution:**\n\nConfigure `MarkDeadStrategy` during instantiation with flag`reviveDeadBackend`s. At method `adjustBackends` use code `liveBackends.isEmpty() && reviveDeadBackends` instead of `liveBackends.isEmpty()`.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Tinche": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/287", "title": "pex: support -m?", "body": "It'd be useful if PEX environments without a defined entry point supported -m (in the sense of PEP 338). I realize this can already be achieved with PEX_MODULE so it's not a big priority or anything, just a nicer user experience, and a little closer to a normal (clean) Python interpreter.\n\nHm, now I'm curious why PEX doesn't just forward all arguments to the normal Python interpreter when an entry point is not set.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "itayd": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/286", "title": "Missing comma in dependencies causes pants to emit \"no valid targets found\" instead of properly erring out.", "body": "for example, in a BUILD file:\n\n``` python\npython_library(\n  name = 'foo',\n  sources = ['foo.py'],\n  dependencies = [\n    pants('i forgot to put a comma at the end, here ->')\n    pants('i am ok!'),\n    pants('last one!')\n  ]\n)\n```\n\nthen\n\n```\n./pants py foo\n```\n\ngives\n\n```\n\"No valid target specified!\"\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "trustin": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/278", "title": "pants: Choose higher python version when system has both 2.6 and 2.7", "body": "My system has both /usr/bin/python2.6 and /usr/bin/python2.7.  When there are two python versions in a system, pants seems to choose 2.6.  Perhaps it should choose the highest supported version to take advantage of potential performance improvements on the python side?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/277", "title": "pants: Use relative path for symlinks, etc", "body": "I moved my monorepo to other directory e.g.\n\n```\n$ cd mycompany/repos\n$ mv monorepo1 ..\n$ rmdir repos\n```\n\nThen I started to see the nailgun error described here: http://pantsbuild.github.io/tshoot.html#washpants\n\nThe problem goes away once I follow the instruction, but I guess this issue could be avoided if pants uses relative paths against `pants.ini`.  Currently, `pants` refuses to start unless there's `pants.ini` in the current working directory, so using relative paths should not introduce a problem probably?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/276", "title": "pants: Print the project being built", "body": "When I build a repository recursively, it would be very useful if Pants prints when it visits a project.  For example:\n\n```\nBuilding: finagle/finagle-thrift/BUILD:finagle-thrift (goal compile)\n...\nFinished building: finagle/finagle-thrift/BUILD:finagle-thrift (goal compile)\nBuilding: finagle/finagle-example/BUILD:finagle-example (goal compile)\n...\nFinished building: finagle/finagle-example/BUILD:finagle-example (goal compile)\n```\n\nIt would be fantastic if it is printed in fancy light green.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/275", "title": "pants: Automatic artifact transfer retrial and resuming", "body": "Sometimes, an artifact downloaded by Pants (via Ivy) is larger than 90 megabytes.  On a fast quality network, it's not a problem.  However, when I'm on VPN or 3G/4G network, the connection often times out before the transfer is finished.\n\nIt will be very very helpful if Pants (or Ivy) retry and resume the failed transfer multiple times.  I think it will not affect the stability of the build as long as we check the checksum of the artifact being transferred.\n\nAnother thing to consider is to implement the retrial of pom.xml and *.sha1/md5/asc downloads.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/274", "title": "pants: parallel dependency downloads", "body": "Pants downloads Maven poms and artifacts sequentially.  It is not a problem when my connection is fast, but it is otherwise.  Especially, the amount of round-trips that takes while resolving transitive dependencies can somtimes way too long.  It will reduce the time taken for downloading all dependency artifacts if Pants:\n- downloads pom.xmls and JARs simultaneously (with sensible default parallelism), and\n- starts to download JARs even if the dependency graph was not resolved completely yet,\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/273", "title": "pants: Allow overriding ivysettings.xml or prepend a repository to the chain", "body": "It would be great if it is possible to override ivysettings.xml or prepend another repository to the chain.\n\nThe reason I need it is because I run a Sonatype Nexus repository at localhost to cache both central and twitter m2 repository.  It gives me freedom to zap my ~/.m2/repository ~/.ivy etc and not to worry about downloading the Internet ever again.  Also, it is a very nice offline search tool for maven artifacts.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "patricklaw": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/256", "title": "Spurious failure when dumping a chroot", "body": "This seems very likely to be related to 2ffb09f5cc30639c0667337315667a03919c779e.  Here's the trace of what we're seeing on the CI machine: https://gist.github.com/patricklaw/64ff73a57cdc9cb1b7c9\n\nThis is our internal process for running pylint over our python codebase.  It aggregates PylintSpec targets, injects the dependency spec for pylint (pylint>=1.1.0), then dumps that chroot.  Because we keep our egg download cache project local rather than user local, there should not be two instances of pants ever accessing this particular file concurrently.  Therefore it seems like something within pants itself might be.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davidzchen": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/250", "title": "pants.ini and default settings", "body": "I was able to successfully install Pants using Pip, but I that if no pants.ini exists, then pants will simply print a \"Could not find pants.ini\" and quit, even when running `pants --help` or `pants --version`.\n\nIf pants cannot find pants.ini, then should it revert to a set of default settings instead? Another option may be to create a .pantsrc in the user's home directory automatically the first time pants is run if it does not already exist. The pants.ini in a project root would override the settings in a user's .pantsrc.\n\nAlso, I think that pants should still be able to print help text and version even if pants.ini is not found.\n\nI'd be happy to help out with making some of these changes as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gxy837": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/248", "title": "Invalid signature file digest ", "body": "I generated a jar by running ./pants goal binary --binary-deployjar ...\n\nWhen I tried to run the jar, an issue happens:\nException in thread \"main\" java.lang.SecurityException: Invalid signature file digest for Manifest main attributes\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jwaldrop": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/232", "title": "pants.ini is out of date", "body": "clone the repo, attempt to run basic commands:\n\n./pants goal list\n2014-03-03 17:01:13,848 pants:57 - Required pants.ini key DEFAULT.pants_version is not present. Please add the option and try again.\n\nadding a version reveals more missing, with no sense of just how much will need to be added. (DEFAULT.pants_pex_baseurl was the next thing.)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "neutrinus": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/228", "title": "DistributionNotFound: PythonRequirement() on Raspberry Pi (armhf)", "body": "I try to build our application on Raspberry PI (http://www.raspberrypi.org/) with python pants. Actually I'm doing this in raspbian run in qemu (http://xecdesign.com/qemu-emulating-raspberry-pi-the-easy-way/) - this is the easiest way to reproduce it without having a raspberry pi hardware.\n\n```\n(deploy)pi@raspberrypi ~/wh-monit/src $ pants --version\n0.0.11\n(deploy)pi@raspberrypi ~/wh-monit/src $ pip search twitter.pants\ntwitter.pants             - Twitter's pants build tool.\n  INSTALLED: 0.0.14-dev2 (latest)\n(deploy)pi@raspberrypi ~/wh-monit/src $ PANTS_VERBOSE=1 PYTHON_VERBOSE=2 pants build :agent\ntwitter.common.python: Installing /tmp/tmprKyccE: 7718.0ms\ntwitter.common.python: Installing /tmp/tmp14nUtZ: 6309.7ms\ntwitter.common.python: Installing /tmp/tmpgU_Qgl: 6415.6ms\nBuild operating on targets: OrderedSet([PythonBinary(BUILD:agent)])\nBuilding PythonBinary PythonBinary(BUILD:agent):\nBuilding PythonBinary PythonBinary(BUILD:agent):\n  Dumping library: PythonLibrary(BUILD:agent-lib)\n  Dumping library: PythonLibrary(BUILD:common-lib-deps)\n  Dumping library: PythonLibrary(BUILD:common-lib-agent)\n  Dumping library: PythonBinary(BUILD:agent)\n  Dumping requirement: requests==1.2.3\n  Dumping requirement: sh==1.09\n  Dumping requirement: RPi.GPIO==0.5.3a\n  Dumping requirement: procname==0.3\n  Dumping requirement: psutil==1.1.0\n  Dumping requirement: pyOpenSSL==0.13.1\n  Dumping requirement: python-dateutil==2.1\n  Dumping requirement: dicts==0.3.1\n  Dumping requirement: nanotime==0.5.2\n  Dumping requirement: pytz==2013b\n  Dumping requirement: blist==1.3.4\n  Dumping requirement: websocket-client==0.12.0\n  Dumping requirement: furl==0.3.4\n  Dumping requirement: voluptuous==0.8.0\n  Dumping requirement: pyyaml\ntwitter.common.python: Obtaining PythonRequirement(pyyaml): 6.9ms\nFailed to find distribute in sys.path!nRequirement(pyyaml) :: Distilling PyYAML\nFailed to find distribute in sys.path!nRequirement(pyyaml) :: Distilling PyYAML\ntwitter.common.python: Obtaining PythonRequirement(pyyaml): 8599.5ms           \ntwitter.common.python:   Installing PyYAML: 4.3ms\ntwitter.common.python:   Distilling PyYAML: 3.4ms\ntwitter.common.python:   Installing PyYAML: 3.8ms\ntwitter.common.python:   Distilling PyYAML: 2.7ms\nProblem executing PythonBuilder for targets OrderedSet([PythonBinary(BUILD:agent)]): Traceback (most recent call last):\n  File \"/home/pi/.virtualenvs/deploy/local/lib/python2.7/site-packages/twitter/pants/commands/build.py\", line 126, in _python_build\n    conn_timeout=self.options.conn_timeout)\n  File \"/home/pi/.virtualenvs/deploy/local/lib/python2.7/site-packages/twitter/pants/python/python_builder.py\", line 57, in build\n    conn_timeout=conn_timeout).run()\n  File \"/home/pi/.virtualenvs/deploy/local/lib/python2.7/site-packages/twitter/pants/python/binary_builder.py\", line 56, in run\n    env = self.chroot.dump()\n  File \"/home/pi/.virtualenvs/deploy/local/lib/python2.7/site-packages/twitter/pants/python/python_chroot.py\", line 190, in dump\n    platforms=platforms)\n  File \"/home/pi/.virtualenvs/deploy/local/lib/python2.7/site-packages/twitter/pants/python/resolver.py\", line 117, in resolve_multi\n    distributions[platform] = working_set.resolve(requirements, env=env, installer=installer)\n  File \"/home/pi/.virtualenvs/deploy/local/lib/python2.7/site-packages/distribute-0.6.24-py2.7.egg/pkg_resources.py\", line 584, in resolve\n    raise DistributionNotFound(req)\nDistributionNotFound: PythonRequirement(pyyaml)\n\n\nUsage: \n  pants build (options) [spec] (build args)\n  pants build (options) [spec]... -- (build args)\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  --no-pantsrc          Specifies that pantsrc files should be ignored.\n  --log-exit            Log an exit message on success or failure.\n  -t CONN_TIMEOUT, --timeout=CONN_TIMEOUT\n                        Number of seconds to wait for http connections.\n  -i INTERPRETER, --interpreter=INTERPRETER\n                        The interpreter requirement for this chroot.\n  -v, --verbose         Show verbose output.\n\nBuilds the specified python target(s).\n```\n\nIt's not about pyyaml, when I remove this dependency it would fail on voluptuous, then furl etc.  Installing those packets via pip works perfectly:\n\n```\n(deploy)pi@raspberrypi ~/wh-monit/src $ pip install pyyaml\nDownloading/unpacking pyyaml\n  Downloading PyYAML-3.10.tar.gz (241Kb): 241Kb downloaded\n  Running setup.py egg_info for package pyyaml\n\nInstalling collected packages: pyyaml\n  Running setup.py install for pyyaml\n    checking if libyaml is compilable\n    gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c build/temp.linux-armv6l-2.7/check_libyaml.c -o build/temp.linux-armv6l-2.7/check_libyaml.o\n    checking if libyaml is linkable\n    gcc -pthread build/temp.linux-armv6l-2.7/check_libyaml.o -lyaml -o build/temp.linux-armv6l-2.7/check_libyaml\n    building '_yaml' extension\n    gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c ext/_yaml.c -o build/temp.linux-armv6l-2.7/ext/_yaml.o\n    In file included from ext/_yaml.c:223:0:\n    ext/_yaml.h:6:0: warning: \"PyUnicode_FromString\" redefined [enabled by default]\n    /usr/include/python2.7/unicodeobject.h:281:0: note: this is the location of the previous definition\n    ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_get_version_string\u2019:\n    ext/_yaml.c:1145:17: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [enabled by default]\n    ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_7CParser___init__\u2019:\n    ext/_yaml.c:2074:38: warning: passing argument 2 of \u2018yaml_parser_set_input\u2019 from incompatible pointer type [enabled by default]\n    /usr/include/yaml.h:1367:1: note: expected \u2018int (*)(void *, unsigned char *, size_t,  size_t *)\u2019 but argument is of type \u2018int (*)(void *, char *, int,  int *)\u2019\n    ext/_yaml.c:2272:45: warning: pointer targets in passing argument 2 of \u2018yaml_parser_set_input_string\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:1341:1: note: expected \u2018const unsigned char *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__token_to_object\u2019:\n    ext/_yaml.c:3705:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:3705:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:3718:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:3718:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:4285:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:4285:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:4339:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:4339:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:4393:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:4393:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:4406:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:4406:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:4493:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__event_to_object\u2019:\n    ext/_yaml.c:5909:9: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:5909:9: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:5922:9: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:5922:9: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6088:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6088:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6163:7: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6163:7: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6200:7: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6200:7: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6216:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6520:7: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6520:7: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6557:7: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6557:7: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6747:7: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6747:7: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6784:7: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:6784:7: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_node\u2019:\n    ext/_yaml.c:8064:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:8064:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:8284:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:8284:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:8315:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:8315:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:8346:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:8346:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_scalar_node\u2019:\n    ext/_yaml.c:8861:3: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:9019:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:9019:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_sequence_node\u2019:\n    ext/_yaml.c:9461:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:9461:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_7CParser__compose_mapping_node\u2019:\n    ext/_yaml.c:9998:5: warning: pointer targets in passing argument 1 of \u2018strlen\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/string.h:399:15: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c:9998:5: warning: pointer targets in passing argument 1 of \u2018PyUnicodeUCS4_DecodeUTF8\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/python2.7/unicodeobject.h:750:23: note: expected \u2018const char *\u2019 but argument is of type \u2018yaml_char_t *\u2019\n    ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_8CEmitter___init__\u2019:\n    ext/_yaml.c:11065:38: warning: passing argument 2 of \u2018yaml_emitter_set_output\u2019 from incompatible pointer type [enabled by default]\n    /usr/include/yaml.h:1829:1: note: expected \u2018int (*)(void *, unsigned char *, size_t)\u2019 but argument is of type \u2018int (*)(void *, char *, int)\u2019\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_8CEmitter__object_to_event\u2019:\n    ext/_yaml.c:12199:44: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\n    ext/_yaml.c:12300:44: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\n    ext/_yaml.c:12563:5: warning: pointer targets in passing argument 2 of \u2018yaml_alias_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:553:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:13168:5: warning: pointer targets in passing argument 2 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:13168:5: warning: pointer targets in passing argument 3 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:13168:5: warning: pointer targets in passing argument 4 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:13521:5: warning: pointer targets in passing argument 2 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:13521:5: warning: pointer targets in passing argument 3 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:13874:5: warning: pointer targets in passing argument 2 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:13874:5: warning: pointer targets in passing argument 3 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c: In function \u2018__pyx_pf_5_yaml_8CEmitter_6serialize\u2019:\n    ext/_yaml.c:15082:42: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\n    ext/_yaml.c:15183:42: warning: pointer targets in assignment differ in signedness [-Wpointer-sign]\n    ext/_yaml.c: In function \u2018__pyx_f_5_yaml_8CEmitter__serialize_node\u2019:\n    ext/_yaml.c:15863:5: warning: pointer targets in passing argument 2 of \u2018yaml_alias_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:553:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:16500:7: warning: pointer targets in passing argument 2 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:16500:7: warning: pointer targets in passing argument 3 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:16500:7: warning: pointer targets in passing argument 4 of \u2018yaml_scalar_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:578:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:16790:7: warning: pointer targets in passing argument 2 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:16790:7: warning: pointer targets in passing argument 3 of \u2018yaml_sequence_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:601:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:17193:7: warning: pointer targets in passing argument 2 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    ext/_yaml.c:17193:7: warning: pointer targets in passing argument 3 of \u2018yaml_mapping_start_event_initialize\u2019 differ in signedness [-Wpointer-sign]\n    /usr/include/yaml.h:633:1: note: expected \u2018yaml_char_t *\u2019 but argument is of type \u2018char *\u2019\n    gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-z,relro build/temp.linux-armv6l-2.7/ext/_yaml.o -lyaml -o build/lib.linux-armv6l-2.7/_yaml.so\n\nSuccessfully installed pyyaml\nCleaning up...\n(deploy)pi@raspberrypi ~/wh-monit/src $ python\nPython 2.7.3 (default, Jan 13 2013, 11:20:46) \n[GCC 4.6.3] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import yaml\n>>> \n(deploy)pi@raspberrypi ~/wh-monit/src $ \n```\n\nI know that I can build locally eggs and then pass them to pants, but it's very inconvenient.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/215", "title": "pants depends on HOME env variable ", "body": "I've created a pex file with pants (0.0.13). When I try to run it via supervisord(3.0b2-1), there is a problem with _pex_info.install_cache:\n\n```\ntwitter.common.python.pex: Establishing local cache\ntwitter.common.python.pex: Establishing local cache: 0.1ms\ntwitter.common.python.pex: Calling environment super\ntwitter.common.python.pex: Calling environment super: 0.0ms\ntwitter.common.python.pex: Using prescribed entry point: whmonit.collector.collector\ntwitter.common.python.pex: Found site-library: /usr/lib/python2.7/dist-packages\ntwitter.common.python.pex: Inspecting path element: /usr/lib/python2.7/dist-packages\ntwitter.common.python.pex: Scrubbing from site-packages: /usr/lib/python2.7/dist-packages\ntwitter.common.python.pex: Resolving python-dateutil==2.1\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding mockredispy 2.7.5.1:/home/whcollector/collector.pex/.deps/mockredispy-2.7.5.1-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding psutil 1.1.0:/home/whcollector/collector.pex/.deps/psutil-1.1.0-py2.7-linux-x86_64.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding dulwich 0.9.4:/home/whcollector/collector.pex/.deps/dulwich-0.9.4-py2.7-linux-x86_64.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding anyjson 0.3.3:/home/whcollector/collector.pex/.deps/anyjson-0.3.3-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding pylru 1.0.6:/home/whcollector/collector.pex/.deps/pylru-1.0.6-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding psycopg2 2.5.1:/home/whcollector/collector.pex/.deps/psycopg2-2.5.1-py2.7-linux-x86_64.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding tornado 3.1:/home/whcollector/collector.pex/.deps/tornado-3.1-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding itsdangerous 0.22:/home/whcollector/collector.pex/.deps/itsdangerous-0.22-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding SQLAlchemy 0.8.1:/home/whcollector/collector.pex/.deps/SQLAlchemy-0.8.1-py2.7-linux-x86_64.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding procname 0.3:/home/whcollector/collector.pex/.deps/procname-0.3-py2.7-linux-x86_64.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding orderedmultidict 0.7.1:/home/whcollector/collector.pex/.deps/orderedmultidict-0.7.1-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding dicts 0.3.1:/home/whcollector/collector.pex/.deps/dicts-0.3.1-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding python-graph-core 1.8.2:/home/whcollector/collector.pex/.deps/python_graph_core-1.8.2-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding requests 1.2.3:/home/whcollector/collector.pex/.deps/requests-1.2.3-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding six 1.5.2:/home/whcollector/collector.pex/.deps/six-1.5.2-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding python-dateutil 2.1:/home/whcollector/collector.pex/.deps/python_dateutil-2.1-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding redismock 1.0.5:/home/whcollector/collector.pex/.deps/redismock-1.0.5-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding furl 0.3.4:/home/whcollector/collector.pex/.deps/furl-0.3.4-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding blist 1.3.4:/home/whcollector/collector.pex/.deps/blist-1.3.4-py2.7-linux-x86_64.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding nanotime 0.5.2:/home/whcollector/collector.pex/.deps/nanotime-0.5.2-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding setuptools 2.1:/home/whcollector/collector.pex/.deps/setuptools-2.1-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding kombu 2.5.16:/home/whcollector/collector.pex/.deps/kombu-2.5.16-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding PyYAML 3.10:/home/whcollector/collector.pex/.deps/PyYAML-3.10-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding billiard 2.7.3.34:/home/whcollector/collector.pex/.deps/billiard-2.7.3.34-py2.7-linux-x86_64.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding RPi.GPIO 0.5.3a:/home/whcollector/collector.pex/.deps/RPi.GPIO-0.5.3a-py2.7-linux-x86_64.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding redis 2.8.0:/home/whcollector/collector.pex/.deps/redis-2.8.0-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding amqp 1.0.13:/home/whcollector/collector.pex/.deps/amqp-1.0.13-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding voluptuous 0.8.0:/home/whcollector/collector.pex/.deps/voluptuous-0.8.0-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding pytz 2013b:/home/whcollector/collector.pex/.deps/pytz-2013b-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding celery 3.0.19:/home/whcollector/collector.pex/.deps/celery-3.0.19-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding pyOpenSSL 0.13.1:/home/whcollector/collector.pex/.deps/pyOpenSSL-0.13.1-py2.7-linux-x86_64.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1 :: Activating cache /home/whcollector/collector.pex/.deps :: Adding sh 1.09:/home/whcollector/collector.pex/.deps/sh-1.09-py2.7.egg\ntwitter.common.python.pex: Resolving python-dateutil==2.1: 142.4ms\ntwitter.common.python.pex:   Activating cache /home/whcollector/collector.pex/.deps: 141.8ms\ntwitter.common.python.pex:     Adding mockredispy 2.7.5.1:/home/whcollector/collector.pex/.deps/mockredispy-2.7.5.1-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding psutil 1.1.0:/home/whcollector/collector.pex/.deps/psutil-1.1.0-py2.7-linux-x86_64.egg: 0.1ms\ntwitter.common.python.pex:     Adding dulwich 0.9.4:/home/whcollector/collector.pex/.deps/dulwich-0.9.4-py2.7-linux-x86_64.egg: 0.1ms\ntwitter.common.python.pex:     Adding anyjson 0.3.3:/home/whcollector/collector.pex/.deps/anyjson-0.3.3-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding pylru 1.0.6:/home/whcollector/collector.pex/.deps/pylru-1.0.6-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding psycopg2 2.5.1:/home/whcollector/collector.pex/.deps/psycopg2-2.5.1-py2.7-linux-x86_64.egg: 0.1ms\ntwitter.common.python.pex:     Adding tornado 3.1:/home/whcollector/collector.pex/.deps/tornado-3.1-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding itsdangerous 0.22:/home/whcollector/collector.pex/.deps/itsdangerous-0.22-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding SQLAlchemy 0.8.1:/home/whcollector/collector.pex/.deps/SQLAlchemy-0.8.1-py2.7-linux-x86_64.egg: 0.2ms\ntwitter.common.python.pex:     Adding procname 0.3:/home/whcollector/collector.pex/.deps/procname-0.3-py2.7-linux-x86_64.egg: 0.1ms\ntwitter.common.python.pex:     Adding orderedmultidict 0.7.1:/home/whcollector/collector.pex/.deps/orderedmultidict-0.7.1-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding dicts 0.3.1:/home/whcollector/collector.pex/.deps/dicts-0.3.1-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding python-graph-core 1.8.2:/home/whcollector/collector.pex/.deps/python_graph_core-1.8.2-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding requests 1.2.3:/home/whcollector/collector.pex/.deps/requests-1.2.3-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding six 1.5.2:/home/whcollector/collector.pex/.deps/six-1.5.2-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding python-dateutil 2.1:/home/whcollector/collector.pex/.deps/python_dateutil-2.1-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding redismock 1.0.5:/home/whcollector/collector.pex/.deps/redismock-1.0.5-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding furl 0.3.4:/home/whcollector/collector.pex/.deps/furl-0.3.4-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding blist 1.3.4:/home/whcollector/collector.pex/.deps/blist-1.3.4-py2.7-linux-x86_64.egg: 0.1ms\ntwitter.common.python.pex:     Adding nanotime 0.5.2:/home/whcollector/collector.pex/.deps/nanotime-0.5.2-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding setuptools 2.1:/home/whcollector/collector.pex/.deps/setuptools-2.1-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding kombu 2.5.16:/home/whcollector/collector.pex/.deps/kombu-2.5.16-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding PyYAML 3.10:/home/whcollector/collector.pex/.deps/PyYAML-3.10-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding billiard 2.7.3.34:/home/whcollector/collector.pex/.deps/billiard-2.7.3.34-py2.7-linux-x86_64.egg: 0.1ms\ntwitter.common.python.pex:     Adding RPi.GPIO 0.5.3a:/home/whcollector/collector.pex/.deps/RPi.GPIO-0.5.3a-py2.7-linux-x86_64.egg: 0.1ms\ntwitter.common.python.pex:     Adding redis 2.8.0:/home/whcollector/collector.pex/.deps/redis-2.8.0-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding amqp 1.0.13:/home/whcollector/collector.pex/.deps/amqp-1.0.13-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding voluptuous 0.8.0:/home/whcollector/collector.pex/.deps/voluptuous-0.8.0-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding pytz 2013b:/home/whcollector/collector.pex/.deps/pytz-2013b-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding celery 3.0.19:/home/whcollector/collector.pex/.deps/celery-3.0.19-py2.7.egg: 0.1ms\ntwitter.common.python.pex:     Adding pyOpenSSL 0.13.1:/home/whcollector/collector.pex/.deps/pyOpenSSL-0.13.1-py2.7-linux-x86_64.egg: 0.1ms\ntwitter.common.python.pex:     Adding sh 1.09:/home/whcollector/collector.pex/.deps/sh-1.09-py2.7.egg: 0.1ms\ntwitter.common.python.pex: Activated python-dateutil 2.1\ntwitter.common.python.pex: Activated python-dateutil 2.1 :: Locally caching\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/home/whcollector/collector.pex/__main__.py\", line 24, in <module>\n  File \"/home/whcollector/collector.pex/.bootstrap/_twitter_common_python/pex_bootstrapper.py\", line 54, in bootstrap_pex\n  File \"/home/whcollector/collector.pex/.bootstrap/_twitter_common_python/pex.py\", line 145, in execute\n  File \"/home/whcollector/collector.pex/.bootstrap/_twitter_common_python/pex.py\", line 403, in activate\n  File \"/home/whcollector/collector.pex/.bootstrap/_twitter_common_python/util.py\", line 49, in maybe_locally_cache\n  File \"/home/whcollector/collector.pex/.bootstrap/_twitter_common_python/common.py\", line 100, in safe_mkdir\n  File \"/usr/lib/python2.7/os.py\", line 150, in makedirs\n    makedirs(head, mode)\n  File \"/usr/lib/python2.7/os.py\", line 157, in makedirs\n    mkdir(name, mode)\nOSError: [Errno 13] Permission denied: '/root/.pex'\n\n```\n\nMy supervisord config:\n\n```\n[program:wh_collector]\ncommand=/home/whcollector/collector.pex\nautorestart=true\nstartsecs=20\nstopasgroup=true\nkillasgroup=true\nuser=whcollector\ngroup=whcollector\nstdout_logfile=/home/whcollector/logs/stdout\nstderr_logfile=/home/whcollector/logs/stderr\ndirectory=/home/whcollector/\nenvironment=PEX_FOCE_LOCAL=\"1\", PANTS_DEV=1, PEX_VERBOSE=10, \n```\n\nWhen I add a HOME to environment it works like a charm. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/204", "title": "./pants.bootstrap wants to write on /local ", "body": "```\ncopying setuptools/tests/test_markerlib.py -> build/lib/setuptools/tests\ncopying setuptools/tests/test_dist_info.py -> build/lib/setuptools/tests\nrunning install_lib\ncreating /local\n\nFailed to install stderr:\nerror: could not create '/local': Permission denied\n\nTraceback (most recent call last):\n  File \"./src/python/twitter/pants/bin/pants_exe.py\", line 182, in <module>\n    main()\n  File \"./src/python/twitter/pants/bin/pants_exe.py\", line 176, in main\n    _run()\n  File \"./src/python/twitter/pants/bin/pants_exe.py\", line 148, in _run\n    command = command_class(run_tracker, root_dir, parser, command_args)\n  File \"/home/marek/tmp/pants/commons/src/python/twitter/pants/commands/build.py\", line 59, in __init__\n    self.interpreter_cache.setup()\n  File \"/home/marek/tmp/pants/commons/src/python/twitter/pants/python/interpreter_cache.py\", line 134, in setup\n    self.setup_paths(setup_paths)\n  File \"/home/marek/tmp/pants/commons/src/python/twitter/pants/python/interpreter_cache.py\", line 114, in setup_paths\n    self.setup_interpreter(interpreter)\n  File \"/home/marek/tmp/pants/commons/src/python/twitter/pants/python/interpreter_cache.py\", line 94, in setup_interpreter\n    self.setup_distribute(interpreter, interpreter_dir)\n  File \"/home/marek/tmp/pants/commons/src/python/twitter/pants/python/interpreter_cache.py\", line 81, in setup_distribute\n    dist = installer.distribution()\n  File \"/home/marek/tmp/pants/commons/src/python/twitter/common/python/installer.py\", line 24, in function_wrapper\n    raise Installer.InstallFailure('Failed to install %s' % self._source_dir)\ntwitter.common.python.installer.InstallFailure: Failed to install /tmp/tmprPKhA4/setuptools-2.1\nUnable to build pants!  Cannot continue!\n\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BrianArb": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/216", "title": "Tests fail TaskError: Failed to fetch binary", "body": "./pants tests/python/twitter/pants:all\n\ntests/python/twitter/pants/python/test_resolver.py .\n\n=================================================== 1 passed in 0.23 seconds ====================================================\nFailed to run test!\nTraceback (most recent call last):\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/python/test_builder.py\", line 204, in _run_python_test\n    builder = chroot.dump()\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/python/python_chroot.py\", line 164, in dump\n    self.MEMOIZED_THRIFTS[thr] = self._generate_thrift_requirement(thr)\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/python/python_chroot.py\", line 134, in _generate_thrift_requirement\n    return self._generate_requirement(library, PythonThriftBuilder)\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/python/python_chroot.py\", line 125, in _generate_requirement\n    sdist = builder.build(interpreter=self._interpreter)\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/python/code_generator.py\", line 101, in build\n    self.generate()\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/python/thrift_builder.py\", line 82, in generate\n    self.run_thrifts()\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/python/thrift_builder.py\", line 42, in run_thrifts\n    if not self._run_thrift(src, bases):\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/python/thrift_builder.py\", line 51, in _run_thrift\n    select_thrift_binary(self.config),\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/thrift_util.py\", line 128, in select_thrift_binary\n    return select_binary(thrift_supportdir, thrift_version, 'thrift', config)\n  File \"/home/brianarb/github/commons/pants.pex/twitter/pants/binary_util.py\", line 92, in select_binary\n    raise TaskError('Failed to fetch binary from %s: %s' % (url, e))\nTaskError: Failed to fetch binary from http://maven.twttr.com/twitter-commons/pants/build-support/bin/thrift/linux/i386/0.5.0-finagle/thrift: HTTP Error 404: Not Found\ntests.python.twitter.pants.base.base                                            .....   SUCCESS\ntests.python.twitter.pants.buildtimestats.buildtimestats                        .....   SUCCESS\ntests.python.twitter.pants.cache.cache                                          .....   SUCCESS\ntests.python.twitter.pants.commands.commands                                    .....   SUCCESS\ntests.python.twitter.pants.fs.fs                                                .....   SUCCESS\ntests.python.twitter.pants.java.java                                            .....   SUCCESS\ntests.python.twitter.pants.python.test_antlr_builder                            .....   SUCCESS\ntests.python.twitter.pants.python.test_resolver                                 .....   SUCCESS\ntests.python.twitter.pants.python.test_thrift_namespace_packages                ..... EXCEPTION\ntests.python.twitter.pants.utils                                                .....   SUCCESS\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zyzheng": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/209", "title": "Using scrooge with pants.new", "body": "I tried to update the pants in our own project and got stuck about the scrooge generator. It worked fine with our old pants built last November.\n\nI even cloned a new twitter/commons project and copied my code to this folder and got the same error, so I think it's not about the configuration in my project.\n\nHere's my BUILD file:\n\n```\njava_thrift_library(\n  name = 'example-test',\n  compiler = 'scrooge',\n  language = 'java',\n  sources = [\n    'example.thrift',\n  ]\n)\n```\n\nHere's what I tried to run:\n\n```\n./pants goal gen tests/thrift/com/example:example-test\n```\n\nAnd here's the output:\n\n```\n13:56:29 00:00 [main]\n           (To run a reporting server: ./pants server)\n13:56:29 00:00   [setup]\n13:56:29 00:00     [bootstrap]\n13:56:29 00:00     [parse]\n13:56:30 00:01   [gen]\n13:56:30 00:01     [thrift]\n13:56:30 00:01     [scrooge]\nFAILURE: No bootstrap callback registered for scrooge-gen\n\n\n           FAILURE\n```\n\nI checked BUILD, BUILD.commons, BUILD.tools, pants.ini and 3rdparty/BUILD. But I still can't solve this.\nCan anyone help about this? Thanks in advance.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pgroudas": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/183", "title": "pex scrubbing of sys.path and site-packages.", "body": "Hello,\n\nIt seems that in src/python/twitter/common/python/pex.py you're trying to eliminate all the extraneous load paths such that running a pex will not pick up externally installed dependencies.\n\n``` python\n  @classmethod\n  def minimum_path(cls):\n    \"\"\"\n      Return as a tuple the emulated sys.path and sys.path_importer_cache of\n      a bare python installation, a la python -S.\n    \"\"\"\n    site_libs = set(cls._site_libs())\n    for site_lib in site_libs:\n      TRACER.log('Found site-library: %s' % site_lib)\n    for extras_path in cls._extras_paths():\n      TRACER.log('Found site extra: %s' % extras_path)\n      site_libs.add(extras_path)\n    site_libs = set(os.path.normpath(path) for path in site_libs)\n\n    site_distributions = OrderedSet()\n    for path_element in sys.path:\n      if any(path_element.startswith(site_lib) for site_lib in site_libs):\n        TRACER.log('Inspecting path element: %s' % path_element)\n        site_distributions.update(dist.location for dist in find_distributions(path_element))\n\n    user_site_distributions = OrderedSet(dist.location for dist in find_distributions(USER_SITE))\n\n    for path in site_distributions:\n      TRACER.log('Scrubbing from site-packages: %s' % path)\n    for path in user_site_distributions:\n      TRACER.log('Scrubbing from user site: %s' % path)\n\n    scrub_paths = site_distributions | user_site_distributions\n    scrubbed_sys_path = list(OrderedSet(sys.path) - scrub_paths)\n    scrub_from_importer_cache = filter(\n      lambda key: any(key.startswith(path) for path in scrub_paths),\n      sys.path_importer_cache.keys())\n    scrubbed_importer_cache = dict((key, value) for (key, value) in sys.path_importer_cache.items()\n      if key not in scrub_from_importer_cache)\n    return scrubbed_sys_path, scrubbed_importer_cache\n```\n\nHowever, it seems that in practice this eliminates egg files from withing site-packages, but leaves the site-packages directories in the sys.path itself.\n\nFrom building a pex file with PEX_VERBOSE=1:\n\n```\ntwitter.common.python.pex: Found site-library: /usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages\ntwitter.common.python.pex: Inspecting path element: /usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg\ntwitter.common.python.pex: Inspecting path element: /usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/setuptools-1.1.6-py2.7.egg\ntwitter.common.python.pex: Scrubbing from site-packages: /usr/local/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg\ntwitter.common.python.pex: Scrubbing from site-packages: /usr/local/lib/python2.7/site-packages/setuptools-1.1.6-py2.7.egg\n```\n\nAnd here is the output of printing sys.path from running that pex:\n\n```\n/Library/Python/2.7/site-packages\n/Library/Python/2.7/site-packages/pip-1.2.1-py2.7.egg\n/Users/paul/.pex/install/CherryPy-3.2.4-py2.7.egg\n/Users/paul/.pex/install/Flask-0.9-py2.7.egg\n/Users/paul/.pex/install/Jinja2-2.7-py2.7.egg\n/Users/paul/.pex/install/WTForms-1.0.4-py2.7.egg\n/Users/paul/.pex/install/Werkzeug-0.8.3-py2.7.egg\n/Users/paul/.pex/install/mongoengine-0.8.2-py2.7.egg\n/Users/paul/.pex/install/numpy-1.7.1-py2.7-macosx-10.8-x86_64.egg\n/Users/paul/.pex/install/passlib-1.6.1-py2.7.egg\n/Users/paul/.pex/install/pymongo-2.5.2-py2.7-macosx-10.8-intel.egg\n/Users/paul/.pex/install/requests-1.2.3-py2.7.egg\n/Users/paul/.pex/install/setuptools-0.9.8-py2.7.egg\n/Users/paul/.pex/install/stripe-1.9.1-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex\n/Users/paul/Development/urbancompass/dist/web_app.pex/.bootstrap\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/Flask_Login-0.1.3-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/Flask_Mail-0.9.0-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/Flask_Principal-0.4.0-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/Flask_Security-1.6.3-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/Flask_WTF-0.8.3-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/MarkupSafe-0.18-py2.7-macosx-10.8-x86_64.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/Rtree-0.7.0-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/blinker-1.3-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/boto-2.13.3-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/dad255e5a0adef9383d42edbfadf5c4cf13a073b_src.thrift.urbancompass.badges.badges_python-dev-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/distribute-0.7.3-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/facebook_sdk-0.4.0-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/flask_mongoengine-0.7.0-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/flufl.enum-4.0-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/ipaddr-2.1.10-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/itsdangerous-0.22-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/pylibmc-1.2.3-py2.7-macosx-10.8-x86_64.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/python_statsd-1.5.7-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/pytz-2013b-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/six-1.4.1-py2.7.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/thrift-0.9.0-py2.7-macosx-10.8-x86_64.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/ujson-1.33-py2.7-macosx-10.8-x86_64.egg\n/Users/paul/Development/urbancompass/dist/web_app.pex/.deps/voluptuous-0.7.2-py2.7.egg\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pip-1.3.1-py2.7.egg\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/setuptools-1.1.6-py2.7.egg\n/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python27.zip\n/usr/local/lib/python2.7/site-packages\n```\n\nWhich still has the following directories\n\n```\n/usr/local/lib/python2.7/site-packages\n/Library/Python/2.7/site-packages\n```\n\nAnd definitely lets you import from them:\n\n```\n>>> import virtualenv\n>>> print virtualenv.__file__\n/usr/local/lib/python2.7/site-packages/virtualenv.pyc\n```\n\nHere at UrbanCompass we have just patched it to exclude these further directories, happy to share, just want to make sure that our goals are aligned.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/21802642", "body": "Upon further inspection, this seems to be a dupe of https://github.com/twitter/commons/issues/160.  Anyways, it breaks unit test configurations as well!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21802642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "eric": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/167", "title": "Having problems getting pants to work", "body": "I've tried to use pants on OS X and ran into some strange issues.\n\nDo I need to pre-install anything (other than developer tools) to use pants?\n\n```\n > env PANTS_VERBOSE=1 PEX_VERBOSE=1 PYTHON_VERBOSE=1 ./pants\nInstalling virtualenv\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 2087k  100 2087k    0     0   866k      0  0:00:02  0:00:02 --:--:--  908k\nRunning virtualenv with interpreter /usr/bin/python2.7\nNew python executable in ./build-support/python/../../.python/bootstrap/bin/python\ninstall_name_tool: for architecture i386 object: ./build-support/python/../../.python/bootstrap/bin/python malformed object (unknown load command 10)\nCould not call install_name_tool -- you must have Apple's development tools installed\nTraceback (most recent call last):\n  File \"./build-support/python/../../.pants.d/.pip.cache/virtualenv-1.7.1.2/virtualenv.py\", line 2270, in <module>\n    main()\n  File \"./build-support/python/../../.pants.d/.pip.cache/virtualenv-1.7.1.2/virtualenv.py\", line 928, in main\n    never_download=options.never_download)\n  File \"./build-support/python/../../.pants.d/.pip.cache/virtualenv-1.7.1.2/virtualenv.py\", line 1029, in create_environment\n    site_packages=site_packages, clear=clear))\n  File \"./build-support/python/../../.pants.d/.pip.cache/virtualenv-1.7.1.2/virtualenv.py\", line 1347, in install_python\n    py_executable])\n  File \"./build-support/python/../../.pants.d/.pip.cache/virtualenv-1.7.1.2/virtualenv.py\", line 1006, in call_subprocess\n    % (cmd_desc, proc.returncode))\nOSError: Command install_name_tool -change /System/Library/Fram.../Versions/2.7/Python @executable_path/../.Python ./build-support/pyth...bootstrap/bin/python failed with error code 1\n./pants: line 47: ./.python/bootstrap/bin/activate: No such file or directory\n./pants: line 48: deactivate: command not found\n./pants: line 31: ./.python/bootstrap/bin/activate: No such file or directory\nBuild operating on targets: OrderedSet([PythonBinary(src/python/twitter/pants/BUILD:pants)])\nBuilding PythonBinary PythonBinary(src/python/twitter/pants/BUILD:pants):\nBuilding PythonBinary PythonBinary(src/python/twitter/pants/BUILD:pants):\n  Dumping library: PythonLibrary(src/python/twitter/pants/BUILD:pants-lib) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/BUILD:common) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/collections/BUILD:collections) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/lang/BUILD:lang) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/config/BUILD:config) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/contextutil/BUILD:contextutil) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/dirutil/BUILD:dirutil) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/decorators/BUILD:decorators) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/exceptions/BUILD:exceptions) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/log/BUILD:log) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/options/BUILD:options) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/metrics/BUILD:metrics) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/quantity/BUILD:quantity) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/string/BUILD:string) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/util/BUILD:util) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/app/BUILD:app) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/process/BUILD:process) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/app/modules/BUILD:modules) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/confluence/BUILD:confluence) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/java/BUILD:java) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/python/BUILD:python) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/rwbuf/BUILD:rwbuf) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/thrift/text/BUILD:text) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/threading/BUILD:threading) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/pants/BUILD:pants-deps) [relative module: ]\n  Dumping requirement: distribute\n  Dumping requirement: ansicolors\n  Dumping requirement: elementtree\n  Dumping requirement: Markdown\n  Dumping requirement: pygments\n  Dumping requirement: pylint\n  Dumping requirement: pystache\n  Dumping requirement: pytest\n  Dumping requirement: pytest-cov\n  Dumping requirement: python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\nFailed to find distribute in sys.path!n-daemon :: Distilling python-daemon\ntwitter.common.python: Obtaining python-daemon: 14821.4ms                 \ntwitter.common.python:   Installing python-daemon: 0.4ms\ntwitter.common.python:   Distilling python-daemon: 7.2ms\ntwitter.common.python:   Installing python-daemon: 0.4ms\ntwitter.common.python:   Distilling python-daemon: 7.2ms\ntwitter.common.python:   Installing python-daemon: 0.4ms\ntwitter.common.python:   Distilling python-daemon: 7.2ms\ntwitter.common.python:   Installing python-daemon: 0.3ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.4ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.3ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.4ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.3ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.3ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.3ms\ntwitter.common.python:   Distilling python-daemon: 7.3ms\ntwitter.common.python:   Installing python-daemon: 0.4ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.3ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.5ms\ntwitter.common.python:   Distilling python-daemon: 7.4ms\ntwitter.common.python:   Installing python-daemon: 0.3ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.5ms\ntwitter.common.python:   Distilling python-daemon: 7.4ms\ntwitter.common.python:   Installing python-daemon: 0.3ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\ntwitter.common.python:   Installing python-daemon: 0.4ms\ntwitter.common.python:   Distilling python-daemon: 7.0ms\ntwitter.common.python:   Installing python-daemon: 0.3ms\ntwitter.common.python:   Distilling python-daemon: 7.1ms\nProblem executing PythonBuilder for targets OrderedSet([PythonBinary(src/python/twitter/pants/BUILD:pants)]): Traceback (most recent call last):\n  File \"/Users/eric/src/commons/src/python/twitter/pants/commands/build.py\", line 96, in _python_build\n    return executor.build(targets, self.build_args, conn_timeout=self.options.conn_timeout)\n  File \"/Users/eric/src/commons/src/python/twitter/pants/python/python_builder.py\", line 59, in build\n    rv = PythonBinaryBuilder(binary_target, args, self.root_dir, conn_timeout=conn_timeout).run()\n  File \"/Users/eric/src/commons/src/python/twitter/pants/python/binary_builder.py\", line 57, in run\n    env = self.chroot.dump()\n  File \"/Users/eric/src/commons/src/python/twitter/pants/python/python_chroot.py\", line 230, in dump\n    req._requirement for req in targets['reqs'] if req.should_build()):\n  File \"/Users/eric/src/commons/src/python/twitter/pants/python/python_chroot.py\", line 93, in resolve\n    self._resolver.resolve(requirements, platform=platform)\n  File \"/Users/eric/src/commons/src/python/twitter/common/python/resolver.py\", line 49, in resolve\n    installer=self.make_installer(python, platform)):\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 565, in resolve\n    raise DistributionNotFound(req)  # XXX put more info here\nDistributionNotFound: python-daemon\n\n\nUsage: \n  pants_exe.py build (options) [spec] (build args)\n  pants_exe.py build (options) [spec]... -- (build args)\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  --no-pantsrc          Specifies that pantsrc files should be ignored.\n  --log-exit            Log an exit message on success or failure.\n  -t CONN_TIMEOUT, --timeout=CONN_TIMEOUT\n                        Number of seconds to wait for http connections.\n\nBuilds the specified Python target(s). Use ./pants goal for JVM and other\ntargets.\n./pants: line 35: deactivate: command not found\nUnable to build pants!  Cannot continue!\n```\n\n```\n > which install_name_tool\n/usr/bin/install_name_tool\n > install_name_tool\nUsage: install_name_tool [-change old new] ... [-rpath old new] ... [-add_rpath new] ... [-delete_rpath old] ... [-id name] input\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/21897273", "body": "I would really love to have this as well.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21897273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21963311", "body": "Are tests the only thing this is missing to be able to be merged?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21963311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21985333", "body": "I found that making `/Library/Python/2.7/site-packages/` writable by my user made it work.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21985333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22027003", "body": "One thing I found was that the version of virtualenv that is used has problems with OS X. I updated the line in the pants stuff to use a newer virtualenv and it made that error go away.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22027003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22031497", "body": "@jsirois: Could you point me at a pattern to follow for the noop stuff to make it get rid of the warnings? My attempts to be clever are failing.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22031497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22041320", "body": "Thanks for the info, guys.\n\npants is no longer spitting out errors about this stuff, though I can't get a complete successful run due to #168.\n\nLet me know if you notice any more problems.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22041320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22045278", "body": "This has been merged as #165. :dancers:\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22045278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22045628", "body": "Is there a schedule for doing releases? It would be great to be able to make use of this.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22045628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22073838", "body": "Thanks!\n\nOn Sun, Aug 4, 2013 at 7:09 AM, John Sirois notifications@github.com\nwrote:\n\n> ## I've got these changes cherry-picked internally and out for review.  Should be accepted Monday and I'll publish promptly at that point and update this thread with versions.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/twitter/commons/pull/165#issuecomment-22072309\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22073838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22196899", "body": ":dancers: \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22196899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "benjyw": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/141", "title": "Python egg repo index is cached", "body": "Our egg repo is just an s3 directory with an index.html file we point pants at for crawling. \n\nWhen we add a new egg and update the index.html file, we have to also rm -rf .pants.d/.python*, otherwise pants can't find the new egg, presumably because the index.html data is cached. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/b682c7bde731e5f1c26c3f6d371603c405a3c227", "message": "Merge pull request #301 from benjyw/fix_orderedset_equality\n\nFix equality in OrderedSet."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/6825570", "body": "If you want I can squash these into one commit and create a new pull request. I don't know how easy it is to view the complete diff of all 9 commits. Unfortunately there were many small nits and bugs that I fixed while testing further. \n\nThere appears to be quite a bit of commonality that could be factored out of scala_compile.py and java_compile.py. But I'd rather leave that for a future change, as it's not quite as trivial as it may seem.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6825570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7182587", "body": "Ooops, please ignore this one, it was rebased on top of another pull request commit. Will recreate.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7182587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7862270", "body": "Thanks for the review!\n\nPushed a commit with all the fixes, to the same branch. But that's kinda\nchaotic with all the merges and bugfixes and whatnot. I've also created a\nnew, 'clean' pull request for a single commit containing all of the above\nplus the code review fixes. You may prefer to simply pull that one.\n\nOn Sun, Aug 19, 2012 at 10:26 PM, John Sirois notifications@github.comwrote:\n\n> Small stuff - this lgtm on whole. I believe I messed up a clean pull by\n> merging the labels change 1st so you may need to rebase or ... ? Ready to\n> pull this in quickly tomorrow. Thanks for your patience.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/twitter/commons/pull/61#issuecomment-7861071.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7862270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7888799", "body": "D'oh. \n\nhttps://github.com/twitter/commons/pull/67 fixes this, I hope.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7888799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7953824", "body": "Actually, this is on top of the other change, so I'll close it now and resend when that one is in.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7953824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8598428", "body": "Closing this for now. Still doing some tweaks and performance improvements. Will send out when it's stable.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8598428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10336990", "body": "Yeah, sorry, I rebased some other changes onto this branch. Will send a new PR with the style fixes.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10336990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10338851", "body": "Sending separate pull requests for the various unrelated changes here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10338851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13257448", "body": "Reviewed out-of-band by me.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13257448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13972571", "body": "FWIW:\n\nUnder my latest scala_compile.py improvements, adherence to 1:1:1 will\nactually improve build times significantly!\n\nThis is because in those cases we can quickly symlink entire packages into\nthe merged classes dir, rather than laboriously copying class files in and\nout.\n\nOn Fri, Feb 22, 2013 at 4:18 PM, Ryan Williams notifications@github.comwrote:\n\n> That makes sense, except: is it common in the current state of affairs for\n> someone to omit the \"sources\" property of scala_library targets? That seems\n> broken, and like something that should already be advised / linted against.\n> Are any of the targets you listed above currently \"sources\"-less?\n> \n> Great to hear about the thrift gen stuff.\n> \n> Interesting idea about setting policy per BUILD file. Realistically, we\n> will probably just create a scala_library alias that defaults sources to\n> globs('*.scala'), and use that instead of scala_library. I figured there\n> might be objections to this non-backwards-compatible change but thought I'd\n> run it up the flagpole anyway.\n> \n> Possible compromise: are you open to having the aforementioned\n> scala_library wrapper live in twitter-commons? We could call it \"scala_lib\"\n> or somesuch (suggestions welcome), and that way there would be no\n> backwards-compatibility issues.\n> \n> Thanks John!\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/twitter/commons/pull/120#issuecomment-13971700.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13972571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14250376", "body": "Closing this one, will send you a new one with all my little changes and bugfixes rolled into a single commit.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14250376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14250453", "body": "Note my comment:\n\n\"Best to review src/python/twitter/pants/tasks/scala_compile.py as if it were\na new file. The diffs will be meaningless.\"\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14250453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17834539", "body": "Looks good. I'll take your word for it on the Git magic. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17834539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19293863", "body": "LGTM Thanks for the quick fix!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/19293863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20715351", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20715351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20915028", "body": "D'oh! Thanks fo fixing.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20915028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21411391", "body": "Thanks for fixing!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21411391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/twitter/commons/comments/5459257", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/5459257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/comments/5459283", "body": "LGTM\n\nIn future can we not put large style changes in the same commits as real code changes? It's difficult to review such changes when you don't know if you're supposed to be looking for meaningful differences or not.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/5459283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/653697", "body": "I _think_ the pull request now contains a revert for the checkstyle\nthing. It also contains other commits that are already in your repo,\nnot sure why.\n\nOn Tue, Apr 3, 2012 at 2:26 AM, John Sirois\nreply@reply.github.com\nwrote:\n\n> > @@ -120,18 +121,39 @@ def execute(self, targets):\n> > \u00a0 \u00a0 \u00a0 \u00a0of (conf, jar path).\n> > \u00a0 \u00a0 \u00a0\"\"\"\n> > - \u00a0 \u00a0def dirname_for_requested_targets(targets):\n> \n> you could use self.context.id\n> see context.identify: https://github.com/twitter/commons/blob/master/src/python/twitter/pants/goal/context.py#L32\n> If you wan't to change that to use sha1 instead of md5 - sgtm\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/twitter/commons/pull/22/files#r638015\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/653697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/1589599", "body": "Fixed as requested.\n\nOn Tue, Sep 11, 2012 at 7:42 PM, brian wickman notifications@github.comwrote:\n\n> In src/python/twitter/pants/targets/internal.py:\n> \n> > @@ -62,7 +62,7 @@ def sort_targets(cls, internal_targets):\n> >      def invert(target):\n> >        if target not in visited:\n> >          visited.add(target)\n> > -        if target.internal_dependencies:\n> > -        if hasattr(target, 'internal_dependencies') and target.internal_dependencies:\n> \n> if getattr(target, 'internal_dependencies', None):\n> ...\n> \n> achieves the same thing\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/twitter/commons/pull/80/files#r1582996.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/1589599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2021380", "body": "Changed this to use isinstance(), but will leave the larger change for a separate commit, if that's OK?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2021380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "fracko": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/99", "title": "com.twitter.common.zookeeper.DistributedLockImpl tryLock does not cleanup after timeout", "body": "I try to use method tryLock. As I understand this method should try to acquire a lock for some time and if it this operation fails(because lock is already acquired) it returns false. What I've noticed is that even after unsuccessful lock acquire its locking node stays.\n\nCan't we remove the node and clean the  data after timeout?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/99/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cschertz": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/75", "title": "Cant get build to work at all ", "body": "I have tried to invoke several targets on several machines types.  Linux Mint, CentOS 6 in all cases I get the same result \n\ncschertz@CraigLinuxMint ~/depot/twitter/commons $ ./pants goal\nBuild operating on targets: OrderedSet([PythonBinary(src/python/twitter/pants/BUILD:pants)])\nBuilding PythonBinary PythonBinary(src/python/twitter/pants/BUILD:pants):\n\nschertz@CraigLinuxMint ~/depot/twitter/commons $ ./pants src/java/com/twitter/common/thrift\nBuild operating on targets: OrderedSet([PythonBinary(src/python/twitter/pants/BUILD:pants)])\nBuilding PythonBinary PythonBinary(src/python/twitter/pants/BUILD:pants):\n\nAll examples end up in this same spot \n\nAny help would be great \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/75/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/8425314", "body": "Below is the output from the request but i also get a different result running the same commands today \n\nschertz@CraigLinuxMint ~/depot/twitter/commons $ ./pants src/java/com/twitter/common/thrift\nBuild operating on targets: OrderedSet([PythonBinary(src/python/twitter/pants/BUILD:pants)])\nBuilding PythonBinary PythonBinary(src/python/twitter/pants/BUILD:pants):\nFailed to install stdout:\nrunning install\nrunning build\nrunning build_py\ncreating build\ncreating build/lib.linux-x86_64-2.7\ncreating build/lib.linux-x86_64-2.7/psutil\ncopying psutil/error.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_psmswindows.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_compat.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/__init__.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_psbsd.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_common.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_psosx.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_pslinux.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_psposix.py -> build/lib.linux-x86_64-2.7/psutil\nrunning build_ext\nbuilding '_psutil_linux' extension\ncreating build/temp.linux-x86_64-2.7\ncreating build/temp.linux-x86_64-2.7/psutil\ngcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c psutil/_psutil_linux.c -o build/temp.linux-x86_64-2.7/psutil/_psutil_linux.o\n\nFailed to install stderr:\npsutil/_psutil_linux.c:11:20: fatal error: Python.h: No such file or directory\ncompilation terminated.\nerror: command 'gcc' failed with exit status 1\n\nFailed to install psutil\nFailed to resolve psutil, your installation may not work properly.\nProblem executing PythonBuilder for targets OrderedSet([PythonBinary(src/python/twitter/pants/BUILD:pants)]): Traceback (most recent call last):\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/commands/build.py\", line 136, in _python_build\n    return executor.build(targets, self.build_args)\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/python/python_builder.py\", line 56, in build\n    rv = PythonBinaryBuilder(binary_target, args, self.root_dir).run()\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/python/binary_builder.py\", line 57, in run\n    env = self.chroot.dump()\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/python/python_chroot.py\", line 187, in dump\n    ignore_errors=self._builder.info().ignore_errors):\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/python/python_chroot.py\", line 71, in resolve\n    for dist in resolver.resolve(requirements, ignore_errors=ignore_errors):\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/common/python/resolver.py\", line 132, in resolve\n    distributions = self._ws.resolve([req], env=self)\n  File \"/home/cschertz/depot/twitter/commons/.python/bootstrap/local/lib/python2.7/site-packages/distribute-0.6.24-py2.7.egg/pkg_resources.py\", line 584, in resolve\n    raise DistributionNotFound(req)\nDistributionNotFound: psutil\n\nOutput from requested command \n\nBuild operating on targets: OrderedSet([PythonBinary(src/python/twitter/pants/BUILD:pants)])\n  Resolver: Calling environment super => 0.021ms\nBuilding PythonBinary PythonBinary(src/python/twitter/pants/BUILD:pants):\nBuilding PythonBinary PythonBinary(src/python/twitter/pants/BUILD:pants):\n  Dumping library: PythonLibrary(src/python/twitter/pants/BUILD:pants-lib) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/BUILD:common) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/collections/BUILD:collections) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/config/BUILD:config) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/lang/BUILD:lang) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/contextutil/BUILD:contextutil) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/decorators/BUILD:decorators) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/log/BUILD:log) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/options/BUILD:options) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/dirutil/BUILD:dirutil) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/quantity/BUILD:quantity) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/app/BUILD:app) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/util/BUILD:util) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/app/modules/BUILD:modules) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/confluence/BUILD:confluence) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/common/python/BUILD:python) [relative module: ]\n  Dumping library: PythonLibrary(src/python/twitter/pants/BUILD:pants-deps) [relative module: ]\n  Dumping requirement: pip\n  Dumping requirement: distribute\n  Dumping requirement: elementtree\n  Dumping requirement: mako\n  Dumping requirement: markdown\n  Dumping requirement: psutil\n  Dumping requirement: pygments\n  Dumping requirement: pylint\n  Dumping requirement: pytest\n  Dumping requirement: python-daemon\n  Resolver: Calling environment super => 0.009ms\n  Resolver: Activating cache /home/cschertz/depot/twitter/commons/3rdparty/python => 57.632ms\n  Resolver: Activating cache /home/cschertz/depot/twitter/commons/.pants.d/.python.install.cache => 0.139ms\n  Resolver: Fetching pip => 2338.090ms\n  Resolver: Building pip => 271.278ms\n  Resolver: Distilling pip => 174.737ms\n  Resolver: Constructing distribution pip => 0.855ms\n  Resolver: Resolved pip => 2843.829ms\n  Resolver: Fetching distribute => 2515.985ms\n  Resolver: Building distribute => 258.408ms\n  Resolver: Distilling distribute => 385.846ms\n  Resolver: Constructing distribution distribute => 1.015ms\n  Resolver: Resolved distribute => 3162.356ms\n  Resolver: Fetching elementtree => 3000.821ms\n  Resolver: Building elementtree => 109.809ms\n  Resolver: Distilling elementtree => 51.309ms\n  Resolver: Constructing distribution elementtree => 0.589ms\n  Resolver: Resolved elementtree => 3163.487ms\n  Resolver: Fetching mako => 5077.740ms\n  Resolver: Building mako => 164.530ms\n  Resolver: Distilling mako => 154.332ms\n  Resolver: Constructing distribution mako => 0.741ms\n  Resolver: Fetching MarkupSafe>=0.9.2 => 6159.424ms\n  Resolver: Building MarkupSafe>=0.9.2 => 202.285ms\n  Resolver: Distilling MarkupSafe>=0.9.2 => 14.652ms\n  Resolver: Constructing distribution MarkupSafe>=0.9.2 => 0.502ms\n  Resolver: Resolved mako => 11776.394ms\n  Resolver: Fetching markdown => 7252.410ms\n  Resolver: Building markdown => 403.020ms\n  Resolver: Distilling markdown => 127.507ms\n  Resolver: Constructing distribution markdown => 0.813ms\n  Resolver: Resolved markdown => 7784.866ms\n  Resolver: Fetching psutil => 2163.696ms\nFailed to install stdout:\nrunning install\nrunning build\nrunning build_py\ncreating build\ncreating build/lib.linux-x86_64-2.7\ncreating build/lib.linux-x86_64-2.7/psutil\ncopying psutil/error.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_psmswindows.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_compat.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/__init__.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_psbsd.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_common.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_psosx.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_pslinux.py -> build/lib.linux-x86_64-2.7/psutil\ncopying psutil/_psposix.py -> build/lib.linux-x86_64-2.7/psutil\nrunning build_ext\nbuilding '_psutil_linux' extension\ncreating build/temp.linux-x86_64-2.7\ncreating build/temp.linux-x86_64-2.7/psutil\ngcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c psutil/_psutil_linux.c -o build/temp.linux-x86_64-2.7/psutil/_psutil_linux.o\n\nFailed to install stderr:\npsutil/_psutil_linux.c:11:20: fatal error: Python.h: No such file or directory\ncompilation terminated.\nerror: command 'gcc' failed with exit status 1\n\nFailed to install psutil\n  Resolver: Building psutil => 89.414ms\nFailed to resolve psutil, your installation may not work properly.\n  Resolver: Failed to resolve psutil\nProblem executing PythonBuilder for targets OrderedSet([PythonBinary(src/python/twitter/pants/BUILD:pants)]): Traceback (most recent call last):\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/commands/build.py\", line 136, in _python_build\n    return executor.build(targets, self.build_args)\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/python/python_builder.py\", line 56, in build\n    rv = PythonBinaryBuilder(binary_target, args, self.root_dir).run()\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/python/binary_builder.py\", line 57, in run\n    env = self.chroot.dump()\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/python/python_chroot.py\", line 187, in dump\n    ignore_errors=self._builder.info().ignore_errors):\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/pants/python/python_chroot.py\", line 71, in resolve\n    for dist in resolver.resolve(requirements, ignore_errors=ignore_errors):\n  File \"/home/cschertz/depot/twitter/commons/src/python/twitter/common/python/resolver.py\", line 132, in resolve\n    distributions = self._ws.resolve([req], env=self)\n  File \"/home/cschertz/depot/twitter/commons/.python/bootstrap/local/lib/python2.7/site-packages/distribute-0.6.24-py2.7.egg/pkg_resources.py\", line 584, in resolve\n    raise DistributionNotFound(req)\nDistributionNotFound: psutil\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8425314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8426666", "body": "Also here is the result i get from running PANTS_VERBOSE=1 PEX_VERBOSE=1 ./pants tests/java/com/twitter/common:all-tests!   On CentOS 6 today.   The previous result are from LinuxMint 13\n\n-bash-4.1$ PANTS_VERBOSE=1 PEX_VERBOSE=1 ./pants tests/java/com/twitter/common:all-tests!\nPEX: Calling environment super => 0.007ms\nPEX: Using prescribed entry point: pants_exe\nPEX: Inspecting path element: /usr/lib64/python2.6/site-packages\nPEX: Inspecting path element: /usr/lib/python2.6/site-packages\nPEX: Inspecting path element: /usr/lib/python2.6/site-packages/setuptools-0.6c11-py2.6.egg-info\nPEX: Scrubbing from site-packages: /usr/lib64/python2.6/site-packages\nPEX: Scrubbing from site-packages: /usr/lib/python2.6/site-packages/PasteDeploy-1.5.0-py2.6.egg\nPEX: Scrubbing from site-packages: /usr/lib/python2.6/site-packages\nPEX: Scrubbing from site-packages: /usr/lib/python2.6/site-packages/WebOb-1.0.8-py2.6.egg\nPEX: Activating cache ./pants.pex/.deps => 65.047ms\nPEX: Resolved pip => 65.342ms\nPEX:     Locally caching pip 1.2.1 => 0.902ms\nPEX:   Activated pip 1.2.1 => 0.988ms\nPEX: Resolved distribute => 0.190ms\nPEX:     Locally caching distribute 0.6.28 => 0.649ms\nPEX:   Activated distribute 0.6.28 => 0.733ms\nPEX: Resolved elementtree => 0.182ms\nPEX:   Activated elementtree 1.2.7-20070827-preview => 2.801ms\nPEX: Resolved mako => 0.922ms\nPEX:     Locally caching Mako 0.4.0 => 0.821ms\nPEX:   Activated Mako 0.4.0 => 0.904ms\nPEX:     Locally caching MarkupSafe 0.15 => 0.848ms\nPEX:   Activated MarkupSafe 0.15 => 0.933ms\nPEX: Resolved markdown => 0.179ms\nPEX:   Activated Markdown 2.1.1 => 3.736ms\nPEX: Resolved psutil => 0.170ms\nPEX:     Locally caching psutil 0.4.1 => 0.828ms\nPEX:   Activated psutil 0.4.1 => 0.910ms\nPEX: Resolved pygments => 0.193ms\nPEX:     Locally caching Pygments 1.4 => 0.827ms\nPEX:   Activated Pygments 1.4 => 0.910ms\nPEX: Resolved pylint => 2.273ms\nPEX:     Locally caching pylint 0.24.0 => 0.719ms\nPEX:   Activated pylint 0.24.0 => 0.802ms\nPEX:     Locally caching logilab-astng 0.22.0 => 4.151ms\nPEX:   Activated logilab-astng 0.22.0 => 4.238ms\nPEX:     Locally caching logilab-common 0.56.0 => 1.184ms\nPEX:   Activated logilab-common 0.56.0 => 1.274ms\nPEX:     Locally caching unittest2 0.5.1 => 0.881ms\nPEX:   Activated unittest2 0.5.1 => 0.967ms\nPEX: Resolved pytest => 0.838ms\nPEX:     Locally caching pytest 2.2.0 => 0.905ms\nPEX:   Activated pytest 2.2.0 => 0.988ms\nPEX:     Locally caching py 1.4.5 => 0.878ms\nPEX:   Activated py 1.4.5 => 0.961ms\nPEX: Resolved python-daemon => 0.899ms\nPEX:     Locally caching python-daemon 1.6 => 1.078ms\nPEX:   Activated python-daemon 1.6 => 1.161ms\nPEX:   Activated lockfile 0.9.1 => 2.894ms\nPEX:     Locally caching distribute 0.6.28 => 0.442ms\nPEX:   Activated distribute 0.6.28 => 0.523ms\nPEX: PYTHONPATH now /home/cschertz/depot/commons/pants.pex/.bootstrap:/home/cschertz/depot/commons/pants.pex:/usr/lib64/python26.zip:/usr/lib64/python2.6:/usr/lib64/python2.6/plat-linux2:/usr/lib64/python2.6/lib-tk:/usr/lib64/python2.6/lib-old:/usr/lib64/python2.6/lib-dynload:/usr/lib/python2.6/site-packages/setuptools-0.6c11-py2.6.egg-info:/home/cschertz/.pex/install/pip-1.2.1-py2.6.egg:/home/cschertz/.pex/install/distribute-0.6.28-py2.6.egg:/home/cschertz/depot/commons/pants.pex/.deps/elementtree-1.2.7_20070827_preview-py2.6.egg:/home/cschertz/.pex/install/Mako-0.4.0-py2.6.egg:/home/cschertz/.pex/install/MarkupSafe-0.15-py2.6-linux-x86_64.egg:/home/cschertz/depot/commons/pants.pex/.deps/Markdown-2.1.1-py2.6.egg:/home/cschertz/.pex/install/psutil-0.4.1-py2.6-linux-x86_64.egg:/home/cschertz/.pex/install/Pygments-1.4-py2.6.egg:/home/cschertz/.pex/install/pylint-0.24.0-py2.6.egg:/home/cschertz/.pex/install/logilab_astng-0.22.0-py2.6.egg:/home/cschertz/.pex/install/logilab_common-0.56.0-py2.6.egg:/home/cschertz/.pex/install/unittest2-0.5.1-py2.6.egg:/home/cschertz/.pex/install/pytest-2.2.0-py2.6.egg:/home/cschertz/.pex/install/py-1.4.5-py2.6.egg:/home/cschertz/.pex/install/python_daemon-1.6-py2.6.egg:/home/cschertz/depot/commons/pants.pex/.deps/lockfile-0.9.1-py2.6.egg\nBuild operating on targets: OrderedSet([JarLibrary(tests/java/com/twitter/common/BUILD:all-tests!)])\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.6/runpy.py\", line 122, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib64/python2.6/runpy.py\", line 34, in _run_code\n    exec code in run_globals\n  File \"./pants.pex/__main__.py\", line 29, in <module>\n  File \"/home/cschertz/depot/commons/pants.pex/.bootstrap/twitter/common/python/pex.py\", line 101, in execute\n  File \"/home/cschertz/depot/commons/pants.pex/.bootstrap/twitter/common/python/pex.py\", line 128, in execute_entry\n  File \"/home/cschertz/depot/commons/pants.pex/.bootstrap/twitter/common/python/pex.py\", line 133, in execute_module\n  File \"/usr/lib64/python2.6/runpy.py\", line 140, in run_module\n    fname, loader, pkg_name)\n  File \"/usr/lib64/python2.6/runpy.py\", line 34, in _run_code\n    exec code in run_globals\n  File \"/home/cschertz/depot/commons/pants.pex/pants_exe.py\", line 174, in <module>\n  File \"/home/cschertz/depot/commons/pants.pex/pants_exe.py\", line 168, in main\n  File \"/home/cschertz/depot/commons/pants.pex/pants_exe.py\", line 157, in _run\n  File \"twitter/pants/commands/__init__.py\", line 103, in run\n  File \"twitter/pants/commands/build.py\", line 97, in execute\n  File \"twitter/pants/**init**.py\", line 154, in extract_jvm_targets\n  File \"twitter/pants/**init**.py\", line 134, in is_jvm\nTypeError: has_label() takes exactly 1 argument (2 given)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8426666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8434592", "body": "This was all cloned yesterday.   I did a pull and a clean clone just to make sure this morning. \n\nWill update the Mint machine \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8434592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8437849", "body": "Installed python-dev on Mint machine and the following is the result.   Seems better but .....\n\ncschertz@CraigLinuxMint ~/depot/twitter/commons $ PANTS_VERBOSE=1 PEX_VERBOSE=1 ./pants tests/java/com/twitter/common:all-tests!\nPEX: Calling environment super => 0.005ms\nPEX: Using prescribed entry point: pants_exe\nPEX: Inspecting path element: /usr/lib/python2.7/dist-packages\nPEX: Inspecting path element: /usr/lib/python2.7/dist-packages/PIL\nPEX: Inspecting path element: /usr/lib/python2.7/dist-packages/gst-0.10\nPEX: Inspecting path element: /usr/lib/python2.7/dist-packages/gtk-2.0\nPEX: Scrubbing from site-packages: /usr/lib/python2.7/dist-packages\nPEX: Scrubbing from site-packages: /usr/lib/python2.7/dist-packages/PIL\nPEX: Activating cache ./pants.pex/.deps => 156.890ms\nPEX: Resolved pip => 157.113ms\nPEX:     Locally caching pip 1.2.1 => 0.612ms\nPEX:   Activated pip 1.2.1 => 0.669ms\nPEX: Resolved distribute => 0.119ms\nPEX:     Locally caching distribute 0.6.28 => 0.464ms\nPEX:   Activated distribute 0.6.28 => 0.519ms\nPEX: Resolved elementtree => 0.107ms\nPEX:   Activated elementtree 1.2.7-20070827-preview => 2.307ms\nPEX: Resolved mako => 0.528ms\nPEX:   Activated Mako 0.7.2 => 3.038ms\nPEX:   Activated MarkupSafe 0.15 => 1.954ms\nPEX: Resolved markdown => 0.114ms\nPEX:   Activated Markdown 2.2.0 => 3.027ms\nPEX: Resolved psutil => 0.106ms\nPEX:   Activated psutil 0.6.1 => 2.772ms\nPEX: Resolved pygments => 0.123ms\nPEX:     Locally caching Pygments 1.5 => 0.570ms\nPEX:   Activated Pygments 1.5 => 0.627ms\nPEX: Resolved pylint => 1.000ms\nPEX:     Locally caching pylint 0.25.2 => 0.539ms\nPEX:   Activated pylint 0.25.2 => 0.595ms\nPEX:     Locally caching logilab-astng 0.24.0 => 3.401ms\nPEX:   Activated logilab-astng 0.24.0 => 3.460ms\nPEX:     Locally caching logilab-common 0.58.1 => 0.793ms\nPEX:   Activated logilab-common 0.58.1 => 0.856ms\nPEX: Resolved pytest => 0.486ms\nPEX:     Locally caching pytest 2.2.4 => 0.595ms\nPEX:   Activated pytest 2.2.4 => 0.653ms\nPEX:   Activated py 1.4.9 => 3.690ms\nPEX: Resolved python-daemon => 0.518ms\nPEX:   Activated python-daemon 1.6 => 2.387ms\nPEX:   Activated lockfile 0.9.1 => 2.235ms\nPEX:     Locally caching distribute 0.6.28 => 0.376ms\nPEX:   Activated distribute 0.6.28 => 0.433ms\nPEX: PYTHONPATH now /home/cschertz/depot/twitter/commons/pants.pex/.bootstrap:/home/cschertz/depot/twitter/commons/pants.pex:/usr/lib/python2.7:/usr/lib/python2.7/plat-linux2:/usr/lib/python2.7/lib-tk:/usr/lib/python2.7/lib-old:/usr/lib/python2.7/lib-dynload:/usr/local/lib/python2.7/dist-packages:/usr/lib/python2.7/dist-packages/gst-0.10:/usr/lib/python2.7/dist-packages/gtk-2.0:/usr/lib/pymodules/python2.7:/home/cschertz/.pex/install/pip-1.2.1-py2.7.egg:/home/cschertz/.pex/install/distribute-0.6.28-py2.7.egg:/home/cschertz/depot/twitter/commons/pants.pex/.deps/elementtree-1.2.7_20070827_preview-py2.7.egg:/home/cschertz/depot/twitter/commons/pants.pex/.deps/Mako-0.7.2-py2.7.egg:/home/cschertz/depot/twitter/commons/pants.pex/.deps/MarkupSafe-0.15-py2.7.egg:/home/cschertz/depot/twitter/commons/pants.pex/.deps/Markdown-2.2.0-py2.7.egg:/home/cschertz/depot/twitter/commons/pants.pex/.deps/psutil-0.6.1-py2.7-linux-x86_64.egg:/home/cschertz/.pex/install/Pygments-1.5-py2.7.egg:/home/cschertz/.pex/install/pylint-0.25.2-py2.7.egg:/home/cschertz/.pex/install/logilab_astng-0.24.0-py2.7.egg:/home/cschertz/.pex/install/logilab_common-0.58.1-py2.7.egg:/home/cschertz/.pex/install/pytest-2.2.4-py2.7.egg:/home/cschertz/depot/twitter/commons/pants.pex/.deps/py-1.4.9-py2.7.egg:/home/cschertz/depot/twitter/commons/pants.pex/.deps/python_daemon-1.6-py2.7.egg:/home/cschertz/depot/twitter/commons/pants.pex/.deps/lockfile-0.9.1-py2.7.egg\nBuild operating on targets: OrderedSet([JarLibrary(tests/java/com/twitter/common/BUILD:all-tests!)])\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"./pants.pex/__main__.py\", line 29, in <module>\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/.bootstrap/twitter/common/python/pex.py\", line 101, in execute\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/.bootstrap/twitter/common/python/pex.py\", line 128, in execute_entry\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/.bootstrap/twitter/common/python/pex.py\", line 133, in execute_module\n  File \"/usr/lib/python2.7/runpy.py\", line 180, in run_module\n    fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/pants_exe.py\", line 174, in <module>\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/pants_exe.py\", line 168, in main\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/pants_exe.py\", line 157, in _run\n  File \"twitter/pants/commands/__init__.py\", line 103, in run\n\n  File \"twitter/pants/commands/build.py\", line 97, in execute\n  File \"twitter/pants/**init**.py\", line 154, in extract_jvm_targets\n\n  File \"twitter/pants/**init**.py\", line 134, in is_jvm\n\nTypeError: has_label() takes exactly 1 argument (2 given)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8437849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8512272", "body": "No sure what to do at this point.   Maybe someone can recommend an environment that they have this working in.   It seems that it impacts simple commands like list  I agree it seems related to issue 66 but i dont know anything about python and have not found any docs on pants \n\ntests/python/twitter/thrift/BUILD:all\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"./pants.pex/__main__.py\", line 29, in <module>\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/.bootstrap/twitter/common/python/pex.py\", line 101, in execute\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/.bootstrap/twitter/common/python/pex.py\", line 128, in execute_entry\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/.bootstrap/twitter/common/python/pex.py\", line 133, in execute_module\n  File \"/usr/lib/python2.7/runpy.py\", line 180, in run_module\n    fname, loader, pkg_name)\n  File \"/usr/lib/python2.7/runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/pants_exe.py\", line 174, in <module>\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/pants_exe.py\", line 168, in main\n  File \"/home/cschertz/depot/twitter/commons/pants.pex/pants_exe.py\", line 157, in _run\n  File \"twitter/pants/commands/__init__.py\", line 103, in run\n\n  File \"twitter/pants/commands/list.py\", line 101, in execute\n  File \"twitter/pants/base/target.py\", line 71, in get_all_addresses\n  File \"twitter/pants/base/parse_context.py\", line 116, in parse\n  File \"<exec_function>\", line 5, in exec_function\n  File \"/home/cschertz/depot/twitter/commons/tests/python/twitter/thrift/descriptors/BUILD\", line 35, in <module>\n    sources = globs('*.py'),\n  File \"twitter/pants/targets/python_tests.py\", line 33, in **init**\n  File \"twitter/pants/base/target.py\", line 168, in add_label\nAttributeError: 'PythonTests' object has no attribute 'labels'\n\nAny help would be greatly appreciated \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8512272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8513856", "body": "is i just me or is this the the issue. \n\ntargets/jar_dependency.py:  def has_label(self):\n\nbase target defines has_label as the following ?\nbase/target.py:  def has_label(self, label):\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8513856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8513932", "body": "Well any way that change fixed the first issue now i am hitting \n\n:large)]): Traceback (most recent call last):\n  File \"twitter/pants/commands/build.py\", line 128, in _jvm_build\n    return executor.build(targets, self.build_args)\n  File \"twitter/pants/ant/lib.py\", line 69, in build\n    _, _, result = self.generate_and_build(targets, args)\n  File \"twitter/pants/ant/lib.py\", line 101, in generate_and_build\n    return buildxml, ivyxml, subprocess.call(antargs)\n  File \"/usr/lib/python2.7/subprocess.py\", line 493, in call\n    return Popen(_popenargs, *_kwargs).wait()\n  File \"/usr/lib/python2.7/subprocess.py\", line 679, in __init__\n    errread, errwrite)\n  File \"/usr/lib/python2.7/subprocess.py\", line 1249, in _execute_child\n    raise child_exception\nOSError: [Errno 2] No such file or directory\n\nGoing to try and debug this one now \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8513932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8514070", "body": "ok think i fixed this ant not installed on the box. \nSill the issue above needs to be fixed.  If I will try and figure out how to setup a pull request for that fix.  Never done that before \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8514070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8514332", "body": "Well i guess i didn't get that all right but the pull request now exists \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8514332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "eribeiro": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/57", "title": "Replace ZookeeperClient's get() method by .getOrCreate()", "body": "I'd like to suggest the replacement of \n\nhttp://twitter.github.com/commons/apidocs/com/twitter/common/zookeeper/ZooKeeperClient.html#get()\n\nby _getOrCreate()_ because the latter provides a more descriptive name of the method contract. On the other hand, we should avoid to break any client code so I'd propose the following steps:\n1. Mark _get()_ methods as @deprecated, followed by \"Use getOrCreate method instead.\"\n2. Insert the respective _getOrCreate()_ methods and move the logic from _get()_ to _getOrCreate()_.\n3. Make _get()_ just delegate to its respective _getOrCreate()_ method.\n4. Update the tests and javadoc so that it can now reflect this change.\n\nAfter those changes, the method get() can be removed in the future without leaving broken client code on the way AND we the class may have a method that better describes its result (the first time I read it, I didn't assume it would create a ZK connection, only after reading the javadoc and source code I saw this).\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/57/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/56", "title": "pants refuses to build on python2.7", "body": "The readme states that I need python2.6+ to build commons, but whenever I ran $./pants it shows the message below, and quit:\n\n\"No python interpreter found on the path. Python will not work!\nUnable to bootstrap a sane Python virtual environment for pants!\"\n\nMy installation is Ubuntu 12.04 and python 2.7. \n\nI tracked the source of the message to the following file\n\nbuild-support/python/setup.sh:  echo No python interpreter found on the path.\n\nI was able to circumvent it by creating a symbolic link (ln -s) \"/usr/bin/python2.6\" pointing to \"/usr/bin/python2.7\" and it worked so far (still building).\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/56/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/22035229", "body": "I guess you should add a type to _ZooKeeperMap.Listener listener_ in method signature (in this case, String),\n so that it becomes:\n\n```\n  private ZooKeeperMap<String> makeUninitializedMap(String path, ZooKeeperMap.Listener<String> listener) \n  throws Exception {\n```\n\ndid you tried this?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22035229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22036435", "body": "As for the update: I don't think there's a possibilty of a unique NOOP_LISTENER as general as below without supressing warning checks through the code:\n\n1) Possible Solution 1\n\nI'd also alter the definition of NOOP_LISTENER to add a parameter type as follows:\n\n```\n public static final Listener<?> NOOP_LISTENER = new Listener<?>() {\n     public void nodeChanged(String nodeName, Object value) {}\n     public void nodeRemoved(String nodeName) {}\n };\n```\n\nBUT, it may be necessary to suppress checking at all places that NOOP_LISTENER is used with an annotation like @SuppressWarnings(\"unchecked\")\n\n2) Possible Solution 2\nTo add a private (?) static method that creates a NOOP_LISTENER according to the V type of the Map as follows:\n\n```\nprivate static <T> Listener<T> buildNOOPListener() {\n    return new Listener<T>() {\n       public void nodeChanged(String nodeName, T value) {}\n       public void nodeRemoved(String nodeName) {}\n    };\n}\n```\n\nso that you replace calls like:\n\n```\nprivate Map<String, String> makeMap(String path) throws Exception {\n   return makeMap(path, ZooKeeperMap.NOOP_LISTENER);\n}\n```\n\nby \n\n```\nprivate Map<String, String> makeMap(String path) throws Exception {\n   return makeMap(path, ZooKeeperMap.buildNOOPListener());\n}\n```\n\nOf course, NOOP_LISTENER will not be a singleton anymore in the case. Therefore, I see two possible solutions, each one with its own drawbacks.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22036435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22036959", "body": "@jsirois :+1: I liked your code/approach: it's a good balance between the two approaches I have just described. Cool. :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22036959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22073861", "body": "Very good news! :+1: Thanks a lot! :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22073861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jdanbrown": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/52", "title": "chroot with ZooKeeperClient?", "body": "Looking at the [ZooKeeperClient api](http://twitter.github.com/commons/apidocs/com/twitter/common/zookeeper/ZooKeeperClient.html) (and also the [implementation](https://github.com/twitter/commons/blob/master/src/java/com/twitter/common/zookeeper/ZooKeeperClient.java#L251)), it looks like there's no way to connect to the zk cluster using a [chroot suffix](http://zookeeper.apache.org/doc/r3.3.4/zookeeperProgrammers.html), which I typically do just by specifying the zk connect string directly, e.g.\n\n``` java\n\"host-a,host-b,host-c/prod/service\"\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/52/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/7389787", "body": "Sure. How about another constructor that takes the zk connect string directly? Something like:\n\n``` java\npublic ZooKeeperClient(Amount<Integer, Time> sessionTimeout, Credentials credentials, String zooKeeperServers) {\n  ...\n  this.zooKeeperServers = zooKeeperServers;\n}\n```\n\nIn my experience those strings are specified as-is in the config, so I'm not sure if there's much advantage to trying to split it all up into hosts and ports and chroots, rather than just passing through the string directly and letting the ZooKeeper constructor complain if it can't parse it.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7389787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7408196", "body": "Ok, sounds good to me. I'll submit a pull request.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7408196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7408564", "body": "Pull requested: #53.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7408564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "avadh": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/29", "title": "Sun jar issues because of dependency on 1.2.15 version of log4j", "body": "Version 1.2.15 of log4j has dependency on few Sun jars:\n- javax.jms:jms\n- com.sun.jdmk:jmxtools\n- com.sun.jmx:jmxri\n\nThese jars are not present anywhere in maven repo and hence cause build issues. Either we can switch back to version 1.2.14 of log4j (which does not depend on these jars) or we should 'exclude' these jars while building the project. \nI faced the build issues after forking out the project yesterday. So I modified the corresponding BUILD files to exclude these jars. \nIs it already a known issue here?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/29/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/6565630", "body": "Initially I tried building only thrift target:\n./pants src/java/com/twitter/common/thrift\nThen I tried building the full build:\n./pants tests/java/com/twitter/common:all-tests\nBoth of them failed because of the above mentioned reasons.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6565630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6623756", "body": "As of now, I solved this issue by explicitly excluding these jars from the BUILD file:\n\"src/thrift/com/twitter/thrift/BUILD\"\n.\n.\n\njava_thrift_library(name = 'thrift',\n  provides = artifact(\n    org = 'com.twitter.common',\n    name = 'service-thrift',\n    repo = pants('build-support/commons/ivy:public'),\n  ),\n  excludes = [\n    exclude(org = 'javax.jms'),\n    exclude(org = 'com.sun.jdmk'),\n    exclude(org = 'com.sun.jmx'),\n  ],\n  sources = globs('*.thrift')\n)\n.\n.\n.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6623756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "florianleibert": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/23", "title": "HttpModule / HttpServerDispatch should not assume server will be bound to 0.0.0.0", "body": "Similar to the getPort() - there should be a method allowing to specify which host-address to bind to. \nI.e. it's conceivable that someone would only want to bind to 127.0.0.1\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/23/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/2227581", "body": "Hi - \njust got around looking at this. Thanks for your input.\n\nFor the issue that you're reporting - would you mind updating the unit test to reflect the issue you are seeing? That way, I'll be able to verify that your patch works.\n\nThanks!\nFlorian\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/2227581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "billmuch": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/20", "title": "Bug: dead lock once connection session timeout?", "body": "hi, \n\nI found the thread will never be notified once it can not owned the lock and wait on the syncPoint.await() (line 125) and then the connection session timeout and reconnect again.  The the lock will be dead since the lock file on zookeeper server already been deleted and it will never be notified again. \n\nHow to reproduce:\n    1. write client code to make it wait on a lock (some other thread write a lock file on server first)\n    2. disconnect the network by dropping the line\n    3. reconnect it after a long enough time (after the server thinks client session timeout and delete the lock file on server)\nThen you will find the lock file on zookeeper server already gone and the reconnected client will wait on the SyncPoint forever.\n\nReason:\n    the session timeout event zookeeper client library send to DistributedLockImpl was droped wrongly by the line 266:\n                        if (!event.getPath().equals(watchedNode)) {\n    267     LOG.log(Level.INFO, \"Ignoring call for node:\" + watchedNode);\n    268     return;\n    269     }\n\nHow to fix:\n    you may want to move the line 266 test to the else if (event.type = Event.EventType.NodeDeleted) block. \n\nCould you take a look and fix this bug?\n\nBy the way, I am curious are this code is still using by twitter?\n\nThanks \nbillmuch\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/20/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/4465982", "body": "another dead lock for the same edge case found:\n  when client detected session timeout and call the cancelAttempt() to handle this event, deadlock will happen because event handle thread are trying to get the object lock (synchronized cancelAttepmt()) to notify the syncPoint lock; but another thread already hold the object lock(synchronized lock()) but wait for the syncPoint to release the object lock. \n\nPlease check. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4465982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cscotta": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/10", "title": "Contribution Process", "body": "I'm working on a mavenized fork of a few packages in the Commons library with some commits that add a bit of functionality to ZooKeeperMap. Some of these changes, such as dispatching fired watch events to interested listeners rather than just silently updating the map, might be interesting to other users. I'd be happy to contribute them back.\n\nI notice that there are only a couple commits to the ZooKeeper package, most of which seem to be whole-file changes or huge commits changing about 500 files with thousands of additions / deletions each. Is Twitter interested in accepting pull requests for well-tested, thoughtful changes to components of these projects?\n\nThanks,\n\n\u2013 Scott\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/10/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/3416700", "body": "Hi John,\n\nI noticed about six months ago you mentioned plans to add documentation for your in-house build tool to the wiki, but I'm still not seeing anything here.\n\nProbably just going to fork and start mavenizing a few things here.\n\nThanks,\n\n\u2013 Scott\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3416700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3639235", "body": "Thanks, John - sounds great. Really appreciate you checking this out quickly, and excellent suggestions above (esp. like the no-op listener idea). Should be able to have all of these wrapped up for you tonight.\n\n\u2013 Scott\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3639235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3678909", "body": "Thanks, John -- I'm sorry that I haven't had the chance to wrap my end of #11 up yet. PR#12 seems to make sense. I assume the purpose is to add the ability to build the ZooKeeper package separately from the rest of the lib? If so, fantastic.\n\nWill try to wrap up my work this evening.\n\n\u2013 Scott\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/3678909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22073989", "body": "Thanks for picking up these changes, Eric! Sorry that I wasn't able to wrap\nthem up at the time.\n\nJohn, thanks again for working with us on these patches internally on your\nside. Really appreciate it. Commons is a great lib and it's great to see\nmuch care taken to keep it that way.\n- Scott\n  On Aug 4, 2013 8:53 AM, \"Edward Ribeiro\" notifications@github.com wrote:\n\n> Very good news! [image: :+1:] Thanks a lot! :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/twitter/commons/pull/165#issuecomment-22073861\n> .\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22073989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ntolia": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/5", "title": "Unexpected DistributedLockImpl behavior?", "body": "I was trying to use com.twitter.common.zookeeper.DistributedLockImpl and discovered that, after a successful lock acquisition, a disconnect from the server or a session timeout would never release the lock (the internal holdsLock will always stay true). Those events are only detected at lock acquisition time. Is this the expected behavior?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/5/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/1695988", "body": "Evidently, I don't have permission to reopen.\n\nThe problem is definitely on the twitter commons side as seen in the relevant part of `mvn dependency:tree` below. `com.twitter.common.args` pulls in an old version of `org.reflections` which in turn depends on `collections`. Now, the reflections package moved to Guava a little while ago - https://code.google.com/p/reflections/source/diff?spec=svn111&r=105&format=side&path=/trunk/reflections/pom.xml&old_path=/trunk/reflections/pom.xml&old=104 - but evidently the args package isn't pulling in the most recent bits.\n\n```\n[INFO] \\- com.twitter.common:zookeeper:jar:0.0.24:compile\n[INFO]    +- org.apache.zookeeper:zookeeper:jar:3.3.3:compile\n[INFO]    |  +- log4j:log4j:jar:1.2.15:compile\n[INFO]    |  |  +- javax.mail:mail:jar:1.4:compile\n[INFO]    |  |  |  \\- javax.activation:activation:jar:1.1:compile\n[INFO]    |  |  \\- javax.jms:jms:jar:1.1:compile\n[INFO]    |  \\- jline:jline:jar:0.9.94:compile\n[INFO]    +- com.twitter.common:args:jar:0.1.7:compile\n[INFO]    |  \\- org.reflections:reflections:jar:0.9.5-RC2:compile\n[INFO]    |     +- com.google.collections:google-collections:jar:1.0:compile\n[INFO]    |     +- javassist:javassist:jar:3.8.0.GA:compile\n[INFO]    |     \\- dom4j:dom4j:jar:1.6:compile\n[INFO]    |        \\- xml-apis:xml-apis:jar:1.0.b2:compile\n[INFO]    +- com.twitter.common:base:jar:0.0.17:compile\n[INFO]    +- com.twitter.common:io-json:jar:0.0.2:compile\n[INFO]    |  +- com.google.code.gson:gson:jar:1.6:compile\n[INFO]    |  \\- com.twitter.common:io:jar:0.0.10:compile\n[INFO]    +- com.twitter.common:io-thrift:jar:0.0.10:compile\n[INFO]    |  \\- org.slf4j:slf4j-jdk14:jar:1.5.10:compile\n[INFO]    +- com.twitter.common:net-util:jar:0.0.12:compile\n[INFO]    |  \\- com.twitter.common:collections:jar:0.0.16:compile\n[INFO]    +- com.twitter.common:dynamic-host-set:jar:0.0.9:compile\n[INFO]    +- com.twitter.common:net-pool:jar:0.0.12:compile\n[INFO]    |  +- com.twitter.common:stats:jar:0.0.14:compile\n[INFO]    |  |  +- com.twitter.common:stats-provider:jar:0.0.8:compile\n[INFO]    |  |  +- com.twitter.common:application-action:jar:0.0.6:compile\n[INFO]    |  |  \\- com.twitter.common:util-sampler:jar:0.0.9:compile\n[INFO]    |  \\- com.twitter.common:util-system-mocks:jar:0.0.9:compile\n[INFO]    +- com.twitter.common:quantity:jar:0.0.14:compile\n[INFO]    +- com.twitter.common:util:jar:0.0.20:compile\n[INFO]    |  \\- com.twitter.common:jdk-logging:jar:0.0.5:compile\n[INFO]    \\- com.twitter.common:service-thrift:jar:0.0.10:compile\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1695988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1696090", "body": "That would be correct. Adding the following to my ZK import does seem to fix the javadoc portion of the build but I will wait for the updated jars. Thanks for the quick turnaround!\n\n```\n        <exclusion>\n          <groupId>com.google.collections</groupId>\n          <artifactId>google-collections</artifactId>\n        </exclusion>\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1696090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1704396", "body": "Works great. Thanks again!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1704396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1739819", "body": "And, while we are on this issue, why does the lock convert a ZooKeeper exception into a runtime/unchecked exception in cleanup() - https://github.com/twitter/commons/blob/master/src/java/com/twitter/common/zookeeper/DistributedLockImpl.java#L206 ? Makes it complicated to properly unlock if a disconnection happens.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1739819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1746047", "body": "Another unexpected thing. `tryLock(long, TimeUnit)` does not actually timeout as expected if no ZK server is found and instead seems to block forever. I believe this is because of `prepare()` which calls `ZooKeeperUtils.ensurePath()`. `ensurePath()` can block forever because it calls `ZooKeeperClient.get()`.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1746047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1813543", "body": "About the first issue, lets say that a client creates a lock on a particular path. It manages to grab the lock but is disconnected at some future point in time. The ephemeral node gets destroyed and some other client can therefore grab the lock. However, the first client still assumes it has it and the lock will not get any notification.\n\nWith regards to the other bugs, I also found a few more issues. Would you be willing to accept a patch like https://github.com/ntolia/commons/commit/89280c50413f3b92ea142cf17e1c917dcbb119a3 ? I have a similar patch working in a private repository but cannot seem to get pants to work for me. After fixing some python incompatibility issues, it can't seem to find the ' spy#memcached;2.4.2' dependency.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1813543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/2173794", "body": "Bump.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/2173794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/2484556", "body": "Florian, can you give me an idea of the unit tests you are looking for? Most of my patch has to do with correctness and cleanups. The only thing I can think of right now is a test that checks that tryLock(long timeout, TimeUnit unit) does not block forever if no server is present.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/2484556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sheki": {"issues": [{"url": "https://api.github.com/repos/twitter/commons/issues/1", "title": "Build configuration missing.", "body": "Is any configuration / build scripts /ant OR maven going to be released for building these tools any time soon?\nVery much interested in looking at how Netty is used with thrift.\n\nThanks for open sourcing.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/1/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stuhood": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/06905dc0f1a26440a79ff1164831c85ce2d1bdf0", "message": "Update to pants 1.4.0rc0 (#457)\n\n* Update to 1.4.0rc0\r\n\r\n* Require JDK8.\r\n\r\n* Skip scalafix for now.\r\n\r\n* Remove newly detected cycle due to isolated python tests."}, {"url": "https://api.github.com/repos/twitter/commons/commits/2fe96bdcd69ba894a43157809a267674ad0d0a47", "message": "New binary url."}, {"url": "https://api.github.com/repos/twitter/commons/commits/edbdb602042b0fa5fb7e4bdd886ddb0ab53add11", "message": "Update to 1.3.0, and fix warnings. (#453)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/cfd86c13d32c4dc6a3c19dcba66c5f7d96ed1016", "message": "Very likely to be the final release candidate! (#452)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/2de63c8032ab01d90dce47ee28263cb414943a80", "message": "Upgrade to pants 1.3.0rc1 (#451)\n\n* Upgrade to 1.3.0rc1\r\n* Remove dead target, and fix argument ordering in ci.sh\r\n* Enable storing the buildcache in travis` cache.\r\n* Merge JVM target sets, drop a bunch of unnecessary test aliases.\r\n* Drop remote_python_thrift_fileset, fix resource definitions.\r\n* Clear RootMetrics (singleton... yuck) before use, and skip flaky test."}, {"url": "https://api.github.com/repos/twitter/commons/commits/c9c275907f154aac69e2d16ed64861374e1d27c4", "message": "Bump pants to 1.3.0.dev14 and fix deprecation warnings (#449)\n\n### Problem\r\n\r\nThe 1.2.1 upgrade was incomplete, and didn't update the ci.sh script for python.\r\n\r\n### Solution\r\n\r\nBump to a newer version, allow prerelease python dependencies, raise the python version constraint, and remove deprecated flags."}, {"url": "https://api.github.com/repos/twitter/commons/commits/4360d424d66f8e2eabc8c35021994a0263eae3ef", "message": "Update to pants 1.2.1 (#448)\n\n### Problem\r\n\r\ncommons is on a >1 year old, pre-`1.0.0` version of pants.\r\n\r\n### Solution\r\n\r\nUpdated to the latest stable version and got the majority of the tests passing."}, {"url": "https://api.github.com/repos/twitter/commons/commits/02833f537fe7ad19dee71b8631acd19fc7c9e933", "message": "Drop rbcommons in favor of github reviews. (#446)\n\n### Problem\r\n\r\nTwitter has decided to move away from RBCommons for external contributions, at least partially because of the improvements to Github reviews... but also due to a unanimous decision from the pantsbuild/pants project to move away from RBCommons as well (the largest project that was using rbcommons).\r\n\r\n### Solution\r\n\r\nUpdate documentation and scripts to describe a Github-pull-request-based workflow.\r\n\r\n### Result\r\n\r\nAll future review should be accomplished via Github pull requests."}, {"url": "https://api.github.com/repos/twitter/commons/commits/b6f239e2a1ddfbe29c2e81e21be9e965c899147d", "message": "Prepare twitter.common.pants release\n\nRelease for pantsbuild.pants 0.0.40, which requires a new version of twitter.common.*\n\nReviewed at https://rbcommons.com/s/twitter/r/2577/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/dcde9d74f9e530e1844c32d8dd704418c4b4a0bd", "message": "Prepare for an 0.8.2 release of twitter.common.pants\n\nTesting Done:\n$ ./pants setup-py pants-plugins/src/python/twitter/common/pants:plugins\nINFO] Detected git repository at /Users/stuhood/src/commons on branch stuhood/prepare-for-0.8.2-release\n\n17:08:41 00:00 [main]\n               (To run a reporting server: ./pants server)\n17:08:41 00:00   [bootstrap]\n17:08:41 00:00   [setup]\n17:08:41 00:00     [parse]\n               Executing tasks in goals: setup-py\n17:08:41 00:00   [setup-py]\n17:08:41 00:00     [setup-py]\n                   Running packager against /Users/stuhood/src/commons/dist/twitter.common.pants-0.8.2\n                   Writing /Users/stuhood/src/commons/dist/twitter.common.pants-0.8.2.tar.gz\n               SUCCESS\n\nReviewed at https://rbcommons.com/s/twitter/r/1967/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/b2295e739b90a62ce2d744dcc681800c598e11ce", "message": "twitter.commons: Release 0.6.0 of twitter.common.pants\n\nRelease twitter.common.pants 0.6.0 due to changed transitive deps.\n\nTesting Done:\nA functional noop; a test release was incorporated internally to unblock a release.\n\nReviewed at https://rbcommons.com/s/twitter/r/1329/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/86a03ab347955b666c9435446fb796056886188e", "message": "[PATCH 3722/7508] Science: Post guava 15.0 cleanups - Use new scrooge - Publish and use new junit-runner\n\nRB_ID=264999\n\n(sapling split of f0fd02adccb1364a3f32685308f25e27da52c99a)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/748aa094c54b5ccc3ebf5c3bea06ab37a0a3e64c", "message": "[PATCH 3681/7508] Science: Bump guava to 15.0 - Bump guava to 15.0\n\nCorresponds to birdcage review: https://reviewboard.twitter.biz/r/263101/\n\nRB_ID=263149\n\n(sapling split of 8ad899a8d2bfc16c6c9d11037321722f4f51fc28)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/110285873", "body": "The cache is on by default for everything now.", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/110285873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/162155839", "body": "Yes: Putting something in the plugin list enables it, so having this here was enabling it twice, which now causes an error.", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/162155839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "brutkin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/ea422dd91e35d302f87c80433615aa9b946b969d", "message": "Add option to sort commands names in python app help (#455)\n\n* Fix python test command in README\r\nAllow sorting of command names for help in python apps\r\n\r\n* Jcohen feedback - make sort option cleaner"}], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/425", "title": "[python zookeeper] Add member_id to ServiceInstance object if provided.", "body": "Add member_id to ServiceInstance object if supplied when creating it and make that the default action when creating a serverset list. This is mostly useful for reconciling issues with the serverset e.g. duplicate registration.\n\nTests all pass:\n$ ./pants test tests/python/twitter/common/zookeeper:all\n11:22:40 00:02         [chroot]============== test session starts ===============\n                     platform darwin -- Python 2.7.10 -- py-1.4.31 -- pytest-2.6.4\n                     plugins: cov, timeout\n                     collected 85 items\n\n```\n                 tests/python/twitter/common/zookeeper/kazoo_client_test.py .\n                 tests/python/twitter/common/zookeeper/group/test_active_kazoo_group.py ................................................\n                 tests/python/twitter/common/zookeeper/group/test_kazoo_group.py ..................\n                 tests/python/twitter/common/zookeeper/serverset/test_endpoint.py ............\n                 tests/python/twitter/common/zookeeper/serverset/test_kazoo_serverset.py .....\n                 tests/python/twitter/common/zookeeper/serverset/test_serverset_unit.py .\n\n                 =========== 85 passed in 23.80 seconds ===========\n```\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maheshgaya": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/45a0159a8e170baaf88103322cfacb2a0e073405", "message": "docs: updated broken link"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BobbyD-FL": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/b97322f923bb75b3174693c739f7fca682d3fcd7", "message": "Bump Version to 0.3.9\n\nTesting Done:\nTravis CI: https://travis-ci.org/twitter/commons/builds/167790573\n\nBugs closed: 443\n\nReviewed at https://rbcommons.com/s/twitter/r/4313/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/fd79470188bb9a1f96c8a8f4368a25627bd03022", "message": "Bump Version to 0.3.8\n\nTesting Done:\nTravis CI: https://travis-ci.org/twitter/commons/builds/167517517\n\nBugs closed: 441\n\nReviewed at https://rbcommons.com/s/twitter/r/4307/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/18d4bbc8fb1c9fc5a2bcf9c3190aefcfcf36890b", "message": "Added CommandUtil.cmd_within_path() within twitter.common.util.command_util and patched twitter.common.fs.hdfs\n\nTesting Done:\nTravis: https://travis-ci.org/twitter/commons/builds/167214107\n\nBugs closed: 440\n\nReviewed at https://rbcommons.com/s/twitter/r/4302/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chickenbellyfinn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/7a61c23cc0085329bc95e762701ea66c5050e7a7", "message": "Fix AttributeError in HDFSHelper constructor (#436)\n\nuse_hadoop_v1 isn't a member variable. \r\nhttps://github.com/twitter/commons/issues/435"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "drewrothstein": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/77b31021cc19410aac060887dded2319c9c62814", "message": "Bump VERSION to 0.3.6.\n\nBugs closed: 434\n\nReviewed at https://rbcommons.com/s/twitter/r/4109/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/b444e9ea95a9b6f9699e57db88cdc1a15857aabd", "message": "[hadoop] change hadoop to hdfs cli\n\n[hadoop] add v1 option but default to hdfs\n\nGitHub: https://github.com/twitter/commons/pull/433/\n\nTesting Done:\nTravis: https://travis-ci.org/twitter/commons/builds/141925751\n\nUpdated Travis: https://travis-ci.org/twitter/commons/builds/143485107\n\nBugs closed: 433\n\nReviewed at https://rbcommons.com/s/twitter/r/4048/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/74689407", "body": "How are you trying to use this, can you provide a bit more surrounding code?\n\n`use_hadoop_v1` should be passed in to the `HDFSHelper` if you want to set it to a non-default value.  The default is `False`.\n\nThis variable is only used in the initializer to set `self.cli_command` to the correct Hadoop command to be used later in operations.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/74689407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "atollena": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/c19dcc8820641948a079c6dfe6e463a53cb51f69", "message": "Merge pull request #426 from atollena/endpoint-ip-addresses\n\npython: Add IP addresses to serverset entries"}, {"url": "https://api.github.com/repos/twitter/commons/commits/a85b7ad9aae1150190aa8be30b83e5f0bb91508b", "message": "python: Add IP addresses to serverset entries\n\nServerSet entries contain hostnames that require a DNS lookup before\nuse. When hostnames map to a unique, fixed IP address, this additional\nlookup is unnecessary and can put strain on DNS infrastructure in large\ndeployments.\n\nThis change adds 2 optional fields to server set endpoints: `inet` and\n`inet6` respectively for a human readable representation of an IPv4 and\nof an IPv6 address.\n\nHostnames are still mandatory, for backward compatibility with clients\nthat expect those fields. Port is untouched."}, {"url": "https://api.github.com/repos/twitter/commons/commits/47ec7b97765fc7792c11f6067ed5ba14261ab442", "message": "Python linter: improvements to git intergration\n\n- Diff against merge-base master, rather than master, by default\n\n- Fix issue when the linter is not running from the repo top-level\n  directory."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "imsut": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/264011d8443ee2b292470f45f4ad0600a9016aa3", "message": "add spec_set=True"}, {"url": "https://api.github.com/repos/twitter/commons/commits/545fa9157688b148a38c495495ab00f75454938a", "message": "add autospec=True"}, {"url": "https://api.github.com/repos/twitter/commons/commits/b2ec2cab572846f9ed636f40d6abccaf48b71813", "message": "change to assert"}, {"url": "https://api.github.com/repos/twitter/commons/commits/6e148d40025c3f8d65abed8483dae1fc33095044", "message": "Merge remote-tracking branch 'upstream/master' into enrich_reviewboard"}, {"url": "https://api.github.com/repos/twitter/commons/commits/bd5ca1fa0297d25e31ac7197848d0a4ce2cf273d", "message": "add test"}, {"url": "https://api.github.com/repos/twitter/commons/commits/f40316cf5fe989fa6647fe2ba74de11ad2e0b4f6", "message": "revert unnecessary chagnes"}, {"url": "https://api.github.com/repos/twitter/commons/commits/e8537e27db782f7d8e42fcaef143ad11ba9cb2ee", "message": "revert unnecessary chagnes"}, {"url": "https://api.github.com/repos/twitter/commons/commits/2460b654a0136ca66e8684dc866c3e673f0276a7", "message": "Merge branch 'master' into enrich_reviewboard"}, {"url": "https://api.github.com/repos/twitter/commons/commits/daaffcc682166edfb1df6c0154ea8889831c9bb5", "message": "WIP"}, {"url": "https://api.github.com/repos/twitter/commons/commits/2252e5ec247695344c6c5aecf019d810a7dfbfdc", "message": "[PATCH 3730/7508] use createUnresolved() not to connect to hosts\n\nsee https://jira.twitter.biz/browse/REVDEVPROD-598\nwithout this change, this test unnecessarily attempts to connect to foo.bar.baz\n\nRB_ID=266271\n\n(sapling split of f8a1f302a9a75e1ed52dbf888e033ac65f4b33f3)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/67ded764e2e246630f2c59e16d7b7e351c8731f6", "message": "[PATCH 3678/7508] implement UnitTestSecurityManager designed to provide secure environment for unit tests.\n\ncurrently it blocks network connection to external hosts being created,\nwhich will prevent not-carefully-written tests from talking to production systems.\n\nRB_ID=259645\n\n(sapling split of 9767cb593719e7e4408ea5b6af0bd49c50509fd1)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "santazhang": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/f002c1bc11eb2ec5d514d9558cb398f4663783c7", "message": "fix python twitter.common.string.basic_scanf\n\nScanfResult has groups(), but not grouped().\r\n\r\nhttps://github.com/twitter/commons/blob/caece3a053df29ac489d6bfc938f7f9f23b27e25/src/python/twitter/common/string/scanf.py#L23"}], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/390", "title": "fix _make_proxy_function() in twitter/common/app/__init__.py", "body": "`method_name` should be used instead of `attribute`.\n\n`attribute` is actually a global variable introduced later. Current code happen to work because calling `_make_proxy_function(attribute)` makes `method_name` equal to `attribute`.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mattastica": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/ed0e68c8ff6eac2c615c236f9010ee7f596cf8e2", "message": "Add closing parenthesis to indentation example"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jcohen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/4e8f6c02063fd4272b5d6cd08ebd10fa6f22dff8", "message": "Remove protocol from logconfig jquery url to avoid mixed content warnings when served via https."}, {"url": "https://api.github.com/repos/twitter/commons/commits/5d8044aa6c14fa18a83a20b20ff5f479f0d6f6ca", "message": "Minor styleguide updates.\n\n- Add link to Google's style guide.\n- Update link to Effective Java\n- Update javadoc links to point to JDK 7\n\nTesting Done:\nPreviewed markdown.\n\nReviewed at https://rbcommons.com/s/twitter/r/1579/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/8d078cfec8dc0f11f4cf7af2c2693de86b1c222b", "message": "Publish Java styleguide\n\ncommit e9fc15c1214360f1307f34b8406b3c9067b11ad0\nAuthor: Joshua Cohen <jcohen@twitter.com>\nDate:   Wed Jan 7 15:47:56 2015 -0800\n\n    Publish Java styleguide.\n\n src/java/com/twitter/common/styleguide.md | 1302 +++++++++++++++++++++++++++++\n 1 file changed, 1302 insertions(+)\n\nReviewed at https://rbcommons.com/s/twitter/r/1578/"}, {"url": "https://api.github.com/repos/twitter/commons/commits/062d228f3575a25befbf789066141124c1c284e4", "message": "[PATCH 5930/7508] Science guava update, take 2.\n\nRB_ID=317663\n\n(sapling split of 74c6c7e5db3a28c5be54ff0852a1cd05052fb361)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/d8917225e04c4914f21ea76891aba0197b34b841", "message": "[PATCH 4477/7508] Fix NPE in HttpStatsFilter if no method was matched.\n\nRB_ID=289623\n\n(sapling split of ec6cdac9bca521e508a0d1ec025674e75de2c1cd)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/bd138d6498df867f5d9864962205a079dd54f7fe", "message": "[PATCH 4186/7508] Initial compatibility changes for the guava 16 update.\n\nRB_ID=279925\n\n(sapling split of c6151fd14006a0a74495a713c3ecd6f3b9fc45b9)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/0afee00b5930af120348fdae81dcb547a09f9efc", "message": "[PATCH 4011/7508] Cleanup on TrackRequestStats annotation.\n\nRB_ID=274833\n\n(sapling split of ebceda18685e2a1fd22311137102bf5b43cd9620)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/5041e2d06b862a4f8e4bff594089433cbcbf220b", "message": "[PATCH 3912/7508] Update ConsoleRunner for guava 16 compatibility.\n\nRB_ID=271711\n\n(sapling split of c77afef4951066caef46cb07ab2220f772da5c40)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/6ea2044a098054983e64a79b57ccbd3157f6509b", "message": "[PATCH 3837/7508] Add a ContainerResponseFilter that allows for tracking response stats on a per-request category basis.\n\nRB_ID=263351\n\n(sapling split of 0554ce56dffd837905dbbe01248dacaf89fc3fae)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/f92b6c1961a5b3e0ef1216c40cf899fc6d0b9aea", "message": "[PATCH 3638/7508] Add exception counting to HttpStatsFilter.\n\nRB_ID=260571\n\n(sapling split of 089faa301c3f0b1fc87ec2c0fa87ce8dd79f00ef)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/7196aec2d6faf2d92aeec41da67647e0737427aa", "message": "[PATCH 3603/7508] Copy HttpStatsFilter from Aurora to twitter-commons.\n\nRB_ID=260503\n\n(sapling split of 5044d3ca1a7177c94667ddef81e6e8e2de26d3ca)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/71752a2fe663802f450f126266cd91151f2cb88a", "message": "[PATCH 2565/7508] Support value-equals semantics in returned Credentials.\n\nRB_ID=216126\n\n(sapling split of f41a7df639de46f0eac1a888e167e10087fc26c3)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/8064f1c5241f67cb447518eccbda402d09ba531b", "message": "[PATCH 1984/7508] Remove BooleanExpressionComplexity check from checkstyle\n\nRB_ID=190923\n\n(sapling split of 2af3b9db559e43ee0169acccc8fb92cd9aa84e50)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/151318315", "body": "maybe something like the following would be a bit cleaner?\r\n\r\n```python\r\ncommands_and_docstrings = self.get_commands_and_docstrings()\r\nif sort:\r\n  command_and_docstrings = sorted(command_and_docstrings)\r\n```", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/151318315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "davidPan48": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/3de22bfea37f86989f8cf88075a7e82036c68d1d", "message": "Added mv() to twitter.common.fs.HDFSHelper\n\nTesting Done:\n./pants tests/python/twitter/common/fs::\n\nNote that test_read() was failing prior to this change, and is still failing after the change.\n\nBugs closed: 334\n\nReviewed at https://rbcommons.com/s/twitter/r/1460/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zmanji": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/5cde15008d0b8d2a217aa3f648d5d8ecd84386f9", "message": "Merge pull request #333 from zmanji/bump-version\n\nIncrement twitter.common to 0.3.2"}, {"url": "https://api.github.com/repos/twitter/commons/commits/0f672d99028e35105a68a852d513dc32a6f6f812", "message": "Increment twitter.common to 0.3.2"}, {"url": "https://api.github.com/repos/twitter/commons/commits/32a3ca5a04a8a2fcde9bc447baf63d7fdd44c6ee", "message": "Remove unecesary atexit handler and tests for module."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "simonrad": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/481bab9ee70414ec8f678c653977411666ce063a", "message": "Add to Application class a method to set the usage message automatically, to show the available commands."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexstaytuned": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/5d9ebe97a74531ee11dbfc4c915878b9c4bff6b4", "message": "Merge pull request #299 from alexstaytuned/add_filtering_for_py_metrics\n\nAdd filtering for py metrics"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ity": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/3fbb92c450a226772cf3f2ecd71a0c77b430d36d", "message": "Merge pull request #298 from ericzundel/zundel/fix-corrupt-across-filesystems\n\nClose the open files before trying to move them"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stevegury": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/de504e33f9e371cc646a2c65b40a9e1f2f0e44cc", "message": "[PATCH 7497/7508] util: Introduce LowResClock, a fast but low resolution Clock.\n\n- Problem\n\nSome piece of code need frequent access to system time but doesn't really\nrequire a high precision. The `Windowed` class is an example of that, we need\n~second resolution but read time at every access.\n\n- Solution\n\nIntroduce a LowResClock which wrap the system clock and cache its value and\nstart a periodic task responsible for updating its value. This replace the\nsyscall by reading a volatile variable.\n\n- Result\n\nThe performance of system relying on `Windowed` is greatly improved.\nAs an example, the StatsInsertionBenchmark is more than two times\nfaster (not part of this review):\nMetricsStatsInsertion   153.0 =\nMetricsStatsInsertion   71.5 =\n\nRB_ID=349819\n\n(sapling split of 142c18407ff826ed5552d68198da5bba542a3492)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/027742a7b656af69cbb567d0e15218f083ecf66b", "message": "[PATCH 6578/7508] metrics: Add methods for removing gauge/counter/histogram\n\nCurrently it's only possible to create/register new metrics, but it's impossible to remove those.\nIt's a problem for \"per host\" stats in finagle, because we create short lived metrics containing\nthe ip address.\n\nThis change introduces new methods for removing metrics (by reference and by name).\nIt also paved the way for introducing new abstractions that take care of ephemeral gauges.\n\nWe can now add/remove metrics.\n\nRB_ID=332265\n\n(sapling split of e6b9f21eeded0c6a5965f3e2b95aa5a8c6b900c0)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/cc54f56b53ff3fa7cd1559cbdaccf9b2476c08b3", "message": "[PATCH 6368/7508] metrics: Add sample methods per type of metrics (counter, gauge, stat)\n\nMotivation\nObservability would like to be able to know what metrics are (counters vs stats vs gauges)\n\nModification\n- Add 3 new sample methods (one per type of metrics)\n- keep the old sample() method for ABI compatibility\n\nRB_ID=326325\n\n(sapling split of c90207f6f065ddfe4f094d84380b8e9b0d91ce3c)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/84d03a4161ff17ecd364d479844e318b3585aeae", "message": "[PATCH 6291/7508] objectsize: Fix check for JVM type (for TwitterJDK)\n\nMotivation\nobjectsize library checks the JVM type at startup and whitelist only Hotspot and OpenJDK.\nThe CI test machine is now using the TwitterJDK and objectsize needs to accept it as a\nvalid JVM.\n\nModification\nAdd TwitterJDK in the list of valid names.\n\nRB_ID=324465\nTBR=true\n\n(sapling split of 04e66bc32c402067b905f1a9626d2266b5db4b68)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/b7cafa18443c38fb9a3a638d41c509f7c31f486f", "message": "[PATCH 6021/7508] Aggregate statistics in WindowedStatistics instead of keeping multiple objects.\n\nMotivation:\nUsers reported that they saw contention on the Histogram class. The benchmark show that\nHistogram.add was taking ~400ns, mostly because of WindowedStatistics.accumulate ~250ns.\nFurthermore in order to have consistent statistics per Histogram, Histogram.snapshot()\nis a synchronized method, it means that if the query path is slow, then it also implies\ncontention on the insertion path.\n\nModification:\nChange the algorithm used in WindowedStatistics, it aggregates statistics instead of\nkeeping one Statistics object per Window. This is pretty straight forward, unless for\nthe algorithm used for aggregating variances (cf. wikipedia).\nIntroduce a refresh() method which compute all the statistics in one pass (the user\nis responsible for calling it before reading any value).\n\nResult:\nHistogram.add is still synchronized but it is faster, which reduce contention.\nHistogram.snapshot is also faster.\n\nRB_ID=320093\n\n(sapling split of 42e109094bd2fece0d48790c508d1e4210d320e3)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/01483f6303c2c5521b092de10be9c3c329d26d6f", "message": "[PATCH 5875/7508] Metrics: Lazily allocate buffer on first access\n\nMotivation:\nI saw a heap dump of some service using metrics. Most of the memory was used by the histograms\nand most of the value in those histograms were \"0\" because only a few elements were inserted\ninside.\n\nModification:\nApproximateHistogram doesn't allocate all the buffers during its construction.\nThose buffers are lazily allocated on first access.\n\nResult:\nThis change nothing in term of results, but for the Histograms that contains only\na few values, they never allocate higher buffers and then they consume less memory.\n\nRB_ID=320507\n\n(sapling split of 0e0266406b4cec28505fddd250be01673f953a96)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/3ec53895b3c5375101f8fe975a35d5c39709cadd", "message": "[PATCH 5640/7508] Update commons-lang from 2.5 to 2.6 (to match birdcage version)\n\nRB_ID=315861\n\n(sapling split of 21cf8f7af20a6c7dc47b043074d322c57a5707c5)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/f8698ef9ab86c815833e987b6b66f5b3e5c91b85", "message": "[PATCH 5530/7508] [serverset] Unwatch expiration watcher on exception.\n\nMotivation:\nTFE reported that their last canary version show GC pressure due to 500k watchers stored in memory.\nThis was due to a loop in ZkOffer that keep trying to watch a particular zk path (which wasn't created).\n\nModification:\nIn case of exception during the call of group.watch, we unregister the expiration watcher.\n\nRB_ID=311259\n\n(sapling split of 394da39d387f6e530699c4cc6c25db6d28166e94)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/0f61bb0712d3d0f61fe7346f3093099f636bcf8a", "message": "[PATCH 5162/7508] [stats] Fix cleaning of expired windowed in WindowedStatistics\n\nMotivation:\nAs reported by users, WindowedStatictis was not properly cleaning old windows of data.\n\nModification:\n- Add a new test that exposed the bug\n- Check for expired window before adding an element (or reading a stats)\n\nResult:\nExpired windows are now cleaned as expected.\n\nRB_ID=300565\n\n(sapling split of 7ae472b0392f5b20e0c6cca10b94e1c889129900)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/5dd3cfd572202fbcadfa64e1abd892f9113f6744", "message": "[PATCH 4771/7508] zookeeper: Add a queue to process WatchedEvent in order\n\nMotivation:\nFinagle's StabilizingAddr (formerly known as StabilizingGroup) has a notion of health of a cluster. This health is determine by the \"zookeeper state\" of the events it receives. If the ordering of those events is changed, then it could received 'SyncConnected' before 'Expired' and then consider the cluster as unhealthy.\n\nModification:\nIntroduced a \"Processor\" thread, which is responsible for processing WatchedEvent and a LinkedBlockedQueue.\nThe \"SessionWatcher\" is now sending events in the queue and those events are processed by the \"Processor\", if processing one of those events generate a new event, this event is enqueue AT THE END (and not processed immediately).\n\nResult:\nEvery events are received in order by the Watcher.\nStabilizingAddr perceived correctly the ZK cluster as (un)healthy.\n\nRB_ID=288321\n\n(sapling split of ee51df6d2ad70446a8b669b331204d04f78ae396)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/afd79a822e7143d7175a7aed378294d976716491", "message": "[PATCH 4399/7508] Revert \"Use a CopyOnWriteHashSet to avoid CME.\"\n\nMotivation:\nThis commit introduced a processing of WatchedEvent out of order, which\ninterferes with Finagle's StabilizingAddr.\n\nModification:\nRevert the commit, which bring back the synchronized executions of watchers\ncallbacks.\n\nResult:\nAs before events are processed in order.\n\nRB_ID=288405\n\n(sapling split of a4d537945eedcff750620458410b182afe972705)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/94c9ac7d11191d8181263da53b273169939a93a1", "message": "[PATCH 3669/7508] metrics: Introduced WindowedStats\n\nmetrics.Histogram is windowing its percentile statistics but in the past we didn't do the same thing for non-percentile statistics.\nIt resulted in graph showing the p50 for the last minute but also the avg since the server started.\n\nRB_ID=257959\n\n(sapling split of 7ce9af1c43735b6578129f8f2448abe80b745b8b)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/71087307c46d039000da1be1a1a01dbae92f04bb", "message": "[PATCH 3467/7508] metrics: Introduce HistogramInterface and Snapshot\n\nAlso reverse the model of Histogram, previously creating an Histogram would register Gauges in the main registry, now it doesn't anymore, but the main registry is taking a snapshot of the Histogram. It has the advantages of\nsolving the problem of inconsistant percentiles (in the past we can query one percentile, add a bunch of values, and query another percentile).\n\nRB_ID=238509\n\n(sapling split of 41e4bb9744d5644b08a464f8862077ae37920ba2)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/22c7c5c445a4865867c3ee80e3ff851fe7172521", "message": "[PATCH 2992/7508] metrics: Restore ABI of MetricRegistry\n\nRB_ID=238751\n\n(sapling split of 960e2a8cb74be7a0930fe40ccec96134cf8c17e7)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/10e8100cabc6cfad2d4485094ea323395eb3a145", "message": "[PATCH 2966/7508] metrics: Disable memory test\n\nRB_ID=237793\nTBR=true\nNO-QUEUE=true\n\n(sapling split of ef890946a91a550fa1ffc567e9d0d581bcde361b)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/8c6c426b7f221d063e89434767c03fbedaee877d", "message": "[PATCH 2965/7508] metrics: Introduce Windowed<T>\n\nIntroduced Windowed<T>, an abstraction that allow you to split multiple\ninstances across a sliding window. Basically this is just refactoring\nWindowedHistogram into a subclass of Windowed<Histogram>, I've done that\nbecause I'll need that in another RB (coming soon).\nI also moved WindowedHistogram and WindowedApproxHistogram in\ncom.twitter.common.stats (and updated the test in consequences).\n\nRB_ID=227463\n\n(sapling split of d95a05a57e29159cbc4b82ae1613c83095ea162a)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/b54077f0d0bfd00a2b825398d65f2c195820b8bc", "message": "[PATCH 2958/7508] metrics: Histogram noe use directly Statistics.sum()\n\nRB_ID=236305\n\n(sapling split of b2c00db98d2541c1a543095c4118884919f9081d)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/f3d0fc63b4b4645faf27eec5f1bb6dc8248faad7", "message": "[PATCH 2957/7508] metrics: clean-up renaming\n\nThe method \"registerCounter\" has been renamed \"createCounter\", because it\nis what it does, and it's now unambiguous for the user.\nThe class \"ScopedMetrics\" has been renamed \"ScopedRegistry\" (+ become\npackage protected) for the same reason.\n\nRB_ID=226981\n\n(sapling split of 05e6ba19df4a4958dedb88a0b57b347b3c45609c)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/c0bd25d7c805a0928851df77e40643b163edafcd", "message": "[PATCH 2818/7508] stats: add sum in Statistics\n\nRB_ID=227021\n\n(sapling split of 05c9e811eda974c47de55ca5f52df5654e74a4a7)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/f8d1b50dbb97a3964ccc4b21301c562c4d26fe00", "message": "[PATCH 2049/7508] Metrics: fix demo dependencies\n\nRB_ID=195425\n\n(sapling split of 6b83510b94f6d8ec10cc6824bc3b69d9ff272b66)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/22724977", "body": "It seems that you have a dependency problem.\nCan you open an issue here: https://github.com/twitter/twitter-server/issues and copy/paste your dependency graph.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22724977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "edengol": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/aee7c133c55f379c36e9201bc4982af7f34a9c28", "message": "[PATCH 7466/7508] Penguin v3 changes: created Arabic normalization and tokenization, fixed Latin Tokenizer All Penguin behavior remains the same except where Penguin V3 is explicitly specified to these tools.  I have summarized the changes below.\n\nRB_ID=339201\n\n(sapling split of d94082e0ef41a211f3e01071183ffca1dac53d43)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nlpenguin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/cd810cb27532bc446b4ef5c6d0afc2313754fc0b", "message": "[PATCH 7437/7508] Fixed non-final incrementToken for TwitterTokenStream in Science\n\nRB_ID=352027\n\n(sapling split of 28be30ffef544f5a7b4c787e1d04893474ae59f1)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/c7cff11afc81384a0a8efa2ee60eb02364cd98aa", "message": "[PATCH 7394/7508] Make TokenStrean extend Lucene's TokenStream\n\nRB_ID=334957\n\n(sapling split of c3b3f07bd7588a26a811cc916fda297ef22fe4f0)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jduan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/aece89b6e130243e339389fef7fa4a689693f0c6", "message": "[PATCH 6454/7508] Revert \"mark tests using ObjectSizeCalculator flaky due to JDK upgrade\"\n\nNow that Steve's changes (04e66bc32c402067b905f1a9626d2266b5db4b68) is\nscience master, I'm reverting this changes I made a couple days ago.\n\nRB_ID=326447\nTBR=true\n\n(sapling split of 947cbd844b311ead23f99bce78d54f72cf81bea8)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/00327e08646a454abd9a073a5c76e2224833263e", "message": "[PATCH 6195/7508] bugfix: add import org.junit.Ignore\n\nRB_ID=324567\nTBR=true\nNO-QUEUE=true\n\n(sapling split of cedc65ade642fefdb2cc3866cb351e792bcfe5b1)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/454511dcc8851b00ae51bab832e03a817a8b8d8f", "message": "[PATCH 6192/7508] mark tests using ObjectSizeCalculator flaky due to JDK upgrade\n\nRB_ID=324405\nTBR=true\nNO-QUEUE=true\n\n(sapling split of f2efb9b540099e25b33290243a151db7d7f623ff)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmdhacks": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/b44cb0b56640de590fdcd5b2d6e81cf752f0bdbd", "message": "[PATCH 6367/7508] Metrics: throw exception on collision\n\nProblem\n\nThere's no way of knowing in Metrics if your metric creation is\nclobbering an existing stat.\n\nSolution\n\nThrow an exception if this happens.\n\nRB_ID=261527\n\n(sapling split of aede66197414bd4a84a6a47bdd709994079c50e3)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/734b140f4e54bf0137f959db8289b0691ca2c35b", "message": "[PATCH 5062/7508] Metrics???: fix a bug that froze jvm memory stats Motivation: a bug was discovered that caused Jvm memory stats to never update Modification: I added an interface MemoryReporter that has a getUsage() method to refresh the memory, and reframed memory usage on that method. Results: Memory usage should now update when stats are resampled\n\nRB_ID=298367\n\n(sapling split of 0f046f0ec759efc2e51a2eb02e34d59661562ee7)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/20f79c5e415d66882c059ac8708969a1b80f07f8", "message": "[PATCH 3191/7508] Add JVM stats to metrics in science\n\nRB_ID=241003\n\n(sapling split of 5d85f00b9c51d16df0fd76c2f0d2124b7238a07e)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/25da1639d5705cafe4b3f82f35adb37b78feb60f", "message": "[PATCH 2111/7508] fix a bug in getQuantiles\n\nRB_ID=195401\n\n(sapling split of fd9495973466e111399af857609f50afa1d340d9)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mosesn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/f2e6707317c957358522890f8160257b31a9ffe2", "message": "[PATCH 5349/7508] bumps finagle, util, twitter-server, t-s-i to current versions Also bumps scalatest to fix consumers who were relying upon finagle pulling in scalatest.\n\nRB_ID=298689\n\n(sapling split of a560ea4178ccafb53028a5ac45919c6b6dd3a184)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alambert": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/1418383e46594d31bcc1b0e628ed7d2bf33ae02e", "message": "[PATCH 5205/7508] CSL-865: expose getQuantile, getValue in Percentile Per Steve Gury, I made these accessors public.\n\nRB_ID=303073\n\n(sapling split of 27adc0c4d92237051c3d04cb2ffa876cb368ced9)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mariusae": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/1a159ea7987d842323efbfc1c6fedccae4c2d2e9", "message": "[PATCH 5072/7508] Set the default ZooKeeper timeout to 4 seconds.\n\nTwitter's ZK clusters are now configured with min=4, max=10 seconds.\n\nRB_ID=299627\n\n(sapling split of 2b60894515ec0e31604f3b5b1db163d4fb5b508d)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sagemintblue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/0e8662235bac4ea3be3f412691e6f6551cff4157", "message": "[PATCH 4855/7508] Updates MethodTypeParameterName format to match ClassTypeParameterName format\n\nRB_ID=295009\n\n(sapling split of de3ac654d0882cc517680cb22253c309681003c4)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmonkeyjam": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/1071c0ee58d54403921d5804379dcc07e70ace80", "message": "[PATCH 4344/7508] Alphabetize target dependencies This looks like a total yak shave, but it will make automating the moving of dependencies to 3rdparty/... easier.\n\nRB_ID=285621\nTBR=true\n\n(sapling split of 3189674498304979ce21dbd2e5165593064f7984)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nielsvaneck": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/2593809d62f3fba96bc8714fdbdece829dad6b6b", "message": "[PATCH 3830/7508] Ignore the CheckStyle line length rule in Javadoc comments\n\nRB_ID=264329\n\n(sapling split of 374e838412561dd7dcd2d835d3f5788523bcdd13)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/236ca367e8e9d6b19882cb5e74088c92981fb700", "message": "[PATCH 3440/7508] fixing xml format on previously ok'ed checkstyle rule change Related to: https://reviewboard.twitter.biz/r/256517/\n\nRB_ID=257031\n\n(sapling split of bafa6c12451e538140322cc4ef231a1debe1b4de)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/f2d875febf3b5fa65653467173ef959608880b05", "message": "[PATCH 3437/7508] Allow 2 CAP Class type parameters for improved readability\n\nRB_ID=256517\n\n(sapling split of 1be83783a548ae0ca9746d4347b434f0b09004c0)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wangtianthu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/f6e771756735b9994adb892106399d68292c50b6", "message": "[PATCH 3410/7508] Allow user to set the max connection count in ScribeLog\n\nRB_ID=254235\n\n(sapling split of f790c22bb654369cd5cdffa482be104d811b8faf)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lahosken": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/8ef3fc8c3c93092c79c992af46f6c46e8b10b165", "message": "[PATCH 3250/7508] repair pingpong binary: add BUILD. rename dir to something not gitignored\n\nLet's not call it \"bin\", that gets gitignored. And I have empirical evidence it's easy to overlook that gitignorance and, say, submit a change that's missing a BUILD file.\n\nRB_ID=246461\n\n(sapling split of ef7124e668602f78edc4a5e6c6b53ce321784abd)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/15b412769fbd2aa4d556cae48d4e390be7b08206", "message": "[PATCH 3246/7508] directory shuffling in pingpong example, attempting to make it fit best practices We have opinions about your program's source tree, but when I look for sample code to illustrate them, I come up empty. Thus, behold this attempt to re-arrange pingpong's dir layout.\n\nBefore:\n  src/.../pingpong/\n  tests/.../pingpong/\n\nAfter:\n  src/.../pingpong/bin/\n  src/.../pingpong/handler/ (a lib)\n  tests/.../pingpong/handler/\n\nRB_ID=232299\n\n(sapling split of ed1b8408a98e71c5a0f8dce252651d77d47002ec)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/63843cc57550d7f7d89b8dd38d8002f46005eaa4", "message": "[PATCH 2834/7508] 3rdparty: move jersey jars to 3rdparty/jvm/com/sun/jersey/\n\nOur guidelines say 3rdparty jars live in 3rdparty/jvm/tld/foo/bar/BUILD. Our theoretically-exemplary sample app... uhm... had no 3rdparty deps I could point at that complied with our guidelines. Thus... moving jersey-foo to 3rdparty/jvm/com/sun/jersey/\n\nRB_ID=225365\n\n(sapling split of ad6886834170caa6441597728fea83a359b42d47)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/08f4b2fc342d5e4936eef108608c6f21256c29a6", "message": "[PATCH 2218/7508] the barest start of a tutorial. how should source-including work?\n\nRB_ID=202217\n\n(sapling split of 367b8a4dcbbc870a8a5e77a68c4c6533f4f81548)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/e3530d43a9b327a1ab52882ebc131d38468f173d", "message": "[PATCH 1733/7508] remove obsolete docstring\n\nRB_ID=180531\n\n(sapling split of b35b58bff486e92f4ec2d0e8b33cf79a53801b81)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/10855033", "body": "It's\n\nas in\n\nIt's embarrassing that I don't know the Pull Request idiom for \"Ship It, but if you were gonna go in to change stuff anyhow, here's a typo.\"\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/10855033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "yzhuang": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/fe52111cc6bca3e48be957c384895a151df7a6a5", "message": "[PATCH 2852/7508] Add safeBuild for TokenStreamSerializers\n\nThe new safeBuild can be repeatedly called to create\nTokenStreamSerializers that do not share AttributeSerializers.\n\nRB_ID=225015\n\n(sapling split of c52afd5e0bb1fcf4f42fec6dc72a715c89be9c3c)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/f9e3496f7b1135422e167b5f569bf074da13f254", "message": "[PATCH 2208/7508] Add support for serializing org.apache.lucene.analysis.TokenStream.\n\nRB_ID=203949\n\n(sapling split of 3dfbb2f78d073d728d4b4b0998953928b797e90c)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wfarner": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/688c9e6cb0927626b755b2a3f9b7cfbf7dfa53c0", "message": "[PATCH 2765/7508] Allow JSR-330's Qualifier in Bindings functions.\n\nRB_ID=223989\n\n(sapling split of 72ffc93986955d91a11c29cc884437267122b26e)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/de05db9f2225995c533603dfccd94c68eeb3e63c", "message": "[PATCH 2215/7508] Use scheme-less URIs for graphview resources.\n\nRB_ID=205134\n\n(sapling split of 637ae93cab8d32b22d3ccb1c7ab8386e4b6fa7c8)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/b91f31b5e0fc349296793025d01cbc1a87a7fb75", "message": "[PATCH 1941/7508] More cleanup for aurora open source build.\n\nRB_ID=186869\n\n(sapling split of 79997541d28654002db4c9dae92aa9ff55905377)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/2244f22de2974416c417ea69ed3a7594766b76b9", "message": "[PATCH 1868/7508] Revert \"More cleanup for aurora open source build.\"\n\nThis reverts commit a2ff4ac2f30088800a7b0d89435e8524bce7e555.\n\nRB_ID=186869\nNO-QUEUE=true\n\n(sapling split of ef48fd2bdf0f090c25c418ba4ded24bf6c729c22)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/ff6e72dfbe3529854d0b69e0a55cfa76bde77452", "message": "[PATCH 1867/7508] More cleanup for aurora open source build.\n\nRB_ID=186869\nNO-QUEUE=true\n\n(sapling split of a2ff4ac2f30088800a7b0d89435e8524bce7e555)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/16df8a2f34606b0954c01c3cb97968a90b8ce608", "message": "[PATCH 1657/7508] Pulls in https://github.com/twitter/commons/pull/164\n\nEdited the logconfig.st file to enable select lists for each logger\n\nRB_ID=179133\n\n(sapling split of 2008587b1f6f7412f10ef9250192697d627a0a03)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/e807c5f04f888e6b32c2716c4a3c96732e554614", "message": "[PATCH 1572/7508] Make ClientConfig fields public, allowing external access and binding.\n\nRB_ID=177383\n\n(sapling split of 58f30ac637120756d05fb134cfcfc2930a958310)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/0ac61cff3cfc58ea9f0a8022c6ca2ef18e4cd449", "message": "[PATCH 1567/7508] Add copyright and provides to new zookeeper code.\n\nRB_ID=177244\nTBR=true\n\n(sapling split of 31532308f6dde1568174a5ac7dbe36d0dedcedbd)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/ad496f7f70c867c5c48b429ddabefa4e615c80a8", "message": "[PATCH 1566/7508] Fixed typo in FlaggedClientConfig file name.\n\nRB_ID=177228\nTBR=true\n\n(sapling split of 1acbe888569b990fd078249f45eec93d9bb9f339)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/b2d7a0659f336f0d8f639098eb4ee6eebab3ebcb", "message": "[PATCH 1565/7508] Create a ZooKeeperClientModule and flagged variant.\n\nRB_ID=175023\n\n(sapling split of 921c6333dfbbdacc91e0b87ca5db771cfcc4d117)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/1091085", "body": "All should be fixed, with the exception of src/thrift/org/apache/scribe/0.1.2/fb303.thrift, i'm not sure if we have the authority to re-license that.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1091085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/2207646", "body": "Just wanted to ACK that this is on the radar.  Expect some useful feedback by end of business week at the worst.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/2207646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21907035", "body": "I gave this a shot locally, works as expected.  Nice job!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21907035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518516", "body": "Remove trailing space in \"Logger Config \".\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518520", "body": "Indenting is off here.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518545", "body": "Feel free to collapse this td tag to a one-liner: `<td>$logger.name$</td>`\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518558", "body": "Don't space-pad attributes, e.g. `class='selectlevels'`\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518565", "body": "Also, please be consistent about single and double quotes.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518607", "body": "Style convention suggests a space after function parens: `function() {`\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518614", "body": "Please add comments for these chunks to aid in readability.  For example:\n`// Set the value of each select to match the logger's current level.`\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518624", "body": "Space padding for arguments is generally `arg1, arg2` (no space before comma, space after comma)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518635", "body": "Are there two newlines at the end of the file?  If so, please remove one.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5623611", "body": "I can't find any callers to CheckExclusives .get_classpath_for_group.  Can/should it be removed?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5623611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hansmire": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/31425e9e39522cfd53edac506d62fa54abc6f822", "message": "[PATCH 2706/7508] Allow maps as keys using the TTextProtocol Since non-strings are not allowed as keys in maps in json, I serialize the key to a string and use the string as the key.\n\nRB_ID=218686\n\n(sapling split of 64a30b03a91cb26e09749f6f44d9cf8cf48ce4a7)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kzhaotwitter": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/a3b6c8d214bf31ed74c5e162fd206a82b8d8e5ff", "message": "[PATCH 2068/7508] Allow pants to take extra buildinfo from cmdline and report them for observability\n\n- Take --buildinfo-extra as pants cmdline argument and save them to builds.properties\n- Report all buildinfo properties through stats\n\nRB_ID=196585\n\n(sapling split of 9df128de03209b3415bc8e2af6972cfc46062b51)"}, {"url": "https://api.github.com/repos/twitter/commons/commits/dd0c78c8b6935623e06bf316c3e533643b6987f4", "message": "[PATCH 2063/7508] Export buildinfo stats as long if it converts\n\nRB_ID=195693\n\n(sapling split of 39d96655018ba18497b666c04eb869babbae2c8a)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tstumpf": {"issues": [], "commits": [{"url": "https://api.github.com/repos/twitter/commons/commits/fb08c7414113bfbae35eb42b5d3100beb9753a99", "message": "[PATCH 2067/7508] Enable record log of sha commits while producing existing git stats.  - Produce second record log of git sha timeline, while producing standard git stats  - Tweaked command lines to control output dir and twkey src.  - Updated comments for working with local hdfs cell.  - Added check to hdfs so configs always point to dir, as pointing to file silently fails and writes results to local file system (d'oh!)\n\nRB_ID=191451\n\n(sapling split of aa3040a7f24a582a3d1a0c09aa32b198d4c21269)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "a-sahdev": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/456", "title": "fixed issue #329", "body": "### Problem\r\n\r\nThis fixes issue #329 , where one process was reading a file partially written by another process.\r\n\r\n### Solution\r\n\r\nOnly open the file once the 'if onwait' is true. This is done by moving the file read operation within the if statement.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "exarus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/444", "title": "Update styleguide.md", "body": "I think that \n\n> `(a << (8 * n) + 1) | 0xFF`\n> is a bit less obvious than:\n> `(a << (8 * n + 1)) | 0xFF`\n> Because it's a bit harder to guess which has a higher precedence: `+` or `>>`.\n> But muck easier to guess that a `*` has a higher precedence than `+`. Except that, `*` is placed left, so even if the reader is confused about the precedence of `+` and `*`, than he may just apply those operations one by one from left to right just as they would be with the same precedence.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sttts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/423", "title": "Fix Zookeeper group member listener leak in leader election", "body": "The Candidate implementation leaks GroupChangeListener objects when abdicating\nleadership. These objects are registered as watches for group members and are\nnever deregistered. Consequently, one gets more and more ugly messages like\n\n  \"Current member ID %s is not a candidate for leader, current voting: %s\"\n\nin the logs.\n\nThis change only creates one watch for the Candidate implementation and reused it\nto avoid the leak (note: there is no way to actually remove a watch that has\nbeen registered before).\n\nFixes https://github.com/mesosphere/marathon/issues/2419.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamesbroadhead": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/421", "title": "[check.pex] rm UPPER_SNAKE_CASED rule", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ameya-pandilwar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/420", "title": "Updated comparisions of floating values for NaN", "body": "Fix for #322 \n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/419", "title": "Fix bug in method for checking name collision", "body": "Fix for #413 \n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Mandar-Shinde": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/416", "title": "Updated README.md with markup for github", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mzhaom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/415", "title": "Switch certain usage of deprecated guava API to new ones.", "body": "IputSupplier<? extends InputStream>  has been deprecated by ByteSource.\nhttp://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/io/InputSupplier.html\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "christian-esken": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/373", "title": "Annotation based skipping of fields in ObjectSizeCalculator", "body": "This change adds annotation support to ObjectSizeCalculator. The whole object tree below a field annotated with ObjectSizeIgnoreField is ignored. \n## When to use\n\nThis is useful if there are references to other objects not of interest. For example, objects from a DB may be cached in the heap. If one measures that Cache separately, there may be no need to measure references from other places to those objects (again). Also, references to a classloader (directly or indirectly via a Thread instance) can end up with measuring the whole heap.\n## Technical details\n\nIgnoring means to ignore the whole object subtree _below the field_. The field itself is counted normally: _References_ are counted with the size of a reference in the memory model. As _primitive types_ are never shared, they are not ignored and thus always counted.\nThe annotation class can be freely chosen via setIgnoreFieldAnnotation(), to avoid hard runtime dependencies to ObjectSizeCalculator  or ObjectSizeIgnoreField.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benpoliquin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/358", "title": "Windowed.getCurrentIndex() changed int to long", "body": "When using e.g. WindowedStatistics with a time window/number of slice combination that results in a sliceDuration of less than 662 ms(currently) index calculation in Windowed.getCurrentIndex() fails because System.currentTimeMillis()/662 > Integer.MAX_VALUE and casting it to int produces unpredictable results.\n\n\"Best case\" is that getCurrentIndex() returns a negative value (as happened to me), causing an ArrayIndexOutOfBoundsException because the whole code in sync() is skipped and index will remain at the initial value of -1.\n\nThis is Issue #355 .\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "caniszczyk": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/340", "title": "Use new Travis CI container infrastructure", "body": "http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/\n\nSigned-off-by: Chris Aniszczyk zx@twitter.com\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/1676162", "body": "Any reason Maven isn't used here? It's pretty much the standard build system for open source java stuff.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1676162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677648", "body": "My pain point is that if you want people to contribute, use a standard build technology. I understand I'm saying this as an outsider though so take it like you wish.\n\nMaven3 is quite a bit faster than maven2 these days, even supports OSGi. As a person who spent migrating the majority of eclipse.org's infrastructure to maven3 it doesn't suck that bad anymore. It has a large ecosystem where you can easily integrate with tools like Hudson/Jenkins, code coverage etc... It would be nice if this would be investigated in the future again.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6644746", "body": "@benjyw used to work at Twitter :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6644746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21805416", "body": "Just one thing to add... if pants has its own organization, e.g., https://github.com/organizations/pantsbuild you can create multiple projects instead of just putting everything into one if you want to go that route\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/21805416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rgs1": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/307", "title": "Allow properties dict along within a ServiceInstance", "body": "When joining a ServerSet, it can be handy to attach some extra data to\nthe published ServiceInstance (i.e.: debugging info, service version,\netc.). This is expressed in the form of a <str, str> properties dict.\n\nThis only takes effect when reading/writing JSON (for now).\n\nSigned-off-by: Raul Gutierrez S rgs@twitter.com\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/15178336", "body": "what problems do you envision with having properties be a free-form Map<str, str>? we could probably document it as \"additional info\" to avoid people depending on it as stable API, but besides that i don't really see much risk and predefined keys sounds too inflexible.  \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/15178336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "simeonf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/262", "title": "Building sphinx docs for src/python/twitter/commons", "body": "I added a docs folder for the python twitter.commons stuff. The source for much documentation is an email thread from Brian Wickman so it should be mostly correct.\n\nI also did some autodocing to pull in docs in docstrings in the source. This occasionally necessitated sphinxifying the docstrings to supress warnings/errors or rendering bugs.\n\nBuild the docs by installing sphinx and running:\n\n```\nsphinx-build -b html -d ./docs/_build/doctrees  ./docs ./docs/_build/html \n```\n\nfrom the src/python/twitter/commons directory.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pkwarren": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/224", "title": "Add a close() method to ZooKeeperMap.", "body": "Enable a ZooKeeperMap user to signal that it no longer requires the map\nany longer by calling ZooKeeperMap.close(). This removes any persistent\nwatchers against ZooKeeperClient (allowing it to be GC'd), stops\nregistering any additional watchers against ZooKeeper, and prevents any\nadditional callbacks to the ZooKeeperMap.Listener interface.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/18721677", "body": "Test results:\n\n```\n$ ./pants goal test tests/java/com/twitter/common//zookeeper/ --test-junit-test=com.twitter.common.zookeeper.ZooKeeperMapTest \n\n22:32:02 00:00 [all]\n               See a report at: http://localhost:7268/run/pants_run_2013_05_30_22_32_02_25\n               (To run a reporting server: ./pants server)\n22:32:02 00:00   [setup]\n22:32:02 00:00     [bootstrap]\n22:32:02 00:00     [parse]\n22:32:03 00:01   [resolve-idl]\n22:32:03 00:01     [idl]\n22:32:03 00:01     [extract]\n22:32:03 00:01   [gen]\n22:32:03 00:01     [thrift]\n22:32:03 00:01     [scrooge]\n22:32:03 00:01     [protoc]\n22:32:03 00:01     [antlr]\n22:32:03 00:01   [resolve]\n22:32:03 00:01     [ivy]\n22:32:03 00:01   [compile]\n22:32:03 00:01     [jvm]\n22:32:03 00:01       [apt]\n22:32:03 00:01       [java]\n                     Invalidated 1 target containing 7 source files.\n22:32:03 00:01         [jmake]\n                       Jmake version 1.3.7-3\n                       Opening project database...  Done.\n                       Recompiling source files:\n                       /Users/pkw/Projects/twitter/twitter-commons/tests/java/com/twitter/common/zookeeper/ZooKeeperMapTest.java\n                       Reading existing dependency file at /Users/pkw/Projects/twitter/twitter-commons/.pants.d/javac/depfiles/tests.java.com.twitter.common.zookeeper.large.dependencies\n                       Writing class dependency file to /Users/pkw/Projects/twitter/twitter-commons/.pants.d/javac/depfiles/tests.java.com.twitter.common.zookeeper.large.dependencies\n                       Checking com/twitter/common/zookeeper/ZooKeeperMapTest\n                       Writing project database...  Done.\n\n22:32:03 00:01     [checkstyle]\n                   Invalidated 1 target containing 7 source files.\n22:32:03 00:01       [checkstyle]\n22:32:04 00:02   [resources]\n22:32:04 00:02     [prepare]\n22:32:04 00:02   [test]\n22:32:04 00:02     [junit]\n22:32:04 00:02       [run]\n                     ............\n                     Time: 6.688\n\n                     OK (12 tests)\n\n\n22:32:11 00:09     [specs]\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/18721677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "teddziuba": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/twitter/commons/pulls/192", "title": "Staked bootstrapping distribute version", "body": "This commit stakes the version of `distribute` that Pants depends on to `0.6.34`. It also adds a guard check against failure to bootstrap `pkg_resources.py` or `setuptools` into the Pants build.\n\nThe problem with using `distribute>=0.6.24` as a requirement is that it's possible to pick up `distribute>=0.7` which is actually a meta-package, and does not contain `pkg_resources.py` or `setuptools`, it simply declares `setuptools` as a dependency. Since the iteration to choose the `distribute` package to bootstrap in is eager, and happens in no particular order, this is a thing that could happen easily (it did on my build).\n\nIn normal `pip` land, there is no problem with this, but the way that Pants bootstraps `distribute` makes it difficult, since it doesn't pull in the transitive closure of dependencies, it simply iterates over the files in the `distribute` package and copies them to chroot.\n\nIn the case that it picks up `distribute>=0.7`, this results in there being no `pkg_resources.py` or `setuptools` copied into subsequent .pex files. Normally this would not cause any obvious problems, since most environments where a .pex file would run include `setuptools` in their system Python installations.\n\nHowever, if you work where I do, the production machines are very slimly configured, and do not include a reasonable system Python. This results in the bootstrap script inside the .pex file to fail to import `pkg_resources.py`.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fern": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677170", "body": "Any way to vote to change it to use maven? :)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ewhauser": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677405", "body": "Have you actually tried to compile and build with pants?  It's exponentially faster than a Maven build would be with 120 projects in a multi-project build.  \n\nStop complaining because you don't want to take the time to understand their tool.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/1677405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rathboma": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/4163022", "body": "Yeah, works great now. Thanks Benjy :-)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4163022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mpenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/4382205", "body": "Hi, \n\nIt seems some artifacts are missing from the twttr maven repo though.\nSimply trying to resolve the dependencies with maven for com.twitter.common.thrift.ThriftFactory (as indicated on http://twitter.github.com/commons/ ) will fail :\n\n[skips lots of noise]\nUnable to resolve artifact: Missing:\n1) com.twitter:util:jar:1.8.18\n\nIt is still possible to build it manually with pants fortunately, but it makes distribution more difficult. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4382205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4386527", "body": "Thanks for the quick reply\n\nI am using [leiningen](https://github.com/technomancy/leiningen), but it seems it is unable to handle meta-artifact at the moment, which would explain the error when it looks for a jar file.\n\nOther people ran into the issue already: http://groups.google.com/group/leiningen/browse_frm/thread/8e0d4f34c88b880f/7bf22654170ac859?#7bf22654170ac859\n\nFor future references, I had exclude the utils from common/thrift and list all its dependencies manually, which looks like this on the project.clj file: \n\n``` clojure\n(defproject project-with-commons-thrift \"1.0.0-SNAPSHOT\"\n  :repositories {\"twitter\" \"http://maven.twttr.com/\"}\n  :dependencies [[org.clojure/clojure \"1.3.0\"]\n                 [com.twitter/util-logging \"1.8.18\"]\n                 [com.twitter/util-reflect \"1.8.18\"]\n                 [com.twitter/util-core \"1.8.18\"]\n                 [com.twitter/util-hashing \"1.8.18\"]\n                 [com.twitter/util-thrift \"1.8.18\"]\n                 [com.twitter/util-eval \"1.8.18\"]\n                 [com.twitter/util-collection \"1.8.18\"]\n                 [com.twitter.common/thrift \"0.0.27\"\n                  :exclusions [com.twitter/util]]]\n)\n\n```\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4386527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4397597", "body": "That was quick. Thanks a lot.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4397597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "leothekim": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/4899395", "body": "No problem. Thank you for reviewing! I'll commit changes based on your suggestion later today.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4899395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4924311", "body": "I replaced FunctionPicker with the NodeDeserializer interface. Could arguably deprecate the other two create methods taking the Function parameter.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4924311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4946938", "body": "Thanks again for the review, jsirois!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/4946938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7260066", "body": "Ok, 0061f8e does what I want. It looks a little weird because no default is specified, but behavior is correct (assuming the cli switch should override the pants.ini behavior).\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7260066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/638406", "body": "Indeed. I meant to type \"collections\" there.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/638406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/638427", "body": "Sounds sensible. I think I'll rename 'createWithStat' to 'create'. I don't like the name, and only chose it because the compiler would use type erasure to translate Function&lt;byte[], T&gt;.\n\nI'll add NodeDeserializer to the zookeeper package.\n\nUpdate: Looks like github doesn't html-escape arrow brackets.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/638427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "WamBamBoozle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/6644731", "body": "Hi\n\nI wanted to talk to you about \"pants & scalac\" but I can't seem to find you\nin the birdhouse. Where are you?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/6644731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jcdavis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/7434327", "body": "Hi John, Any update on this?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/7434327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "echinthaka": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/8675374", "body": "thanks for reply. I moved the IFace creation part to the construct and re-using it improved the performance. \n\nNow the question is will the returned IFace instance be thread safe or will I have to create a pool of those returned IFace objects on my own and assign objects from that pool to the requesting threads to be thread safe? \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8675374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nsanch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/8877448", "body": "Yeah, that would work for manual uses. My goal is to run tests in parallel, and so I'd like to be able to read and manipulate the command-line from a script.\n\nI also explored using a custom runner, but there's a decent amount of setup that needs to happen for each independent thread, so doing it externally is a bit more doable.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8877448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8896776", "body": "An alternative would be to have an option that dumps out just the test classes for a given target, so I could subsequently invoke pants test with some of the test classes explicitly specified with --junit-test. Would you prefer that?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8896776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8946460", "body": "Er, I didn't mean to add that commit to this pull request, I was intending to just link to it and forgot github would auto-update the request.\n\nAnyway, that commit would allow parallelizing test classes, and the junit runner would do it. Unfortunately, it doesn't work for my use-case because the tests I'm trying to parallelize need to use a local DB, and they need to be isolated so each thread/process uses its own DB. I don't think that's doable with a core change to pants test without a lot of complexity with the command line options.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/8946460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dragisak": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/10137437", "body": "Probably less important. The JAR is missing optional manifest. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/10137437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/11211256", "body": "Style issues fixed.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/11211256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ryan-williams": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/12554146", "body": "oh.. seems like by just pushing more commits to this branch this pull request becomes aware of them? great news.\n\nlet me know if you have any more feedback, and glad to hear this is a useful change!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12554146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12568252", "body": "good idea; I had to check for the string case first, since isinstance(str(), Iterable)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12568252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12570595", "body": "thanks for all the suggestions; much better polished + tested + debugged now!\n\nnot sure I follow what you're saying about 2 separate channels?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12570595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12570624", "body": "ah nm, I see the other nits now. fixing\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12570624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12570954", "body": "ok I think I addressed everything.\n\ndo you want me to squash these in new branch, or do you have a way to do a squash merge, or would you just merge all the commits here in?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/12570954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13971700", "body": "That makes sense, except: is it common in the current state of affairs for someone to omit the \"sources\" property of scala_library targets? That seems broken, and like something that should already be advised / linted against. Are any of the targets you listed above currently \"sources\"-less?\n\nGreat to hear about the thrift gen stuff.\n\nInteresting idea about setting policy per BUILD file. Realistically, we will probably just create a scala_library alias that defaults sources to globs('*.scala'), and use that instead of scala_library. I figured there might be objections to this non-backwards-compatible change but thought I'd run it up the flagpole anyway.\n\nPossible compromise: are you open to having the aforementioned scala_library wrapper live in twitter-commons? We could call it \"scala_lib\" or somesuch (suggestions welcome), and that way there would be no backwards-compatibility issues.\n\nThanks John!\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/13971700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14089569", "body": "hrm, I think I might have hit that missing-comma bug once; I've not heard\nof anyone else hitting that, fortunately. Agreed that it is a nasty failure\nmode; I wonder if we can do something better.\n\nre: your comment about top-level bootstrapped BUILD files: we do have a\nBUILD.bootstrap that does a bunch of setup work; is there something I can\nput in there to put a variable in scope in all other BUILD files?\n\nFor example, many of our BUILD files begin with the line:\n\nfrom foursquare.pants import scala_record_library\n\nIs there a way I can include this in every BUILD file automatically?\n\nI was working on a change that allows a hook to register more lines like\nthe following two that provide globals to all ParseContext exec calls:\n\n```\n\"from twitter.pants import *\",\n\"from twitter.common.quantity import Amount, Time\",\n```\n\nMaybe there is already a mechanism to do this though?\n\nOn Fri, Feb 22, 2013 at 6:46 PM, John Sirois notifications@github.comwrote:\n\n> Not really apropos - but as a side note - I love the\n> s/pants('([^']*)')/\\1/ change but already fear these bug reports under\n> un-close code review:\n> \n> java_library(name='canyouguess?',\n>   dependencies=[\n>     '3rdaprty:guava',\n>     '3rdparty:4sq-magic-lib',\n>     'src/java/com/twitter/common/base'\n>     'src/java/com/twitter/common/quantity',\n>     'src/java/com/twitter/common_internal/hdfs:util'\n>   ]\n>   # look - no sources! - but thats not the point\n> )\n> \n> Have you guys run into this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/twitter/commons/pull/120#issuecomment-13979955.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14089569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15549511", "body": "Example usage:\n\n$ ./pants goal path src/scala/com/twitter/common/args:flags 3rdparty:guava\nsrc/scala/com/twitter/common/args:flags\nsrc/java/com/twitter/common/args\n3rdparty:guava\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15549511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15557030", "body": "Yea, my reason for wanting to do it this way is primarily to include jar_library() and dependencies() targets. We've also had various wrappers like you've outlined for a while, but people who don't understand pants internals get very confused when there are certain \"targets\" the tools work on and others that they don't.\n\nI thought this was low-enough overhead that it was worth it to support the simpler semantics of having a tool that Just Works on anything declared in BUILD files.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15557030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15558133", "body": "interesting; I don't see those changes in twitter-commons/master... are they still internal at Twitter or am I missing something?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15558133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15559666", "body": "ok cool; I don't have a sense for what kinds of things the mega-merge consists of. Should I hold off on this change for now?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/15559666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22723732", "body": "@benjyw would you mind having a look at this?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22723732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2734185", "body": "good point. done\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2734185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2734188", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2734188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2734197", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/2734197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gmalouf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/14596512", "body": "My dependency on it is actually through Storm I believe, so it will get updated probably with the 0.9 release.  Just noticed the issue when I was running some code on java 7.  \n\nThanks,\n\nGary\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/14596512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "PinkyJie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/17317120", "body": "I got the point, I follow your example and it works. I use Netbeans(v7.2.1) which has its built-in Maven(v3.04), I wanna add the twitter-twttr repository to this IDE, so I can make use of the autocomplete tip of the IDE when I process dependency. I find that,  Netbeans uses the remote url http://maven.twttr.com/.index/ to get the index of the repository, but it finds nothing, any ideas?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/17317120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kushal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/20713465", "body": "Oops, wrong repo.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/20713465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/22614504", "body": "Some of my reasoning about why this is necessary is incorrect in the comments though I still think this change is necessary. Closing for now.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22614504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mikedanese": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/22731709", "body": "Good tip. I checked out the graph and collections was being pulled in later on by another dep. Thanks for the quick response.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/22731709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "keitaf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/23293567", "body": "Thanks for the fix! I just have some minor comments.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23293567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5989303", "body": "You can return Collections.emptyList() instead.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5989303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5989328", "body": "You don't have to add an empty list to subtokens.\nif (tokens != null) {\n  subtokens.addAll(tokens);\n}\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5989328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "elmer-garduno": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/23304107", "body": "Thanks for the quick response, I updated the code according to your comments.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/23304107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jeffjenkins": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/twitter/commons/issues/comments/24619053", "body": "This makes me wish I had filed an issue before going through the work of patching.  \n\nI still wasn't able to get it to work when added a source_root.  Here are the steps I did:\n\nAdded a source_root for resources: `source_root(root_dir + 'src/resources', resources)`\n\nAdded a BUILD directory at `src/resources/foo/BUILD` (and confirmed that it globbed the files there by printing the .sources attribute):\n\n```\n   resources(\n     name='foo',\n     sources=globs('*'),\n   )\n```\n\nAdded the resources to a BUILD file elsewhere in the source tree:\n\n```\njvm_binary(\n  name = 'dummy-main',\n  dependencies = [...],\n  resources = [\n    pants('src/resources/foo')\n  ]\n)\n```\n\nThen I ran: \n\n```\n./pants goal binary src/some/path/dummy:dummy-main\n```\n\nIn the output I saw that it was doing the resource preparation step:\n\n```\n16:18:08 00:02   [resources]\n16:18:08 00:02     [prepare]\n16:18:08 00:02       [invalidation]\n```\n\nI then looked at the generated jar file under dist to see if the resource files were in it, but they weren't. I also tried with `--binary-deployjar` but that just added the contents of the dependent jars to the output.\n\nAny idea what I'm missing?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/issues/comments/24619053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jonboulle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/commons/comments/2524994", "body": "FWIW, the error was because you wanted s/zincfile/cachepath/ on line 62 :-) \n(zincfile is not defined if an exception got thrown during its assignment)\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/2524994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "simonandluna": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/commons/comments/4657759", "body": "Wow, thanks for fixing it so quickly.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/4657759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "betepahos": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/commons/comments/5109153", "body": "any idea why i am geting :  File \"/media/datastore/Projects/twitterComonns/comgit/commons/BUILD.commons\", line 25, in <module>\n          from twitter.pants.base.build_environment import get_buildroot\n      ImportError: No module named build_environment\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/5109153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/comments/5109293", "body": " rebuilded - the same result i have 0.0.13 installed tried both the builded pex and the pip installed one with the same result \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/5109293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/comments/5109389", "body": "http://pastie.org/8645818 -- something is going on  wrong on pants.bootstrap \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/5109389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/comments/5607662", "body": "just this one and its good to go. i have builded it and has no more surpises :)\n\ncommons/src/python/twitter/common/python/translator.py\", line 114, in translate\nos.rename(dist_path, target_path)\nOSError: [Errno 18] Invalid cross-device link\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/5607662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "marcottedan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/twitter/commons/comments/6015799", "body": "Do you avoid static import for performance issues or to ensure readable code and enforce standards?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/comments/6015799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "yash620": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518700", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518714", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518730", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518746", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518846", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518858", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518885", "body": "Fixed. I think. It looked fine in my text editor but I redid the spaces so it should have fixed it. \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518925", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/5518925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "msabramo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/9608619", "body": "Good idea! See  518bb4b\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/9608619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/9693615", "body": "OK, I changed and rebased so now there's a `FetchError`. How's that look?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/9693615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "landism": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40159721", "body": "did you click https://github.com/twitter/commons/blob/master/src/python/twitter/common/reviewboard/reviewboard.py#L79-L80?\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40159721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40162169", "body": "I've changed it to use urljoin, which will produce the correct result regardless of whether self.url has a '/'.\n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/40162169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "sadhan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/twitter/commons/pulls/comments/74543274", "body": "This is breaking our recent build, use_hadoop_v1 does not seem to be a class member\n\n``` python\nself._use_hadoop_v1 = use_hadoop_v1\n```\n\nseems to be missing initialization \n", "reactions": {"url": "https://api.github.com/repos/twitter/commons/pulls/comments/74543274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}