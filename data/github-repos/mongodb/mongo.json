{"_default": {"1": {"judahschvimer": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/f3b504948c0cef40deffb4786ebdda6797625142", "message": "SERVER-32794 Make timeouts unrelated to elections not depend on election timeout"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/534b1d0c5abc8f62d7e3961081f54fd965480ddc", "message": "SERVER-32543 remove min_valid_on_pv_change.js"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8c0485475323b1e0582f56a071878339c78ee01d", "message": "SERVER-32188 SERVER-32187 Have secondaries apply timestamps to commands"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/1038fbaffdbfc4390e3ae0a56b3cbb0dc6e2870e", "message": "SERVER-30538 check that checkpointTimestamp is correct in\nPeriodicKillSecondaries hook"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/5610da9e3e13ec1bc7a092945acf15b0bb8b01b8", "message": "SERVER-30538 PeriodicKillSecondaries hook should account for empty\noplog correctly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/202a1d1692c5350f1de66bf357c617c24d211c94", "message": "SERVER-32274 Never timestamp applyOps writes on standalones"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/6796859387ba77a3556ed583a317681a288970e4", "message": "SERVER-30926 Add timestamps to writes to minValid document"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "henrikedin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/c376f4b80d26028b6a8746f8545a35e390b59bf2", "message": "SERVER-29519 Removed many usages of getGlobalReplicationCoordinator"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/3bbd4109dd368f59280f174e37f77131f932b52b", "message": "SERVER-30475 Improvements to service_executor_adaptive_test, tests are still non deterministic, timing dependant and failing from time to time so they are still disabled."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/c2bc565426e3173ddac015c91194d74da4a1671a", "message": "SERVER-32409 Android variable file to configure to build with Android NDK standalone toolchain."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d001b9fe00eafc2ed8b6349fb074c2617447adca", "message": "SERVER-32408 Expose PROGSUFFIX variable so we can change the file ending for executables when cross compiling."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/85fa19c04ca0059b8aa5689028d1e7d799c19483", "message": "SERVER-32390 Fix stacktrace_posix when compiling with the Android NDK"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/5fdcba0afa6307853a0aa6d7f62d9fdb2cc5c3da", "message": "SERVER-32405 Support calling ar with temp file to support long command lines. (not available for libtool)"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e7a35624783c6a2fd3892de8b7741648401d877c", "message": "SERVER-32404 Set AR for mongodbtoolchain for clang and gcc"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0061597348c41724e1a4ccd7a18c87382c9531a1", "message": "SERVER-32405 Support calling ar with temp file to support long command lines"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/36276843b3acfa7d6b8ad795cfc52b0a9810c80e", "message": "SERVER-32404 Expose AR environment variable for archiver from SCons."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/56362631390536f111f86a384e90e76631312f25", "message": "SERVER-30475 Fix race in service executor adaptive where we might terminate threads below the reserved threshold.\nFix so the controller routine in the adaptive executor is protected against spurious wakeups."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jsmulrow": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/50921266423bf59267b08e0f8ee23469ea03d768", "message": "SERVER-32833 Blacklist coll_epoch_test1.js from sharding_last_stable_mongos_and_mixed_shards"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/410d6cf705eafd46499e8b338be5103becd377ff", "message": "SERVER-32463 Remove FCV dependent causal consistency code"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9ed0b147b5cb71b8fbc7d28f43d66aa623b08ac1", "message": "SERVER-32463 Remove / modify FCV dependent sharding UUID tests"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9b6f404d30b944def9bcc77ebc8277fb97471080", "message": "SERVER-28923 Add stats for retryable writes"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9f36a4b903401c8d2f1f7e248cf96eaa64ff99ce", "message": "SERVER-32554 Ensure migration cloner is cancelled in cleanup"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/2790db08f218a0c909b1508bc2f1650e7e81c6c3", "message": "SERVER-32376 Disallow startSession command and listLocalCursors/Sessions aggregation stages in stepdown suites"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/876f24aefbb0e0cf9fac30980b9ddea52d133fc9", "message": "SERVER-31198 Run the concurrency suite with shard stepdowns"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sgolemon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/625c113613331537fba18529cfc47fc9e514721b", "message": "SERVER-32753 Implement basic crypto functions for OSX"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b1ef36a8024055f1402a6566f3751b61500ccbc4", "message": "SERVER-32738 Add --ssl-provider build option"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/62c9eedec658912f796f5bcdb25f57891e4069ca", "message": "SERVER-32631 Deduplicate results in SockAddr::createAll()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/fb8046d813af032d6d51327affbab9b6199fe654", "message": "SERVER-32410 Validate User::CredentialData during auth"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/5a781806537d7710c3b895e450df2307b8861b69", "message": "SERVER-32231 Remove MONGODB-CR"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a5463eebace42e0970cdb28507d6b00d1c982f18", "message": "SERVER-32245 Update and clarify authSchema version checks"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a0c66e6e12e445d2253e85a9bb36a6fc24d77cdb", "message": "SERVER-32279 Remove support for authenticating via MONGODB-CR"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/1197bbad52d34a2c504f3269373946eed4a557dc", "message": "SERVER-32277 Remove MONGODB-CR -> SCRAM-SHA-1 upgrade"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/ee288a6ca25b9ff46da59de603a3c129be9f7bcd", "message": "SERVER-32340 Clean up dead logic for MongoDB 2.6 in multiVersion test suite"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8991cb9b4f54d943fb503c817ffb6aa59873099c", "message": "SERVER-32258 Remove V1UserDocumentParser"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/3949ed24bfe7e936384120a785c1e6ad627bc1bd", "message": "SERVER-32278 Update auth unit tests to use SCRAM-SHA-1"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/847104b8775af27762b35ff99da0d78511c01376", "message": "SERVER-32276 Remove support for MONGODB-CR in copydb\n\nThis includes removing the copydbgetnonce command entirely."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinAlbs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/bfc6cfe5fa474a48e35c6430858ae7a26a802e7b", "message": "SERVER-25640 check dbhashes in stopSet"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/60b8011a2f76d14283076a94eac4a9dbec5838bc", "message": "SERVER-32774 ensure change_streams_secondary_reads has voting\nsecondaries"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/71ae3ed5b7e99ddb629ec64b85f4bd75b73aff17", "message": "SERVER-32778 do not eagerly tojson in shell assertions"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e0febf2c258d77a179bdcf12ef8318ea92d12ee0", "message": "SERVER-31452 run fuzzer with shard stepdowns"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b9decc492c0ff942d5bcd6e8c799de70fa0839af", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset\n\nAnd run ValidateCollections hook on priority=0 secondaries."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8f4e5f800169e7825bbcde376904a8b65aa52e27", "message": "SERVER-31335 fix assert in retryable_writes_mmap"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/5e28f4a35229422ec48ba7611e67b414b0eeb77f", "message": "SERVER-31335 cmd assertions check write errors"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/36eb9e78bc7466cac268c8b2995956a47e946ee5", "message": "SERVER-6024 add stacktrace to unittests"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/af6bd1d39b42cc3d99c5854c6e280df31e858442", "message": "SERVER-31670 fixture secondary defaults to 0 votes"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/43b1a2984a4c7b9d1fbc9e4d0d6596c6f626ffda", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/eac8109597710f910fa788875b4bd9d0b28060c5", "message": "Revert \"SERVER-21630 run CheckReplDBHash on csrs and shard replset\"\n\nThis reverts commit 117ccba5b73070c98789c1066cf4b31597e878da."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/117ccba5b73070c98789c1066cf4b31597e878da", "message": "SERVER-21630 run CheckReplDBHash on csrs and shard replset"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/003dfbdcdd2ce5e33cd92ef57701e98766d8d192", "message": "SERVER-32126 check UUID in validate"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4e6f8deb022b8cc5c0c3a38a60b1416ff952475e", "message": "SERVER-32296 fix resmoke_exit_code check in dash"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BillyDonahue": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/bc2d722169d5d1b46adfc603e29730b029b5e933", "message": "SERVER-32599 move namespace_string-inl.h into namespace_string.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a8561f9a3775083eaf17e648850791a2cbd37893", "message": "SERVER-32070 remove stdx::bind (final patch)"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a6e45f0e35724ae7958e31fc141c89afcefe4d33", "message": "SERVER-32646 CommandHelpers"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/fde271624db402ea3a0ed50d3c6aeb2e666ae3a2", "message": "SERVER-32484 CommandRegistry"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7d393f1dbe2e14eed24b03a041942ee64716298b", "message": "SERVER-32138: Prune CommandInterface, rename parts of it audit::CommandInterface."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/2d495117875bf6fc51016396e2d91016d2fcd069", "message": "commands.cpp: eliminate std:: using decls\n\nMinor consistency fixup before making larger changes to this file.\n\n    using std::string\n    using std::stringstream\n\nThe use of std::string and std::stringstream aren't saving enough\nto be worth the potential namespace clash."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e304b58275d36a1c28d0e652582268c070f599b7", "message": "SERVER-29335 fix millisecond formatting"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/661bb326d8a02dfa202b003d1766a939e264e2bd", "message": "SERVER-30086 better log message when using --port 0"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/950fa6e6fd8f46248796dea3bc6c2392757b163d", "message": "SERVER-32070 migrate some easy stdx::bind to lambdas (pt3)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "renctan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/03a949db6656076c759a160e385efd81e066cf24", "message": "SERVER-32681 exact_shard_key_target.js moveChunk should wait for delete"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/5823009762c40b9632d735f0829ba7328baab0dd", "message": "SERVER-32288 Add isAssignedShardKey field to CollectionType"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/471254ed8302dfffc3f7fb9d00e2d492df41f542", "message": "SERVER-32371 features2.js should exclude clusterTime metadata"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/800f84351f3f4f07aadf84b08be68f6be44fcfca", "message": "Revert \"SERVER-32405 Support calling ar with temp file to support long command lines\"\n\nThis reverts commit 0061597348c41724e1a4ccd7a18c87382c9531a1."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/92b698db133f3f0c0f21c4bc0704f1106be3fb62", "message": "SERVER-32429 black list regex_targeting.js from step down suites"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/38f5efd583ba167b4cb24b024fcb4e20e502cb44", "message": "SERVER-32385 Use _flushRoutingTableCacheUpdates's older name for backwards compatibility"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3834399", "body": "Hi,\n\nWe are about to integrate your fix into the repo. In order to do that, can you sign the contributor agreement (link below)?\n\nhttp://www.10gen.com/contributor\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3834399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5421431", "body": "Pull request accepted and merged @ https://github.com/mongodb/mongo/commit/100b489788f4c335e6df88606804c589f7cd6a5b\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5421431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511888", "body": "merged to master @ https://github.com/mongodb/mongo/commit/c865d831777986b7a90dfd1d39975f792174c715\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "GeertBosch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/41239540c1c6b971247780b18495f3998d564787", "message": "SERVER-32058 Rollback in-memory catalog changes on collMod abort"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/3020767b4a20fca53d4b58b440085933c8eb7c3e", "message": "SERVER-32606 Oplog read time may only decrease during rollback"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4e4261cd0efc5fc9e0b2b9f9b787e7b6bc12295f", "message": "SERVER-32641 uassert, not dassert, for too many KeyString type bits"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/c16959f19705772d01e1053899048869aafe4537", "message": "SERVER-32546 Don't fail when no modified tests and no test_list_outfile"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f803bdacee6bf60589e6478e43f17b5e4b856a8f", "message": "SERVER-32454 Add support for decorations referring to their owners"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e0c177cbb21110a5f18f920d5ec08e375b303157", "message": "SERVER-31911 make UUID constructor private"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/826e020e3a23582c93c42a2986504ae567ff027f", "message": "SERVER-29602 New OpObserverRegistry to allow multiple observers\n\nAlso removes sharding specific interfaces for OpObserver."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/715cedf3377220a5c5e774b2ad5034996336f36f", "message": "SERVER-32315 Remove IndexObserver"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b58afd1e34aedcd1c1df4f2b5613c60668eaaad4", "message": "SERVER-32046 Fix typebit reading for indexed decimal infinities"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mikety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b251fd633d7572c0b221df3b316534596e981041", "message": "SERVER-32569 allow config servers and shard replica sets to start in non-cluster mode"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/36874a480ea4e2be33af298777a8d6824b7b974e", "message": "SERVER-31916 wait for clusterTime on mongo connection"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e2dd58e7d8ffa8386052e0e5d5f5bc999af0f61f", "message": "SERVER-32235 blacklist getMore tests from causally consistent passthrough suites"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RedBeard0531": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/42c264630fa1e7d5924c291a9eeac6522d70f31e", "message": "SERVER-25345 remove wassert"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/6d92ce0e7ec4e9a0cf31e9f9940a63b03968bb88", "message": "SERVER-32674 Make SocketException not be a special type"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/daf6c4714b45aeb8ba1a09380135b3267c4cc280", "message": "SERVER-32617 Fix code that reconstructs status with just code and string"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4dc36c7ccb6b5b8f7d865993b5d648fe6dc4b7c7", "message": "SERVER-32684 Make mongos write command objects hold Status directly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/68b961b28f5dd40501f0ef9b6c6b515ff1ec7cfd", "message": "SERVER-32673 Make WorkingSetCommon::buildMemberStatusObject handle ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b165c1e9275016dc15d071d147cec0e5b1bc1f31", "message": "SERVER-32587 Convert StaleConfigException to use ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/84c3f83421b262028081296e4c387d29691ea376", "message": "SERVER-32586 Convert ResolvedView to use ErrorExtraInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7f56cb7f21a4d13dd4c4d39d85f23ec77cd28f9b", "message": "SERVER-31734 Core ErrorExtraInfo implementation"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/6b1a6cfe77e3c5a3b2d62a3346d19d26694ed2ed", "message": "SERVER-31734 rewrite massert/uassert to preserve statuses"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/fdc48462ba15f6923df7b2be48a8176810ac17a4", "message": "SERVER-31734 eliminate non-Status DBException constructor"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4abae20d3bc9c942664fca6364bea51ae533e644", "message": "SERVER-32244 Better logging when a DBException escapes from a unittest"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d30abf7c53a992635d82b226acbb649106f5dfa2", "message": "SERVER-32302 Make mutablebson cache total field size\n\nThis addresses the perf regression in update due to eagerly computing the\nfield size in BSONElement's constructor."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/3c586a7c946ac7f9485b9ff978fa029ac4b5108e", "message": "SERVER-32302 Use a table to compute the size of each BSONElement"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d38ef54970744aca3565fabbda76bd6e7836f7a", "message": "SERVER-32302 Compute BSONElement sizes eagerly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/1497899f237dd60ad7313913c38c3f07fe168f2b", "message": "SERVER-32302 Introduce BSONObjStlIterator as a proper stl-style iterator"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5001272", "body": "You will also need to modify the edit functionallity in shell/dbshell.cpp to call tojson with the nolint option.\n\nI'd suggest adding an extra layer of indirection between tojson and __ansi.colors that maps from type of thing to a color and calling colorize with something like \"string\" rather than \"yellow\". This will make it easier for users to change their color schemes to work better on both light and back backgrounds.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5001272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5053002", "body": "One more thing... It would be great if you could either set the bright/bold or underline bit in numbers to make it easier to read large values. Something like 11000111000.00011100 with 1 for bold and 0 for normal.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5053002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/967692", "body": "Why did you add the copy and assignment ops? I think those are the same as the automatically generated ones.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/967692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428841", "body": "I think so, but it will take some experimentation to be sure.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428897", "body": "No. The RecordID[1] passed in to RecordStore::updateRecord should always be valid. Inserting / upserting is handled in the higher level code.\n\n[1] RecordID is currently spelled DiskLoc, but we plan to change that soon.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428915", "body": "I think that will cover the usecase for this function.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428943", "body": "We have a user-facing \"touch\" command that allows users to preload specified data and/or indexes in to memory in an efficieint manner. For now leaving this as a no-op should be acceptable as it is for optimization, not correctness.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428995", "body": "Probably in this case, but these IDs are only 8 bytes, so it may not buy too much. The index comparator would probably be a more usefull optimization, but it is trickier.\n\nEither way, seems like an optimization that can wait.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7428995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429077", "body": "It is somewhat unclear what operations on an Iterator require checking status(). Why not just return a rocksdb::Status from the ones that do?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429164", "body": "Once we commit the WriteBatch, all of its changes will now be visible on the new _snapshot. In a sense, it should be considered the \"base\" that the WriteBatch is on top of, in that \"now\" represents _snapshot + _writeBatch. We probably also need another Snapshot member that is the initial snapshot from when the operation began (an operation can be many UnitsOfWork). We are still figuring out what the correct API is to support snapshot-based storage engines as sometimes we need the \"latest\" copy of an object and sometimes the \"original\" is fine.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429200", "body": "Need to decide if these should always be fatal or if there are some failure modes that are acceptable.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429267", "body": "The return value is basically only used for corruption checking, as it should always be true (except for special cases involving background indexing where it is ignored entirely). We may be able to just remove the return value for this method.\n\nBasically, it is always ok for this function to return true (although index corruption may go unnoticed), but it should only return false when sure that the key doesn't exist since that can indicate an error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429340", "body": "@siying You may also be interested in https://github.com/mongodb/mongo/commit/e970e918c5300a13360edb57a88871b02dbe5982\n\nYes, isCommitNeeded() and commitIfNeeded() will be going away soon. Possibly this week.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429481", "body": "Actually a snapshot is lazily constructed on first use at line 140 below. This is just \"refreshing\" the snapshot to reflect the WriteBatch we just committed so that _snapshot or _writeBatch will have the latest copy of anything we wrote to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429632", "body": "This isn't done inline with the query, it is a separate command. It is an ops-level operation that can be done (eg) after restarting a server for maintnance, or periodically on a secondary to keep it \"hot\" if all queries are going to the primary.\n\nAlso this doesn't just preload for a query, it preloads the _entire_ collection and/or index. This allows it to do sequential IO rather than loading each object on demand. Therefore it can be _significantly_ faster than just waiting for the cache to be warmed by a query.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429667", "body": "PS here is a post about it: http://blog.mongodb.org/post/44706549534/mongodb-tip-the-touch-command\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429889", "body": "The word \"Transaction\" is a bit loaded so lets avoid it for now. Consider a multi update that adds 5 \"awesome points\" to all users if today is their birthday. In mongo, that whole multi-update will use a single RecoveryUnit instance. However, a new WriteUnitOfWork will be created (on the single RU) and committed for each user that matches the query while we are updating thier object. This is because we only guarantee isolation and atomicity on each document, even when doing a multi-update.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/14721027", "body": "Yes, you'll need to do this in MongoRocks. This would make sense as a generic test, but we don't currently have a way to test oplogs in generic tests, and I don't think that will happen before the 3.2.0 release.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14721027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16797838", "body": "Our style guide puts the else on a new line:\n\nif (cond) {\n}\nelse {\n}\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16797838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67206988", "body": "delete commented out code\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67206988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67208560", "body": "Lets move this file to src/mongo/benchmarks and rename it map_bench.cpp. You'll need to create a new Sconscript file and add it to the list of Sconscripts in src/mongo/sconscript\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67208560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67208867", "body": "non-mongo headers go above mongo headers (local convention). Also the first include in cpp files should be \"mongo/platform/basic.h\"\n\nhttps://github.com/mongodb/mongo/wiki/Server-Code-Style#for-cpp-files\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67208867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67209051", "body": "Try to end comments with a period (even if not a full sentence) so it is clear that you were finished. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67209051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67209510", "body": "Use size_t for lengths (with very few exceptions)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67209510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67209815", "body": "Everything in this file should be in an anon namespace inside the mongo namespace like:\nnamespace mongo{\nnamespace {\n...\n} // namespace\n} // namespace mongo\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67209815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67209924", "body": "Prefer real constants to #defines.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67209924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67210021", "body": "Can you just move the definition up here?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67210021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67210955", "body": "It turns out that the operator[] in std::string can have a surprising amount of overhead. It would be better to use a range-for loop like for (char& c : result) { c = something(); }\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67210955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67212283", "body": "You could cut out some duplication by using a template here:\n\n```\ntemplate <typename Map>\nclass FixtureBase : public mongo::unittest::Benchmark {\n  Map ints;\n  typename Map::const_iterator it;\n};\n\nusing MapInsertFixture =  FixtureBase<std::map<std::string, int>>;\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67212283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67213838", "body": "This can also be boilerplate reduced:\n\n```\ntemplate <typename BaseFixture>\nclass FillingFixtureBase : public BaseFixture {\n    void setUp() {\n        // Insert a bunch of strings into the map\n        int i = 0;\n        for (const std::string& str : stdStringList) {\n            ints[str] = i++;\n        }\n    }\n};\n\nusing MapLookupFixture =  FillingFixtureBase<FixtureBase<std::map<std::string, int>>>;\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67213838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67213963", "body": "delete commented out code\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67213963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67214522", "body": "Can you leave a comment like TODO run all microbenchmarks\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67214522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67215832", "body": "Lets rename this cppMicroBenchmarks. I know it's silly, but that will cause it to sort immediately after compile which should the order to be nicer when viewed on evergreen.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67215832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67216069", "body": "delete commented out code\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67216069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67216455", "body": "When writing a new file, make sure the copyright is 2016 MongoDB Inc. Don't change existing files.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67216455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67216703", "body": "Is this actually being used?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67216703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67216857", "body": "The first two includes aren't used in this file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67216857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67217439", "body": "New files don't need this.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/67217439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "MartinNeupauer": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/194ec4857fa0db8085da88e22eaae96687902d66", "message": "SERVER-32349 Change streams over sharded collections may produce merged op log entries\nwith the same timestamps if the operations are coming from multiple shards. When we\nresume the change stream we have to position to the right place - the position is determined\nboth by the timestamp and the document id. Previously we checked the timestamp only,\nnow we loop over the equal timestamps and find the right document."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/37cb7ea09393e88662e3139bd20fa29e59f2a1a3", "message": "SERVER-31530 Certain queries using 2d index could incorrecly compute\nboundaries delivering incorrect results. The root cause was in incorrectly\npropagating index tags during the query plan construction."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/962c5c61c93776aa4d1a8efb67a1a80cb3bb2ad0", "message": "SERVER-31684 Fix unexpected \"operation exceeded time limit\" errors\n\nThe changestream queries used an operation context deadline to track\na wait time before returning EOF. This occasionaly interfered with\nnormal operation deadlines leading to unexpected errors."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b79e5f04ffc79b5892f89c22b9e5f26a297b1185", "message": "SERVER-31684 Fix unexpected \"operation exceeded time limit\" errors\n\nThe changestream queries used an operation context deadline to track\na wait time before returning EOF. This occasionaly interfered with\nnormal operation deadlines leading to unexpected errors."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spencerjackson": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/eaa820e25fed6b52ea3e9b9eade337e85aa91386", "message": "SERVER-32460: Remove FCV 3.6 from authentication restrictions"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d34d2ba2b34cc18f8c853ecaa5a9cc59f587282b", "message": "SERVER-32551: Ensure Transport Layer doesn't use clusterFile as server cert"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/1f38fb202b9f8696cf28d39e674242e036c0b75c", "message": "Revert \"SERVER-31684 Fix unexpected \"operation exceeded time limit\" errors\"\n\nThis reverts commit b79e5f04ffc79b5892f89c22b9e5f26a297b1185."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3753484", "body": "I've just submitted the agreement. That makes sense about the allocation, and I had considered it. My rational was that in the event of a failure, the exception could be caught without invalidating the buffer. But in retrospect, yeah, I completely agree that the failure condition is rare enough, and recovery would be difficult enough that it isn't worth the added cost.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3753484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/15249853", "body": "@ecocode Thanks for reporting this! I can confirm this behaviour, and I've opened a ticket in our issue tracking system to follow it: https://jira.mongodb.org/browse/SERVER-22054\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/15249853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "hanumantmk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/1c629fb3e0cfdf218a6cdb20882806e3b7dd9e9c", "message": "SERVER-32239 Lossless status throwing in JS\n\nEnable throwing of status without conversion to error reports in\nspidermonkey.  This will enable throwing of sidecars and other rich data\nthrough js land."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d055ce30c42cec1171928f49c1739c0b14e0b455", "message": "SERVER-32460 platforms upgrade/downgrade work"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8ee6b3d31756d7939480f1283ec53af3bd6eb489", "message": "SERVER-32683 JS JIT off by default\n\nTurn off the spidermonkey jit by default."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b48f6b016aa09aed2dec3b964ef982af8ab11a4c", "message": "Revert \"SERVER-28822 Add new dbclient connection pool options\"\n\nThis reverts commit 9e7df79d3907a743e29b7333de6ea08a01f33a05."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dstorch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/92d58a1815b917d165c39235f9fe5b8a319072c3", "message": "SERVER-32690 Fix invariant failure in agg renamed paths optimization."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e377025071e4c9fff336fc57741e5cc8511607af", "message": "SERVER-32603 Modernize QueryPlanner methods to use unique_ptr."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/c3c908788d6630969055b7fad674403a476cf481", "message": "SERVER-32570 Clean up stale TODO comments in the query system."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/87c1731e3e077ca9e8b750ebe4b3fef534f1cbe6", "message": "SERVER-32441 Fix invariant failure in $or planning.\n\nThis fix removes the planner's ability to generate\nhash-based index intersection plans between two OR nodes---\nan obscure code path that was disabled by default."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/c5e0c333d40251d818345052d1601c66e0c60305", "message": "SERVER-32545 Don't exclude highest MemoID when dumping PlanEnumerator state as debug output."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aede604ae71e75ea2b59e4da41ea0294117b8c6c", "message": "SERVER-32545 Enhance PlanEnumerator debug output to include orPushdown info."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9282f7813d97756f0ab1e635d57e84b7145560d7", "message": "SERVER-31760 Optimize $expr to allow index use for equality predicates."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4af16ae93ff1de3597ba36c6b7539fa851387b48", "message": "SERVER-32221 Remove unnecessary null check in DocumentSourceSort."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/6699621bfb54174c7ee082ee85c62211788942c3", "message": "SERVER-31760 Add index support for InternalExprEqMatchExpression."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/01c39d416435f930d249701ccb71744b519873b5", "message": "SERVER-31760 Add InternalExprEqMatchExpression."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/1e0d2b2e113df9e56af430f5ff09bac224cf05f0", "message": "SERVER-32189 Delete dead SubplanStage handling for contained $or queries."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/06c1da7fa0d99fe643674fa7d5b0533b7d364791", "message": "SERVER-30924 Remove handling of 'fromRouter' in aggregation subsystem.\n\nThis code was necessary only to handle 3.4/3.6 mixed version\nclusters."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/63574927", "body": "Now that getOutputSorts() has an inline definition, please add a newline after this line.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/63574927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/63575164", "body": "I think you can delete 3373-3374, since they are redundant with the assertions on lines 3372 and line 3375.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/63575164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/63575368", "body": "Ditto these assertions being redundant.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/63575368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "elouie99": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/c2601667cb409d762e9f0baa9c175f274a51e72c", "message": "SERVER-32520 Add VPC support for launching AWS EC2 instances"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f7d45863daa61920d3b6ee8abbf105833767a223", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/5fe3df3c49c1f7b0906cc7650f3b339f22ddd0b5", "message": "SERVER-32535 Fix sudo reference for Curator invocation on remote EC2 host"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0e52ba439f8dc20c3baf5c19946a2192199be492", "message": "Revert \"SERVER-31628 Always use a python virtualenv in etc/evergreen.yml\"\n\nThis reverts commit 7a1b4d897b9e50bbbe020727c8a2ff8feb028cf5."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7a1b4d897b9e50bbbe020727c8a2ff8feb028cf5", "message": "SERVER-31628 Always use a python virtualenv in etc/evergreen.yml"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/508a73f1acda5cd500e8edc3bfef7f29fc82cb99", "message": "SERVER-31841 In find_mutex_holder handle when mutex_holder not found in thread_dict"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cswanson310": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/87c9442cc30d4101693bb8ccb6fd4509aa048558", "message": "SERVER-31785 Use 2 shards in sharded jscore passthrough."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a318fd1bc13e59a87def8de0061a08ec0dd134eb", "message": "SERVER-32190 Shorten MongoDProcessInterface to MongoDInterface.\n\nSimilarly shorten other similar MongoProcessInterface implementation's\nnames, e.g. MongoSProcessInterface -> MongoSInterface and\nMockMongoProcessInterface -> MockMongoInterface."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b5a2cc0fec6ac30b1a0196da5feb41d85a8b76c3", "message": "SERVER-32190 Make MongoProcessInterface always available"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/16036244", "body": "Hi Chririla,\n\nI think I can probably explain what's going on. The $substr expression is currently only designed to work correctly on ASCII strings, not UTF-8 strings, see docs here: https://docs.mongodb.org/manual/reference/operator/aggregation/substr/#exp._S_substr\n\nWhen $substr is passed a string encoded in UTF-8, it interprets the 'start' and 'length' inputs in terms of number of bytes, even though some UTF-8 characters require multiple bytes to represent one character. This can result in an output that is no longer valid UTF-8. See below for an example in the mongo shell:\n\n```\n> var x = '\\uD834\\uDF06'\n> x\n\ud834\udf06\n> x.length\n2\n> x[0]\n// won't render here, it's an invalid UTF-8 character\n```\n\nThe error you saw means that somewhere in your data there is unicode character that is represented by multiple bytes, and your $substr computation created an invalid UTF-8 character. I hope this helps!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/16036244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/16040802", "body": "Ok. I've filed [SERVER-22580](https://jira.mongodb.org/browse/SERVER-22580) which might help resolve the issue in the future.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/16040802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43757983", "body": "I assume you didn't mean to change the comment wrapping. Let's keep it wrapped at 100 characters, please. Ditto lines 459-460.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43757983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43758434", "body": "Please leave non-inlined methods condensed. It's more consistent with the rest of the file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43758434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43758587", "body": "You can ignore this file! Sorry about that. We have a ticket open to delete this: https://jira.mongodb.org/browse/SERVER-21232\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43758587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43761332", "body": "Thank you for converting these to the new-style unit tests! While you're here, we're making an effort to improve the names of new tests to make it easier to understand what they're testing. For example, instead of AddOperand, maybe AddedOperandsShouldAppearInSerialization. This will make it easier to scan the file to find obvious testing gaps. If you could update the names to this new format, it would be much appreciated. When it's not possible (without an absurdly long name), consider splitting into two or more tests, or adding a descriptive comment, as some of the tests already have.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43761332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43761479", "body": "Please split this into three separate tests\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43761479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43761516", "body": "Also split this test\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/43761516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46878390", "body": "We don't use Doxygen keywords like brief or return anywhere else in the codebase, please remove.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46878390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46878488", "body": "Please re-add comment saying why we can return early here, and what we're returning.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46878488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46878589", "body": "Please add a comment describing what this block is doing, and maybe (briefly) why it can only done when the operator is commutative\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46878589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46878834", "body": "Looks like this was accidental duplication.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46878834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46882472", "body": "The check of `nary->isAssociative()` is still needed. It's subtle, but see [this commit](https://github.com/mongodb/mongo/commit/f9828f5a0312801fa5b8592b31648a64f0ea7f67) for why it's necessary, particularly [this test and comment](https://github.com/mongodb/mongo/commit/f9828f5a0312801fa5b8592b31648a64f0ea7f67#diff-22feeb9ade901bc4e660448dcbf9fe61R69).\n\nUnfortunately, I don't think that test ever caught the bug it was intended to catch, since `optimize()` is called first, and the array of operands will be reduced to one constant. If you add a \"$a\" to the nested expression, it should not optimize to a constant, so the test should fail. Can you please update the test, make sure it fails for your current set of changes, then add back the `nary->isAssociative()` check to ensure it is fixed?\n\nLet me know if that's unclear, as it is very subtle.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46882472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46882780", "body": "I think this one can always return `Accumulator().isCommutative()`. The operand size check was intended to prevent coalescing in the case described in my comment about adding the `nary->isAssociative()` check above. I don't see anything that can go wrong if `isCommutative()` returns true in that scenario (or any other scenarios).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46882780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46883161", "body": "Can you please add a comment here that describes the structure you're creating? I found the test setup hard to read to figure out what the structure of the arguments were. It might also help here and elsewhere to change `arrBuilder` to be called `fullSpecBuilder` or something more specific. Please also give a comment to `FlattenInnerOperandsOptimizationOnCommutativeAndAssociative` on line 575 which has a similar setup.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/46883161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49610914", "body": "Please use consistent spacing here. To be specific, no space between the second `$sum` and the `:` on 70, same for `$min` on 71, and add a space after the `\"$b,\"` in the array on 72\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49610914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49611059", "body": "While you're in this file, can you update this comment to not refer to `isAssociativeAndCommutative()`, and instead to the two new methods? Also on line 67.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49611059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49612896", "body": "Missing a comma after `201`\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49612896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49652703", "body": "Can you add a blank line here to help legibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49652703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49652713", "body": "Also here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49652713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49660481", "body": "Instead of an erase and then a re-insert here, could you do the following instead?\n\n``` cpp\ninvariant(!nary->vpOperand.empty());\nvpOperand[i] = std::move(nary->vpOperand[0]);\nvpOperand.insert(vpOperand.begin() + i, nary->vpOperand.begin() + 1, nary->vpOperand.end());\n```\n\nIt would save two shifts of the array from erasing and then re-inserting.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/49660481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50461037", "body": "Between the close brace on 2232 and the if on 2234. It appears there is one now? Either I misread it the first time, or you fixed it... Either way, looks good now :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50461037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50461136", "body": "Between 2242 and 2243. Just to visually separate the vpOperand from the if/else.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50461136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55605887", "body": "Please use braces around all if statements. Also, can you add some comments to this method briefly describing what each case is trying to account for?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55605887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55605954", "body": "Please delete.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55605954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55607006", "body": "Everything from here down is confusing and non-intuitive to me. After reading the wikipedia article on \"ISO week date\" (https://en.wikipedia.org/wiki/ISO_week_date) I'm still not following. Can you add comments and/or point me to where you got this logic?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55607006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55607621", "body": "While these tests are wonderful, and have good coverage, is there any way we could add them to [this test file](https://github.com/mongodb/mongo/blob/r3.3.2/jstests/aggregation/bugs/server6189.js)? If we need more coverage, I'd rather test all the other date operators as well. If not, I'd suggest adding some as unit tests in [this file](https://github.com/mongodb/mongo/blob/r3.3.2/src/mongo/db/pipeline/expression_test.cpp)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55607621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55703272", "body": "Ok points taken. It looks like this test is copied from testall.js, which is not my favorite test. It's a little hard to follow, uses bad variable names, different styles of comments, and relies on data that is provided from another file, which gives no intuition as to why the assertions might be true. Sorry for providing a bad example test. I'd like to eventually refactor and get rid of that test, but it's not very pressing...\n\nI'd suggest rewriting this test to be more in the style of unit tests. [this test](https://github.com/mongodb/mongo/blob/r3.3.2/jstests/aggregation/bugs/server19548.js) comes to mind as a good example of providing good coverage, being easy to read, and having little test fixture overhead. I'll let you decide what's the best way to do this, but I'm thinking there's probably some to write the test such that we can provide one date and the expected values for $week, $isoWeek, $year, $isoWeekYear, $dayOfWeek, and $isoDayOfWeek. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55703272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55703531", "body": "Please format comments as full sentences. In particular, this one should start with a capital letter, and end in a period. I realize this practice isn't followed elsewhere in this file, but we're trying to have all new code follow this style.\n\nDitto for other comments in this file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55703531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55706481", "body": "I think you can just call this variable 'date'. I believe the others were called 'pDate' because there was once a time when it's type was a `Value *`, so this was a pointer to a date. Now it's just a date, so you can call it that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55706481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55706724", "body": "Please use `// Comment` style comments when the comment is not documenting a method, and\n\n```\n/**\n * Comment\n */\n```\n\nstyle comments when the comment is documenting a method.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55706724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55706989", "body": "Great. This helps a lot, thanks!. Please wrap the comment at 100 characters.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55706989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55707555", "body": "Prefer `int isoDayOfWeek = ExpressionIsoDayOfWeek::extract(tm);`?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55707555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55707872", "body": "Can you add a comment describing this logic please?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55707872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55761986", "body": "No problem! I am sorry to have you re-write them, but I think it will be worth it. Thank you!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55761986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56007315", "body": "The first one works for me:\n\n```\ndb.test.insert({})\nWriteResult({ \"nInserted\" : 1 })\n> db.test.aggregate([{\n   $project:{\n     _id:0,\n     result:{\n       $dateToString: {\n         date:new Date(\"1900-12-31T23:59:59Z\"),\n         format: \"%G-W%V\"\n       }\n     }\n   }\n }]) // should result in \"1901-W01\" but it results in \"1901-W53\"\n{ \"result\" : \"1901-W01\" }\n```\n\nThe second one seems correct to me? Dec 31, 1900 is a Monday, Jan 3 is a Thursday, and Jan 4 is a Friday. By my understanding, this means it is part of the first week of 1901.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56007315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56007617", "body": "Just `expResult`?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56007617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56007783", "body": "Start comments with capitals, end with periods please.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56007783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56007844", "body": "This doesn't fail for me... Is it still failing for you?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56007844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56008085", "body": "Missing a semicolon after the `return` statement.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56008085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56008300", "body": "You can remove this now?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56008300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56017518", "body": "Edit: I removed the log line, and it started failing for me again. I think I may have found the source, but I'm still unsure why it's happening:\n\n```\nProcess 15116 stopped\n* thread #2: tid = 0x4c5827, 0x000000010097f0be mongod`mongo::ExpressionIsoWeek::lastWeek(year=1900) + 62 at expression.cpp:3181, stop reason = step over\n    frame #0: 0x000000010097f0be mongod`mongo::ExpressionIsoWeek::lastWeek(year=1900) + 62 at expression.cpp:3181\n   3178     tm.tm_hour = 23;\n   3179     tm.tm_min = 59;\n   3180     tm.tm_sec = 59;\n-> 3181     mktime(&tm);\n   3182 \n   3183     // From: https://en.wikipedia.org/wiki/ISO_week_date#Last_week :\n   3184     // If 31 December is on a Monday, Tuesday or Wednesday, it is in week 01 of\n(lldb) n\n2016-03-14T11:13:55.799-0400 I STORAGE  [DataFileSync] flushing mmaps took 178685ms  for 5 files\n2016-03-14T11:13:55.799-0400 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:52490 #2 (2 connections now open)\nProcess 15116 stopped\n* thread #2: tid = 0x4c5827, 0x000000010097f0c6 mongod`mongo::ExpressionIsoWeek::lastWeek(year=1900) + 70 at expression.cpp:3191, stop reason = step over\n    frame #0: 0x000000010097f0c6 mongod`mongo::ExpressionIsoWeek::lastWeek(year=1900) + 70 at expression.cpp:3191\n   3188     // 52 (or 53 if the year just ending is a leap year); if on a Saturday or\n   3189     // Sunday, it is in week\n   3190     // 52 of the year just ending.\n-> 3191     if (tm.tm_wday > 0 && tm.tm_wday < 4) {  // Mon(1), Tue(2), and Wed(3)\n   3192         return 1;\n   3193     } else if (tm.tm_wday == 4) {  // Thu (4)\n   3194         return 53;\n(lldb) p tm.tm_wday\n(int) $17 = 6938768\n(lldb) p tm\n(tm) $18 = {\n  tm_sec = 59\n  tm_min = 59\n  tm_hour = 23\n  tm_mday = 31\n  tm_mon = 11\n  tm_year = 0\n  tm_wday = 6938768\n  tm_yday = 28672\n  tm_isdst = 1\n  tm_gmtoff = 25769803782\n  tm_zone = 0x0000000700000005 \"\"\n}\n```\n\nI'll continue to investigate.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56017518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56022121", "body": "Ok, its still unclear to me why adding the log line or reversing the order changes anything, but I think if you want to create a `tm` struct, you should go through [Value::coerceToTm()|https://github.com/mongodb/mongo/blob/r3.3.2/src/mongo/db/pipeline/value.cpp#L533]. That code looks like it's been designed to handle weird edge cases, and will work on windows as well.\n\nTry that and see if it fixes anything.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56022121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56063904", "body": "I mean, could you replace `[{result: expResult}][0].result` with `expResult`?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56063904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56706401", "body": "Unfortunately, this doesn't work on windows, which is one of our supported platforms.\n\n```\nCompiling build\\cached\\mongo\\db\\pipeline\\expression.obj\nexpression.cpp\nsrc\\mongo\\db\\pipeline\\expression.cpp(3127) : error C2039: 'tm_gmtoff' : is not a member of 'tm'\n        C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\INCLUDE\\wchar.h(1170) : see declaration of 'tm'\nscons: *** [build\\cached\\mongo\\db\\pipeline\\expression.obj] Error 2\nscons: building terminated because of errors.\n```\n\nHere's the definition:\n\n``` c\n#ifndef _TM_DEFINED\nstruct tm {\n int tm_sec; /* seconds after the minute - [0,59] */\n int tm_min; /* minutes after the hour - [0,59] */\n int tm_hour; /* hours since midnight - [0,23] */\n int tm_mday; /* day of the month - [1,31] */\n int tm_mon; /* months since January - [0,11] */\n int tm_year; /* years since 1900 */\n int tm_wday; /* days since Sunday - [0,6] */\n int tm_yday; /* days since January 1 - [0,365] */\n int tm_isdst; /* daylight savings time flag */\n };\n#define _TM_DEFINED\n#endif /* _TM_DEFINED */\n```\n\nThis was fixed for me by changing the initialization of tm: \n\n``` c++\nstruct tm tm = {};  // This will initialize all struct members with 0.\n```\n\nThen removing lines 3158 and 3159. See [this question on stackoverflow](http://stackoverflow.com/questions/1069621/are-members-of-a-c-struct-initialized-to-0-by-default) for struct initialization details.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56706401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56706591", "body": "These tests do not pass on some windows machines. I think you'll have to wrap these, and other pre-1970 tests in conditionals like we do [here](https://github.com/mongodb/mongo/blob/r3.3.2/jstests/aggregation/bugs/server6189.js#L43-L47).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56706591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56706763", "body": "Can you define a helper for `isLeapYear`? I think it will help readability. See an example helper defined [here](https://github.com/mongodb/mongo/blob/r3.3.2/src/mongo/db/pipeline/expression.cpp#L2514-L2519). It should go right above the expression that uses it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56706763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57453742", "body": "Can you reflow these comments to be a little more descriptive, like this:\n\n``` C++\nif (year % 4 != 0) {\n    // Not divisible by 4, so not a leap year.\n   return false;\n} else if (year % 100 != 0) {\n    // Divisible by 4, but not by 100, so it is a leap year.\n    return true;\n} ...\n```\n\nParticularly by the time I got to the last case, it was hard to keep track of which conditions were true.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57453742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57453914", "body": "As a general rule, we try not to use unicode characters in our source code where it can be avoided. Can you re-work these lines to be `week(date) = floor((ordinal(date) - weekday(date) + 10) / 7)`?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57453914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57454213", "body": "`day` is not a very descriptive variable name here... it really refers to the index in the array. I'd suggest renaming this variable to `i`, then re-working the comment on line 123 to describe how the index corresponds to the day.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57454213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57454437", "body": "Can you add brief comments to these helpers to describe what they're doing, when it's not obvious? Or rename them to be more obvious. For example, 'padded' really only pads with up to 2 '0's, what it's padding with and how many of them it inserts is unclear without reading the implementation.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57454437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "henrikingo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d9116e43dd7350c691824edf07389277bb17795", "message": "SERVER-32788 Update \"secondary performance\" sysperf test to use nonvoting secondaries"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/086cec19cbd0f0a4a122d4cfa6f099dbaa2ef21d", "message": "SERVER-32260 Call workload_setup.py from system_perf.yml and longevity.yml"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0784425fa2d58b6a2bff3125b50be7f0d6a7f489", "message": "SERVER-32704 sys-perf: Skip validating oplog as enabled by SERVER-32243"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vessy-mongodb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/06b9e9ebf9778293b8425093ada0aa1eb83b594e", "message": "Revert \"SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set\"\n\nThis reverts commit 35c44dbd37c0167cc07420c8ea286ad6edfac7ff."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/35c44dbd37c0167cc07420c8ea286ad6edfac7ff", "message": "SERVER-30347 Fail startup when running wiredTiger with --nojournal as part of a replica set"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/11ccfd95298b027b7292f576e2d98ceeb4af2e49", "message": "SERVER-32561 Rewrite asserts in rollback_drop_database.js"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/276bc00ce7a5086a4524cf8d57c68a3ac5f32c8c", "message": "SERVER-31500 fix lint"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/ca737e605a0b0dbbc0576087d95615cdca982467", "message": "SERVER-31500 Create Javascript test to exercise rollback of dropDatabase command"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/fcbce71b912723aac77ab1ec4efec8e15114a86c", "message": "SERVER-28895 Remove old form of replSetUpdatePosition command"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benety": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7713d5531c663603d17fff1267d013e0b6867e5b", "message": "SERVER-32284 rename ReplicationCoordinator::reserveSnapshotName() to getMinimumVisibleSnapshot()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25b7af8b7367de11f0d4d864bd6a51983227c494", "message": "SERVER-32284 remove unused last snapshot support from ReplClientInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/13a33d961f6936dc8290b8bb80f5c5b9e599f0a9", "message": "SERVER-32284 ReplicationCoordinatorImpl::_doneWaitingForReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d071ff8278abcd05d63c0367c49284645e844bcc", "message": "SERVER-32284 ReplicationCoordinatorImpl::_awaitReplication_inlock() always assumes null minSnapshot"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0d97768115d093ed0041fff8c0ef39ba30c07e3f", "message": "SERVER-32284 remove ReplicationCoordinator::awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7ed79c16f619cab2195edf9cad37a3c4765c8a23", "message": "SERVER-32284 collMod waits for UUID schema changes using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f2af0ad889f1cfca7a311d53912c5b808500ea77", "message": "SERVER-29200 remove references to OplogEntry::raw from MultiApplier"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/25f0c6ae6c4fa80244cadb8a6bfcbf9bcc8b7742", "message": "SERVER-29200 migrate SyncTail::getMissingDoc() and fetchAndInsertMissingDoc() to accept OplogEntry instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/939a30aba1703c939b0352bded4b56257c8a0bec", "message": "SERVER-29200 add OplogEntry::getOperationToApply()\n\nremove references to OplogEntry::raw from rollback, prefetchPagesForReplicatedOp() and SyncTail"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/1378f8ec42068913c5bdc5927bbe86d5aed08814", "message": "SERVER-29200 add OplogEntry::getRawObjSizeBytes()\n\nremove references to OplogEntry::raw from SyncTail::OpQueue and InitialSyncer"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/ba1d0d901ef386310457b03eecf9f5c4afce9047", "message": "SERVER-32624 clean up awaitReplication logic in dropDatabase()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/256dcb71d9b2f0110bc65b377f30f9ab4b24ef83", "message": "SERVER-32624 dropDatabase() waits for collection drops using ReplicationCoordinator::awaitReplication() instead of awaitReplicationOfLastOpForClient()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/63f957d5a91d47bf42d4a9f2e5d89d38599ec1da", "message": "SERVER-32284 add minSnapshot to failed WC message in ReplicationCoordinator::awaitReplication()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/049439b766fa2b3ec15e973a66433077348ea847", "message": "SERVER-32482 increase wtimeout in get_last_error.js"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a7cdfa8d4567bda72fd3475daacf9724d333bac4", "message": "SERVER-32532 dropDatabase() drops collections in separate loop after gathering namespaces to drop"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e4405af1fa6d231a792cf62361968915a914fd2e", "message": "SERVER-32402 refactor second dropDatabase WCE retry loop\n\nRefactored logic checks if Database is still present before confirming if\nwrites are still accepted."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/afc4b85e1c9023548d6eba7b121a07172e0708ba", "message": "SERVER-32402 reset Database drop pending state upon step down after dropping collections"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8c1230eee9d3e86512a97fe94b084eb6655788f6", "message": "SERVER-32098 rename applyOps drop collection test"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8553157abc8bafbe02b8d8e01ad4836512a9798e", "message": "SERVER-32098 converting a drop-pending collection to capped fails with NamespaceNotFound"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0574fcecbf5427f14a5eae6389db0cdf266a5aa0", "message": "SERVER-32098 add unit test for convertToCapped"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9fc948694d27b5ed78f713b026cb6e5661c95551", "message": "SERVER-32098 renaming drop-pending collection fails with NamespaceNotFound"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/bd607a44df63366eff3e94706eed1da0a5793888", "message": "SERVER-32098 collection creation using applyOps with UUID on drop-pending collection returns NamespaceExists"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7947bedbe40e0b6514467823c11a8dd2545c0e45", "message": "SERVER-32098 add unit test for createCollection"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e64b7e331649fd1d6beb83d981857ffd7ad6e539", "message": "SERVER-31750 log renameCollection\n\n(cherry picked from commit 51ec930099aa978ef50fec83f8d0d07a2368f286)"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9348c9f11174019ee1be93b25c3f44d070194472", "message": "SERVER-32369 evaluate invariant message before passing to invariantFailedWithMsg()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7cb2563388f77c7f0fea72811f512321f23096bd", "message": "SERVER-32369 fix invariant message in UUIDCatalog"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a75da32f4a724332ead01423721937693a6bdbbe", "message": "SERVER-32098 add renameCollectionForRollback.hbde"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/7939280", "body": "Hi @corentinbaron,\n\nThis is more of a reminder to ourselves. We were thinking of validating the numerical value of the block size itself - for example, that it should be a power of 2.\n\nBen\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7939280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7977163", "body": "Hi @lukebrowning,\n\nYou should vote for the back port on:\n\nhttps://jira.mongodb.org/browse/SERVER-14835\n\nThe **Backport** field has been set to _Requested_ - we periodically review all tickets requested for back port. If the ticket is approved (or rejected) for back port, you will see a corresponding change in the **Backport** field and the fix should show up in the next release.\n\nRegards,\nBen\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7977163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/9159828", "body": "https://jira.mongodb.org/browse/SERVER-16721\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/9159828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/17213582", "body": "JIRA ticket should be:\n\nhttps://jira.mongodb.org/browse/SERVER-23853\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/17213582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12661226", "body": "consider using db.getSiblingDB(\"otherdb\") instead of getMongo().getDB(). This is the convention in most of the JS tests.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12661226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12661438", "body": "I prefer to see a single exit point in this function (yes. this is a very short function). Consider introducing a local variable to hold the reference to the database/collection.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12661438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/13468279", "body": "colon at end of line?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/13468279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/13917331", "body": "consider using the \"in\" operator to check if _id is in the document:\n\nif (\"_id\" in cfg) {\n...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/13917331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15400756", "body": "unused variable.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15400756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15400997", "body": "This tests creates a lot of collections - it would be easier to distinguish the collections created here from collections created in other tests if the collection names had a common prefix.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15400997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15303070", "body": "Please use c++ style casts without spacing between \"int\" and \"*\":\n\nstatic_cast<const int*>(buf32)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15303070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15303105", "body": "please declare \"width\" where it is first used (on line 645).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15303105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15343185", "body": "I'd like to avoid modifying the function signature of mk_wcswidth.c, especially since we already differ from the most current version here:\n\nhttp://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15343185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15343205", "body": "Could you please restore the previous version with const int*?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15343205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15343448", "body": "How about introducing a static function calculateColumnPositions(buf32, pos) and calling it as you are specifying the parameters to calculateScreenPosition?\n\n```\ncalculateScreenPosition( xEndOfPrompt, ...,\n                         calculateColumnPositions( buf32, pos ),\n                         xCursorPos, ... );\n```\n\nAlso, our code style limits length of each line to 100 characters.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15343448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15385868", "body": "You can ignore the earlier suggestion on static_cast. That's not correct. It should be fine to use reinterpret_cast to convert from UChar32\\* to const int\\* for mk_wcswidth without the intermediate void*.\n\nAlso, mk_wcswidth returns -1 on error. In that case, would it make sense to return \"n\" to fall back on previous behavior or pass along -1 to calculateScreenPosition?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15385868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15387402", "body": "Sounds good.\n\nCan you make the argument types consistent with dynamicReferesh? ie. UChar\\* buf32, int n.\n\n```\nstatic void dynamicRefresh( PromptBase& pi, UChar32* buf32, int len, int pos ) {\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15387402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15840945", "body": "According to msdn, <mmsystem.h> provides these declarations.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15840945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15840970", "body": "(1) s/BELLOW/BELOW\n(2) static inline function instead of macro, isBelowWindowsMinResolution(long\nlong)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15840970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841005", "body": "If we're going to do this in this way, why not use \"s\" for the value?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841074", "body": "We should just set it once per process in [platform_init.cpp](https://github.com/mongodb/mongo/blob/master/src/mongo/util/platform_init.cpp). We never actually\nneed to call timeEndPeriod as part of shutdown since Windows will automatically\nunset the time period when the process terminates.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841097", "body": "did you mean \"what\" instead of \"that\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841131", "body": "s/effect/affect/\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841187", "body": "\"Application... Chrome... that's why\"\nI wouldn't bother with this comment in the code.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15878259", "body": "Sorry i did not paste the rest of the comment... The header in the documentation:\n\nhttp://msdn.microsoft.com/en-us/library/dd757624(v=vs.85).aspx\n\nmentions that the function declaration is provided in mmsystem.h\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15878259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15917410", "body": "That's fine.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15917410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15917429", "body": "This and next line:\n\ns/lenght/length/\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15917429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15917441", "body": "// See\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15917441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16298530", "body": "Please refrain from renaming this variable.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16298530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16298788", "body": "Is there a way to simplify this loop? For example, consider reducing the number of places you invoke _checkpid_.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16298788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16298806", "body": "Is this 'echo' necessary?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16298806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16298833", "body": "This 'echo' seems unnecessary. Could you please remove this?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16298833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16319804", "body": "Consider adding a mongo_killproc() function to this script and move the looping logic to that function. This should leave stop() relatively unchanged except for the killproc() -> mongo_killproc() substitution.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16319804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322533", "body": "Does this function need to be defined before stop()?\n\nAlso, please add a comment describing the purpose of this function - my impression is that we are working around a bug in killproc in init.d/functions that was not fixed until recent versions of RHEL and Fedora.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322537", "body": "declare all local variables in functions with 'local'\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322576", "body": "When I ran this script on a test machine, the process sometimes did not go terminate before the first check of the loop condition, resulting in the script unnecessarily sleeping for 10 seconds. Perhaps we can add a tiny delay here before entering the while loop.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322583", "body": "Let's restore this line and delete the pid file inside mongo_killproc()\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322599", "body": "Would it be more direct to use 'kill' instead?\n\nkill -TERM $pid >/dev/null 2>&1\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322602", "body": "Consider calling 'kill' directly.\n\nkill -KILL $pid >/dev/null 2>&1\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322609", "body": "I think you want to return the negation of the checkpid result - 0 if the process is not running; nonzero if the process is still alive.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16322609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16896630", "body": "We generally overload functions rather than use default arguments.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16896630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16916822", "body": "Unfortunately, we didn't catch that one before it went into GitHub. With certain exceptions, we try to follow the Google C++ Style Guide:\n\nhttp://google-styleguide.googlecode.com/svn/trunk/cppguide.xml#Default_Arguments\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16916822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17114379", "body": "please ignore my last comment.\n\nWould it make sense to calculate the screen length in a local variable 'displayLength' before line 2420 and replace 'len' with 'displayLength' in lines 2420 to 2422?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17114379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17171057", "body": "This fails compilation on non-Linux platforms.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17171057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17171117", "body": "Can we achieve the same effect without introducing a preprocessor variable?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17171117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17171156", "body": "Prefer // to /\\* */ comments for field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17171156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17183974", "body": "There's a set of #includes in the same file for non-Windows code around lines 160-165. You can move these #includes there and wrap linux/fs.h with **linux**.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17183974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17184036", "body": "You can move the #ifndef... #endif.. block to where Alignment is declared and remove _SYSTEM_BLK_SIZE (it's not used anywhere else).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17184036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17184257", "body": "Can we make g_minOSPageSizeBytes the default for _blkSize and move the ioctl call into the the  O_DIRECT #ifdef...#endif  block around lines 186-195\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17184257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17184319", "body": "We don't really need to check for _direct here. Just assert on reinterpret_cast<ssize_t>( buf ) % _blkSize == 0.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17184319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17478423", "body": "Can this function be moved into an unnamed namespace at the top of the file?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17478423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17478565", "body": "Since this is  new code, please follow the Google C++ Style Guide for Function declarations and definitions:\n\nhttp://google-styleguide.googlecode.com/svn/trunk/cppguide.html#Function_Declarations_and_Definitions\n\nAccording to the style guide,\n- There is never a space between the function name and the open parenthesis.\n- There is never a space between the parentheses and the parameters.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17478565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17502694", "body": "Constant names are prefixed with \"k\":\n\nhttp://google-styleguide.googlecode.com/svn/trunk/cppguide.html#Constant_Names\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17502694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17848629", "body": "The test collection is usually the same as the JS script base name. In this case, the collection name should be renamed as follows:\n\n```\nvar t = db.count11;\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17848629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17848755", "body": "For tests where we expect an exception, we use **assert.fails** test function. Here the test code could be rewritten:\n\n```\nassert.fails(function() { t.find(query_bad).count(); });\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17848755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17848927", "body": "For completeness, you might want to add cases for:\n- empty collection\n- find(q).itcount() - this returns an iterator from the server and the count is done on the client side.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17848927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17701638", "body": "Can we leave this out of the patch?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17701638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17701790", "body": "<cstdlib> should come before <string>:\n\nhttp://www.mongodb.org/about/contributors/reference/server-code-style/#for-cpp-files\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17701790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17701843", "body": "We fixed this in https://github.com/mongodb/mongo/commit/5b5decd541a6449ec4641992ae0ecb89207a0dc0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17701843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17725827", "body": "How about adding it to the top level .gitignore?\n\nhttps://github.com/mongodb/mongo/blob/master/.gitignore\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17725827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/18929901", "body": "2014 MongoDB\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/18929901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/18929968", "body": "since you are incrementing \"i\" on every iteration of this loop, consider turning this into a for loop.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/18929968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/18930016", "body": "Please add a short comment on how you are shifting all the characters not in \"chars\" to the beginning of the string.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/18930016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "sulabhM": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/8fd172e330b5af597bfba60d0bb7add8dc1a236c", "message": "SERVER-32506 OSX Mobile SE variant: Tag tests to skip on mobile SE"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/86c02f1c786ccf46f97f4561ab0ad85aed87c297", "message": "SERVER-32505 Create mobile SE evergreen variant - Linux"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "will62794": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6f885ea4579c04bd73c4d6fecc497520105f2609", "message": "SERVER-30818 Cleanup comments in background.h"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa35454e98a3026a7c44cc736d2326a3fa38e7b3", "message": "SERVER-30818 Add function to await background operations on multiple databases"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d729fe3fc6c43abd35e517aa2c796c491983329a", "message": "SERVER-32564 Increase assert.soon timeout in rollback_crud_op_sequences.js"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d8d2f422d0f072f30a08bd4b1bfc567be0899ce7", "message": "SERVER-32361 Rollback tests should not wait to connect after restart"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23914068c331a42d1f98de0d58caecf0e391549a", "message": "Import wiredtiger: 357efdd4ce279efc71ff618c59fe1b903ef80bb2 from branch mongodb-3.8\n\nref: 9e50448231..357efdd4ce\nfor: 3.7.2\n\nWT-3565       Test and understand mixed timestamp/no-timestamp usage to same data\nWT-3597       Add a diagnostic check for updates to the same key out of timestamp order\nWT-3632       Increase how granularly cache usage settings can be configured\nWT-3695       format failed to report a stuck cache\nWT-3740       race in page dirty-byte decrement.\nWT-3767       Avoid lookaside instantiation for faster reads\nWT-3775       Improve commit timestamp is older than oldest timestamp error message\nWT-3792       LSM version 1 metadata incompatibility\nWT-3796       Report a better error message if transaction commit fails\nWT-3799       Test/format with timestamps enabled pin cache full\nWT-3809       Fix a bug in lookaside related to birthmarks\nWT-3811       Python scripts for visualizing operation tracking files\nWT-3818       __rec_txn_read() code order cleanup\nWT-3825       Fix calculation of CPU ticks per unit time\nWT-3826       random-abort test failure\nWT-3827       test_compact02 failure\nWT-3828       Link error on OS/X for __wt_process data reference\nWT-3831       uninitialized buffer value in statlog server path comparison\nWT-3832       Fixup shell script warning messages\nWT-3833       test/format cache_minimum value error\nWT-3841       Fix error message pattern in timestamp09\nWT-3842       full-build Friday & lint\nWT-3844       Checkpoints can hang on limbo pages\nWT-3845       Compiler warning in examples using GCC 5.4.0"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/bd9ed5bbe07754221ad014dceefc0ebdb0ecab32", "message": "Import wiredtiger: 9e5044823185feffa71e56a6593cfb92e0741a41 from branch mongodb-3.8\n\nref: 1a29eac4dc..9e50448231\nfor: 3.7.1\n\nWT-2705       High throughput cache bound many threaded workloads can experience long latencies\nWT-3725       Add statistics to locks around timestamp structures\nWT-3750       Fast-path fs_directory_list of a single file.\nWT-3768       Lookaside optimization: birthmarks\nWT-3769       Fix a bug in reverse cursor walks with particular delete patterns and prefix compression enabled\nWT-3779       Add support for string formats with WT_CURSOR::modify\nWT-3800       test_wt2834_join_bloom_fix hang\nWT-3806       Make sure rdtsc values move forward in time\nWT-3807       clang static analysis updates\nWT-3810       wt_rdtsc calibration needs to be longer and verify validity\nWT-3812       debugging page output should handle complex key/value items.\nWT-3816       Enable prefix compression on the lookaside table\nWT-3819       clang static analysis improvements\nWT-3820       Add a WT_SESSION.breakpoint method for Python debugging.\nWT-3822       Update WiredTiger copyrights to 2018\nWT-3824       tsc_nsec_ratio can compute to zero and cause divide by zero bug"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/ec894eecfba4009e2ccd685e15351e4dae5848ad", "message": "Import wiredtiger: 1a29eac4dc8cf82de437292da546e3f4039268a4 from branch mongodb-3.8\n\nref: 596a3c7c01..1a29eac4dc\nfor: 3.7.1\n\nWT-3079       Make sure eviction visits all trees\nWT-3133       Detect or track long latency operations\nWT-3295       Allow LSM to merge into custom data sources\nWT-3587       Remove HAVE_VERBOSE conditional compilation\nWT-3654       Fix warning in Windows build on evergreen\nWT-3716       Restore the WT_VERB_TEMPORARY verbose flag.\nWT-3720       flags macros cast flags to unsigned values, hiding warnings.\nWT-3732       Handle adding WT indices while cursors on the table are open\nWT-3734       Fix undefined behavior in verbose output\nWT-3738       Review internal session allocation accounting\nWT-3753       Building on Windows --enable-java\nWT-3772       Hot backup causes uncontrolled growth of WiredTigerPreplog files\nWT-3774       Enhance Python lookaside testing to cover cursor modify\nWT-3776       Cursor remove operation unpins page too early\nWT-3780       Improve error messages on invalid WT_CURSOR::modify usage\nWT-3783       Fix transaction isolation to use the correct enum\nWT-3786       Transactions with timestamps should read their writes\nWT-3787       test_compact02 failed as compaction halted due to eviction pressure\nWT-3790       Switch statistics to rdtsc from epoch calls\nWT-3793       WiredTiger page debug dump functions should unpack integer keys\nWT-3794       Coverity 1383547 and lint\nWT-3795       lint cleanups for the op-tracking software, reduce record write size."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmahar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/23870b6aecac924a15af49bb7abe2f8e1cda2aa8", "message": "SERVER-30744 Move dropCollection logic from ShardingCatalogClient into ShardingCatalogManager"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0bb9226dcedc4bcb98ce97f10f1262da3905d71b", "message": "SERVER-32365 Move the logic of the dropDatabase command into the new _configsvrDropDatabase command"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/6b1c9105900a1a3af86d1da8e67c2fd54826e5e8", "message": "SERVER-30504 Remove journaling option from writeConcerns tested for config server metadata commands"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/c6d77332363ca7ba7913c0c3eba0527e3f367c92", "message": "SERVER-30504 Move the logic of the dropCollection command into the new _configsvrDropCollection command"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/58993e5fb338a92705d79d7e233e148639782a7b", "message": "SERVER-32363 Create a _configsvrDropDatabase command"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/65c64a7845ca8159028148b25d3ec1867158108d", "message": "SERVER-31316 Remove unused code and unnecessary inheritance in KeysCollectionManager* classes"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/33bf1580977524b1beb84f9bcedd51547c68aeb4", "message": "SERVER-30534 Create a _configsvrDropCollection command"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kaloianm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7f4e454907f14a5a82195d15e6ee96cbcd6d4d5b", "message": "SERVER-32447 Add a mock CatalogCache::getCollectionRoutingInfoAt method\n\nThe added method always returns the routing information at the latest\ntimestamp."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b5ebe8a5492c4f5e33970c0f885b9ac51460b9dc", "message": "SERVER-29423 Prevent the balancer policy from scheduling migrations with the same source or destination"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f164097cb678f763289ee870e854f89749dbbba8", "message": "SERVER-32526 Increase the ChunkManager unit-test coverage\n\nAlso tightens up some of the checks in the JS tests and cleans up the\nChunkManager/CollectionMetadata code in preparation for making it use\nKeyString."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a9d076d8642c13859588c3bc111b3c9af08cea2f", "message": "SERVER-32568 Blacklist migration_sets_fromMigrate_flag.js from the CSRS continuous stepdown suite\n\n* Make the test less resource intensive and verbose by lowering the\nnumber of spawned mongod instances\n* Add logging to dump the contents of the oplog on failure"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a0210b2e83641619eed60c8b19eb1abd7cf37fa1", "message": "SERVER-32480 Remove CatalogCache retrieval methods, which take StringData"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/98f30b75b31c54464d5a907f435c15121a6c5353", "message": "SERVER-28992 Make the write commands targeter return actual ShardEndpoint(s)\n\n... instead of populating arrays of pointers. This saves both on memory\nallocations and makes the code simpler to follow."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/10e3ce2d905ca3afc1e5949da2daa3353740171a", "message": "SERVER-28992 Get rid of unused code from the write commands tests"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/890051d8166e668442aff70cfcde3cb71ae6115f", "message": "SERVER-28992 Cleanup and remove unused code from write commands\n\nNo functional changes, just getting rid of some unnecessary overhead.\n\n* Get rid of the extra TargetedBatchSizeMap during write command processing\n* Do not use pointers in the write commands error tracking\n* Remove unused code from the commands parsing"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/85e1ed33ef2fc83e870124441eee7e036b8118a4", "message": "SERVER-32372 Ensure per-shard write request size doesn't exceed the max allowed BSON size"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4312da76ee19623dd60811a22a53fa8e9beb484c", "message": "SERVER-29909 Remove unnecessary class friendship declarations"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8467708af7fa83f8827362b80f56dab4aad30a41", "message": "SERVER-29909 Remove circular dependency between db_raii and sharding libraries"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/915bcc9ee3a396c857370fa6379408cb15e87a3e", "message": "SERVER-32202 Do not clear the cached sharding filtering information on replication state changes"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "visualzhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/7d2f43adabb344f93ef8bec523efa3187bcf4ce6", "message": "SERVER-32317 Make sharding chunk manipulation operations use doTxn instead of applyOps"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f496011618ba7b1a99e6d9e51bea6966341cfd12", "message": "SERVER-28290 Stepping down due to a higher term seen in a heartbeat should not discard term after stepdown."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/ca539d91d8da0080b348196b07c9d4e464d4e40e", "message": "SERVER-32432 Race condition causes seg fault in ReplicationCoordinatorExternalStateImpl shutdown"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9596006", "body": "@kangas , this test is in the jsCore test suite. Running the test with `--use-write-commands`  works well for me:\n\n```\n./buildscripts/smoke.py --use-write-commands jstests/core/opcounters.js\n```\n\nor\n\n```\n./buildscripts/smoke.py --use-write-commands jsCore\n```\n\nThanks for your review and merge!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9596006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mtrussotto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ef81d53b986aa701c722820a204eba73a635f748", "message": "SERVER-32726 Fix out-of-order error code in update_driver.cpp"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f25cab34c54e87de7983f801cd3ee50395366ced", "message": "SERVER-29078 Eliminate use of memberHeartbeatData in replication_coordinator_impl"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8b766fdc6c896ba0a4db30d7b9d2f050b464db22", "message": "SERVER-32162 Remove non-atomic (push-based replication) support from doTxn."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7b53229f13a088aed5ab67488896fd40c92fbdb5", "message": "SERVER-32560 Use unique database name in do_txn_atomicity.js"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/c9e92fdd8c4d3225b16893bdd278cdf415c10cf1", "message": "SERVER-32444 Coverity analysis defect 102285: PW.PARAMETER_HIDDEN"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/55be4faf62882b1b6b7313aa87acf393ef9fddcd", "message": "SERVER-32162 Create a doTxn command"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nzolnierzmdb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/4eabf1ea6225f444b3b0b3b2fee785aaa306212f", "message": "Revert \"SERVER-32308: Add the ability for a $lookup stage to execute on mongos against a sharded foreign collection\"\n\nThis reverts commit 7298d273c0497f2720ec1471ad0f4910bff07af4."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7298d273c0497f2720ec1471ad0f4910bff07af4", "message": "SERVER-32308: Add the ability for a $lookup stage to execute on mongos against a sharded foreign collection"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/2d636b80d41dda1300e7d37a7ffee6fc81ed67ff", "message": "SERVER-31639: Additional optimizations for MatchExpression::getOptimizer()"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "markbenvenuto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/2f788aa745ca1366704b821087225af49ce3285a", "message": "SERVER-32161 MongoDB 3.2+ fails to compile on PPC64LE with glibc 2.26+"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f971dee540b9c9f7d6a92e278900e8bb00014f92", "message": "SERVER-32649 WiredTiger fails on non-x64 builds of new GCC"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/52c3dc23a9b8e532482d6be480a105a805b26faf", "message": "SERVER-32427 Config file parser does not support UTF-16 encoded files marked with a BOM"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4bc1ea069e0f9ad04af93a1442d31b87b34ddd25", "message": "SERVER-30609 Add support for markThreadIdle to adaptive service executor"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/449905c81af3803ebb16eb8f7ca779ae783517d9", "message": "SERVER-32386 IDL should allow custom types for command's first element"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/0720daad0957bd1469721861c8f6b83355d00dc0", "message": "SERVER-32262 IDL produces \"const <enum>\" return types in generated code"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/86afc6ed8216e7b31ea6ab9c13d7bac470ee0774", "message": "SERVER-32431 IDL generated code seg faults on s390x"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/ff014351437e42f87f78c286c448f83de8165b14", "message": "SERVER-32263 IDL Chained Structs should be inlined by default"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15960908", "body": "It would be better to go with the following change below so that it follows our header include rules. I have verified this on my local Windows machine. The basic.h file ultimately includes Windows.h, and sets all the right defines.\n\n```\n+#include \"mongo/platform/basic.h\"\n+\n #ifdef _WIN32\n+#include <mmsystem.h>\n #include <crtdbg.h>\n #include <stdlib.h>\n #include <stdio.h>\n #endif\n\n #include \"mongo/base/init.h\"\n #include \"mongo/util/log.h\"\n #include \"mongo/util/stacktrace.h\"\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15960908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "syev": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/07031843f1868a956b28f9e0e4d546cce4badfbf", "message": "SERVER-32614 Remove usage of non-threadsafe strptime()"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/427d09d191ba7fd6187eff01ab522ed5b0714f28", "message": "SERVER-32609 Skip reports with no historical data"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/5397d13e51c182e0a8afcd91648453af4d6534f1", "message": "SERVER-28396 Respect logkeeper's POST size limit"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a3324479820e4280cbbdad77d1e1411be58607da", "message": "SERVER-29147 Add change streams sys-perf tests"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "acmorrow": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/20258d04c3bb4352c84af091bca1d404dac9cfee", "message": "SERVER-30815 Add some missing LIBDEPS edges"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/11225541cbbaed58e27ff5254c145dd834a86190", "message": "SERVER-30815 Add missing libdep for non-enterprise builds"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9d1f323a131ba5e3e1af79973ae79910de10a957", "message": "SERVER-30815 Refactor libraries to reduce cycles\n\n- Merge db/s/split_vector and db/s/split_chunk into db/s/sharding, since they\nwere directly mutually cyclic with it.\n\n- Split db/index/index_access_method out of db/index/index_access_methods, so\nthat libquery_exec can use the abstract class without needing to know about the\ndetailed implementations\n\n- Combine db/clientcursor, db/query/{query,internal_plans},\ndb/exec/exec, parts of db/write_ops, and\ndb/pipeline/serveronly_pipeline, into a new db/libquery_exec library.\n\n- Split a new library s/grid out of s/coreshard, and fold the parts of\ns/client/sharding_client into s/grid that were cyclic with coreshard, solving\nthis cycle.\n\n- Adds/removes a few stray LIBDEPS here or there as needed to make the above\ntransformations work.\n\nAfter making this transformation, we will be left with one important cycle: the\nnew db/libquery_exec is still cyclic with db/s/sharding"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d30bf0ec032318c90952738eaa1c1c0ed1ea040c", "message": "SERVER-30815 Add some missing libdeps edges currently acquired via serveronly"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/6eeca9e35e1f4b4e1776e3a5423c6b058ca0839b", "message": "SERVER-30815 The debugger library should be private to base"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d6eab87cb1792ecea387bb35e14a797f0e639770", "message": "SERVER-30815 Add missing libdep to CAPI transport"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/39a57e323f2b763adb67b848a17c74cc233350c4", "message": "SERVER-32479 Make all library names unique"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/efceb3c07f16be79d46b66c2f2a8cf28e617ba24", "message": "SERVER-30815 Make mongodbmain library non-exporting"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/263b5b2cb3f808d3ba0f0e61894dd0f5f8874fbc", "message": "SERVER-30815 Library injections via LIBDEPS_DEPENDENTS should be private\n\nBut provide a way to force them public when needed"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/5d43961ca1ae0436d851744bf75b9d530469491d", "message": "SERVER-30815 Injections for mongod should adhere to the mongodbmain library"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/11798513", "body": "@igorcanadi \n\nThanks!\n\nWe are still sorting out a few rough edges, so might want to wait on removing your formatter.\n\nAt this point, we have no plans to backport to 3.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/11798513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/11807354", "body": "@igorcanadi - FYI rough edges have been addressed, it is staying.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/11807354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353208", "body": "I'd probably call these cbegin() and cend() since they return const_iterators.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353654", "body": "Sorry about that. The new things are just so shiny!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28247945", "body": "The JIRA issue that you referenced indicates that this fix is intended for backport to pre-3.1 branches, where C++11 is not permitted.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28247945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/33567585", "body": "std::map<K, V> and std::unordered_map<K, V> have the same value_type typedef. I wonder if you could just write this as:\n\n```\nstd::map<CommandMap::key_type, CommandMap::value_type> sortedCommands(\n    _commands->begin(), _commands->end());\n```\n\nAlso, std::map here feels like overkill. Commands number in the hundreds, sorting a vector of that size is going to be very fast.\n\n```\nstd::vector<CommandMap::value_type> commands(_commands.begin(), _commands.end());\nstd::sort(commands.begin(), commands.end(), []...);\n```\n\nI also notice that in the loop below you only use the first element of the pair once, to filter. In that case, do the filtering when adding to the vector, and only keep the command pointer, avoiding the string copies, then sort that with a lambda based on the name in the command.\n\n```\nstd::vector<Command*> commands;\nfor (const auto& entry : _commands)\n    if (entry.first == entry.second->name)\n        commands.push_back(entry.second);\nstd::sort(commands.begin(), commands.end(), [](Command* lhs, Command* rhs) {\n    return (lhs->name) < (rhs->name);\n});\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/33567585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/33620591", "body": "Sorry, I mistyped that. It should be\n\n```\nstd::map<CommandMap::key_type, CommandMap::mapped_type>\n```\n\nRe performance: this is somewhat academic, because the actual performance difference will be unobservable, and this is not exactly hot-path code.\n\nHowever, vector is often faster than map in practice due to its low constant factors and better cache utilization, since it is a contiguous container rather than a node based container.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/33620591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/34048495", "body": "FYI, this is the RE that the legacy C++ driver uses: https://github.com/mongodb/mongo-cxx-driver/blob/legacy/src/mongo/client/dbclient.cpp#L82-L97\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/34048495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/48687725", "body": "You definitely can't do this, as it will stop all global initializers from running. Did you check that mongod actually starts up with these changes?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/48687725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/48687727", "body": "Seems unrelated to GCC\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/48687727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/48687737", "body": "This shouldn't be necessary. What warning or error is GCC emitting? Pointers to these are passed into getQuerySettingsAndPlanCache right below.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/48687737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/48687747", "body": "In general, we prefer to not change the boost sources unless overwhelmingly required. What warning or error prompted this change?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/48687747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amschwerin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/9b3ff62c2776039725342f0f22a843e6b375f1be", "message": "SERVER-32526 Use KeyString for ChunkMap key instead of BSONObj"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/ee3d6a0f0a2f6dd23a772786326f35bfc864f7d4", "message": "SERVER-32210 logOp should uassert, not fassert when not primary."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3578127", "body": "Thanks for noticing the errant behavior.  A more consistent fix is to replace \"e.Action\" with \"Action\", or to not explicitly construct an action object at all.  The problem with \"e.Action\" is that it binds the particular environment \"e\" to the action, rather than the environment that is used to build \"inst\".  The latter environment has a correctly defined '$TARGET' environment variable.  I have a patch that makes this change pending, and will push it later tonight.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3578127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3932640", "body": "I've got some reservations about this patch's goal and its\nimplementation.  Let's talk.\n\n-Andy\n\nOn Sun, Feb 12, 2012 at 7:05 PM, Nosh Petigara\nreply@reply.github.com\nwrote:\n\n> Running 'tutorial' starts a tutorial that go through the same steps as\n> http://try.mongodb.org\n> 'next' and 'back' navigate through the tutorial\n> \n> You can merge this Pull Request by running:\n> \n> \u00a0git pull https://github.com/nosh/mongo master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n> \u00a0https://github.com/mongodb/mongo/pull/175\n> \n> -- Commit Summary --\n> - SERVER-4631 - added 'tutorial', 'next', 'back' functions to shell\n> \n> -- File Changes --\n> \n> M src/mongo/shell/utils.js (173)\n> \n> -- Patch Links --\n> \n> \u00a0https://github.com/mongodb/mongo/pull/175.patch\n> \u00a0https://github.com/mongodb/mongo/pull/175.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/175\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3932640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4696967", "body": "Thanks!\n\nPlease use a reinterpret_cast<>, instead of C-style cast.  Also, if\nyou haven't already, please sign the contributor agreement.\n\nhttp://www.10gen.com/contributor\n\n-Andy\n\nOn Mon, Mar 26, 2012 at 9:06 AM, Jani Monoses\nreply@reply.github.com\nwrote:\n\n> On ARM and PowerPC char is unsigned by default. This breaks\n> BSONtype() because the latter needs to represent -1 as well.\n> \n> The bug can also be reproduced on x86 if passing -funsigned-char to gcc. The smoketest fails due to a SIGTRAP.\n> \n> You can merge this Pull Request by running:\n> \n> \u00a0git pull https://github.com/janimo/mongo master\n> \n> Or you can view, comment on it, or merge it online at:\n> \n> \u00a0https://github.com/mongodb/mongo/pull/196\n> \n> -- Commit Summary --\n> - Use signed char explicitly for BSONType()\n> \n> -- File Changes --\n> \n> M src/mongo/bson/bsonelement.h (2)\n> \n> -- Patch Links --\n> \n> \u00a0https://github.com/mongodb/mongo/pull/196.patch\n> \u00a0https://github.com/mongodb/mongo/pull/196.diff\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/196\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4696967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5027444", "body": "processFile and processFifo share too much copy-paste code.  You ought to be able to write private methods openFifoFile and openRegularFile, and then have a processFile() function that takes an open and ready to read FILE object, no?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5027444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5092932", "body": "There should be a refactoring that eliminates the code duplication.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5092932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5124756", "body": "This bug is now tracked as https://jira.mongodb.org/browse/SERVER-5575.  The correct solution will be to fix how --full behaves, or to remove it entirely, and provide an alternative mechanism for controlling the behavior of \"scons all\" and \"scons install\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5124756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5396004", "body": "Thanks for submitting.  I'll take a look at it during the week.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5396004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5419448", "body": "Could you please sign the MongoDB contributor agreement?  http://www.10gen.com/contributor\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5419448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5469067", "body": "Thanks!  I've applied this to the master branch.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5469067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5473604", "body": "This seems ready to go.  You'd be doing me a real favor, though, if you dropped this request and replaced it with 3 new ones.  The first is everything through 8354e4a, the second is eb26b52 (change when a line goes into history), and the final one is db533bd (improve edit functionality -- also, please look up the associated JIRA ticket and mark it).\n\nFor the when-a-line-enters-history, it'd be good to have an associated jira ticket, because that's how a lot of engineers internally discuss the merit of changes, and this one warrants at least a little discussion.\n\nIf you don't want to do this, I'll get to it sometime in the next week or so.  Pretty slammed, right now.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5473604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511959", "body": "Thanks, Andrew.  I've squashed these commits into one, and edited the comment, but have applied your code to the mongodb/mongo repo.  It's been a pleasure.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5519049", "body": "Sorry, this patch breaks multi-line editing in the shell.  See SERVER-5764, which was resolved by rolling this change back.\n\nThe shell line processing logic is unfortunately more spaghetti than I realized, and of course there's no document specifying expected behavior for these cases.\n\nAnyhow, if you want to dig further and see how to preserve multi-line editing in the face of this, the whole input processing module is fair game for reexamination.  I don't know what your interest level is, but I can try to get someone over here to draft a spec for how they think shell input is supposed to work.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5519049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5752489", "body": "The correct predicate is Lock::isLocked(), not to test whether cc->getContext() returns true.  Separate patch en route.  Thanks for your help.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5752489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5847977", "body": "Rather than adopting the values from the environment variables, they should be take from command line options.  It is intentional that SCons and our SConstruct files avoid implicit parameter setting from the environment.\n\nSay --cxx, --cc and --ldpath?  --ldpath could be repeatable, much as the -L parameter to the linker is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5847977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5860288", "body": "I'm going to take another look at this.  We're in more of a position to move to bfsv3 than previously, since boost is now imported into our source tree.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5860288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5860744", "body": "Thanks, Andrew.  I'll take a look, soon.\n\nOn Mon, May 21, 2012 at 1:01 PM, Andrew McFague <\nreply@reply.github.com\n\n> wrote:\n> \n> @andy10gen: When you get a chance, this will re-introduce multi-line\n> editing.  I had previously removed the code and not noticed it in the diff.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/221#issuecomment-5827844\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5860744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6151178", "body": "The problem is tricky.  Typically, you interrupt select with a signal, but we don't currently have a facility for using Unix signals to interrupt threads.  Removing these polling constructs is a goal of mine, but a lot of that work requires more redesign, and is harder to paper over than you might imagine.  I think that we'll want to change some of the higher level abstractions in the process.\n\nIn the interim, could you just make this pull request about fixing up the elapsed time computation (leave the timeout in place)?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6151178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6151596", "body": "Thanks for reworking this.  I presume you haven't had a chance to test this on a Windows machine, or another machine where g++ isn't the correct default compiler choice?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6151596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6167055", "body": "Haven't forgotten this, just swamped w/ some other stuff right now.  Will get back to it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6167055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6316048", "body": "I see that Sid already merged this.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6316048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/1143087", "body": "Given your use case, scoped_ptr?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1143087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1178776", "body": "It's a bit of a microoptimization, since there's nobody to spuriously wake up when X.n is 0, but it would not be incorrect semantically.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1178776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1190126", "body": "This is going to give some pretty inaccurate stats in high-activity systems.  We'll just lose a lot of times.\n\nAt least label it with SERVER-5026.  If you're willing to fix it now, so it doesn't underreport times when the system is heavily loaded, I'd implement an AtomicUint64 in bson/util/atomic_int.h, give it an operator+=, and be done with it.  It'll have the same cache performance problems as this implementation, but will at least report correct times.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1190126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1190129", "body": "Call this \"QLockTimingWrapper\"?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1190129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/17556970", "body": "We raised the compiler minimum to GCC 5.3 in this commit\nhttps://github.com/mongodb/mongo/commit/8d8f17890e5a7e3cb2ea0994ccb58793abdee124\nback\nin April.\n\n-Andy\nOn Thu, May 19, 2016, 11:06 PM Igor Canadi notifications@github.com wrote:\n\n> Hey @andy10gen https://github.com/andy10gen, this diff introduced a\n> bunch of failures for me:\n> https://gist.github.com/igorcanadi/1dca04aa6f6506a4ce6ffb5cf5fb72d3.\n> \n> I'm using g++ 4.8.5, is this a known problem?\n> \n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/mongodb/mongo/commit/97f24aa42d86dcadd789ba2c9e144709fa7a7aab#commitcomment-17551261\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/17556970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497", "body": "For exception safety, use a boost::scoped_ptr to hold the result of readDocument().\n\nboost::scoped_ptr<BSONObj> o(readDocument(file, buf, BUF_SIZE));\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503", "body": "This function should not be inlined.  Implement it in the cpp file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530", "body": "Ditto on scoped_ptr, here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/660530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654", "body": "(1) Inlining it won't help performance.\n(2) Inlining it will increase the binary size.\n(3) Inlining it means that any time it changes, all modules that include tool.h must be recompiled, which slows down incremental compilation.  This is important to developers.\n\nSo, it does two bad things and no good things.  Don't inline it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609", "body": "In the event that the file is truncated, the old code would alert for failure in the event that the input file was truncated, and did not contain an even multiple of 4 bytes.  This change will silently stop processing, which is a behavior change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614", "body": "\"isFifoFile\", instead of \"fifo\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/694614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347", "body": "Thanks for pinging.  Will look again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/774347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711", "body": "Haven't forgotten.  Really swamped over here.\n\nOn Fri, May 4, 2012 at 8:36 AM, Azat Khuzhin\nreply@reply.github.com\nwrote:\n\n> > \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0size_t amt = fread(buf, 1, 4, file);\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// end of fifo/file\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if ( feof(file) ) {\n> > - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> \n> @andy10gen ?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/205/files#r773788\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/794711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900", "body": "I think this needs to default to None, or on systems where \"g++\" is not the default compiler, builds will fail when --cxx is not specified.  I.e., Windows/MSVC systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902", "body": "Again, default to None.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912", "body": "Though we haven't been very consistent in the past, SConstruct files are python code, and should follow PEP-8 style.\n\nconf.env.Replace(CXX=GetOption(\"cxx\"))\n\nNote where whitespace has been removed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918", "body": "I think I'd rather omit these print statements.  If we want to report which compilers are being used, we should do that separately from option setting.  The compiler command line and link flags show up in the output, anyways.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/935918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4558533", "body": "Verify is thread-fatal, while fassert is process-fatal. Is the process\ncompromised after CHECK failures in S2? If so, fassert.\nOn Jun 5, 2013 1:37 PM, \"Hari Khalsa\" notifications@github.com wrote:\n\n> In src/third_party/s2/base/logging.h:\n> \n> >  // Always-on checking\n> > -#define CHECK(x)   if(x){}else LogMessageFatal(**FILE**, **LINE**).stream() << \"Check failed: \" #x\n> > +#define CHECK(x)   if(x){}else VLOG(2) << **FILE** << \":\" << **LINE** << \": Check failed: \" #x\n> \n> I agree. Thanks for looking into this. Should be good to pull once that\n> change is made.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mongodb/mongo/pull/430/files#r4550584\n> .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4558533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4600082", "body": "Well, I had intended to make all of the assertions streamable, a la\nGoogle's CHECK, eventually, but never got around to it.  I'm working on\nmaking at least the fatal asssertions (fassert) streamable, and will\nrespond here and on SERVER-9751 when I do.  Should be sometime in the next\nweek to two, after I get a few other things taken care of.\n\nOn Thu, Jun 6, 2013 at 3:53 AM, Alexander Artemenko <\nnotifications@github.com> wrote:\n\n> In src/third_party/s2/base/logging.h:\n> \n> >  // Always-on checking\n> > -#define CHECK(x)   if(x){}else LogMessageFatal(**FILE**, **LINE**).stream() << \"Check failed: \" #x\n> > +#define CHECK(x)   if(x){}else VLOG(2) << **FILE** << \":\" << **LINE** << \": Check failed: \" #x\n> \n> Well, guys, I found that CHECK can't be just redefined as a MONGO_verify.\n> Because originally, CHECK returns an object to be used as a stream for\n> error message.\n> \n> What should be used in this case? Probably MONGO_massert? If yes, then\n> what should I use as msgid?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mongodb/mongo/pull/430/files#r4562525\n> .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4600082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4900763", "body": "Put the space in, please.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4900763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353366", "body": "Drew is getting ahead of himself.  cbegin() and cend() are C++11 names.  begin() and end() are fine.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353373", "body": "- should line up with the first \\* from /**, above.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353392", "body": "However, I think the concept of const_iterator is sufficiently well known in C++ that you could omit this comment.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5353392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/8203212", "body": "Do you mean 2048 here?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/8203212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12447589", "body": "This change LGTM, but would it be more understandable to use \"9.0e19\", to make it really clear that we're testing \"a double too big to fit in a 64-bit integer\"?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12447589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/13918528", "body": "For that matter undefined == null in javascript (but it is not the case that undefined === null).  You could also use \"cfg._id != null\" and be done with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/13918528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15944117", "body": "Indentation\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15944117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/21556537", "body": "Furthermore, you should capture errno before you start streaming.\nint myErrno = errno;\nerror() << ... << errnoWithDescription(myErrno)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/21556537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28334206", "body": "Use log(), not LOG(0).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28334206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28462289", "body": "If you want to eliminate the field name, write res[\"vote\"].numberLong().\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28462289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "DiannaHohensee": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/74dd4586e68b77838cf0c93a6697e0353a3c111a", "message": "SERVER-32519 Add a new wire version for v3.8"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/6e57c0d022c15828ab8c16a1229b355e30e734b6", "message": "SERVER-32519 clean up WireVersion enum uses in the code to use LATEST_WIRE_VERSION"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f4c11f679de3781ae202511fe07144e357c80e2b", "message": "SERVER-31982 check for write concern errors in migration commit response"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "EshaMaharishi": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/9d3de0e3db0af20bfa2f190189407e50acfbaacc", "message": "SERVER-30152 Add safe secondary reads targeted tests for mapReduce"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7a1c7b85f2cf120178d631c2c8c6f0d2eaa780b9", "message": "SERVER-32529 Revert \"SERVER-32105 Require shard servers and config servers to be started with --replSet or 'replSetName'\"\n\nThis reverts commit f06a20d13525ce975e88ff17a0de790b86d51c11.\n\nAlso revert \"SERVER-32051 Require shard servers and config servers to be replica sets\"\n\nThis reverts commit 554606b35c2da399b224380a7ab5cd16b736e514."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adamlsd": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/c61c796b3ff604fc0ba37eb109a98b52cd454ee7", "message": "SERVER-32414 Remove some `stdx::` checks from lint\n\nSome checks in lint for `stdx::` polyfills, such as `stdx::make_unique`\nare entirely out of date.  In the interest of removing these stale\npolyfills, we're relaxing some lint rules."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f6ab08373ea1dd473c2a20ca03d3cc29387adaaf", "message": "SERVER-32486 Fix DNS diagnostics in Windows.\n\nThe Windows DNS Query implementation does not carry the service\nname being requested into the resource record and iterator types.\nThis means that the diagnostics output when a failure occurs are\nless informative.  This change merely plumbs through the necessary\ninternal variables to track the service name."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/3a2b878f747a3a2bc2a49347162872303cf4a19f", "message": "SERVER-32264 IntelDFP typedefs from system headers\n\nThe IntelDFP library uses an intricate maze of preprocesor checks to\ndecide which typedefs to create.  Often these typedefs conflict with\nthose in system headers.  It's better to just include the system\nheaders."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/149bf3944a6d372e9e7d1c3c16a543fbd3c656f2", "message": "SERVER-32396 Do not pass FQDNs to OpenSSL\n\nOpenSSL makes requests with the exact string passed as an SNI.  This\nshould have the trailing dot elided when present in FQDN form."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/2efa93e1132e2dbc1b7f5a7f0118a9440e511f89", "message": "SERVER-32164 Fix handling of `authSource` in URIs."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/32819bdaa0e514f0747c37520178bda189bdb469", "message": "SERVER-32287 Fix `time_support.cpp` for FreeBSD\n\nThe `clock_getres` function also exists on FreeBSD, so the check for\n`__linux__` alone is insufficient."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gabrielrussell": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/ea16961df10d6ee0b45942bef4657fe553b39d48", "message": "SERVER-28123 enable building spidermonkey on iOS"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/aa49928e60f72eb10b7b30840152b100f615a06f", "message": "SERVER-32389 show android api version as libc version in hostInfo"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/bd9c109958c1721767f5432683706c62ec90fe30", "message": "SERVER-32391 use HAVE_STRTOLL instead of HAVE_STRTOQ in pcre"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/349dc90077147bb41953b92b132fb2763930834a", "message": "SERVER-32261 disable dns_query (res_nsearch) on android"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "guoyr": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/2e6b7c8ccceb94122b000cfc9bd4c06c7b5e2b7a", "message": "SERVER-31920 refactor validate_collections.js to accept a list of nodes in addition to a DB"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/23a516c7d0acd9b9f571029c9f119069fdbfd73d", "message": "SERVER-31917 add more logging to the rollback test fixture"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b89f752fe24dd4b24d59f39ea2f45b01aaca8250", "message": "SERVER-31636 add new tasks for the update fuzzer in evergreen.yml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/21561290", "body": "@kangas updated!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/21561290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28255051", "body": "Understood. The consensus from the CR is that there needs to be another version for the backport. I've submitted another PR on the 3.0 branch which uses auto_ptr instead. https://github.com/mongodb/mongo/pull/950\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28255051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "visemet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/12fe88d24a821d4411b5e7ca5973293d10e707b4", "message": "Revert \"SERVER-21630 run CheckReplDBHash on csrs and shard replset\"\n\nThis reverts commit 43b1a2984a4c7b9d1fbc9e4d0d6596c6f626ffda."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/2c451638c2456a3ebc6de87a3d2fcfecbb8d92e3", "message": "SERVER-32474 Fix double logging when using --log=buildlogger.\n\nExposes an additional logger that uses the test's root logger as the\nparent for any TestCase instances constructor by the hook. The fixture\nlogger still continues to be the parent of the hook logger.\n\nAlso changes the CleanEveryN hook to explicitly get marked as a failure\nif a ServerFailure exception is thrown, rather than relying on\nTestReport.combine() to do so implicitly."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/27ccd4a3bf1150a1bf4356de8a91e4dff64e0762", "message": "SERVER-32573 Disable test when running with WiredTiger's LSM tree."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/3a6dfd6810235e678367d3cff5f74fb1eeb971d9", "message": "SERVER-31198 Use modified version of commandObj in retries."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/071e4e8b7b3cee57bfa9b48c4320ca1abea7aa75", "message": "SERVER-32497 Cache error message used in the for-loop.\n\nThis avoids the expense of calling `tojson()` on the server's response\nrepeatedly."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9eba10f7482ee9e88af46a45e68090502970dc8b", "message": "SERVER-32500 Remove sharding task from OS X 10.10 MMAPv1 builder."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/3865b0b5b9b981e40a4bc6815dd9ef3bcf2bd2fe", "message": "Revert \"SERVER-32298 Add a background system task to periodically copy remote statistics in evergreen.yml\"\n\nThis reverts commit 901760c683dbaf4c1581bf7216ca80756adcc581."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "apocarteres": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/2cfb8cc89584b9f30f61e51d533ccc789379a9a2", "message": "SERVER-32344 register DropPendingCollectionReaper before running dbtests\n\nCloses #1192\n\nSigned-off-by: Benety Goh <benety@mongodb.com>"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/523531464b747daa2a25eea33ed42239db871622", "message": "SERVER-32343 dbtest repl suite restores ReplicationCoordinator settings on tear down.\n\nCloses #1193\n\nSigned-off-by: Benety Goh <benety@mongodb.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cramaechi": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6e3b0deb789ec1e9bbdb78f42547278fb7b6b8f0", "message": "SERVER-30283 Fix integer overflow in PingStats::hit()\n\nCloses #1196\n\nSigned-off-by: William Schultz <william.schultz@mongodb.com>"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/33cd40bc0b6779c2d97b1562dd24bf53d9c393aa", "message": "SERVER-30376 Remove extra hyphens during parsing error\n\nCloses #1199\n\nSigned-off-by: Kelsey Schubert <kelsey@mongodb.com>"}], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1205", "title": "SERVER-31970 Improve error handling in geo_polygon3.js", "body": "Adding assertions on failure to write, drop collection or build an index\r\nwill make this test easier to troubleshoot.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1204", "title": "SERVER-31942 Truncate test lifecycle JIRA issue description", "body": "When the update_test_lifecycle task sees changes in unreliable tests, it\r\ncreates a JIRA issue before committing the changes.The description of\r\nthe issue contains the tag changes and if there are many of them the\r\ndescription text size can exceed the allowed limit for the field\r\n(32,767 characters).\r\n\r\nWhen that happens the task fails and the changes are not committed.\r\n\r\nInstead we should truncate the description when its size exceeds the\r\nallowed limit.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1203", "title": "[SERVER-32259] Update wiredtiger_util.cpp", "body": "WiredTigerUtil::fetchTypeAndSourceURI() is using\r\ninvariant(colgroupResult.isOK()) instead of\r\ninvariantOK(colgroupResult.getStatus()). This means that if the\r\ninvariant ever fires, we don't know what the bad Status actually was.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hptabster": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/56ba266ca7eb46bfca0dc15ba0ca2290237db713", "message": "SERVER-32243 Add an option to have the validate hook skip some collections"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/c3364da557aaece6da39ee8b7e6ffe44ec89f346", "message": "SERVER-31935 Archive process of interest core dumps from remote EC2 instance"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/898644596d7c0f9bfba9e198e8ad67d6684959c3", "message": "SERVER-32541 Disable Powercycle MMAPv1 task"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/60799be6648b497741d029c7e641402b2a8035eb", "message": "SERVER-32515 Powercycle - rsync file exclude list"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e4ba7722773f68d42a66af7439e585cc2136d003", "message": "SERVER-32403 Increase remote EC2 expire time to 3 hours"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b82d22183aac3443188becfe84329374e475b5dc", "message": "SERVER-32228 Remove extraneous crash_options for powercycle_WT task"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/260cc0cb463537cf9f1f479a8c38e74ffd807407", "message": "SERVER-32228 Powercycle - handle remote host restarts"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9d6383c2b9f0c6af06d7181e6cff9152d92ba858", "message": "SERVER-32298 Add a background system task to periodically copy remote statistics in evergreen.yml"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/901760c683dbaf4c1581bf7216ca80756adcc581", "message": "SERVER-32298 Add a background system task to periodically copy remote statistics in evergreen.yml"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/e972d40e588e9d1b920a75086f0b36c603fbdd3d", "message": "SERVER-32299 Add disk statistics for remote EC2 instances"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d2eedbeeedb61753c17b6a87912e4b14e7611b95", "message": "SERVER-32203 Log the remote EC2 instance status when a failure to access it is detected in evergreen.yml"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/c0ebce4abf9b0cfd4271767fa062ea2d5b486554", "message": "SERVER-32110 Powercycle remote host not accessible in Evergreen timeout phase"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/742f8b8f770a317d01bf414a30ef51b79394a8a4", "message": "SERVER-32197 Remote host is missing the debug symbols for hang_analyzer in evergreen.yml"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/67e018f8de2b30ea3720686c7b81ffd715a7b258", "message": "SERVER-32285 dbtests suite runs no tests in resmoke.py"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "devkev": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/4e51bb975ba8b1d2e5faa396543f16eff2ecdee5", "message": "SERVER-32473 don't output an error on shell startup if no history file"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/8a9090c4c59a840639f37c509fd0f2c6af252117", "message": "SERVER-18138 catalog manager listing methods now return vectors"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56100944", "body": "1. Please fix the leading whitespace (spaces only, 4 per indent).\n2. Please move this to be immediately prior to where the zeroing starts.  Since the zeroing may take some time, it is important to provide feedback in the log prior to when it starts (ie. line 300).  There is no need to log when it finishes, since that's done anyway on line 433.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56100944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jbreams": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/3c71b635958e2e769c47fcabc714546917c34d10", "message": "SERVER-32034 Fix lint"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/d65dde869399fe13d440be986209517ceea9efa3", "message": "SERVER-32034 Pending threads shouldn't block starvation response in controller"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/87b39ba71f41b32fdc7ed2ba02cbcbba176075d7", "message": "SERVER-32352 Remove TransportLayerLegacy"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/3a16c3032d97117cda0ba4e4c75786d0c16807a5", "message": "SERVER-32426 TransportLayer should honor current setParameter values"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/a08d6998928720aeea25546dca785f242b6b102d", "message": "SERVER-32246 loosen permission on pid file"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mvankeulen94": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/2158ea8d6c84c9a68b50f76c9dd23b8a193b65f8", "message": "SERVER-32255 Ensure UUIDs exist for local collections on ShardServers"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/6a6d6b898089a170e411cf8a899f99208e7ab7e8", "message": "SERVER-31553 Remove outdated upgrade/downgrade test"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/53b6a09afba110cd413a135fcafe4071684b44b3", "message": "SERVER-31983 Create setFeatureCompatibilityVersion ActionType"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/ef6471345974d763d82b7aa2020f80eb59903b6f", "message": "SERVER-32128 Disable upgrade/downgrade testing in set_schema_version.js"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IanWhalen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/06d9a28bf93fb89b916c01ec1961d61cd5aa63a9", "message": "SERVER-32036 Remove _WT from all test task names except Jepsen"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/2430952", "body": "Typo in commit message - this actually fixes SERVER-8115.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/2430952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "review_comments": []}, "mbroadst": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/4108212bffdad96a5be22e2fc71038f48d8740a4", "message": "SERVER-32477 Gracefully shutdown sockets in ASIOSession\n\nWe were depending on the dtor for the basic_stream_socket to\ngracefully shutdown the socket on destruction, however this is\nbroken on OSX. Instead we need to explicitly shutdown the socket\n(the asio docs indicate that this is the most \"portable\" solution)."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tessavitabile": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/cd3c4280d4b083591198960ab43201c4d1431a46", "message": "SERVER-32310 Log a warning that the geoNear command is deprecated"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/af1bfd9f4d47672e541c5c60e68c68e436a79fbf", "message": "SERVER-31854 After the first drop, assertSchemaMatch() should assert that subsequent drops succeed"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/7dc686af406a9651c9555981ac67fb7f487e4ae5", "message": "SERVER-32492 idhack_sharded.js should use _waitForDelete:true in moveChunk"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/f98cb60d80f281d3065b0282ed6f25b5f419ae1b", "message": "SERVER-1981 Support near and nearSphere predicates on sharded collections"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/b1ae796faf5f262cd658f59a59d18f8c3eb0d4ee", "message": "SERVER-32353 Do not use neq to compare documents in update_affects_indexes.js"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stbrody": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/44447251fb335c114847a42154da0106cf8b4033", "message": "SERVER-29602 Add invariant that delete documentKey is non-empty, remove aboutToDeleteCalled bool"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6250350", "body": "Merged at https://github.com/mongodb/mongo/commit/629e6583fa56b5689fb80192896a050e85f3edba\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6250350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6250371", "body": "Updated version: https://github.com/mongodb/mongo/pull/236\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6250371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6280667", "body": "Merged at https://github.com/mongodb/mongo/commit/058b56c391c8b5892b9d8d366a9cf70863ea6a36\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6280667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/551863", "body": "I agree!  Just added https://github.com/mongodb/mongo/commit/1450e4ccdf72c77f9e5b8d037bcaff732d863ab3 to remove the non-determinism.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/551863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/2062229", "body": "Commit message should say _recvChunkCommit, not _recvChunkVersion\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/2062229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "ksuarz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/79352e71b697cb8c126510095bba7fd816128701", "message": "SERVER-32297, SERVER-32430 fix $sort in-memory sort and $sortKey serialization"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/47247293f18ea581954f6fcf4c0018b7828e3c3a", "message": "SERVER-31785 use multiple shards in aggregation_sharded_collections_passthrough"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/fe40a36217a2b4e4064165340d44cc1442d84e13", "message": "SERVER-32204 refactor bulk_legacy_enforce_gle.js"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "samantharitter": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/9e7df79d3907a743e29b7333de6ea08a01f33a05", "message": "SERVER-28822 Add new dbclient connection pool options"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sindbach": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/b3033d477f2356d17a0e5263775a0e2dfce75ede", "message": "SERVER-32415 Fix typo on MongoDB in Compass Installer\n\nCloses #1194\n\nSigned-off-by: Mark Benvenuto <mark.benvenuto@mongodb.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dgottlieb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/0b7976614d028105a203147fe571b3c264e920b3", "message": "SERVER-32397: Notify waiters on any movement of the oplog read timestamp."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gormanb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/6cbca62471218a08a4fdf8785bd1e1e38cf9bde3", "message": "SERVER-32282 $textScore metadata is not removed in cases where RouterStagePipeline is optimized out on mongoS"}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/9611f1368349db2fcbe7a7090d7bb7afe0f789af", "message": "SERVER-31689 Allow $facet to merge on mongoS if all its pipelines are eligible"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jseyster": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/3b116b0dc632a0533c8b76ddbf02186e4bf6774e", "message": "SERVER-30854 Remove ModifierInterface update code.\n\nWe left the deleted update system in 3.6 to support upgrades from 3.4,\nbut newer versions will always use the new UpdateNode update system.\n\nFun fact: this commit deletes more lines than were inserted by the\nprevious 100 commits."}, {"url": "https://api.github.com/repos/mongodb/mongo/commits/4d53b4beb00eaa341bf2a134fbc9366d3333e830", "message": "SERVER-32109 RenameNode no longer checks for no-op set.\n\nBefore this change, a {$rename: {from: \"to\"}} would check to see if\nthe \"from\" and \"to\" values were identical, allowing it to elide the\n{$set: {to: <value-of-from-field>}} portion of the oplog update\nentry. The equality check we used was not exact, however, resulting in\npotentially incorrect results from $rename in edge cases.\n\nWe could use a precise equality check, but it's more expensive. More\nlikely than not, it's cheaper to just include the $set in the oplog\nupdate for every $rename, so that's what we do now."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chasinglogic": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/e6f46b03cec9d5b5cd4487761a2c2c2136567473", "message": "SERVER-32286 Remove Type=forking from Debian SystemD service files"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Schubes": {"issues": [], "commits": [{"url": "https://api.github.com/repos/mongodb/mongo/commits/fd909c487afb18b5a712e80920ef2f02699f36e6", "message": "Import tools: 49d61f9a366a073a3d5a48c69bd1523f0b24f4ee from branch master\n\nref: 2b10d8492e..49d61f9a36\nfor: 3.7.1\n\nTOOLS-1894    Remove sni.js test\nTOOLS-1903    Clean up initial UUID support code"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/24151592", "body": "Yes that's correct by default the mongod will use \"/data/db\". However, if MongoDB is installed using a package manager, it may come with a config, like this one, that specifies a different data directory. Please feel free to open a [docs ticket](https://jira.mongodb.org/projects/DOCS/summary) or use the feedback bar (bottom right) to help us clarify our documentation around this behavior.", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/24151592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "COLLABORATOR"}], "review_comments": []}, "JunHe77": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1202", "title": "SERVER-32576: Merge ARM64 support to use 64-bit optimized code path", "body": "Change-Id: Icd2e0f9378952bbd811b54fe60a7f3895c960e92\r\nSigned-off-by: Jun He <jun.he@arm.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kakts": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1198", "title": "[SERVER-32813] Fix typos in config_server_test_fixture.cpp and dpml_error_codes.c", "body": "## Summary\r\nI found some typos in files as below.\r\n\r\n```\r\nsrc/mongo/s/config_server_test_fixture.cpp\r\nsrc/third_party/IntelRDFPMathLib20U1/LIBRARY/float128/dpml_error_codes.c\r\n```\r\n\r\nreponse  \u2192 response\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhihuiFan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1197", "title": "SERVER-4785 maintain slowms at database level", "body": "See issue at https://jira.mongodb.org/browse/SERVER-4785 and https://jira.mongodb.org/browse/SERVER-18946 \r\n\r\n\r\nHere is the test result.\r\n\r\n\r\nzhifan@zhifan-dev16:~/github/mongo$ ./mongo\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 }\r\n> db.setProfilingLevel(0, 1)\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1, \"ok\" : 1 }\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 1, \"sampleRate\" : 1 }\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n> use test2\r\nswitched to db test2\r\n> db.getProfilingStatus()\r\n{ \"was\" : 0, \"slowms\" : 100, \"sampleRate\" : 1 } . -- test 2: still 100\r\n> for(var i =0; i<10000; i++) {db.test.save({'i': i})}\r\nWriteResult({ \"nInserted\" : 1 })\r\n\r\n\r\nas a result:  we capture the slow queries from test database but not for test2 database.\r\n\r\n`\r\n2017-12-26T13:38:32.678+0800 I COMMAND  [conn1] command test.test appName: \"MongoDB Shell\" command: insert { insert: \"test\", ordered: true, $db: \"test\" } ninserted:1 keysInserted:1 numYields:0 reslen:29 locks:{ Global: { acquireCount: { r: 3, w: 1 } }, Database: { acquireCount: { w: 1, R: 1 } }, Collection: { acquireCount: { w: 1 } } } protocol:op_msg 3ms\r\n\r\n`\r\n\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmanojlovic": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1195", "title": "initial scons 3.0.1 and python3 build support", "body": "This PR allows building mongo with use of latest (3.0.1) scons which now uses python3 by default.\r\nThere are still a lot of rough edges but on the end it allows building binary mongod\r\n\r\npython version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> python3 --version\r\nPython 3.6.3\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nscons version:\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -v\r\nSCons by Steven Knight et al.:\r\n        script: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine: v3.0.1.74b2c53bc42290e911b334a6b44f187da698a668, 2017/11/14 13:16:53, by bdbaddog on hpmicrodog\r\n        engine path: ['/usr/lib/scons-3.0.1/SCons']\r\nCopyright (c) 2001 - 2017 The SCons Foundation\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched>\r\n```\r\nand finally running scons on my machine\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> scons -j 8 MONGO_VERSION=3.6.0  --disable-warnings-as-errors  --ssl\r\nscons: Reading SConscript files ...\r\nMkdir(\"build/scons\")\r\nscons version: 3.0.1\r\npython version: 3 6 3 final 0\r\nChecking whether the C compiler works... yes\r\nChecking whether the C++ compiler works... yes\r\n...\r\n...\r\n...\r\nranlib build/blah/mongo/db/query/libquery_common.a\r\nGenerating library build/blah/mongo/db/libmongod_options.a\r\nranlib build/blah/mongo/db/libmongod_options.a\r\nLinking build/blah/mongo/mongod\r\nInstall file: \"build/blah/mongo/mongod\" as \"mongod\"\r\nscons: done building targets.\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> \r\n```\r\nand of course running built binary\r\n```\r\nabuild@pc:~/rpmbuild/BUILD/mongo-patched> ./mongod --dbpath /tmp/ --bind_ip 127.0.0.1\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] MongoDB starting : pid=2937 port=27017 dbpath=/tmp/ 64-bit host=pc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] db version v3.6.0\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] git version: 9038d0a67ee578aa68ef8482b1fc98750d1007a6\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.1.0g-fips  2 Nov 2017\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] allocator: tcmalloc\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] modules: none\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] build environment:\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     distarch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten]     target_arch: x86_64\r\n2017-12-22T18:52:02.566+0000 I CONTROL  [initandlisten] options: { net: { bindIp: \"127.0.0.1\" }, storage: { dbPath: \"/tmp/\" } }\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] Detected data files in /tmp/ created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.\r\n2017-12-22T18:52:02.566+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=15542M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),\r\n2017-12-22T18:52:02.637+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:637511][2937:0x7f87663729c0], txn-recover: Main recovery loop: starting at 6/4736\r\n2017-12-22T18:52:02.679+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:679111][2937:0x7f87663729c0], txn-recover: Recovering log 6 through 7\r\n2017-12-22T18:52:02.706+0000 I STORAGE  [initandlisten] WiredTiger message [1513968722:706386][2937:0x7f87663729c0], txn-recover: Recovering log 7 through 7\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is 'always'.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] **        We suggest setting it to 'never'\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] ** WARNING: soft rlimits too low. rlimits set to 4096 processes, 64000 files. Number of processes should be at least 32000 : 0.5 times number of files.\r\n2017-12-22T18:52:02.730+0000 I CONTROL  [initandlisten] \r\n2017-12-22T18:52:02.736+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/tmp/diagnostic.data'\r\n2017-12-22T18:52:02.737+0000 I NETWORK  [initandlisten] waiting for connections on port 27017\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-masataka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1191", "title": "The GCC version should be updated in SConstruct", "body": "In ``docs/building.md`` , It require GCC version 5.4.0 or newer, but ``SConstruct`` require 5.3.0 or newer.\r\nIs it mistake? ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "judu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1186", "title": "Fix build.", "body": "Without these using `std::string`, mongodb does not build here.\r\n\r\nI'm using gcc 6.4.0.\r\n\r\nPlease ask if you need more information about my build :)", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zydcom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1171", "title": "SERVER-30636\uff1afix range deleter crash", "body": "This patch can be also used for v3.2 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ryankall": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1169", "title": "Server 25311", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/1140", "title": "Verbosity bug", "body": "now the Explain command will not accept unknown command like verbos: 'queryPlanner'", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorien": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1162", "title": "Fix error in command example in mongorestore.1 man", "body": "The trailing slash argument is missing in mongorestore command example in debian mans.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SunguckLee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1151", "title": "Support prefix match for full-text search", "body": "Add range search feature on full text search (original version has only exact match)\r\n\r\nFor CJK language, mongodb does not support stemmer for full text search.\r\nAlso not easy to implement stemmer for those language (Especially Korean).\r\nSo we usually use N-gram parser for full text search not supported mongodb yet.\r\n\r\nFortunately in Korean, we use space character between words and Korean(and also Japanese) use only suffix not prefix. So we can use mongodb full text search if mongodb support prefix match in fulltext. So I propose this simple feature.\r\n\r\n>> Match range of original fulltext search\r\n    * '\ud55c\uae00' <= match_range <= '\ud55c\uae00'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range <= '\ud14c\uc2a4\ud2b8'\r\n    * '\uc774\uc131' <= match_range <= '\uc774\uc131'\r\n    * '\ud55c' <= match_range <= '\ud55c'\r\n\r\n>> Match range of patched fulltext search\r\n    * '\ud55c\uae00' <= match_range < '\ud55c\uae01'\r\n    * '\ud14c\uc2a4\ud2b8' <= match_range < '\ud14c\uc2a4\ud2b9'\r\n    * '\uc774\uc131' <= match_range < '\uc774\uc132'\r\n    * '\ud55c' <= match_range < '\ud55d'\r\n\r\nI hope user can control this search mode (exact or prefix match) by query parameter or internal parameter.\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sam-pf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1149", "title": "change log message for CRL loading", "body": "The log message from _setupCRL was misleading.  It is not the number of revoked certificates that X509_load_crl_file returns.  It is the number of CRLs (X509_CRL structures) that it successfully loads that it returns.\r\n\r\nhttps://github.com/openssl/openssl/blob/c0452248ea1a59a41023a4765ef7d9825e80a62b/crypto/x509/by_file.c\r\n\r\nhttp://www.umich.edu/~x509/ssleay/x509_crls.html\r\n  ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nleite": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1136", "title": "SERVER-1889 internal replication nic", "body": "- support for internal replication nic", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kolisergej": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1128", "title": "[SERVER-8958] Replace strtod/strtol/atoi/atol/etc calls with parseNumberFromString<T>", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZharkovIlia": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1122", "title": "General Improvements v2", "body": "Elimination of some redundancy. Some function arguments are passed by reference. Few bugs are fixed.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thesebas": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1121", "title": "Fix for negative Date timezone offsets ", "body": "When uncommented this `// print a non-UTC time` block and changed `var UTC = '';` got invalid timezone offsets like: `ISODate(\"2016-11-14T00:00:00+-100\")`. This makes Date be displayed as `ISODate(\"2016-11-14T00:00:00+0100\")`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danharel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1093", "title": "SERVER-24519 Added framework for micro benchmark tools", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1061", "title": "[WIP] [3.x] Alpine linux compatibility", "body": "Same as #1060 but for 3.x version.\n- [x] alpine-release on processinfo\n- [x] Fix `'ELFCLASS__ELF_NATIVE_CLASS' was not declared in this scope`\n- [x] Fix `gnu_get_libc_version` usage that does not exist on Musl\n- [x] Fix undefined `mallinfo` function\n- [x] error_code.ipp:110:22: error: could not convert 'strerror_r(value, ((char*)(& buf)), sizeof (buf))' from 'int' to 'std::__cxx11::string {aka std::__cxx11::basic_string<char>}\n  - https://github.com/chriskohlhoff/asio/pull/95\n- [ ] `third_party/gperftools-2.2`: `error: '__off64_t' has not been declared`\n  - https://github.com/gperftools/gperftools/issues/693\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50288212", "body": "TODO: Restore it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50288212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "salessandri": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/1027", "title": "SERVER-8839 TimerStats and TimerHolder should work with microseconds.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/47607378", "body": "Got it. Fixed the js test, the implementation and added a unit test just in case.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/47607378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/47607389", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/47607389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/47607515", "body": "I replaced those tests, they were over-complex for what they were testing.\n\nI also added comments to the tests to clarify what they are testing. If it's too verbose, let me know and I'll remove them.\n\nI changed the `arrBuilder` variable name, too.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/47607515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50358311", "body": "Between which lines do you want the blank line to be?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50358311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50368794", "body": "Yes. One thing though, the last line should be:\n\n``` c++\nvpOperand.insert(vpOperand.begin() + i + 1, nary->vpOperand.begin() + 1, nary->vpOperand.end());\n```\n\nOtherwise you would get the order of the inner operands altered.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50368794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50368808", "body": "Between which lines do you want the blank line to be?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/50368808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/51380401", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/51380401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "e-siedler": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/275", "title": "SERVER-2541 Windows performance counters implemented", "body": "Fully functional windows performance counters imlpemented as a mongod.exe Module.\n\nSee README. See jira SERVER-2541 for some additional notes.\n- No Visual Studio project file have been updated. (I can't do that with VS Express).\n- I didn't make use of this new \"buildscripts/moduleconfig.py\" infrastructure mostly because of my incompetence: new to scons, new to python, didn't like both. 8-)\n- There is a new artifact that needs to be distributed along with mongod.exe: mongod.man. I didn't look into that (packaging).\n\nThanks\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bgianfo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190", "body": "Not sure what the deal is, but I made a last minute change before I committed, breaking this patch. \nhttp://github.com/bgianfo/mongo/commit/dc2c046c95c2b9ae8d2ec9f0d26987951437d502#diff-0\n\nPulling this commit also, you have the complete working package. :)\n\nI would add it to the pull request, but github seems to have made that impossible? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/501190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405", "body": "When will this get integrated? Any feedback?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/597405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "erh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702", "body": "We're going to start including a minimal set of boost in the source tree to avoid conflicts and too much branching in the code.\nThat will be in the 2.0 cycle and should be boost 1.45, so not sure we want to do this right now, especially right before 1.8.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/662702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077", "body": "Couple of notes: \n- we're not going to change the type from number to string\n- names should be consistent between dbstats/collstats\n- keeping commit log clean is important\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094", "body": "dbstats already has a named value for this option, so you should use the same one.\n\nre: the commit stream, each commit should be a logical unit, but we also want to keep the number reasonable.  There are 9 listed above (though i guess really only 7)\nFor example, if you change a command, the change to the shell should be in the same commit.\n\nWe're in lockdown for 1.8, so will be a while before we would merge this in, and not sure this is exactly where we'll want to go with it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853", "body": "I'm seeing about a 10% improvement.\nThe problem is that Array doesn't currently require the elements to be in order.\nIn fact some implementations have it like this\n{ \"0\" : 1 , \"1\" : 1 , \"10\" : 10 , \"2\" : 2 , ... }\n So this patch will break some clients.\nThere is a more complex patch you could do which verifies the order while iterating.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895", "body": "No, the spec doesn't say it has to be in order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903", "body": "I did this:\nhttps://github.com/mongodb/mongo/commit/cd834438e55086442b264dfc6cc9425d8a34f0bd\n\nWhich is about 80% of the improvement\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311", "body": "Can you break these into different parts?\nSome look ok, others not so sure about (FuncMap for example)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1086311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470", "body": "Right, but there seem to be others that are unrelated.\nWould just be better if we can make each logical change separate.\n\nOn Wed, May 4, 2011 at 10:55 PM, testn\nreply@reply.github.com\nwrote:\n\n> funcMap has to be there to help perform function lookup\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/35#issuecomment-1103444\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158", "body": "There are a few issues that I see at first glance.\n\n1) why did you remove the sparse check\n2) your'e not checking the type of \"filter\" correctly\n3) _matcher leaks - should be a scoped_ptr\n4) i don't think the queryoptimizer change is correct\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1272158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432", "body": "Fixed using the helper.\nThanks for pointing out\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1430432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1662723", "body": "Make sure to use spaces and not tabs.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1662723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2123912", "body": "Would be good to write a test before we merge this in.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2123912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2124810", "body": "Also - I don't think this works with multiple machines or --discover\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2124810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2127831", "body": "Yes - look at jstests/tool/\n\nOn Sun, Sep 18, 2011 at 11:52 AM, Lu Guanqun\nreply@reply.github.com\nwrote:\n\n> @erh, how to add some script like test cases? For this issue, it's more easy to write several lines of script to check whether this authentication is OK by running the real mongostat command. However, this script like test framework is not there, isn't it?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/88#issuecomment-2127213\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2127831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2287780", "body": "This was fixed slightly differently.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2287780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2287798", "body": "This has to do with boost versions, not windows.\nGoing to be forcing a certain version of boost soon.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2287798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2342987", "body": "102 is a bit better\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2342987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2355806", "body": "What versions of os x were you able to test this on?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2355806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2355871", "body": "Don't think this is something we want to do.\nToo high a risk of having bizarre errors.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2355871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2360599", "body": "I could image OID( \"....\" )\nBut trying to keep magic to a minimum.\n\nOn Tue, Oct 11, 2011 at 3:09 AM, Karl Seguin\nreply@reply.github.com\nwrote:\n\n> Would you support having an alias for ObjectId...ala \u00a0$(\"asdsdsadsa\") ?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/106#issuecomment-2356048\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2360599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2414231", "body": "Need to change this a bit - will be in regression system soon\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2414231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2414310", "body": "I think this might be nicer not linking to the other operators, but directly to the real methods (woCompare, equal)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2414310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2586668", "body": "This was done when 2.0.0 was released\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2586668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2599692", "body": "Merged https://github.com/mongodb/mongo/commit/a377165b1795652b122a85943d8f1b5ba288fe24\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2599692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3102260", "body": "This is being done in a different way.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3102260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3102266", "body": "obj[\"name\"].Double() is the canonical method\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3102266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3102273", "body": "This is released in 2.0\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3102273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3975246", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3975246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4332970", "body": "Looks good\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4332970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681493", "body": "I'm not sure $slice/$trim makes 991 go away.\nWhat we really want to add is a $pushToFixedSize or something with those exact semantics so things can be done in a single update so the size is never above X.\nWith this, it would bounce between X and X + Y where Y could be as high as the number of threads updating the array.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681711", "body": "Relaxing the rule that two modifiers can't touch the same field is not something we want to do right now.\nIt opens up a whole bunch of potential ordering semantic issues, etc... \nMaybe in the future - but definitely not right now.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681955", "body": "Right - I saw, but then its a special case.\nWe'd really want things to be consistent in this regards.\n\ni.e. there isn't a theoretical reasons why you can't do $addToSet and $pull on the same element, but the ordering is very important.\n\nFor $trim $push order is also important as it determines if you get X or X + 1 \n\nSo you either have to say $tirm always is after $push, which may or may not be what people want.\nOr say the order in the doc matters, which is doesn't today.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681992", "body": "$trim does make sense independently anyway, but that should be a different jira.\nIt should also support trimming from front or back of the array.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4683983", "body": "The feature makes sense, we just need to make sure the syntax/semantics are correct.\n\nIf you look at https://jira.mongodb.org/browse/SERVER-991 there is a version/api that fits in correctly with the rest of the api and that's the direction we're going to go.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4683983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/100728", "body": "vs2008 vs vs2010 issue\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980", "body": "don't comment out the lines in the method, just comment out doTest() etc...\nmakes it easer to test, etc...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/116980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394", "body": "The one you mentioned should be that way i believe.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/432053", "body": "The formatting on this is off.\nAlso, this will be kind of slow since its going to cause an error every time.\nWe need to check and see if there actually is a prompt() function.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/432053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/656945", "body": "Would the try/catch be better in _addWriteBack?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/656945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/672267", "body": "please use real names.\nClient::GodScope godScope;\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/672267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/672268", "body": "see coding style\n\nif () {\n}\nelse {\n}\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/672268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/893976", "body": "we need to be able to run single files directly - so we need load.js in there\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/893976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/958748", "body": "Would be great to break this up a bit.\nToo late now - but there is some refactoring and some real changes.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/958748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/967679", "body": "would be nice to break these up...\nespecially since the bson one is potentially large\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/967679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1098200", "body": "Right. That doesn't work becUse other things rely on lock semantics. \n\nSeems to be working fine now though.  \n\nOn Mar 17, 2012, at 12:57 PM, Dwight Merrimanreply@reply.github.com wrote:\n\n> not sure exactly how this has evolved but originally the idea was that with ThreadSpanningOp when you use it, you use it only and it wasn't designed to interoperate with the other Lock:: classes and stuff.  thus it didn't set threadstate for example.  it is fine if it is different but does this now imply i can use ThreadSpanningOp interoperably with all the other Lock:: classes?  i imagine it won't play nicely with them.  will read more later.\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/commit/c949cad1fa6e4cb26693748b1751f4fd2e6113b8#commitcomment-1098166\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1098200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1170324", "body": "This is semantically different then what was there before and not nearly as powerful.\nThe old way with -v you can turn this on at start or runtime.\n\nPlease change this back and the other one below.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1170324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1170325", "body": "see above\n\ncould make LOG if performance was the concern\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1170325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1174824", "body": "this should just be\nsleepsecs( runner->config.seconds )\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1174824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1256157", "body": "did later\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1256157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1318826", "body": "Its hard to compare directly as the whole system is so different.\n\nOn Fri, May 11, 2012 at 1:42 AM, Sid Upadhyay\nreply@reply.github.com\nwrote:\n\n> @erh What do you think of the redis implementation of TTL? http://redis.io/commands/expire\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318817\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1318826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1319884", "body": "From the docs, redis seems to do it both passively and actively.\n\nOn Fri, May 11, 2012 at 2:16 AM, Sid Upadhyay\nreply@reply.github.com\nwrote:\n\n> Oh ya for sure. Though I'm wondering why you chose an active method for\n> expiring the keys, as opposed to the more passive method used in redis.\n> \n> On Fri, May 11, 2012 at 12:44 AM, Eliot <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Its hard to compare directly as the whole system is so different.\n> > \n> > On Fri, May 11, 2012 at 1:42 AM, Sid Upadhyay\n> > reply@reply.github.com\n> > wrote:\n> > \n> > > @erh What do you think of the redis implementation of TTL?\n> > > http://redis.io/commands/expire\n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > \n> > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318817\n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > \n> > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318826\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318923\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1319884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1321501", "body": "Would be great if you could run those tests and share results :)\n\nOn Fri, May 11, 2012 at 1:43 PM, Sid Upadhyay\nreply@reply.github.com\nwrote:\n\n> Ya, which is a pretty interesting choice with respect to performance\n> tradeoffs. I'll have to build this version of mongo and play around with it\n> to see what real performance tradeoffs there could be. Though I'm sure they\n> pale in comparison to the value of TTL.\n> \n> On Fri, May 11, 2012 at 6:16 AM, Eliot <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > From the docs, redis seems to do it both passively and actively.\n> > \n> > On Fri, May 11, 2012 at 2:16 AM, Sid Upadhyay\n> > reply@reply.github.com\n> > wrote:\n> > \n> > > Oh ya for sure. Though I'm wondering why you chose an active method for\n> > > expiring the keys, as opposed to the more passive method used in redis.\n> > > \n> > > On Fri, May 11, 2012 at 12:44 AM, Eliot <\n> > > reply@reply.github.com\n> > > \n> > > > wrote:\n> > > > \n> > > > Its hard to compare directly as the whole system is so different.\n> > > > \n> > > > On Fri, May 11, 2012 at 1:42 AM, Sid Upadhyay\n> > > > reply@reply.github.com\n> > > > wrote:\n> > > > \n> > > > > @erh What do you think of the redis implementation of TTL?\n> > > > > http://redis.io/commands/expire\n> > > > > ---\n> > > > > \n> > > > > Reply to this email directly or view it on GitHub:\n> > > > \n> > > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318817\n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > \n> > > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318826\n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > \n> > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318923\n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > \n> > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1319884\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1321463\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1321501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1410087", "body": "This was like this on purpose as their are different implementations.\nPlease revert.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1410087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1670338", "body": "This is going to cause problems with other code in the server that assumes a certain format.\nGoing to revert this part.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1670338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120", "body": "Is there a reason you put slaveOk in the middle rather than the end so we can preserve backwards compatibility?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4141081", "body": "We have to support version 2.6.18 and up for sure.\nWe may even go back further.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4141081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19423062", "body": "We definitely can't copy ns into this for perf reasons.\nAny other way to do this?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19423062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19767497", "body": "I'm not sure this is safe as not everything is constructued\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19767497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19767640", "body": "why is this needed vs. destructor?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19767640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22975053", "body": "We still support RHEL 5, which is still at 2.6.18, but with a lot of\npatches.\n\nOn Wed, Jan 14, 2015 at 4:55 PM, Ben McCann notifications@github.com\nwrote:\n\n> In src/mongo/util/net/listen.cpp\n> https://github.com/mongodb/mongo/pull/416#discussion-diff-22973616:\n> \n> > @@ -51,6 +52,23 @@\n> > \n> >  #endif\n> > \n> > +// Make sure our Linux has the timer we need\n> > +#if defined(**linux**)\n> > -    #ifndef CLOCK_MONOTONIC_COARSE\n> > -        #error \"Your ancient kernel doesn't support CLOCK_MONOTONIC_COARSE: upgrade to v2.6.31 or newer\"\n> \n> @erh https://github.com/erh what kernel versions need to be supported\n> today? I'd like to try to resurrect this PR, but need to know what to\n> support\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mongodb/mongo/pull/416/files#r22973616.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22975053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "adrien-mogenet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088", "body": "Ok Erh !\n- I had a doubt about keeping the types ; I will keep numbers when displaying raw values as currently\n- What do you mean about \"consistent names between dbstats/collstats\" ? I didn't change anything... ( I think )\n- Which rule did I not follow about commit log messages ? According to the doc (http://www.mongodb.org/display/DOCS/Git+Commit+Rules) : I have to put [SERVER-XXX] on every commit ?\n\nThanks,\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/724088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/250853", "body": "There is no way to make it cleaner using boost::filesystem ?\nhttp://www.boost.org/doc/libs/1_45_0/libs/filesystem/v2/doc/index.htm\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/250853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318", "body": "Why not checking that scale is a multiple of 1024 ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "testn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681", "body": "With simple M/R such as collection count/max/min, the execution time can be cut in half\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879", "body": "But this method is the conversion from BSONObj to jsval. Shouldn't BSONObj with Array type be in order according to the specification?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912", "body": "That would work. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/742912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444", "body": "funcMap has to be there to help perform function lookup\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889", "body": "okay. will rebranch it again and put the link\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1103889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zippy1981": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400", "body": "WOO-HOO!!!!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/787400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/89046", "body": "Good to see I'm not the only one improving error messages! \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/89046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091", "body": "Is it necessarily a good idea to have class diagrams in the visual studio projects? These projects will always be an afterthought (and rightly so) to the scons project.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083", "body": "Confirmed that actually worked.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475", "body": "stoll() doesn't exist in Visual Studio 2008. I'm installing the windows 7 SDK to see if that will rectify it, but perhaps even being dirty and calling atol() would be better than causing build problems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552", "body": "The older, more conservative function is _strtoi64()\nFix in http://github.com/zippy1981/mongo/commit/f7b7c07e2a72011b8dbd72d10dcbaa22d8e5fb54\nStackoverflow discussion is in http://stackoverflow.com/questions/3106026/is-there-a-stoll-stroll-string-to-long-long-alternative-in-visual-studio-20/3106060#3106060\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/98552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757", "body": "Test code I used for this.:\n\n<pre>\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string>\n\nnamespace mongo {\n\n    inline void uasserted(int msgid , char* msg) { printf(\"Msg: %s\", msg); exit(4); }\n    /* \"user assert\".  if asserts, user did something wrong, not our code */\n    #define MONGO_uassert(msgid, msg, expr) (void)( (!!(expr)) || (mongo::uasserted(msgid, msg), 0) )\n    #define uassert MONGO_uassert\n\n    inline long long parseLL( const char *n );\n\n\n    // expect that n contains a base ten number and nothing else after it\n    // NOTE win version hasn't been tested directly\n    inline long long parseLL( const char *n ) {\n        long long ret;\n        uassert( 13307, \"cannot convert empty string to long long\", *n != 0 );\n#if !defined(_WIN32)\n        char *endPtr = 0;\n        errno = 0;\n        ret = strtoll( n, &endPtr, 10 );\n        uassert( 13305, \"could not convert string to long long\", *endPtr == 0 && errno == 0 );\n#else\n#if _MSC_VER>=1600\n        size_t endLen = 0;\n        try {\n            ret = std::stoll( n, &endLen, 10 );\n        } catch ( ... ) {\n            endLen = 0;\n        }\n        uassert( 13306, \"could not convert string to long long\", endLen != 0 && n[ endLen ] == 0 );\n#else // stoll() wasn't introduced into VS 2010.\n        char* endPtr = (char *)&n[strlen(n) - 1];\n        try {\n            ret = _strtoi64( n, &endPtr, 10 );\n        } catch ( ... ) {\n            endPtr = 0;\n        }\n        uassert( 13310, \"could not convert string to long long\", *endPtr == 0 );\n#endif // _MSC_VER >= 16\n#endif // !defined(_WIN32)\n        return ret;\n    }\n\n}\n\nvoid main () {\n    //printf(\"_MSC_VER: %d\\n\", _MSC_VER);\n\n    char szNumber[] = \"999999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumber, mongo::parseLL(szNumber));\n    \n    char szNumberWhitespace[] = \"   999999999   999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberWhitespace, mongo::parseLL(szNumberWhitespace));\n    \n    char szNumberBad[] = \"99r9dd999999\";\n    printf(\"number '%s': %d\\n\\n\", szNumberBad, mongo::parseLL(szNumberBad));\n}\n</pre>\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771", "body": "Dwight,\n\nShouldn't we also check the error cases?\n\nI'll confess I'm not running the unit tests on my machine. I'll start doing that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400", "body": "The UTF-8 BOM, signifying nothing, and annoying the hell out of developers and users.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595", "body": "Was the near/far thing a 64 bit thing? I though the near/far dated back to win16 programming?\n\nRegardless, it compiles.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/100595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765", "body": "Wouldn't \"-o -\" be more inline with unix convention than \"-o stdout\"? Or is the problem boost parsing? \n\nThen again, part of me thinks default mongodump behavior should be to stdout, and there shoulld be a new switch for current default behavior.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/124765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633", "body": "Double build break, double my bad. I'll have to start building on ubuntu to check these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/132633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "s4y": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296", "body": "I just changed the contents of this pull request slightly. Somehow managed to fudge up a one-line fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/875296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577", "body": "Looks like this was fixed in e27fa36b4c47b277b6e140f641a1187b712d99ca. Cool!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1505577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "radarek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120", "body": "Guys, what is the progress of that? MongoDB needs count + distinct :).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1021120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "defunctzombie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255", "body": "Is there a reason this isn't being accepted? It is low risk while adding a desired build functionality.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1106255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mattbillenstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540", "body": "Also added a commit to allow mongorestore to use \"-\" as stdin when given both --db and --collection\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1216540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JensRantil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211", "body": "The above commented small fixes were now added to this pull request. Feel free to include whenever you want to.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1248211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530", "body": "@erh\n\ni think the sparse assertion is useless because _nFields always > 0. and the sparse index can be created even if there's two or more fields.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1279530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mrohnstock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332", "body": "Since 2010 this don't get included to mongodb c++ driver. Is there any other way to get the double field from BSONObj?\n\nUsed: bsonobj.getField(\"whatever\").Double(), but will end with assereration error.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1386332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754", "body": "forget it... bsonobj.getField(\"whatever\").numberDouble() did the trick, got another mistake in code - just ignore my input.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1388754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lqez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175", "body": "Wow, I _really_ need these cool patches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1414175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "plaes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684", "body": "How about this?\n\n```\nelif os.sys.platform in ('linux2', 'linux3'):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Keruspe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586844", "body": "Oh yeah, probably looks better\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1586844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2146750", "body": "Yep. The fix wasn't there when I made it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2146750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kchodorow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1682410", "body": "Unfortunately, Antoine already implemented this one.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1682410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1683119", "body": "Pulled.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1683119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1683121", "body": "Pulled.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1683121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2200631", "body": "Merged in!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2200631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3068959", "body": "Thanks for the fix!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3068959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3234687", "body": "Thanks for the patch!  Could you please sign the contributor agreement so I can pull it in? http://www.10gen.com/contributor\n\n(and comment once you have)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3234687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3234845", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3234845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/335998", "body": "> Won't this mean you can step down a primary (and assuming a busy website\n> load) 10 seconds of data may be lost?\n\nAssuming a healthy network, no.  The other secondaries will replicate from\nthe primary until they are up-to-date, then elect a new primary.  The 10\nsecond rule is to make sure that there isn't a long lag while secondaries\nare catching up (and there is no primary).\n\nIf the network is unhealthy, then it is possible that data will be rolled\nback (not lost).  However, this was true before, is part of the design of\nreplica sets (see\nhttp://www.mongodb.org/display/DOCS/Replica+Set+Design+Concepts), and this\ncommit provides a stronger guarantee than before: only 10 seconds of data\nmay be rolled back.\n\nOn Sat, Apr 9, 2011 at 11:35 PM, Plasma <\nreply@reply.github.com>wrote:\n\n> Won't this mean you can step down a primary (and assuming a busy website\n> load) 10 seconds of data may be lost?\n> \n> I would have thought you would want to have no lag what so ever, otherwise\n> you need to specify force: true, instead of allowing 10 seconds of lag time?\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/mongodb/mongo/commit/6af8365495692b330f1ec8a93c5f172817f7a7c3#commitcomment-335801\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/336524", "body": "> If I am correct in reading your comment then it then sounds like its much\n> smarter than that; and instead the primary steps down, lets the secondaries\n> continue to sync from it to become up to date (so no data is lost, even if\n> the data was not yet synced from the primary), and then a new primary is\n> elected without data loss.\n> \n> The 10 second window is just a way to make sure this 'catch up' process\n> will happen fast (as not much data needs to be synced) as to not delay\n> election of a new primary.\n\nYes, exactly.\n\nThanks for clearing that up!\n\n\nNo problem!\n\nOn Sun, Apr 10, 2011 at 6:36 PM, Plasma <\nreply@reply.github.com>wrote:\n\n> Ah that makes a lot of sense now.\n> \n> I initially thought that the 10 seconds was a tolerance of how much data\n> you could lose if you wanted to switch primaries (that's what I get from\n> only glancing at the code!).\n> \n> I thought that a stepdown would immediately stop any secondaries from\n> syncing from it (and they could be at most 10 seconds out of date) and then\n> a new primary would be elected within a few seconds (at the cost of maybe\n> losing yet-to-be-synced data from the previous primary).\n> \n> If I am correct in reading your comment then it then sounds like its much\n> smarter than that; and instead the primary steps down, lets the secondaries\n> continue to sync from it to become up to date (so no data is lost, even if\n> the data was not yet synced from the primary), and then a new primary is\n> elected without data loss.\n> \n> The 10 second window is just a way to make sure this 'catch up' process\n> will happen fast (as not much data needs to be synced) as to not delay\n> election of a new primary.\n> \n> Thanks for clearing that up!\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/mongodb/mongo/commit/6af8365495692b330f1ec8a93c5f172817f7a7c3#commitcomment-336498\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/336524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/403993", "body": "Haha, you're welcome :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/403993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/652568", "body": "I'm not sure if this is necessary. Write locks are greedy so a secondary is more likely to starve reads than the sync thread.  To keep replication up-to-date, we really need a way of prioritizing the oplog-reading thread on the primary.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/652568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/3529733", "body": "Glad I could help, I guess!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/3529733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "cheshire": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1769641", "body": "Any progress? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/1769641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "guanqun": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2124994", "body": "@erh, I haven't  tried multiple machine yet, I'll get it a try and see what parts are left.\n\nand yes, a test case would be good to have.\n\nThanks for your comments.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2124994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2127202", "body": "I limit the authentication to normal cases only.\nthe issue with mongos is tracked here (https://jira.mongodb.org/browse/SERVER-3641)\n\nSo, either this can be merged as a temp fix, or let's wait the fix for 3641 which could have a general solution for this issue.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2127202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2127213", "body": "@erh, how to add some script like test cases? For this issue, it's more easy to write several lines of script to check whether this authentication is OK by running the real mongostat command. However, this script like test framework is not there, isn't it?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2127213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2127246", "body": "I find there's already another fix hanging around(https://github.com/dannenberg/mongo/commit/5da12d1d3f31d3d336b29bed56a65624f6051262), though it's a different fix.\nso close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2127246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2133297", "body": "Hi,\n\nI've added a test case for this issue.\n\nSo is it possible to merge this fix?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2133297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2145765", "body": "There's already a fix in mongodb repository:\nhttps://github.com/mongodb/mongo/commit/b1ec2058673f8ca582a490c2dd4a8405698221ae\nSo this pull request can be closed...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2145765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2205967", "body": "another fix by Mathias Stearn is committed, so close this one.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2205967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2337021", "body": "Deleting another iterAll() (and combining them) is a good sign in my point of view.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2337021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2360749", "body": "The warning was seen on Jan 27, 2011. And now it was fixed in Aug 4:\n\ncommit a4acc55a2ca0ffe366604f7cd30b2f67d4c9f3a0\nAuthor: Eliot Horowitz eliot@10gen.com\nDate:   Thu Aug 4 12:18:37 2011 -0400\n\n```\ncompile os x lion SERVER-3460\n```\n\nSo close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2360749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2360768", "body": "This was fixed in \n\ncommit d1e0c5a47a5564e05bb0a3d118214e19f9e44751\nAuthor: Eliot Horowitz eliot@10gen.com\nDate:   Tue Jan 25 10:53:42 2011 -0500\n\n```\nfix --fork and relative --dbpath SERVER-2345\n```\n\nSo close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2360768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2490153", "body": "I've changed the test case a little so that its parameters can be controlled more dynamically.\n\naccording to the result, on 32 bit system:\n\n```\nSat Oct 22 21:57:44 [testsuite] 32bit\nSat Oct 22 21:57:44 [testsuite] random seed: 1319291864\nSat Oct 22 21:57:44 [testsuite] going to run suite: memmove\n{'Memmove__CopyEachTime<50000000, 100, 50>': 3.906751}\n{'Memmove__MemmoveTime<50000000, 100, 50>': 1.465655}\n{'Memmove__CopyEachTime<50000000, 100, 0>': 8.012481}\n{'Memmove__MemmoveTime<50000000, 100, 0>': 2.606794}\n```\n\nthe v1 of _KeyNode is 16 bytes, so 100 nodes are about 1600 bytes, so about 1KB.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2490153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2490299", "body": "It's true that for a small number of nodes to copy, it's faster to do it by copying it one by one. here's the data:\n\n```\n{'Memmove__CopyEachTime<50000000, 100, 90>': 0.000001}\n{'Memmove__MemmoveTime<50000000, 100, 90>': 0.787993}\n{'Memmove__CopyEachTime<50000000, 100, 80>': 1.556564}\n{'Memmove__MemmoveTime<50000000, 100, 80>': 1.089263}\n```\n\nSo you can see that when there are only 10 nodes to copy, the former method is faster.\nHowever, when there are 20 nodes to copy, the latter is faster.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2490299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2504701", "body": "This is a simple fix, I don't bother to create a ticket on mongodb jira.\n\nHopefully, it can be merged quickly.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2504701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dannenberg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2200663", "body": "woo hoo!\n\nOn Sep 26, 2011, at 1:04 PM, Kristina wrote:\n\n> Merged in!\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/61#issuecomment-2200631\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2200663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6425624", "body": "I don't like the use of verify so I am changing it to an errmsg and returning false\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6425624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "rajeshkp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2236030", "body": "Ability to remove stale entries in fs.files would be very useful.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2236030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "MSchireson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2287675", "body": "SERVER-4014\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2287675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tadmarshall": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2321742", "body": "This change plus an addition that makes it work right is in https://github.com/mongodb/mongo/pull/102 .  If pull request 102 is accepted, then this one will become redundant.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2321742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2377545", "body": "No, I have not run the full smoke test suite.  Can you point me to information on how to do that?\n\nI'm not sure how pulling works, but each commit points to the individual change I made for that bug.  So when I click on the last commit in this list (45145ce SERVER-4007) it points to the SERVER-4007 branch in my fork with a single one line change.  Once I issue the pull request, it gets added to every other commit that had come before in my branch.  Maybe cherry-picking is required.  Some changes are truly standalone and I could reissue them from a different commit base so they don't drag my earlier commits into the pull request. Other changes won't merge automatically unless my commits are based on my earlier commits.\n\nThanks for looking at my code!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2377545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382708", "body": "I will reissue all my pull requests rebased so they don't get this piling-on effect.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382730", "body": "I will reissue all my pull requests rebased to try to prevent this piling-on effect.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382737", "body": "I will reissue all my pull requests rebased to try to prevent this piling-on effect.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382742", "body": "I will reissue all my pull requests rebased to try to prevent this piling-on effect.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382743", "body": "I will reissue all my pull requests rebased to try to prevent this piling-on effect.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382747", "body": "I will reissue all my pull requests rebased to try to prevent this piling-on effect.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382753", "body": "I will reissue all my pull requests rebased to try to prevent this piling-on effect.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2382753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390632", "body": "Because I changed my mind on part of this fix, and the fix is very small, I'm just going to close this and open a cleaner one.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390676", "body": "Replaced by https://github.com/mongodb/mongo/pull/119 .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390682", "body": "Replaced by https://github.com/mongodb/mongo/pull/119 .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390688", "body": "Replaced by https://github.com/mongodb/mongo/pull/114 .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390696", "body": "Replaced by https://github.com/mongodb/mongo/pull/115 .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390702", "body": "Replaced by https://github.com/mongodb/mongo/pull/117 .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2390702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2393572", "body": "Replaced by https://github.com/mongodb/mongo/pull/120 .  Edited for style.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2393572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2393783", "body": "Replaced by https://github.com/mongodb/mongo/pull/121 .  Edited for style.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2393783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2394141", "body": "Replaced by https://github.com/mongodb/mongo/pull/122 .  Edited for style.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2394141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2403239", "body": "This two-part set was replaced by:\nhttps://github.com/mongodb/mongo/pull/122 -- fix the undefined prompt\nhttps://github.com/mongodb/mongo/pull/123 -- make the command line behave like bash\nThe two replacements affect different files and can be pulled separately in either order.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2403239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2755518", "body": "I reworked the pull request slightly due to minor code conflicts from later changes and checked it in (commit 1194acb7fb8d4336f8bb9097f0c847b4b2b3338e).  So, I am closing this pull request.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2755518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2792518", "body": "This pull request was manually merged and committed as 05717037fb8cf7b8bf9f7e935d23e64f74a70311.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2792518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3037612", "body": "I hand-merged and tweaked this pull request, the feature is in with commit https://github.com/mongodb/mongo/commit/fa62a374a8818ec2c8981176c60c9cd0a01eb8c1 .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3037612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3517850", "body": "Hand-merged (due to four extra commits in pull request) as e75d664e24eb30aa48033a8a8afa4b387d02a331 .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3517850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4306207", "body": "This pull request has been overtaken by other changes to linenoise.cpp and is not usable at this point.  Most of the features added here are in the 2.1.0 mongo shell.  The only one that isn't in is the highlighting of mismatched parentheses.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4306207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/1102078", "body": "The ifdefs need to be changed to make this work on Windows XP.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1102078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291", "body": "This was part of my fixing the memory leak in the shell.  The problem was\nthat memory was allocated by strdup() and never freed.  Since strdup() calls\nmalloc(), I added matching free() calls.  This bit of code is on the #else\nside of an #ifdef USE_LINENOISE and so isn't in the current code, but if\nUSE_LINENOISE was turned off then the call to \"new char[1024]\" would end up\ngetting passed to free() and it seemed better to match malloc() with free()\ninstead of new with free().  Without changing the entire way this memory is\nallocated and freed (a bigger change) I can't just use unique_ptr in one\nspot.  strdup() calls malloc() and I can't switch to unique_ptr without\nreplacing the strdup() calls.  I was trying to make minimal changes to fix\nthe memory leak.\n\n-----Original Message-----\nFrom: Dwight Merriman\n[mailto:reply+p-165991-d7ea43fd753410cd3421867a9c1b3e0d018a6daf@reply.github\n.com] \nSent: Wednesday, October 12, 2011 1:50 AM\nTo: Tad Marshall\nSubject: Re: [mongo] SERVER-4043 -- fix tab completion in mid-code (#110)\n\n> @@ -313,7 +315,7 @@ char \\* shellReadline( const char \\* prompt , int\n> handlesigint = 0 ) {\n>      return ret;\n>  #else\n>      printf(\"%s\", prompt); cout.flush();\n> -    char \\* buf = new char[1024];\n\nuse unique_ptr here\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/110/files#r165991\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/166291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "karlseguin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2356048", "body": "Would you support having an alias for ObjectId...ala  $(\"asdsdsadsa\") ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2356048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dwight": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2376042", "body": "it's a lot here to digest -- recommend making the commits bite-size to ease the reading.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2376042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/90094", "body": "that's an accident.  will remove.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/90094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795", "body": "sure.\n\nUnitTest is something that runs at every server startup.  so they must very light and fast.\n\n\"real\" tests should go in dbtests / test binary (or jstests if applicable)\n\nrunning tests v good idea.  see \"smoke\" page on wiki\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/99795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437", "body": "right.  will take it out.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/417091", "body": "backport?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/417091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/452262", "body": "alloc deleted freelist allocation chaining\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/452262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/485722", "body": "that's harsh :-)\nwhat's wrong with it\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/485722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/560023", "body": "SERVER-3717 (typo)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/560023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/592457", "body": "thanks - just pushed an attempted fix.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/592457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/652488", "body": "i.e. use query option oplog replay which can efficiently find starting position in a very large oplog when querying GTE\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/652488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1098155", "body": "i guess that is a good addition anyway in the sense that lock+fsync is then better.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1098155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1098166", "body": "not sure exactly how this has evolved but originally the idea was that with ThreadSpanningOp when you use it, you use it only and it wasn't designed to interoperate with the other Lock:: classes and stuff.  thus it didn't set threadstate for example.  it is fine if it is different but does this now imply i can use ThreadSpanningOp interoperably with all the other Lock:: classes?  i imagine it won't play nicely with them.  will read more later.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1098166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1178758", "body": "would it make any sense to do \n\n```\nif( X.n ) { \n    X.c.notify_one();\n}\n```\n\nas an optimization?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1178758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1181844", "body": "i agree if you are sure notify_one() is fast with no waiters.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1181844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991", "body": "use unique_ptr here\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/165991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "ymarkovitch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2415751", "body": "I don't think so. To ensure we provide right equality/compare operators semantics, it is better to define one operator (== for equality, < for ordering) ant then define all other operators through them, getting right semantics automatically and independent on actual equality/compare methods implementation. The good example is STL. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2415751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Ry4an": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2557289", "body": "Bah, this was a one line change.  I'm not sure why it pulls in 53 other changes...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2557289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jhuntwork": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2637307", "body": "This doesn't account for leading white-space (white space matched after a '=') - drafting another fix\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/2637307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jseibert": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3157302", "body": "Hey all it's been 9 months, can this be accepted??\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3157302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "charsyam": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3234791", "body": "i already signed ^^\nthis is second patch ^^ thank you!\n\n-----Original Message-----\nFrom: \"Kristina\"&lt;reply@reply.github.com&gt; \nTo: \"charsyam\"&lt;charsyam@naver.com&gt;\nCc: \nSent: 11-12-22() 00:05:32\nSubject: Re: [mongo] remove unnecessary condition !hopeful &lt;-- it already check line 35 (#155)\n\n## Thanks for the patch! Could you please sign the contributor agreement so I can pull it in? http://www.10gen.com/contributor\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mongodb/mongo/pull/155#issuecomment-3234687\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3234791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cwestin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3323403", "body": "I don't know where strcpy_s() comes from, but the standard solution here would be to use strncpy().\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3323403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4175633", "body": "Trim is often used for a function to remove leading or trailing whitespace from strings.  The functionality described here is more often known as slice.  Perhaps that would be a better name, in order to be more consistent with other well-known library functions in various languages.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4175633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4175915", "body": "Thanks.  Compare with http://php.net/manual/en/function.trim.php, http://docs.oracle.com/javase/1.4.2/docs/api/java/lang/String.html#trim(), (not native, but people obviously expect the name) http://www.somacon.com/p114.php, http://php.net/manual/en/function.array-slice.php, (again, common terminology) http://stackoverflow.com/questions/1480663/how-can-i-slice-an-arraylist-out-of-an-arraylist-in-java .  It sounds like Redis may have chosen names that ignore convention.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4175915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4175935", "body": "Silly me, I should have searched mongodb.org first.  What you want is already there:  http://www.mongodb.org/display/DOCS/Retrieving+a+Subset+of+Fields#RetrievingaSubsetofFields-RetrievingaSubrangeofArrayElements .  Apparently that has been there since 1.6:  http://www.mongodb.org/display/DOCS/What%27s+New+by+Version .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4175935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4176215", "body": "I couldn't find any references for updating.  If that's included in what you've done, some portion of that is still relevant after renaming.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4176215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4326888", "body": "Thanks for catching that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4326888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4373873", "body": "Looks good.  When we get the all clear for 2.2.0 being done, or if the original ticket gets approved for 2.1.2, then you'll need to repull and then we can merge this in.  Let me know when those occur, and I'll merge the request.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4373873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4373963", "body": "It wouldn't hurt. I'd never say no to adding more testing.\n\n> ---\n> \n> From: Jared Rosoff reply@reply.github.com\n> To: Chris Westin cwestin@yahoo.com \n> Sent: Wednesday, March 7, 2012 10:17 AM\n> Subject: Re: [mongo] SERVER-4899: Add size expression to pipeline (#178)\n> \n> Would you like me to add negative tests for assertions raised when you try to use $size on non-array types?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/178#issuecomment-4373900\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4373963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5473191", "body": "Generally looks good, but as noted, I'd return zero for missing or null valued fields.  Also, we shouldn't turn off those assertions, since they appear to work for everyone else.  Can you describe what was causing them to go off for you?  Did you look at the value of millis in the debugger and see what it is?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5473191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5562517", "body": "What do you mean \"it skips over it?\"  Is it not executing the condition?  That would be a sign of not having recompiled this file in the executable you're running (presuming you're checking this in the debugger).  Or, are you saying the condition isn't true for non-existent fields?  In that case, what is the type of pString for a non-existent field?\n\nEither way, something sounds fishy here.  Please dig into the details and let me know more.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5562517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5573872", "body": "Don't bother trying to run the debugger on mongo.  mongo is just the client shell, which communicates with the mongod server, where everything interesting is happening.  You want to run the debugger on mongod.  If you're starting it from within emacs (which is the thing to do), start it via gud, that usually hooks up with the client program much more easily.  I'm assuming you're using some system that's got a bit-mapped windowing system, yes?  Run mongod under the debugger in one window while you connect to mongod from the mongo shell from another window.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5573872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5638756", "body": "A bit mapped windowing system is one that uses a graphical user interface to show you multiple windows.  From your earlier comments about not being able to run the debugger and the mongo shell, it sounded like you were limited to one shell (terminal) for some reason.\n\nYes, check for Undefined as well.  I forgot that could be one of the values coming through.  It looks like you added that.  Is the test working as expected now?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5638756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/967833", "body": "I checked in the debugger, and it turns out they're not. It appears to have been doing bitwise copies. I don't understand why the compiler didn't complain about requiring a real copy ctor needing to be defined.\n\n> ---\n> \n> From: Mathias Stearn reply@reply.github.com\n> To: Chris Westin cwestin@yahoo.com \n> Sent: Tuesday, February 14, 2012 6:56 PM\n> Subject: Re: [mongo] first cut at named traces (unused); copy ctor and assignment op for BSONObj (59e9b72)\n> \n> Why did you add the copy and assignment ops? I think those are the same as the automatically generated ones.\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/commit/59e9b72297906e68686c1ffeb2244736ecac945b#commitcomment-967692\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/967833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/967838", "body": "Things got all piled up while we couldn't push anything.\n\nIt turns out things were not copying BSONObj correctly before. If it turns out to cause problems, its just a couple of lines to undo it.\n\n> ---\n> \n> From: Eliot reply@reply.github.com\n> To: Chris Westin cwestin@yahoo.com \n> Sent: Tuesday, February 14, 2012 6:49 PM\n> Subject: Re: [mongo] first cut at named traces (unused); copy ctor and assignment op for BSONObj (59e9b72)\n> \n> would be nice to break these up...\n> especially since the bson one is potentially large\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/commit/59e9b72297906e68686c1ffeb2244736ecac945b#commitcomment-967679\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/967838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933", "body": "I think $strlen on a nonexistent field should return zero.  This fits the operation of other operators, which are as forgiving as possible unless the result is definitively wrong.  Here, I think it makes sense to treat this as an empty string.  However, I think it should be an error to call $strlen on a real field that does not contain a string value.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939", "body": "Why did you remove these assertions?  Since they seem to work for everyone else, it's safer to first assume there's something wrong on your setup, and that we should figure out what that is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972", "body": "Before this, I would check for pString.get() being NULL, or pString.getType() == jstNULL (from bson/bsontypes.h).  If either of those is true, return Value::getZero().  That will handle returning zero for a non-existent or null valued field.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/764972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "evanlong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3323461", "body": "src/mongo/util/goodies.h has strcpy_s.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3323461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3323475", "body": "strncpy is problematic because it is easy to mess up and not '\\0' terminate the destination. strcpy_s makes sure the src length is less than the size of the destination buffer and then copies it with strcpy which copies the '\\0'. As a result dest should be '\\0' terminated.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3323475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rcoelho": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3367196", "body": "Note: Authentication **!=** Authorization\n\nRef: http://en.wikipedia.org/wiki/Authentication#Authentication_vs._authorization\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3367196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mbj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3454511", "body": "Closing since no reaction and seems to be solved already.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3454511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ChrisLundquist": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3539541", "body": "I haven't dived into the JS engine yet. Nor is that really my speciality. How difficult do you think it would be to make it plug and playable? The goal getting real multitheading for map reduce. Maybe even leveraging something like https://github.com/RiverTrail/RiverTrail to get WebCL.\n\nObviously this is nontrivial, but I wanted to know if it was viable to pursue. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3539541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "djcsdy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3779408", "body": "I shouldn\u2019t have submitted this as a pull request from my `master` branch. I am going to resubmit it as a pull request from a different branch. Sorry.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3779408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jamespharaoh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3866956", "body": "I have signed the agreement. I will point out that I took the RegExp more or less unchanged from an external source. I doubt this is a problem because it's not really possible to write it particularly differently and it's a tiny snippet of code. The external site is: http://80.68.89.23/2006/Jan/20/escape/. The rest of the work was entirely mine.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3866956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vrtx": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3897467", "body": "Committed fix (40e869df75).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3897467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jsr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3946154", "body": "I messed up this pull request. closing it and opening a new one. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3946154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4373900", "body": "Would you like me to add negative tests for assertions raised when you try to use $size on non-array types? \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4373900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "monkey101": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3946594", "body": "This has been merged.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3946594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/1220829", "body": "it should be done as of v2.0.1\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1220829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1221141", "body": "you're right.  was only backported for mongostat, not mongotop.  i'll look into it for 2.0.5\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1221141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1224410", "body": "andy pulled it into 2.0.5 today.  https://github.com/mongodb/mongo/commit/a55507d21e53970d324eef2cafc653aea648b885\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1224410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/3291673", "body": "We weren't planning to backport this change, but it's usually not a good idea to run with more than 20k conns.  Have you looked into why your connection load is so heavy?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/3291673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/4128280", "body": "Yes.  Already spoken to greg about this.\n\nOn Tue, Sep 17, 2013 at 6:16 AM, Gianfranco Palumbo <\nnotifications@github.com> wrote:\n\n> should we enable this now?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mongodb/mongo/commit/c34d5a987b25ec72b989077769435404ad7d3608#commitcomment-4110206\n> .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/4128280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7855393", "body": "_Summary:_  If when pulling new code you run into problems using scons,\nremove the pre-existing \"site_scons/site_tools/unittest.pyc\" file from your\nsource tree.  It may cause a \"module object has no attribute TestCase\"\nerror.\n\nOne of the pluggable modules in our build's site_scons, \"unittest.py\",\nmasks the existing \"unittest\" module.  As of yesterday, we are now\nimporting the standard unittest module into our builds, which causes\nproblems when there is a previously compiled module with the same name.\nThis can cause a \"module object has no attribute TestCase\" error when\nrunning scons targets.\n\nThe solution is to remove the existing site_scons/site_tools/unittest.pyc\nfile - the module has now been renamed to \"mongo_unittest\".\n\nOn Fri, Sep 19, 2014 at 1:27 PM, Igor Canadi notifications@github.com\nwrote:\n\n> This change seems to have broke my build.\n> \n> scons: Reading SConscript files ...\n> scons version: 2.0.1\n> python version: 2 6 6 'final' 0\n> AttributeError: 'module' object has no attribute 'TestCase':\n> File \"/data/users/icanadi/mongo/SConstruct\", line 513:\n> env = Environment(*_envDict)\n> File \"/usr/lib/scons/SCons/Environment.py\", line 991:\n> apply_tools(self, tools, toolpath)\n> File \"/usr/lib/scons/SCons/Environment.py\", line 105:\n> env.Tool(tool)\n> File \"/usr/lib/scons/SCons/Environment.py\", line 1691:\n> tool = SCons.Tool.Tool(tool, toolpath, *_kw)\n> File \"/usr/lib/scons/SCons/Tool/**init**.py\", line 94:\n> module = self._tool_module()\n> File \"/usr/lib/scons/SCons/Tool/__init__.py\", line 109:\n> return imp.load_module(self.name, file, path, desc)\n> File \"/data/users/icanadi/mongo/site_scons/site_tools/mongo_unittest.py\", line 7:\n> from buildscripts import smoke\n> File \"/data/users/icanadi/mongo/buildscripts/smoke/**init**.py\", line 4:\n> import executor\n> File \"/data/users/icanadi/mongo/buildscripts/smoke/executor.py\", line 15:\n> import testers\n> File \"/data/users/icanadi/mongo/buildscripts/smoke/testers.py\", line 18:\n> class JSUnitTest(unittest.TestCase):\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mongodb/mongo/commit/e88273ac940cdef9e12c94a6bdbd2694b706a635#commitcomment-7855033\n> .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7855393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/9225963", "body": "Ben, you are correct that tickets are typically resolved at the point when\nthe code required to fix them is in master.  This can span multiple commits\nand/or verification of the fix, so it's not always immediately resolved.\nThe tickets are then typically \"closed\" once the release is complete.\n\nOn Fri, Jan 9, 2015 at 11:35 AM, Ben McCann notifications@github.com\nwrote:\n\n> Oh, looks like they have been marked as resolved now instead of waiting\n> for the RC to ship\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mongodb/mongo/commit/f58fa5f78a91ce36d8e31d6730ebfdaa6cc1d5ab#commitcomment-9221245\n> .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/9225963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/10675478", "body": "http://docs.mongodb.org/manual/reference/program/mongod/#cmdoption--wiredTigerDirectoryForIndexes\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/10675478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/10679155", "body": "what are the contents of your mongodb.conf file?  This option is only valid if you are using the WiredTiger storage engine.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/10679155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "nosh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3970608", "body": "added this commit to avoid using eval:\nhttps://github.com/nosh/mongo/commit/9c37e01f4c9158b7dc883f1ca62398967072cd7e\n\nnot sure how you add the commit to the pull request\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3970608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "miketheman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3980875", "body": "This file has been removed, and this pull request can no longer be merged.\nThe modification listed in f31eda3b9fdadec7db50b88cfc620a1bb7fa6d61 seems to be the patch desired, therefore I am closing the pull request.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3980875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3980966", "body": "Thanks for adding this. \nDoes this ticket correspond to a ticket in our Jira tracker? If so, please reference it in the commit message.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3980966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3984038", "body": "The current init script for rpm-based distributions (CentOS/RHEL) has the following directive:\n\n```\n  killproc -p \"$DBPATH\"/mongod.lock -d 300 /usr/bin/mongod\n```\n\nwhere `$DBPATH` = whatever it found in the config file.\n\nDoes this patch correlate to a ticket in our Jira? https://jira.mongodb.org/\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3984038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3985661", "body": "I have inspected the `/etc/init.d/functions` across CentOS/RHEL 5.5, 5.7, 6.2. All have the `killproc` command supporting the `-p` flag.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3985661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3987801", "body": "Agreed - that means that the `-t30` would have been invalid.\nSince our current init script does not contain this directive, rather has the fixed `-d` directive, this patch is not applicable.\nRef: https://github.com/mongodb/mongo/blob/master/rpm/init.d-mongod#L45\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3987801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3988825", "body": "As discussed above, this pull request is no longer valid.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3988825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4031444", "body": "Hello @jlpc!\nThanks for your contribution.\nIn order for us to accept your contribution, you must have completed the [Contributor Agreement](http://www.10gen.com/contributor) form. \nPlease indicate your Github username during the form completion.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4031444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4031460", "body": "Hello @presbrey!\nThanks for your contribution.\nIn order for us to accept your contribution, you must have completed the [Contributor Agreement](http://www.10gen.com/contributor) form.\nPlease indicate your Github username during the form completion.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4031460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4031587", "body": "Hi @jhuntwork,\nThanks for the contribution.\nUnfortunately, this cannot be merged in with our current init, as it has changed a bit since this pull request was opened.\nI refer you to the current script [here](https://github.com/mongodb/mongo/blob/master/rpm/init.d-mongod#L25-26), as well as the [Contributor Agreement](http://www.10gen.com/contributor) form for future contributions.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4031587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4031662", "body": "Hello @dcodix!\nThanks for your contribution.\nIn order for us to accept your contribution, you must have completed the [Contributor Agreement](http://www.10gen.com/contributor) form.\nPlease indicate your Github username during the form completion.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4031662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4044025", "body": "Hello @mapleoin!\nThanks for your contribution.\nUnfortunately, this pull request can not be cleanly merged, as a lot of the underlying mechanics of adding options in the SConstruct have changed greatly since this was written.\nIf you feel that this is still something that is missing, and should be added to the code, please open a [Jira ticket](https://jira.mongodb.org) and explain the changes needed.\nIf you would like to re-submit a pull request, in order for us to accept your contribution, you must have completed the [Contributor Agreement](http://www.10gen.com/contributor) form.\nPlease indicate your Github username during the form completion.\nThanks again for taking the time, and sorry for not having reviewed this sooner!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4044025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4081691", "body": "@jlpc sorry to hear that. Thanks for your time.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4081691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4083515", "body": "@tomassrnka - Since this is a feature request, please open a Feature ticket on our Jira for consideration\nPlease also refer to some of our [Development Rules](http://www.mongodb.org/display/DOCS/MongoDB+kernel+code+development+rules#MongoDBkernelcodedevelopmentrules-GitCommittingandPushing)\n\nAlso, in order for us to accept your contribution, you must have completed the [Contributor Agreement](http://www.10gen.com/contributor) form.\nPlease indicate your Github username during the form completion.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4083515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4296476", "body": "Hi @tomassrnka, I've been reviewing this patch, and some parts make sense to add, others do not.\nMoving the config file into a directory in `/etc/mongodb/` makes most sense to me.\nThe key generation script should possibly be removed from this patch, as this is not a method I would recommend to a user to create keys, rather using something like openssl to generate a more random key/string seems more likely.\nAlso this is more of a customization to a specific deployment scenario rather than sensible defaults for most users.\n\nIf its current state we cannot accept the Pull Request. This should be closed and open a new one with the changes to the init and config locations, as well as open a ticket in our JIRA system to reference this in the commit message.\n\nThanks for taking the time to contribute to mongodb!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4296476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5513168", "body": "Hello @azat,\nI simply haven't gotten to this yet. Is there an associated SERVER ticket in our Jira?\nThat's where the majority of discussion would live for issues.\n\nAlso, we must never use the `mongod.lock` file as the source of the pid, rather we add a `pidfile` option on the mongodb.conf, similar to the init script for rpm, seen here: https://github.com/mongodb/mongo/blob/master/rpm/init.d-mongod#L26\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5513168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5513364", "body": "Sorry for the delay. A lot have been refactored in our build flags.\n\nThe option of using the system's snappy has been placed [here](https://github.com/mongodb/mongo/blob/master/src/third_party/SConscript#L27-29).\n\nYou should be able to use this like so:\n\n```\nscons --use-system-snappy\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5513364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6085353", "body": "Sorry for the delay on this.\nI've looked at the current code, and it looks like this has changed significantly since this was opened, and cannot be merged.\n\nIf you believe this still to be a problem, please open a ticket in our public Jira - https://jira.mongodb.org and explain the scenario and problem.\nAlso, please note that in order for us to accept your contribution, you must have completed the [Contributor Agreement](http://www.10gen.com/contributor) form.\nPlease indicate your Github username during the form completion.\n\nThanks again for helping us improve!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6085353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6087860", "body": "Sorry it's taken so long to get this updated.\nI've looked into the code, and it looks like this has been implemented already.\n\nIf you believe this still to be an issue, please open up a [Jira ticket](https://jira.mongodb.org) with the details, so that this can be tracked properly in our issue tracker.\n\nThanks again for taking the time to help improve MongDB.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6087860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tomassrnka": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3981903", "body": "No. At least I don't know about it. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3981903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4313496", "body": "Hi @miketheman,\n\nOk I will update my patch during upcoming week and afterwards I will open a new ticket in JIRA.\n\nThanks for your time.\n\nTomas\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4313496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cangove": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3984311", "body": "I did not add anything to JIRA just here on github.  The issue at hand is '-p' is not a valid flag for killproc on centos so it needs to do a different method. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3984311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3987679", "body": "My bad.  The -p was not the issue its the other flags.  So the call in the\ninit script is:\n\n```\nkillproc -p /var/lib/mongo/mongod.lock -t30 -TERM /usr/bin/mongod\n```\n\nIf you look at centos (as of 5.7) kill proc is defined as:\n\n```\n\"Usage: killproc [-p pidfile] [ -d delay] {program} [-signal]\"\n```\n\nSo no '-t' and ordering of program and signal is different.  So my patch\nworks but maybe should include -d for the CentOS version.\n\nChris\n\nOn 2/15/12 1:15 PM, \"Mike Fiedler\"\n<reply+i-1070741-c2bcce458db047d324a21780a1bbd749f62ba3a0-112966@reply.gith\nub.com> wrote:\n\n> I have inspected the `/etc/init.d/functions` across CentOS/RHEL 5.5, 5.7,\n> 6.2. All have the `killproc` command supporting the `-p` flag.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/45#issuecomment-3985661\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/3987679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4660192", "body": "It seems this was merged into 1.8.5.  The above description indicates, \"new command line option\" to control this behavior but in the code diff I do not see a command line change related to this.  Is there a command line flag? Is there any reason not to always do the new approach and avoid deletes not freeing space?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4660192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jlpc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4053466", "body": "Hello,\n\nThanks for looking at my pull request. Actually I don't want to complete the Contributor Agreement form. So I suggest you reject this request and fix yourself, it is a small patch.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4053466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "boivie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4175710", "body": "Thanks for your comment. I chose 'trim' as it's used in e.g. redis (http://redis.io/commands/ltrim) but renaming it is simple.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4175710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4176131", "body": "Cool - then $slice is a good name. The current $slice (as you link to) is only for retrieving fields and not for updating them, right?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4176131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4179614", "body": "The 10gen crew can happily squash these two commits as one if they wish.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4179614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681658", "body": "@erh: Please have a look again. The update should be atomic as the \"push\" and \"trim\" is (read: should and must) be present in the same update operation.\n\nTo achieve this, I had to relax the rule that two update modifiers are not allowed to touch the same field. If I wouldn't have done that, you would be correct.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681664", "body": "@erh: I think it would be better to have a look at the test cases I have written. The commit message isn't very good - I'll certainly agree to that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681898", "body": "@erh: Sorry, I meant that I have only relaxed it for $trim (aka $slice), which by (my) definition states that it will always be evaluated after any other modifier. So it is backwards compatible.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4681898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4682137", "body": "@erh: $trim does support trimming from front or back by supplying it with a positive or negative length.\n\nBy the definition that $trim is a sort of \"post-update\" modifier, it should be obvious what happens. They can still get the results they want by either providing a positive length (keep the first X elements) or a negative length (keep the last X elements).\n\nYes, having it independently would be a good thing - I agree. Today you can simulate it by using {$pushAll: [], $trim: X}, but it's sort of a kludge that can be removed at any time while still not breaking any promises or backwards compatibility.\n\nDocumentation seems to be a key here. But I personally like the idea of having a separate operation, instead of creating \"fixed-size\"-operator copies (push, pushAll, addToSet etc would have to be copied many times). I don't want to take credit for that idea though - @colinmollenhour wrote about it in the jira.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4682137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "colinmollenhour": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4178363", "body": "Having $slice/$trim supported for updates as supported in this patch would be great. It would fix [SERVER-991](https://jira.mongodb.org/browse/SERVER-991) which has 103 votes.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4178363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4685538", "body": "The problem with the syntax originally proposed is that if you want to do multiple push and trim operations in one update you can't choose different lengths for different keys. I just proposed a new syntax on SERVER-991 that uses one operator with a 2-tuple (value, length) as the value for each key.\n\n``` javascript\ndb.user.update({name: 'ibwhite'},{\n  $pushTrim: {last_10_urls: ['/category/apple', -10]},\n  $addToSetTrim: {last_5_unique_urls: ['/category/apple', -5]}\n});\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4685538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "connois": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4186296", "body": "We have been waiting for a long time for something like this for solving SERVER-991. What release version can we expect on this one ? Thanks guys. Looks great !\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4186296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4682607", "body": "I'm sad to see reluctance to commit this. There are hundred of possible uses for this. How many time we need to store \"the last n things\" or \"las n unique things\" of something in a dev... Las 10 unique ips, the las 10 urls, last 10 user sessions. Today this require 2 write which is not very efficient.\n\n@erh, I understand this principle of \"two modifiers can't touch the same field\" is important, but it is like a special case, and isn't it the also the whole purpose of this product ? To evolve with such good improvements requests from the developer community ? This is a really good one !\n\nCould you still think about it before making up your mind and see how many posibilities that could open up ? @boivie already wrote the code and a lot of us are already mouth watered by it. This would be a waste not to commit it.\n\nAnd if this is that critical not to modify the same field with 2 modifiers, mayne we could have some alternative in one single modifier ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4682607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "konsti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4440969", "body": "+1 really need that option. Any progress?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4440969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "larroy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4646575", "body": "milkie, agree, let's close this with the BOOST_CHECK_EXCEPTION an address the other stuff later. From my pov you can pull.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4646575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4661088", "body": "I will make a new pull request then.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4661088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "milkie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4658779", "body": "I still can't use this request the way it is.  You added your commit 0ba486e, which changes undef_macros.h:26.  The change to line 26 is unrelated to your commit description, and is unrelated to this pull request.\nWe'll need to address the logic on line 26 in a later discussion/request.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4658779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4664437", "body": "accepted and merged\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4664437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4766323", "body": "Hi Jani,\nThanks for your interest in getting ARM working with the mongodb server code.\nAfter some discussion with my peers, I think we'd like to try to fix alignment issues for all platforms, instead of conditionally compiling different code for ARM.  This way, all platforms will benefit from the performance benefit of fewer alignment faults.\nCan you look into trying to align the structures themselves?\n-Eric\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4766323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4768304", "body": "For the counter stuff, it looks like the consumers of getObj() aren't actually modifying the counter data.  So I think we could just make the counters members of the class and construct a BSONObj on the fly when getObj() is called, rather than keeping the object around with pointers into it for the individual counters.  How does that sound?  Then the counters will be naturally aligned.\n\nYou can submit the doubles patch unclean and I'll take a look to see if it's something that we'll be able to import.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4768304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4880694", "body": "If you only make a BSONObj inside getObj(), I think that should fix the problem.  The resulting BSON object's embedded counter fields are never incremented by any code that calls getObj(), so there will be no alignment faults.\nThis is what I mean by on-the-fly.  You create a BSON object each time getObj() is called, rather than just once when the Counter object is constructed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4880694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4961539", "body": "Change committed to mongodb/mongo.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4961539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4980890", "body": "committed to master.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4980890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4982911", "body": "Can you switch the C style casts to C++ style?  Just for the lines you modified; you can leave the others.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4982911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4995830", "body": "Can you please sign the contributor agreement at http://10gen-corp.appspot.com/contributor\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4995830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4997376", "body": "Unfortunately, this can't be merged as-is.  The new shell function isatty() is called via tojson(), which is a function that can be called outside of the shell (and we only added isatty() to the shell as an extension).  This _might_ be fixed by swapping the order of the checks for nolint and isatty in the colorize function, but that seems sloppy.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4997376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5025488", "body": "The code as written is correct.  I think your new code will cause a crash..\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5025488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5025635", "body": "Note that dump.cpp has the same code; see SERVER-1833\nIf we change it in export.cpp, we should make the same change in dump.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5025635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5051128", "body": "Agree, I think we should just add a param `forceTableScan` like `mongodump` has.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5051128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5070465", "body": "committed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5070465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5488632", "body": "I think github is lying; it says the request can be automatically merged, but that is false.  It is false because the diff context lines for dbshell.cpp have changed since you last pulled, and the git merger can't seem to handle this turn of events:\nerror: patch failed: src/mongo/shell/dbshell.cpp:18\nerror: src/mongo/shell/dbshell.cpp: patch does not apply\n\nCan you pull from master and commit a merge to this branch?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5488632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511651", "body": "Hi Azat, can you please sign the Contributor Agreement at http://www.10gen.com/contributor ?\nThen I will work on importing your submit.\n-Eric\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511952", "body": "pushed to master.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511973", "body": "Yes I thought so but I can't find it; maybe it didn't take?  I looked for your name and for your github username but nothing matches.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5512773", "body": "Contributor Agreement signed.  change pulled into master.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5512773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5823455", "body": "Hi Zhehao,\nThanks for your pull request.  Can you please sign the contributor agreement here: http://www.10gen.com/contributor\n-Eric\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5823455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5825800", "body": "Thanks.\nCan you make the text use the actual constants in the code, rather than a hardcoded value?  For example, there is DEFAULT_MAX_CONN in listen.cpp.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5825800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5830764", "body": "You can use mongo::StringBuilder for this, then call .str()\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5830764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5831102", "body": "If you use StringBuilder, you must call .str() to produce a char\\* that the function signature wants.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5831102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5846374", "body": "Excellent, thank you.  I committed your change.  Thanks for your contribution!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5846374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6101526", "body": "Committed.  Thanks for the request!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6101526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6792185", "body": "ok commit a change to your branch and add it to this pull request so I can incorporate it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6792185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6846129", "body": "Hi Josh, Could you please sign the contributor agreement:\nhttp://www.10gen.com/contributor\nAnd then I'll pull in your commit.\nThanks,\nEric\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6846129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/1199007", "body": "Thanks, I will submit a fix to master for this shortly.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1199007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1255872", "body": "uncomment this?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1255872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1565984", "body": "It's more work to determine which collection to lock, and this line is hit rarely if at all.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1565984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/14276498", "body": "What about when globalSec = now?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14276498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/17715391", "body": "Technically, these should be \"severe()\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/17715391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/24891188", "body": "\"scheduler\"", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/24891188/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112", "body": "I think we'll need to actually create the file on first use, rather than requesting the user do it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116", "body": "Also we should put in a link to the new documentation site and a mention of the mongo-users google group.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123", "body": "_isatty() instead?  we already use it in util/log.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453039", "body": "I think the pluralization logic may be incorrect here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453079", "body": "I think what you did in your code is fine.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453224", "body": "Interestingly, it may be easier to catch these mistakes if you use the \"document/documents\" technique instead of the ''/'s' technique.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/66432233", "body": "This error message is incorrect.  This code applies to all modes of operation, not just \"replica set\".\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/66432233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "TylerBrock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4685517", "body": "@milkie helped out a ton with this, we worked on it during HackNY this weekend.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4685517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/13014620", "body": "Nice!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/13014620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/7892353", "body": "Good call. I'll fix that now.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/7892353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "janimo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4698487", "body": "Thanks for the feedback. I updated the request and signed the contributor agreement.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4698487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4763421", "body": "BTW, the patch is noop for now, I wanted to keep this preparation commit separate from the enabling and ARM alternative\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4763421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4766786", "body": "Hi Eric,\nI agree that conditionally compiling for ARM is less desirable than code that is common to all platforms.\n\nWhich structures exactly do you mean I should look into aligning? The specific counters within the bson used by the stats?\n\nSo far I have seen two issues (mongo still crashes after changing them):\n 1) the one addressed here, where atomic ints are inside BSON. I know too little about BSON to know for sure but I assumed unaligned positioning of values is unavoidable since it aims for compactness. So in this particular case I see\nno other way to avoid LDREX/STREX ARMv7 instructions being generated for ARM but to not use atomic ints inside BSON. So either use non-atomics or ARM or non-atomics for counters on all platforms - maybe a simple int + a lock? I wanted to add no regression at all in non-ARM code, hence proposing conditionals. Any other ideas?\n\n2) double values being accessed inside BSON. These also cause faults if accessed at unaligned addresses on ARM so I used packed structs with a double value in them to force gcc to emit code than does multiple shorter accesses. I need to clean that patch up and submit it separately. That would work on all arches I assume with no regression in performance - but I have not actually checked on x86 if the code emitted is the same whether using a regular double pointer or accessing a  packed struct's address with a double in it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4766786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4783866", "body": "I'd need to actually read more of the code to understand your proposal regarding the counters.\nThe doubles patch is a longer version of the one attached here at the beginning of March, I'll have to rediff against current master and do a test build, then I'll submit it. (it was against 2.0.3)\n https://jira.mongodb.org/browse/SERVER-1811\n\nBut you can see the technique I went for even in this patch with only two occurrences of double access.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4783866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4844863", "body": "I have updated the JIRA ticket with the updated unclean patch, with which the smoketest passes on Ubuntu/ARMv7.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4844863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4880460", "body": "Eric,\ndo you mean making a BSON object on the fly as it's done in GenericCounters? From what I see the misalignment is due to a combination of OpCounters using AtomicUInt and and having text labels, the latter causing various offsets into the BSON. I do not see how building the BSON on the fly can avoid the misaligment unless no longer adding strings before them. I would not be surprised to learn I a missing something obvious though, I am new to the codebase :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4880460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4948707", "body": "Per Ola, having a non-x86 branch of master with orthogonal changes and pull requests for endianness, signedness, and alignment fixes would probably be helpful :) When I looked at the 1.8 based tree I really could not pick out a minimal clean set of changes to help my case (ARM). (nb: I am speaking as a bystander and have no say in how mongodb is developed or in their patch acceptance criteria)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4948707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4986808", "body": "Right, I just used the same types of casts as were there before. Nested reinterpreted casts statements will look quite weird :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4986808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4993075", "body": "I hate git merge conflicts.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4993075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4993147", "body": "C++ casts, new pull request as the latter was botched after  fighting merge conflicts for too long.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4993147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "markerrj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4830953", "body": "Being able to apply a projection during bsondump is super useful. bsondump should definitely include this functionality.\n\nThis patch is a little out-of-date w.r.t mongo's current HEAD, since it's been sitting around for 8 months...\n\nWhat needs to happen to get projection support into bsondump? I can help bring this up-to-date or split out just the projection portion into a separate pull request.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4830953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4831133", "body": "I created a mongodb JIRA issue for the projection support in bsondump, so we'll see what happens...\n\nhttps://jira.mongodb.org/browse/SERVER-5453\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4831133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "skrabban": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4924731", "body": "This is the same as in mongo-nonx86, so it should work.\n\nShouldn't we start merging in that? It also fixes the misaligned double case.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4924731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "azat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4995271", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/4995271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5004600", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5004600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5041263", "body": "Yes thanks, I forgot that `hasDollar` is a pointer\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5041263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5041360", "body": "Add such code to `dump.cpp`\n\nAlso I have a question, why there is just `_query.isEmpty()` instead of `_query.getFilter().isEmpty()` ?\n\nAnd BTW maybe there is make sense to just add param `forceTableScan` like in `mongodump` to `mongoexport` instead of my commits?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5041360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5041479", "body": "I think about copy-paste code, I don`t like such code too.\nBut there is some restrictions, because for regular file there is a progressbar, while for fifo no progressbar is available\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5041479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5051213", "body": "I implement this param\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5051213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5064462", "body": "And also please explain me why\nhttps://github.com/mongodb/mongo/commit/4b488f8a8abebe1c4961eb1386a19a1e56fce4ec#commitcomment-1196571\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5064462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5089747", "body": "@andy10gen why that function must be inlined?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5089747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5094579", "body": "Is it enough and normal?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5094579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5169765", "body": "@andy10gen  ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5169765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5509430", "body": "@miketheman ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5509430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511709", "body": "I have already sign it\n\nAzat Khuzhin.\nSend from phone.\nOn May 4, 2012 6:31 PM, \"Eric Milkie\" <\nreply@reply.github.com>\nwrote:\n\n> Hi Azat, can you please sign the Contributor Agreement at\n> http://www.10gen.com/contributor ?\n> Then I will work on importing your submit.\n> -Eric\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/222#issuecomment-5511651\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5511709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5512137", "body": "I sign it here http://10gen-corp.appspot.com/contributor\nIs it different agreements?\n\nAzat Khuzhin.\nSend from phone.\nOn May 4, 2012 6:46 PM, \"Eric Milkie\" <\nreply@reply.github.com>\nwrote:\n\n> Yes I thought so but I can't find it; maybe it didn't take?  I looked for\n> your name and for your github username but nothing matches.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/222#issuecomment-5511973\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5512137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5513307", "body": "There is no ticket for this, if we can not discuss here,I can create issue\nin jira.\n\nIf we can discuss here, please confirm\n\nAzat Khuzhin.\nSend from phone.\nOn May 4, 2012 7:34 PM, \"Mike Fiedler\" <\nreply@reply.github.com>\nwrote:\n\n> Hello @azat,\n> I simply haven't gotten to this yet. Is there an associated SERVER ticket\n> in our Jira?\n> That's where the majority of discussion would live for issues.\n> \n> Also, we must never use the `mongod.lock` file as the source of the pid,\n> rather we add a `pidfile` option on the mongodb.conf, similar to the init\n> script for rpm, seen here:\n> https://github.com/mongodb/mongo/blob/master/rpm/init.d-mongod#L26\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/214#issuecomment-5513168\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5513307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5517521", "body": "@miketheman I remember that I comment here https://jira.mongodb.org/browse/SERVER-3574\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5517521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5578996", "body": "@miketheman ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5578996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5746725", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5746725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6172252", "body": "Maybe second commit is not quite correct\nAnd if so, post here what wrong\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6172252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6218729", "body": "For me it works perfect\nAnd it fixed my initial issue https://jira.mongodb.org/browse/SERVER-5845\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6218729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6492623", "body": "Create new pull request #251\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6492623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/1196571", "body": "Why here is just `_query.isEmpty()` instead of `_query.getFilter().isEmpty()` ?\nLike here https://github.com/mongodb/mongo/commit/d3d719c3aa72d63fe838f1e5eae7098e3bffe721#L0R95\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1196571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1565498", "body": "Why global lock?\nIs lock for collection only is not enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1565498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362", "body": "Why it should?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/664362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717", "body": "@andy10gen, it will fail at https://github.com/mongodb/mongo/pull/205/files#L1R549 ( `m.done() == fileLength` ). Is it enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/699717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788", "body": "@andy10gen ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/773788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "onyxmaster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5090410", "body": "Eliot, I decided that your way would be better in any case, see previous commit.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5090410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5227823", "body": "It looks like this isn't interesting enough, looks like I should write my own driver, closing request.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5227823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141", "body": "No particular reason, I justified its placement on the basis that GridFile constructor is private so existing code shouldn't be broken by this change (the default value is not provided for the same reason), and that slaveOk felt to me as something immutable and should be close to another immutable (grid) both in field definitions (line 200 below) and the argument list.\nIf you feel that GridFile constructor might become protected or public some day, I agree with you that slaveOk should be placed at the end and, probably have the default false value added.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142", "body": "If you prefer, I can make changes on my end and update the pull request, just tell me.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/676142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "srabouin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5140637", "body": "You don't need to add anything, this is already possible via javascript\n\ndb.collection.distinct('key', { 'field' : value }).length\n\nIf you want to get that via php, you could simply do:\n$total = $db->execute(\"db.collection.distinct('key', { 'field' : value }).length\");\n\nSo this way you will only get the total.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5140637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "stulentsev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5142098", "body": "@srabouin \n\nif results of `.distinct` call exceeds document limit, you'll get an exception. This patch helps avoid that.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5142098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "amcfague": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5410921", "body": "Thanks, Andy!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5410921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5420897", "body": "Good morning, Andy,\n\nI just signed it; let me know if you need anymore info!\n\nAndrew\n\nOn Mon, Apr 30, 2012 at 8:12 AM, Andy Schwerin <\nreply@reply.github.com\n\n> wrote:\n> \n> Could you please sign the MongoDB contributor agreement?\n> http://www.10gen.com/contributor\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/216#issuecomment-5419448\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5420897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5455804", "body": "I would highly recommend squashing these commits when you do the merge--I didn't do it myself because I wasn't sure how GitHub's review system would handle it (since we have comments associated with the specific commits).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5455804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5474449", "body": "I absolutely understand, and I definitely do not mind. I'll split it up\ntonight!\n\nAndrew\nOn May 2, 2012 2:59 PM, \"Andy Schwerin\" <\nreply@reply.github.com>\nwrote:\n\n> This seems ready to go.  You'd be doing me a real favor, though, if you\n> dropped this request and replaced it with 3 new ones.  The first is\n> everything through 8354e4a, the second is eb26b52 (change when a line goes\n> into history), and the final one is db533bd (improve edit functionality --\n> also, please look up the associated JIRA ticket and mark it).\n> \n> For the when-a-line-enters-history, it'd be good to have an associated\n> jira ticket, because that's how a lot of engineers internally discuss the\n> merit of changes, and this one warrants at least a little discussion.\n> \n> If you don't want to do this, I'll get to it sometime in the next week or\n> so.  Pretty slammed, right now.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/216#issuecomment-5473604\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5474449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5501333", "body": "Closing so that I can create three separate pull requests.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5501333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5501418", "body": "Since all of the commits depend on each other, I'll submit the first one\nnow, and then the other two after the main one has been merged in.  That\nway, we can keep it clean and not have to mess around with GitHub.  You let\nme know if there's anything else I need to do for this first merge!\n\nAndrew\n\nOn Wed, May 2, 2012 at 3:38 PM, Redmumba redmumba@gmail.com wrote:\n\n> I absolutely understand, and I definitely do not mind. I'll split it up\n> tonight!\n> \n> Andrew\n> On May 2, 2012 2:59 PM, \"Andy Schwerin\" <\n> reply@reply.github.com>\n> wrote:\n> \n> > This seems ready to go.  You'd be doing me a real favor, though, if you\n> > dropped this request and replaced it with 3 new ones.  The first is\n> > everything through 8354e4a, the second is eb26b52 (change when a line goes\n> > into history), and the final one is db533bd (improve edit functionality --\n> > also, please look up the associated JIRA ticket and mark it).\n> > \n> > For the when-a-line-enters-history, it'd be good to have an associated\n> > jira ticket, because that's how a lot of engineers internally discuss the\n> > merit of changes, and this one warrants at least a little discussion.\n> > \n> > If you don't want to do this, I'll get to it sometime in the next week or\n> > so.  Pretty slammed, right now.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mongodb/mongo/pull/216#issuecomment-5473604\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5501418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5519813", "body": "I will take a look at it.  I worked with MongoDB at Wireless Generation for\na while, so I've had quite a bit of first hand experience with it.  Plus,\nMike Fiedler and Dan Crosta are both former coworkers. :)  On the other\nhand, I have also been out of the c++ game for some time now, and I'm using\nthis as an excuse to broaden my knowledge.  Not to mention, I love\ncontributing and helping other people, so even though I will likely never\nuse any of these features in a work setting, I still have the satisfaction\nof knowing other people will be aided by my contributions!\n\nSo with my personal message over, I'll take a look at this bug and see how\nit breaks it--and whether or not I can fix this!\n\nAndrew\n\nOn Fri, May 4, 2012 at 1:01 PM, Andy Schwerin <\nreply@reply.github.com\n\n> wrote:\n> \n> Sorry, this patch breaks multi-line editing in the shell.  See\n> SERVER-5764, which was resolved by rolling this change back.\n> \n> The shell line processing logic is unfortunately more spaghetti than I\n> realized, and of course there's no document specifying expected behavior\n> for these cases.\n> \n> Anyhow, if you want to dig further and see how to preserve multi-line\n> editing in the face of this, the whole input processing module is fair game\n> for reexamination.  I don't know what your interest level is, but I can try\n> to get someone over here to draft a spec for how they think shell input is\n> supposed to work.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/221#issuecomment-5519049\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5519813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5522214", "body": "Looks like the finishCode() call was removed; I have re-added it and verified that multiline editing works as intended.  Apologies for not catching this earlier!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5522214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5827844", "body": "@andy10gen: When you get a chance, this will re-introduce multi-line editing.  I had previously removed the code and not noticed it in the diff.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5827844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6167112", "body": "No worries, I know you're a busy man! Thanks for the update, though! :)\n\nAndrew\nOn Jun 6, 2012 6:27 PM, \"Andy Schwerin\" <\nreply@reply.github.com>\nwrote:\n\n> Haven't forgotten this, just swamped w/ some other stuff right now.  Will\n> get back to it.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/221#issuecomment-6167055\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6167112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mengz0": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5453024", "body": "This would possibly be a solution to \nhttps://jira.mongodb.org/browse/SERVER-5042 & https://jira.mongodb.org/browse/SERVER-5730 \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5453024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lcapaldo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5479905", "body": "Took me a bit, but I got the hang of squashing things. That change should address all the comments.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5479905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5489053", "body": "Yeah I can do that some time later today or tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5489053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5500306", "body": "So um, I merged that in. I'm not sure I'm convinced that helped?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5500306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185", "body": "Just put #define isatty _isatty in platform/windows?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190", "body": "Yeah I can do both these things.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/757190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "afchin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5480914", "body": "I uncommented the time stuff and it works now. I wish I knew why it works\nnow.\n\nI added in the checks you recommended, but for some reason the tests just\nkeep skipping over to the assert line even for nonexistent fields.\n\n```\nintrusive_ptr<const Value> ExpressionStrlen::evaluate(\n    const intrusive_ptr<Document> &pDocument) const {\n    checkArgCount(1);\n    intrusive_ptr<const Value>\n```\n\npString(vpOperand[0]->evaluate(pDocument));\n\n```\n    // if the value is NULL or missing, return 0\n    if ((pString.get() == NULL) || (pString->getType() == jstNULL)) {\n        return Value::getZero();\n    } else {\n        uassert(16145, str::stream() << getOpName() <<\n            \": input must be a string\", pString->getType() == String);\n        string str = pString->coerceToString();\n\n        return Value::createInt(str.length());\n    }\n```\n\nThanks! (And I guess I'll see you on Friday!)\n\nOn Wed, May 2, 2012 at 2:41 PM, Chris Westin <\nreply@reply.github.com\n\n> wrote:\n> \n> Generally looks good, but as noted, I'd return zero for missing or null\n> valued fields.  Also, we shouldn't turn off those assertions, since they\n> appear to work for everyone else.  Can you describe what was causing them\n> to go off for you?  Did you look at the value of millis in the debugger and\n> see what it is?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/213#issuecomment-5473191\n\n## \n\nAnnie\u2122\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5480914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5566838", "body": "the condition probably just isn't true, because i've recompiled everything\nmultiple times just to make sure.\n\ni can't figure out how check the value because i can't get gdb to work with\nmongo. i build it with debug symbols, boot up gdb mongo, and then it\ndoesn't let me do anything. I can't gdb mongo\njstests/aggregation/testall.js, either. I'm probably doing something wrong,\nbut I can't find anything on the internet on how to use mongo with gdb :(.\nShould I gdb mongod? But then I can't ./mongo\njstests/aggregation/testall.js once i'm inside.\n\n I'm really confused..can you help?\n\nMy default sanity check--just reading the code--is failing me because if\nfor a nonexistent field, the value is actually some form of NULL, I see no\nreason why the program shouldn't work.\n\nThanks!\n\nOn Mon, May 7, 2012 at 3:25 PM, Chris Westin <\nreply@reply.github.com\n\n> wrote:\n> \n> What do you mean \"it skips over it?\"  Is it not executing the condition?\n>  That would be a sign of not having recompiled this file in the executable\n> you're running (presuming you're checking this in the debugger).  Or, are\n> you saying the condition isn't true for non-existent fields?  In that case,\n> what is the type of pString for a non-existent field?\n> \n> Either way, something sounds fishy here.  Please dig into the details and\n> let me know more.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/213#issuecomment-5562517\n\n## \n\nAnnie\u2122\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5566838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5581822", "body": "I don't know how to use emacs; i (try to) use vim :\\ I also don't know what\na bit-mapped windowing system is...I'm using ubuntu in a virtual box.\n\nFor\n\nBSONType t = pString->getType();\nconst Value *pE = pString.get();\n\n(gdb) print pE\n$1 = (const class mongo::Value *) 0x968eb58\n(gdb) print t\n$2 = mongo::Undefined\n\nSo it looks like neither of them are NULL. Should I be checking\npString->getType() for Undefined as well as jstNULL, or just Undefined?\n\nThanks!\nOn Tue, May 8, 2012 at 5:57 AM, Chris Westin <\nreply@reply.github.com\n\n> wrote:\n> \n> Don't bother trying to run the debugger on mongo.  mongo is just the\n> client shell, which communicates with the mongod server, where everything\n> interesting is happening.  You want to run the debugger on mongod.  If\n> you're starting it from within emacs (which is the thing to do), start it\n> via gud, that usually hooks up with the client program much more easily.\n>  I'm assuming you're using some system that's got a bit-mapped windowing\n> system, yes?  Run mongod under the debugger in one window while you connect\n> to mongod from the mongo shell from another window.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/213#issuecomment-5573872\n\n## \n\nAnnie\u2122\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5581822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5638880", "body": "Yes, the test works now!\n\nOn Thu, May 10, 2012 at 3:47 PM, Chris Westin <\nreply@reply.github.com\n\n> wrote:\n> \n> A bit mapped windowing system is one that uses a graphical user interface\n> to show you multiple windows.  From your earlier comments about not being\n> able to run the debugger and the mongo shell, it sounded like you were\n> limited to one shell (terminal) for some reason.\n> \n> Yes, check for Undefined as well.  I forgot that could be one of the\n> values coming through.  It looks like you added that.  Is the test working\n> as expected now?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/213#issuecomment-5638756\n\n## \n\nAnnie\u2122\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5638880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "slyons": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5731985", "body": "Whatever the Github equivalent of a +1 on this pull request\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5731985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zhemao": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5823533", "body": "I have signed it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5823533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5830510", "body": "Okay, but what is the proper way of concatenating an int to a string in the mongo codebase?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5830510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5831034", "body": "I'm trying to use mongoutils::str::stream() << \"string literal\" << integer; But the compiler gives the error\n\nno match for call to '(boost::program_options::options_description_easy_init) (const char [5], boost::program_options::typed_value<int, char>*, mongoutils::str::stream&)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5831034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5831439", "body": "Okay, I used StringBuilder.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5831439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "chtitux": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5823896", "body": "I've just signed the Contributor Agreement (chtitux / gmail.com ), you can merge my pull request (with high intellectual value ;)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/5823896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ebroder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6045202", "body": "Thanks for the pointers, and super-fast review.\n\nI've gone ahead and adjusted the commit to use `curTimeMillis64()` instead of my own thing.\n\nI didn't think about the `inShutdown` thing because I've apparently gotten used to thinking in evented instead of in threads. Do you have any thoughts on how you'd want to approach that? My inclination would be a condition variable, but I don't know how to interrupt select based on a condition variable.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6045202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "weyrick": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6100965", "body": "Cool, added and signed. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6100965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6154402", "body": "All set. Yes, signed contributor agreement. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6154402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "rathboma": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6334932", "body": "This is a pretty simple fix, any chance it can be accepted?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6334932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lwc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6348067", "body": "Any intention of merging this? It'd be a super handy feature for dealing with timeStart / timeEnd type problems upserting aggregates..\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6348067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Frescha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6572907", "body": "+1\nThis changes are necessary to enable the new syslog feature via config file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6572907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tychoish": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6788917", "body": "s/for/of/\n\notherwise I accept\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6788917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/16020381", "body": "Thanks for the catch, and sorry about the confusion. I hit this in my own testing, and am planning to put the fix to this in with the change. I hope to get the change in in the next ~day or so.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/16020381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/19273186", "body": "I just did some testing of these values on one system, and I've not been able to reproduce this error yet, but I think that there may be something more happening with different versions of systemd, and I want to dig into this further. \n\nI've created https://jira.mongodb.org/browse/SERVER-26438 to track this problem more closely, but I'd like more information about your set up, including (if possible) which distribution and operating system release, as well as  and version of systemd you've observed this under.\n\nSorry for the problems, and we'll try and address this as quickly as possible.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/19273186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/19294571", "body": "I tried to reproduce this issue on Debian 8.1 system built from the default Debian AMI on amazon, and was not able to reproduce this issue, although if you upgraded to this package from another package, it's possible that I've not reproduced your environment accurately.\n\nIt looks like the vagrant box version 8.2.0 was released on October 22, 2015, and there have been a number of updates to the \"debian/jessie64\" box since then. I'm not sure if this is a factor in the behavior that I'm observing.\n\nI'm going to update the Jira ticket with some of this information, but if you have more context that might help us understand what's going on, that might be useful in getting to the bottom of this issue. \n\nSorry for the confusion.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/19294571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "joshprice": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6852724", "body": "Hi Erik,\n\nI've just signed the agreement.\n\nAny idea which version this fix might appear in and when this might be?\n\nAlso what is the best way to get a 64bit windows binary of mongoexport with this fix? I don't have a windows environment, so was hoping there was an auto build I could grab it from?\n\nThanks!\nJosh\n\nOn 09/07/2012, at 3:18 PM, Eric Milkiereply@reply.github.com wrote:\n\n> Hi Josh, Could you please sign the contributor agreement:\n> http://www.10gen.com/contributor\n> And then I'll pull in your commit.\n> Thanks,\n> Eric\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mongodb/mongo/pull/260#issuecomment-6846129\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/issues/comments/6852724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mongodb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14485", "body": "this was just a test.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "metagoto": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/53383", "body": "lol ;)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/53383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "phase2": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/55958", "body": "Looks like a typo here:\n\nhttp://github.com/mongodb/mongo/commit/2b7eb102159a36129222afa1883ea3b15145e08b#L0R40\n\nSee &7 instead of &&\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/55958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thbar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/58482", "body": "Bravo :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/58482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "thomasst": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/96213", "body": "Shouldn't the constant MaxBSONObjectSize be used instead? In case one wants to customize the size.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/96213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TonyGen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/117314", "body": "Eliot, please roll this commit back. I found a bug with it. I didn't think you would include it until I made a pull request to you. Thanks, Tony\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/117314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/539381", "body": "This loop only iterates twice but the sleep time is one-third, thus only sleeping two-thirds all together. Is this intended?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/539381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dmytton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/181433", "body": "Won't this catch use of small oplog size when used with an arbiter? In your docs you recommend using a small oplog  http://www.mongodb.org/display/DOCS/Adding+an+Arbiter\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/181433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hackworks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/248914", "body": "Could InterLockedExchange be used on windows and __sync_xor_and_fetch when GCC is used?\nFor windows:\nhttp://msdn.microsoft.com/en-us/library/ms683590(v=vs.85).aspx\nFor GCC:\nhttp://gcc.gnu.org/onlinedocs/gcc/Atomic-Builtins.html\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/248914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gregstuder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/301135", "body": "detects int overflow in passed 2d bounds/parameters\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/301135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497", "body": "Major change here is basically to pull up the expand algorithm into the superclass.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/328497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/441884", "body": "Should make it possible to write \"uassert( 0, \"blah blah\", x > 3 );\", which will then get translated on first build / first errorcode check to uassert( <next errorcode>, \"blah blah\", x > 3 );\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/441884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shriharipandit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/333336", "body": "You also need to make a similar change within void ReplicaSetMonitor::_checkHosts():\n\nLine 297: log(1) << \"updated set (\" << _name << \") to: \" << getServerAddress()\n\nPerhaps more places as well.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/333336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Plasma": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/335801", "body": "Won't this mean you can step down a primary (and assuming a busy website load) 10 seconds of data may be lost?\n\nI would have thought you would want to have no lag what so ever, otherwise you need to specify force: true, instead of allowing 10 seconds of lag time?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/335801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/336498", "body": "Ah that makes a lot of sense now.\n\nI initially thought that the 10 seconds was a tolerance of how much data you could lose if you wanted to switch primaries (that's what I get from only glancing at the code!).\n\nI thought that a stepdown would immediately stop any secondaries from syncing from it (and they could be at most 10 seconds out of date) and then a new primary would be elected within a few seconds (at the cost of maybe losing yet-to-be-synced data from the previous primary).\n\nIf I am correct in reading your comment then it then sounds like its much smarter than that; and instead the primary steps down, lets the secondaries continue to sync from it to become up to date (so no data is lost, even if the data was not yet synced from the primary), and then a new primary is elected without data loss.\n\nThe 10 second window is just a way to make sure this 'catch up' process will happen fast (as not much data needs to be synced) as to not delay election of a new primary.\n\nThanks for clearing that up!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/336498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ahzofingen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/398188", "body": "perhaps, this would extend \"life\" for SERVER-3016 issues ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/398188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gamechanger": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/403956", "body": "OMG thank you for fixing this.  Personally a victim of it. :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/403956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mjdominus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/485659", "body": "Damn, I'm glad I'm not as stupid as the guy who wrote this.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/485659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "schmichael": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/485780", "body": "assert is not normally used for buffer overflow protection (as it appears to be in this diff) as it's a macro that doesn't generate any code without NDEBUG defined.\n\nHowever, it appears assert is redefined as MONGO_assert which may properly guard this function even when not compiled with debugging? I couldn't quickly find the definition of MONGO_assert...\n\nAt any rate the standard approach in this case would be to use the strncpy function which only copies up to len bytes. The strcpy/strncpy man page even includes a sample implementation of strncpy.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/485780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/485791", "body": "Excellent. Disaster averted.\n\nI think this commit just got passed around because it's very difficult to tell that assert has non-default behavior.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/485791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mrloureed": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/485786", "body": "in mongo assert is defined even in release builds.  thus this works.\n\nthe idea is that this notifies if the buffer is too small.  strncpy would work but you wouldn't get any notification.  this should never happen thus the abort.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/485786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "bwmcadams": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/485792", "body": "I believe it was passed around as a pre-fix copy of it was found in a third\nparty driver and mistaken for being mongoDB code.  Should be corrected in\nboth places now.\n\nOn Tue, Jul 19, 2011 at 4:53 PM, schmichael <\nreply@reply.github.com>wrote:\n\n> Excellent. Disaster averted.\n> \n> I think this commit just got passed around because it's very difficult to\n> tell that assert has non-default behavior.\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/mongodb/mongo/commit/8b930cb852f4b9eb68036fb3db2ec21568cdb943#commitcomment-485791\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/485792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "rbranson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/485822", "body": "what's wrong with assert? it works doesn't it?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/485822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "codeslinger": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/485978", "body": "I believe it was passed around because apparently this engineer never heard of strncpy(3).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/485978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "agirbal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/511590", "body": "it means that the db will allocate 3GB right off the bat and take a while to start.\nMay be quite painful for someone just testing the db.\nI guess we'll have to remember to tell people to use --smallfiles when trying out mongo.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/511590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "sashka": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/529900", "body": "This line does not affect mongodb parameters in Debian.\nAdmin should create /etc/default/mongo or hotfix start/stop script.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/529900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/529901", "body": "The same as dbpath \u2014 does not affect mongodb parameters in Debian.\nAdmin should create /etc/default/mongo or hotfix start/stop script.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/529901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nehresma": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/551849", "body": "It seems odd to me to have non deterministic tests.  This code seems like it could lead to a test failing one time and succeeding when you try it again.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/551849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "flaper87": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/592364", "body": "I don't know if it is ok to add comments here, if not I'm sorry and won't do it again.\n\nThis makes my build fail saying that thread-local is not supported for this target which is true because osx doesn't support __thread  Adding !defiled(__MACH\\__) makes osx use thread_specific_ptr. I'm using osx Lion and building with no args.\n\nFeel free to delete the comment :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/592364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Spaxe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/695273", "body": "This is a rather odd decision, but I suppose there are reasons behind them.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/695273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "brandondiamond": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/721979", "body": "Bad Scott! Bad!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/721979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "scotthernandez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/728509", "body": "Should it only do this for a replica set and not Master/Slave?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/728509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9875436", "body": "Do not default to current DB if undefined.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9875436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9875640", "body": "DB goes last, and only if specified. Must also change the constructor to accommodate, this is c++ code in v8_db.cpp. The json parser already parses the 3rd (optional db) parameter.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9875640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/13457507", "body": "Probably more correct to replace null with undefined, to indicate it is not set.\n\nOr return the current db. If that is done then fetch can be changed to:\nreturn db.getSiblingDB(getDb()).getCollection(getCollection()).find({ _id : this.$id }):\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/13457507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28456371", "body": "Please remove \"votes\" or only print the value of the vote field (not including the field name). \n\nThis looks odd as is:  \"received vote: 1 votes from ip-10-136-108-244:27017\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/28456371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/42240018", "body": "Please convert to a Microsecond duration before calling count in case we later change the return type of record to something other than microseconds. Best not to mix auto var + .count().\n\ndurationCount<Microseconds>(micros).count()\n\nAlso, durationCount in time_support is nice helper to get long long output.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/42240018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "BinaryPrison": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/838929", "body": "test message\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/838929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "banker": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/966270", "body": "Shouldn't we also globally replace RS_SHUNNED with RS_REMOVED ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/966270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "astaple": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/1122088", "body": "What's the nature of the conflict in the \"using boost::shared_ptr\" implementation?  That fixed the win32 buildbot and is also used in other unit test files.  Should those files be changed as well?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1122088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1122099", "body": "It sounds like either method will work right now, but there are some reasons to avoid 'using boost::shared_ptr'.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1122099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "kamaradclimber": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/1198961", "body": "this test is redundant. maybe you meant ax...|| bx... ?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1198961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "bjori": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/1220016", "body": "No plans to merge the auth part atleast to v2.0?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1220016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1221009", "body": "I can only see this in master, no other branches :]\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1221009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/2539781", "body": "what happened here?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/2539781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/2540023", "body": "I mean with that specific word, it has several spaces which I imagine will break stuff.\nIt should probably have been on a new line\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/2540023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/2853482", "body": "Duplicated?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/2853482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4899580", "body": "bjori@anden:~/Sources/mongo/mongo (SERVER-10010) $ grep -c 'if(' src/mongo/db/repl/rs.cpp\n66\nbjori@anden:~/Sources/mongo/mongo (SERVER-10010) $ grep -c 'if (' src/mongo/db/repl/rs.cpp\n24\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4899580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4900856", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4900856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "sidupadhyay": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/1318817", "body": "@erh What do you think of the redis implementation of TTL? http://redis.io/commands/expire\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1318817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1318923", "body": "Oh ya for sure. Though I'm wondering why you chose an active method for\nexpiring the keys, as opposed to the more passive method used in redis.\n\nOn Fri, May 11, 2012 at 12:44 AM, Eliot <\nreply@reply.github.com\n\n> wrote:\n> \n> Its hard to compare directly as the whole system is so different.\n> \n> On Fri, May 11, 2012 at 1:42 AM, Sid Upadhyay\n> reply@reply.github.com\n> wrote:\n> \n> > @erh What do you think of the redis implementation of TTL?\n> > http://redis.io/commands/expire\n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > \n> > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318817\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318826\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1318923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1321463", "body": "Ya, which is a pretty interesting choice with respect to performance\ntradeoffs. I'll have to build this version of mongo and play around with it\nto see what real performance tradeoffs there could be. Though I'm sure they\npale in comparison to the value of TTL.\n\nOn Fri, May 11, 2012 at 6:16 AM, Eliot <\nreply@reply.github.com\n\n> wrote:\n> \n> From the docs, redis seems to do it both passively and actively.\n> \n> On Fri, May 11, 2012 at 2:16 AM, Sid Upadhyay\n> reply@reply.github.com\n> wrote:\n> \n> > Oh ya for sure. Though I'm wondering why you chose an active method for\n> > expiring the keys, as opposed to the more passive method used in redis.\n> > \n> > On Fri, May 11, 2012 at 12:44 AM, Eliot <\n> > reply@reply.github.com\n> > \n> > > wrote:\n> > > \n> > > Its hard to compare directly as the whole system is so different.\n> > > \n> > > On Fri, May 11, 2012 at 1:42 AM, Sid Upadhyay\n> > > reply@reply.github.com\n> > > wrote:\n> > > \n> > > > @erh What do you think of the redis implementation of TTL?\n> > > > http://redis.io/commands/expire\n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > \n> > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318817\n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > \n> > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318826\n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > \n> > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318923\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1319884\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1321463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/1321547", "body": "Sure thing Eliot! I'll try to run some tests this evening with idle load\nfor TTL jobs in the background, and I'll use the previous commit as the\nbaseline. Keep ya posted!\n\nOn Fri, May 11, 2012 at 12:46 PM, Eliot <\nreply@reply.github.com\n\n> wrote:\n> \n> Would be great if you could run those tests and share results :)\n> \n> On Fri, May 11, 2012 at 1:43 PM, Sid Upadhyay\n> reply@reply.github.com\n> wrote:\n> \n> > Ya, which is a pretty interesting choice with respect to performance\n> > tradeoffs. I'll have to build this version of mongo and play around with\n> > it\n> > to see what real performance tradeoffs there could be. Though I'm sure\n> > they\n> > pale in comparison to the value of TTL.\n> > \n> > On Fri, May 11, 2012 at 6:16 AM, Eliot <\n> > reply@reply.github.com\n> > \n> > > wrote:\n> > > \n> > > From the docs, redis seems to do it both passively and actively.\n> > > \n> > > On Fri, May 11, 2012 at 2:16 AM, Sid Upadhyay\n> > > reply@reply.github.com\n> > > wrote:\n> > > \n> > > > Oh ya for sure. Though I'm wondering why you chose an active method\n> > > > for\n> > > > expiring the keys, as opposed to the more passive method used in\n> > > > redis.\n> > > > \n> > > > On Fri, May 11, 2012 at 12:44 AM, Eliot <\n> > > > reply@reply.github.com\n> > > > \n> > > > > wrote:\n> > > > > \n> > > > > Its hard to compare directly as the whole system is so different.\n> > > > > \n> > > > > On Fri, May 11, 2012 at 1:42 AM, Sid Upadhyay\n> > > > > reply@reply.github.com\n> > > > > wrote:\n> > > > > \n> > > > > > @erh What do you think of the redis implementation of TTL?\n> > > > > > http://redis.io/commands/expire\n> > > > > > ---\n> > > > > > \n> > > > > > Reply to this email directly or view it on GitHub:\n> > > \n> > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318817\n> > > \n> > > > > ---\n> > > > > \n> > > > > Reply to this email directly or view it on GitHub:\n> > > \n> > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318826\n> > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > \n> > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1318923\n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > \n> > > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1319884\n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > \n> > https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1321463\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> \n> https://github.com/mongodb/mongo/commit/25bdc679a0e559d64ec7f22b0468cf5b1671c4e7#commitcomment-1321501\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/1321547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mixonic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/2039685", "body": "Oh snap! Hari K opening his sources!\n![Hari](http://farm2.staticflickr.com/1332/980464134_23807e3eb2.jpg)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/2039685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "fancyremarker": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/2039697", "body": "That's not Hari! That man has hair!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/2039697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "bigbenzie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/2358425", "body": "what's  happening  before \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/2358425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "PLW": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/2539991", "body": "Hi Hannes,\n\n```\nText Search will be released with 2.4.   It is presently available in\n```\n\n2.3.2.\n\n-P\n\nOn Thu, Jan 31, 2013 at 4:15 PM, Hannes Magnusson\nnotifications@github.comwrote:\n\n> what happened here?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mongodb/mongo/commit/f201972ecc87f099777e1c61f269998f4399caf4#commitcomment-2539781.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/2539991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "alexism": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/2950167", "body": "the key should be pidfilepath\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/2950167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16320136", "body": "yes. Functions from `/etc/init.d/functions` typically don't add the line return.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16320136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16320165", "body": "it's needed because the previous `echo` uses `-n`.\nI could remove both.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16320165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "wojons": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/3291355", "body": "any plans on this getting merged in, i am running into maxconnection limits issues almost everyday.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/3291355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/3291742", "body": "I am the sysadmin of a system that gets more then 20k connections a second\nwe spike upto 60k/req a second. We have a 3 shard cluster with 3 members in\nthe replica set. The machines are fine they are amazon's cr1.8xlarge nodes.\nOn May 26, 2013 2:48 PM, \"Daniel Pasette\" notifications@github.com wrote:\n\n> We weren't planning to backport this change, but it's usually not a good\n> idea to run with more than 20k conns. Have you looked into why your\n> connection load is so heavy?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mongodb/mongo/commit/99e6e03543459cf6c4fea61dc6d3c9b4b2ba5ed3#commitcomment-3291673\n> .\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/3291742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "AndrewCEmil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/3314111", "body": "SERVER-9497 is the ticket associated with this commit\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/3314111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tscopp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/3527929", "body": "This log message made my entire evening (during which I was harshly awoken and summoned to fix things). You are a hero, nay, a champion. I salute you.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/3527929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "robsiwicki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/4030311", "body": "Hi - just noted that the VC++ 2010 project still contains references to principal.cpp and wont build.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/4030311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "js-n": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/4050266", "body": "Excellent :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/4050266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gianpaj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/4110206", "body": "should we enable this now?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/4110206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "barretod": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/4178310", "body": "Great! \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/4178310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "FrancescaK": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/4867427", "body": "Whoot! Thanks Matt\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/4867427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jsbattig": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/5193525", "body": "This file doesn't exist anymore in the repo. \nI found lots of files still present on the VS2010 project file that changed location, or simply have been deprecated and don't exist anymore.\nThe VS2010 project can't compile as is right, I can't say for sure, but probably there's about 50 files either missing or mislocated.\nI was trying to make it compile to fix a very bad issue regarding Windows kernel scheduler and timer resolution that cause tailable cursors to underperform unless there's another program running on the computer who has altered the resolution of Windows using  timeBeginPeriod(n).\n\nWhat are the plans to fix the VS2010 solution file?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/5193525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/5216065", "body": "Are you planning to get this timedWaitToBeNotified() function back?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/5216065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841294", "body": "yes. Will fix the comment.\n\nOn Tue, Aug 5, 2014 at 3:55 PM, Benety Goh notifications@github.com wrote:\n\n> In src/mongo/util/time_support.cpp:\n> \n> > @@ -669,9 +669,26 @@ namespace {\n> >      void sleepsecs(int s) {\n> >          Sleep(s*1000);\n> >      }\n> > +\n> > -    extern \"C\" unsigned int __stdcall timeBeginPeriod( unsigned int ms );\n> > -    extern \"C\" unsigned int __stdcall timeEndPeriod( unsigned int ms );\n> > -    // Notice bellow the arbitrary nature of 50ms set as the \"minimum\" timer resolution\n> > -    // There seems to be no complete agreement on that _is_ the default timer resolution in Windows.\n> \n> did you mean \"what\" instead of \"that\"\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mongodb/mongo/pull/618/files#r15841097.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841377", "body": "I added the comments to Mongo engineers have more context... not meant to\nstay in the code.\nI decided to add them after it became apparent that folks from Mongo where\ngoing to take the code, and merge it manually.\n\nOn Tue, Aug 5, 2014 at 3:56 PM, Benety Goh notifications@github.com wrote:\n\n> In src/mongo/util/time_support.cpp:\n> \n> > ```\n> >  void sleepmillis(long long s) {\n> >      fassert(16228, s <= 0xffffffff );\n> > ```\n> > -        // When our waiting period falls bellow Windows min resolution, let's set resolution\n> > -        // to 1 ms. Note that this change may effect all kernel scheduler thread operations.\n> > -        // Apparently this changes the Windows kernel \"quantum\" length\n> > - ```\n> >      // see http://msdn.microsoft.com/en-us/library/windows/desktop/dd757624(v=vs.85).aspx\n> >   ```\n> > - ```\n> >      // Applications such as Google Chrome seem to do this during the life of Chrome, that's why\n> >   ```\n> \n> \"Application... Chrome... that's why\"\n> I wouldn't bother with this comment in the code.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/mongodb/mongo/pull/618/files#r15841187.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15841377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851444", "body": "@benety , sorry, I don't understand your comment. Are you saying this declaration shall be available on some msdn include file?\nI tried to avoid full inclusion of <Windows.h> header file. The approach was minimally invasive to the code just declaring the extern. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851562", "body": "@benety , will this declaration work?\n\n``` c\nstatic int isBelowWindowsMinResolution(long long)\n```\n\ndo you have a preferred way to declare inline functions? As far as I know, different compilers have different extensions to denote inline and many times they simply ignore them.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851589", "body": "Fixed comments.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851645", "body": "@benety , yes, we could do that. According to the documentation Windows will take the lowest value passed as a parameter so I assume there should be no issues with other threads calling this API with higher values breaking our logic in that way.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851707", "body": "@benety , I'm not sure if we should set it once or the whole app. In fact, I find that too disruptive for the whole operation of the system hijacking that parameter. If Windows has a given default, I think we should honor changing that for the shortest period of time. That's the reason I preferred to implement this using the approach of set the value we need, call Sleep() and get it back to normal.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15851707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15853317", "body": "@benety , if you prefer include header file, please let me know which one. only one I know will get this for sure is \n\n``` c\n<windows.h>\n```\n\n but that will be huge inclusion and I didn't see it already included anywhere in the file, that's why I tried to avoid it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15853317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15879981", "body": "@benety , I will try to use the header. I leave it up to you guys, but surely that will bring a bunch of other unnecessary declarations and I doubt MS changes in the future the prototype of this function. Apparently it's a very old API.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15879981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15913762", "body": "I've added the mmsystem include here because if I add it on top compiler bombs out with conflicting declarations in mongo's headers\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15913762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15918279", "body": "Got it. Will fix and push.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15918279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ehershey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/6498113", "body": "(cherry-picked from commit 6a3d6d0affbff6249caa50897dcbe325eb45aea9)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/6498113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/12646596", "body": "@shreyasp can you email the mongodb-user user group? This is probably not a great venue for troubleshooting your problem. \n\nhttps://groups.google.com/forum/#!forum/mongodb-user\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/12646596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19555093", "body": "How about this minor adjustment to the text?\n\nPackages are created dynamically by the package.py script located in the buildscripts directory. This will \ngenerate RPM and Debian packages.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19555093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "ntang": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/6814992", "body": "This is actually for SERVER-13753 I believe.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/6814992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "siying": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/7411206", "body": "Is there a reason a new snapshot is created after committing a unit, instead of in beginUnitOfWork()?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411263", "body": "Can you take a look at patch: https://reviews.facebook.net/D21381 and see whether the interface works for you?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411274", "body": "Do you expect \"status.IsNotFound()\" is possible here? I assume the handling of corruption or IOException should be different from NotFound.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411294", "body": "rocksdb::DB::GetLiveFilesMetaData() can return you information about the LSM tree, including each files' level and key range.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411322", "body": "I cannot think of any way of doing that. What's the use case of that? We can consider whether adding something like can help.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411336", "body": "Is a shorter separator possible with your key structure?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411364", "body": "Usually, the best practice is to check _iterator.status() if it is not valid, and handle the case like corruption or IOException accordingly.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411372", "body": "What's the problem of it?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411380", "body": " _checkStatus()?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411413", "body": "This return value is a little bit confusing to me. KeyMayExist() does bloom filter check so that even true is returned, the key still may not exist in the DB. Is it what this comment line mean?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411463", "body": "Hi, I'm glad to be able to see the progress. I have some inline comments.\n\nAnother question: last Tuesday, I heard someone said that RecoveryUnit::isCommitNeeded() is going away. Is it still going to happen?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411635", "body": "Is it merged already? If it is, can you point me the revision?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411642", "body": "A question inline.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7411642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429245", "body": "@RedBeard0531 the iterator interface comes from LevelDB. I don't know the answer:)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429405", "body": "@RedBeard0531  here is my understanding. A snapshot is technically correct from any time before the first read/write in a transaction (correct me if I'm wrong). The later the snapshot is declared, the performance of RocksDB is likely to be better, because outstanding snapshots during a RocksDB mem table flushing will force us to keep two copies. Seems to me that it will also better for MongoDB since it is less counter-intuitive for users.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429450", "body": "@RedBeard0531 thanks. I'll take a look at https://github.com/mongodb/mongo/commit/e970e918c5300a13360edb57a88871b02dbe5982 \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429522", "body": "@RedBeard0531 can you give more context about why people want to do it? I understand that by issuing a touch before issuing the query, the extra query time will be reduced. But the total time that a user needs to spend on waiting is not reduced, right?\n\nAgain, technically, it is technically possible for us to add a feature to warm to cache for a column family. Just try to understand the exact use case.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429753", "body": "@RedBeard0531  probably I have some misunderstanding about how RecoveryUnit is used. In my understanding, after removing CommitIfNeeded(), one transaction will use one RecoveryUnit, which includes one snapshot and one write batch. commitUnitOfWork() will be called when committing one transaction, and the refreshed _snapshot will be used by the next transaction, if we want to reuse the recovery unit. Am I understand correctly?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7429753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7434903", "body": "Did I miss anything? In dropDatabase(), while _entryMapMutex is hold, closeDatabase() is called, where _dbCatalogMapMutex is hold?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7434903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7434937", "body": "lock _dataSizeLock is still hold here. Is it expected?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7434937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7435347", "body": "I don't understand. How is it possible unless there is a bug in RocksDB? Reverse Seek() returns !Valid(), should mean the look-up key is smaller than the smallest key in the DB. Did you see it happening?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7435347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7542725", "body": "Hi, this patch broke the build when RocksDB is enabled. Do you want to make sure storage/rocks is still buildable after changing the storage APIs?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7542725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/8579554", "body": "Thanks @benety !\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/8579554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16799090", "body": "Will fix.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16799090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16908420", "body": "This parameter list is copied from getIndexColumnFamily(). Do you mean it didn't follow the code convention either?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16908420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16922426", "body": "Removed boost::optional<> from parameter list.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/16922426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17490083", "body": "Sure. I'll be glad to change it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17490083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "igorcanadi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/7823105", "body": "why NULL here :(\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7823105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7855033", "body": "This change seems to have broke my build.\n\n```\nscons: Reading SConscript files ...\nscons version: 2.0.1\npython version: 2 6 6 'final' 0\nAttributeError: 'module' object has no attribute 'TestCase':\nFile \"/data/users/icanadi/mongo/SConstruct\", line 513:\nenv = Environment(**envDict)\nFile \"/usr/lib/scons/SCons/Environment.py\", line 991:\napply_tools(self, tools, toolpath)\nFile \"/usr/lib/scons/SCons/Environment.py\", line 105:\nenv.Tool(tool)\nFile \"/usr/lib/scons/SCons/Environment.py\", line 1691:\ntool = SCons.Tool.Tool(tool, toolpath, **kw)\nFile \"/usr/lib/scons/SCons/Tool/__init__.py\", line 94:\nmodule = self._tool_module()\nFile \"/usr/lib/scons/SCons/Tool/__init__.py\", line 109:\nreturn imp.load_module(self.name, file, path, desc)\nFile \"/data/users/icanadi/mongo/site_scons/site_tools/mongo_unittest.py\", line 7:\nfrom buildscripts import smoke\nFile \"/data/users/icanadi/mongo/buildscripts/smoke/__init__.py\", line 4:\nimport executor\nFile \"/data/users/icanadi/mongo/buildscripts/smoke/executor.py\", line 15:\nimport testers\nFile \"/data/users/icanadi/mongo/buildscripts/smoke/testers.py\", line 18:\nclass JSUnitTest(unittest.TestCase):\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7855033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7855570", "body": "Tnx @monkey101 !\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7855570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/7882354", "body": "Any reason why is this NULL here? RocksDB SIGSEGVs because it's expecting OperationContext.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7882354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/11798433", "body": "Awesome! Time to remove https://github.com/mongodb-partners/mongo-rocks/blob/master/.clang-format :)\n\nBTW are you planning to backport this to 3.0?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/11798433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/11821596", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/11821596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/14720651", "body": "Hey Mathias! Do we need to apply the same patch to MongoRocks, too? Would it make sense to move the test to generic storage_engine tests?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14720651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/16360831", "body": "Interestingly, looks like this commit caused RocksDB to start failing jsCore_small_oplog and jsCore_small_oplog_rs with OOM issues:\n\n![screen shot 2016-02-26 at 11 27 04 am](https://cloud.githubusercontent.com/assets/1091023/13362955/ff5c8ade-dc7b-11e5-89e8-f886310aa46a.png)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/16360831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/16360900", "body": "Here's the test output: https://logkeeper.mongodb.org/build/56cf5f1abe07c44a012dc316/test/56cf5fbbbe07c44a012ddba0?raw=1\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/16360900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/17551261", "body": "Hey @andy10gen, this diff introduced a bunch of failures for me: https://gist.github.com/igorcanadi/1dca04aa6f6506a4ce6ffb5cf5fb72d3.\n\nI'm using g++ 4.8.5, is this a known problem?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/17551261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17702342", "body": "Sure. Should I put it in .gitignore in rocks/ directory?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17702342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19423762", "body": "Can we copy ResourceId? We can have onCollectionLock() return ResourceId that is then passed as argument to onCollectionUnlock().\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19423762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "lukebrowning": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/7932107", "body": "Is there going to be another 2.6.5 release candidate?  If so, can we get this included?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7932107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "corentinbaron": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/7938561", "body": "8192 Alignment size raized the fassert 16143 on my PPC systems, this is why I changed it in the first place.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/7938561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17174541", "body": "Well I'm a Linux dev, I'd be glad to know the equivalent on other systems. I'll propose it again with these and their calls between #ifdefs \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17174541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17174544", "body": "Unfortunately, AlignedBuilder::Alignment being static const, we'd need to either make it runtime changeable (bad) or use a macro. We can also use one defined by scons and filled with the result of $(getconf PAGESIZE) on Linux systems.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17174544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "prabhu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/8213403", "body": "Under Centos 7, mongod is in /usr/bin\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/8213403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "syllogismos": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/8594012", "body": "I have to run this query `db.collection.distinct(\"user\", {\"method\": \"ImAMethod\"})`\nI already indexed on `method` field, so my query is fully covered(is my query fully covered?), and I'm not able to see any improvement on the time if I index `user` field seperately.. or do I need to have an index that covers both `method` and `user` like `{user: 1, method: 1}` or `{method: 1, user: 1}`\n\nRight now its taking 3mins to get distinct users that satisfy the above query, around 12 million documents in my collection.. single 4GB machine..\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/8594012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/8600997", "body": "Ok. I will, thanks, just got excited I found the commit that I'm looking for.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/8600997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "amidvidy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/8598112", "body": "@syllogismos, please take your question over to the [mongodb-user](https://groups.google.com/forum/#!forum/mongodb-user) mailing list. We use github exclusively for development related matters.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/8598112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/13316346", "body": ":cake: :fireworks: :smile: \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/13316346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/17565574", "body": "good stuff \ud83d\udc4d \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/17565574/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/21748422", "body": "RIP", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/21748422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "damien-sticky": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/8872031", "body": "After updating fedora or redhat system , with previous versions of mongod you may have this error :\n**_ERROR: Cannot write pid file to /var/run/mongodb/mongod.pid: No such file or directory**_\nIf it happen for you patch  your /etc/init.d/mongod script following this commit\n\nWhy ?\nReHat fedora, cent os...Fedora has changed how things works (breaking third party software...thx)\nAfter each reboot mongo will not start because the permission has gone in /var/run \nAfter each reboot you could not restart until you make this \n\n``` bash\nmkdir -p  /var/run/mongodb/ ;chown -R  mongod:mongod /var/run/mongodb/\n```\n\n**you should better edit your script with the commit mod**\n\n```\nvim /etc/init.d/mongod\n```\n\nthx mwmahlberg  for the fix, I leave this comment for others coming from ggl\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/8872031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kangas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/8878676", "body": "Note, this fix has been backported to the v2.6 branch (ddce701ed775996f2a49fc949e26c5bcbc38fe84) and is present in 2.6.5 onward.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/8878676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/9220684", "body": "@benmccann - yes, those tickets are all assigned to Mathias and with fixVersion = next release candidate. They'll be resolved when the RC ships or fixVersion will be bumped.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/9220684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/7881753", "body": "Tyler, this compiles and runs fine. But I have one small request:\n\nPlease change target to \"util/version_test\" so the executable is written to a corresponding \"util\" directory, rather than the build root. \"time_support_test\" works it the way I'm suggesting. \"safe_num_test\" and others in that SConscript sadly do not.\n\nArguably we should add a utils/SConscript and move all utils env.CppUnitTest definitions, cleaning this up in one fell swoop. But that can wait for another day.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/7881753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/7970987", "body": "+1!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/7970987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/7971084", "body": "Let's discuss with Dan. I'd like to find wording that will be reasonably true 6, 12, 24 months from now. I don't know if the \".w\", \".x\", nomenclature is a permanent thing.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/7971084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9588370", "body": "@visualzhou , when I apply your pull request to master (commit aff6a0bba39634759e24dfe116a7e393a79e6baf) and run this test, I get the following failure. Is this expected?\n\n```\n2014-02-10T10:47:41.705-0500 TypeError: Cannot call method 'hasWriteErrors' of undefined at /data02/workspace/mongo/jstests/core/opcounters.js:27\nfailed to load: /data02/workspace/mongo/jstests/core/opcounters.js\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9588370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9893650", "body": "Much better.\n\nMinor nit: three lines are repeated in both branches of this if/else. Cleaner if you pull them out of the conditional?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9893650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9991628", "body": "Why?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9991628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12021794", "body": "This seems to be the case where you append an empty string or \"s\". Interesting idea. Should we do this in the other cases instead of appending \"document\" or \"documents\"?\n\nNot a blocker, just a thought.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12021794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12027133", "body": "Agree, I doubt there is a performance impact either way. I was just thinking about code style consistency.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12027133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/14312697", "body": "Strike this fixed ulimit change before merging\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/14312697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/14312783", "body": "Change SYSCONFIG to use $BASENAME also?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/14312783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17726809", "body": "Or better, add to your local repository excludes file in .git/info/exclude\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/17726809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/21475184", "body": "We should pass errno to errnoWithDescription(), even though it happens to work as-is.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/21475184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/21550576", "body": "Let's use std::numeric_limits<size_t>::max() rather than the C macro SIZE_MAX.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/21550576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "benmccann": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/9211842", "body": "Can https://jira.mongodb.org/browse/SERVER-3719 be marked as fixed now that this change is in or is there more to do still?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/9211842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/9211866", "body": "Looks like maybe https://jira.mongodb.org/browse/SERVER-7804 and https://jira.mongodb.org/browse/SERVER-3304 can be marked as resolved now too\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/9211866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/9212256", "body": "Should https://jira.mongodb.org/browse/SERVER-16734 be closed as fixed now?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/9212256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/9220918", "body": "Cool. Gotcha. Thanks for explaining how the process works\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/9220918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/9220974", "body": "I figured you would mark tickets as fixed when the commit goes into to address them and then release the next RC when all the tickets assigned to that RC are fixed (or bumped to a later RC). If you don't mark them as fixed when the commit goes in, but rather when the RC is released then how do you decide it's time to release the RC?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/9220974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/9221245", "body": "Oh, looks like they have been marked as resolved now instead of waiting for the RC to ship\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/9221245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22573082", "body": "@erh what kernel versions need to be supported today? It's almost two years later, so I'm wondering if the situation has changed at all\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22573082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22986323", "body": "Thanks @erh! Really appreciate it. It's very helpful to know what we're targeting.\n\n@jcalvinowens it looks like since we have to target 2.6.18 that CLOCK_PROCESS_CPUTIME_ID, CLOCK_THREAD_CPUTIME_ID, CLOCK_REALTIME, and CLOCK_MONOTONIC are available according to [the man page](http://man7.org/linux/man-pages/man2/clock_gettime.2.html). Is knowing that we have to target 2.6.18 enough to unblock you?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22986323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "veselov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/10323126", "body": "This diff doesn't remove V8_HOST_CAN_READ_UNALIGNED define in case of x86/x64 arches (in src/third_party/v8/src/globals.h), is that intended? The binary crashes on x64 with 4.9.2 all the same...\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/10323126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tushki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/10634763", "body": "Do i have to add these files\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/10634763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "MichaelBrenden": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/10675387", "body": "What is the option necessary to make this work?\nI tried the various settings here:\nhttps://jira.mongodb.org/browse/SERVER-965\nand all fail.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/10675387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/10675555", "body": "nope - does not work (mongo 3.0.1)\nreturns this error in mongo log:\n\n\"I STORAGE  [initandlisten] exception in initAndListen: 72 Metadata contains unexpected value storage engine option for directoryForIndexesExpected true but got falseinstead, terminating\"\n\nfrom this command line:\n\n\"/usr/local/mongo/bin/mongod --wiredTigerDirectoryForIndexes -f /etc/mongo/mongodb.conf\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/10675555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/10693151", "body": "# mongodb.conf\n\ndbpath=/data/wt1\nlogpath=/data/log\nlogappend=true\nport=27017\nunixSocketPrefix=/tmp\nrest=true\nhttpinterface=true\njournal=true\ndirectoryperdb=true\nfork=true\nreplSet=rs1\nstorageEngine=wiredTiger\ndirectoryForIndexes=1\n### \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/10693151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/10696462", "body": "wiredTigerDirectoryForIndexes=1 (instead of directoryForIndexes=1) also fails with same error above\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/10696462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ramonfm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/10698304", "body": "Please see [this comment in SERVER-965](https://jira.mongodb.org/browse/SERVER-965?focusedCommentId=878839&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-878839).\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/10698304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/15809830", "body": "This file is unfortunately out of date, but you can generate a new one as follows:\n`buildscripts/errorcodes.py -o errors.md --report=markdown`\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/15809830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/19801835", "body": "Please see [this comment](https://jira.mongodb.org/browse/SERVER-21388?focusedCommentId=1165442&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-1165442).\r\n\r\nThanks,\r\nRam\u00f3n.", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/19801835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "fusghk77": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/11922086", "body": "t\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/11922086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "michaelcahill": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/12125148", "body": "Thanks, @monkey101 -- this fell through the cracks.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/12125148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/62282580", "body": "@SunguckLee, I'm very concerned about making this change in general: I think there must be something going wrong elsewhere when WiredTiger is running your workload if there are no leaf pages in cache.\n\nWe could change it to this condition to make sure at least one internal page is considered:\n\n``` c\n        if (WT_PAGE_IS_INTERNAL(page) &&\n            !FLD_ISSET(cache->state, WT_EVICT_PASS_AGGRESSIVE) &&\n            internal_pages > (int)(evict - start) / 2)\n```\n\nCan you check if that helps?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/62282580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "charleslxh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/13699220", "body": "I try to update a minutes array(this array is not exist) with upsert & $ positional operator. I need it automatic create a minutes array, but created a minutes object.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/13699220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jancarloviray": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14110800", "body": "Many many thanks! Glad to see that MongoDB listens to their audience :)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14110800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "akrsmv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14420475", "body": "Hi, and thanks a lot for the fix and comments, so I was able to find it and get my headache off :) I use OpenSuse and installed mongodb as suggested from this repo https://repo.mongodb.org/zypper/suse/11/mongodb-org/3.0/x86_64/\n\nThing is that in my setup this line was not present: https://github.com/mongodb/mongo/commit/50ca596ace0b1390482408f1b19ffb1f9170cab6#diff-9e766216c0a0f6c97a410cc283361eb0R27\nand had to manually add it in order to have the full fix. Not sure if it got lost somewhere among the branches, so just to let you know. Thanks again.\n\nMy Mongodb version is 3.0.6\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14420475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "blackside": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/14784162", "body": "Ive seen a lot of complaints about missing pid dir when running Centos7 / systemd \nHere is a tip: You should make sure /var/run/mongodb exists by  adding a file \n\n/etc/tmpfiles.d/mongod.conf \n\nIt should contain the following\n\nD /var/run/mongodb 0755 mongod mongod -\n\nThis will ensure that the pid folder always exists. Has worked well for me and seems to be the systemd way of doing it...\nhttp://www.freedesktop.org/software/systemd/man/tmpfiles.d.html\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/14784162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "andycristea": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/15195260", "body": "Same problem here with OpenSuse and the line missing from the init file! Thanks!\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/15195260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ecocode": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/15235492", "body": "On my system it seems that the logged ip address is from the server ! It should be the client ip.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/15235492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "SethSanchez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/15804057", "body": "Hi!\n\nIs there a more updated list I should be looking at? I'm not finding error codes: 16540 or 16549, which are referenced in Moped error messages:\n\n```\nSee https://github.com/mongodb/mongo/blob/master/docs/errors.md for details about this error.\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/15804057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Poil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/16004242", "body": "Are you sure that the User/Group is mongod and not mongodb ? (On wheezy it's mongodb)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/16004242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "chirilaionut": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/16032794", "body": "Hi, after an update from mongo 3.0 to 3.2 I get an error on $substr while trying to search inside a collection. I do know how to interpret or fix this error. Any help?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/16032794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/16038431", "body": "Thanks for the response. I think this may be it. I will post the outcome after we modify out code.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/16038431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tianon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/16048270", "body": "Doesn't this mean that the packages for Jessie will _not_ contain the sysvinit script in addition to the systemd service file?  Jessie changed the default to systemd, but sysvinit is still actively supported, so it would be neat/helpful if the package contained both to maintain compatibility. :smile:\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/16048270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "benzmuircroft": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/17392419", "body": "Those lines were already in my init file (MongoDB shell version: 3.0.11 on centos 7) but I still had to manually create the folder\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/17392419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "moltar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/19261124", "body": "@tychoish this commit breaks majorly!\n\nsystemd reads the values literally and completely ignores the fact that \"#\" is a comment.\n\n```\nOct 01 14:35:15 hostname systemd[1]: [/lib/systemd/system/mongod.service:10] Failed to parse resource value, ignoring: infinity # file size\nOct 01 14:35:15 hostname systemd[1]: [/lib/systemd/system/mongod.service:11] Failed to parse resource value, ignoring: infinity # cpu time\nOct 01 14:35:15 hostname systemd[1]: [/lib/systemd/system/mongod.service:12] Failed to parse resource value, ignoring: infinity # virtual memory size\nOct 01 14:35:15 hostname systemd[1]: [/lib/systemd/system/mongod.service:13] Failed to parse resource value, ignoring: 64000 # open files\nOct 01 14:35:15 hostname systemd[1]: [/lib/systemd/system/mongod.service:14] Failed to parse resource value, ignoring: 64000 # processes/threads\nOct 01 14:35:15 hostname systemd[1]: [/lib/systemd/system/mongod.service:15] Unknown lvalue 'TasksMax' in section 'Service'\nOct 01 14:35:15 hostname systemd[1]: [/lib/systemd/system/mongod.service:16] Unknown lvalue 'TasksAccounting' in section 'Service'\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/19261124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/19274697", "body": "Can be easily reproduces with this Vagrant box:\n\n```\nBASE_BOX = \"debian/jessie64\"\nBASE_BOX_VERSION = \"= 8.2.0\"\n```\n\n```\nvagrant@hostname:~$ cat /etc/os-release\nPRETTY_NAME=\"Debian GNU/Linux 8 (jessie)\"\nNAME=\"Debian GNU/Linux\"\nVERSION_ID=\"8\"\nVERSION=\"8 (jessie)\"\nID=debian\nHOME_URL=\"http://www.debian.org/\"\nSUPPORT_URL=\"http://www.debian.org/support/\"\nBUG_REPORT_URL=\"https://bugs.debian.org/\"\n```\n\nSorry don't have a JIRA account, please add it there.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/19274697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "happyhappiness": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/19800770", "body": "May I ask for the reason about this revert??", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/19800770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "blackmatch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/20142524", "body": "After I installed the MongoDB(version:3.4.0) on centOS7, I could not find the /etc/init.d/mongod file. So, I created it manually. And pasted the code from github repo (/rpm/init.d-mongod). And then execluded 'chmod 0755 mongod'. Still not working!Anyone help?", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/20142524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/20169844", "body": "@wingzero0 I fix it by creating /lib/tmpfiles.d/mongodb.conf with content \"d /var/run/mongodb 0755 mongod mongod\". And then reboot.", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/20169844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "wingzero0": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/20166563", "body": "@blackmatch I got the same error for centos 7 (my version is 7.3), mongo 3.4\r\n\r\nI fix it by replacing /etc/systemd/system/multi-user.target.wants/mongod.service\r\nwith this repo newest version of mongo/rpm/mongod.service\r\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/20166563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "benaw": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/20254447", "body": "Im", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/20254447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/20254450", "body": "Z", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/20254450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/comments/20254451", "body": "Zd x", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/20254451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "newjunwei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/20420640", "body": "good", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/20420640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Loki-Afro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/21625184", "body": "thank you!", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/21625184/reactions", "total_count": 2, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "NONE"}], "review_comments": []}, "moderndeveloperllc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/23535705", "body": "@derickr This may seem superfluous, but you may want to stick a few extra tests in:\r\n\r\n1.  A non-Daylight Savings Time datetime for one of the US locations. Christmas would be a safe date to use.\r\n2. A July datetime, but before 1918 (when DST was established in the US).\r\n\r\nThe above two will give you the same time. If y'all are using the ICU libraries, this shouldn't be an issue, but you never know with timezones when something will go wonky!", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/23535705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "leolux": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/24143541", "body": "Is the default dbPath still correct? According to the current documentation the default path is \"/data/db\" [1]\r\n[1] https://docs.mongodb.com/manual/reference/configuration-options/#storage.dbPath", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/24143541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "brokerdavelhr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/25215711", "body": "Trying to report an error. \r\n\r\nI was running mongodb v3.4.9 with no issue - but when I updated to v3.4.10, nothing works. All I get is member of replica set 1 not being able to connect to the other (according to the mongo logs on port 27017), when it did just fine before. Both servers on same subnet and can other wise 'talk' just fine using graylog, elasticsearch, ssh, etc etc. Just not in mongo anymore. \r\nI tried to re-install on straight new install of 3.4.10. I found that removing the brackets on the ip addresses in the bindIp section allowed the db to run using following:\r\nmongod --config /etc/mongod.conf --dbpath /var/lib/mongodb\r\nhowever, when I tried to login, I got the following:\r\ndshirk@netenggraylog01:~$ mongo --host 10.x.x.x\r\nMongoDB shell version v3.4.10\r\nconnecting to: mongodb://10.x.x.x:27017/\r\n2017-10-26T12:01:36.067-0600 W NETWORK  [thread1] Failed to connect to 10.x.x.x:27017, in(checking socket for error after poll), reason: Connection refused\r\n2017-10-26T12:01:36.067-0600 E QUERY    [thread1] Error: couldn't connect to server 10.x.x.x:27017, connection attempt failed :\r\nconnect@src/mongo/shell/mongo.js:237:13\r\n@(connect):1:6\r\nexception: connect failed\r\n\r\nWhere do I report this? Thanks! and sorry for the clutter!", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/25215711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "MarkAgarunov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/25238640", "body": "Hello @brokerdavelhr,\r\n\r\nI'm sorry to hear you're experiencing this issue. To report a bug in MongoDB, you can [create an issue in JIRA](https://jira.mongodb.org/secure/Dashboard.jspa), which we use to track work on MongoDB. For MongoDB-related support discussion please post on the [mongodb-user group](https://groups.google.com/group/mongodb-user) or [Stack Overflow with the `mongodb` tag](https://stackoverflow.com/questions/tagged/mongodb). \r\n\r\nAdditionally, see our [Technical Support page](https://docs.mongodb.org/manual/support) for additional support resources.\r\n\r\nThanks,\r\nMark", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/25238640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "vcunat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/comments/25360987", "body": "@markbenvenuto: I suppose it wasn't intentional to add a new file during the cherry-pick:  src/mongo/s/catalog/sharding_catalog_create_database_test.cpp\r\n\r\nThe same applies for the 3.0 branch: b70b91f98c479d", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/comments/25360987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hoffrocket": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130", "body": "should be \"return LOG_INFO;\"\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132", "body": "pragram ->  program\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/196132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jcalvinowens": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4148483", "body": "Hmm, ok. Is there a specific distro you've in mind there? I got 2.6.31 out of the upstream git tree, but it's possible the COARSE clock was backported by some distros... not sure. I could try and check.\n\nThe truly correct thing to do is to check for it at runtime I suppose, and fall back to MONOTONIC_RAW. Problem is, go back far enough and all you have is MONOTONIC, which is skewed by ntp updates... \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4148483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "hkhalsa": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4436571", "body": "We need CHECK to still be fatal, especially in non-debug mode.  Maybe a verify(x) after the vlog?\n\nI think we want:\nerror() << **FILE** << .. (and so on) verify(x);\nwhen the check fails.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4436571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4437693", "body": "It isn't?  ~LogMessageFatal calls ::abort() which should stop the server.  Did you see different behavior in practice?\n\nVerify stops the server if the condition is false and prints out a stack trace/other info.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4437693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4550584", "body": "I agree.  Thanks for looking into this.  Should be good to pull once that change is made.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4550584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "svetlyak40wt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4437589", "body": "Well, original CHECK is not fatal. Do you really think this should be changed?\n\nAnd I'm not familiar with MongoDB's codebase, what does `verify` do?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4437589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4439057", "body": "Well, I've read `assert_util.h` and think that this line should be replaced with just:\n\n`#define CHECK MONGO_verify`\n\nDo you agree with me?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4439057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4561351", "body": "@andy10gen original behaviour was to call `abort()` if check failed.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4561351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4562525", "body": "Well, guys, I found that `CHECK` can't be just redefined as a `MONGO_verify`. Because originally, `CHECK` returns an object to be used as a stream for error message.\n\nWhat should be used in this case? Probably `MONGO_massert`? If yes, then what should I use as `msgid`?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4562525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jmikola": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4899307", "body": "Missing a space between `if` and `(`?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/4899307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "nickstenning": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5239423", "body": "The problem here is that as you note, this isn't available on 10.04, which I think is currently supposed to be supported by the .debs.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5239423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "guilhem": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5240853", "body": "ubuntu 10.04 users can use init version without any problem.\n\nIf a change solve many problems for 99% of users, and change behavior for 1% of them (because there is a workaround)... I think this is a saving change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/5240853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jaredlwong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/8206955", "body": "Sorry, I'll fix that. I did mean 2048.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/8206955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ccstolley": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9993772", "body": "libkvm is required for kvm_openfiles() and kvm_getprocs(), which is called in processinfo_openbsd5.cpp\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/9993772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "wilkinson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12024663", "body": "I doubt it has an significant performance impact. I did it mainly to make the linebreaks come out nicely.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12024663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12452334", "body": "Not to be mean, but I just really don't care about your project's code consistency. The whole reason I didn't worry about consistency was because there were all these different conventions going on in the code anyway. I tried to change as few lines as possible, but if it bothers y'all that much, then I'm surprised you didn't think to handle the singleton case in the first place -- correct code is far more important than consistently written code.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12452334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453179", "body": "Yup, definitely. I'm an idiot.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453460", "body": "Thanks, actually -- I got frustrated because I couldn't think of a good reason to do it one way or another, but then you showed me one. I'll fix 'em real quick.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12453460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mwhudson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12454581", "body": "Andy Schwerin notifications@github.com writes:\n\n> > @@ -1293,8 +1293,8 @@ namespace {\n> >                 \"{$push: {a: { $each: [1], $position:3.000000000001}}}\",\n> >                 \"{$push: {a: { $each: [1], $position:1.2}}}\",\n> >                 \"{$push: {a: { $each: [1], $position:-1.2}}}\",\n> > -               \"{$push: {a: { $each: [1], $position:9223372036854775810}}}\",\n> > -               \"{$push: {a: { $each: [1], $position:-9223372036854775810}}}\",\n> > -               \"{$push: {a: { $each: [1], $position:92233720368547758070}}}\",\n> \n> This change LGTM, but would it be more understandable to use \"9.0e19\",\n> to make it really clear that we're testing \"a double too big to fit in\n> a 64-bit integer\"?\n\nSure, that would be less cute and therefore better!  Pushed a new commit.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/12454581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Bloodevil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15384402", "body": "you mean restore all mk_wcwidth.\\* file and make new function of calculateColumnPositions( buf32, pos). \n buf32 is unsigned int\\* so if I want to use buf32 in mk_wcswidth, I should change unsigned int pointer to const int pointer. so calculateColumnPosition function will be like below\n\n```\n static int calculateColumnPosition( unsigned int* buf32, size_t n) {\n   void* temp_buf32 = buf32;\n   return mk_wcswidth( static_cast<const int*>( temp_buf32 ), n );\n }\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15384402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15386684", "body": "right. I agree. just like below.\n\n```\nstatic int calculateColumnPosition( unsigned int* buf32, size_t n) {\n    int width = mk_wcswidth( reinterpret_cast<const int*>( buf32 ), n );\n    if ( width == -1 )\n        return n;\n    else\n        return width;\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/15386684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "TheCrockett": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19555495", "body": "Done\n\nFrom: Ernie Hershey [mailto:notifications@github.com]\nSent: Wednesday, October 29, 2014 1:22 PM\nTo: mongodb/mongo\nCc: Crockett, Brian\nSubject: Re: [mongo] SERVER-15855 update documentation about how packages are created (#844)\n\nIn README:\n\n> @@ -41,6 +41,11 @@ DRIVERS\n> \n>    Client drivers for most programming languages are available at mongodb.org.  Use the\n> \n>    shell (\"mongo\") for administrative tasks.\n> \n> +PACKAGING\n> \n> +\n> -  Packages are created on the fly by the package.py script located in buildscripts. This will\n\nHow about this minor adjustment to the text?\n\nPackages are created dynamically by the package.py script located in the buildscripts directory. This will\ngenerate RPM and Debian packages.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mongodb/mongo/pull/844/files#r19555093.\n{\"@context\":\"http://schema.org\",\"@type\":\"EmailMessage\",\"description\":\"View this Pull Request on GitHub\",\"action\":{\"@type\":\"ViewAction\",\"url\":\"https://github.com/mongodb/mongo/pull/844/files#r19555093\",\"name\":\"View Pull Request\"}}\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19555495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "esmet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19768227", "body": "I think I did a bad job at porting this patch over to the new refactored code that does drop as part of a RecoveryUnit::Change\n\nThe close is probably not needed anymore because for both dropOnRollback and dropOnCommit the entry gets deleted which deletes the underlying record store and calls the destructor, to your point.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19768227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19768291", "body": "Not sure what you mean - the intention here is to call dropRecordStore after we've called `delete it->second' which should delete the containing catalog entry and thus 'close' the underlying record store.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19768291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19768317", "body": "This isn't needed anymore (clearly, oops) due to line 101.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/19768317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dgolub": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22550117", "body": "[Nitpick] Why is this `LPBYTE` instead of `VS_FIXEDFILEINFO*`?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22550117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22550574", "body": "[Question] Any reason not to use `GetSystemDirectory` here?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22550574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22550885", "body": "Should probably use `HIWORD` and `LOWORD` here.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22550885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22550962", "body": "Do we have a guarantee that the returned path will not have a trailing backslash?  If not, then we should check for it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22550962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22617108", "body": "If you check the documentation for `GetSystemDirectory`, you'll see that the return value is not a Boolean but rather an integer.  If it fails due to the buffer not being large enough, it will return the required buffer size.  Therefore, a nonzero return value does not necessarily mean success.  I recognize it's unlikely that the system directory path will exceed `MAX_PATH` characters, but we should still check this return value properly.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22617108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "agherardi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22560427", "body": "Good point. I got rid of the LPBYTE variable.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22560427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22560476", "body": "Good suggestion. GetSystemDirectory is more straightforward.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22560476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22560487", "body": "Yes. Done.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22560487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22565774", "body": "Added check.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/22565774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "upendrag": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/33615092", "body": "Thank you for the comments @acmorrow .\n\nI cannot use `std::map<CommandMap::key_type, CommandMap::value_type>` here because `CommandMap::value_type` itself is of type pair<string, Command*>.\n\nI am not entirely convinced how std::vector based implementation will be faster than the std::map one. Because if you go step by step,\nstd::map takes a total of Nlog(N) time (for insertion) whereas std::vector based implementation has a total complexity of N + N*og(N) (Insertion + Sorting). \nIf you have based your arguement on the size of the input or on how these STL containers are implemented, could you please point me to some literature explaining these things. I am very much interested in knowing more about it.\n\nFinally, I agree with you on performing filtering in the first iteration itself. I will go ahead and make that change.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/33615092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dutchakdev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/34050822", "body": "@acmorrow  Thank you, fixed\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/34050822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jigfox": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55641216", "body": "I don't like reducing the coverage, as you already mentioned the algorithms aren't easy to follow, so I'd rather have an extensive test suite, which contains every edge case to prevent regression if someone changes this code.\n\n[jstests/aggregation/bugs/server6189.js](https://github.com/mongodb/mongo/blob/r3.3.2/jstests/aggregation/bugs/server6189.js): ist for testing dates before 1970, I could try adding the new operators here. But I would still keep the other file for testing all edges there are.\n\n[src/mongo/db/pipeline/expression_test.cpp](https://github.com/mongodb/mongo/blob/master/src/mongo/db/pipeline/expression_test.cpp): doesn't include any tests on dates (that I see). I was searching the code for date tests and only found the javascript ones. And also because I'm more familiar with javascript than with c++ I added  the new tests as new javascript file.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55641216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55747340", "body": "it is named pDate all over this file, I will change this, but we should think about changing it for the rest of the file, too.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55747340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55755733", "body": "I will look at [jstests/aggregation/bugs/server19548.js](https://github.com/mongodb/mongo/blob/r3.3.2/jstests/aggregation/bugs/server19548.js) and see what I can do, but please be patient, It was kind if tedious to write these tests, and yes they were copied from testall.js \ud83d\ude09 I always try to copy the style of the existing code when contributing to open source. Sadly I took the wrong example now. But you're absolutely right about readability of tests, so I will look into it and see what I can do.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55755733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55929515", "body": "@cswanson310: I've added a new [test file](https://github.com/jigfox/mongo/blob/SERVER-7695-aggregation-operators-for-iso-week/jstests/aggregation/bugs/server7695_isodates.js), which is much more explanatory. \n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55929515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55936658", "body": "@cswanson310 while creating some more tests for some more edge cases, I found a bug in the calculation of the isoWeek. Sadly I don't have any idea right now, why this is happening, because it only appears if I ask for the year before I ask for the week. The other way around it works perfectly fine.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55936658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55936850", "body": "```\ndb.test.insert({})\ndb.test.aggregate([{\n  $project:{\n    _id:0,\n    result:{\n      $dateToString: {\n        date:new Date(\"1900-12-31T23:59:59Z\"),\n        format: \"%G-W%V\"\n      }\n    }\n  }\n}]) // should result in \"1901-W01\" but it results in \"1901-W53\"\n```\n\nand\n\n```\ndb.test.insert({})\ndb.test.aggregate([{\n  $project:{\n    _id:0,\n    result:{\n      $dateToString: {\n        date:new Date(\"1900-12-31T23:59:59Z\"),\n        format: \"W%V-%G\"\n      }\n    }\n  }\n}]) // results in \"W01-1901\"\n```\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/55936850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56061791", "body": "Yes, why?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56061791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56062196", "body": "`Value::coerceToTm()` only works on a value, but I just have the year in this Method, because the date wouldn't work. I need the end of the year not just any date in the year. But your debugging output helped a lot and I got it working with `mktime()`\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56062196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56066151", "body": "Of course, I don't know why I made it this complicated\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56066151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56738911", "body": "That is sad, but I will change it.\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56738911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56755170", "body": "So I just made the tests less aggressive on windows and/or 32-bit systems, like [here](https://github.com/mongodb/mongo/blob/r3.3.2/jstests/aggregation/bugs/server6189.js#L43-L47)\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/56755170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57455996", "body": "The comment will be actually longer than the implementation itself ;-)\n\nFor the other helper methods, I already thought I had very descriptive names for the helper methods, could you please point me two helper which aren't obvious enough?\n", "reactions": {"url": "https://api.github.com/repos/mongodb/mongo/pulls/comments/57455996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}