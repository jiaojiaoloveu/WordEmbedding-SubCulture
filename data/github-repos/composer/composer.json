{"_default": {"1": {"techsemicolon": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7029", "title": "Overriding a single File from available packages", "body": "Hello All,\r\n\r\nI have been into situations where packages available were working best, I wanted to extend some of the existing class methods or add some new ones. I could do something which had my custom class which extends a base class of package file I want to modify. \r\n\r\nHowever this does not suffice all the time. For example in Laravel's builder, if we want to add a new method, we can have custombuilder(having new methods) which extends builder. But this builder is getting used in lot of places internally in the package. So it would be lot of change which is not standard to implement.\r\n\r\nAlso have seen reviews like this  : http://shyammakwana.me/php/laravel-override-vendor-classes.html\r\n But I think it would be good if it's handled internally so that we don't need to do composer dump autoload everytime that package is updated?\r\n\r\nI would like to propose a configuration in composer where we can override just a particular class in a package. \r\n\r\n`\"autoload\": {\r\n        \"override-files\" : {\r\n            \"Illuminate/Database/Eloquent/Builder.php\" : \"Custom/Database/Builder.php\"\r\n        }\r\n    }`\r\n\r\nSo when application will need to get Eloquent Builder it will look under custom/Database/Builder.php instead of the Illuminate/Database/Eloquent/Builder.php file in package. \r\n\r\nThis will give us huge advantages where any package, you can get 90% of the functionalities available and add the 10% on the top of it by overriding some of the function/add some new ones. \r\n\r\nI am relatively new to raising a suggestion on github, I am not sure if this is the right place to suggest this. But I would like to see if this makes sense to anyone else.  I would love to raise  PR for the same if this approach seems good to other experienced contributors for this package.\r\n\r\nThanks, Mihir.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "flik": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7028", "title": "unable to install by composer", "body": "My `composer.json`:\r\n\r\n```\r\ncomposer require guzzlehttp/guzzle:~6.0\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nJan2018@adminxA MINGW32 /d/xampp/htdocs/zf-tutorial\r\n$ composer require guzzlehttp/guzzle:~6.0\r\nContent-Length mismatch, received 1847255 bytes out of the expected 1913396\r\nhttp://packagist.org could not be fully loaded, package information was loaded from the local cache and may be out of date\r\n./composer.json has been updated\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nWriting lock file\r\n```\r\n\r\nWhen I run this command:\r\nI want to install guzzle according to instructions on http://docs.guzzlephp.org/en/stable/overview.html#installation but getting nothing.\r\n\r\n```\r\ncomposer require guzzlehttp/guzzle:~6.0\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n\r\nJan2018@adminxA MINGW32 /d/xampp/htdocs/zf-tutorial\r\n$ composer require guzzlehttp/guzzle:~6.0\r\nContent-Length mismatch, received 1847255 bytes out of the expected 1913396\r\nhttp://packagist.org could not be fully loaded, package information was loaded from the local cache and may be out of date\r\n./composer.json has been updated\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nWriting lock file\r\n```\r\n\r\nAnd I expected this to happen:\r\nGuzzul should install. \r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "narration-sd": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7025", "title": "Composer update is deleting pathed Windows symlinked local repos again, ref #4955", "body": "Looks exactly like #4955 --- do  you  have a regression?  \r\n\r\nVery disconcerting, only saved because just had pushed the github repo to an origin.\r\n\r\nMy `composer.json`:\r\n\r\n{\r\n  \"name\": \"craftcms/craft\",\r\n  \"description\": \"Craft CMS\",\r\n  \"keywords\": [\r\n    \"craft\",\r\n    \"cms\",\r\n    \"craftcms\",\r\n    \"project\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"homepage\": \"https://craftcms.com/\",\r\n  \"type\": \"project\",\r\n  \"support\": {\r\n    \"email\": \"support@craftcms.com\",\r\n    \"issues\": \"https://github.com/craftcms/cms/issues\",\r\n    \"forum\": \"https://craftcms.stackexchange.com/\",\r\n    \"source\": \"https://github.com/craftcms/cms\",\r\n    \"docs\": \"https://craftcms.com/docs\",\r\n    \"rss\": \"https://craftcms.com/changelog.rss\"\r\n  },\r\n  \"minimum-stability\": \"beta\",\r\n  \"repositories\": [\r\n    {\r\n      \"type\": \"path\",\r\n      \"url\": \"plugin-dev/live-vue\",\r\n      \"symlink\": true\r\n    }\r\n  ],\r\n  \"require\": {\r\n    \"php\": \">=7.0.0\",\r\n    \"craftcms/cms\": \"dev-develop as 3.0.0-RC99\",\r\n    \"vlucas/phpdotenv\": \"^2.4.0\",\r\n    \"roave/security-advisories\": \"dev-master\",\r\n    \"craftcms/element-api\": \"^2.5\",\r\n    \"craftcms/redactor\": \"^1.0.0-beta.1\",\r\n    \"laravel/homestead\": \"^7.0.0\",\r\n    \"narrationsd/live-vue\": \"^0.8.0\"\r\n  },\r\n  \"autoload\": {\r\n    \"psr-4\": {\r\n      \"modules\\\\\": \"modules/\"\r\n    }\r\n  },\r\n  \"config\": {\r\n    \"optimize-autoloader\": true\r\n  },\r\n  \"scripts\": {\r\n    \"post-root-package-install\": [\r\n      \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\r\n    ],\r\n    \"post-create-project-cmd\": [\r\n      \"@composer dump-autoload -o\",\r\n      \"@php craft setup/welcome\"\r\n    ]\r\n  },\r\n  \"require-dev\": {\r\n  }\r\n}\r\n\r\n\r\nOutput of `composer diagnose`:\r\n\r\nC:\\vagrant\\gnu\\seventh-page_html>composer diagnose\r\nChecking composer.json: WARNING\r\nrequire.roave/security-advisories : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.13\r\nPHP binary path: C:\\php\\php.exe\r\n\r\n\r\nWhen I run this command:\r\n\r\ncomposer update (with narrationsd/live-vue at version 0.8.1)\r\n\r\nI get the following output:\r\n\r\nC:\\vagrant\\gnu\\seventh-page_html>composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 0 installs, 1 update, 0 removals\r\n  - Updating narrationsd/live-vue (0.2.1 => 0.8.1):     Update failed (RecursiveDirectoryIterator::__construct(C:\\vagrant\\gnu\\seventh-page_html\\\r\nvendor/narrationsd/live-vue,C:\\vagrant\\gnu\\seventh-page_html\\vendor/narrationsd/live-vue): The system cannot find the path specified. (code: 3))\r\n\r\n    Would you like to try reinstalling the package instead [yes]?\r\n\r\n***** At this point, not answering the prompt,  the entire folder pathed for  narrationsd/live-vue utterly and silently disappeared! *****\r\n\r\nAnd I expected this to happen:\r\n\r\nOf course it should have simply updated to the 0.8.1 version in all composer and autoload regards.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "c00ler123": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7021", "title": "Composer file could not be downloaded (404 not found)", "body": "I tyring to install Laravel\r\n\r\nOutput of `composer diagnose`:\r\n\r\nd:\\web>composer diag\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking HTTP proxy: OK\r\nChecking HTTP proxy support for request_fulluri: OK\r\nChecking HTTPS proxy support for request_fulluri: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  ****\r\n723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  ****\r\n8C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.2.1\r\nPHP binary path: D:\\php-7.2.1-nts-Win32-VC15-x86\\php.exe\r\n\r\nWhen I run this command:\r\n\r\ncomposer global require \"laravel/installer\"\r\n\r\nI get the following output:\r\n\r\n [Composer\\Downloader\\TransportException]\r\n The \"https://packagist.org/p/symfony/console%2433f24f3dbe55cff57fe06a5fa93b\r\n a0bbe3ae3b259e2c5b7d051da0238769fa0f.json\" file could not be downloaded (HT\r\n TP/1.1 404 Not Found)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rickselby": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7018", "title": "--no-dev installs package replaced by dev requirement, not original requirement", "body": "My `composer.json`:\r\n\r\n_This is a simplified version of the issue I'm seeing. In the real case, my `require-dev` contains `\"graham-campbell/testbench\": \"^4.0\"`; its dependencies eventually require `laravel/framework`, which causes the issue. Both setups give the same results._\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"illuminate/contracts\": \"~5.5.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"laravel/framework\": \"~5.5.0\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.0.22-0ubuntu0.16.04.1\r\nPHP binary path: /usr/bin/php7.0\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install --no-dev\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies\r\nPackage operations: 30 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing laravel/framework (v5.5.31): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 3 installs, 0 updates, 0 removals\r\n...<snip>...\r\n  - Installing illuminate/contracts (v5.5.28): Downloading (100%)         \r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\n`laravel/framework`'s composer.json contains the following:\r\n```\r\n\"replace\": {\r\n   ...\r\n   \"illuminate/contracts\": \"self.version\",\r\n   ...\r\n}\r\n```\r\n\r\nI've read through the numerous issues relating to updating requiring require-dev to be solvable (#5224 etc), and that require-dev is parsed even when --no-dev is specified, so I'm not sure if anything can be done here, but thought it best to raise this case.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nadar": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7017", "title": "Composer TestCase", "body": "We have built a composer based open source CMS and Admin UI (https://luya.io), therefore we have made a composer plugin to track the packages from our \"type\". In order to test (phpunit) the composer plugin, we could not found any useful documentation, so where looking how you did => https://github.com/composer/composer/blob/master/tests/Composer/TestCase.php. \r\n\r\nSo we have used the TestCase class to test our own plugin, sadly due to this comment `https://github.com/composer/composer/commit/b656973a86c9f4793f45bd5fa68410878bb5acc3#comments` the test files are no longer shipped into the vendor folder.\r\n\r\nComposer is the future, so more plugins will follow, we need tools to test those plugins.\r\n\r\nSo my question is:\r\n\r\n1. Why not adding the test files for other developers to? (re add the `tests` folder)\r\n2. Or provide a basic TestCase for developers which makes it easy to test the plugin, like a composer testsuite?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rabin999": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7012", "title": "while installing package through composer it require too much time to install and update too, i am using in laravel project ", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"laravel/laravel\",\r\n    \"description\": \"The Laravel Framework.\",\r\n    \"keywords\": [\"framework\", \"laravel\"],\r\n    \"license\": \"MIT\",\r\n    \"type\": \"project\",\r\n    \"require\": {\r\n        \"php\": \">=7.0.0\",\r\n        \"fideloper/proxy\": \"~3.3\",\r\n        \"laravel/framework\": \"5.5.*\",\r\n        \"laravel/tinker\": \"~1.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"filp/whoops\": \"~2.0\",\r\n        \"fzaninotto/faker\": \"~1.4\",\r\n        \"mockery/mockery\": \"~1.0\",\r\n        \"phpunit/phpunit\": \"~6.0\",\r\n        \"predis/predis\": \"^1.1\"\r\n    },\r\n    \"autoload\": {\r\n        \"classmap\": [\r\n            \"database/seeds\",\r\n            \"database/factories\"\r\n        ],\r\n        \"psr-4\": {\r\n            \"App\\\\\": \"app/\"\r\n        }\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Tests\\\\\": \"tests/\"\r\n        }\r\n    },\r\n    \"extra\": {\r\n        \"laravel\": {\r\n            \"dont-discover\": [\r\n            ]\r\n        }\r\n    },\r\n    \"scripts\": {\r\n        \"post-root-package-install\": [\r\n            \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\r\n        ],\r\n        \"post-create-project-cmd\": [\r\n            \"@php artisan key:generate\"\r\n        ],\r\n        \"post-autoload-dump\": [\r\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\r\n            \"@php artisan package:discover\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"preferred-install\": \"dist\",\r\n        \"sort-packages\": true,\r\n        \"optimize-autoloader\": true\r\n    }\r\n}\r\n\r\n```\r\n\r\nWhen I run command require or update on package, at least it took 15-18 min for small changes :(\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "logig": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7007", "title": "`composer update` not work at local repo. The 1.4.x version used to work.", "body": "My `operating System`: Windows 10\r\nMy `config.json`:\r\n\r\n```json\r\n{\r\n    \"config\": {\r\n        \"optimize-autoloader\": true,\r\n        \"preferred-install\": \"dist\"\r\n    },\r\n    \"repositories\": {\r\n        \"packagist\": {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://packagist.phpcomposer.com\"\r\n        },\r\n        \"local\": {\r\n            \"type\": \"path\",\r\n            \"url\": \"D:/logig/*\",\r\n            \"options\": {\r\n                \"symlink\": true\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n$ composer diagnose\r\nChecking composer.json: WARNING\r\nrequire.logig/wp-notice : unbound version constraints (dev-master) should be avoided\r\nrequire.logig/wp-admin-ui : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.1\r\nPHP binary path: D:\\Nginx\\php\\php.exe\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating optimized autoload files\r\n\r\n```\r\nor sometimes:\r\n\r\n```\r\n$ composer update\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 0 installs, 1 update, 0 removals\r\n  - Removing junction for logig/wp-admin-ui (dev-master)\r\n\r\n\r\n  [Symfony\\Component\\Filesystem\\Exception\\IOException]\r\n  D:\\logig\\wordpress.local\\wp-content\\plugins\\mayun-oss-support\\vendor\\logig\\wp-admin-ui is not a junction and thus c\r\n  annot be removed as one\r\n\r\n```\r\n\r\nAnd I expected this to happen:\r\nUpdate the namespace autoload data which changed in my local repo's composer.json\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "staabm": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7004", "title": "svn log command misses credentials", "body": "we are running in the situation that composer tries to run a `svn log` command, and this doesnt succeed because of missing credentials.\r\n\r\nhaving a closer look at the code\r\n\r\nhttps://github.com/composer/composer/blob/994bac0c153348c09d42cd77225c465c1b81e8e9/src/Composer/Downloader/SvnDownloader.php#L173-L184\r\n\r\nreveals that this command is not executed using the `SvnUtil` which would otherwise provide this authentication stuff.\r\n\r\nwe see errors like\r\n\r\n```\r\n[localhost] < [error]\u2002\u2002 - Updating complex/portallib dev-trunk (/trunk/@8668 => /trunk/@8769):\r\n[localhost] < [error]\u2002\u2002Checking out /trunk/@8769\r\n[localhost] < [error] At revision 8769.\r\n[localhost] < [error]\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 [RuntimeException]\r\n[localhost] < [error]\u2002\u2002 Failed to execute svn log -r8668:8769 --incremental\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E170013: Unable to connect to a repository at URL https://xyz.com/svn/myproject/portallib/trunk\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 svn: E215004: No more credentials or we tried too many times.\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002\r\n[localhost] < [error]\u2002\u2002 Authentication failed\r\n[localhost] < [error] Exception trace:\r\n[localhost] < [error]\u2002\u2002() at phar:///usr/local/bin/composer/src/Composer/Downloader/SvnDownloader.php:174\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\SvnDownloader->getCommitLogs() at phar:///usr/local/bin/composer/src/Composer/Downloader/VcsDownloader.php:167\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\VcsDownloader->update() at phar:///usr/local/bin/composer/src/Composer/Downloader/DownloadManager.php:268\r\n[localhost] < [error]\u2002\u2002Composer\\Downloader\\DownloadManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:207\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->updateCode() at phar:///usr/local/bin/composer/src/Composer/Installer/LibraryInstaller.php:109\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\LibraryInstaller->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:193\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->update() at phar:///usr/local/bin/composer/src/Composer/Installer/InstallationManager.php:160\r\n[localhost] < [error]\u2002\u2002Composer\\Installer\\InstallationManager->execute() at phar:///usr/local/bin/composer/src/Composer/Installer.php:587\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->doInstall() at phar:///usr/local/bin/composer/src/Composer/Installer.php:226\r\n[localhost] < [error]\u2002\u2002Composer\\Installer->run() at phar:///usr/local/bin/composer/src/Composer/Command/InstallCommand.php:119\r\n[localhost] < [error]\u2002\u2002Composer\\Command\\InstallCommand->execute() at phar:///usr/local/bin/composer/vendor/symfony/console/Command/Command.php:266\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Command\\Command->run() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:861\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRunCommand() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:208\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->doRun() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:245\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->doRun() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:127\r\n[localhost] < [error]\u2002\u2002Symfony\\Component\\Console\\Application->run() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:100\r\n[localhost] < [error]\u2002\u2002Composer\\Console\\Application->run() at phar:///usr/local/bin/composer/bin/composer:54\r\n[localhost] < [error]\u2002\u2002require() at /usr/local/bin/composer:24\r\n[localhost] < [error] install [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--no-custom-installers] [--no-autoloader] [--no-scripts] [--no-progress] [--no-suggest] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--ignore-platform-reqs] [--] [<packages>]...\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/6924", "title": "missing newline before \"Writing $path\"", "body": "trigger a `composer global remove friendsofphp/php-cs-fixer -vvv` (after you had it installed at first) and you get a lot of output...what stands out is, that it seems it would benefit from a additional newline in the marked place:\r\n\r\n![grafik](https://user-images.githubusercontent.com/120441/34202158-36d58640-e577-11e7-81f3-47348070e0d3.png)\r\n\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n$ php -v\r\nPHP 7.1.2 (cli) (built: Feb 14 2017 21:24:45) ( NTS MSVC14 (Visual C++ 2015) x64 )\r\nCopyright (c) 1997-2017 The PHP Group\r\nZend Engine v3.1.0, Copyright (c) 1998-2017 Zend Technologies\r\n\r\n$ composer --version\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\n\r\n$ composer diagnose\r\nChecking composer.json: OK\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\n\r\ntested on windows10x64 in a bash (mingw64) which was automatically installed when installing Github for Desktop[1]\r\n\r\n[1]: https://desktop.github.com/", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/6074", "title": "auto detect license from LICENSE file", "body": "github added support for detecting the license of a project based on a LICENSE file within the source repos and also added support for a api to detect those licenses [1].\r\n\r\nthere are a lot of php projects which forget to mention their license in the composer.json but have a LICENSE file.\r\nAs it is good practice to mention the license of a project inside of the composer.json and this information is also valueable, it would be great if composer (or packagist?) would also do a auto-detect of the used licsense, like github does.\r\n\r\nthis could help to make sure users of libraries have more legal information about the code they are using.\r\nwhat do you think... is this feasible at all?\r\n\r\n[1] https://github.com/blog/1964-open-source-license-usage-on-github-com", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/6a7e9322333c72a629bef9a86b9b889bcf72e3e5", "message": "Mention that also a antivirus software might corrupt file contents"}, {"url": "https://api.github.com/repos/composer/composer/commits/ecb26c7b7521ec4f06b876c9c3ae3f2c8127f6b5", "message": "support COMPOSER env var in validate command (#6834)\n\n* support COMPOSER env var in validate command"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7005", "title": "Pass auth credentials to svn log while retrieving commit logs", "body": "Fixes https://github.com/composer/composer/issues/7004", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2369176", "body": "Should't you pass the delimiter as the second parameter, to get a proper escape sequenz?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2369176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2369180", "body": "The delimiter needs to be the same character, doesn't it?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2369180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2385407", "body": "Great to know, thank you!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2385407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2545999", "body": "While installing propel I run into an error with the composer generated batch file. Could the reason be in those lines?\nSee https://github.com/propelorm/Propel/issues/588\nUsed a composer version which was updated today.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2545999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3105831", "body": "the bug mentions problems when using stream-wrappers but you don't use stream-wrappers here... why is it a problem nevertheless?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3105831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3113628", "body": "He fixed this in a followup commit\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3113628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147562", "body": "micro `substr($class, 0, strlen(prefix)) === $prefix`\n\n// adjusted per pborreli's comment.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147570", "body": "maybe something like an apc cache would help reducing IO (fstat calls by file_exists)?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147583", "body": "sure, for the strict assertion, missed that.\n\n`strpos` will scan the whole string while substr+strpos will stop after `$prefix` chars. this will add up for longer strings. Since autoloading is a hot-path for every application I think even this minor things count.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147590", "body": "it will, in case $prefix is not contained within $class (which is the more common case here)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147671", "body": "The substr notation is more readable and cannot be mixed up with the array notation\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147746", "body": "Oh wow, wasn't aware of that. Thanks for the hint\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3150389", "body": "great, thanks for the hint!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3150389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3150396", "body": "@Seldaek maybe this is worth to be mentioned in the composer docs?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3150396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "chrisEspira": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7001", "title": "The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!", "body": "HI,\r\nSomebody can help me solve this problem\r\ni cannot install composer\r\n when i try to install composer \r\nI get this error\r\nThe \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\n\r\ni need help please..........thx\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "victorynox": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/7000", "title": "Wrong return value from Composer/IO/ConsoleIO::select() method", "body": "My `composer.json`:\r\n\r\n```json\r\n\"require\": {\r\n        \"rollun-com/rollun-installer \"^4.0\",\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-2+0~20171207160618.12+stretch~1.gbp5c91f3\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.6.2)\r\n```\r\n\r\nWhen I run this method:\r\n\r\n[Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283) \r\n```\r\n$data = $console->select(\r\n\"Select value\",\r\n[\r\n            \"Choice value 0\",\r\n            \"Choice value 1\",\r\n            \"Choice value 2\",\r\n],\r\n\"0,2\",\r\nfalse,\r\n'Value \"%s\" is invalid',\r\ntrue\r\n);\r\n```\r\n\r\nI get the following output in data:\r\nArray with **values** of the `\"$choices\"` array\r\n```\r\n[\r\n \"Choice value0\",\r\n \"Choice value2\"\r\n]\r\n```\r\n\r\nAnd I expected this to happen:\r\nArray with **keys** of the `\"$choices\"` array\r\n```\r\n[\r\n0,\r\n2\r\n]\r\n```\r\n\r\nWen I'm using composer version 1.5.2 and earlier, method [Composer\\IO\\ConsoleIO::select()](https://github.com/composer/composer/blob/master/src/Composer/IO/ConsoleIO.php#L283)\r\nreturn the array with **keys** of the `\"$choices\"` array ([as in the documentation ](https://getcomposer.org/apidoc/1.6.1/Composer/IO/ConsoleIO.html#method_select)), but in composer 1.6.2 i'm getting the array with **values** of the `\"$choices\"` array. \r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/7000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cweiske": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6998", "title": "\"remove\" output and exit status do not tell about failures/non-removages", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"laravel/framework\": \"^5.5\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\nComposer version: 1.6.2\r\nPHP version: 7.1.12-3+ubuntu16.04.1+deb.sury.org+1\r\nPHP binary path: /usr/bin/php7.1\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer remove swiftmailer/swiftmailer; echo $?\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nswiftmailer/swiftmailer is not required in your composer.json and has not been removed\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nNothing to install or update\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n1. A message telling me that swiftmailer was not removed (maybe with a reason: 'hard requirement by laravel/framework\")\r\n2. Exit code of non-0, because 0 means success.\r\n\r\nI want to *remove* a package, and composer did not do that - and failed to tell me that. The package I wanted to remove is still installed.\r\n\r\nI do know that \"composer remove\" currently only removes the entry from `composer.json` and then runs \"update\", but thats implementation detail. The user's intent when using \"remove\" is that a package shall be removed, and composer doesn't behave in a way the user would expect.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IndraGunawan": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6993", "title": "Could not find package when using composer repository that provide lazy providers", "body": "How to reproduce\r\n\r\n- use composer repositry that provide lazy providers like `packagist.com` or `pakethub.com` and add the repository config to `composer.json`\r\n- add `symfony/symfony` package to the composer repository provider. so when you access `packages.json` from the composer repository hosting you will get \r\n```json\r\n{\r\n\"packages\":{\"symfony/symfony\":{...}},\r\n\"search\":\"...\",\r\n\"providers-lazy-url\":\".../p/%package%.json\",\r\n\"mirrors\":[{...}]\r\n}\r\n```\r\n- run `composer require symfony/security-bundle -vvv` at project directory.\r\n\r\nHere the response\r\n```\r\n[InvalidArgumentException]\r\n  Could not find package symfony/security-bundle.\r\n```\r\n  ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NomanJaved": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6980", "title": "[RuntimeException] Could not scan for classes inside \"src/\" which does not appear to be a file nor a folder", "body": "I am have installed Xampp on Windows 10.\r\n\r\nI am facing the issue that the composer install not work properly in Laravel 5.5. How can I fix this issue. the error is mentioned in the title. If you guys require further detail I can provide it.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Salamek": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6975", "title": "Fresh composer install/update and following composer update inconsistency", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"repositories\": [\r\n    {\r\n      \"type\": \"vcs\",\r\n      \"url\": \"https://github.com/Salamek/gravatar\"\r\n    }\r\n  ],\r\n  \"require\": {\r\n    \"dravencms/packager\": \"~v1.0\",\r\n    \"dravencms/admin\": \"~v1.0.0\",\r\n    \"dravencms/issue\": \"~v1.0.1\",\r\n    \"dravencms/file\": \"~v1.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\",\r\n    \"kdyby/doctrine\": \"v3.3.x-dev\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nLicense \"LGPL-3.0\" is a deprecated SPDX license identifier, use \"LGPL-3.0-only\" or \"LGPL-3.0-or-later\" instead\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nrequire.kdyby/doctrine : exact version constraints (v3.3.x-dev) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nComposer version: 1.6.0\r\nPHP version: 7.2.0\r\nPHP binary path: /usr/bin/php\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nrm composer.lock\r\nrm -rf ./vendor\r\ncomposer update or composer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n...Lot of installed stuff...\r\n- Installing dravencms/user (v1.0.2): Loading from cache  #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n- Installing dravencms/admin (v1.0): Loading from cache #<-- OLD VERSION\r\n...Lot of installed stuff...\r\n```\r\n\r\nWhen I run this command (after first install or update):\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)         \r\nPackage operations: 0 installs, 2 updates, 0 removals\r\n  - Updating dravencms/user (v1.0.2 => v1.0.3): Loading from cache\r\n  - Updating dravencms/admin (v1.0 => v1.0.3): Loading from cache\r\nPackage symnedi/event-dispatcher is abandoned, you should avoid using it. Use contributte/event-dispatcher instead.\r\nPackage zenify/doctrine-migrations is abandoned, you should avoid using it. Use nettrine/migrations instead.\r\nWriting lock file\r\nGenerating autoload files\r\nocramius/package-versions:  Generating version class...\r\nocramius/package-versions: ...done generating version class\r\n> php vendor/dravencms/packager/bin/packager packager:sync\r\nPackages synced successfully\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nWhen i run `composer install` or `composer update` in clean project (vendor and composer.lock deleted) i should get latest versions of all deps matching composer.json, second run of `composer update` should not do anything when no new version is released\r\n\r\nPS: I tried to delete ~/.cache/composer and i get same results as above but with downloads, so it is not cache related\r\nComposer version 1.6.0 2018-01-04 12:03:22\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/6959", "title": "Your requirements could not be resolved to an installable set of packages. But nothing is wrong", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"dravencms/dravencms\",\r\n  \"type\": \"library\",\r\n  \"description\": \"DravenCMS Content Management System\",\r\n  \"keywords\": [\r\n    \"dravencms\"\r\n  ],\r\n  \"license\": [\r\n    \"LGPL-3.0\"\r\n  ],\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Adam Schubert\"\r\n    }\r\n  ],\r\n  \"require-dev\": {\r\n    \"nette/tester\": \"@dev\"\r\n  },\r\n  \"require\": {\r\n    \"dravencms/packager\": \"^v1.0\",\r\n    \"dravencms/admin\": \"^v1.0\",\r\n    \"dravencms/location\": \"^v1.0\",\r\n    \"dravencms/user\": \"^v1.0\",\r\n    \"dravencms/file\": \"^v1.0\",\r\n    \"ipub/visual-paginator\": \"^v1.0\",\r\n    \"joseki/pdf-response\": \"^v3.1\",\r\n    \"o5/grido\": \"dev-master\",\r\n    \"janmarek/webloader\": \"dev-master\"\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ],\r\n    \"post-update-cmd\": [\r\n      \"php vendor/dravencms/packager/bin/packager packager:sync\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nrequire.o5/grido : unbound version constraints (dev-master) should be avoided\r\nrequire.janmarek/webloader : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: OK\r\nwww-data@ceskadatabaze:~/svetst\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - Installation request for dravencms/file ^v1.0 -> satisfiable by dravencms/file[v1.1].\r\n    - dravencms/file v1.1 requires dravencms/locale ^v1.0 -> satisfiable by dravencms/locale[v1.0, v1.0.1].\r\n    - dravencms/locale v1.0 requires dravencms/base ^v1.0 -> satisfiable by dravencms/base[v1.0.7].\r\n    - dravencms/locale v1.0.1 requires dravencms/base ^v1.0.4 -> satisfiable by dravencms/base[v1.0.7].\r\n    - Conclusion: don't install dravencms/base v1.0.7\r\n```\r\n\r\nAnd I expected this to happen:\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\nInstall depedencies, this message is useless, i'm not able to find out what is wrong", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schmunk42": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6972", "title": "composer does not fully check versions when changing repository URL", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"tobias/issue-composer-repo-url-downgrade\",\r\n    \"require\": {\r\n        \"dektrium/yii2-rbac\": \"^0.3.0\"\r\n    },\r\n    \"repositories\": {\r\n        \"rbac\": {\r\n            \"type\": \"vcs\",\r\n            \"url\": \"https://github.com/dmstr-forks/yii2-rbac.git\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n(You need https://github.com/fxpio/composer-asset-plugin or https://asset-packagist.org/ to reproduce - but the plugin or additional repo is not the cause for this issue)\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n> composer diagnose\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.5.2 => 1.5.6)\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update -vv\r\n<remove repositories section>\r\ncomposer update -vv\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n[...]\r\nAnalyzed 405 packages to resolve dependencies\r\nAnalyzed 3081 rules to resolve dependencies\r\nNothing to install or update\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\n[...]\r\nDependency resolution completed in 0.006 seconds\r\nAnalyzed 404 packages to resolve dependencies\r\nAnalyzed 3078 rules to resolve dependencies\r\nPackage operations: 1 install, 0 updates, 0 removals\r\nInstalls: dektrium/yii2-rbac:0.3.0\r\n  - Installing dektrium/yii2-rbac (0.3.0): Loading from cache\r\n Extracting archive    REASON: Required by the root package: Install command rule (install dektrium/yii2-rbac 0.3.0)\r\n\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nWe're using a fork of `dektrium/yii2-rbac` which has a tag `0.3.999`, if we remove the custom fork-repo, composer should check only the versions in the original URL and downgrade to `0.3.0` in this case, but it sees the installed version - which should not be available at all now - as valid and stays on `0.3.999`.\r\n\r\nRelated to https://github.com/composer/composer/issues/3876#issue-64525212\r\n\r\nIt works, when I remove `vendor/dektrium/yii2-rbac` - there should be some additional checks to https://github.com/composer/composer/pull/3985 if a URL has been changed. Actually composer should treat the package as not available and force a full check of it's versions.\r\n \r\n[addon]\r\n\r\nClearing the cache has no effect.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/2810", "title": "composer should warn you about modified files before updating packages", "body": "otherwise you may get stuck in an half updated application.\n\nSample case:\n\n```\n$ composer.phar update\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\n  - Installing yiisoft/jquery-pjax (dev-master 7433000)\n    Cloning 74330005f9d5ffdf923d6ce45c10814d9a8902bb\n\n  - Updating yiisoft/yii2-composer dev-master (dfad39e => 94baa21)\n    Checking out 94baa21b7a75e731f5d3a82e13262c62b22ae57c\n\n  - Updating schmunk42/yii2-templay dev-develop (0996ec8 => 1e525d8)\n    The package has modified files:\n    D  Content.php\n    D  Html.php\n    M assets/templay.js\n    RM controllers/DataController.php -> controllers/TemplateController.php\n    RM models/Data.php -> models/Template.php\n    RM Template.php -> widgets/Template.php\n    AM widgets/Wrapper.php\n    Discard changes [y,n,v,s,?]? n\n\n\n\n  [RuntimeException]  \n  Update aborted      \n\n\n\nupdate [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--lock] [--no-plugins] [--no-custom-installers] [--no-scripts] [--no-progress] [--with-dependencies] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [packages1] ... [packagesN]\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcanardanangelo": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6970", "title": "zlib_decode() data error", "body": "I can use Composer before. But now I cannot do composer update. I can't even install composer. The error shows. I didn't change any configuration on my computer.\r\n\r\n\r\n````The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nThe \"https://getcomposer.org/download/1.5.6/composer.phar.sig\" file could not be downloaded: failed to open stream: HTTP request failed!\r\nFailed to decode zlib stream\r\n\r\nPlease help. Thanks!", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "EduenSarceno": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6968", "title": "exec command doesn't works correctly on windows", "body": "I don't know if I'm wrong but I think the command only adds COMPOSER_BIN_PATH to the path and after runs the program\r\n\r\ncomposer.json\r\n```\r\n{\r\n\t\"name\": \"vendor/foo\",\r\n\t\"description\": \"A foo package\",\r\n\t\"scripts\": {\r\n\t\t\"test\" : \"phpunit --version\"\r\n\t},\r\n\t\"require-dev\": {\r\n\t\t\"phpunit/phpunit\": \"^6.5\"\r\n\t}\r\n}\r\n```\r\n\r\nIf I try to execute phpunit, I get a error\r\n```\r\n> composer exec phpunit\r\nScript phpunit handling the __exec_command event returned with error code 2\r\n```\r\nBut if I run the script its works\r\n```\r\n> composer run-script test\r\n> phpunit --version\r\nPHPUnit 6.5.5 by Sebastian Bergmann and contributors.\r\n```\r\n\r\nI don't like do things like  `vendor\\bin\\phpunit --help` instead of  `composer exec -- phpunit --help`.\r\n\r\n**Note**  \r\nThe arguments are not passed correctly either\r\n\r\n```\r\n>composer exec -- phpunit --help\r\nUsage:\r\n  exec [options] [--] [<binary>] [<args>]...\r\n\r\nArguments:\r\n  binary                         The binary to run, e.g. phpunit\r\n  args                           Arguments to pass to the binary. Use -- to separate from composer arguments\r\n\r\nOptions:\r\n  -l, --list\r\n  -h, --help                     Display this help message\r\n  -q, --quiet                    Do not output any message\r\n  -V, --version                  Display this application version\r\n      --ansi                     Force ANSI output\r\n      --no-ansi                  Disable ANSI output\r\n  -n, --no-interaction           Do not ask any interactive question\r\n      --profile                  Display timing and memory usage information\r\n      --no-plugins               Whether to disable plugins.\r\n  -d, --working-dir=WORKING-DIR  If specified, use the given directory as working directory.\r\n  -v|vv|vvv, --verbose           Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\r\n\r\nHelp:\r\n  Executes a vendored binary/script.\r\n```\r\nEverything that is after -- should be treated as an argument to the program not as a part of the composer command\r\n\r\nEnvironment:\r\n```\r\n>composer --version\r\nComposer version 1.5.6 2017-12-18 12:09:18\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wouterj": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6967", "title": "[Docs] Explicitly mention not to use `apt-get install composer`", "body": "Since `symfony/thanks` is now required by Laravel and Symfony, there are quite some people looking for help because they get \"symfony/thanks depends on composer-plugin-api ^1.1, you are using 1.0\".\r\n\r\nIn all these cases (i.e. https://github.com/symfony/symfony-docs/issues/8938), it is because they are using Composer 1.0.0 beta2 installed through `apt-get`.\r\n\r\nCan the Composer community do something to avoid people using `apt-get` and installing this very old version of Composer? Can we show some alert, just like it used to do in beta phrase? Can we maybe explicitly tell in the docs *not* to use `apt-get`? Or, maybe simpler, can we make `apt-get` install a more recent version?\r\n\r\n*EDIT: Just released I probably created this issue in a very wrong repository. Sorry! If you want, I can reopen it in another repository.*", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sebastianblum": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6965", "title": "[RFC] Optional requirements ", "body": "Hello!\r\n\r\nI want to discuss if we can add support for optional dependencies to composer.\r\n\r\nProblem explained by the LiipImagineBundle:\r\nThe LiipImagineBundle:2.0 had an dependency to PHP-CS-FIXER\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nand PHP-CS-Fixer doesn't support PHP 7.3 see https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/2.9/composer.json\r\n```json\r\n{\r\n  \"require\": {\r\n        \"php\": \"^5.6 || >=7.0 <7.3\"\r\n  }\r\n}\r\n```\r\nSee discussion https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/3323 - PHP-CS-FIXER will not support PHP 7.3 at the moment. So the nightly php travis builds fail because composer could not resolve the dependencies. LiipImagineBundle now removed PHP-CS-FIXER dependency\r\n at the moment.\r\n\r\nHow can we solve the problem in composer?\r\n\r\nOne solution will be to add support for optional requirements which can be installed or skipped.\r\nWhat do you think about this?\r\n\r\nRelated Issues (I found)\r\n- #6321 use case for conflict\r\n\r\nPossible syntax\r\n```json\r\n{\r\n  \"optional\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }, \r\n  \"optional-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor question mark before\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"?friendsofphp/php-cs-fixer\": \"^1.0|^2.0\"\r\n  }\r\n}\r\n```\r\nor dash for skipped\r\n```json\r\n{\r\n  \"require-dev\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^1.0|^2.0|-\"\r\n  }\r\n}\r\n```\r\n\r\n\r\nThank you very much\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dahdash": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6946", "title": "composer is unable to generate autoload files for the packages that were downloaded in the previous session", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"magento/project-community-edition\",\r\n    \"description\": \"eCommerce Platform for Growth (Community Edition)\",\r\n    \"type\": \"project\",\r\n    \"version\": \"2.1.8\",\r\n    \"license\": [\r\n        \"OSL-3.0\",\r\n        \"AFL-3.0\"\r\n    ],\r\n    \"require\": {\r\n        \"magento/product-community-edition\": \"2.1.8\",\r\n        \"composer/composer\": \"@alpha\"\r\n    },\r\n    \"require-dev\": {\r\n        \"phpunit/phpunit\": \"4.1.0\",\r\n        \"squizlabs/php_codesniffer\": \"1.5.3\",\r\n        \"phpmd/phpmd\": \"@stable\",\r\n        \"pdepend/pdepend\": \"2.4.0\",\r\n        \"friendsofphp/php-cs-fixer\": \"~1.2\",\r\n        \"lusitanian/oauth\": \"~0.3 <=0.7.0\",\r\n        \"sebastian/phpcpd\": \"2.0.0\"\r\n    },\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"Magento\\\\Framework\\\\\": \"lib/internal/Magento/Framework/\",\r\n            \"Magento\\\\Setup\\\\\": \"setup/src/Magento/Setup/\",\r\n            \"Magento\\\\\": \"app/code/Magento/\"\r\n        },\r\n        \"psr-0\": {\r\n            \"\": \"app/code/\"\r\n        },\r\n        \"files\": [\r\n            \"app/etc/NonComposerComponentRegistration.php\"\r\n        ]\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Magento\\\\Sniffs\\\\\": \"dev/tests/static/framework/Magento/Sniffs/\",\r\n            \"Magento\\\\Tools\\\\\": \"dev/tools/Magento/Tools/\",\r\n            \"Magento\\\\Tools\\\\Sanity\\\\\": \"dev/build/publication/sanity/Magento/Tools/Sanity/\",\r\n            \"Magento\\\\TestFramework\\\\Inspection\\\\\": \"dev/tests/static/framework/Magento/TestFramework/Inspection/\",\r\n            \"Magento\\\\TestFramework\\\\Utility\\\\\": \"dev/tests/static/framework/Magento/TestFramework/Utility/\"\r\n        }\r\n    },\r\n    \"minimum-stability\": \"alpha\",\r\n    \"prefer-stable\": true,\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://repo.magento.com/\"\r\n        }\r\n    ],\r\n    \"extra\": {\r\n        \"magento-force\": \"override\"\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nNow consider the situation that composer broke due to timeout in the middle of downloading packages (We can test this situation by fake Ctrl-C after downloading magento/magento2-base for my composer.json). Now I want to continue my \"composer install\" and get remaining packages. So I run again this command:\r\n\r\n\r\n```\r\ncomposer install\r\n```\r\nAfter downloading all the packages composer is unable to generate autoload files for the packages that were downloaded in the previous session. I get the following output for my case:\r\n\r\n```\r\n...\r\nWriting lock file\r\nGenerating autoload files\r\n\r\n  [ErrorException]\r\n  file_put_contents({PATH_TO_MY_PROJECT}/app/etc/vendor_path.php): failed to open stream: No such file or directory\r\n```\r\n\r\nTo solve the issue I should remove my vendor directory and get all the packages in one session. I expect composer to handle multiple sessions and generate autoload files for all the packages.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "minac": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6944", "title": "Examples of composer.json files for repositories on gitlab and bitbucket using dist", "body": "Hi,\r\n\r\n;tldr Can anyone provide me with a composer.json example of a project on a private git repository with a dependency on another private git repository that forces a dist download instead of the complete git clone?\r\n\r\nWhat I would like to happen:\r\nTo setup composer so that it gets the zip of a given tag on a repository instead of having to have SSH keys loaded into the SSH agent of the deploy server and doing a full git clone.\r\n\r\nWhat I tried as a master composer.json:\r\n```json\r\n{\r\n  \"name\": \"migueldavid/masterproject\",\r\n  \"description\": \"Test for composer\",\r\n  \"prefer-stable\": true,\r\n  \"config\": {\r\n    \"optimize-autoloader\": true,\r\n    \"apcu-autoloader\": true,\r\n    \"discard-changes\": true,\r\n    \"preferred-install\": {\r\n        \"wpackagist-plugin/*\": \"dist\",\r\n        \"migueldavid/*\": \"dist\",\r\n        \"*\": \"dist\"\r\n    },\r\n    \"gitlab-domains\": [ \"gitlab.com\" ],\r\n    \"gitlab-token\": {\"gitlab.com\": \"myToken\"},\r\n    \"gitlab-oauth\": {\"gitlab.com\": \"mySecret\"},\r\n    \"bitbucket-oauth\": {\"bitbucket.org\": {\"consumer-key\": \"myConsumer\", \"consumer-secret\": \"mySecret\"}}\r\n  },\r\n  \"repositories\": [\r\n    {\r\n      \"type\" : \"composer\",\r\n      \"url\"  : \"https://wpackagist.org\"\r\n    },\r\n    {\r\n      \"type\" : \"vcs\",\r\n      \"url\"  : \"https://gitlab.com/migueldavid/childproject.git\"\r\n    }\r\n  ],\r\n  \"require\": {\r\n    \"hirak/prestissimo\": \"~0.3.7\",\r\n    \"wpackagist-plugin/akismet\": \"~4.0.1\",\r\n    \"migueldavid/childproject\": \"1.1\"\r\n  }\r\n}\r\n```\r\n\r\nAnd the child/dependency repository:\r\n\r\n```json\r\n{\r\n  \"name\": \"migueldavid/childproject\",\r\n  \"require\": {\r\n    \"composer/installers\": \"*\"\r\n  },\r\n  \"dist\": {\r\n    \"url\": \"https://gitlab.com/migueldavid/childproject.git\",\r\n    \"type\": \"zip\"\r\n  }\r\n}\r\n```\r\nThe configuration above does not work because `[LogicException]\r\n  Downloader \"Composer\\Downloader\\GitDownloader\" is a source type downloader and can not be used to download dist`\r\n\r\nPS Both of these repos are public, but my problem is with private repos\r\n\r\nI read through the whole documentation and part of the issues here, but could not find one place that has a proper example of what a child repository should have in its composer.json file.\r\n\r\nAny help is appreciated!\r\n\r\nThanks.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AyushSurana97": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6943", "title": "Composer Not Working due to MongoDB", "body": "I have a Windows 10 x64 PC and am trying to install Composer so as to use it with MongoDB\r\nThe Error that I am getting is this : - \r\n\r\n**The PHP exe file you specified did not run correctly:\r\nC:\\xampp\\php\\php.exe\r\n\r\nThe php.ini used by your command-line PHP is: C:\\xampp\\php\\php.ini\r\n\r\nA setting in your php.ini could be causing the problem: Either the 'extension_dir' value is incorrect or the dll does not exist.\r\n\r\nProgram Output:\r\nPHP Warning:  PHP Startup: Unable to load dynamic library 'C:\\xampp\\php\\ext\\php_mongodb.dll' - The specified module could not be found.\r\n in Unknown on line 0**\r\n\r\nI have downloaded and added my mongodb.dll file from https://pecl.php.net/package/mongodb \r\nand added the proper extension in the php.ini file. I don't know what the problem is.\r\n\r\nAny help will be highly appreciated ...   \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "paragonie-scott": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6941", "title": "[Future] Code Signing and Enhanced Security Against Supply-Chain Attacks", "body": "Before I begin, here's some supplementary reading material. I'll try to make this feature request make sense without reading any of this material, but in case I fail this should fill in any of the gaps:\r\n\r\n* [The basics of secure code delivery](https://defuse.ca/triangle-of-secure-code-delivery.htm), by @defuse \r\n* [An in-depth guide to building a secure automatic update system](https://paragonie.com/blog/2016/10/guide-automatic-security-updates-for-php-developers) (which is predicated on secure code delivery)\r\n* https://github.com/composer/packagist/issues/797 - Related Packagist issue\r\n* https://github.com/paragonie-scott/public-projects/issues/5 - AnarchKey: PKI without authorities based on append-only cryptographic ledgers\r\n* [Chronicle](https://paragonie.com/blog/2017/07/chronicle-will-make-you-question-need-for-blockchain-technology): An append-only cryptographic ledger that obviates the need for blockchain technology for many use cases\r\n\r\n---------\r\n\r\n## Background\r\n\r\nSupply-chain attacks against package managers are an underappreciated threat. Even if we assume that the only entities capable of pulling off such an attack are in the employ of government agencies around the world, there is no guarantee that such exploits will never be used (especially in a time of international conflict).\r\n\r\nA supply-chain attack against a package manager (i.e. Packagist) would involve gaining privileged access to the package manager infrastructure (GitHub, the Packagist servers) in order to deliver malware when someone attempts to install/update a dependency. These attacks can either be targeted (e.g. only towards IP addresses in a given country) or widespread (e.g. all Symfony users).\r\n\r\nUnfortunately, most of the security industry gravitates towards the red team side of affairs, where they're incentivized to build better attacks rather than designing resilient infrastructure, so it's likely that the day the threat of supply-chain attacks becomes tangible, there will be little-to-no recourse **unless** proactive measures are taken, starting today.\r\n\r\nA lot of the groundwork has been laid by other projects (i.e. [The Update Framework](https://theupdateframework.github.io/)), but as of 2017-12-26 there are no package managers deployed at scale that solve this problem adequately.\r\n\r\n## Mitigating Supply-Chain Attacks Against Composer/Packagist\r\n\r\nFirst, we need mechanisms built into Composer and Packagist for developers to:\r\n\r\n1. Register public keys for their project's namespaces.\r\n   * Probably nobody except @sebastianbergmann should be able to issue public keys for the phpunit vendor, for example.\r\n2. Sign their releases using one of their secret keys.\r\n\r\nThere's a few other things that are implied here (i.e. the ability to generated Ed25519 keypairs). I plan on developing a composer plugin in the coming weeks that handles this, but it will need a corresponding API built into Packagist to receive public keys and signed release metadata. \r\n\r\nAside: I'm open to alternative proposals for getting signed release metadata into Packagist, but directly signing/releasing them from the command line is by far the best UX design I could come up with. \r\n\r\n* Creating a signed file and expecting users to attach it while filling out the \"New Release\" form on Github seems too error-prone.\r\n* Wrapping `git tag -s` seemed complicated and too locked into git (no love for Mercurial, SVN, etc.)\r\n* Creating a file and committing/tagging for the user seems undesirable for most projects.\r\n* (Your idea might be better than mine!)\r\n\r\nNext, Packagist will need to [stream all software updates and signatures to a Chronicle instance](https://github.com/composer/packagist/issues/797). It's a good idea to also publish new public key<->vendor associations here too.\r\n\r\nFinally, integrate with [Herd](https://github.com/paragonie/herd) (either directly or via a Composer plugin) to verify all future updates.\r\n\r\nOnce these pieces are in place:\r\n\r\n* Vendors will be able to sign their own software updates. (Tentatively, `composer release <version>`.)\r\n* Vendors will own their own signing keys.\r\n  * In emergency situations, the \"core vendor\" for the ecosystem (i.e. Composer) can issue revocations and/or new keys, and the client-side can choose whether or not to accept these core-signed key changes. This is a break-glass feature that cannot be abused silently, and users can outright disable in their configuration.\r\n* Users will be able to verify that:\r\n  1. The update they're seeing really came from the vendor.\r\n  2. They're seeing the same updates that everyone else in the world sees.\r\n  3. (Knowing the git commit data): They can reproduce the same .zip, .tar.gz, etc. from the source code.\r\n\r\n## Current Progress of this Project\r\n\r\n- [x] [Chronicle](https://github.com/paragonie/chronicle) (developed by P.I.E.)\r\n- [x] [Herd](https://github.com/paragonie/herd) (developed by P.I.E.)\r\n- [x] [Quill](https://github.com/paragonie/quill), for writing to a Chronicle (developed by P.I.E.)\r\n- [ ] Composer - plugins and/or core changes described above (P.I.E. will develop these soon)\r\n- [ ] Packagist - necessary changes to accommodate this feature\r\n\r\nI'm not sure what an appropriate milestone is, but I'd consider making this a v2.0 feature (assuming we can elevate the PHP requirement to 7.0+ for Composer v2 and use [sodium_compat](https://github.com/paragonie/sodium_compat) so we don't have to go further and make it 7.2+).", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6941/reactions", "total_count": 11, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ro0NL": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6940", "title": "[RFC] New link command", "body": "Hi,\r\n\r\nInspired by a new contributing tool from Symfony, called  [`link`](https://github.com/symfony/symfony/blob/master/link)  (https://github.com/symfony/symfony/pull/24746), i created a generic composer plugin from that.\r\n\r\nhttps://github.com/ro0NL/composer-link\r\n\r\nSo given `/src` + `/project` and we run `composer link ../project` from **`/src`**, it will link dependencies in `/project` to `/src` for mathing packages (i.e. found in /src and used in /project).\r\n\r\nCould this make it as a core command?\r\n\r\ncc @dunglas ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6940/reactions", "total_count": 7, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 2}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "greg0ire": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6934", "title": "[Feature request] replaced-by key", "body": "Some packages, like `symfony/polyfill-mbstring` do things only if an extension like `ext-mbstring` is missing. I think a configuration key that would act as the inverse of `replaces` could be useful in that kind of case.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dannyhajj": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6932", "title": "Include the current progress when installing or updating packages", "body": "Sometimes, when using composer, there would be lots of packages that need to be updated or installed. Especially when we use a framework. For example, when I'm trying to install Magento 2, Composer needs to install a total of 249 packages. It would be nice if Composer can help us figure out the current progress.\r\n\r\nWhen we are installing or updating packages with Composer, we get an output similar to the following \r\n```\r\nPackage operations: 249 installs, 0 updates, 0 removals\r\n  - Installing magento/magento-composer-installer (0.1.12): Loading from cache\r\n  - Installing magento/zendframework1 (1.13.1): Loading from cache\r\n  - Installing zendframework/zend-stdlib (2.7.7): Loading from cache\r\n....\r\n```\r\n\r\nHowever, during installation, it would be nice to know the current progress. Can the `Installing ...` messages be prepended with the progress of packages installed? It would be similar to Debian's apt approach when apt is downloading packages.\r\n\r\nHere are some examples of how it may work (I think the second example is the best):\r\n\r\n```\r\nPackage operations: 249 installs, 15 updates, 3 removals\r\n  - [Install: 1] Installing magento/magento-composer-installer (0.1.12): Loading from cache\r\n  - [Install: 2] Installing magento/zendframework1 (1.13.1): Loading from cache\r\n  - [Install: 3] Installing zendframework/zend-stdlib (2.7.7): Loading from cache\r\n....\r\n  - [Update: 1] Updating zendframework/zend-stdlib (2.7.7): Loading from cache\r\n  - [Update: 2] Updating zendframework/zend-stdlib (2.7.7): Loading from cache\r\n....\r\n  - [Removal: 1] Removing zendframework/zend-stdlib\r\n  - [Removal: 2] Removing zendframework/zend-stdlib\r\n  - [Removal: 3] Removing zendframework/zend-stdlib\r\n```\r\nor the following:\r\n```\r\nPackage operations: 249 installs, 15 updates, 3 removals\r\n  - [Install: 1/249] Installing magento/magento-composer-installer (0.1.12): Loading from cache\r\n  - [Install: 2/249] Installing magento/zendframework1 (1.13.1): Loading from cache\r\n  - [Install: 3/249] Installing zendframework/zend-stdlib (2.7.7): Loading from cache\r\n....\r\n  - [Update: 1/15] Updating zendframework/zend-stdlib (2.7.7): Loading from cache\r\n  - [Update: 2/15] Updating zendframework/zend-stdlib (2.7.7): Loading from cache\r\n....\r\n  - [Removal: 1/3] Removing zendframework/zend-stdlib\r\n  - [Removal: 2/3] Removing zendframework/zend-stdlib\r\n  - [Removal: 3/3] Removing zendframework/zend-stdlib\r\n```\r\n\r\nA third alternative would be to sum everything up (but this may be a bit confusing)\r\n\r\n```\r\nPackage operations: 249 installs, 15 updates, 3 removals\r\n  - [1/267] Installing magento/magento-composer-installer (0.1.12): Loading from cache\r\n  - [2/267] Installing magento/zendframework1 (1.13.1): Loading from cache\r\n  - [3/267] Installing zendframework/zend-stdlib (2.7.7): Loading from cache\r\n....\r\n  - [250/267] Updating zendframework/zend-stdlib (2.7.7): Loading from cache\r\n  - [251/267] Updating zendframework/zend-stdlib (2.7.7): Loading from cache\r\n....\r\n  - [265/267] Removing zendframework/zend-stdlib\r\n  - [266/267] Removing zendframework/zend-stdlib\r\n  - [267/267] Removing zendframework/zend-stdlib\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hkdobrev": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6929", "title": "RFC: Automatically resolve conflicts in composer.lock", "body": "When merging/rebasing branches it's not that rare that you may encounter merge conflicts in `composer.lock`. Most of the time the conflict would be in the hash or in a timestamp or in some cases you'd need to choose both blocks on the same lines.\r\n\r\nHowever, it's quite rare you'd actually need to manually resolve something in `composer.lock` in a custom way.\r\n\r\nThe usual workflow:\r\n\r\n1. You have a conflict in `composer.lock`\r\n1. You run your `git-mergetool` and chose one of the hashes - doesn't matter which one.\r\n1. `composer update --lock`\r\n1. `git add composer.lock`\r\n1. `git rebase --continue` or `git commit` (if you're merging).\r\n\r\nHow about automatically fix the merge conflicts when running `composer install` or `composer update --lock` if possible?\r\n\r\nThis was already implemented in Yarn:\r\n- Pull request: https://github.com/yarnpkg/yarn/pull/3544\r\n- Announcement: https://code.facebook.com/posts/274518539716230\r\n- Screenshot: https://user-images.githubusercontent.com/13352/27958995-8104ab7e-631d-11e7-8050-a36cbb48e75d.png\r\n\r\nWhat do you think?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6929/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Commifreak": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6927", "title": "Hang at \"Extracting archive\" for \"Updating symfony/finder (v3.3.13 => v3.4.2)\"", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"yiisoft/yii2-app-advanced\",\r\n  \"description\": \"Yii 2 Advanced Project Template\",\r\n  \"keywords\": [\r\n    \"yii2\",\r\n    \"framework\",\r\n    \"advanced\",\r\n    \"project template\"\r\n  ],\r\n  \"homepage\": \"http://www.yiiframework.com/\",\r\n  \"type\": \"project\",\r\n  \"license\": \"BSD-3-Clause\",\r\n  \"support\": {\r\n    \"issues\": \"https://github.com/yiisoft/yii2/issues?state=open\",\r\n    \"forum\": \"http://www.yiiframework.com/forum/\",\r\n    \"wiki\": \"http://www.yiiframework.com/wiki/\",\r\n    \"irc\": \"irc://irc.freenode.net/yii\",\r\n    \"source\": \"https://github.com/yiisoft/yii2\"\r\n  },\r\n  \"minimum-stability\": \"dev\",\r\n  \"prefer-stable\": true,\r\n  \"require\": {\r\n    \"php\": \">=5.4.0\",\r\n    \"bower-asset/jquery\": \"2.2.4\",\r\n    \"yiisoft/yii2-bootstrap\": \"~2.0.0\",\r\n    \"yiisoft/yii2-swiftmailer\": \"~2.0.0\",\r\n    \"samdark/yii2-webshell\": \"~1.0\",\r\n    \"kartik-v/yii2-widget-sidenav\": \"*\",\r\n    \"kartik-v/yii2-widget-activeform\": \"*\",\r\n    \"kartik-v/yii2-widgets\": \"*\",\r\n    \"kartik-v/yii2-tabs-x\": \"*\",\r\n    \"kartik-v/yii2-detail-view\": \"*\",\r\n    \"kartik-v/yii2-widget-growl\": \"*\",\r\n    \"kartik-v/yii2-nav-x\": \"*\",\r\n    \"yiisoft/yii2-imagine\": \"^2.1\",\r\n    \"kartik-v/yii2-grid\": \"@dev\",\r\n    \"kartik-v/yii2-mpdf\": \"*\",\r\n    \"kartik-v/yii2-editable\": \"*\",\r\n    \"phpoffice/phpexcel\": \"^1.8\",\r\n    \"2amigos/yii2-file-upload-widget\": \"*\",\r\n    \"moonlandsoft/yii2-phpexcel\": \"*\",\r\n    \"kartik-v/yii2-dynagrid\": \"@dev\",\r\n    \"liyunfang/yii2-widget-linkpager\": \"^1.0\",\r\n    \"franciscomaya/yii2-sceditor\": \"dev-master\",\r\n    \"newerton/yii2-fancybox\": \"dev-master\",\r\n    \"kartik-v/yii2-icons\": \"^1.4\",\r\n    \"kartik-v/yii2-checkbox-x\": \"^1.0\",\r\n    \"kartik-v/yii2-export\": \"^1.2\",\r\n    \"nostop8/rest-api-doc\": \"^1.022\"\r\n  },\r\n  \"require-dev\": {\r\n    \"yiisoft/yii2-debug\": \"~2.0.0\",\r\n    \"yiisoft/yii2-gii\": \"~2.0.0\",\r\n    \"yiisoft/yii2-faker\": \"~2.0.0\",\r\n    \"codeception/base\": \"^2.2.3\",\r\n    \"codeception/verify\": \"~0.3.1\"\r\n  },\r\n  \"config\": {\r\n    \"process-timeout\": 1800,\r\n    \"fxp-asset\": {\r\n      \"installer-paths\":{\r\n        \"npm-asset-library\": \"vendor/npm\",\r\n        \"bower-asset-library\": \"vendor/bower\"\r\n      }\r\n    }\r\n  },\r\n\r\n  \"scripts\": {\r\n    \"post-install-cmd\": \"php init --env=Development --overwrite=n\"\r\n  }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking HTTP proxy: OK\r\nChecking HTTP proxy support for request_fulluri: OK\r\nChecking HTTPS proxy support for request_fulluri: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update -vvv\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nUpdating symfony/finder (v3.3.13 => v3.4.2): Downloading https://api.github.com/repos/symfony/finder/zipball/dac8d7db537bac7ad8143eb11360a8c2231f251a using proxy 172.31.42.58:3128\r\nDownloading (connecting...)\r\nFollowing redirect (2) https://codeload.github.com/symfony/finder/legacy.zip/dac8d7db537bac7ad8143eb11360a8c2231f251a\r\nDownloading https://codeload.github.com/symfony/finder/legacy.zip/dac8d7db537bac7ad8143eb11360a8c2231f251a using proxy 172.31.42.58:3128\r\nDownloading (100%)Writing C:/Users/Robin/AppData/Local/Composer/files/symfony/finder/98b6d964200f697ea0e5446d706b87c1f3584e8c.zip into cache from C:\\Users\\Robin\\Documents\\Projekte\\FoPro+\\vendor/symfony/finder/038aab65b90ab3f3d8be02b00bcef6f6\r\n Extracting archive\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nHangs at Extracting archive since one hour. Tried two times. Cleared cache in the meanwhile, no change. How to diagnose further? All other packages downloaded/extracted well.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/6796", "title": "Package operations: 1 update - but there is none", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"yiisoft/yii2-app-advanced\",\r\n  \"description\": \"Yii 2 Advanced Project Template\",\r\n  \"keywords\": [\r\n    \"yii2\",\r\n    \"framework\",\r\n    \"advanced\",\r\n    \"project template\"\r\n  ],\r\n  \"homepage\": \"http://www.yiiframework.com/\",\r\n  \"type\": \"project\",\r\n  \"license\": \"BSD-3-Clause\",\r\n  \"support\": {\r\n    \"issues\": \"https://github.com/yiisoft/yii2/issues?state=open\",\r\n    \"forum\": \"http://www.yiiframework.com/forum/\",\r\n    \"wiki\": \"http://www.yiiframework.com/wiki/\",\r\n    \"irc\": \"irc://irc.freenode.net/yii\",\r\n    \"source\": \"https://github.com/yiisoft/yii2\"\r\n  },\r\n  \"minimum-stability\": \"dev\",\r\n  \"prefer-stable\": true,\r\n  \"require\": {\r\n    \"php\": \">=5.4.0\",\r\n    \"yiisoft/yii2\": \"~2.0.6\",\r\n    \"yiisoft/yii2-bootstrap\": \"~2.0.0\",\r\n    \"yiisoft/yii2-swiftmailer\": \"~2.0.0\",\r\n    \"samdark/yii2-webshell\": \"~1.0\",\r\n    \"kartik-v/yii2-widget-sidenav\": \"*\",\r\n    \"kartik-v/yii2-widget-activeform\": \"*\",\r\n    \"kartik-v/yii2-widgets\": \"*\",\r\n    \"kartik-v/yii2-tabs-x\": \"*\",\r\n    \"kartik-v/yii2-detail-view\": \"*\",\r\n    \"kartik-v/yii2-widget-growl\": \"*\",\r\n    \"kartik-v/yii2-nav-x\": \"*\",\r\n    \"yiisoft/yii2-imagine\": \"^2.1\",\r\n    \"kartik-v/yii2-grid\": \"@dev\",\r\n    \"kartik-v/yii2-mpdf\": \"*\",\r\n    \"kartik-v/yii2-editable\": \"*\",\r\n    \"phpoffice/phpexcel\": \"^1.8\",\r\n    \"2amigos/yii2-file-upload-widget\": \"*\",\r\n    \"moonlandsoft/yii2-phpexcel\": \"*\",\r\n    \"kartik-v/yii2-dynagrid\": \"@dev\",\r\n    \"liyunfang/yii2-widget-linkpager\": \"^1.0\",\r\n    \"franciscomaya/yii2-sceditor\": \"dev-master\",\r\n    \"newerton/yii2-fancybox\": \"dev-master\",\r\n    \"kartik-v/yii2-icons\": \"^1.4\"\r\n  },\r\n  \"require-dev\": {\r\n    \"yiisoft/yii2-debug\": \"~2.0.0\",\r\n    \"yiisoft/yii2-gii\": \"~2.0.0\",\r\n    \"yiisoft/yii2-faker\": \"~2.0.0\",\r\n    \"codeception/base\": \"^2.2.3\",\r\n    \"codeception/verify\": \"~0.3.1\"\r\n  },\r\n  \"config\": {\r\n    \"process-timeout\": 1800\r\n  },\r\n  \"extra\": {\r\n    \"asset-installer-paths\": {\r\n      \"npm-asset-library\": \"vendor/npm\",\r\n      \"bower-asset-library\": \"vendor/bower\"\r\n    }\r\n  },\r\n  \"scripts\": {\r\n    \"post-install-cmd\": \"php init --env=Development --overwrite=n\"\r\n  }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nrequire.kartik-v/yii2-widget-sidenav : unbound version constraints (*) should be avoided\r\nrequire.kartik-v/yii2-widget-activeform : unbound version constraints (*) should be avoided\r\nrequire.kartik-v/yii2-widgets : unbound version constraints (*) should be avoided\r\nrequire.kartik-v/yii2-tabs-x : unbound version constraints (*) should be avoided\r\nrequire.kartik-v/yii2-detail-view : unbound version constraints (*) should be avoided\r\nrequire.kartik-v/yii2-widget-growl : unbound version constraints (*) should be avoided\r\nrequire.kartik-v/yii2-nav-x : unbound version constraints (*) should be avoided\r\nrequire.kartik-v/yii2-grid : unbound version constraints (@dev) should be avoided\r\nrequire.kartik-v/yii2-mpdf : unbound version constraints (*) should be avoided\r\nrequire.kartik-v/yii2-editable : unbound version constraints (*) should be avoided\r\nrequire.2amigos/yii2-file-upload-widget : unbound version constraints (*) should be avoided\r\nrequire.moonlandsoft/yii2-phpexcel : unbound version constraints (*) should be avoided\r\nrequire.kartik-v/yii2-dynagrid : unbound version constraints (@dev) should be avoided\r\nrequire.franciscomaya/yii2-sceditor : unbound version constraints (dev-master) should be avoided\r\nrequire.newerton/yii2-fancybox : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking HTTP proxy: OK\r\nChecking HTTP proxy support for request_fulluri: OK\r\nChecking HTTPS proxy support for request_fulluri: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nThe \"extra.asset-installer-paths\" option is deprecated, use the \"config.fxp-asset.installer-paths\" option\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 0 installs, 1 update, 0 removals\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen: composer list 1 update, but does nothing. --dry-run shows the same. Whats that mysterious 1 update?\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AnrDaemon": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6922", "title": "dev-master is not resolved in branch-alias in Subversion repository", "body": "With `composer.json` like this in a Subversion repo:\r\n\r\n```json\r\n{\r\n    \u2026\r\n    \"extra\": {\r\n        \"branch-alias\": {\r\n            \"dev-master\": \"1.x-dev\"\r\n        }\r\n    },\r\n    \u2026\r\n}\r\n```\r\n\r\ninstallation fails with:\r\n\r\n```\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - The requested package vendor/project ^1.7@dev exists as vendor/project[dev-trunk] but these are rejected by your constraint.\r\n```\r\n\r\nThere's a workaround for this, though - just add dev-trunk the same way:\r\n\r\n```json\r\n{\r\n    \u2026\r\n    \"extra\": {\r\n        \"branch-alias\": {\r\n            \"dev-trunk\": \"1.x-dev\",\r\n            \"dev-master\": \"1.x-dev\"\r\n        }\r\n    },\r\n    \u2026\r\n}\r\n```\r\n\r\nBut I don't think it's a desirable behavior.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "StepanyanAlbert": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6918", "title": "Php version shows 7 but composer does not work", "body": "My `composer.json`:\r\n\r\n```json\r\ncat composer.json \r\n{\r\n    \"name\": \"laravel/laravel\",\r\n    \"description\": \"The Laravel Framework.\",\r\n    \"keywords\": [\"framework\", \"laravel\"],\r\n    \"license\": \"MIT\",\r\n    \"type\": \"project\",\r\n    \"require\": {\r\n        \"php\": \">=7.0.0\",\r\n        \"barryvdh/laravel-debugbar\": \"^3.1\",\r\n        \"fideloper/proxy\": \"~3.3\",\r\n        \"laravel/framework\": \"5.5.*\",\r\n        \"laravel/tinker\": \"~1.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"filp/whoops\": \"~2.0\",\r\n        \"fzaninotto/faker\": \"~1.4\",\r\n        \"mockery/mockery\": \"~1.0\",\r\n        \"phpunit/phpunit\": \"~6.0\"\r\n    },\r\n    \"autoload\": {\r\n        \"classmap\": [\r\n            \"database/seeds\",\r\n            \"database/factories\"\r\n        ],\r\n        \"psr-4\": {\r\n            \"App\\\\\": \"app/\"\r\n        }\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Tests\\\\\": \"tests/\"\r\n        }\r\n    },\r\n    \"extra\": {\r\n        \"laravel\": {\r\n            \"dont-discover\": [\r\n            ]\r\n        }\r\n    },\r\n    \"scripts\": {\r\n        \"post-root-package-install\": [\r\n            \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\r\n        ],\r\n        \"post-create-project-cmd\": [\r\n            \"@php artisan key:generate\"\r\n        ],\r\n        \"post-autoload-dump\": [\r\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\r\n            \"@php artisan package:discover\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"preferred-install\": \"dist\",\r\n        \"sort-packages\": true,\r\n        \"optimize-autoloader\": true\r\n    }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\ncomposer diagnose\r\nChecking composer.json: OK\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: Warning: Accessing packagist.org over http which is an insecure protocol.\r\nOK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: FAIL\r\nYou are not running the latest stable version, run `composer self-update` to update (1.1.2 => 1.5.6)\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n\r\n  Problem 1\r\n    - This package requires php >=7.0.0 but your PHP version (5.6.32) does not satisfy that requirement.\r\n  Problem 2\r\n    - Installation request for barryvdh/laravel-debugbar ^3.1 -> satisfiable by barryvdh/laravel-debugbar[v3.1.0].\r\n    - barryvdh/laravel-debugbar v3.1.0 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n  Problem 3\r\n    - laravel/framework v5.5.9 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.8 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.7 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.6 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.5 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.4 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.3 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.26 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.25 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.24 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.23 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.22 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.21 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.20 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.2 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.19 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.18 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.17 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.16 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.15 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.14 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.13 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.12 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.11 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.10 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.1 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - laravel/framework v5.5.0 requires php >=7.0 -> your PHP version (5.6.32) does not satisfy that requirement.\r\n    - Installation request for laravel/framework 5.5.* -> satisfiable by laravel/framework[v5.5.0, v5.5.1, v5.5.10, v5.5.11, v5.5.12, v5.5.13, v5.5.14, v5.5.15, v5.5.16, v5.5.17, v5.5.18, v5.5.19, v5.5.2, v5.5.20, v5.5.21, v5.5.22, v5.5.23, v5.5.24, v5.5.25, v5.5.26, v5.5.3, v5.5.4, v5.5.5, v5.5.6, v5.5.7, v5.5.8, v5.5.9].\r\n\r\n\r\n```\r\n\r\nAnd I expected composer to install laravel dependencies \r\n\r\nOutput of php -v\r\n```\r\nea-php-cli Copyright 2017 cPanel, Inc.\r\nPHP 7.0.26 (cli) (built: Dec  4 2017 16:05:39) ( NTS )\r\nCopyright (c) 1997-2017 The PHP Group\r\nZend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies\r\n``` \r\nDelete all kind of caches but still no success , I don't want to update composer if possible.\r\nThanks", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bertuz": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6916", "title": "\"tar\" type repository does not allow .tar.bz2 archives", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"<my-proj-name>\",\r\n    \"optimize-autoloader\": true,\r\n    \"classmap-authoritative\": true,\r\n    \"config\": {\r\n      \"secure-http\": false\r\n    },\r\n    \"autoload\":{\r\n        \"psr-0\":{\r\n            \"\":\"src/\"\r\n        }\r\n    },\r\n    \"repositories\": [\r\n      {\r\n        \"type\":\"package\",\r\n        \"package\":{\r\n          \"name\":\"<my-local-lib-name>\",\r\n          \"version\":\"15.0.0\",\r\n          \"dist\":{\r\n            \"url\":\"file:///Users/<mypath>/test.tar.bz2\",\r\n            \"type\":\"tar\"\r\n          },\r\n          \"autoload\":{\r\n            \"classmap\":[\"./\"]\r\n          }\r\n        }\r\n      }\r\n    ],\r\n    \"require\": {\r\n      \"<my-local-lib-name>\":\"*\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nMacBook-Pro-de-Matteo:<proj-name> mbertamini$ composer diagnose\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nDefining autoload.psr-0 with an empty namespace prefix is a bad idea for performance\r\n<lib> : unbound version constraints (*) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nMacBook-Pro-de-Matteo:<proj-name> mbertamini$ composer install\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 1 install, 0 updates, 0 removals\r\n  - Installing <lib> (15.0.0): Warning: Accessing <domain> over http which is an insecure protocol.\r\nDownloading (100%)         \r\n\r\n                                                                                                                                                            \r\n  [PharException]                                                                                                                                           \r\n  Extraction from phar \"<path>/2acabddd126333166a11a2552f50fefe.bz2\" failed: Can  \r\n  not extract \".\", internal error                                                                                                                           \r\n                                    \r\n```\r\n\r\nAnd I expected this to happen:\r\nthe library extracred and installed properly.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6916/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GreyBlade": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6914", "title": "Composer not creating vendor/autoload.php When creating api-platform project", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"api-platform/api-platform\",\r\n    \"license\": \"MIT\",\r\n    \"type\": \"project\",\r\n    \"description\": \"The API Platform framework\",\r\n    \"homepage\": \"https://api-platform.com\",\r\n    \"authors\": [\r\n        {\r\n            \"name\": \"K\u00e9vin Dunglas\",\r\n            \"email\": \"dunglas@gmail.com\",\r\n            \"homepage\": \"https://dunglas.fr\"\r\n        }\r\n    ],\r\n    \"autoload\": {\r\n        \"psr-4\": { \"\": \"src/\" },\r\n        \"classmap\": [ \"app/AppKernel.php\", \"app/AppCache.php\" ]\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": { \"Tests\\\\\": \"tests/\" }\r\n    },\r\n    \"require\": {\r\n        \"php\": \">=7.0\",\r\n        \"api-platform/core\": \"^2.1\",\r\n        \"doctrine/doctrine-bundle\": \"^1.6\",\r\n        \"doctrine/orm\": \"^2.5\",\r\n        \"guzzlehttp/guzzle\": \"^6.0\",\r\n        \"incenteev/composer-parameter-handler\": \"^2.0\",\r\n        \"nelmio/cors-bundle\": \"^1.4\",\r\n        \"phpdocumentor/reflection-docblock\": \"^3.0\",\r\n        \"sensio/distribution-bundle\": \"^5.0.19\",\r\n        \"sensio/framework-extra-bundle\": \"^3.0.2\",\r\n        \"symfony/monolog-bundle\": \"^3.1.0\",\r\n        \"symfony/swiftmailer-bundle\": \"^2.3.10\",\r\n        \"symfony/symfony\": \"3.3.*\",\r\n        \"twig/twig\": \"^1.0 || ^2.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"api-platform/schema-generator\": \"^1.0 || ^2.0\",\r\n        \"behat/behat\": \"^3.1\",\r\n        \"behat/mink\": \"^1.7\",\r\n        \"behat/mink-browserkit-driver\": \"^1.3.1\",\r\n        \"behat/mink-extension\": \"^2.2\",\r\n        \"behat/symfony2-extension\": \"^2.1\",\r\n        \"behatch/contexts\": \"^2.5\",\r\n        \"sensio/generator-bundle\": \"^3.0\",\r\n        \"symfony/phpunit-bridge\": \"^3.0\"\r\n    },\r\n    \"scripts\": {\r\n        \"symfony-scripts\": [\r\n            \"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::clearCache\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installAssets\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installRequirementsFile\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::prepareDeploymentTarget\"\r\n        ],\r\n        \"post-install-cmd\": [\r\n            \"@symfony-scripts\"\r\n        ],\r\n        \"post-update-cmd\": [\r\n            \"@symfony-scripts\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"sort-packages\": true\r\n    },\r\n    \"extra\": {\r\n        \"symfony-app-dir\": \"app\",\r\n        \"symfony-bin-dir\": \"bin\",\r\n        \"symfony-var-dir\": \"var\",\r\n        \"symfony-web-dir\": \"web\",\r\n        \"symfony-tests-dir\": \"tests\",\r\n        \"symfony-assets-install\": \"hard\",\r\n        \"incenteev-parameters\": {\r\n            \"file\": \"app/config/parameters.yml\"\r\n        },\r\n        \"branch-alias\": {\r\n            \"dev-master\": \"2.1-dev\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n\r\n```\r\n\r\nWhen I run this command: \r\n\r\n```\r\n$ bin/console doctrine:database:create\r\n\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nPHP Warning:  require(/home/jaime/Documentos/Netkia/LoginAPI/bin/../vendor/autoload.php): failed to open stream: No such file or directory in /home/jaime/Documentos/Netkia/LoginAPI/bin/console on line 15\r\nPHP Fatal error:  require(): Failed opening required '/home/jaime/Documentos/Netkia/LoginAPI/bin/../vendor/autoload.php' (include_path='.:/usr/share/php') in /home/jaime/Documentos/Netkia/LoginAPI/bin/console on line 15\r\n```\r\n\r\nAnd also when i create the project this is the output that i get\r\n\r\n```\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - Installation request for symfony/symfony v3.3.13 -> satisfiable by symfony/symfony[v3.3.13].\r\n    - symfony/symfony v3.3.13 requires ext-xml * -> the requested PHP extension xml is missing from your system.\r\n  Problem 2\r\n    - Installation request for behat/behat v3.4.3 -> satisfiable by behat/behat[v3.4.3].\r\n    - behat/behat v3.4.3 requires ext-mbstring * -> the requested PHP extension mbstring is missing from your system.\r\n  Problem 3\r\n    - Installation request for easyrdf/easyrdf 0.9.1 -> satisfiable by easyrdf/easyrdf[0.9.1].\r\n    - easyrdf/easyrdf 0.9.1 requires ext-mbstring * -> the requested PHP extension mbstring is missing from your system.\r\n  Problem 4\r\n    - Installation request for league/html-to-markdown 4.6.0 -> satisfiable by league/html-to-markdown[4.6.0].\r\n    - league/html-to-markdown 4.6.0 requires ext-dom * -> the requested PHP extension dom is missing from your system.\r\n  Problem 5\r\n    - symfony/symfony v3.3.13 requires ext-xml * -> the requested PHP extension xml is missing from your system.\r\n    - sensio/generator-bundle v3.1.6 requires symfony/console ~2.7|~3.0 -> satisfiable by symfony/symfony[v3.3.13].\r\n    - Installation request for sensio/generator-bundle v3.1.6 -> satisfiable by sensio/generator-bundle[v3.1.6].\r\n\r\n  To enable extensions, verify that they are enabled in your .ini files:\r\n    - /etc/php/7.2/cli/php.ini\r\n    - /etc/php/7.2/cli/conf.d/10-opcache.ini\r\n    - /etc/php/7.2/cli/conf.d/10-pdo.ini\r\n    - /etc/php/7.2/cli/conf.d/20-calendar.ini\r\n    - /etc/php/7.2/cli/conf.d/20-ctype.ini\r\n    - /etc/php/7.2/cli/conf.d/20-exif.ini\r\n    - /etc/php/7.2/cli/conf.d/20-fileinfo.ini\r\n    - /etc/php/7.2/cli/conf.d/20-ftp.ini\r\n    - /etc/php/7.2/cli/conf.d/20-gettext.ini\r\n    - /etc/php/7.2/cli/conf.d/20-iconv.ini\r\n    - /etc/php/7.2/cli/conf.d/20-json.ini\r\n    - /etc/php/7.2/cli/conf.d/20-phar.ini\r\n    - /etc/php/7.2/cli/conf.d/20-posix.ini\r\n    - /etc/php/7.2/cli/conf.d/20-readline.ini\r\n    - /etc/php/7.2/cli/conf.d/20-shmop.ini\r\n    - /etc/php/7.2/cli/conf.d/20-sockets.ini\r\n    - /etc/php/7.2/cli/conf.d/20-sysvmsg.ini\r\n    - /etc/php/7.2/cli/conf.d/20-sysvsem.ini\r\n    - /etc/php/7.2/cli/conf.d/20-sysvshm.ini\r\n    - /etc/php/7.2/cli/conf.d/20-tokenizer.ini\r\n  You can also run `php --ini` inside terminal to see which files are used by PHP in CLI mode.\r\n\r\n```\r\n\r\nAnybody can tell me a way to fix this problem?\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "selimachour": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6905", "title": "composer broke on cygwin/windows 10 ?", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"yiisoft/yii2-app-advanced\",\r\n    \"description\": \"Yii 2 Advanced Project Template\",\r\n    \"keywords\": [\"yii2\", \"framework\", \"advanced\", \"project template\"],\r\n    \"homepage\": \"http://www.yiiframework.com/\",\r\n    \"type\": \"project\",\r\n    \"license\": \"BSD-3-Clause\",\r\n    \"support\": {\r\n        \"issues\": \"https://github.com/yiisoft/yii2/issues?state=open\",\r\n        \"forum\": \"http://www.yiiframework.com/forum/\",\r\n        \"wiki\": \"http://www.yiiframework.com/wiki/\",\r\n        \"irc\": \"irc://irc.freenode.net/yii\",\r\n        \"source\": \"https://github.com/yiisoft/yii2\"\r\n    },\r\n    \"minimum-stability\": \"dev\",\r\n    \"require\": {\r\n        \"php\": \">=5.4.0\",\r\n        \"yiisoft/yii2\": \"~2.0.6\",\r\n        \"yiisoft/yii2-bootstrap\": \"~2.0.0\",\r\n        \"yiisoft/yii2-swiftmailer\": \"~2.0.0 || ~2.1.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"yiisoft/yii2-debug\": \"~2.0.0\",\r\n        \"yiisoft/yii2-gii\": \"~2.0.0\",\r\n        \"yiisoft/yii2-faker\": \"~2.0.0\",\r\n        \"codeception/base\": \"^2.2.3\",\r\n        \"codeception/verify\": \"~0.3.1\"\r\n    },\r\n    \"config\": {\r\n        \"process-timeout\": 1800\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://asset-packagist.org\"\r\n        }\r\n    ]\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: OK\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n$ php ../composer.phar install\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 63 installs, 0 updates, 0 removals\r\n  - Installing yiisoft/yii2-composer (dev-master 248f706): Cloning 248f7065a3\r\n    Failed to download yiisoft/yii2-composer from source: Failed to clone https://github.com/yiisoft/yii2-composer.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/yiisoft/yii2-composer.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-composer' already exists and is not an empty directory.\r\n\r\n- git@github.com:yiisoft/yii2-composer.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-composer' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing yiisoft/yii2-composer (dev-master 248f706): Downloading (100%)\r\n  - Installing bower-asset/jquery (3.2.1): Downloading (100%)\r\n  - Installing bower-asset/inputmask (3.3.11): Downloading (100%)\r\n  - Installing ezyang/htmlpurifier (v4.9.3): Downloading (100%)\r\n  - Installing bower-asset/yii2-pjax (2.0.7.1): Downloading (100%)\r\n  - Installing bower-asset/punycode (v1.3.2): Downloading (100%)\r\n  - Installing cebe/markdown (dev-master fcc3253): Cloning fcc325311c\r\n    Skipped installation of bin bin/markdown for package cebe/markdown: file not found in package\r\n  - Installing yiisoft/yii2 (dev-master c3a6151): Cloning c3a61516ea\r\n    Failed to download yiisoft/yii2 from source: Failed to clone https://github.com/yiisoft/yii2-framework.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/yiisoft/yii2-framework.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:yiisoft/yii2-framework.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing yiisoft/yii2 (dev-master c3a6151): Downloading (100%)\r\n  - Installing bower-asset/bootstrap (v3.3.7): Downloading (100%)\r\n  - Installing yiisoft/yii2-bootstrap (dev-master c330c0e): Cloning c330c0e2c1\r\n    Failed to download yiisoft/yii2-bootstrap from source: Failed to clone https://github.com/yiisoft/yii2-bootstrap.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/yiisoft/yii2-bootstrap.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-bootstrap'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:yiisoft/yii2-bootstrap.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-bootstrap' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing yiisoft/yii2-bootstrap (dev-master c330c0e): Downloading (100%)\r\n  - Installing doctrine/lexer (dev-master cc709ba): Cloning cc709ba91e\r\n    Failed to download doctrine/lexer from source: Failed to clone https://github.com/doctrine/lexer.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/doctrine/lexer.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/doctrine/lexer'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:doctrine/lexer.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/doctrine/lexer' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing doctrine/lexer (dev-master cc709ba): Downloading (100%)\r\n  - Installing egulias/email-validator (2.1.3): Downloading (100%)\r\n  - Installing swiftmailer/swiftmailer (dev-master 5126386): Cloning 5126386947\r\n    Failed to download swiftmailer/swiftmailer from source: Failed to clone https://github.com/swiftmailer/swiftmailer.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/swiftmailer/swiftmailer.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/swiftmailer/swiftmailer'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:swiftmailer/swiftmailer.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/swiftmailer/swiftmailer' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing swiftmailer/swiftmailer (dev-master 5126386): Downloading (100%)\r\n  - Installing yiisoft/yii2-swiftmailer (dev-master 5cd9719): Cloning 5cd9719386\r\n    Failed to download yiisoft/yii2-swiftmailer from source: Failed to clone https://github.com/yiisoft/yii2-swiftmailer.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/yiisoft/yii2-swiftmailer.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-swiftmailer'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:yiisoft/yii2-swiftmailer.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-swiftmailer' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing yiisoft/yii2-swiftmailer (dev-master 5cd9719): Downloading (100%)\r\n  - Installing yiisoft/yii2-debug (dev-master bddd214): Cloning bddd214ca5\r\n    Failed to download yiisoft/yii2-debug from source: Failed to clone https://github.com/yiisoft/yii2-debug.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/yiisoft/yii2-debug.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-debug'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:yiisoft/yii2-debug.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-debug' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing yiisoft/yii2-debug (dev-master bddd214): Downloading (100%)\r\n  - Installing bower-asset/typeahead.js (v0.11.1): Downloading (100%)\r\n  - Installing phpspec/php-diff (dev-master 0464787): Cloning 0464787bfa\r\n    Failed to download phpspec/php-diff from source: Failed to clone https://github.com/phpspec/php-diff.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/phpspec/php-diff.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phpspec/php-diff'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:phpspec/php-diff.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phpspec/php-diff' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phpspec/php-diff (dev-master 0464787): Downloading (100%)\r\n  - Installing yiisoft/yii2-gii (dev-master 3518f48): Cloning 3518f48a79\r\n    Failed to download yiisoft/yii2-gii from source: Failed to clone https://github.com/yiisoft/yii2-gii.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/yiisoft/yii2-gii.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-gii'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:yiisoft/yii2-gii.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-gii' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing yiisoft/yii2-gii (dev-master 3518f48): Downloading (100%)\r\n  - Installing fzaninotto/faker (dev-master e8fce01): Cloning e8fce01afa\r\n    Failed to download fzaninotto/faker from source: Failed to clone https://github.com/fzaninotto/Faker.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/fzaninotto/Faker.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/fzaninotto/faker'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:fzaninotto/Faker.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/fzaninotto/faker' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing fzaninotto/faker (dev-master e8fce01): Downloading (100%)\r\n  - Installing yiisoft/yii2-faker (dev-master ed09cae): Cloning ed09caef15\r\n    Failed to download yiisoft/yii2-faker from source: Failed to clone https://github.com/yiisoft/yii2-faker.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/yiisoft/yii2-faker.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-faker'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:yiisoft/yii2-faker.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/yiisoft/yii2-faker' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing yiisoft/yii2-faker (dev-master ed09cae): Downloading (100%)\r\n  - Installing symfony/polyfill-mbstring (dev-master 2ec8b39): Cloning 2ec8b39c38\r\n    Failed to download symfony/polyfill-mbstring from source: Failed to clone https://github.com/symfony/polyfill-mbstring.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/symfony/polyfill-mbstring.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/symfony/polyfill-mbstring'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:symfony/polyfill-mbstring.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/symfony/polyfill-mbstring' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing symfony/polyfill-mbstring (dev-master 2ec8b39): Loading from cache\r\n  - Installing symfony/dom-crawler (3.4.x-dev dc84784): Cloning dc847845c6\r\n    Failed to download symfony/dom-crawler from source: Failed to clone https://github.com/symfony/dom-crawler.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/symfony/dom-crawler.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/symfony/dom-crawler'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:symfony/dom-crawler.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/symfony/dom-crawler' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing symfony/dom-crawler (3.4.x-dev dc84784): Downloading (100%)\r\n  - Installing symfony/css-selector (3.4.x-dev eac760b): Cloning eac760b414\r\n    Failed to download symfony/css-selector from source: Failed to clone https://github.com/symfony/css-selector.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/symfony/css-selector.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/symfony/css-selector'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:symfony/css-selector.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/symfony/css-selector' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing symfony/css-selector (3.4.x-dev eac760b): Downloading (100%)\r\n  - Installing symfony/browser-kit (3.4.x-dev f761b4e): Cloning f761b4ecdd\r\n    Failed to download symfony/browser-kit from source: Failed to clone https://github.com/symfony/browser-kit.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/symfony/browser-kit.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/symfony/browser-kit'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:symfony/browser-kit.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/symfony/browser-kit' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing symfony/browser-kit (3.4.x-dev f761b4e): Downloading (100%)\r\n  - Installing symfony/yaml (3.4.x-dev afe0cd3): Cloning afe0cd3848\r\n    Failed to download symfony/yaml from source: Failed to clone https://github.com/symfony/yaml.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/symfony/yaml.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/symfony/yaml'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:symfony/yaml.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/symfony/yaml' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing symfony/yaml (3.4.x-dev afe0cd3): Downloading (100%)\r\n  - Installing symfony/event-dispatcher (3.4.x-dev b869cbf): Cloning b869cbf8a1\r\n    Failed to download symfony/event-dispatcher from source: Failed to clone https://github.com/symfony/event-dispatcher.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/symfony/event-dispatcher.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/symfony/event-dispatcher'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:symfony/event-dispatcher.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/symfony/event-dispatcher' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing symfony/event-dispatcher (3.4.x-dev b869cbf): Downloading (100%)\r\n  - Installing psr/log (dev-master 4ebe3a8): Cloning 4ebe3a8bf7\r\n    Failed to download psr/log from source: Failed to clone https://github.com/php-fig/log.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/php-fig/log.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/psr/log'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:php-fig/log.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/psr/log' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing psr/log (dev-master 4ebe3a8): Loading from cache\r\n  - Installing symfony/debug (3.4.x-dev 543deab): Cloning 543deab3ff\r\n    Failed to download symfony/debug from source: Failed to clone https://github.com/symfony/debug.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/symfony/debug.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/symfony/debug'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:symfony/debug.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/symfony/debug' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing symfony/debug (3.4.x-dev 543deab): Loading from cache\r\n  - Installing symfony/console (3.4.x-dev 9f21adf): Cloning 9f21adfb92\r\n    Failed to download symfony/console from source: Failed to clone https://github.com/symfony/console.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/symfony/console.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/symfony/console'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:symfony/console.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/symfony/console' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing symfony/console (3.4.x-dev 9f21adf): Loading from cache\r\n  - Installing symfony/finder (3.4.x-dev dac8d7d): Cloning dac8d7db53\r\n    Failed to download symfony/finder from source: Failed to clone https://github.com/symfony/finder.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/symfony/finder.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/symfony/finder'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:symfony/finder.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/symfony/finder' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing symfony/finder (3.4.x-dev dac8d7d): Loading from cache\r\n  - Installing sebastian/version (dev-master 99732be): Cloning 99732be0dd\r\n    Failed to download sebastian/version from source: Failed to clone https://github.com/sebastianbergmann/version.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/version.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/version'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/version.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/version' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/version (dev-master 99732be): Downloading (100%)\r\n  - Installing sebastian/resource-operations (dev-master fadc83f): Cloning fadc83f7c4\r\n    Failed to download sebastian/resource-operations from source: Failed to clone https://github.com/sebastianbergmann/resource-operations.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/resource-operations.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/resource-operations'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/resource-operations.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/resource-operations' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/resource-operations (dev-master fadc83f): Downloading (100%)\r\n  - Installing sebastian/object-reflector (dev-master e1b86d7): Cloning e1b86d7bde\r\n    Failed to download sebastian/object-reflector from source: Failed to clone https://github.com/sebastianbergmann/object-reflector.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/object-reflector.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/object-reflector'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/object-reflector.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/object-reflector' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/object-reflector (dev-master e1b86d7): Downloading (100%)\r\n  - Installing sebastian/recursion-context (dev-master 0f7f5eb): Cloning 0f7f5eb769\r\n    Failed to download sebastian/recursion-context from source: Failed to clone https://github.com/sebastianbergmann/recursion-context.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/recursion-context.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/recursion-context'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/recursion-context.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/recursion-context' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/recursion-context (dev-master 0f7f5eb): Downloading (100%)\r\n  - Installing sebastian/object-enumerator (dev-master a496797): Cloning a496797f3b\r\n    Failed to download sebastian/object-enumerator from source: Failed to clone https://github.com/sebastianbergmann/object-enumerator.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/object-enumerator.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/object-enumerator'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/object-enumerator.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/object-enumerator' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/object-enumerator (dev-master a496797): Downloading (100%)\r\n  - Installing sebastian/global-state (dev-master a27e666): Cloning a27e666314\r\n    Failed to download sebastian/global-state from source: Failed to clone https://github.com/sebastianbergmann/global-state.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/global-state.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/global-state'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/global-state.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/global-state' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/global-state (dev-master a27e666): Downloading (100%)\r\n  - Installing sebastian/exporter (dev-master 573f8b7): Cloning 573f8b71a2\r\n    Failed to download sebastian/exporter from source: Failed to clone https://github.com/sebastianbergmann/exporter.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/exporter.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/exporter'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/exporter.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/exporter' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/exporter (dev-master 573f8b7): Downloading (100%)\r\n  - Installing sebastian/environment (dev-master ceaeb5d): Cloning ceaeb5d93e\r\n    Failed to download sebastian/environment from source: Failed to clone https://github.com/sebastianbergmann/environment.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/environment.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/environment'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/environment.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/environment' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/environment (dev-master ceaeb5d): Downloading (100%)\r\n  - Installing sebastian/diff (dev-master 0fd4d14): Cloning 0fd4d14dd7\r\n    Failed to download sebastian/diff from source: Failed to clone https://github.com/sebastianbergmann/diff.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/diff.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/diff'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/diff.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/diff' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/diff (dev-master 0fd4d14): Downloading (100%)\r\n  - Installing sebastian/comparator (dev-master 96f0814): Cloning 96f0814e52\r\n    Failed to download sebastian/comparator from source: Failed to clone https://github.com/sebastianbergmann/comparator.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/comparator.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/comparator'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/comparator.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/comparator' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/comparator (dev-master 96f0814): Downloading (100%)\r\n  - Installing doctrine/instantiator (1.0.x-dev 8e884e7): Cloning 8e884e78f9\r\n    Failed to download doctrine/instantiator from source: Failed to clone https://github.com/doctrine/instantiator.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/doctrine/instantiator.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/doctrine/instantiator'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:doctrine/instantiator.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/doctrine/instantiator' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing doctrine/instantiator (1.0.x-dev 8e884e7): Downloading (100%)\r\n  - Installing phpunit/php-text-template (1.2.1): Downloading (100%)\r\n  - Installing phpunit/php-timer (dev-master d107f34): Cloning d107f347d3\r\n    Failed to download phpunit/php-timer from source: Failed to clone https://github.com/sebastianbergmann/php-timer.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/php-timer.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phpunit/php-timer'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/php-timer.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phpunit/php-timer' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phpunit/php-timer (dev-master d107f34): Downloading (100%)\r\n  - Installing phpunit/php-file-iterator (1.4.x-dev 730b01b): Cloning 730b01bc3e\r\n    Failed to download phpunit/php-file-iterator from source: Failed to clone https://github.com/sebastianbergmann/php-file-iterator.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/php-file-iterator.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phpunit/php-file-iterator'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/php-file-iterator.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phpunit/php-file-iterator' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phpunit/php-file-iterator (1.4.x-dev 730b01b): Downloading (100%)\r\n  - Installing theseer/tokenizer (1.1.0): Downloading (100%)\r\n  - Installing sebastian/code-unit-reverse-lookup (dev-master 3488be0): Cloning 3488be0a7b\r\n    Failed to download sebastian/code-unit-reverse-lookup from source: Failed to clone https://github.com/sebastianbergmann/code-unit-reverse-lookup.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/code-unit-reverse-lookup.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/sebastian/code-unit-reverse-lookup'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/code-unit-reverse-lookup.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/sebastian/code-unit-reverse-lookup' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing sebastian/code-unit-reverse-lookup (dev-master 3488be0): Downloading (100%)\r\n  - Installing phpunit/php-token-stream (2.0.x-dev 13eb9ab): Cloning 13eb9aba96\r\n    Failed to download phpunit/php-token-stream from source: Failed to clone https://github.com/sebastianbergmann/php-token-stream.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/php-token-stream.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phpunit/php-token-stream'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/php-token-stream.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phpunit/php-token-stream' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phpunit/php-token-stream (2.0.x-dev 13eb9ab): Downloading (connecting...)Downloading (100%)\r\n  - Installing phpunit/php-code-coverage (5.3.x-dev 982ce79): Cloning 982ce790a6\r\n    Failed to download phpunit/php-code-coverage from source: Failed to clone https://github.com/sebastianbergmann/php-code-coverage.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/php-code-coverage.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phpunit/php-code-coverage'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/php-code-coverage.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phpunit/php-code-coverage' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phpunit/php-code-coverage (5.3.x-dev 982ce79): Downloading (100%)\r\n  - Installing phpdocumentor/reflection-common (dev-master 21bdeb5): Cloning 21bdeb5f65\r\n    Failed to download phpdocumentor/reflection-common from source: Failed to clone https://github.com/phpDocumentor/ReflectionCommon.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/phpDocumentor/ReflectionCommon.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phpdocumentor/reflection-common'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:phpDocumentor/ReflectionCommon.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phpdocumentor/reflection-common' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phpdocumentor/reflection-common (dev-master 21bdeb5): Downloading (100%)\r\n  - Installing phpdocumentor/type-resolver (0.4.0): Downloading (100%)\r\n  - Installing webmozart/assert (dev-master 4a8bf11): Cloning 4a8bf11547\r\n    Failed to download webmozart/assert from source: Failed to clone https://github.com/webmozart/assert.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/webmozart/assert.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/webmozart/assert'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:webmozart/assert.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/webmozart/assert' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing webmozart/assert (dev-master 4a8bf11): Downloading (100%)\r\n  - Installing phpdocumentor/reflection-docblock (4.2.0): Downloading (100%)\r\n  - Installing phpspec/prophecy (dev-master 3d0b392): Cloning 3d0b3928bb\r\n    Failed to download phpspec/prophecy from source: Failed to clone https://github.com/phpspec/prophecy.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/phpspec/prophecy.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phpspec/prophecy'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:phpspec/prophecy.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phpspec/prophecy' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phpspec/prophecy (dev-master 3d0b392): Downloading (100%)\r\n  - Installing phar-io/version (1.0.1): Downloading (100%)\r\n  - Installing phar-io/manifest (dev-master 014fead): Cloning 014feadb26\r\n    Failed to download phar-io/manifest from source: Failed to clone https://github.com/phar-io/manifest.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/phar-io/manifest.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phar-io/manifest'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:phar-io/manifest.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phar-io/manifest' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phar-io/manifest (dev-master 014fead): Downloading (100%)\r\n  - Installing myclabs/deep-copy (1.x-dev 103e211): Cloning 103e21127b\r\n    Failed to download myclabs/deep-copy from source: Failed to clone https://github.com/myclabs/DeepCopy.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/myclabs/DeepCopy.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/myclabs/deep-copy'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:myclabs/DeepCopy.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/myclabs/deep-copy' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing myclabs/deep-copy (1.x-dev 103e211): Downloading (100%)\r\n  - Installing phpunit/phpunit-mock-objects (4.0.x-dev 11c3bde): Cloning 11c3bdee46\r\n    Failed to download phpunit/phpunit-mock-objects from source: Failed to clone https://github.com/sebastianbergmann/phpunit-mock-objects.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/phpunit-mock-objects.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phpunit/phpunit-mock-objects'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/phpunit-mock-objects.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phpunit/phpunit-mock-objects' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phpunit/phpunit-mock-objects (4.0.x-dev 11c3bde): Downloading (100%)\r\n  - Installing phpunit/phpunit (6.4.x-dev 1b9a5a1): Cloning 1b9a5a1448\r\n    Failed to download phpunit/phpunit from source: Failed to clone https://github.com/sebastianbergmann/phpunit.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/sebastianbergmann/phpunit.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/phpunit/phpunit'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:sebastianbergmann/phpunit.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/phpunit/phpunit' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing phpunit/phpunit (6.4.x-dev 1b9a5a1): Downloading (100%)\r\n  - Installing behat/gherkin (dev-master e66888c): Cloning e66888c99c\r\n    Failed to download behat/gherkin from source: Failed to clone https://github.com/Behat/Gherkin.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/Behat/Gherkin.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/behat/gherkin'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:Behat/Gherkin.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/behat/gherkin' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing behat/gherkin (dev-master e66888c): Downloading (100%)\r\n  - Installing psr/http-message (dev-master f6561bf): Cloning f6561bf28d\r\n    Failed to download psr/http-message from source: Failed to clone https://github.com/php-fig/http-message.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/php-fig/http-message.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/psr/http-message'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:php-fig/http-message.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/psr/http-message' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing psr/http-message (dev-master f6561bf): Downloading (100%)\r\n  - Installing guzzlehttp/psr7 (dev-master d2537c8): Cloning d2537c86fa\r\n    Failed to download guzzlehttp/psr7 from source: Failed to clone https://github.com/guzzle/psr7.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/guzzle/psr7.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/guzzlehttp/psr7'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:guzzle/psr7.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/guzzlehttp/psr7' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing guzzlehttp/psr7 (dev-master d2537c8): Downloading (100%)\r\n  - Installing codeception/base (2.3.x-dev c3fcea6): Cloning c3fcea6152\r\n    Failed to download codeception/base from source: Failed to clone https://github.com/Codeception/base.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/Codeception/base.git\r\n  Cloning into '/home/selim/yii2-app-advanced/vendor/codeception/base'...\r\n  fatal: remote composer already exists.\r\n\r\n- git@github.com:Codeception/base.git\r\n  fatal: destination path '/home/selim/yii2-app-advanced/vendor/codeception/base' already exists and is not an empty directory.\r\n\r\n    Now trying to download from dist\r\n  - Installing codeception/base (2.3.x-dev c3fcea6): Downloading (100%)\r\n  - Installing codeception/verify (0.3.3): Downloading (100%)\r\nsymfony/browser-kit suggests installing symfony/process ()\r\nsymfony/event-dispatcher suggests installing symfony/dependency-injection ()\r\nsymfony/event-dispatcher suggests installing symfony/http-kernel ()\r\nsymfony/console suggests installing symfony/process ()\r\nsymfony/console suggests installing symfony/lock ()\r\nsebastian/global-state suggests installing ext-uopz (*)\r\nphpunit/php-code-coverage suggests installing ext-xdebug (^2.5.5)\r\nphpunit/phpunit-mock-objects suggests installing ext-soap (*)\r\nphpunit/phpunit suggests installing phpunit/php-invoker (^1.1)\r\nphpunit/phpunit suggests installing ext-xdebug (*)\r\ncodeception/base suggests installing codeception/specify (BDD-style code blocks)\r\ncodeception/base suggests installing flow/jsonpath (For using JSONPath in REST module)\r\ncodeception/base suggests installing phpseclib/phpseclib (for SFTP option in FTP Module)\r\ncodeception/base suggests installing league/factory-muffin (For DataFactory module)\r\ncodeception/base suggests installing league/factory-muffin-faker (For Faker support in DataFactory module)\r\ncodeception/base suggests installing symfony/phpunit-bridge (For phpunit-bridge support)\r\ncodeception/base suggests installing aws/aws-sdk-php (For using AWS Auth in REST module and Queue module)\r\ncodeception/base suggests installing codeception/phpbuiltinserver (Start and stop PHP built-in web server for your tests)\r\ncodeception/base suggests installing stecman/symfony-console-completion (For BASH autocompletion)\r\nWriting lock file\r\nGenerating autoload files\r\n    Skipped installation of bin bin/markdown for package cebe/markdown: file not found in package\r\n    Skipped installation of bin bin/markdown for package cebe/markdown: file not found in package\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\npackages to be installed. \r\n\r\nInstead, the weirdest thing happens: the root folder contents is *removed* and replaced randomly by one of the installed packages contents. This time it's cebe/markdown:\r\n\r\n```\r\n ~/yii2-app-advanced\r\n$ ls\r\nbin/    CHANGELOG.md*   composer.lock   composer-setup.php  GithubMarkdown.php*  LICENSE*       MarkdownExtra.php*  phpunit.xml.dist*  tests/\r\nblock/  composer.json*  composer.phar*  CONTRIBUTING.md*    inline/              Markdown.php*  Parser.php*         README.md*         vendor/\r\n```\r\n\r\neven weirder, the .git/config file is also changed:\r\n\r\n```\r\n ~/yii2-app-advanced\r\n$ cat .git/config\r\n[core]\r\n        repositoryformatversion = 0\r\n        filemode = false\r\n        bare = false\r\n        logallrefupdates = true\r\n        symlinks = false\r\n        ignorecase = true\r\n[remote \"origin\"]\r\n        url = https://github.com/yiisoft/yii2-app-advanced.git\r\n        fetch = +refs/heads/*:refs/remotes/origin/*\r\n        pushurl = git@github.com:cebe/markdown.git\r\n[branch \"master\"]\r\n        remote = origin\r\n        merge = refs/heads/master\r\n[remote \"composer\"]\r\n        url = https://github.com/cebe/markdown.git\r\n        fetch = +refs/heads/*:refs/remotes/composer/*\r\n```\r\n\r\nTried on composer 1.5.1 and 1.5.5, same thing happened.\r\nWhat is going on here? \ud83d\ude13 ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dungnv": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6900", "title": "  The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: Operation now in progress  ", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"magento/project-community-edition\",\r\n    \"description\": \"eCommerce Platform for Growth (Community Edition)\",\r\n    \"type\": \"project\",\r\n    \"version\": \"2.2.0\",\r\n    \"license\": [\r\n        \"OSL-3.0\",\r\n        \"AFL-3.0\"\r\n    ],\r\n    \"require\": {\r\n        \"magento/product-community-edition\": \"2.2.0\",\r\n        \"composer/composer\": \"@alpha\"\r\n    },\r\n    \"require-dev\": {\r\n        \"phpunit/phpunit\": \"~6.2.0\",\r\n        \"squizlabs/php_codesniffer\": \"3.0.1\",\r\n        \"phpmd/phpmd\": \"@stable\",\r\n        \"pdepend/pdepend\": \"2.5.0\",\r\n        \"friendsofphp/php-cs-fixer\": \"~2.1.1\",\r\n        \"lusitanian/oauth\": \"~0.8.10\",\r\n        \"sebastian/phpcpd\": \"2.0.4\"\r\n    },\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"Magento\\\\Framework\\\\\": \"lib/internal/Magento/Framework/\",\r\n            \"Magento\\\\Setup\\\\\": \"setup/src/Magento/Setup/\",\r\n            \"Magento\\\\\": \"app/code/Magento/\"\r\n        },\r\n        \"psr-0\": {\r\n            \"\": [\r\n                \"app/code/\"\r\n            ]\r\n        },\r\n        \"files\": [\r\n            \"app/etc/NonComposerComponentRegistration.php\"\r\n        ],\r\n        \"exclude-from-classmap\": [\r\n            \"**/dev/**\",\r\n            \"**/update/**\",\r\n            \"**/Test/**\"\r\n        ]\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Magento\\\\Sniffs\\\\\": \"dev/tests/static/framework/Magento/Sniffs/\",\r\n            \"Magento\\\\Tools\\\\\": \"dev/tools/Magento/Tools/\",\r\n            \"Magento\\\\Tools\\\\Sanity\\\\\": \"dev/build/publication/sanity/Magento/Tools/Sanity/\",\r\n            \"Magento\\\\TestFramework\\\\Inspection\\\\\": \"dev/tests/static/framework/Magento/TestFramework/Inspection/\",\r\n            \"Magento\\\\TestFramework\\\\Utility\\\\\": \"dev/tests/static/framework/Magento/TestFramework/Utility/\"\r\n        }\r\n    },\r\n    \"minimum-stability\": \"stable\",\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://repo.magento.com/\"\r\n        }\r\n    ],\r\n    \"extra\": {\r\n        \"magento-force\": \"override\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nDzung:www dzung$ composer diagnose\r\nFailed loading /usr/local/opt/php70-xdebug/xdebug.so:  dlopen(/usr/local/opt/php70-xdebug/xdebug.so, 9): image not found\r\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/opt/php70-http/http.so' - dlopen(/usr/local/opt/php70-http/http.so, 9): Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.58.dylib\r\n  Referenced from: /usr/local/opt/php70-http/http.so\r\n  Reason: image not found in Unknown on line 0\r\n\r\nWarning: PHP Startup: Unable to load dynamic library '/usr/local/opt/php70-http/http.so' - dlopen(/usr/local/opt/php70-http/http.so, 9): Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.58.dylib\r\n  Referenced from: /usr/local/opt/php70-http/http.so\r\n  Reason: image not found in Unknown on line 0\r\nFailed loading /usr/local/opt/php70-xdebug/xdebug.so:  dlopen(/usr/local/opt/php70-xdebug/xdebug.so, 9): image not found\r\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/opt/php70-http/http.so' - dlopen(/usr/local/opt/php70-http/http.so, 9): Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.58.dylib\r\n  Referenced from: /usr/local/opt/php70-http/http.so\r\n  Reason: image not found in Unknown on line 0\r\n\r\nWarning: PHP Startup: Unable to load dynamic library '/usr/local/opt/php70-http/http.so' - dlopen(/usr/local/opt/php70-http/http.so, 9): Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.58.dylib\r\n  Referenced from: /usr/local/opt/php70-http/http.so\r\n  Reason: image not found in Unknown on line 0\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: WARNING\r\n[Composer\\Downloader\\TransportException] The \"http://packagist.org/packages.json\" file could not be downloaded: failed to open stream: Operation now in progress\r\nChecking https connectivity to packagist: WARNING\r\n[Composer\\Downloader\\TransportException] The \"https://packagist.org/packages.json\" file could not be downloaded: failed to open stream: Operation now in progress\r\nChecking github.com rate limit: FAIL\r\n[Composer\\Downloader\\TransportException] The \"https://api.github.com/rate_limit\" file could not be downloaded: failed to open stream: Operation now in progress\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: \r\n                                                                                                                         \r\n  [Composer\\Downloader\\TransportException]                                                                               \r\n  The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: Operation now in progress  \r\n                                                                                                                         \r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\n\r\n                                                                                                                            \r\n  [Composer\\Downloader\\TransportException]                                                                                  \r\n  The \"https://packagist.org/packages.json\" file could not be downloaded: failed to open stream: Operation now in progress  \r\n                                                                                                                            \r\n\r\ninstall [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--no-custom-installers] [--no-autoloader] [--no-scripts] [--no-progress] [--no-suggest] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--ignore-platform-reqs] [--] [<packages>]...\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nI'm not sure what happen after upgrade osx\r\nWhen I run this command:\r\n\r\n```\r\ncomposer self-update\r\n```\r\n\r\nI have got error\r\n```\r\nDzung:www dzung$ composer self-update\r\nFailed loading /usr/local/opt/php70-xdebug/xdebug.so:  dlopen(/usr/local/opt/php70-xdebug/xdebug.so, 9): image not found\r\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/opt/php70-http/http.so' - dlopen(/usr/local/opt/php70-http/http.so, 9): Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.58.dylib\r\n  Referenced from: /usr/local/opt/php70-http/http.so\r\n  Reason: image not found in Unknown on line 0\r\n\r\nWarning: PHP Startup: Unable to load dynamic library '/usr/local/opt/php70-http/http.so' - dlopen(/usr/local/opt/php70-http/http.so, 9): Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.58.dylib\r\n  Referenced from: /usr/local/opt/php70-http/http.so\r\n  Reason: image not found in Unknown on line 0\r\nFailed loading /usr/local/opt/php70-xdebug/xdebug.so:  dlopen(/usr/local/opt/php70-xdebug/xdebug.so, 9): image not found\r\nPHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/opt/php70-http/http.so' - dlopen(/usr/local/opt/php70-http/http.so, 9): Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.58.dylib\r\n  Referenced from: /usr/local/opt/php70-http/http.so\r\n  Reason: image not found in Unknown on line 0\r\n\r\nWarning: PHP Startup: Unable to load dynamic library '/usr/local/opt/php70-http/http.so' - dlopen(/usr/local/opt/php70-http/http.so, 9): Library not loaded: /usr/local/opt/icu4c/lib/libicui18n.58.dylib\r\n  Referenced from: /usr/local/opt/php70-http/http.so\r\n  Reason: image not found in Unknown on line 0\r\n\r\n                                                                                                                         \r\n  [Composer\\Downloader\\TransportException]                                                                               \r\n  The \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: Operation now in progress  \r\n                                                                                                                         \r\n\r\nself-update [-r|--rollback] [--clean-backups] [--no-progress] [--update-keys] [--stable] [--preview] [--snapshot] [--set-channel-only] [--] [<version>]\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ForzaSFerrari": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6898", "title": "error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed", "body": "Hi,\r\n\r\nbecause of the new restrictions of Google for SSL certificates I created own signed multi domain certificates. My local web developments, I do about XAMPP and phpstorm.\r\n\r\nAfter I created these certificates for one multi domain project, I realized that I got issues with the composer. I got issues with the composer itself and with the composer, when I wanted to make updates for frameworks like Laravel. \r\n\r\nBecause I didn't really know what I had to do, I wanted to make a reinstall of the composer. \r\n\r\nNow I always get this error message and I don't know how I can fix it.\r\n```\r\nThe \"https://getcomposer.org/versions\" file could not be downloaded: SSL operation failed with code 1. OpenSSL Error messages:\r\nerror:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed\r\nFailed to enable crypto\r\nfailed to open stream: operation failed\r\n```\r\n\r\nThe steps, what I already did are to set everything back in xampp, what I changed for SSL.\r\n\r\nI also downloaded the follow thing [http://curl.haxx.se/ca/cacert.pem](http://curl.haxx.se/ca/cacert.pem) and implemented it to XAMPP by curl.cainfo and openssl.cafile.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MB34": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6891", "title": "Composer php_network_getaddresses: getaddrinfo failed?", "body": "(Windows7, PHP 5.6.31)\r\nAttempting to run a diagnose in the laravel-master directory, I get these results\r\nI do have HTTP_PROXY env variable set\r\n\r\n    Checking composer.json: OK\r\n    \r\n    Checking platform settings: OK\r\n    \r\n    Checking git settings: OK\r\n    \r\n    Checking http connectivity to packagist: WARNING\r\n    [Composer\\Downloader\\TransportException] The \"http://packagist.org/packages.json\" file could not be downloaded: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    failed to open stream: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    \r\n    Checking https connectivity to packagist: WARNING\r\n    [Composer\\Downloader\\TransportException] The \"https://packagist.org/packages.json\" file could not be downloaded: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    failed to open stream: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    \r\n    Checking HTTP proxy: FAIL\r\n    [Composer\\Downloader\\TransportException] The \"https://packagist.org/packages.json\" file could not be downloaded: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    failed to open stream: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    \r\n    Checking HTTP proxy support for request_fulluri: WARNING\r\n    Unable to assess the situation, maybe packagist.org is down (The \"http://packagist.org/packages.json\" file could not be downloaded: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    failed to open stream: php_network_getaddresses: getaddrinfo failed: No such host is known. )\r\n    \r\n    Checking HTTPS proxy support for request_fulluri: WARNING\r\n    Unable to assess the situation, maybe github is down (The \"https://api.github.com/repos/Seldaek/jsonlint/zipball/1.0.0\" file could not be downloaded: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    failed to open stream: php_network_getaddresses: getaddrinfo failed: No such host is known. )\r\n    \r\n    Checking github.com rate limit: FAIL\r\n    [Composer\\Downloader\\TransportException] The \"https://api.github.com/rate_limit\" file could not be downloaded: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    failed to open stream: php_network_getaddresses: getaddrinfo failed: No such host is known. \r\n    \r\n    Checking disk free space: OK\r\n    \r\n    Checking pubkeys: FAIL\r\n    \r\n    Missing pubkey for tags verification\r\n    \r\n    Missing pubkey for dev verification\r\n    \r\n    Run composer self-update --update-keys to set them up\r\n    \r\n    Checking composer version: \r\n    [Composer\\Downloader\\TransportException]\r\n    The \"https://getcomposer.org/versions\" file could not be downloaded: php_network_getaddresses: getaddrinfo failed: No such host is known. failed to open stream: php_network_getaddresses: getaddrinfo failed: No such host is known.\r\n\r\nI can ping packagist.org just fine:\r\n\r\n    C:\\wamp\\www\\laravel-master>ping packagist.org\r\n    Pinging packagist.org [87.98.253.214] with 32 bytes of data:    \r\n    Reply from 87.98.253.214: bytes=32 time=147ms TTL=45    \r\n    Reply from 87.98.253.214: bytes=32 time=147ms TTL=45\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ybelenko": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6870", "title": "OpenSSL Failed to enable crypto", "body": "Please, help. I cannot install my dependencies.\r\nWampServer Version 3.0.6 64bit\r\nApache 2.4.23 - PHP 5.6.25 - MySQL 5.7.14\r\nPHP 5.6.25 for CLI (Command-Line Interface)\r\n\r\n```\r\n[PHP Modules]\r\n...bash\r\nmysql\r\nmysqli\r\nmysqlnd\r\nodbc\r\nopenssl\r\npcre\r\nPDO\r\n...\r\n[Zend Modules]\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```bash\r\nChecking composer.json: OK\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0\r\n84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D A\r\nFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```bash\r\n$ composer require vlucas/phpdotenv\r\n```\r\n\r\nI get the following output:\r\n\r\n```bash\r\nPackage operations: 1 install, 0 updates, 0 removals\r\n  - Installing vlucas/phpdotenv (v2.4.0): Downloading (connecting...)\r\nDownloading (connecting...)\r\nDownloading (connecting...)\r\nFailed to download vlucas/phpdotenv from dist: \r\nThe \"https://codeload.github.com/vlucas/phpdotenv/legacy.zip/3cc116adbe4b11be5ec557bf1d24dc5e3a21d18c\" file could not be downloaded: SSL operation failed with code \r\n1. OpenSSL Error messages: error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed\r\nFailed to enable crypto\r\nfailed to open stream: operation failed\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nicolas-grekas": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6869", "title": "\"compose require foo/bar\" ignores the existing constraints when selecting the default version", "body": "~~Variant 1: run `composer create-project symfony/skeleton` on PHP 7.0 => fails because it tells the skeleton \"^4\" needs 7.1 (but \"^3\" would be fine)~~\r\n\r\nVariant 2: run:\r\n- composer create-project symfony/skeleton demo ^3\r\n- cd demo\r\n- composer require symfony/var-dumper\r\n\r\nFails because composer select \"^4\" for the component, which conflicts with symfony/lts ^3 (but ^3 would be fine)\r\n\r\nSaw this more that 10 times today (training session.)\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6869/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/6852", "title": "\"composer create-project -s dev symfony/skeleton\" fails", "body": "Running `composer create-project -s dev symfony/skeleton` fails with this error:\r\n```\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - Installation request for symfony/framework-bundle ^4.1 -> satisfiable by symfony/framework-bundle[4.1.x-dev].\r\n    - symfony/framework-bundle dev-master conflicts with symfony/lts[4.x-dev].\r\n    - don't install symfony/framework-bundle 4.1.x-dev|install symfony/framework-bundle dev-master\r\n    - Installation request for symfony/lts ^4@dev -> satisfiable by symfony/lts[4.x-dev].\r\n\r\n```\r\n\r\nBUT, both `symfony/framework-bundle` and `symfony/lts` have branch-alias correctly set, so that I don't get the failure. Looks like a bug in composer to me.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/4279", "title": "High memory consumption when overwritting a bunch of packages", "body": "Trying to create a local repository of all symfony components (see https://github.com/symfony/symfony/pull/15322) I noticed that composer creates a LOT of conflict rules (~1 million in this case), which is both slow and consumes a LOT of memory.\n\nReading the code, I understand that the conflicting rules are generated to disable any package coming from packagist when a local repos takes over some packages.\n\nI'm sure that a better shadowing strategy could allow the same behavior without this huge memory impact.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/3930", "title": "Parallel downloads for packages", "body": "This week-end, I played with adding concurrent downloads to the Installer of composer.\nUsing pcntl_fork(), I'm able to go from 4,5 minutes to 30s on some project. But that does not work well enough for this to go mainstream: errors in forks are not handled and state changes that happen during the install/update steps are hard to replicate on the parent process.\n\nThus, I may try a React based approach, plugged in the Installer loop (just here). Would that be an acceptable choice to you if I manage to go somewhere this way?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3930/reactions", "total_count": 8, "+1": 8, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/5601f07bfadc2359c53f9fa92f96d5249120188d", "message": "Add RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/251a347efbae4dbedb5c45f1571265e0a8705230", "message": "Fix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/0c912d6eee60505333479c71e5708ce263ae65ae", "message": "Fix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/ce70e0e9dd63e4f3fcdd0eb2d960873d160a3a2f", "message": "Fix BC of generated static map"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3951", "title": "Concurrent git clone and downloads with React", "body": "This adds an optional event loop argument and promises as return values to the GitDownloader.\nThe Installer takes advantage of it to trigger several `git clone` and manage them concurrently.\nNo change is made to the behavior of the code when no event loop is used, so that tests still pass.\nThis could be the first step towards parallel downloads in composer: the other downloaders would need to be updated following the same principle, the GitDownloader also needs to be finished (only public repos can be managed by the loop for now).\nThe console output also would need to be handled differently.\nIf someone else likes the approach, help is welcomed for porting the other downloaders to use and return promises! (a PR on this PR anyone?).\nPHP 5.3 is not supported by React, but there is no blocker to change that.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "izac3d": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6863", "title": "can not enable openssl", "body": "I am trying to update composer bundles but I get error \r\n\r\n> [Composer\\Exception\\NoSslException]\r\n>   The openssl extension is required for SSL/TLS protection but is not available. If you can not e\r\n>   nable the openssl extension, you can disable this error, at your own risk, by setting the 'disa\r\n>   ble-tls' option to true.\r\n\r\nI am on windows and I use wamp. I checked php.ini in C:\\wamp\\bin\\php\\php7.1.9 and it has extension=php_openssl.dll uncomented so what is the problem ?\r\n\r\n```\r\n$ php --ini\r\nConfiguration File (php.ini) Path: C:\\WINDOWS\r\nLoaded Configuration File:         (none)\r\nScan for additional .ini files in: (none)\r\nAdditional .ini files parsed:      (none)\r\n\r\n```\r\n```\r\n$ php -m\r\n[PHP Modules]\r\nbcmath\r\ncalendar\r\nCore\r\nctype\r\ndate\r\ndom\r\nfilter\r\nhash\r\niconv\r\njson\r\nlibxml\r\nmcrypt\r\nmysqlnd\r\npcre\r\nPDO\r\nPhar\r\nReflection\r\nsession\r\nSimpleXML\r\nSPL\r\nstandard\r\ntokenizer\r\nwddx\r\nxml\r\nxmlreader\r\nxmlwriter\r\nzip\r\nzlib\r\n\r\n[Zend Modules]\r\n```\r\nplease advise", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "frankdejonge": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6856", "title": "[Feature Request] prefer lowest mode for non-dev deps only ", "body": "For some of my projects I've got quite a wide range of supported PHP versions. Due to PHP version upgrades it's hard (and sometimes even simply impossible) to use phpunit. For example, I'm supporting 5.6 to 7.2 for a library. In order to support 5.6 I need my lower bound to be low enough to find a phpunit version (or dep of) that supports 5.6, but it also needs to be high enough for any breaking changes in 7.2 to be patched. This turned out not to be possible unfortunately.\r\n\r\nBUT! If composer would allow for the lowest version only to be preferred for the non-dev dependencies this would work out way easier and makes it easier to support older version of packages. The lowest version supported is great for dependencies you need at runtime but actually provide little value during dev time. Package maintainers want to support and test things to ensure production usage, not development usage most of the time.\r\n\r\nWhat do you think about this? If accepted I'm perfectly willing to put in the time to figure out how to implement this and create a PR for this, but I wanted to get all of your opinions in first so no energy is wasted on this for no reason.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "leofeyer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6840", "title": "The order of the requirements matters?", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"contao/installation-bundle\",\r\n    \"type\": \"contao-bundle\",\r\n    \"description\": \"Required to install and update Contao 4\",\r\n    \"require\": {\r\n        \"php\": \"^7.1\",\r\n        \"symfony/filesystem\": \"^3.4\",\r\n        \"symfony/framework-bundle\": \"^3.4\",\r\n        \"contao/core-bundle\": \"^4.5\",\r\n        \"sensio/distribution-bundle\": \"^5.0\",\r\n        \"sensiolabs/ansi-to-html\": \"^1.1\"\r\n    },\r\n    \"require-dev\": {\r\n        \"php-http/guzzle6-adapter\": \"^1.1\"\r\n    },\r\n    \"minimum-stability\": \"beta\",\r\n    \"prefer-stable\": true\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - contao/core-bundle 4.5.0-beta1 requires terminal42/header-replay-bundle ^1.3 -> satisfiable by terminal42/header-replay-bundle[1.3.0].\r\n    - contao/core-bundle 4.5.0-beta2 requires terminal42/header-replay-bundle ^1.3 -> satisfiable by terminal42/header-replay-bundle[1.3.0].\r\n    - Conclusion: don't install terminal42/header-replay-bundle 1.3.0\r\n    - Installation request for contao/core-bundle ^4.5 -> satisfiable by contao/core-bundle[4.5.0-beta1, 4.5.0-beta2].\r\n\r\n```\r\n\r\nNow if I change the order of the requirements and move `contao/core-bundle` to the top, the requirements can be resolved.\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"php\": \"^7.1\",\r\n        \"contao/core-bundle\": \"^4.5\",\r\n        \"symfony/filesystem\": \"^3.4\",\r\n        \"symfony/framework-bundle\": \"^3.4\",\r\n        \"sensio/distribution-bundle\": \"^5.0\",\r\n        \"sensiolabs/ansi-to-html\": \"^1.1\"\r\n    },\r\n}\r\n```\r\n\r\nIt also works if I delete the lines `name`, `type` and `description` in my `composer.json` file.\r\n\r\nIs this the expected behavior or a known issue?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IchHabRecht": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6838", "title": "Composer breaks installation on require", "body": "When I run these commands:\r\n\r\n```\r\ncomposer require typo3/cms=\"^7.6\"\r\ncomposer config repositories.typo3 composer https://composer.typo3.org\r\ncomposer require typo3-ter/jumpurl\r\ncomposer require friendsoftypo3/jumpurl\r\n```\r\n\r\nEverything is required and installed properly. But running `composer install` afterwards or on a completely different system outputs an error:\r\n\r\n```\r\nLoading composer repositories with package information\r\nInstalling dependencies (including require-dev) from lock file\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - Conclusion: remove friendsoftypo3/jumpurl 7.7.0\r\n    - don't install friendsoftypo3/jumpurl 7.7.0|remove typo3-ter/jumpurl 7.7.0\r\n    - don't install typo3-ter/jumpurl 7.7.0|don't install friendsoftypo3/jumpurl 7.7.0\r\n    - Installation request for friendsoftypo3/jumpurl 7.7.0 -> satisfiable by friendsoftypo3/jumpurl[7.7.0].\r\n    - Installation request for typo3-ter/jumpurl 7.7.0 -> satisfiable by typo3-ter/jumpurl[7.7.0].\r\n```\r\n\r\nI think it is because the master version of friendsoftypo3/jumpurl contains a replacement for typo3-ter/jumpurl. But the current locked versions do not have any replacement for themselves. Is this a valid error? And if so, why can I require both packages? Shouldn't the error occur on require instead of install then?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcohol": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6836", "title": "create-project ignores signals (?)", "body": "When running `composer create-project`, it seems we do not handle signals such as `SIGINT`, etc.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/composer/composer/issues/4503", "title": "Dodgy code in Solver", "body": "See https://github.com/composer/composer/blob/master/src/Composer/DependencyResolver/Solver.php#L675-L678\n\nThe curious part is that `runSat()` is always explicitly called with `true` ([see here](https://github.com/composer/composer/blob/master/src/Composer/DependencyResolver/Solver.php#L220)), but this is effectively completely negated by this array assignment.\n\nPotentially this means a whole bunch of dead code could be removed.\n\n/cc @naderman any thoughts/ideas on the history behind this?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/composer/composer/issues/3754", "title": "replace behaviour", "body": "Discussion: Is the following desired behaviour? Should this conflict or not?\nPriority: low\n\nWhile resolving, `replace` doesn't seem to be taken into account, or at least not in a manner which one might expect. For example, I expect the following to either conflict or not install the separate component. But composer does so happily.\n\nIn other words, replace allows you to install the same library in different versions potentially.\n\n```\n$ composer require symfony/symfony:2.4.10 symfony/http-foundation:2.6.4\n./composer.json has been created\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\n  - Installing psr/log (1.0.0)\n    Loading from cache\n\n  - Installing symfony/http-foundation (v2.6.4)\n    Downloading: 100%\n\n  - Installing twig/twig (v1.18.0)\n    Loading from cache\n\n  - Installing doctrine/lexer (v1.0.1)\n    Loading from cache\n\n  - Installing doctrine/annotations (v1.2.3)\n    Loading from cache\n\n  - Installing doctrine/collections (v1.2)\n    Loading from cache\n\n  - Installing doctrine/cache (v1.4.0)\n    Loading from cache\n\n  - Installing doctrine/inflector (v1.0.1)\n    Loading from cache\n\n  - Installing doctrine/common (v2.4.2)\n    Loading from cache\n\n  - Installing symfony/icu (v1.2.2)\n    Downloading: 100%\n\n  - Installing symfony/symfony (v2.4.10)\n    Downloading: 100%\n\nWriting lock file\nGenerating autoload files\n```\n\nNormally composer does not allow you to install different versions of the same library.\n\n/cc @naderman @Seldaek \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/e03a324613860040cd70c9e725295b0578f52516", "message": "Merge pull request #6865 from carusogabriel/refactoring-tests\n\nRefactoring tests"}, {"url": "https://api.github.com/repos/composer/composer/commits/da11ed3e6f75229e8f0f55f67767fd63d7160a6c", "message": "Merge pull request #6770 from DQNEO/patch-1\n\nadd PHP 7.2 in travis"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5507", "title": "add a fixture for github issue #5505", "body": "not sure how to solve yet, or if it requires solving at all\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SmiffyKMc": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6831", "title": "Composer won't update", "body": "We have composer as our dependency injection framework which will pull in a library we created, foobar, which works fine. The library foobar has 14 version v1.1.1 -> v1.1.14. All the way up to .12 composer updated the app fine. But now we are getting this error...\r\n\r\n    Update failed (Source directory /home/username/dev/git/appname/vendor/foorbar/library has unpushed changes on the current branch: \r\n    Branch v1.1.14 could not be found on the origin remote and appears to be unpushed)\r\nThings to know:\r\n\r\n- Vendor is ignored in .gitignore.\r\n- Tried doing composer.phar clearcache.\r\n- Would be ideal to not have to delete the library every time.\r\n\r\nHas anyone had this issue and how did you manage to solve it?\r\n\r\nThanks", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "naderman": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6822", "title": "Trigger an error on composer install without a lock file", "body": "To reduce confusion around the purposes and behaviors of the composer install and update commands, the install command should error if no lock file is present. Users will have to get started with composer update.\r\n\r\nThis is clearly a BC break so will require 2.0, but it's easy to fix for users by running update if a lock file should be generated or committing a lock file if install was actually supposed to use a particular set of dependencies.\r\n\r\nIntroductory docs should be reviewed as well to make sure we don't induce people into doing this wrong.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6822/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/6758", "title": "Default virtual package provider choices", "body": "There should be a way to specify a default package to satisfy a requirement on a virtual package.\r\n\r\nFor example https://packagist.org/packages/knplabs/github-api requires php-http/client-implementation . So to install it you need to require at least the implementation and the package itself. Instead it should be possible for knplabs/github-api to state that by default php-http/guzzle6-adapter can be used to satisfy the requirement.\r\n\r\nThis solution would allow easier installation while keeping the promise of not installing a package that doesn't have a direct name-based require route from the root composer.json.\r\n\r\nI think the implementation would be quite simply, we'd introduce a new key in composer.json for this purpose and just need to make sure the package is loaded in the pool, as the solver will already work out that the package provides the required name.\r\n\r\n```\r\n    \"require\": {\r\n        \"php\": \"^5.5 || ^7.0\",\r\n        \"psr/http-message\": \"^1.0\",\r\n        \"psr/cache\": \"^1.0\",\r\n        \"php-http/httplug\": \"^1.1\",\r\n        \"php-http/discovery\": \"^1.0\",\r\n        \"php-http/client-implementation\": \"^1.0\",\r\n        \"php-http/client-common\": \"^1.3\",\r\n        \"php-http/cache-plugin\": \"^1.4\"\r\n    },\r\n    \"default-providers\": {\r\n        \"php-http/client-implementation\": {\r\n            \"php-http/guzzle6-adapter\": \"^1.0\"\r\n        }\r\n    }\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6758/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/6753", "title": "Provide does not satisfy package requirement if package with same name exists", "body": "I believe this should be allowed. It works if you swap replace/provide.\r\n\r\n```\r\n{\r\n\t\"repositories\": [\r\n\t\t{\r\n\t\t\t\"packagist\": false\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"type\": \"package\",\r\n\t\t\t\"package\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"foo/polyfill\",\r\n\t\t\t\t\t\"provide\": {\r\n\t\t\t\t\t\t\"foo/standard\": \"1.0.0\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"replace\": [\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\"version\": \"1.0.0\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"foo/standard\",\r\n\t\t\t\t\t\"require\": {\r\n\t\t\t\t\t\t\"foo/does-not-exist\": \"1.0.0\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"version\": \"1.0.0\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"type\": \"package\"\r\n\t\t}\r\n\t],\r\n\t\"require\": {\r\n\t\t\"foo/standard\": \"1.0.0\",\r\n\t\t\"foo/polyfill\": \"1.0.0\"\r\n\t}\r\n}\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/5438", "title": "Update whitelisting does not correctly whitelist dependencies of new packages to be installed", "body": "composer.json.1:\n\n``` json\n{\n    \"repositories\": [\n        {\n            \"packagist\": false\n        },\n        {\n            \"type\": \"package\",\n            \"package\": {\n                \"name\": \"a/a\",\n                \"version\": \"1.0.0\",\n                \"type\": \"metapackage\",\n                \"require\": {\n                    \"a/b\": \"*\"\n                }\n            }\n        },\n        {\n            \"type\": \"package\",\n            \"package\": {\n                \"name\": \"a/b\",\n                \"version\": \"1.0.0\",\n                \"type\": \"metapackage\"\n            }\n        },\n        {\n            \"type\": \"package\",\n            \"package\": {\n                \"name\": \"a/c\",\n                \"version\": \"1.0.0\",\n                \"type\": \"metapackage\",\n                \"require\": {\n                    \"a/b\": \"2.0.0\"\n                }\n            }\n        }\n    ],\n    \"require\": {\n        \"a/a\": \"1.0.0\"\n    }\n}\n```\n\ncomposer.json.2:\n\n``` json\n{\n    \"repositories\": [\n        {\n            \"packagist\": false\n        },\n        {\n            \"type\": \"package\",\n            \"package\": {\n                \"name\": \"a/a\",\n                \"version\": \"1.0.0\",\n                \"type\": \"metapackage\",\n                \"require\": {\n                    \"a/b\": \"*\"\n                }\n            }\n        },\n        {\n            \"type\": \"package\",\n            \"package\": {\n                \"name\": \"a/b\",\n                \"version\": \"1.0.0\",\n                \"type\": \"metapackage\"\n            }\n        },\n        {\n            \"type\": \"package\",\n            \"package\": {\n                \"name\": \"a/b\",\n                \"version\": \"2.0.0\",\n                \"type\": \"metapackage\"\n            }\n        },\n        {\n            \"type\": \"package\",\n            \"package\": {\n                \"name\": \"a/c\",\n                \"version\": \"1.0.0\",\n                \"type\": \"metapackage\",\n                \"require\": {\n                    \"a/b\": \"2.0.0\"\n                }\n            }\n        }\n    ],\n    \"require\": {\n        \"a/a\": \"1.0.0\",\n        \"a/c\": \"1.0.0\"\n    }\n}\n```\n\nWhen I run this command:\n\n```\nCOMPOSER=composer.json.1 composer update\nCOMPOSER=composer.json.2 composer update a/c --with-dependencies --dry-run\n```\n\nI get this output:\n\n```\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\n\n  Problem 1\n    - Can only install one of: a/b[2.0.0, 1.0.0].\n    - Can only install one of: a/b[2.0.0, 1.0.0].\n    - a/c 1.0.0 requires a/b 2.0.0 -> satisfiable by a/b[2.0.0].\n    - Installation request for a/c 1.0.0 -> satisfiable by a/c[1.0.0].\n    - Installation request for a/b (installed at 1.0.0) -> satisfiable by a/b[1.0.0].\n\n```\n\nAnd I expected this to happen:\n- a/b should be updated to 2.0\n- a/c 1.0 should be installed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/4232", "title": "Create a Solver test that fails if rules are added while fulfilling unresolved rules", "body": "Specifically, create a test that fails if the rejected patch in https://github.com/composer/composer/pull/4165 is applied.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/3508", "title": "Reduce conflict rules", "body": "After https://github.com/composer/composer/pull/3482 there were reports of a few missing conflict rules for conflicts. So we need to create proper test cases for these situations to find those edge cases, and work out a version of #3482 that does not cause these bugs.\n\nhttps://github.com/composer/composer/pull/3493\nhttps://github.com/composer/composer/issues/3507\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/3443", "title": "Functional test suite needs to run with the same repository type as we use to access packagist", "body": "We occasionally create bugs that only occur with partially loaded packages, which are not used in functional tests as we don't use that type of repository there, e.g. https://github.com/composer/composer/issues/3441\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/7dffe79a0fc63437ee501d4ab02b607711efff96", "message": "Update tests of solver problem message to match new message"}, {"url": "https://api.github.com/repos/composer/composer/commits/f40f95b269386b20066b5bee3ea382b3439c23ab", "message": "Add a note that a user could have forgotten to add a custom repo if package not found"}, {"url": "https://api.github.com/repos/composer/composer/commits/685bc08c0a31bbfb2834adcd9a8d9095aef1c762", "message": "Improve the error on init/require if a package could not be found"}, {"url": "https://api.github.com/repos/composer/composer/commits/90b802a7327b5960fa675bf6eaac1a8ae0282d43", "message": "Documentation: Wording on multi version package repo doc"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4163", "title": "[WIP] RepositorySet / Pool Split & Load only explicitly referenced package data", "body": "This is a fixed version of https://github.com/composer/composer/pull/3994\n\nTodo:\n- [ ] RepositorySetTest\n- [ ] don't use object state to construct pool in RepositorySet\n- [x] move request name collection logic into request - solver should take repo set\n- [ ] evaluate if RepositorySet and CompositeRepository should be merged\n- [ ] refactor policy to work with repositoryset in addition to pool\n- [ ] remove uses of small pools from installer\n- [ ] this should be empty: `grep -ri \"pool\" src/ | grep -v \"src/Composer/DependencyResolver\"`\n", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/2898", "title": "[WIP] Extension installer", "body": "Supports PHP & HHVM.\n\nTodo:\n- [ ] Need to come up with a solution for ext-\\* packages actually being installable now, so extensions can be compiled automatically to satisfy dependencies on extensions.\n- [ ] Documentation\n- [ ] Use a different downloader to download binary builds from github releases for windows (or pecl for PHP)\n- [ ] Output information on configuring the server to include extension.so\n\nReplaces the earlier PR #498\n", "author_association": "OWNER"}], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/1543529", "body": "I don't think this is a good idea. The goal is to be able to use composer without pear. Composer much like pear is capable of updating itself and we are trying to get away from globally installed system packages, so this seems like a rather bad idea.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543575", "body": "Composer should be deliverable and runnable as a phar file. There is no need for it to even be unpackaged. Unlike PEAR, composer is not installed system-wide. \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543589", "body": "I'm aware that's a possibility, but it's not how most people use pear.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543949", "body": "I don't see how that has anything to with distributing it as a phar file?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2103646", "body": "Patch looks good to me now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2103646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2188335", "body": "I think section 7.2 of http://www.debian.org/doc/debian-policy/ch-relationships.html explains it quite well. The meaning of recommend/suggest appears to be an accepted standard.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2188335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503508", "body": "Why can't we rely on the supplied auto loading information of that package? We don't have a generated autoloader yet, but we could register a very trivial PSR-0 autoloader based on the package contents right there and then?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503524", "body": "And regarding dependencies, I think that's fine. It'll be ok for that kind of an installer to load custom code in its implementation and make use of that.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503926", "body": "Can't we require that installers are always auto loadable?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503929", "body": "I'd just really like to keep our config options as minimal as possible.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2504518", "body": "Except for the issue regarding PSR-0/PEAR autoloading, the patch looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2504518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2512023", "body": "What are the advantages of using the Sf2 class loader over using https://gist.github.com/221634 (or at least a loader with same API) which will be compatible with a class load that might make it into SPL?\n\nOnly obvious difference is that the SplClassLoader requires multiple instances (one for each prefix), while the Sf2 one can load multiple namespaces from a single instance. But this is somewhat related to the current auto loader discussion going on in the group that created PSR-0.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2512023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2565872", "body": "Cherry picked first commit and applied second one partially.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2565872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569244", "body": "As per Igor, the class loader in composer is just as powerful as the Symfony2 one, it's just a lot simpler. However I agree that generating just the map in case someone wants to use their own autoloader, but the default mappings, makes sense. So I would simply generate both. One file with the mappings, one file with a default autoloader and one file which adds the map entries to the default auto loader. A project can then decide on its own which file(s) to include.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2576033", "body": "http://blog.nodejs.org/2011/03/23/npm-1-0-global-vs-local-installation/\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2576033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2602514", "body": "Do you have suhosin installed? If so, does your config contain something like\n\nsuhosin.executor.include.whitelist = phar\n\nAlternatively try running php -d error_reporting=E_ALL composer.phar to see if there are any hidden errors.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2602514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2603982", "body": "That is entirely unrelated. While that message isn't output nicely, it does tell you what the problem is. You have not created a composer.json file. Please see http://packagist.org for instructions on how to use composer.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2603982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2607544", "body": "That means it works correctly on OS X. Without a composer.json file Composer cannot know what to do. You must create one for your project before it can do anything.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2607544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2624342", "body": "Not sure about the use of exec() all over this patch, shouldn't there be error handling?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2624342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2630926", "body": "Looks good to me now then.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2630926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2631064", "body": "I'm not sure we should be documenting it like this. There is a ticket for doing this properly: https://github.com/composer/composer/issues/55\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2631064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2631249", "body": "Oh heh, I totally misread this patch. Sorry!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2631249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2648694", "body": "Read the patch and tested it, looks good to me as is.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2648694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/449810", "body": "Indeed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/449810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/588527", "body": "Why would you use mbstring here? Just strtolower should be fine. And indeed only one argument.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/588527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/589953", "body": "honestly mb_strtolower is more likely to blow up than strtolower. strtolower touches only ASCII and leaves the rest alone. strtolower is an operation that doesn't even make sense on a variety of unicode characters. In addition this makes the behaviour of the solver dependent on whether mbstring is installed. So please let's avoid the use of any mbstring functions.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/589953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590645", "body": "For a start we should handle UTF-8 only. Anything (in patricular our json files) in any other encoding or character set should be outright rejected. Apart from that your example actually works fine. The result of both lines is precisely the same. However it's entirely irrelevant because utf8_decode turns it into ISO-8859-1 which we would have rejected anyway. UTF-8 on the other hand stores only ASCII characters as single bytes, and strtolower only operates on those characters.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590654", "body": "Only case where I could see your example mangle anything, is if you happen to let mbstring overload your string functions. That feature is an absolute catastrophe and all the more reason to stay as far away from mbstring as possible.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590684", "body": "Indeed, I should have pointed that out. But setting the locale to C is a good idea in general to avoid strangeness ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590693", "body": "Many many hours of trying to locate bugs which turned out to be caused by mbstring :P And yes I'd suggest we use a C locale in composer and avoid mbstring.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590785", "body": "Thank you ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/666459", "body": "Tests some of the behaviour described in #53\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/666459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/746282", "body": "for completeness sake ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/746282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/971286", "body": "Why would we ship a compressed version and an uncompressed version or two compressed versions, if we can simply distribute one uncompressed version which is probably smaller than any combination.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/971286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833", "body": "I tend to agree with that\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144220", "body": "This method should be lowercase too.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144221", "body": "Documenting params on test functions seems a bit excessive. The dataProvider already quite clearly defines all input that will ever go into this method.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/185709", "body": "Can't find where/why we decided to split these up?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/185709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/186038", "body": "Fabien already said he's fine with changing the sf2 class loader. I don't think avoiding conflicts between prefixes and namespaces is something we need to worry about. I don't see how the alternative would prevent class maps? This seems like unnecessary complexity / choice to me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/186038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/208587", "body": "newline?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/208587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/208623", "body": "Doesn't github offer a way to determine the default branch?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/208623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/209622", "body": "This won't work though, because php doesn't search the PATH. Should be `composer.phar install` now. But for that to work it needs to be executable, which means you need to chmod +x composer.phar first.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/209622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/242227", "body": "Of course it can, $b is a Literal and this is the implementation of Literal, so you can access private/protected members.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/242227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/252367", "body": "Returns a bool anyway, so no need to cast. And if you had to cast please use (bool) instead of (Boolean), thanks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/252367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/252389", "body": "Heh, indeed, I disagree with that as well then ;-) Just a minor nitpick anyway.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/252389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268572", "body": "I really don't like the idea of copying the files either. This takes away the simplicity of having the same layout in development and deployment. How do you work with binaries from a repository then? You can't make changes to it and commit it. You will always have to copy it around.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268575", "body": "shouldn't this be vendor/bin We've managed to keep everything in vendor so far as well. npm I think uses a .bin directory in the modules directory too.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268577", "body": "The whole @php_dir@ also makes it impossible to use the binaries in development without running them through this process. Shouldn't we just replace the first line if it's a php shebang?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268579", "body": "I guess the easiest thing would be to create shell scripts as binaries that simply call php with the script path, instead of php files as binaries\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268585", "body": "And vendor/bin is too much to type?\n\nMy goal here was always to keep everything in a single directory, so I'd prefer vendor/bin as the default.\n\nbin/ would contain the scripts of this package only, and be installed into vendor/bin when the package is used.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268711", "body": "@stof composer.lock is a special case because it's not just a generated file but also one that instructs composer. It's supposed to be commited as a regular file unlike vendor/ which is not supposed to go into VCS repos.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273808", "body": "Not sure I understand why there would always be a master \"tag\"?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273810", "body": "Can we just call this search instead?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273817", "body": "If you display the pretty version there is no need for the internal version to be displayed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273820", "body": "Rather than loop over all packages you could just check $package->getRepository() === $localRepo\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273828", "body": "There should be a space after if and after the last closing ) - same for all other ifs in the patch.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273829", "body": "Please don't add whitespace at the end of lines. Most editors can be setup to automatically remove such whitespace.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273830", "body": "$package->getRepository() === $localRepo\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273833", "body": "What is the purpose of force? If you want to regenerate the lock file use update, that option is already available.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273839", "body": "This command should probably just be called list\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273872", "body": "Hmm indeed. Although that would really be displayed more appropriately in help.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/274041", "body": "Count does not actually count anything. It's a constant time operation looking up the size of the array which is stored, not computed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/274041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/274782", "body": "There is a space missing after if here.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/274782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/274783", "body": "Please don't add whitespace at the end of lines.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/274783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/336166", "body": "Indeed this shouldn't be necessary :S\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/336166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "gbrann": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6818", "title": "Composer hangs with \"update --optimize-autoloader\"", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"symfony/framework-standard-edition\",\r\n    \"license\": \"MIT\",\r\n    \"type\": \"project\",\r\n    \"description\": \"The \\\"Symfony Standard Edition\\\" distribution\",\r\n    \"autoload\": {\r\n        \"psr-0\": { \"\": \"src/\", \"SymfonyStandard\": \"app/\" }\r\n    },\r\n    \"require\": {\r\n        \"php\": \">=5.3.3\",\r\n        \"symfony/symfony\": \"2.5.*\",\r\n        \"doctrine/orm\": \"~2.2,>=2.2.3\",\r\n        \"doctrine/doctrine-bundle\": \"~1.2\",\r\n        \"twig/extensions\": \"~1.0\",\r\n        \"symfony/assetic-bundle\": \"~2.3\",\r\n        \"symfony/swiftmailer-bundle\": \"~2.3\",\r\n        \"symfony/monolog-bundle\": \"~2.4\",\r\n        \"sensio/distribution-bundle\": \"~3.0\",\r\n        \"sensio/framework-extra-bundle\": \"~3.0\",\r\n        \"incenteev/composer-parameter-handler\": \"~2.0\",\r\n        \"3rdpartyeve/phealng\": \"1.2.*\",\r\n        \"friendsofsymfony/user-bundle\": \"~2.0@dev\",\r\n        \"unifik/database-config-bundle\": \"dev-master\",\r\n        \"liip/url-auto-converter-bundle\": \"dev-master\"\r\n    },\r\n    \"require-dev\": {\r\n        \"sensio/generator-bundle\": \"~2.3\"\r\n    },\r\n    \"scripts\": {\r\n        \"post-root-package-install\": [\r\n            \"SymfonyStandard\\\\Composer::hookRootPackageInstall\"\r\n        ],\r\n        \"post-install-cmd\": [\r\n            \"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::buildBootstrap\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::clearCache\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installAssets\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installRequirementsFile\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::removeSymfonyStandardFiles\"\r\n        ],\r\n        \"post-update-cmd\": [\r\n            \"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::buildBootstrap\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::clearCache\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installAssets\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installRequirementsFile\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::removeSymfonyStandardFiles\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"bin-dir\": \"bin\"\r\n    },\r\n    \"extra\": {\r\n        \"symfony-app-dir\": \"app\",\r\n        \"symfony-web-dir\": \"web\",\r\n        \"incenteev-parameters\": {\r\n            \"file\": \"app/config/parameters.yml\"\r\n        },\r\n        \"branch-alias\": {\r\n            \"dev-master\": \"2.5-dev\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nDefining autoload.psr-0 with an empty namespace prefix is a bad idea for performance\r\nrequire.unifik/database-config-bundle : unbound version constraints (dev-master) should be avoided\r\nrequire.liip/url-auto-converter-bundle : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\nsudo php composer.phar update --optimize-autoloader -vvv\r\n\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\n^Cubuntu@ip-172-31-31-43:/usr/share/nginx/html/evernus-alliance-market$ sudo php composer.pha\r\nReading ./composer.json\r\nLoading config file /home/ubuntu/.composer/config.json\r\nLoading config file /home/ubuntu/.composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\r\nExecuting command (/usr/share/nginx/html/evernus-alliance-market): git branch --no-color --no\r\nExecuting command (/usr/share/nginx/html/evernus-alliance-market): git describe --exact-match\r\nExecuting command (/usr/share/nginx/html/evernus-alliance-market): git log --pretty=\"%H\" -n1\r\nExecuting command (/usr/share/nginx/html/evernus-alliance-market): hg branch\r\nFailed to initialize global composer: Composer could not find the config file: /home/ubuntu/.\r\nTo initialize a project, please create a composer.json file as described in the https://getco\r\nRunning 1.5.2 (2017-09-11 16:59:25) with PHP 5.5.9-1ubuntu4.22 on Linux / 3.13.0-125-generic\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/ubuntu/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting /home/ubuntu/.composer/cache/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-2017-01.json from cache\r\nDownloading https://packagist.org/p/provider-2017-04%24b3a74f3e9c460ef9b70a176105456812ce0abdde498a9eefcdd6428e6d0669b0.json\r\nWriting /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-2017-04.json into cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-2017-07.json from cache\r\nDownloading https://packagist.org/p/provider-2017-10%24e3e8eee8869c7ff5077fc7be311613db3d98bcfdf854139c4dcda3ec583c50cd.json\r\nWriting /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-2017-10.json into cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\r\nDownloading https://packagist.org/p/provider-latest%24674bcdb4235ed2aec8494805ec5a3cca4b365c7c930f6a4e7a1d267b642cc4bd.json\r\nWriting /home/ubuntu/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$framework-standard-edition.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$symfony.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$common.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-psr$log.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$icu.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-twig$twig.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$annotations.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$cache.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$collections.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$inflector.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$lexer.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$intl.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-intl-icu.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-php54.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$orm.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$dbal.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$console.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$debug.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-mbstring.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$instantiator.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$doctrine-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$framework-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-jdorn$sql-formatter.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$doctrine-bridge.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-doctrine$doctrine-cache-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$config.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$dependency-injection.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$event-dispatcher.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$filesystem.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$http-kernel.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$routing.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$stopwatch.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$templating.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$translation.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$http-foundation.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$finder.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$security-core.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$security-csrf.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$asset.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$class-loader.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$cache.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$security.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$security-acl.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-php55.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-paragonie$random-compat.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-php56.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-php70.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-util.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-apcu.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-psr$container.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-psr$cache.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-psr$simple-cache.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$property-access.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-ircmaxell$password-compat.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-twig$extensions.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$assetic-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-kriswallsmith$assetic.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$process.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$yaml.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$swiftmailer-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-swiftmailer$swiftmailer.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$swiftmailer-bridge.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-egulias$email-validator.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$monolog-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$monolog-bridge.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-monolog$monolog.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-sensio$distribution-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$form.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$validator.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$locale.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$options-resolver.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-sensiolabs$security-checker.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-sensio$framework-extra-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-incenteev$composer-parameter-handler.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-3rdpartyeve$phealng.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-friendsofsymfony$user-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$security-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$twig-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$twig-bridge.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$inflector.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-unifik$database-config-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-liip$url-auto-converter-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-alcohol$phpsoundcloud.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-guzzlehttp$guzzle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-guzzlehttp$ringphp.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-guzzlehttp$streams.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-react$promise.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-sensio$generator-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$browser-kit.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$css-selector.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$dom-crawler.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$expression-language.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$propel1-bridge.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$proxy-manager-bridge.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$security-http.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$serializer.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$web-profiler-bundle.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-phpunit$phpunit.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-phpdocumentor$reflection-docblock.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-phpdocumentor$type-resolver.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$property-info.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$workflow.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$security-guard.json from cache\r\nReading /home/ubuntu/.composer/cache/repo/https---packagist.org/provider-symfony$var-dumper.json from cache\r\n\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nI expect it to complete. Instead it just hangs on that last line for HOURS. No joke, I started it one night, went to bed and work up with still there. \r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Torys87": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6806", "title": "Composer hangs out after install some packages", "body": "**My `composer.json`:**\r\n```\r\n{\r\n    \"name\": \"magento/project-community-edition\",\r\n    \"description\": \"eCommerce Platform for Growth (Community Edition)\",\r\n    \"type\": \"project\",\r\n    \"version\": \"2.1.9\",\r\n    \"license\": [\r\n        \"OSL-3.0\",\r\n        \"AFL-3.0\"\r\n    ],\r\n    \"require\": {\r\n        \"magento/product-community-edition\": \"2.1.9\",\r\n        \"composer/composer\": \"@alpha\"\r\n    },\r\n    \"require-dev\": {\r\n        \"phpunit/phpunit\": \"4.1.0\",\r\n        \"squizlabs/php_codesniffer\": \"1.5.3\",\r\n        \"phpmd/phpmd\": \"@stable\",\r\n        \"pdepend/pdepend\": \"2.4.0\",\r\n        \"fabpot/php-cs-fixer\": \"~1.2\",\r\n        \"lusitanian/oauth\": \"~0.3 <=0.7.0\",\r\n        \"sebastian/phpcpd\": \"2.0.0\"\r\n    },\r\n    \"config\": {\r\n        \"use-include-path\": true\r\n    },\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"Magento\\\\Framework\\\\\": \"lib/internal/Magento/Framework/\",\r\n            \"Magento\\\\Setup\\\\\": \"setup/src/Magento/Setup/\",\r\n            \"Magento\\\\\": \"app/code/Magento/\"\r\n        },\r\n        \"psr-0\": {\r\n            \"\": \"app/code/\"\r\n        },\r\n        \"files\": [\r\n            \"app/etc/NonComposerComponentRegistration.php\"\r\n        ]\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Magento\\\\Sniffs\\\\\": \"dev/tests/static/framework/Magento/Sniffs/\",\r\n            \"Magento\\\\Tools\\\\\": \"dev/tools/Magento/Tools/\",\r\n            \"Magento\\\\Tools\\\\Sanity\\\\\": \"dev/build/publication/sanity/Magento/Tools/Sanity/\",\r\n            \"Magento\\\\TestFramework\\\\Inspection\\\\\": \"dev/tests/static/framework/Magento/TestFramework/Inspection/\",\r\n            \"Magento\\\\TestFramework\\\\Utility\\\\\": \"dev/tests/static/framework/Magento/TestFramework/Utility/\"\r\n        }\r\n    },\r\n    \"minimum-stability\": \"alpha\",\r\n    \"prefer-stable\": true,\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://repo.magento.com/\"\r\n        }\r\n    ],\r\n    \"extra\": {\r\n        \"magento-force\": \"override\"\r\n    }\r\n}\r\n```\r\n\r\n**Output of `composer diagnose`:**\r\n\r\nhttps://content.screencast.com/users/Torys87/folders/Jing/media/ec93ddae-b87f-488e-bdaa-be898118b734/2017-11-14_1124.png\r\n\r\n```\r\n$ ^Cphp composer.phar diagnose\r\nChecking composer.json: WARNING\r\nThe version field is present, it is recommended to leave it out if the package is published on Packagist.\r\nDefining autoload.psr-0 with an empty namespace prefix is a bad idea for performance\r\nrequire.magento/product-community-edition : exact version constraints (2.1.9) should be avoided if the package follows semantic versioning\r\nrequire.composer/composer : unbound version constraints (@alpha) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\n**When I run this command:**\r\n```\r\nphp composer.phar install\r\n```\r\n**I get the following output:**\r\n\r\nIt just stops after installing some packages:\r\n\r\nhttps://content.screencast.com/users/Torys87/folders/Jing/media/c61d2e14-efe8-4bc4-9102-11998d902632/2017-11-14_1127.png\r\n\r\nI need to re-run composer and it stops again, and it happens untill all packages are installed. All time.\r\nThis happens on my second computer.\r\n\r\nAs I investigated, It hangs out on extracting archive:\r\nhttps://content.screencast.com/users/Torys87/folders/Jing/media/562865e1-b2c3-4a2a-be6c-55b892c80bf4/2017-11-14_1129.png\r\n\r\n**And I expected this to happen:**\r\n\r\nAll modules are installed\r\n\r\nCan anyone help to solve this problem?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aleksip": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6803", "title": "Plugin dependency class not found on Composer 1.5.0 and later", "body": "I'm writing a Composer plugin that has a dependency on a package which is also a dependency of the root package using the plugin.\r\n\r\nWith Composer 1.5.0 and later the plugin fails because a class in this dependency is not found. Using Composer 1.4.3 the plugin works fine.\r\n\r\nComposer 1.5.0 release notes mention a change in package install order to ensure that plugins are always installed as soon as possible. Maybe this caused the changed behaviour?\r\n\r\nRoot project `composer.json`: https://github.com/pattern-lab/edition-php-twig-development/blob/feature/decoupled-core/composer.json\r\n\r\nPlugin `composer.json`: https://github.com/aleksip/patternlab-composer-plugin/blob/master/composer.json", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "felixfbecker": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6802", "title": "XDebugHandler as a separate package", "body": "I've been using the `XDebugHandler` in my project to restart it without XDebug if it's enabled because it has an enormous performance impact.\r\n\r\nhttps://github.com/felixfbecker/php-language-server/blob/1804ac8d978a318a4a6b88dc02b4362854b6a65b/bin/php-language-server.php#L34-L35\r\n\r\nBut it would be nice if I could use it without bringing in the whole `composer/composer` package and all its transitive dependencies. What do you think about moving it to a separate package? Like the semver library, I think it can be very valuable to other projects.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6802/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/b656973a86c9f4793f45bd5fa68410878bb5acc3", "message": "Exclude non-essential files from dist package"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Everspace": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6763", "title": "A 404 for a required bitbucket repository provides a cryptic error message.", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"example/example\",\r\n    \"description\": \"The website\",\r\n    \"require\": {\r\n        \"composer/installers\": \"~1.0\",\r\n        \"myorg/plugin_myplugin\": \"dev-master\",\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"vcs\",\r\n            \"url\": \"https://bitbucket.org/myorg/plugin_plugin_myplugin_typo\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`: irrelevant\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n\r\n  [Composer\\Downloader\\TransportException]\r\n  The \"?pagelen=100&fields=values.name%2Cvalues.target.hash%2Cnext&sort=-target.date\" file could not be downloaded: failed to open stream: Resource tempor\r\n  arily unavailable\r\n\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nThe error from\r\n\r\n```\r\ncomposer install -vv\r\n``` \r\n\r\nis much more useful to show that I had messed up typing the package name:\r\n\r\n```\r\n [Composer\\Downloader\\TransportException]\r\n The \"https://api.bitbucket.org/2.0/repositories/myorg/plugin_plugin_myplugin_typo?fields=-project%2C-owner\" file could not be downloaded (HTTP/1.1\r\n 404 Not Found)\r\n```\r\n\r\nAnd that I had requested an item that doesn't exist (404).", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kelunik": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6762", "title": "Hanging during provider downloads", "body": "Sometimes `composer update -vvv` just hangs while downloading files like\r\n\r\n```\r\nDownloading http://packagist.org/p/provider-2017-10%2496dfb6e4d2305925ee42dce611951d4c4f395cd397aa2b92f1095bec2c3e7459.json\r\n```\r\n\r\nI abort it then and restart it, then it runs maybe fine, maybe it hangs again. Usually it runs fine after several retries, because more and more of these provider updates are cached then, so the number of downloads where it could hang decreases with each run.\r\n\r\nI'm usually using PHP 7.2 RCs. I haven't noticed such hangs with my system installation, which is PHP 7.0, but have only payed attention to that very recently.\r\n\r\n```\r\nComposer version 1.6-dev (edece864e7e4c668dcad6601df70777882d22116) 2017-09-19 08:42:10\r\n```\r\n\r\nIf anyone is also experiencing such hangs, which PHP version do you use?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/5659", "title": "Global config option to disable plugins and scripts", "body": "There's [documentation available to disable plugins and scripts](https://getcomposer.org/doc/faqs/how-to-install-untrusted-packages-safely.md) by passing the appropriate command line options: `--no-plugins --no-scripts`. Unfortunately, there's no (documented) way to make that the default via the global configuration.\n\nPlease add a configuration option to disable scripts and / or plugins globally.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "emulienfou": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6761", "title": "No interactive Question on create-project: custom plugin", "body": "Hi there,\r\ntrying to create a custom composer plugin, I've got an issue on when is run the command `create-project`.\r\n\r\nHere is my code:\r\n```php\r\npublic static function getSubscribedEvents(): array\r\n    {\r\n        return [\r\n            ScriptEvents::POST_UPDATE_CMD         => 'postCreateProjectCmd',\r\n            ScriptEvents::POST_CREATE_PROJECT_CMD => 'postCreateProjectCmd'\r\n        ];\r\n    }\r\n\r\npublic function postCreateProjectCmd(Event $event)\r\n    {\r\n        $this->io->write('<warning>==========================================================================</warning>');\r\n        $this->io->write('<warning>                              Composer Installer                          </warning>');\r\n        $this->io->write('<warning>==========================================================================</warning>');\r\n\r\n        $question\r\n            = 'Do you want to install ThemeBundle?\r\n[<comment>y</comment>] Yes\r\n[<comment>n</comment>] No\r\n\r\n(defaults to <comment>y</comment>):';\r\n\r\n        $answer = $this->io->askAndValidate($question, function ($value) {\r\n            if (null === $value) {\r\n                return 'y';\r\n            }\r\n            $value = strtolower($value[0]);\r\n            if (!in_array($value, ['y', 'n'])) {\r\n                throw new InvalidArgumentException('Invalid choice');\r\n            }\r\n\r\n            return $value;\r\n        }, null, 'y');\r\n\r\n        if ('y' === $answer) {\r\n            $this->requirePackage();\r\n        }\r\n```\r\n\r\nWhen I execute the command `composer update`, at the end of the command, composer ask me the question **Do you want to install ThemeBundle?**.\r\n\r\nHowever, when I execute the command `composer create-project package/package` it suppose to ask me the same question, but I get no output on the console!!!\r\n\r\nIs there a exception is the composer code to avoid this situation and not authorize a such code to be executed?\r\n\r\nBest regards", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ThePixelDeveloper": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6760", "title": "Path Repository - Doesn't work if packagist namespace already exists.", "body": "Using the path repository to develop a Symfony Bundle. I noticed it doesn't work as expected if the namespace is in use on packagist.\r\n\r\nMy composer.json \r\n\r\n``` json\r\n{\r\n    \"name\": \"symfony/framework-standard-edition\",\r\n    \"license\": \"MIT\",\r\n    \"type\": \"project\",\r\n    \"description\": \"The \\\"Symfony Standard Edition\\\" distribution\",\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"path\",\r\n            \"url\": \"../bundle\"\r\n        }\r\n    ],\r\n    \"minimum-stability\" : \"dev\",\r\n    \"prefer-stable\" : true,\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"AppBundle\\\\\": \"src/AppBundle\"\r\n        },\r\n        \"classmap\": [ \"app/AppKernel.php\", \"app/AppCache.php\" ]\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": { \"Tests\\\\\": \"tests/\" },\r\n        \"files\": [ \"vendor/symfony/symfony/src/Symfony/Component/VarDumper/Resources/functions/dump.php\" ]\r\n    },\r\n    \"require\": {\r\n        \"php\": \">=5.5.9\",\r\n        \"doctrine/doctrine-bundle\": \"^1.6\",\r\n        \"doctrine/orm\": \"^2.5\",\r\n        \"incenteev/composer-parameter-handler\": \"^2.0\",\r\n        \"sensio/distribution-bundle\": \"^5.0.19\",\r\n        \"sensio/framework-extra-bundle\": \"^3.0.2\",\r\n        \"symfony/monolog-bundle\": \"^3.1.0\",\r\n        \"symfony/polyfill-apcu\": \"^1.0\",\r\n        \"symfony/swiftmailer-bundle\": \"^2.3.10\",\r\n        \"symfony/symfony\": \"3.3.*\",\r\n        \"something/sitemap-bundle\": \"*\",\r\n        \"twig/twig\": \"^1.0||^2.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"franzl/studio\": \"^0.12.0\",\r\n        \"sensio/generator-bundle\": \"^3.0\",\r\n        \"symfony/phpunit-bridge\": \"^3.0\"\r\n    },\r\n    \"scripts\": {\r\n        \"symfony-scripts\": [\r\n            \"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::buildBootstrap\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::clearCache\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installAssets\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installRequirementsFile\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::prepareDeploymentTarget\"\r\n        ],\r\n        \"post-install-cmd\": [\r\n            \"@symfony-scripts\"\r\n        ],\r\n        \"post-update-cmd\": [\r\n            \"@symfony-scripts\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"sort-packages\": true\r\n    },\r\n    \"extra\": {\r\n        \"symfony-app-dir\": \"app\",\r\n        \"symfony-bin-dir\": \"bin\",\r\n        \"symfony-var-dir\": \"var\",\r\n        \"symfony-web-dir\": \"web\",\r\n        \"symfony-tests-dir\": \"tests\",\r\n        \"symfony-assets-install\": \"relative\",\r\n        \"incenteev-parameters\": {\r\n            \"file\": \"app/config/parameters.yml\"\r\n        },\r\n        \"branch-alias\": {\r\n            \"dev-master\": \"3.3-dev\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe composer.json file of `../bundle`\r\n\r\n``` json \r\n{\r\n  \"name\": \"something/sitemap-bundle\",\r\n  \"type\": \"library\",\r\n  \"description\": \"A Symfony Bundle that integrates thepixeldeveloper/sitemap.\",\r\n  \"keywords\": [\"sitemap\", \"xml\", \"symfony\", \"bundle\"],\r\n  \"license\": \"MIT\",\r\n  \"authors\": [\r\n    {\r\n      \"name\": \"Mathew Davies\",\r\n      \"homepage\": \"http://mathew-davies.co.uk\",\r\n      \"role\": \"Developer\"\r\n    }\r\n  ],\r\n  \"require\": {\r\n    \"php\": \">=7.0\",\r\n    \"thepixeldeveloper/sitemap\": \"dev-master\"\r\n  },\r\n  \"require-dev\": {\r\n    \"phpspec/phpspec\": \"^4.0\",\r\n    \"symfony/framework-bundle\": \"^3.3\"\r\n  },\r\n  \"autoload\": {\r\n    \"psr-4\": {\r\n      \"Thepixeldeveloper\\\\SitemapBundle\\\\\": \"src/\"\r\n    }\r\n  },\r\n  \"autoload-dev\": {\r\n    \"psr-4\": {\r\n      \"spec\\\\Thepixeldeveloper\\\\SitemapBundle\\\\\": \"spec/\"\r\n    }\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \"phpspec run\"\r\n  },\r\n  \"extra\": {\r\n    \"branch-alias\": {\r\n      \"dev-master\": \"1.0-dev\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe above works fine, but stops working if I try to use `thepixeldeveloper/sitemap-bundle`. It'll always downloads from packagist. Can't find a way to fix this.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "68696c6c": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6759", "title": "Composer could not find the config file", "body": "My `composer.json`:\r\n\r\n```\r\n{\r\n  \"name\": \"laravel/laravel\",\r\n  \"description\": \"The Laravel Framework.\",\r\n  \"keywords\": [\r\n    \"framework\",\r\n    \"laravel\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"type\": \"project\",\r\n  \"require\": {\r\n    \"php\": \">=7.0.0\",\r\n    \"fideloper/proxy\": \"~3.3\",\r\n    \"laravel/framework\": \"5.5.*\",\r\n    \"laravel/tinker\": \"~1.0\"\r\n  },\r\n  \"require-dev\": {\r\n    \"filp/whoops\": \"~2.0\",\r\n    \"fzaninotto/faker\": \"~1.4\",\r\n    \"mockery/mockery\": \"0.9.*\",\r\n    \"phpunit/phpunit\": \"~6.0\"\r\n  },\r\n  \"autoload\": {\r\n    \"classmap\": [\r\n      \"database/seeds\",\r\n      \"database/factories\"\r\n    ],\r\n    \"psr-4\": {\r\n      \"App\\\\\": \"app/\"\r\n    }\r\n  },\r\n  \"autoload-dev\": {\r\n    \"psr-4\": {\r\n      \"Tests\\\\\": \"tests/\"\r\n    }\r\n  },\r\n  \"extra\": {\r\n    \"laravel\": {\r\n      \"dont-discover\": [\r\n      ]\r\n    }\r\n  },\r\n  \"scripts\": {\r\n    \"post-root-package-install\": [\r\n      \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\r\n    ],\r\n    \"post-create-project-cmd\": [\r\n      \"@php artisan key:generate\"\r\n    ],\r\n    \"post-autoload-dump\": [\r\n      \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\r\n      \"@php artisan package:discover\"\r\n    ]\r\n  },\r\n  \"config\": {\r\n    \"preferred-install\": \"dist\",\r\n    \"sort-packages\": true,\r\n    \"optimize-autoloader\": true\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nComposer could not find the config file: /Users/aaronhill/.composer/vendor/bin\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\n```\r\n\r\nAnd I expected this to happen:\r\nExpected composer to install the dependancies since the project's composer.json file is present.\r\n\r\nI'm using Composer version 1.5.2 on MacOS 10.12.6.  I've uninstalled and reinstalled Composer a couple of times trying to get this to work.  My ~/.composer directory appears to be missing the vendor directory mentioned in the error message, but I'm at a loss for why.\r\n\r\nThis is happening in a brand new Laravel project.  I've tried creating a new project from scratch by downloading the Laravel zip and have the same problem every time.  The `composer create-project` command just throws an error similar to the one above.\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dzuelke": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6752", "title": "JSON schema check is borked", "body": "The following `composer.json` works:\r\n\r\n```json\r\n{\r\n\t\"repositories\": [\r\n\t\t{\r\n\t\t\t\"packagist\": false\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"type\": \"package\",\r\n\t\t\t\"package\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"foo/bar\",\r\n\t\t\t\t\t\"provide\": {\r\n\t\t\t\t\t\t\"heroku-sys/ext-mongo\": \"1.6.14\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"replace\": [],\r\n\t\t\t\t\t\"require\": {\r\n\t\t\t\t\t\t\"php\": \"^5.5 || ^7.0\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"type\": \"metapackage\",\r\n\t\t\t\t\t\"version\": \"1.0.0\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"type\": \"package\"\r\n\t\t}\r\n\t],\r\n\t\"require\": {\r\n\t\t\"foo/bar\": \"1.0.0\"\r\n\t}\r\n}\r\n```\r\n\r\nIf you remove `replace`, it fails:\r\n\r\n```json\r\n{\r\n\t\"repositories\": [\r\n\t\t{\r\n\t\t\t\"packagist\": false\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"type\": \"package\",\r\n\t\t\t\"package\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"foo/bar\",\r\n\t\t\t\t\t\"provide\": {\r\n\t\t\t\t\t\t\"heroku-sys/ext-mongo\": \"1.6.14\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"require\": {\r\n\t\t\t\t\t\t\"php\": \"^5.5 || ^7.0\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"type\": \"metapackage\",\r\n\t\t\t\t\t\"version\": \"1.0.0\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"type\": \"package\"\r\n\t\t}\r\n\t],\r\n\t\"require\": {\r\n\t\t\"foo/bar\": \"1.0.0\"\r\n\t}\r\n}\r\n```\r\n\r\n```ShellSession\r\n$ composer install --dry-run\r\n\r\n                                                                               \r\n  [Composer\\Json\\JsonValidationException]                                      \r\n  \"./composer.json\" does not match the expected JSON schema:                   \r\n   - repositories[1] : Must contain no more than 1 properties                  \r\n   - repositories[1].package : Array value found, but a boolean is required    \r\n   - repositories[1].package : Does not have a value in the enumeration [fals  \r\n  e]                                                                           \r\n   - repositories[1].package : Failed to match exactly one schema              \r\n   - repositories[1].url : The property url is required                        \r\n   - repositories[1].type : Does not have a value in the enumeration [\"compos  \r\n  er\"]                                                                         \r\n   - repositories[1].type : Does not have a value in the enumeration [\"vcs\",\"  \r\n  github\",\"git\",\"gitlab\",\"git-bitbucket\",\"hg\",\"hg-bitbucket\",\"fossil\",\"perfor  \r\n  ce\",\"svn\"]                                                                   \r\n   - repositories[1].type : Does not have a value in the enumeration [\"path\"]  \r\n   - repositories[1].type : Does not have a value in the enumeration [\"artifa  \r\n  ct\"]                                                                         \r\n   - repositories[1].type : Does not have a value in the enumeration [\"pear\"]  \r\n   - repositories[1] : Failed to match exactly one schema                      \r\n```\r\n\r\nBut if you then make `require` an empty array (but not remove it), it works again:\r\n\r\n```json\r\n{\r\n\t\"repositories\": [\r\n\t\t{\r\n\t\t\t\"packagist\": false\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"type\": \"package\",\r\n\t\t\t\"package\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"name\": \"foo/bar\",\r\n\t\t\t\t\t\"provide\": {\r\n\t\t\t\t\t\t\"heroku-sys/ext-mongo\": \"1.6.14\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"require\": [],\r\n\t\t\t\t\t\"type\": \"metapackage\",\r\n\t\t\t\t\t\"version\": \"1.0.0\"\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t\"type\": \"package\"\r\n\t\t}\r\n\t],\r\n\t\"require\": {\r\n\t\t\"foo/bar\": \"1.0.0\"\r\n\t}\r\n}\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/5030", "title": "[with patch] requiring a platform package that is provided by another required package fails", "body": "_First, this issue is not entirely trivial to reproduce, because everyone has different PHP versions and extensions installed. To reproduce the steps and behaviors below, please ensure that you run `php -n $(which composer)` instead of plainly `composer`, or that with `composer show --platform | grep mongo`, nothing shows up :)_\n\n_If you're on Ubuntu or something, `php -n` will also prevent loading `ext-phar`, so nothing will work. In that case, just make sure you have no `ext-mongo`, and run `composer` directly instead of `php -n $(which composer)`._\n\nLet's say your code needs `ext-mongo` (via Doctrine ODM, for instance), but that's not available on PHP 7, so you want to use https://github.com/alcaeus/mongo-php-adapter, which in its `composer.json` says `\"provide\": { \"ext-mongo\": \"1.6.12\" }`, and which is a wrapper around `ext-mongodb` to provide an interface that's compatible with the old `ext-mongo`.\n\nStart with a basic `composer.json`, to mock the existence of `ext-mongodb` (again, you do _not_ want `ext-mongo` installed when following along, so always run with `php -n` later):\n\n``` ShellSession\n$ composer init -n\n$ composer config platform.php \"7.0.4\"\n$ composer config platform.ext-mhash \"7.0.4\"\n$ composer config platform.ext-mongodb \"1.1.3\"\n```\n\nI will use the `composer-provide` branch of https://github.com/alcaeus/mongo-php-adapter explicitly because the master branch has changed between using `provide` and `replace` a few times recently. There is also a `composer-replace` branch that uses `replace` instead of `provide` for `ext-mongo`.\n\nRemember, `php -n` will prevent ini loads, so if you have ext-mongo locally, it should not get loaded:\n\n``` ShellSession\n$ php -n $(which composer) require alcaeus/mongo-php-adapter:dev-composer-provide\n./composer.json has been updated\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\n  - Installing mongodb/mongodb (1.0.1)\n    Loading from cache\n\n  - Installing alcaeus/mongo-php-adapter (dev-composer-provide 698d301)\n    Cloning 698d3012c306af299491aa166dc9aa29a4bce5b8\n\nWriting lock file\nGenerating autoload files\n```\n\nNow there is a package that provides \"ext-mongo\" installed, and that info is in the lock file. Which works as expected if you now require that extension:\n\n``` ShellSession\n$ php -n $(which composer) require ext-mongo:*\n./composer.json has been updated\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nNothing to install or update\nWriting lock file\nGenerating autoload files\n```\n\nA subsequent `composer update` also works. Great, so let's try a case that fails - having the requirements already in place, but no lock file:\n\n``` ShellSession\n$ rm -rf composer.lock vendor\n$ php -n $(which composer) update\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\n\n  Problem 1\n    - The requested PHP extension ext-mongo * is missing from your system. Install or enable PHP's mongo extension.\n```\n\nWeird, right? The same happens if you require both in one go obviously:\n\n``` ShellSession\n$ php -n $(which composer) remove ext-mongo\n$ php -n $(which composer) remove alcaeus/mongo-php-adapter\n\n$ php -n $(which composer) require alcaeus/mongo-php-adapter:dev-composer-provide ext-mongo:*\n./composer.json has been updated\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\n\n  Problem 1\n    - The requested PHP extension ext-mongo * is missing from your system. Install or enable PHP's mongo extension.\n\nInstallation failed, reverting ./composer.json to its original content.\n```\n\nYou could of course also manually put both packages into `composer.json` and run `composer update`, same effect (that's actually what happened when we removed lock file and vendor dir earlier and ran an update).\n\nFor the steps above, instead of requiring `ext-mongo`, you can also use `doctrine/mongodb`, which in turn requires `ext-mongo`. Same behavior.\n\nThere is a workaround: if you put the \"alcaeus/mongo-php-adapter\" package into a \"package\" repo inside composer.json, things work. Take this `composer.json`:\n\n``` JSON\n{\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/alcaeus/mongo-php-adapter\"\n        }\n    ],\n    \"require\": {\n        \"alcaeus/mongo-php-adapter\": \"dev-composer-provide\",\n        \"doctrine/mongodb\": \"^1.2\"\n    },\n    \"config\": {\n        \"platform\": {\n            \"php\": \"7.0.4\",\n            \"ext-mhash\": \"7.0.4\",\n            \"ext-mongodb\": \"1.1.3\"\n        }\n    }\n}\n```\n\nThat works:\n\n``` ShellSession\n$ rm -rf composer.lock vendor\n$ php -n $(which composer) update\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)     \n\u2026                         \n```\n\nThis pointed to a problem with information from Packagist, and indeed, it's due to behavior in (and data available to) `ComposerRepository`.\n\nThere is no information from Packagist on provided platform packages such as `ext-mongo`, so without a lock file, the info that one of the other required packages provides `ext-mongo` is apparently not there, and that's why things fail.\n\nHere is the fix:\n\n``` diff\ndiff --git a/src/Composer/Repository/ComposerRepository.php b/src/Composer/Repository/ComposerRepository.php\nindex 5bd4e8a..91d6d58 100644\n--- a/src/Composer/Repository/ComposerRepository.php\n+++ b/src/Composer/Repository/ComposerRepository.php\n@@ -371,7 +371,9 @@ public function whatProvides(Pool $pool, $name)\n                         // override provider with its alias so it can be expanded in the if block above\n                         $this->providersByUid[$version['uid']] = $package;\n                     } else {\n-                        $this->providers[$name][$version['uid']] = $package;\n+                        foreach($package->getNames() as $nameName) {\n+                            $this->providers[$nameName][$version['uid']] = $package;\n+                        }\n                         $this->providersByUid[$version['uid']] = $package;\n                     }\n```\n\nHowever, that feels like a band-aid treating a symptom of the real underlying issue, which is that Packagist does not have a list of provider packages for platform packages:\n\n``` ShellSession\n$ ls ~/.composer/cache/repo/https---packagist.org/provider-ext*\nls: .composer/cache/repo/https---packagist.org/provider-ext*: No such file or directory\n```\n\n/cc @alcaeus @holtkamp @stof \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5030/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hrace009": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6730", "title": "not running at all", "body": "When I run this command:\r\n\r\n```\r\n[root@instance-1 ~]# composer -V\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n[root@instance-1 ~]#\r\n```\r\nThis mean no output at all\r\nI have try to install laravel with composer, and it show nothing.\r\n\r\n```\r\n[root@instance-1 ~]# php -v\r\nPHP 7.0.24 (cli) (built: Sep 26 2017 17:51:46) ( NTS )\r\nCopyright (c) 1997-2017 The PHP Group\r\nZend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies\r\n    with the ionCube PHP Loader (enabled) + Intrusion Protection from ioncube24.com (unconfigured) v10.0.3, Copyright (c) 2002-2017, by ionCube Ltd.\r\n```\r\n\r\n```\r\n[root@instance-1 ~]# php -m\r\n[PHP Modules]\r\nbz2\r\ncalendar\r\nCore\r\nctype\r\ncurl\r\ndate\r\ndom\r\nexif\r\nfileinfo\r\nfilter\r\nftp\r\ngd\r\ngettext\r\nhash\r\niconv\r\nimagick\r\nimap\r\nintl\r\nionCube Loader\r\njson\r\nldap\r\nlibxml\r\nmbstring\r\nmcrypt\r\nmysqli\r\nmysqlnd\r\nodbc\r\nopenssl\r\npcntl\r\npcre\r\nPDO\r\npdo_mysql\r\nPDO_ODBC\r\npdo_sqlite\r\nPhar\r\nposix\r\nrar\r\nreadline\r\nReflection\r\nsession\r\nshmop\r\nSimpleXML\r\nsoap\r\nsockets\r\nSPL\r\nsqlite3\r\nstandard\r\nsuhosin7\r\nsysvmsg\r\nsysvsem\r\nsysvshm\r\ntokenizer\r\nwddx\r\nxml\r\nxmlreader\r\nxmlrpc\r\nxmlwriter\r\nxsl\r\nzip\r\nzlib\r\n\r\n[Zend Modules]\r\nthe ionCube PHP Loader (enabled) + Intrusion Protection from ioncube24.com (unconfigured)\r\n\r\n[root@instance-1 ~]#\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "WebDevGuy2143": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6724", "title": "Downloading Composer to folder on Windows computer.", "body": "Hello, I am having trouble installing composer to a specified folder using xampp on my windows computer. I've tried following the instructions, but I must not be doing it right. Can I get a step by step instructional on how to do this? I don't use command prompt very often.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fabiojaniolima": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6720", "title": "Composer does not detect new package version", "body": "In version 1.5.2 the composer does not detect recent and stable versions of new packages.\r\n\r\nExample:\r\n```\r\ncomposer create-project fabiojaniolima / webupload --no-dev\r\n```\r\nVersion 1.0.0 has been installed\r\n\r\nDays later was released version 1.1.0, I tried to create a new project:\r\n```\r\ncomposer create-project fabiojaniolima / webupload --no-dev\r\n```\r\nVersion 1.0.0 was reinstalled\r\n\r\nPlayed clear composer but did not solve.\r\n\r\nSolution:\r\n```\r\ncomposer clear\r\ncomposer update\r\ncomposer create-project fabiojaniolima / webupload --no-dev\r\n```\r\nThe \"composer update\" command caused an error, but allowed us to proceed with the download of the new package\r\n\r\nDetails:\r\n- PHP v7.1.10\r\n- Composer v1.5.2\r\n- Debian 9.1", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GhaleonZ": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6715", "title": "Composer Doesn't Work", "body": "My `composer.json`:\r\n{\r\n    \"require\": {\r\n         \"mediawiki/semantic-extra-special-properties\": \"~1.5\",\r\n         \"mediawiki/semantic-breadcrumb-links\": \"~1.4\"\r\n    }\r\n}\r\n\r\nOutput of `composer diagnose`:\r\nWTH is composer diagnose?\r\n\r\nWhen I run this command:\r\n\r\ncomposer update -vvv\r\n\r\nI get the following output:\r\n\r\nA bunch of garbage, telling me the global JSON is nowhere to be found. And then Composer spends 5 hours trolling through packagist with a bunch of unnamed JSON downloads, that are less than 20mb total in size. And then writing into the AppData/Local directory's repo folder a variety of JSON files that are already in my vendor folder of the XAMPP installation I'm using.\r\n\r\nAnd I expected this to happen:\r\n\r\nWhat I'm told will happen is that it's supposed to download and install those two extensions for my Mediawiki installation. But it never happens. I've seen the way it's supposed to look, and my log looks NOTHING like that at all.\r\n\r\nIn short, Composer was installed via the Windows Setup exe, directed to the PHP.exe file inside my XAMPP installation. And that is the only thing that has worked in this entire process.\r\n\r\nUsing Composer Require from the command line does edit the composer.json file inside htdocs/zephyr (where my MW installation is).\r\n\r\nBut after that, it does NOTHING like everyone says it does. It doesn't install anything. But instead appears to troll GIT and download stuff that is already in my vendor folders.\r\n\r\nMicrosoft Windows [Version 6.1.7601]\r\nCopyright (c) 2009 Microsoft Corporation.  All rights reserved.\r\n\r\nC:\\Users\\Ghaleon>cd c:\\xampp\\htdocs\\zephyr\r\n\r\nc:\\xampp\\htdocs\\zephyr>composer require mediawiki/semantic-extra-special-propert\r\nies \"~1.5\" -vvv\r\nReading ./composer.json\r\nLoading config file ./composer.json\r\nChecked CA file C:\\Users\\Ghaleon\\AppData\\Local\\Temp\\composer-cacert-e78c8ab7b443\r\n2bd466e64bb942d988f6c0ac91cd785017e465bdc96d42fe9dd0.pem: valid\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): git branch --no-color --no-abbrev -v\r\n\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): git describe --exact-match --tags\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): hg branch\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): fossil branch list\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): fossil tag list\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: C\r\n:/Users/Ghaleon/AppData/Roaming/Composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the\r\nhttps://getcomposer.org/ \"Getting Started\" section\r\nReading C:\\xampp\\htdocs\\zephyr/vendor/composer/installed.json\r\nLoading plugin Wikimedia\\Composer\\MergePlugin\r\nRunning 1.5.2 (2017-09-11 16:59:25) with PHP 7.1.7 on Windows NT / 6.1\r\n./composer.json has been updated\r\nReading ./composer.json\r\nLoading config file ./composer.json\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): git branch --no-color --no-abbrev -v\r\n\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): git describe --exact-match --tags\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): hg branch\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): fossil branch list\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): fossil tag list\r\nExecuting command (C:\\xampp\\htdocs\\zephyr): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: C\r\n:/Users/Ghaleon/AppData/Roaming/Composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the\r\nhttps://getcomposer.org/ \"Getting Started\" section\r\nReading C:\\xampp\\htdocs\\zephyr/vendor/composer/installed.json\r\nLoading plugin Wikimedia\\Composer\\MergePlugin_composer_tmp0\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting C:/Users/Ghaleon/AppData/Local/Composer/repo/https---packagist.org/packa\r\nges.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading C:/Users/Ghaleon/AppData/Local/Composer/repo/https---packagist.org/p-pro\r\nvider-2013.json from cache\r\nReading C:/Users/Ghaleon/AppData/Local/Composer/repo/https---packagist.org/p-pro\r\nvider-2014.json from cache\r\nReading C:/Users/Ghaleon/AppData/Local/Composer/repo/https---packagist.org/p-pro\r\nvider-2015.json from cache\r\nReading C:/Users/Ghaleon/AppData/Local/Composer/repo/https---packagist.org/p-pro\r\nvider-2016.json from cache\r\nReading C:/Users/Ghaleon/AppData/Local/Composer/repo/https---packagist.org/p-pro\r\nvider-2016-10.json from cache\r\nDownloading http://packagist.org/p/provider-2017-01%24d88eddadd51717e910cd1bad29\r\n89204217e7add9448808859860c1520b3d294d.json\r\n\r\nI'm extremely frustrated. I don't know what half of the geek speak means. All I want is the ability to use two extensions on my MediaWiki extension. Semantic Breadcrumb Links and Semantic Extra Special Properties.\r\n\r\nAnd nobody on the Internet seems to be able to tell me how I can get these two installed, without a week spent learning CommandLine stuff and Composer commands.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brandomeniconi": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6713", "title": "Unable to authenticate via GCP service-accounts to Google Cloud Source Repositories", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"vendor/project\",\r\n  \"type\": \"project\",\r\n  \"repositories\": [\r\n    {\r\n        \"type\": \"vcs\",\r\n        \"url\": \"https://source.developers.google.com/p/my-project-name/r/my-repo-name\"\r\n    }    \r\n  ],\r\n  \"require\": {\r\n    \"vendor/my-repo-name\": \"^1.0\"\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: OK\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n[RuntimeException]                                                                                                                                                                                                                            \r\n  Failed to execute git clone --mirror 'https://source.developers.google.com/p/my-project-name/r/my-repo-name' '/home/ubuntu/.composer/cache/vcs/https---source.developers.google.com-p-my-project-name-r-my-repo-name/'  \r\n  Cloning into bare repository '/home/ubuntu/.composer/cache/vcs/https---source.developers.google.com-p-my-project-name-r-my-repo-name'...                                                                                           \r\n  fatal: remote error:                                                                                                                                                                                                                          \r\n  Invalid authentication credentials.                                                                                                                                                                                                           \r\n  Please generate a new identifier:                                                                                                                                                                                                             \r\n    https://source.developers.google.com/auth/start?scopes=https://www.googleapis.com/auth/cloud-platform\r\n```\r\n\r\nWe store all our private code in [Google Cloud Source Repositories](https://cloud.google.com/source-repositories/) but we can't use them as Composer `vcs` repos because the clone should be made via a [gcloud SDK command](https://cloud.google.com/source-repositories/docs/cloning-a-repository):\r\n\r\n `gcloud source repos clone [REPO_NAME] [LOCAL_DIRECTORY]`.\r\n\r\nand not the standard `git clone`. This allows to get the git repo via the already authenticated user in the local Google Cloud SDK. There is also another way to enable a local git repo to [get the credentials automatically](https://cloud.google.com/source-repositories/docs/adding-repositories-as-remotes) via the local gcloud SDK account:\r\n\r\n`git config credential.helper gcloud.sh`\r\n\r\nbut I can't  figure out how to execute this command before the `git clone --mirror ..` command printed in the error above or completely replace it with the native one.\r\n\r\nI know that there is a way to get a standard GIT user/password via the link provided in the error above and use the into `auth.json`, but (AFAIK) that can only be generated for real Google accounts (usually super-admin) and not for service accounts that we use in our dev environments with only repo read/write permissions.\r\n\r\nCan Composer get native support for Google Cloud Source Repositories or there is any way to create and append a custom `VcsDriver` class for it?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cnkt": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6712", "title": "Version conflict for doctrine/orm", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"require\": {\r\n    \"silex/silex\": \"~2.0\",\r\n    \"doctrine/orm\": \"^2.5\",\r\n    \"twig/twig\": \"~1.0\",\r\n    \"symfony/console\": \"^3.0\",\r\n    \"cakephp/collection\": \"dev-master\",\r\n    \"knplabs/knp-menu\": \"^2.1@dev\",\r\n    \"zendframework/zendframework1\": \"^1.12@dev\",\r\n    \"phpoffice/phpexcel\": \"dev-master\",\r\n    \"dflydev/doctrine-orm-service-provider\": \"^2.0\",\r\n    \"ircmaxell/random-lib\": \"1.1.*@dev\",\r\n    \"gedmo/doctrine-extensions\": \"2.4.*@dev\",\r\n    \"jbroadway/urlify\": \"1.0.*@dev\",\r\n    \"igorw/get-in\": \"^1.0@dev\",\r\n    \"symfony/security\": \"^3.1\",\r\n    \"symfony/security-bundle\": \"^3.1\",\r\n    \"symfony/twig-bridge\": \"^3.0\",\r\n    \"symfony/var-dumper\": \"^3.1\",\r\n    \"symfony/debug-bundle\": \"^3.1\",\r\n    \"symfony/translation\": \"^3.1\",\r\n    \"sorien/silex-dbal-profiler\": \"~2.0\",\r\n    \"sinasalek/silex-pagerfanta-provider\": \"1.0.*@dev\",\r\n    \"fzaninotto/faker\": \"^1.6@dev\",\r\n    \"kriswallsmith/assetic\": \"^1.3@dev\",\r\n    \"tedivm/stash\": \"0.14.*\",\r\n    \"league/flysystem\": \"^1.1@dev\",\r\n    \"vlucas/phpdotenv\": \"^2.1@dev\",\r\n    \"anahkiasen/underscore-php\": \"dev-master\",\r\n    \"mouf/html.widgets.statsgrid\": \"~1.0\",\r\n    \"codeguy/upload\": \"dev-master\",\r\n    \"imagine/imagine\": \"~0.5.0\",\r\n    \"leongkui/silex-php-redis\": \"*\",\r\n    \"phpmailer/phpmailer\": \"dev-master\",\r\n    \"swiftmailer/swiftmailer\": \"^5.4\",\r\n    \"guzzlehttp/guzzle\": \"^6.1\",\r\n    \"illuminate/encryption\": \"^5.1\",\r\n    \"phpunit/php-timer\": \"~1.0\",\r\n    \"elasticsearch/elasticsearch\": \"~2.0@beta\",\r\n    \"mk-j/php_xlsxwriter\": \"dev-dev\",\r\n    \"fabpot/goutte\": \"^3.1\",\r\n    \"cakephp/chronos\": \"@stable\",\r\n    \"beberlei/DoctrineExtensions\": \"^1.0\",\r\n    \"akeneo-labs/spreadsheet-parser\": \"^1.2\",\r\n    \"php-amqplib/php-amqplib\": \"2.6.*\",\r\n    \"sendgrid/sendgrid\": \"~5.0.4\",\r\n    \"aura/payload\": \"^3.0\",\r\n    \"box/spout\": \"^2.5\",\r\n    \"sentry/sentry\": \"^1.1\",\r\n    \"datadog/php-datadogstatsd\": \"0.3.*\",\r\n    \"friendsofphp/php-cs-fixer\": \"^1.12\",\r\n    \"ramsey/uuid-doctrine\": \"^1.2\",\r\n    \"sabre/xml\": \"^2.0\",\r\n    \"zendframework/zendxml\": \"^1.0\",\r\n    \"saxulum/saxulum-doctrine-orm-manager-registry-provider\": \"^3.1\",\r\n    \"saxulum/saxulum-console\": \"~3.1\",\r\n    \"cboden/ratchet\": \"0.3.*\",\r\n    \"react/zmq\": \"0.2.*|0.3.*\",\r\n    \"mongodb/mongodb\": \"^1.2@dev\",\r\n    \"saxulum/saxulum-doctrine-orm-commands\": \"dev-master\",\r\n    \"sorien/silex-pimple-dumper\": \"~2.0\",\r\n    \"predis/service-provider\": \"^2.0@dev\",\r\n    \"symfony/cache\": \"^4.0@dev\"\r\n  },\r\n  \"include-path\": [],\r\n  \"autoload\": {\r\n    \"psr-0\": {\r\n      \"O2\": \"src/\"\r\n    },\r\n    \"classmap\": [\"lib/\"]\r\n  },\r\n  \"minimum-stability\": \"dev\",\r\n  \"require-dev\": {\r\n    \"sstalle/php7cc\": \"^1.0\",\r\n    \"phpmd/phpmd\": \"dev-master\",\r\n    \"escapestudios/symfony2-coding-standard\": \"~2.0\"\r\n  },\r\n  \"repositories\": [\r\n    {\r\n      \"type\": \"vcs\",\r\n      \"url\": \"https://github.com/AlexStef/saxulum-doctrine-orm-commands\"\r\n    }\r\n  ]\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nrequire.cakephp/collection : unbound version constraints (dev-master) should be avoided\r\nrequire.phpoffice/phpexcel : unbound version constraints (dev-master) should be avoided\r\nrequire.anahkiasen/underscore-php : unbound version constraints (dev-master) should be avoided\r\nrequire.codeguy/upload : unbound version constraints (dev-master) should be avoided\r\nrequire.leongkui/silex-php-redis : unbound version constraints (*) should be avoided\r\nrequire.phpmailer/phpmailer : unbound version constraints (dev-master) should be avoided\r\nrequire.cakephp/chronos : unbound version constraints (@stable) should be avoided\r\nrequire.saxulum/saxulum-doctrine-orm-commands : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update --prefer-dist\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n   1/1:\thttp://packagist.org/p/provider-latest$7b3de6e55cac870a58f9e92d03478ea4b0e8016b8c0c5fb0c6de1cd5efbb4a1c.json\r\n    Finished: success: 1, skipped: 0, failure: 0, total: 1\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\n\r\n\r\n  [Composer\\DependencyResolver\\SolverProblemsException]\r\n    Problem 1\r\n      - Installation request for doctrine/orm 2.5.11 -> satisfiable by doctrine/orm[v2.5.11].\r\n      - doctrine/orm v2.5.11 requires doctrine/common >=2.5-dev,<2.9-dev -> no matching package found.\r\n    Problem 2\r\n      - doctrine/orm v2.5.11 requires doctrine/common >=2.5-dev,<2.9-dev -> no matching package found.\r\n      - ramsey/uuid-doctrine 1.4.1 requires doctrine/orm ^2.5 -> satisfiable by doctrine/orm[v2.5.11].\r\n      - Installation request for ramsey/uuid-doctrine ^1.2 -> satisfiable by ramsey/uuid-doctrine[1.4.1].\r\n  Potential causes:\r\n   - A typo in the package name\r\n   - The package is not available in a stable-enough version according to your minimum-stability setting\r\n     see <https://getcomposer.org/doc/04-schema.md#minimum-stability> for more details.\r\n  Read <https://getcomposer.org/doc/articles/troubleshooting.md> for further common problems.\r\n\r\n\r\nupdate [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--lock] [--no-custom-installers] [--no-autoloader] [--no-scripts] [--no-progress] [--no-suggest] [--with-dependencies] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--ignore-platform-reqs] [--prefer-stable] [--prefer-lowest] [-i|--interactive] [--root-reqs] [--] [<packages>]...\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nUpdate the dependencies to required versions.\r\n\r\nAdditional info:\r\n\r\nDoctrine team says the problem is on composer side: https://github.com/doctrine/doctrine2/issues/6738\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6712/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kael-shipman": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6708", "title": "Composer chokes when `path` type repositories are converted to vcs repos", "body": "### My initial `composer.json`:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"me/my-lib\": \"~1.0\"\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"path\",\r\n            \"url\": \"../me/my-lib\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n### My `composer.json` after breaking `me/my-lib` out into a separate repo:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"me/my-lib\": \"~1.0\"\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"git\",\r\n            \"url\": \"https://github.com/me/my-lib.git\"\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n### Output of `composer diagnose`:\r\n\r\n```\r\n(Todo)\r\n```\r\n\r\n### When I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\n### I get the following output:\r\n\r\n```\r\n  [RuntimeException]                                                                         \r\n  /path/to/me/my-lib does not exist and could not be created. \r\n```\r\n\r\n### And I expected this to happen:\r\n\r\n(successful update)\r\n\r\n### More details\r\n\r\nThis happens because composer creates a symlink for path repositories and expects them to be directories, but when the source directory is removed and the dependency is replaced with a git repo, the symlinks become dangling and composer chokes on it. We probably just need to do a check for whether the package under the `vendor` folder is a directory or a symlink and then just delete it if it's a dangling symlink.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Webysther": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6702", "title": "Use sodium_crypto_generichash for version 2", "body": "Maybe is time to consider [BLAKE2](https://en.wikipedia.org/wiki/BLAKE_%28hash_function%29#BLAKE2) provided by sodium wich is more fast than MD5 and more secure than used SHA256, is provided by [polyfill](https://github.com/mollie/polyfill-libsodium) for PHP7.2 parity and [polyfill](https://github.com/paragonie/sodium_compat) of implementation too.\r\n\r\n# crypto_generichash()\r\n\r\nFor PHP developers: This is sort of like `hash()`, except it can also be `hash_hmac()` if you pass a key, and it only allows BLAKE2b (so you don't have to select the algorithm).\r\n\r\nYou want to use `crypto_generichash()` anywhere you'd normally use `hash()`, `md5()`, or `sha1()` (unless \"normally\" implies something that would cause a cryptographer would look at you funny). `crypto_generichash()` is attractive because it is all of the following:\r\n\r\n- Collision-resistant\r\n- Preimage-resistant\r\n- Immune to length-extension attacks\r\n- More secure than SHA256\r\n- Faster than MD5\r\n\r\nReference: https://dev.to/paragonie/libsodium-quick-reference#crypto-generichash", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6702/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "grasmash": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6691", "title": "Improve Composer output, make language more helpful to novices.", "body": "Composer's output can be very difficult to interpret, even for those who already understand what's happening.\r\n\r\nI believe that this is largely responsible for the criticism that composer is overly complex or difficult to use. Improving the clarity of the language used to describe installation and update failures would go a long way towards improving the developer experience.\r\n\r\nI've opened this issue to begin a discussion on what we would like the output to be.\r\n\r\nIdeally, the output from a failed installation or update should:\r\n1) Clearly and succinctly identify the problem\r\n2) Offer actionable solutions\r\n3) Assume no knowledge of the internal workings of Composer.\r\n\r\nIt is apparent from the current behavior composer that these principles have been considered before. The problem/conclusion format of the current output is a nice starting point.\r\n\r\nI'd like to outline a few example scenarios, show their current output, and offer suggestions for improved output.\r\n\r\n##  Scenario 1: Redundant output\r\n\r\n```\r\ncomposer require grasmash/yaml-cli\r\ncomposer require symfony/console:~2.0.4\r\n``` \r\n\r\n```\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - grasmash/yaml-cli 1.0.3 requires symfony/console ^2.8.11|^3.2 -> satisfiable by symfony/console[2.8.x-dev, 3.2.x-dev, 3.3.x-dev, 3.4.x-dev, v2.8.11, v2.8.12, v2.8.13, v2.8.14, v2.8.15, v2.8.16, v2.8.17, v2.8.18, v2.8.19, v2.8.20, v2.8.21, v2.8.22, v2.8.23, v2.8.24, v2.8.25, v2.8.26, v2.8.27, v3.2.0, v3.2.0-BETA1, v3.2.0-RC1, v3.2.0-RC2, v3.2.1, v3.2.10, v3.2.11, v3.2.12, v3.2.13, v3.2.2, v3.2.3, v3.2.4, v3.2.5, v3.2.6, v3.2.7, v3.2.8, v3.2.9, v3.3.0, v3.3.0-BETA1, v3.3.0-RC1, v3.3.1, v3.3.2, v3.3.3, v3.3.4, v3.3.5, v3.3.6, v3.3.7, v3.3.8, v3.3.9] but these conflict with your requirements or minimum-stability.\r\n    - grasmash/yaml-cli 1.0.3 requires symfony/console ^2.8.11|^3.2 -> satisfiable by symfony/console[2.8.x-dev, 3.2.x-dev, 3.3.x-dev, 3.4.x-dev, v2.8.11, v2.8.12, v2.8.13, v2.8.14, v2.8.15, v2.8.16, v2.8.17, v2.8.18, v2.8.19, v2.8.20, v2.8.21, v2.8.22, v2.8.23, v2.8.24, v2.8.25, v2.8.26, v2.8.27, v3.2.0, v3.2.0-BETA1, v3.2.0-RC1, v3.2.0-RC2, v3.2.1, v3.2.10, v3.2.11, v3.2.12, v3.2.13, v3.2.2, v3.2.3, v3.2.4, v3.2.5, v3.2.6, v3.2.7, v3.2.8, v3.2.9, v3.3.0, v3.3.0-BETA1, v3.3.0-RC1, v3.3.1, v3.3.2, v3.3.3, v3.3.4, v3.3.5, v3.3.6, v3.3.7, v3.3.8, v3.3.9] but these conflict with your requirements or minimum-stability.\r\n    - grasmash/yaml-cli 1.0.3 requires symfony/console ^2.8.11|^3.2 -> satisfiable by symfony/console[2.8.x-dev, 3.2.x-dev, 3.3.x-dev, 3.4.x-dev, v2.8.11, v2.8.12, v2.8.13, v2.8.14, v2.8.15, v2.8.16, v2.8.17, v2.8.18, v2.8.19, v2.8.20, v2.8.21, v2.8.22, v2.8.23, v2.8.24, v2.8.25, v2.8.26, v2.8.27, v3.2.0, v3.2.0-BETA1, v3.2.0-RC1, v3.2.0-RC2, v3.2.1, v3.2.10, v3.2.11, v3.2.12, v3.2.13, v3.2.2, v3.2.3, v3.2.4, v3.2.5, v3.2.6, v3.2.7, v3.2.8, v3.2.9, v3.3.0, v3.3.0-BETA1, v3.3.0-RC1, v3.3.1, v3.3.2, v3.3.3, v3.3.4, v3.3.5, v3.3.6, v3.3.7, v3.3.8, v3.3.9] but these conflict with your requirements or minimum-stability.\r\n    - Installation request for grasmash/yaml-cli (locked at 1.0.3, required as ^1.0) -> satisfiable by grasmash/yaml-cli[1.0.3].\r\n```\r\n\r\nThere are a few issues with this output:\r\n\r\n1. This output is redundant and overly verbose. The first three points are identical. \r\n1. The problem is generally but not specifically stated. The specific problem is that the user has executed a command to require symfony/console:~2.0.4, but that is not compatible with the existing grasmash/yaml-cli 1.0.3 requirement. This is not clearly stated.\r\n1. The last bullet point seems only tangentially related, like a bit of metadata tacked on at the end to help the user decipher the true meaning of the problem.\r\n\r\nI believe the better output would be:\r\n\r\n```\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1: \r\n    Summary: `symfony/console:~2.0.4` cannot be installed because it conflicts with the root requirement `grasmash/yaml-cli: ^1.0`. \r\n    Suggestion: Install a version of symfony/console that is compatible with grasmash/yaml-cli 1.0.3 or install a different version of grasmash/yaml-cli.\r\n    Related information:\r\n    - grasmash/yaml-cli 1.0.3 requires symfony/console ^2.8.11|^3.2 -> satisfiable by symfony/console[2.8.x-dev, 3.2.x-dev, 3.3.x-dev, 3.4.x-dev, v2.8.11, v2.8.12, v2.8.13, v2.8.14, v2.8.15, v2.8.16, v2.8.17, v2.8.18, v2.8.19, v2.8.20, v2.8.21, v2.8.22, v2.8.23, v2.8.24, v2.8.25, v2.8.26, v2.8.27, v3.2.0, v3.2.0-BETA1, v3.2.0-RC1, v3.2.0-RC2, v3.2.1, v3.2.10, v3.2.11, v3.2.12, v3.2.13, v3.2.2, v3.2.3, v3.2.4, v3.2.5, v3.2.6, v3.2.7, v3.2.8, v3.2.9, v3.3.0, v3.3.0-BETA1, v3.3.0-RC1, v3.3.1, v3.3.2, v3.3.3, v3.3.4, v3.3.5, v3.3.6, v3.3.7, v3.3.8, v3.3.9] but these conflict with your requirements or minimum-stability.\r\n```\r\n\r\nI will post more scenarios after I create easily reproducible steps for example output.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6691/reactions", "total_count": 10, "+1": 10, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/776977f597a848b2e89a8551da120f0b7fc86855", "message": "Fixing method name."}, {"url": "https://api.github.com/repos/composer/composer/commits/11db6f90c21bc0f2a92a101fc23f699ea6c84a04", "message": "Cleaning up comments"}, {"url": "https://api.github.com/repos/composer/composer/commits/2e9e7ddd99e578b3cc51884db7cb8f08991f73af", "message": "Updating docs."}, {"url": "https://api.github.com/repos/composer/composer/commits/3826e51caa99662dd67fd566188a0a8abe16b3e1", "message": "Renaming some methods and props."}, {"url": "https://api.github.com/repos/composer/composer/commits/2e4afaa941ca8348c2b2104e2f0fbe2bed8381bb", "message": "Not skipping root packages."}, {"url": "https://api.github.com/repos/composer/composer/commits/6db92eae9294438b77db31c334973eb9a2f9fe47", "message": "Trying to fix update behavior."}, {"url": "https://api.github.com/repos/composer/composer/commits/ad465aa769100a5638f70ec45f01f59faf74ad5f", "message": "Updating var names."}, {"url": "https://api.github.com/repos/composer/composer/commits/21722f6e424233a171198c7892601d5c9d9257af", "message": "Fixing test version constraints."}, {"url": "https://api.github.com/repos/composer/composer/commits/0e192ced6943a7a6e3de7c52ec0287d115d05784", "message": "Adding `update-with-all-dependencies` option."}, {"url": "https://api.github.com/repos/composer/composer/commits/f29e98cdf936679b20d1e6372ad0ae3be92fbbec", "message": "Fixes #6661: Allow a given package and its dependencies (including siblings) to be updated."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lorenzleutgeb": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6685", "title": "Experiment: External Dependency Solver", "body": "Hi!\r\n\r\nI just ran a quick experiment and would like to get your opinion.\r\n\r\nWe're seeing quite long dependency resolution times with Composer. As dependency resolution is hard, that's not something I want to complain about. But I wanted to see how Composer's solver compares to other SAT solvers. So what I did was [a quick hack](https://github.com/composer/composer/compare/master...lorenzleutgeb:extsat) so that Composer's solver writes the formula it is solving to a file in [DIMACS format](https://logic.pdmi.ras.ru/~basolver/dimacs.html).\r\n\r\nWith this I could get a feel for the size of Composer SAT formula:\r\n\r\n```bash\r\n$ head -n1 composer.cnf\r\np cnf 11253 390122\r\n$ ls -sh composer.cnf \r\n6.5M composer.cnf\r\n```\r\n\r\nIt took Composer around 278.56 seconds to find a satisfying assignment for that formula. Now I could try and compare it against some other solver. [Plingeling](http://fmv.jku.at/lingeling/) happily solves the formula within just 0.44 seconds. That's a factor of 633.\r\n\r\nI also tried unsatisfiable requirements, and sure enough, Plingeling reported unsatisfiability.\r\n\r\nSo it seems that there is quite some gap between the performance of Composer and Plingeling. This is what sparks my interest. Transforming a satisfying assignment back into Composer's preferred format should not be that big of a deal. What is tricky when working with an external solver is resolution of conflicts. It is not straight forward to export the state of an external solver, import it into Composer and then resolve conflicts based on that ... I'm not saying it's not possible, but I just don't know the nitty gritty details of how Composers solver does that internally.\r\n\r\nSo my proposal is as follows:\r\n * Only use an external solver when the size of the SAT formula (in terms of literals and clauses) exceeds some threshold. For easy formulas it's not worth the fuss.\r\n * Allow Composer to detect external SAT solvers (some binary from a whitelist in `$PATH`). If there is one, start it.\r\n * Now the external solver could either run in parallel with the Composer solver, or before the internal one. The problem is that the satisfiability of the requirements is unclear (my guess is that requirements are much more often satisfiable than unsatisfiable), so there should be some simple heuristic either running the solvers in parallel or opting for the external one first, falling back to internal in case of conflicts.\r\n   * Assume that the requirements are satisfiable. Then it would probably make sense to just run the external solver and read the solution.\r\n   * Assume that the requirements are not satisfiable. Then dependency resolution must be performend by the Composer solver, so starting an external one is pretty much useless.\r\n\r\nWhat's your opinion on this? Note that the mechanism I sketched here can be implemented completely optional and transparent to the user! Those that know the pain of slow resolution might opt to install a SAT solver (I imagine a friendly message pointing to a tutorial in case dependency resolution takes longer than two minutes), while others might not bother and just use Composers internal solver.\r\n\r\n**Edit:** Apart from complications with unsatisfiable requirements, I just realized that solver behaviour can be adjusted by changing [`Policy`](https://github.com/composer/composer/blob/master/src/Composer/DependencyResolver/PolicyInterface.php). As far as I see, only [`DefaultPolicy`](https://github.com/composer/composer/blob/master/doc/dev/DefaultPolicy.md) with parameters `$preferStable` and `$preferLowest` is used. In order to delegate dependency resolution to external SAT solvers, these preferences must be explicitly encoded into the SAT formula.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6685/reactions", "total_count": 8, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 3}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "miken32": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6676", "title": "Unable to install composer via IPv6", "body": "Downloading the installer takes a long time, and then the process dies trying to download the `versions` file. I don't think this is necessarily a problem with Composer itself, but didn't see any other place to report this problem with your website.\r\n\r\nTrying a manual download with `curl https://getcomposer.org/versions`, the IPv6 connection times out after 60 seconds and then switches to IPv4. The PHP code dies before timing out, so the installer never completes.\r\n\r\n```\r\nroot@test:~ \u2771\u2771\u2771 curl https://getcomposer.org/installer | php\r\nAll settings correct for using Composer\r\nDownloading...\r\nThe \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: Connection timed out\r\nRetrying...\r\nThe \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: Connection timed out\r\nRetrying...\r\nThe \"https://getcomposer.org/versions\" file could not be downloaded: failed to open stream: Connection timed out\r\nThe download failed repeatedly, aborting.\r\n```\r\n\r\nManual download shows a timeout on IPv6:\r\n```\r\nroot@test:~ \u2771\u2771\u2771 curl -v https://getcomposer.org/versions\r\n* About to connect() to getcomposer.org port 443 (#0)\r\n*   Trying 2001:41d0:a:7b19::2...\r\n* Connection timed out\r\n*   Trying 87.98.253.108...\r\n* Connected to getcomposer.org (87.98.253.108) port 443 (#0)\r\n* Initializing NSS with certpath: sql:/etc/pki/nssdb\r\n*   CAfile: /etc/pki/tls/certs/ca-bundle.crt\r\n  CApath: none\r\n* SSL connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n* Server certificate:\r\n* \tsubject: CN=getcomposer.org,O=Packagist Conductors UG (haftungsbeschr\u00e4nkt),L=Berlin,C=DE\r\n* \tstart date: Jul 12 00:00:00 2017 GMT\r\n* \texpire date: Aug 25 12:00:00 2020 GMT\r\n* \tcommon name: getcomposer.org\r\n* \tissuer: CN=DigiCert SHA2 Secure Server CA,O=DigiCert Inc,C=US\r\n> GET /versions HTTP/1.1\r\n> User-Agent: curl/7.29.0\r\n> Host: getcomposer.org\r\n> Accept: */*\r\n> \r\n< HTTP/1.1 200 OK\r\n< Server: nginx\r\n< Date: Mon, 11 Sep 2017 16:50:45 GMT\r\n< Content-Type: application/json\r\n< Content-Length: 317\r\n< Last-Modified: Mon, 11 Sep 2017 16:50:09 GMT\r\n< Connection: keep-alive\r\n< ETag: \"59b6bec1-13d\"\r\n< Accept-Ranges: bytes\r\n< \r\n{\r\n    \"stable\": [{\"path\": \"/download/1.5.2/composer.phar\", \"version\": \"1.5.2\", \"min-php\": 50300}],\r\n    \"preview\": [{\"path\": \"/download/1.5.2/composer.phar\", \"version\": \"1.5.2\", \"min-php\": 50300}],\r\n    \"snapshot\": [{\"path\": \"/composer.phar\", \"version\": \"6c1da86437542a23d2af7434edc33969456a76a6\", \"min-php\": 50300}]\r\n}\r\n* Connection #0 to host getcomposer.org left intact\r\n```\r\n\r\nBut, IPv6 is confirmed working fine from my machine:\r\n```\r\n(root@test:~ \u2771\u2771\u2771 curl -v https://www.google.com\r\n* About to connect() to www.google.com port 443 (#0)\r\n*   Trying 2607:f8b0:400b:80c::2004...\r\n* Connected to www.google.com (2607:f8b0:400b:80c::2004) port 443 (#0)\r\n* Initializing NSS with certpath: sql:/etc/pki/nssdb\r\n*   CAfile: /etc/pki/tls/certs/ca-bundle.crt\r\n  CApath: none\r\n* SSL connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\r\n* Server certificate:\r\n* \tsubject: CN=www.google.com,O=Google Inc,L=Mountain View,ST=California,C=US\r\n* \tstart date: Sep 01 09:52:44 2017 GMT\r\n* \texpire date: Nov 24 09:40:00 2017 GMT\r\n* \tcommon name: www.google.com\r\n* \tissuer: CN=Google Internet Authority G2,O=Google Inc,C=US\r\n> GET / HTTP/1.1\r\n> User-Agent: curl/7.29.0\r\n> Host: www.google.com\r\n> Accept: */*\r\n> \r\n< HTTP/1.1 302 Found\r\n< Cache-Control: private\r\n< Content-Type: text/html; charset=UTF-8\r\n< Referrer-Policy: no-referrer\r\n< Location: https://www.google.ca/?gfe_rd=cr&dcr=0&ei=9L62WcGmG-qfXsOPgYgF\r\n< Content-Length: 267\r\n< Date: Mon, 11 Sep 2017 16:51:00 GMT\r\n< Alt-Svc: quic=\":443\"; ma=2592000; v=\"39,38,37,35\"\r\n< \r\n<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\r\n<TITLE>302 Moved</TITLE></HEAD><BODY>\r\n<H1>302 Moved</H1>\r\nThe document has moved\r\n<A HREF=\"https://www.google.ca/?gfe_rd=cr&amp;dcr=0&amp;ei=9L62WcGmG-qfXsOPgYgF\">here</A>.\r\n</BODY></HTML>\r\n* Connection #0 to host www.google.com left intact\r\n)\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RhanCandia": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6664", "title": "Can't use composer (network / ISP issue?)", "body": "I can't use composer on my computer for some reason. Can't install dependencies. No error whatsoever on the terminal. Nothing happens.\r\n\r\nIs it a network / ISP issue?\r\n\r\n```\r\n$ ping -c 3 87.98.253.108\r\nPING 87.98.253.108 (87.98.253.108) 56(84) bytes of data.\r\n64 bytes from 87.98.253.108: icmp_seq=1 ttl=63 time=268 ms\r\n64 bytes from 87.98.253.108: icmp_seq=2 ttl=63 time=279 ms\r\n64 bytes from 87.98.253.108: icmp_seq=3 ttl=63 time=272 ms\r\n\r\n--- 87.98.253.108 ping statistics ---\r\n3 packets transmitted, 3 received, 0% packet loss, time 2002ms\r\nrtt min/avg/max/mdev = 268.488/273.522/279.622/4.607 ms\r\n\r\n$ ping -c 3 getcomposer.org\r\nPING getcomposer.org (87.98.253.108) 56(84) bytes of data.\r\n64 bytes from eu.getcomposer.org (87.98.253.108): icmp_seq=1 ttl=63 time=278 ms\r\n64 bytes from eu.getcomposer.org (87.98.253.108): icmp_seq=2 ttl=63 time=281 ms\r\n64 bytes from eu.getcomposer.org (87.98.253.108): icmp_seq=3 ttl=63 time=280 ms\r\n\r\n--- getcomposer.org ping statistics ---\r\n3 packets transmitted, 3 received, 0% packet loss, time 2002ms\r\nrtt min/avg/max/mdev = 278.539/280.023/281.082/1.164 ms\r\n\r\n$ curl -sS https://www.google.com\r\n<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\r\n<TITLE>302 Moved</TITLE></HEAD><BODY>\r\n<H1>302 Moved</H1>\r\nThe document has moved\r\n<A HREF=\"https://www.google.com.ph/?gfe_rd=cr&amp;dcr=0&amp;ei=qlixWceuJ9LU8Aew4o-QCQ\">here</A>.\r\n</BODY></HTML>\r\n\r\n$ traceroute getcomposer.org\r\ntraceroute to getcomposer.org (87.98.253.108), 30 hops max, 60 byte packets\r\n 1  10.0.2.2 (10.0.2.2)  0.115 ms  0.064 ms  0.045 ms\r\n 2  192.168.0.1 (192.168.0.1)  2.013 ms  2.651 ms  4.455 ms\r\n 3  * * *\r\n 4  114.108.194.61 (114.108.194.61)  26.062 ms  27.126 ms  27.137 ms\r\n 5  114.108.192.201 (114.108.192.201)  27.120 ms  27.080 ms  27.061 ms\r\n 6  130.105.0.20 (130.105.0.20)  27.039 ms 130.105.0.80 (130.105.0.80)  44.047 ms 130.105.0.40 (130.105.0.40)  43.927 ms\r\n 7  130.105.0.11 (130.105.0.11)  17.106 ms  18.631 ms  24.620 ms\r\n 8  114.108.193.161 (114.108.193.161)  24.665 ms  24.551 ms  29.966 ms\r\n 9  130.105.0.48 (130.105.0.48)  29.931 ms  28.565 ms  29.892 ms\r\n10  * * *\r\n11  * * *\r\n12  chi-1-a9.il.us (198.27.73.66)  259.774 ms  261.044 ms  259.969 ms\r\n13  be100-1000.nwk-5-a9.nj.us (198.27.73.206)  274.367 ms  278.257 ms  280.565 ms\r\n14  be100-1319.nwk-1-a9.nj.us (198.27.73.205)  285.672 ms  261.515 ms  260.143 ms\r\n15  be100-1295.ldn-1-a9.uk.eu (192.99.146.126)  276.617 ms  294.374 ms  293.652 ms\r\n16  be10-151.rbx-g1-a9.fr.eu (91.121.215.178)  295.615 ms * *\r\n17  * * *\r\n18  be50-5.gra-3a-a9.fr.eu (37.187.231.86)  275.530 ms  269.937 ms be50-5.gra-3b-a9.fr.eu (37.187.231.90)  278.197 ms\r\n19  eu.getcomposer.org (87.98.253.108)  286.389 ms  370.599 ms  362.836 ms\r\n\r\n$ mtr -rwc 100 -i 0.1 packagist.org\r\nStart: Thu Sep  7 14:30:57 2017\r\nHOST: ubuntu-xenial                      Loss%   Snt   Last   Avg  Best  Wrst StDev\r\n  1.|-- 10.0.2.2                            0.0%   100    0.2   0.2   0.1   0.3   0.0\r\n  2.|-- 192.168.0.1                         0.0%   100    9.3   3.6   1.0  42.9   5.8\r\n  3.|-- ???                                100.0   100    0.0   0.0   0.0   0.0   0.0\r\n  4.|-- 114.108.194.61                      0.0%   100   15.8  27.4  11.1  86.1  13.5\r\n  5.|-- 114.108.192.201                     0.0%   100   21.0  25.8  10.3  81.0  12.3\r\n  6.|-- 130.105.0.26                        0.0%   100   23.6  23.7  11.4  75.3  11.3\r\n  7.|-- 130.105.0.11                        0.0%   100   18.0  21.9  12.3  70.1  10.1\r\n  8.|-- 114.108.193.162                     0.0%   100   14.2  19.7  10.8  63.6   9.1\r\n  9.|-- 114.108.193.161                     0.0%   100   16.3  19.7  11.5  58.6   8.3\r\n 10.|-- 130.105.0.48                        0.0%   100   15.5  18.2  11.5  52.9   6.7\r\n 11.|-- ???                                100.0   100    0.0   0.0   0.0   0.0   0.0\r\n 12.|-- ae-1-3507.ear4.Chicago2.Level3.net 94.0%   100  247.5 241.4 238.5 247.5   3.3\r\n 13.|-- chi-1-a9.il.us                      0.0%   100  231.4 235.1 228.6 273.5   6.7\r\n 14.|-- be100-1000.nwk-5-a9.nj.us           0.0%   100  249.1 267.6 246.2 528.3  42.3\r\n 15.|-- be100-1319.nwk-1-a9.nj.us           0.0%   100  254.9 260.0 252.9 294.1   7.2\r\n 16.|-- be100-1295.ldn-1-a9.uk.eu           8.0%   100  269.4 271.4 263.8 326.9   9.1\r\n 17.|-- be10-151.rbx-g1-a9.fr.eu           15.3%    98  271.2 276.4 266.7 367.4  16.4\r\n 18.|-- ???                                100.0    97    0.0   0.0   0.0   0.0   0.0\r\n 19.|-- be50-5.gra-3b-a9.fr.eu             14.4%    97  277.3 276.6 266.1 329.2  12.5\r\n 20.|-- eu.packagist.org                   12.4%    97  273.0 275.4 265.6 324.0  11.4\r\n```\r\n\r\nP.S.: This is from inside a xenial64 vagrant box on a Mac host.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Fleshgrinder": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6650", "title": "Argument to Disable Cache", "body": "I would like to revive #1896, because there is one important use-case that was not mentioned there: building of Docker images. The cache is just bloating the size of the images, and not required at all in production. Currently one has to clean the cache manually, it would be much better to simply have a `--no-cache` argument, and be done with it.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fpoirotte": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6647", "title": "Improve feedback for providers", "body": "(follow up from the discussion in #6525)\r\n\r\nCurrently, trying to install a virtual package returns the following error message:\r\n```\r\n$ composer.phar require psr/log-implementation\r\n\r\n                                                                                                                                                          \r\n  [InvalidArgumentException]                                                                                                                              \r\n  Could not find package psr/log-implementation at any version for your minimum-stability (stable). Check the package spelling or your minimum-stability  \r\n                                                                                                                                                          \r\n\r\nrequire [--dev] [--prefer-source] [--prefer-dist] [--no-progress] [--no-suggest] [--no-update] [--no-scripts] [--update-no-dev] [--update-with-dependencies] [--ignore-platform-reqs] [--prefer-stable] [--prefer-lowest] [--sort-packages] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--] [<packages>]...\r\n```\r\n\r\nThis error message is not very helpful because the minimum-stability & spelling are not actually part of the issue. The actual problem stems from the fact that rather than trying to install the virtual package, you should install one of the providers for that virtual package.\r\n\r\nHowever, there is no easy way at the moment to list possible candidates.\r\nMaybe the error message above could be replaced with something like this:\r\n```\r\n$ composer.phar require psr/log-implementation\r\nYour requirements could not be resolved to an installable set of packages.\r\n  Problem 1\r\n    - The requested package psr/log-implementation refers to a virtual package. A concrete implementation must be installed instead. Possible candidates: monolog/monolog, zendframework/zend-log, etc.\r\n\r\nInstallation failed, reverting ./composer.json to its original content.\r\n```\r\n\r\nTo further improve readability, the candidates could instead be listed vertically:\r\n```\r\n$ composer.phar require psr/log-implementation\r\nYour requirements could not be resolved to an installable set of packages.\r\n  Problem 1\r\n    - The requested package psr/log-implementation refers to a virtual package. A concrete implementation must be installed instead.\r\nPossible candidates:\r\n* monolog/monolog\r\n* zendframework/zend-log\r\n* etc.\r\n\r\nInstallation failed, reverting ./composer.json to its original content.\r\n```\r\n\r\nYet another alternative would be having a dedicated command that displays information about providers and then having the error message refer to that command. Something along the lines of:\r\n```\r\n$ composer.phar require psr/log-implementation\r\nYour requirements could not be resolved to an installable set of packages.\r\n  Problem 1\r\n    - The requested package psr/log-implementation refers to a virtual package. A concrete implementation must be installed instead. You can look for compatible implementations using composer.phar info --all psr/log-implementation\r\n\r\nInstallation failed, reverting ./composer.json to its original content.\r\n```\r\n\r\n(where composer.phar info would be repurposed to display information on providers when asked about a virtual package)", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NesooseN": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6638", "title": "Rejected by your constraint", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"magento/updater\",\r\n    \"description\": \"Magento Updater\",\r\n    \"type\": \"project\",\r\n    \"version\": \"10.0.4\",\r\n    \"license\": [\r\n        \"OSL-3.0\",\r\n        \"AFL-3.0\"\r\n    ],\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://repo.magento.com/\"\r\n        }\r\n    ],\r\n    \"require\": {\r\n        \"php\": \"~5.5.0|~5.6.0|~7.0.0\",\r\n        \"composer/composer\": \"1.0.0-beta1\",\r\n        \"magento/composer\": \"~1.0.0\",\r\n        \"symfony/console\": \"~2.3 <2.7\",\r\n        \"monolog/monolog\": \"1.16.0\",\r\n        \"psr/log\": \"~1.0\",\r\n        \"minimum-stability\": \"dev\"\r\n    },\r\n    \"require-dev\": {\r\n        \"phpunit/phpunit\": \"4.1.0\"\r\n    },\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"Magento\\\\\": \"app/code/Magento/\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\n\r\nChecking composer.json: FAIL\r\nThe version field is present, it is recommended to leave it out if the package is published on Packagist.\r\nDefining autoload.psr-0 with an empty namespace prefix is a bad idea for performance\r\nrequire.magento/product-community-edition : exact version constraints (2.0.17) should be avoided if the package follows semantic versioning\r\nrequire.composer/composer : unbound version constraints (@alpha) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: Warning: Accessing packagist.org over http which is an insecure protocol.\r\nOK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: FAIL\r\nMissing pubkey for tags verification\r\nMissing pubkey for dev verification\r\nRun composer self-update --update-keys to set them up\r\nChecking composer version: FAIL\r\nYou are not running the latest stable version, run `composer self-update` to update (1.1.1 => 1.5.1)\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - The requested package magento/product-community-edition 2.0.18 exists as magento/product-community-edition[2.1.6, 0.42.0-beta7, 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.1.0-rc1, 2.1.0-rc2, 2.1.0-rc3, 2.1.0, 2.0.8, 2.0.9, 2.1.1, 2.0.10, 2.1.2, 2.1.3, 2.0.11, 2.1.4, 2.0.12, 2.1.5, 2.0.13, 2.1.7, 2.0.14, 2.0.15, 2.1.8, 2.2.0-rc20, 2.2.0-rc21, 2.2.0-rc22] but these are rejected by your constraint.\r\n\r\n```\r\n\r\nAnd I expected this to happen: to start update from 2.1.16 to 2.1.8\r\n\r\nWhat is problem ?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "johnbillion": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6635", "title": "The abandoned property is not documented on getcomposer.org", "body": "The `abandoned` property is not documented anywhere on the getcomposer.org documentation.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "strarsis": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6624", "title": "No valid composer.json was found in any branch or tag of [...]", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"test/test\",\r\n  \"type\": \"project\",\r\n  \"config\": {\r\n    \"preferred-install\": \"dist\"\r\n  },\r\n  \"repositories\": [\r\n    {\r\n      \"type\": \"composer\",\r\n      \"url\": \"https://wpackagist.org\"\r\n    },{\r\n      \"url\": \"https://github.com/strarsis/blade-svg-sage\",\r\n      \"type\": \"vcs\"\r\n    }\r\n  ],\r\n  \"require\": {\r\n    \"php\": \">=5.6\",\r\n    \"composer/installers\": \"~1.0.12\",\r\n    \"log1x/blade-svg-sage\": \"dev-fix-path\"\r\n  },\r\n  \"extra\": {\r\n    \"installer-paths\": {\r\n      \"web/app/mu-plugins/{$name}/\": [\"type:wordpress-muplugin\"],\r\n      \"web/app/plugins/{$name}/\": [\"type:wordpress-plugin\"],\r\n      \"web/app/themes/{$name}/\": [\"type:wordpress-theme\"]\r\n    },\r\n    \"wordpress-install-dir\": \"web/wp\"\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\ncomposer diagnose\r\nChecking composer.json: OK\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n# or\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n[Composer\\Repository\\InvalidRepositoryException]\r\nNo valid composer.json was found in any branch or tag of https://github.com/strarsis/blade-svg-sage, could not load a package from it.\r\n```\r\n\r\nAnd I expected this to happen:\r\nThat blade-svg-sage fork from github.com/strarsis/blade-svg-sage is found and installed correctly.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sadortun": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6621", "title": "GitHub rate limit exceed when token provided", "body": "When a Github token is provided, and valid, BUT the rate limit is exceed. Composer ask to create a new token, which is very miscleading.\r\n\r\nHow to reproduce:\r\n1.  Perform 5000 API requests to Github within one hour\r\n2. Verify that https://api.github.com/rate_limit?access_token=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   `    \"remaining\": 0,`\r\n3.  Run `composer update`\r\n\r\nMy `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"symfony/symfony\",\r\n    \"type\": \"library\",\r\n    \"description\": \"The Symfony PHP framework\",\r\n    \"keywords\": [\"framework\"],\r\n    \"homepage\": \"https://symfony.com\",\r\n    \"license\": \"MIT\",\r\n    \"authors\": [\r\n        {\r\n            \"name\": \"Fabien Potencier\",\r\n            \"email\": \"fabien@symfony.com\"\r\n        },\r\n        {\r\n            \"name\": \"Symfony Community\",\r\n            \"homepage\": \"https://symfony.com/contributors\"\r\n        }\r\n    ],\r\n    \"require\": {\r\n        \"php\": \"^7.1.3\",\r\n        \"ext-xml\": \"*\",\r\n        \"doctrine/common\": \"~2.4\",\r\n        \"fig/link-util\": \"^1.0\",\r\n        \"twig/twig\": \"~1.34|~2.4\",\r\n        \"psr/cache\": \"~1.0\",\r\n        \"psr/container\": \"^1.0\",\r\n        \"psr/link\": \"^1.0\",\r\n        \"psr/log\": \"~1.0\",\r\n        \"psr/simple-cache\": \"^1.0\",\r\n        \"symfony/polyfill-intl-icu\": \"~1.0\",\r\n        \"symfony/polyfill-mbstring\": \"~1.0\"\r\n    },\r\n    \"replace\": {\r\n        \"symfony/asset\": \"self.version\",\r\n        \"symfony/browser-kit\": \"self.version\",\r\n        \"symfony/cache\": \"self.version\",\r\n        \"symfony/config\": \"self.version\",\r\n        \"symfony/console\": \"self.version\",\r\n        \"symfony/css-selector\": \"self.version\",\r\n        \"symfony/dependency-injection\": \"self.version\",\r\n        \"symfony/debug\": \"self.version\",\r\n        \"symfony/debug-bundle\": \"self.version\",\r\n        \"symfony/doctrine-bridge\": \"self.version\",\r\n        \"symfony/dom-crawler\": \"self.version\",\r\n        \"symfony/dotenv\": \"self.version\",\r\n        \"symfony/event-dispatcher\": \"self.version\",\r\n        \"symfony/expression-language\": \"self.version\",\r\n        \"symfony/filesystem\": \"self.version\",\r\n        \"symfony/finder\": \"self.version\",\r\n        \"symfony/form\": \"self.version\",\r\n        \"symfony/framework-bundle\": \"self.version\",\r\n        \"symfony/http-foundation\": \"self.version\",\r\n        \"symfony/http-kernel\": \"self.version\",\r\n        \"symfony/inflector\": \"self.version\",\r\n        \"symfony/intl\": \"self.version\",\r\n        \"symfony/ldap\": \"self.version\",\r\n        \"symfony/lock\": \"self.version\",\r\n        \"symfony/monolog-bridge\": \"self.version\",\r\n        \"symfony/options-resolver\": \"self.version\",\r\n        \"symfony/process\": \"self.version\",\r\n        \"symfony/property-access\": \"self.version\",\r\n        \"symfony/property-info\": \"self.version\",\r\n        \"symfony/proxy-manager-bridge\": \"self.version\",\r\n        \"symfony/routing\": \"self.version\",\r\n        \"symfony/security\": \"self.version\",\r\n        \"symfony/security-core\": \"self.version\",\r\n        \"symfony/security-csrf\": \"self.version\",\r\n        \"symfony/security-guard\": \"self.version\",\r\n        \"symfony/security-http\": \"self.version\",\r\n        \"symfony/security-bundle\": \"self.version\",\r\n        \"symfony/serializer\": \"self.version\",\r\n        \"symfony/stopwatch\": \"self.version\",\r\n        \"symfony/templating\": \"self.version\",\r\n        \"symfony/translation\": \"self.version\",\r\n        \"symfony/twig-bridge\": \"self.version\",\r\n        \"symfony/twig-bundle\": \"self.version\",\r\n        \"symfony/validator\": \"self.version\",\r\n        \"symfony/var-dumper\": \"self.version\",\r\n        \"symfony/web-link\": \"self.version\",\r\n        \"symfony/web-profiler-bundle\": \"self.version\",\r\n        \"symfony/web-server-bundle\": \"self.version\",\r\n        \"symfony/workflow\": \"self.version\",\r\n        \"symfony/yaml\": \"self.version\"\r\n    },\r\n    \"require-dev\": {\r\n        \"cache/integration-tests\": \"dev-master\",\r\n        \"doctrine/cache\": \"~1.6\",\r\n        \"doctrine/data-fixtures\": \"1.0.*\",\r\n        \"doctrine/dbal\": \"~2.4\",\r\n        \"doctrine/orm\": \"~2.4,>=2.4.5\",\r\n        \"doctrine/doctrine-bundle\": \"~1.4\",\r\n        \"monolog/monolog\": \"~1.11\",\r\n        \"ocramius/proxy-manager\": \"~0.4|~1.0|~2.0\",\r\n        \"predis/predis\": \"~1.0\",\r\n        \"egulias/email-validator\": \"~1.2,>=1.2.8|~2.0\",\r\n        \"symfony/phpunit-bridge\": \"~3.2\",\r\n        \"symfony/polyfill-apcu\": \"~1.1\",\r\n        \"symfony/security-acl\": \"~2.8|~3.0\",\r\n        \"phpdocumentor/reflection-docblock\": \"^3.0|^4.0\"\r\n    },\r\n    \"conflict\": {\r\n        \"phpdocumentor/reflection-docblock\": \"<3.0||>=3.2.0,<3.2.2\",\r\n        \"phpdocumentor/type-resolver\": \"<0.2.0\",\r\n        \"phpunit/phpunit\": \"<4.8.35|<5.4.3,>=5.0\"\r\n    },\r\n    \"provide\": {\r\n        \"psr/cache-implementation\": \"1.0\",\r\n        \"psr/container-implementation\": \"1.0\",\r\n        \"psr/simple-cache-implementation\": \"1.0\"\r\n    },\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"Symfony\\\\Bridge\\\\Doctrine\\\\\": \"src/Symfony/Bridge/Doctrine/\",\r\n            \"Symfony\\\\Bridge\\\\Monolog\\\\\": \"src/Symfony/Bridge/Monolog/\",\r\n            \"Symfony\\\\Bridge\\\\ProxyManager\\\\\": \"src/Symfony/Bridge/ProxyManager/\",\r\n            \"Symfony\\\\Bridge\\\\Twig\\\\\": \"src/Symfony/Bridge/Twig/\",\r\n            \"Symfony\\\\Bundle\\\\\": \"src/Symfony/Bundle/\",\r\n            \"Symfony\\\\Component\\\\\": \"src/Symfony/Component/\"\r\n        },\r\n        \"classmap\": [\r\n            \"src/Symfony/Component/Intl/Resources/stubs\"\r\n        ],\r\n        \"exclude-from-classmap\": [\r\n            \"**/Tests/\"\r\n        ]\r\n    },\r\n    \"autoload-dev\": {\r\n        \"files\": [ \"src/Symfony/Component/VarDumper/Resources/functions/dump.php\" ]\r\n    },\r\n    \"minimum-stability\": \"dev\",\r\n    \"extra\": {\r\n        \"branch-alias\": {\r\n            \"dev-master\": \"4.0-dev\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nbash-4.2$ composer diag\r\nChecking composer.json: WARNING\r\nDefining autoload.psr-4 with an empty namespace prefix is a bad idea for performance\r\nemantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: FAIL\r\n[Composer\\Downloader\\TransportException] The \"https://api.github.com/\" file could not be downloaded (HTTP/1.1 403 Forbidden)\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nDownloading https://api.github.com/repos/jquery/jquery-dist\r\n\r\nCould not fetch https://api.github.com/repos/jquery/jquery-dist, please create a GitHub OAuth token to go over the API rate limit\r\nHead to https://github.com/settings/tokens/new?scopes=repo&description=Composer+on+ns509029.ip-192-95-32.net+2017-08-21+2151\r\nto retrieve a token. It will be stored in \"/var/www/vhosts/newera.systems/.composer/auth.json\" for future use by Composer.\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nWhen veryfing the RATE limit manually, \r\nGET https://api.github.com/rate_limit?access_token=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n```\r\n{\r\n \"rate\": {\r\n    \"limit\": 5000,\r\n    \"remaining\": 0,\r\n    \"reset\": 1503354368\r\n  }\r\n```\r\n\r\n\r\nThe following output would be expected : \r\n```\r\nDownloading https://api.github.com/repos/jquery/jquery-dist\r\n\r\nCould not fetch https://api.github.com/repos/jquery/jquery-dist,  The current  GitHub OAuth token exceed the. API rate limit. Please wait until 2017-04-21  18:33:21  and retry the request.\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rosasurfer": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6606", "title": "Why is a package cloned/downloaded again when the exact version is already cached?", "body": "I updated a dependency in one project. Composer cloned from source as configured. So far so good. Then I switched to the next project and wanted to update the same dependency. A networking issue to Github kicked in (slow mobile connection on my side) and revealed some interesting infos.\r\n\r\nThe source package of the dependency was already cached locally (with the exact same version hash, from the update before). Why doesn't Composer use this cached package in the first place? Why does it start to clone again? Wouldn't checking the hash and cloning from the local copy be enough? Especially because it says so \"Cloning 2d0c7248b1 from cache\". But no, Composer didn't clone from cache. It tried to clone from origin and run into the network timeout.\r\n\r\nMy `composer.json`:\r\n```json\r\n    ...\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"vcs\", \r\n            \"url\":  \"https://github.com/rosasurfer/ministruts\" \r\n        }\r\n    ],       \r\n    \"require\": {\r\n        \"php\":                   \">=5.6\",\r\n        \"rosasurfer/ministruts\": \"dev-master\"\r\n    },\r\n    ...\r\n```\r\n\r\nWhen I run this command:\r\n```\r\n$ composer update ...\r\n```\r\n\r\nI get the following output:\r\n```\r\nemmzett@portege Cygwin /f/Projekte/myproject/web1 (master)\r\n$ composer update rosasurfer/ministruts\r\nLoading composer repositories with package information                    \r\nUpdating dependencies (including require-dev)                                  \r\nPackage operations: 1 install, 0 updates, 0 removals\r\n  - Installing rosasurfer/ministruts (dev-master 2d0c724): Cloning 2d0c7248b1 from cache\r\nWriting lock file\r\nGenerating optimized autoload files\r\n\r\nemmzett@portege Cygwin /f/Projekte/myproject/web1 (master)\r\n$ cd /f/Projekte/myproject/web2\r\n\r\nemmzett@portege Cygwin /f/Projekte/myproject/web2 (CHAR-7_day_week)\r\n$ composer update rosasurfer/ministruts\r\nLoading composer repositories with package information                                   \r\nUpdating dependencies (including require-dev)                                  \r\nPackage operations: 1 install, 0 updates, 0 removals\r\n  - Installing rosasurfer/ministruts (dev-master 2d0c724): Cloning 2d0c7248b1 from cache\r\n    Failed to download rosasurfer/ministruts from source: Failed to clone https://github.com/rosasurfer/ministruts.git via https, ssh protocols, aborting.\r\n\r\n- https://github.com/rosasurfer/ministruts.git\r\n  Cloning into 'F:\\Projekte\\myproject\\web2\\vendor\\rosasurfer\\ministruts'...\r\n  fatal: unable to access 'https://github.com/rosasurfer/ministruts.git/': Unknown SSL protocol error in connection to github.com:443\r\n\r\n- git@github.com:rosasurfer/ministruts.git\r\n  Cloning into 'F:\\Projekte\\myproject\\web2\\vendor\\rosasurfer\\ministruts'...\r\n  Connection to 192.30.253.112 timed out\r\n  fatal: Could not read from remote repository.\r\n\r\n  Please make sure you have the correct access rights\r\n  and the repository exists.\r\n\r\n    Now trying to download from dist\r\n  - Installing rosasurfer/ministruts (dev-master 2d0c724): Downloading (failed)\r\nDownloading (100%)\r\nWriting lock file\r\nGenerating optimized autoload files\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6606/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Koc": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6602", "title": "sudo composer self-update changes owner to root for current user composer cache dir", "body": "When I run this command:\r\n\r\n```\r\n# install composer as global\r\nsudo mv composer.phar /usr/bin/local/composer\r\n# wait for new composer version, then update\r\nsudo composer self-update\r\nls -l ~/.composer/\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\ntotal 1820\r\ndrwxr-xr-x  3 root root    4096 Aug 11 13:26 ./\r\ndrwxr-xr-x 16 dev  dev     4096 Aug 11 13:26 ../\r\n-rw-r--r--  1 root root 1838958 Aug 11 13:26 2017-05-17_08-17-52-1.4.2-old.phar\r\ndrwxr-xr-x  4 root root    4096 Aug 11 13:26 cache/\r\n-rw-r--r--  1 root root      13 Aug 11 13:26 .htaccess\r\n-rw-r--r--  1 root root     799 Aug 11 13:26 keys.dev.pub\r\n-rw-r--r--  1 root root     799 Aug 11 13:26 keys.tags.pub\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\ndrwxr-xr-x  3 dev dev    4096 Aug 11 13:26 ./\r\ndrwxr-xr-x 16 dev dev    4096 Aug 11 13:26 ../\r\n-rw-r--r--  1 dev dev 1838958 Aug 11 13:26 2017-05-17_08-17-52-1.4.2-old.phar\r\ndrwxr-xr-x  4 dev dev    4096 Aug 11 13:26 cache/\r\n-rw-r--r--  1 dev dev      13 Aug 11 13:26 .htaccess\r\n-rw-r--r--  1 dev dev     799 Aug 11 13:26 keys.dev.pub\r\n-rw-r--r--  1 dev dev     799 Aug 11 13:26 keys.tags.pub\r\n```\r\n\r\n`sudo chown dev:dev -R ~/.composer` fixes the problem but I need call it after each `sudo composer self-update`\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "m-alam": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6600", "title": "Why this message", "body": "\r\n - Installing nesbot/carbon (1.22.1): Loading from cache\r\n  - Installing mtdowling/cron-expression (v1.2.0): Loading from cache\r\n  - Installing monolog/monolog (1.23.0): Loading from cache\r\n  - Installing league/flysystem (1.0.41): Loading from cache\r\n  - Installing erusev/parsedown (1.6.3): Loading from cache\r\n  - Installing laravel/framework (v5.4.32): Downloading (100%)\r\n\r\n  [ErrorException]\r\n  copy(C:/Users/mahabub/AppData/Local/Composer/files/laravel/framework/a930c8846cb61d1c653c469994844b70666604b7.zip):\r\n   failed to open stream: Invalid argument\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jagDanJu": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6587", "title": "Powershell - No Color Output", "body": "When I execute a composer command in the Powershell, I do not get any colored output...\r\n\r\nCan anyone help me, please?\r\n\r\nThank You!", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stefgosselin": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6571", "title": "Composer install generates composer.json with slashes escaped.", "body": "I am not certain if this is expected behavior,  `composer.json` is modified ( escaped json) after running composer install.\r\n\r\n\r\n\r\nMy initial `composer.json`:\r\n\r\n\r\n\r\n```json\r\n{\r\n    \"name\": \"digitalstate/platform-application\",\r\n    \"description\": \"DigitalState Platform Application\",\r\n    \"homepage\": \"https://github.com/DigitalState/Platform-Application.git\",\r\n    \"keywords\": [\"DigitalState\"],\r\n    \"license\": \"MIT\",\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"\": \"src/\"\r\n        }\r\n    },\r\n    \"repositories\": {\r\n        \"composer\": {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://packagist.orocrm.com\"\r\n        },\r\n        \"dsplatform\": {\r\n            \"type\": \"vcs\",\r\n            \"url\": \"git@bitbucket.org:villemontreal/dsplatform.git\"\r\n        }\r\n    },\r\n    \"require\": {\r\n        \"oro/platform\": \"2.0.5\",\r\n        \"oro/platform-serialised-fields\": \"2.0.2\",\r\n        \"knplabs/knp-time-bundle\": \"dev-master#272b9d6c127db1a648d2729bc821f0ed19a274d4\",\r\n        \"craue/formflow-bundle\": \"dev-master#47b2b7af9b4385f97470ecb858f3a9c03e431587\",\r\n        \"digitalstate/bpm-camunda-sdk\": \"dev-master\",\r\n        \"lexik/jwt-authentication-bundle\": \"^2.2\",\r\n        \"mandrill/mandrill\": \"^1.0\",\r\n        \"aws/aws-sdk-php\": \"^3.28\",\r\n        \"dunglas/doctrine-json-odm\": \" dev-master\",\r\n        \"ramsey/uuid\": \"^3.6\"\r\n    },\r\n    \"require-dev\": {\r\n        \"sensio/generator-bundle\": \"3.1.2\",\r\n        \"behat/behat\": \"3.2.2\",\r\n        \"behat/mink-extension\": \"2.2.*\",\r\n        \"behat/mink-selenium2-driver\": \"1.*\",\r\n        \"behat/symfony2-extension\": \"2.1.1\",\r\n        \"nelmio/alice\": \"2.2.*\",\r\n        \"phpunit/phpunit\": \"5.7.*\",\r\n        \"phpunit/phpunit-selenium\": \"3.0.*\",\r\n        \"johnkary/phpunit-speedtrap\": \"1.0.*\",\r\n        \"mybuilder/phpunit-accelerator\": \"1.2.*\",\r\n        \"squizlabs/php_codesniffer\": \"2.7.*\",\r\n        \"phpmd/phpmd\": \"2.5.*\",\r\n        \"sebastian/phpcpd\": \"2.0.*\",\r\n        \"leaphub/phpcs-symfony2-standard\": \"~2.0.0\",\r\n        \"league/factory-muffin\": \"^3.0\",\r\n        \"league/factory-muffin-faker\": \"^2.0\",\r\n        \"codeception/codeception\": \"^2.2\",\r\n        \"phploc/phploc\": \"^3.0\"\r\n    },\r\n    \"config\": {\r\n        \"component-dir\": \"web/bundles/components\",\r\n        \"bin-dir\": \"bin\"\r\n    },\r\n    \"scripts\": {\r\n        \"post-install-cmd\": [\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::checkComposerPlugin\",\r\n            \"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::buildBootstrap\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installRequirementsFile\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::setPermissions\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::installAssets\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::setAssetsVersion\"\r\n        ],\r\n        \"post-update-cmd\": [\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::checkComposerPlugin\",\r\n            \"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::buildBootstrap\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installRequirementsFile\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::setPermissions\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::installAssets\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::setAssetsVersion\"\r\n        ]\r\n    },\r\n    \"minimum-stability\": \"dev\",\r\n    \"prefer-stable\": true,\r\n    \"extra\": {\r\n        \"symfony-app-dir\": \"app\",\r\n        \"symfony-web-dir\": \"web\",\r\n        \"incenteev-parameters\": {\r\n            \"env-map\": {\r\n                \"server\": \"SERVER\",\r\n                \"database_host\": \"APP_DB_HOST\",\r\n                \"database_user\": \"APP_DB_USER\",\r\n                \"database_password\": \"APP_DB_PASSWORD\",\r\n                \"database_name\": \"APP_DB_NAME\"\r\n            },\r\n            \"file\": \"app/config/parameters.yml\"\r\n        },\r\n        \"asset-installer-paths\": {\r\n            \"npm-asset-library\": \"web/bundles/npmassets\",\r\n            \"bower-asset-library\": \"web/bundles/bowerassets\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer.json ` after running composer install:\r\n\r\n```json\r\n\r\n{\r\n    \"name\": \"digitalstate\\/platform-application\",\r\n    \"description\": \"DigitalState Platform Application\",\r\n    \"homepage\": \"https:\\/\\/github.com\\/DigitalState\\/Platform-Application.git\",\r\n    \"keywords\": [\r\n        \"DigitalState\"\r\n    ],\r\n    \"license\": \"MIT\",\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"\": \"src\\/\"\r\n        }\r\n    },\r\n    \"repositories\": {\r\n        \"composer\": {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https:\\/\\/packagist.orocrm.com\"\r\n        },\r\n        \"dsplatform\": {\r\n            \"type\": \"vcs\",\r\n            \"url\": \"git@bitbucket.org:villemontreal\\/dsplatform.git\"\r\n        }\r\n    },\r\n    \"require\": {\r\n        \"oro\\/platform\": \"2.0.5\",\r\n        \"oro\\/platform-serialised-fields\": \"2.0.2\",\r\n        \"knplabs\\/knp-time-bundle\": \"dev-master#272b9d6c127db1a648d2729bc821f0ed19a274d4\",\r\n        \"craue\\/formflow-bundle\": \"dev-master#47b2b7af9b4385f97470ecb858f3a9c03e431587\",\r\n        \"digitalstate\\/bpm-camunda-sdk\": \"dev-master\",\r\n        \"lexik\\/jwt-authentication-bundle\": \"^2.2\",\r\n        \"mandrill\\/mandrill\": \"^1.0\",\r\n        \"aws\\/aws-sdk-php\": \"^3.28\",\r\n        \"dunglas\\/doctrine-json-odm\": \" dev-master\",\r\n        \"ramsey\\/uuid\": \"^3.6\"\r\n    },\r\n    \"require-dev\": {\r\n        \"sensio\\/generator-bundle\": \"3.1.2\",\r\n        \"behat\\/behat\": \"3.2.2\",\r\n        \"behat\\/mink-extension\": \"2.2.*\",\r\n        \"behat\\/mink-selenium2-driver\": \"1.*\",\r\n        \"behat\\/symfony2-extension\": \"2.1.1\",\r\n        \"nelmio\\/alice\": \"2.2.*\",\r\n        \"phpunit\\/phpunit\": \"5.7.*\",\r\n        \"phpunit\\/phpunit-selenium\": \"3.0.*\",\r\n        \"johnkary\\/phpunit-speedtrap\": \"1.0.*\",\r\n        \"mybuilder\\/phpunit-accelerator\": \"1.2.*\",\r\n        \"squizlabs\\/php_codesniffer\": \"2.7.*\",\r\n        \"phpmd\\/phpmd\": \"2.5.*\",\r\n        \"sebastian\\/phpcpd\": \"2.0.*\",\r\n        \"leaphub\\/phpcs-symfony2-standard\": \"~2.0.0\",\r\n        \"league\\/factory-muffin\": \"^3.0\",\r\n        \"league\\/factory-muffin-faker\": \"^2.0\",\r\n        \"codeception\\/codeception\": \"^2.2\",\r\n        \"phploc\\/phploc\": \"^3.0\"\r\n    },\r\n    \"config\": {\r\n        \"component-dir\": \"web\\/bundles\\/components\",\r\n        \"bin-dir\": \"bin\"\r\n    },\r\n    \"scripts\": {\r\n        \"post-install-cmd\": [\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::checkComposerPlugin\",\r\n            \"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::buildBootstrap\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installRequirementsFile\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::setPermissions\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::installAssets\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::setAssetsVersion\"\r\n        ],\r\n        \"post-update-cmd\": [\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::checkComposerPlugin\",\r\n            \"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::buildBootstrap\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installRequirementsFile\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::setPermissions\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::installAssets\",\r\n            \"Oro\\\\Bundle\\\\InstallerBundle\\\\Composer\\\\ScriptHandler::setAssetsVersion\"\r\n        ]\r\n    },\r\n    \"minimum-stability\": \"dev\",\r\n    \"prefer-stable\": true,\r\n    \"extra\": {\r\n        \"symfony-app-dir\": \"app\",\r\n        \"symfony-web-dir\": \"web\",\r\n        \"incenteev-parameters\": {\r\n            \"env-map\": {\r\n                \"database_driver\": \"APP_DB_DRIVER\",\r\n                \"database_host\": \"APP_DB_HOST\",\r\n                \"database_port\": \"APP_DB_PORT\",\r\n                \"database_name\": \"APP_DB_NAME\",\r\n                \"database_user\": \"APP_DB_USER\",\r\n                \"database_password\": \"APP_DB_PASSWORD\",\r\n                \"mailer_transport\": \"APP_MAILER_TRANSPORT\",\r\n                \"mailer_host\": \"APP_MAILER_HOST\",\r\n                \"mailer_port\": \"APP_MAILER_PORT\",\r\n                \"mailer_encryption\": \"APP_MAILER_ENCRYPTION\",\r\n                \"mailer_user\": \"APP_MAILER_USER\",\r\n                \"mailer_password\": \"APP_MAILER_PASSWORD\",\r\n                \"websocket_bind_port\": \"APP_WEBSOCKET_BACKEND_PORT\",\r\n                \"websocket_backend_port\": \"APP_WEBSOCKET_BACKEND_PORT\",\r\n                \"websocket_frontend_port\": \"APP_WEBSOCKET_FRONTEND_PORT\",\r\n                \"installed\": \"APP_IS_INSTALLED\",\r\n                \"secret\": \"APP_SECRET\"\r\n            },\r\n            \"file\": \"app\\/config\\/parameters.yml\"\r\n        },\r\n        \"asset-installer-paths\": {\r\n            \"npm-asset-library\": \"web\\/bundles\\/npmassets\",\r\n            \"bower-asset-library\": \"web\\/bundles\\/bowerassets\"\r\n        }\r\n    }\r\n}%\r\n\r\n```\r\n\r\n\r\nIs this exepected behavior? \r\n\r\nAlso, quite certain the % should not be there at the end, but it is also generated by the composer install .\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Chekote": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6570", "title": "Compose rolling back changes. I don't understand why.", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"medology/composer_test\",\r\n    \"description\": \"Test for some weird dep bug\",\r\n    \"type\": \"project\",\r\n    \"license\": \"Private\",\r\n    \"authors\": [\r\n        {\r\n            \"name\": \"Donald Tyler\",\r\n            \"email\": \"donald@medology.com\"\r\n        }\r\n    ],\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"vcs\",\r\n            \"url\": \"https://github.com/Medology/api.starfish.com.git\"\r\n        }\r\n    ],\r\n    \"minimum-stability\": \"dev\",\r\n    \"require\": {\r\n        \"medology/starfish-api\": \"dev-master\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nrequire.medology/starfish-api : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update -v\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nDependency resolution completed in 0.225 seconds\r\nAnalyzed 10710 packages to resolve dependencies\r\nAnalyzed 133910 rules to resolve dependencies\r\nPackage operations: 0 installs, 1 update, 0 removals\r\nUpdates: medology/starfish-api:dev-master 38513d4\r\n  - Updating medology/starfish-api dev-master (bc37341 => 38513d4):  Checking out 38513d4ccc06c00e7389aecafe2ffb08e5f5141e\r\n    Pulling in changes:\r\n      38513d4 - Donald Tyler: Minor change to bump SHA\r\n      9efffbd - Theodore R. Smith: Merge pull request #1358 from Medology/1357_fix_order_restriction\r\n      0ca3903 - Theodore R. Smith: Merge pull request #1332 from Medology/1274_create_command_generate_invoice\r\n      ebf6747 - StyleCI: Apply fixes from StyleCI\r\n      977ee3c - gautam-swaroop: (#1274) Added all the code necessary for the InvoiceGeneration except for InvoiceHelper\r\n      20b1a31 - gautam-swaroop: (#1274) Changed the saved boot method to created method in Order, as order will not be updated. 'drugTests' variable has been refactored to drugTestsAttached as there is a conflict of name for getAttribute.\r\n      32ec7b5 - Theodore R. Smith: Merge pull request #1343 from Medology/1292_show_invoice\r\n      cce5a96 - Anuradha Polakonda: (#1292) Renamed charges to lineitems\r\n      ff79c94 - smijo149: (#1357) Fixed order restriction issue.\r\n      d3494bc - Theodore R. Smith: Merge pull request #1353 from Medology/1347-fix_screening_status_datetime\r\n      29919b5 - Theodore R. Smith: Merge pull request #1352 from Medology/1336-message_templates_table\r\n      3d3e8bf - Theodore R. Smith: Merge pull request #1351 from Medology/1339-notification-to-company-order-create\r\n      baab97b - Rishi Ramawat: (#1336) Assigned primaryKey & incrementing member variables for MessageTemplate model\r\n      62bb0ed - Rishi Ramawat: (#1347)Added a DateFormat to support fractional seconds in ScreeningStatus\r\n      0f32aab - Rishi Ramawat: (#1347)Added microseconds support to created_at in screening_statuses table\r\n      5e117db - Anuradha Polakonda: (#1292) Refactored InvoiceFactory file\r\n      fc873e1 - smijo149: (#1339) Fixed code as per review comments.\r\n      c5fc1c8 - Anuradha Polakonda: (#1292) Removed getChargesAttribute and added invoice lineitems\r\n      4fb67d2 - Anuradha Polakonda: (#1292) Added check whether user has access to company & PHPUnit tests\r\n      128d3cd - Theodore R. Smith: Merge pull request #1350 from Medology/1348_secure_result_file_upload\r\n      dbd4d80 - Theodore R. Smith: Merge pull request #1330 from Medology/1277-route_to_view_invoices\r\n      d606143 - StyleCI: Apply fixes from StyleCI\r\n      2caa772 - Rishi Ramawat: (#1336) Added MessageTemplatesTableSeeder\r\n      be90a92 - Rishi Ramawat: (#1336) Create MessageTemplate Migration and Model\r\n      7f76ea4 - StyleCI: Apply fixes from StyleCI\r\n      6e3dc50 - siby praisen: (#1339) Added phpunits.\r\n      b159770 - smijo149: (#1348) Fixed tests.\r\n      c94d2b5 - smijo149: (#1348) Ensure security of result file upload.\r\n      f13e849 - Theodore R. Smith: Merge pull request #1346 from Medology/1344-refactor_order_status\r\n      502b895 - StyleCI: Apply fixes from StyleCI\r\n      72b651c - Theodore R. Smith: (#1344) Damn! StyleCI fucking *hates* \"return null!\"\r\n      a4c8ecb - Theodore R. Smith: (#1344) Refactored update order status into 1 single route.\r\n      35d7cd9 - siby praisen: (#1339) Added notification to the company whenever a new order is created\r\n      54f641a - Anuradha Polakonda: (#1292) Made some refactoring and Added PHPUnit tests\r\n      326e06a - StyleCI: Apply fixes from StyleCI\r\n      8043699 - Unknown: (#1277) Refactored testCanListInvoices() to use factory instead\r\n      c8995b0 - Unknown: (#1277) Modified return-type declaration of getPaymentStatusAttribute accessor\r\n      83d4a2a - Rishi Ramawat: (#1277) Added ability to limit the number of invoices sent using the per_page Query String Parameter\r\n      15a4412 - Rishi Ramawat: (#1227) Added Return Type Declaration for index() method in InvoiceController\r\n      1d1edf6 - Rishi Ramawat: (#1277) Added invoices property to DocBlock of Company\r\n      6684046 - StyleCI: Apply fixes from StyleCI\r\n      ca40fec - Rishi Ramawat: (#1277) Wrote Integration test for fetching all invoices of a company\r\n      08f1b38 - Rishi Ramawat: (#1277) Allowed null to be returned for Order payment_status\r\n      0109030 - Rishi Ramawat: (#1227) Increased the default $perPage value to 25\r\n      90b716b - Rishi Ramawat: (#1277) Added index() method in InvoiceController\r\n      29b1b8c - Rishi Ramawat: (#1277) Added invoices() relationship in Company Model\r\n      f5b5365 - Theodore R. Smith: Merge pull request #1327 from Medology/1297_fix_fake_event_testcases_observer\r\n      599fa09 - Theodore R. Smith: Merge pull request #1331 from Medology/1280_restrict_past_due\r\n      5657940 - StyleCI: Apply fixes from StyleCI\r\n      68872d8 - Theodore R. Smith: (#1292) Added an Invoice Line Items view and implementation.\r\n      cfd347d - StyleCI: Apply fixes from StyleCI\r\n      cc7fb93 - Anuradha Polakonda: (#1292) Added show method to display details of invlice\r\n      cbc382b - smijo149: (#1280) Made changes as per Theo's review\r\n      db68709 - Theodore R. Smith: Merge pull request #1335 from Medology/1268_refactor_delete_charge_card\r\n      28f0254 - smijo149: (#1280) Made changes as per Anuradha's review comments.\r\n      3671deb - Theodore R. Smith: Merge pull request #1333 from Medology/1267_show_details\r\n      2cccb16 - Anuradha Polakonda: (#1267) Added masked cardnumber & cardtype\r\n      bf9d70f - smijo149: (#1280) Fixed breaking tests.\r\n      c9c4937 - StyleCI: Apply fixes from StyleCI\r\n      0d7e340 - siby praisen: (#1268) Refactored charge card delete functionality\r\n      32eba7c - smijo149: (#1280) Made changes as per review comments.\r\n      1e0cc5a - Anuradha Polakonda: (#1267) Limit card details in order not to expose it\r\n      0fdff37 - smijo149: (#1280) Add tests and also created necessary factories.\r\n      e2df435 - Theodore R. Smith: Merge pull request #1328 from Medology/1267_show_charge_card\r\n      92f06c1 - Anuradha Polakonda: (#1267) Added show method to display chargecard attached to company\r\n      c4776ef - siby praisen: (#1297) Fixed failing event test cases in ScreeningStatusObserver.\r\n      45be9a3 - smijo149: (#1280) Changes made as per Theo's suggestions.\r\n      0ae704f - Theodore R. Smith: Merge pull request #1319 from Medology/1266_refactor_add_charge_card\r\n      d9917aa - StyleCI: Apply fixes from StyleCI\r\n      d0be9ba - gautam-swaroop: (#1266) Typehinted charge_card() method in Company\r\n      270821d - gautam-swaroop: (#1266) Added exists validation to company_id in ChargeCard\r\n      8cd59e6 - gautam-swaroop: (#1266) Changed the hasOne relationship to snake case as camel case function is unable to get the charge card attached to company.\r\n      286c970 - gautam-swaroop: (#1266) Removed cards_companies and added company_id foreign key in ChargeCard\r\n      bdc913f - gautam-swaroop: (#1266) Changed the http status code to 403 when adding of charge card is attempted to a company having another card attached to it already\r\n      af3bf38 - gautam-swaroop: Refactored Add charge card functionality.\r\n      ef9c583 - Theodore R. Smith: Merge pull request #1325 from Medology/invoice_controller_skeleton\r\n      b5782d9 - Anuradha Polakonda: (#1277),(#1292) Invoice controller skeleton file\r\n      20f8581 - Theodore R. Smith: Merge pull request #1322 from Medology/1290_seed_data_invoices\r\n      b094ab3 - smijo149: (#1280) Restricting users from creating new orders if Past Due invoice.\r\n      1bbc410 - Theodore R. Smith: Merge pull request #1324 from Medology/1323_fix_failing_rdb\r\n      b3087b7 - Rishi Ramawat: (#1323) Added IF EXISTS clause for dropping types\r\n      819478b - Rishi Ramawat: (#1323) Fixed typo in create_invoice_statuses migration file\r\n      216e596 - Anuradha Polakonda: (#1290) Added invoices seed data for Past Due status\r\n      d1960f8 - Anuradha Polakonda: (#1290) Added invoice id for orders which are Problematic & DrugFree\r\n      cbcfebd - RISHI RAMAWAT: Merge pull request #1321 from Chekote/docker_php_fixes\r\n      f48dd11 - Anuradha Polakonda: (#1290) Added seed data for invoices,invoice_statuses and transactions\r\n      897849a - Theodore R. Smith: Merge pull request #1282 from Medology/1250_initial_drug_status\r\n      1ea26c3 - Theodore R. Smith: Merge pull request #1303 from Medology/1230_missing_validation_company_id\r\n      057a1e2 - Theodore R. Smith: Merge pull request #1317 from Medology/1289-invoice_json_template\r\n      d3bb3df - Donald Tyler: Fix file max upload is not set in web container\r\n      9625294 - Anuradha Polakonda: (#1250) Sending email to users of the company which the person belongs to\r\n      aa27e65 - Theodore R. Smith: Merge pull request #1320 from Medology/1264-remove_validations_from_import_CSV\r\n      32b0c34 - Theodore R. Smith: Merge pull request #1304 from Medology/1271_record_order_pricing\r\n      16b8021 - Theodore R. Smith: (#1271) Refactored Orders and added drug test prices and totals.\r\n      f5da00a - Rishi Ramawat: (#1264) Improved the Import CSV tests a little\r\n      26b4b14 - Anuradha Polakonda: (#1289) Changed class property invoice id to string\r\n      91878f5 - Rishi Ramawat: (#1264)Fixed tests related to Import CSV\r\n      df0b0d6 - Rishi Ramawat: (#1264) Removed validations from Import CSV\r\n      934ddf1 - Anuradha Polakonda: (#1289) Removed invoiced falg from OrderFactory\r\n      c656c7c - Anuradha Polakonda: (#1289) Made invoice relation to be created first and then orders\r\n      65600ca - StyleCI: Apply fixes from StyleCI\r\n      901e034 - Theodore R. Smith: (#1289) Refactored the invoice table.\r\n      23314a1 - Theodore R. Smith: Merge pull request #1318 from Medology/1294-stablized_deps\r\n      608fb9b - Theodore R. Smith: (#1294) Stabilized Dingo API and JWTAuth to pre-release versions.\r\n      8159ad6 - Theodore R. Smith: Merge pull request #1314 from Medology/1297-fix_tests\r\n      b241d38 - Theodore R. Smith: Merge pull request #1295 from Medology/1272_store_invoice_data\r\n      7249c09 - Anuradha Polakonda: (#1250) Added DI for MailManager\r\n      ac3c8c9 - StyleCI: Apply fixes from StyleCI\r\n      e44d7f9 - siby praisen: (#1230) Added PHPUnit test case.\r\n      7a59acc - StyleCI: Apply fixes from StyleCI\r\n      5bf02ee - Theodore R. Smith: (#1305, #1297) Fixed the CompanySetting unit tests.\r\n      8a335ec - siby praisen: (#1230) Fixed the bug.\r\n      8ec4c0f - Rishi Ramawat: (#1272) Changed drop to dropIfExists in CreateInvoiceStatus Migration\r\n      dce7d96 - Theodore R. Smith: Merge pull request #1311 from Medology/1309-generic_model_events\r\n      6d574f3 - Theodore R. Smith: Merge pull request #1259 from Medology/1251_refactor_note_attachment_file_upload\r\n      5eff23d - StyleCI: Added PHPUnit tests\r\n      3123846 - StyleCI: Apply fixes from StyleCI\r\n      1178758 - Rishi Ramawat: (#1272) Added Unit tests for Invoice & Transaction Models\r\n      9f51921 - Theodore R. Smith: Merge pull request #1263 from Medology/1123_send_email_when_orderstatus_changes\r\n      9b8747c - Theodore R. Smith: Merge pull request #1279 from Medology/1265_disable_credit_card_encryption\r\n      91aca28 - Anuradha Polakonda: (#1123) Added PHPUnit tests\r\n      d8a656b - Theodore R. Smith: Merge pull request #1312 from Medology/1307-rearchitect_generation_of_UUID\r\n      aff871d - Rishi Ramawat: (#1307) Fixed return type of save() in UserSocialAuth\r\n      0ac2614 - StyleCI: (#1265) Minor changes to getCardDetailsAttribute() in ChargeCard.\r\n      8add72b - Theodore R. Smith: Merge pull request #1302 from Medology/1301-ensure_user_login\r\n      8211400 - StyleCI: Apply fixes from StyleCI\r\n      c80e748 - Rishi Ramawat: (#1307) Removed unnecessary id assignment in CandidateFactory.\r\n      9498808 - Rishi Ramawat: (#1307) Rearchitected how UUID's are generated\r\n      f38db7c - Theodore R. Smith: Merge pull request #1284 from Medology/1281_add_type_hinting_helpers\r\n      c6a81a6 - Theodore R. Smith: Merge pull request #1286 from Medology/1285_add_type_hinting\r\n      e360b33 - Anuradha Polakonda: (#1123) Added dispatchEmailTocompanyusers closure to the method\r\n      9f4c7ba - Theodore R. Smith: (#1305, #1308, #1309, #1310) Migrated Company to the new Validation system.\r\n      9368326 - Theodore R. Smith: (#1305, #1309) Created a new generic event systems for Model events.\r\n      5e18495 - Theodore R. Smith: (#1309) Converted UUID generation to a static method.\r\n      d2340e7 - Theodore R. Smith: Merge pull request #1298 from Medology/1234-adding_users_atomically\r\n      c891565 - Anuradha Polakonda: (#1123) Used CompanyCustomEmailJob to send emails\r\n      9dd2348 - Rishi Ramawat: (#1272) Added DocBlocks to all the new Models.\r\n      576b510 - Rishi Ramawat: (#1272) Prevented Updation of Invoice & Transaction Models.\r\n      2cd88a0 - Rishi Ramawat: (#1272) Renamed Transactions Model to Transaction (Singular)\r\n      38d1e54 - Anuradha Polakonda: (#1271) Added tests for checking aggregated order price\r\n      6bd5938 - Rishi Ramawat: (#1272) Added One-To-One Relationship b/w Invoice & InvoiceStatus Models\r\n      82ea6c1 - smijo149: (#1301) Test to check if the user is loggedin after password reset.\r\n      cb346ba - Rishi Ramawat: (#1272) Modified how dates are handled by the new Models\r\n      b8aceec - Anuradha Polakonda: (#1271) Storing drug test price and fetching aggregate order price\r\n      964826a - Rishi Ramawat: (#1272) Added constants for Invoice Payment Statuses\r\n      f0574a4 - Rishi Ramawat: (#1272) Increased the precision of the decimal price column\r\n      3cbbc0b - Rishi Ramawat: (#1272) Renamed invoice_status Table to invoice_statuses\r\n      380ffc3 - Rishi Ramawat: Renamed Create Invoice Status migration file\r\n      af1ecd1 - Theodore R. Smith: Merge pull request #1296 from Medology/1293_add_invoiced_flag_to_orders\r\n      fe71021 - Rishi Ramawat: Changes requested in code review\r\n      4b8d429 - siby praisen: (#1293) Review Changes\r\n      fa5e74d - Theodore R. Smith: Merge pull request #1300 from Medology/1288_store_ilabs_testing_info\r\n      521d216 - siby praisen: (#1288) Added iLabs Labcorp Testing Info\r\n      badb87c - Theodore R. Smith: Merge pull request #1299 from Medology/1294-update_dependencies\r\n      34292c6 - Theodore R. Smith: (#1294) Updated all the project dependencies.\r\n      50f664b - Theodore R. Smith: Merge pull request #1283 from Medology/1245_welcome_email\r\n      c29ab4d - smijo149: (#1245) Optimized User account creation email job.\r\n      74b2778 - StyleCI: Apply fixes from StyleCI\r\n      1a3bad4 - Rishi Ramawat: (#1234,#1227)Modified PHPUnit's for atomic request & response changes\r\n      16107d4 - siby praisen: (#1293) Added boolean column invoiced to orders table.\r\n      bc6f069 - Anuradha Polakonda: (#1271) Added price column to table orders_drug_tests\r\n      6f99618 - gautam-swaroop: (#1272) Created invoices,invoice_status and transactions tables and corresponding models.\r\n      c6bf901 - smijo149: (#1245) Used dependency injection for MailManager.\r\n      2a7da0c - Rishi Ramawat: (#1234, #1227) Modified logic to make bulk user creation atomic\r\n      4e1dd24 - Anuradha Polakonda: Removed unnecessary namespace\r\n      3bc49c1 - siby praisen: (#1285) Added type hinting for repositories\r\n      fc469b2 - StyleCI: Apply fixes from StyleCI\r\n      e5686af - siby praisen: (#1285) Added type hinting and return type for Filters.\r\n      ddaf17e - gautam-swaroop: (#1251) Fixed file name difference and removed attachment_type and filename as parameters.\r\n      00ea2d6 - gautam-swaroop: (#1251) Refactored NoteAttachment to upload file directly instead of base64 data\r\n      164106d - StyleCI: Apply fixes from StyleCI\r\n      34a16eb - siby praisen: (#1281) Added type hinting for Helpers.\r\n      4cc5e3a - Anuradha Polakonda: (#1123) Implemented code review changes\r\n      7c28dfa - smijo149: (#1245) Implement welcome email while user registration.\r\n      34a81cb - gautam-swaroop: (#1265) Implemented code reveiw comments\r\n      00e5fd5 - Anuradha Polakonda: (#1250) Notifying email to all users within company in case of Error\r\n      876244d - gautam-swaroop: (#1265) Removed the encryption of charge cards using user's card_key and refactored test cases accordingly.\r\n      1f860c2 - Anuradha Polakonda: (#1250) Default status of an order should be sending\r\n      72e8efa - Anuradha Polakonda: (#1250) Added new drug testing statuses\r\n      936c92d - StyleCI: Apply fixes from StyleCI\r\n      cb95c86 - Anuradha Polakonda: (#1123) Added ability to trigger emails to when order status changed\r\nPackage raveren/kint is abandoned, you should avoid using it. Use kint-php/kint instead.\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nI expected medology/starfish-api:dev-master 38513d4 to be installed. But bc37341 remained installed. I've never seen the \"Rolling back changes\" message before. What could be causing that?\r\n\r\nI can force the install of 38513d4 by changing the require line to `\"medology/starfish-api\": \"dev-master#38513d4\"`, but I don't see why that should be necessary. It's certainly not a great idea...\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "piotrkochan": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6565", "title": "Could not open input file. Could not run composer without sudo.", "body": "I cannot run composer without sudo. All `~/.composer` and `/root/.composer` are removed.\r\n\r\n```\r\nuname -a                                                                                                                      1 \u21b5\r\nLinux ...... 4.4.0-83-generic #106-Ubuntu SMP Mon Jun 26 17:54:43 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nlsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.2 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n\r\nphp -v                                                                                                                               1 \u21b5\r\nPHP 7.1.0 (cli) (built: Dec 14 2016 14:48:33) ( NTS )\r\nCopyright (c) 1997-2016 The PHP Group\r\nZend Engine v3.1.0-dev, Copyright (c) 1998-2016 Zend Technologies\r\n````\r\n\r\nInstalling via:\r\n```\r\n curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer\r\n```\r\n\r\nRun:\r\n```\r\ncomposer \r\nCould not open input file: /usr/local/bin/composer\r\n```\r\n\r\nIt is strange that it works, when I use relative path:\r\n\r\n```\r\ncd /\r\n./usr/local/bin/composer\r\n```\r\n\r\nEven tried to apply 777 chmod on the `composer` file without success.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "leventerogct": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6558", "title": "Composer install absolute paths in autoload_static.php", "body": "I'm working on setting up a build pipeline in VSTS.\r\n\r\nWhen I run **composer install** the following paths will be hardcoded in autoload_static.php:\r\n\r\n        'AppCache' => 'c:/agent/_work/1/s/app/AppCache.php',\r\n        'AppKernel' => 'c:/agent/_work/1/s/app/AppKernel.php',\r\n\r\nThis will obviously crash my application once I deploy it to Azure.\r\nTried using --no-autoloader and --optimize-autoloader but no luck.\r\n\r\nDesired result:\r\n\r\n        'AppCache' => __DIR__ . '/../..' . '/app/AppCache.php',\r\n        'AppKernel' => __DIR__ . '/../..' . '/app/AppKernel.php',\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Seldaek": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6552", "title": "Switch to Symfony 3", "body": "Just a list of things that would be good to have once we can switch to Symfony 3 (or 4..), as a reminder only.\r\n\r\n- https://github.com/symfony/symfony/pull/21474\r\n- ..?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6552/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/5464", "title": "Update repository interface", "body": "- Revert https://github.com/composer/composer/pull/5463\n- Clean up the BC handling in RepositoryManager::createRepository - unify repo signatures\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/5180", "title": "Make IOInterface implement LoggerInterface", "body": "Right now it's done hackishly at the BaseIO level to avoid breaking the contract, but this should be fixed in 2.0, see https://github.com/composer/composer/commit/b1723644e0a713ac3d25e5a0d429aceed76699ce#diff-720ae6fee5a71e118e1f8899f16741d1R14\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/4778", "title": "Documentation about openssl", "body": "We could really use a page in the docs dedicated to documenting clearly why having openssl enabled is good, and a few common ways how to enable it across platforms just to make sure people have no excuse, and also to have an easy way to point to when things go wrong with https://github.com/composer/composer/pull/4759, #4775 or especially once #4777 is implemented.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/4343", "title": "dump-autoload --no-dev should not dump require-dev packages and dependents", "body": "Issue spawned from #4252 - This can be used for the implementation https://github.com/composer/composer/blob/master/src/Composer/Installer.php#L285-L304 but it should first be made a bit more reusable (probably still needs to be on the Installer itself though as it depends on so much of its internal methods, and refactoring that is another task than this issue).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/2540", "title": "SHA1 sum of package dists should be more reliable than a SHA1 on the zip result", "body": "(Replacing #1496 which has become a mess, references #5940)\r\n\r\nIf multiple servers create archives, then those archives can have different SHA1s which is problematic. Potential solutions:\r\n- hash the contents in a reproducible way (might be very slow)\r\n- just avoid recreating archives all the time (depends on ecosystem but preferable)\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2540/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/2061", "title": "Downgrading packages to more stable versions fails in non-obvious way if there is no matching package", "body": "```\n    - Installation request for doctrine/doctrine-fixtures-bundle ~2.1 -> satisfiable by doctrine/doctrine-fixtures-bundle[2.1.x-dev].\n    - Removal request for doctrine/doctrine-fixtures-bundle == 2.1.9999999.9999999-dev\n```\n\nThe error reporting should be adjusted probably if the only matching package is in the installed repo and does not pass a Pool::isAcceptable check\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/1634", "title": "Provider packages should be uninstalled before their replacement gets installed", "body": "> - scipy 0.11.0  depends on numpy\n> - numpy 1.7.0 is available. Depends on MKL 11.0.0\n> - numpy 1.7.0 is also provided by nomkl_numpy 1.7.0, which does not\n>   depend on mkl.\n> \n> Running the script, I get:\n> \n> operations are ...\n> Installing mkl (11.0.0)\n> Installing numpy (1.7.0)\n> Installing scipy (0.11.0)\n> Uninstalling nomkl_numpy (1.7.0)\n> \n> I would have expected at least:\n> \n> operations are ...\n> Uninstalling nomkl_numpy (1.7.0)\n> Installing mkl (11.0.0)\n> Installing numpy (1.7.0)\n> Installing scipy (0.11.0)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/1634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/1633", "title": "DefaultPolicy should prefer installed providing package over not installed ones", "body": "If A and B provide A and B is installed, updating with a simple require for A will currently remove B and install A, even though the deps were already satisfied.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/1633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/96d07e67535f6fa002842f8f945983937bdf89e8", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/842a7ea922f680203285df91898edefe84b897d0", "message": "Fix dev-master not being normalized correctly for the root package, fixes #7007"}, {"url": "https://api.github.com/repos/composer/composer/commits/ad8b44a4c82204083f9f8c61867866579f8685bb", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/a5e35b9e8939e116b0bcbd677179d26bc490e6a1", "message": "Add --remove-vcs flag to create-project command to allow removing user prompts, fixes #7002"}, {"url": "https://api.github.com/repos/composer/composer/commits/ea9b7ecbb05c4b4265b1e15d72b2695439fdc12a", "message": "Merge pull request #6982 from carusogabriel/phpstan\n\nFixes from PHPStan level 0"}, {"url": "https://api.github.com/repos/composer/composer/commits/f28feedf58ea5defbacfbcc9e03b06b97adfd068", "message": "Update list of explicit VCS repo types, refs #7023"}, {"url": "https://api.github.com/repos/composer/composer/commits/9f60e5040115e535387c1e7672810ae63d33eeec", "message": "Merge pull request #7019 from mhujer/mh-validate-script-descriptions\n\nValidation warns if script description for nonexistent script is present"}, {"url": "https://api.github.com/repos/composer/composer/commits/471b012e3ae6ec93c5ad439c01538ffa984c5b9b", "message": "Fix problem report when requiring \"ext-zend opcache\", refs #2509"}, {"url": "https://api.github.com/repos/composer/composer/commits/9b30d83c23c6246ff44b682a54a56bdc3ec46b9e", "message": "More license docs fixes"}, {"url": "https://api.github.com/repos/composer/composer/commits/2e0a25e73f4ba0c9e1784e87a675a9805c4fab15", "message": "Update license docs"}, {"url": "https://api.github.com/repos/composer/composer/commits/4dc81db069d2622bfbdf889b92b181a81bd67be3", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/5a1765c8385d0dd421de67a78ca786c4893bcb23", "message": "Only warn for license deprecations for new releases/branches"}, {"url": "https://api.github.com/repos/composer/composer/commits/015927d0b058eb5d31e098952f7f1ab9613cb959", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/1a6e3ee8c75579d179dd440b1a61d3c900372457", "message": "Show script description for custom commands in run-script --list, fixes #7009"}, {"url": "https://api.github.com/repos/composer/composer/commits/994bac0c153348c09d42cd77225c465c1b81e8e9", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/59fcb91912932b5f9acd2f6d9c774b72907ef31d", "message": "Merge pull request #6985 from nicolas-grekas/get-url-contents\n\nAdd RemoteFilesystem::getRemoteContents() extension point"}, {"url": "https://api.github.com/repos/composer/composer/commits/82b80a54513085e4c791e0671775341a459d197f", "message": "Merge pull request #6979 from nicolas-grekas/fix-ctrl-c\n\nFix CTRL+C handling during create-project"}, {"url": "https://api.github.com/repos/composer/composer/commits/4331b116248b70e2adac3eb6df106ef71132206a", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/188b3a35c8d2a2a32a23f18b6b628696cb0eeff6", "message": "Tweak license deprecation text to handle + more gracefully, fixes #6981"}, {"url": "https://api.github.com/repos/composer/composer/commits/9a443e6d0bf336e45951078b399c4d8cfcac4bcd", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/20699905abf2613d4d91c03e80ca2a7f9ab8f0f1", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/74838790b55ef82cb557372a73321694103e402d", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/e6114b2ca7b2eb75920fd03957070045a1ac1bc1", "message": "Fix support for replacing dist refs in gitlab URLs and add support for gitlab/github enterprise too"}, {"url": "https://api.github.com/repos/composer/composer/commits/be040f8e3111b38c1e49ae5cd6b929dbf5c39045", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/ac9c7a50e927f402c4c95fe05eb4043263b6d0cb", "message": "Merge pull request #6976 from nicolas-grekas/fix-autoloader\n\nFix generated static map..."}, {"url": "https://api.github.com/repos/composer/composer/commits/4a7389f5b7070925a7fbaaaa99d2b961648ba5de", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/95d5e8dd947f4ec1402e96ddfcc8f6a7bb7bc0a6", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/8c7b13e9beb7f82de9645f9d71f8c5204a0495fd", "message": "Update content hash"}, {"url": "https://api.github.com/repos/composer/composer/commits/8ff3a8bcc048b6d6d091ddbf0975b04f94fef016", "message": "Merge branch '1.6'"}, {"url": "https://api.github.com/repos/composer/composer/commits/5e223dae61b7b04ad4cf8361cb60ab76d07a63f8", "message": "Update jsonlint dep"}, {"url": "https://api.github.com/repos/composer/composer/commits/ebc3c7d0da6393b92611c2f2b3c7847faf661bb8", "message": "Merge pull request #6973 from nicolas-grekas/fix-autoloader\n\nFix BC of generated static map"}, {"url": "https://api.github.com/repos/composer/composer/commits/749b4c46b74f9702fc4f6abde6480fb6f0373ed6", "message": "Bump branch alias"}, {"url": "https://api.github.com/repos/composer/composer/commits/c962be2f4123434b4843b1d945724a633237ce00", "message": "Update changelog for 1.6.0"}, {"url": "https://api.github.com/repos/composer/composer/commits/882b82d542b45435bae1d95b33e225427950c59c", "message": "Add COMPOSER_MEMORY_LIMIT env var to force a given memory_limit, fixes #6931"}, {"url": "https://api.github.com/repos/composer/composer/commits/5cd0fef7ff75dbe32c06a8d36b4f837852a6d004", "message": "Upgrade to SPDX License 3.0 and handle deprecations more gracefully, fixes #6951"}, {"url": "https://api.github.com/repos/composer/composer/commits/ab8437ce06256109d10731f3baff3d513e93ad1f", "message": "Merge remote-tracking branch 'swumao/feature-6892'"}, {"url": "https://api.github.com/repos/composer/composer/commits/3be9591930688dc8be146095a321cdb280098e2b", "message": "Simplify some ClassLoader code, minor memory improvement, fixes #6937"}, {"url": "https://api.github.com/repos/composer/composer/commits/8a50345df791c3dddd5ec73792f45fc8bc84af42", "message": "Follow ignore-platform-reqs when checking for package requirements, fixes #6859"}, {"url": "https://api.github.com/repos/composer/composer/commits/e2ad3ea85a4755417aa953e158258fbc8654cbab", "message": "Merge pull request #6963 from glensc/patch-2\n\nchangelog: fix typo in 1.5.6 entry"}, {"url": "https://api.github.com/repos/composer/composer/commits/f222f7f896952364dd406e5f140d68fa09313bad", "message": "Merge pull request #6961 from carusogabriel/bin\n\nAllow bin key to receive string"}, {"url": "https://api.github.com/repos/composer/composer/commits/0edc4175a1bd237329c73d18c589f6d54e2fb44e", "message": "Merge pull request #6955 from carusogabriel/clean-documentation\n\nClean up documentation"}, {"url": "https://api.github.com/repos/composer/composer/commits/e137fe9b9dfd3b51bacac5766eed96d3ca8f7c07", "message": "Merge pull request #6960 from carusogabriel/singulars-and-plurals\n\n[SvnDownloader] Improve plurals and singulars"}, {"url": "https://api.github.com/repos/composer/composer/commits/6717cf19566a137a9e0f933d154d89989215ce47", "message": "Merge pull request #6947 from localheinz/fix/sort-packages\n\nFix: Add 'sort-packages' to composer-schema.json"}, {"url": "https://api.github.com/repos/composer/composer/commits/ad27182618d827d5694dea5f7516a2bdde61a8bf", "message": "Merge pull request #6945 from localheinz/fix/remove-main-key\n\nFix: Remove key when value is null"}, {"url": "https://api.github.com/repos/composer/composer/commits/28e41d094e78e0a60dc5123ee572701154008848", "message": "Merge pull request #6939 from localheinz/fix/typo\n\nFix: Typo / wording"}, {"url": "https://api.github.com/repos/composer/composer/commits/9c9b014d28653b0253bb27ffd96f589b366766e7", "message": "Merge pull request #6952 from mhujer/mh-docs-typos\n\n[docs] Few typographical fixes"}, {"url": "https://api.github.com/repos/composer/composer/commits/17086c5787b89993e680bb8bb36c75b6bae419d2", "message": "Merge pull request #6949 from mhujer/mh-fix-links\n\n[docs] Fix links"}, {"url": "https://api.github.com/repos/composer/composer/commits/57b3e2451404af0dac0f5fd797fce6789fa2624b", "message": "Merge pull request #6926 from stof/fix_platform_reqs\n\nFix the platform requirement check command"}, {"url": "https://api.github.com/repos/composer/composer/commits/f494f4942da1eba9352b64c15fdf95e3de990d69", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/50665aa18d566b7111de2f4d25d6109fb7baa1d4", "message": "Simplify check for current revision, refs #6684"}, {"url": "https://api.github.com/repos/composer/composer/commits/93cd9d874b9fc71d638568c8786a1d51b1351d10", "message": "Merge remote-tracking branch 'RobberPhex/git-repo'"}, {"url": "https://api.github.com/repos/composer/composer/commits/01cc1ccf2a633592bc50b7d0b22e2027e96629e4", "message": "Merge pull request #6920 from johnstevenson/appveyor-platform\n\nRemove build platform from appveyor.yml"}, {"url": "https://api.github.com/repos/composer/composer/commits/6d4a8574da4f839f8802a8876a1ad6623fdf8b39", "message": "Merge pull request #6921 from carusogabriel/add-no_useless_else-phpcs\n\nAdd no_useless_else in phpcs"}, {"url": "https://api.github.com/repos/composer/composer/commits/0958b3de5ccb7fb179ff59359c1a8c92ebe92572", "message": "Merge pull request #6915 from johnstevenson/appveyor\n\nFix chocolatey php"}, {"url": "https://api.github.com/repos/composer/composer/commits/d30d5b36ed409bbbc6f967620e9d0fa4066a974c", "message": "Update deps"}, {"url": "https://api.github.com/repos/composer/composer/commits/a1c5754b1f6c22a1e359507c619fad0d401d91e7", "message": "Make sure tests run non-interactively"}, {"url": "https://api.github.com/repos/composer/composer/commits/c8aea719b145ca78a79a60913db5c312883e8ace", "message": "CS fixes"}, {"url": "https://api.github.com/repos/composer/composer/commits/f31b820b0964afe610e042a382c24ef16c853c09", "message": "Merge pull request #6911 from johnstevenson/cygdrive\n\nFix shell proxy to allow user-defined cygdrive"}, {"url": "https://api.github.com/repos/composer/composer/commits/847ebed6e6999022f08ca615d69c5664f41d866b", "message": "Merge pull request #6913 from mbrodala/scripts-description-toplevel\n\nMove \"scripts-description\" to toplevel"}, {"url": "https://api.github.com/repos/composer/composer/commits/b32c7b3d16b2fa2c9b1933664df92df95ee49223", "message": "Remove BC warning as this was never released"}, {"url": "https://api.github.com/repos/composer/composer/commits/f1cf41e05181263c86bb8be9d762bae2b478697c", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/a4f28f54b64474803aa6db7f90123aa9241a0cd4", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/3e1b0c88d7397cdd32c4ac151a8175c188ce9318", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/00f6c0a44aab7496382f1c5e7afff5b9bcdc863c", "message": "Fix issue when requiring multiple packages once without and once with explicit version, fixes #6859"}, {"url": "https://api.github.com/repos/composer/composer/commits/0a9abeef88ba22530aa404c8a0b67f0d9b6acd05", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/8bc02d1aed0254d0fdd450fc6bdbd4a3decf61a0", "message": "Merge pull request #6904 from brettsantore/doc-update\n\nclarify optionality of package in require command"}, {"url": "https://api.github.com/repos/composer/composer/commits/4c8c574b6c9f306eeb9201be10419b4616d3f198", "message": "Fix regex, refs #6895"}, {"url": "https://api.github.com/repos/composer/composer/commits/a55d9ce7b0d0c5c6d8af0efc0db4d8d50488ba58", "message": "Merge pull request #6875 from OskarStark/strategy\n\noutput used strategy"}, {"url": "https://api.github.com/repos/composer/composer/commits/b110f86aa06db7c4e82c79d97dc662573cba7468", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/226eb7e657790a301ab25f328620512e30c418ab", "message": "Merge pull request #6906 from sonjaq/patch-1\n\nCorrects troubleshooting.md documentation link by removing space"}, {"url": "https://api.github.com/repos/composer/composer/commits/0a09886307c213856aa3a06bf56187dd033d5b7f", "message": "Merge pull request #6880 from mbrodala/patch-2\n\nDocument arguments for custom commands"}, {"url": "https://api.github.com/repos/composer/composer/commits/7d57f84b7d23797c230550d1809c90bf45839858", "message": "Merge pull request #6879 from OskarStark/output\n\nhighlight previous composer version"}, {"url": "https://api.github.com/repos/composer/composer/commits/525e6cddaa65056d278f21e84821c1b545d7d5af", "message": "Add check-platform-reqs to docs"}, {"url": "https://api.github.com/repos/composer/composer/commits/5f382e1e633b76c7a68e03b4b6a90f1ea1e52abf", "message": "Merge pull request #6899 from kohkimakimoto/update-doc\n\nupdate doc"}, {"url": "https://api.github.com/repos/composer/composer/commits/81009d016bd52265aaee97e40c9f24f9e4033fdc", "message": "Merge pull request #6885 from felixfbecker/patch-1\n\nExclude non-essential files from dist package"}, {"url": "https://api.github.com/repos/composer/composer/commits/b8bcc375fce66149c5e735eef97b1c89560a81d6", "message": "Merge pull request #6903 from carusogabriel/clean-else\n\nClean elses"}, {"url": "https://api.github.com/repos/composer/composer/commits/84f5a1a7e8293978a718663dfac399e83f093e9e", "message": "Merge pull request #6893 from Nenglish7/patch-1\n\nUpdate README.md"}, {"url": "https://api.github.com/repos/composer/composer/commits/ed20b3b4f6fdd21da1d2b62049d7ac0ef70093a3", "message": "Fix OutputFormatter creation with Symfony 4, fixes #6871"}, {"url": "https://api.github.com/repos/composer/composer/commits/578798c87c54b84c43345ed9496a99a0a061e82e", "message": "Merge pull request #6872 from danepowell/patch-1\n\nClarified language on branch naming for forks"}, {"url": "https://api.github.com/repos/composer/composer/commits/6bb3ab1868ff5b237609df7d16a041dcebbdfed0", "message": "Tweak help/description"}, {"url": "https://api.github.com/repos/composer/composer/commits/b579884e150132616744a53d5ceb842baed7b60d", "message": "Tweak check-platform-reqs command to check all constraints and output more information about what requires failed, refs #6709"}, {"url": "https://api.github.com/repos/composer/composer/commits/edf561d602097d8e7801a4a7dbfb9ed8c865c75a", "message": "Merge remote-tracking branch 'swumao/master'"}, {"url": "https://api.github.com/repos/composer/composer/commits/b2f283cbd2723755fdb549af029b335841661f2d", "message": "Merge pull request #6696 from legoktm/sort-installed\n\nSort vendor/composer/installed.json deterministically"}, {"url": "https://api.github.com/repos/composer/composer/commits/179f7376e737bf995c5f329c0205df66fef17eb8", "message": "Merge pull request #6811 from dunglas/github-releases\n\nDeploy PHAR to GitHub releases"}, {"url": "https://api.github.com/repos/composer/composer/commits/17428e33a98f965a62534ddb65592c0953c7d696", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/cf5dfdea6b341579be5bbc9b602b3201d1a8ccb3", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/224d272a0e592f947cca4de78b1be4485617a97a", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/3976d9f242689a1aa148475f4309efad2bca9db2", "message": "Fix require command picking of specific versions, fixes #6859"}, {"url": "https://api.github.com/repos/composer/composer/commits/0ebac8bd06c32ff89fa32fcfbcebf9bda76cc4ae", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/fb8fecd4a512cf45607748469ae64bf65b0770ee", "message": "Add missing links"}, {"url": "https://api.github.com/repos/composer/composer/commits/755482ddb1c21372be8e2a8211da698f91555731", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/d11b704617cc46d2a3aef64e64d9c59199b39883", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/a928ffa4eeb47554600f2833b463b642c4de821d", "message": "Fix require command when specifying non-stable versions, fixes #6859"}, {"url": "https://api.github.com/repos/composer/composer/commits/29bce30f5b9eb1ded229bd9d9401f203fafb6f49", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/c79e5fc33e4dbafb957ff40fd1f0b025e568c314", "message": "Update changelog"}, {"url": "https://api.github.com/repos/composer/composer/commits/6a08755c254d50384e48a36f75dd56e56e942692", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/92e8a99ed2e55166c0856533afc6b67ddc5d8a01", "message": "Merge pull request #6783 from gabriel-caruso/phpunit\n\nUse PHPUnit\\Framework\\TestCase instead of PHPUnit_Framework_TestCase"}, {"url": "https://api.github.com/repos/composer/composer/commits/5960f715f0124d8366671348f22ab9e739f6cede", "message": "Add warning in show command if no dependencies are installed but the root package has dependencies, fixes #6820"}, {"url": "https://api.github.com/repos/composer/composer/commits/6256e171491f997dfbe375732331041ad02ad21b", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/5ba6d7d4364b0d1898017436935b863d4d8fb14d", "message": "Fix pretty guessed versions to show nicely on numeric branches, refs #6845"}, {"url": "https://api.github.com/repos/composer/composer/commits/40f4f6bf860c0be6eb6da5f91595b3c35a9725fc", "message": "Fix docblock"}, {"url": "https://api.github.com/repos/composer/composer/commits/94a1f16c9641f7a4163e6e00ec7273b983c21fb2", "message": "Fix scheme in public gitlab URLs, refs #6683"}, {"url": "https://api.github.com/repos/composer/composer/commits/eab826b00be2565f86dd806184cf06064df6009e", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/b52fd608734b1554def7b485c8e48821d1bfbdc4", "message": "Always follow redirects in userland as we need to check if we have authentication every time for the new domain"}, {"url": "https://api.github.com/repos/composer/composer/commits/45cd26b2df058a443fcf3b214e79b1d36dc328d5", "message": "Fix test and actually check that we get hasAuthentication called for different domains"}, {"url": "https://api.github.com/repos/composer/composer/commits/b59dd23bb47b26f4620a55ce26d55af985d6c6bd", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/36c131cf336d8df074190a8accf3830faf3dfbdd", "message": "Update deps"}, {"url": "https://api.github.com/repos/composer/composer/commits/743153e862b7b82bd71f09be9775f460ca8d6ac0", "message": "Tweak so that we allow authentication for domains we redirect to, refs #6717"}, {"url": "https://api.github.com/repos/composer/composer/commits/0de1e21233be5825abc19d2b5431b84fc92dc7dc", "message": "Make create-project install dependencies following optimize-autoloader config setting, fixes #6722"}, {"url": "https://api.github.com/repos/composer/composer/commits/e5d07fde6bbc60e6caa2e9ccc195723d4e9b2461", "message": "Merge pull request #6743 from zachflower/feature/init_defaults\n\nComposer init default values"}, {"url": "https://api.github.com/repos/composer/composer/commits/fedef553627b36b58cc5347925d21b5eb26b52c5", "message": "Merge remote-tracking branch 'arjank/abandoned_package_warning'"}, {"url": "https://api.github.com/repos/composer/composer/commits/4072d6bdb8f8c625a316aa0305c195f543ecc3d8", "message": "Merge pull request #6812 from saulwilcox-jisc/patch-1\n\nAdd 'remove' to example global commands"}, {"url": "https://api.github.com/repos/composer/composer/commits/535e7262e44ed000117724f75241835280141d55", "message": "Fix php5.3"}, {"url": "https://api.github.com/repos/composer/composer/commits/a1e292d84d812a42a531bbac5ae599c3a08a747f", "message": "Let users open the homepage of the current package by doing composer home without argument, fixes #6748"}, {"url": "https://api.github.com/repos/composer/composer/commits/5130d022080491aac7e49e0e91aea3cc1dced600", "message": "Update to latest ca-bundle"}, {"url": "https://api.github.com/repos/composer/composer/commits/ec63c213f8222c3c52e45f18773dd1f71f8bf2d8", "message": "Allow unsetting the whole platform config key"}, {"url": "https://api.github.com/repos/composer/composer/commits/9850621c6b708d5816e033819f2c5156194dbc8e", "message": "Merge pull request #6788 from GawainLynch/symfony-4\n\nSymfony 4"}, {"url": "https://api.github.com/repos/composer/composer/commits/0b3bc4ccb9f46b12d334e2136b19f02ca9c5c1e0", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/a691a179e5cd5aa587a97e3e26957fb9bb764370", "message": "Merge remote-tracking branch 'naderman/improve-not-found-error' into 1.5"}, {"url": "https://api.github.com/repos/composer/composer/commits/3c76e36e2c344718cae85466da4ae9fcc58c0298", "message": "Fix regex, refs #6735"}, {"url": "https://api.github.com/repos/composer/composer/commits/065b662d5b5f9ff56305fa64af68a084ba64da66", "message": "Merge remote-tracking branch 'naderman/t/no-package-potential-issue' into 1.5"}, {"url": "https://api.github.com/repos/composer/composer/commits/b4df2c95173f08d887ad0c4066afbb3ca17a33f7", "message": "Avoid reverting the composer.json in case of a composer require/remove failure that is unrelated to the Solver\n\nFixes #6821 and adds a different fix to #3464 which is getting reverted"}, {"url": "https://api.github.com/repos/composer/composer/commits/4c4f516ea255433a27a321106d06ed330d2bd04a", "message": "Make sure binaries are recreated before POST-hooks fire"}, {"url": "https://api.github.com/repos/composer/composer/commits/17ec4c17b0b56636d51abbae7a65e115581bb0fe", "message": "Set COMPOSER_DEV_MODE for all events and not just POST hooks"}, {"url": "https://api.github.com/repos/composer/composer/commits/bfed974ae969635e622c4844e5e69526d8459baf", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/fc9f8c2007f5cd2cf29c61e86c56d0ed1b441917", "message": "Fix tests"}, {"url": "https://api.github.com/repos/composer/composer/commits/308cf07973bee85a1428ce5e107fc43f51c82a25", "message": "Merge pull request #6781 from cafferata/patch-1\n\nUpdate 03-cli.md"}, {"url": "https://api.github.com/repos/composer/composer/commits/26a50b37624b20d73c861b7714c3d34cbba8e4e1", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/14dc4b20df0667f55543afb65480ca0c287b3892", "message": "Merge pull request #6746 from renanbr/diagnose-with-php-bin-info\n\nadd php version and binary to the dignose command"}, {"url": "https://api.github.com/repos/composer/composer/commits/4ab34c22fab1578759d2ad5e7726892879bbd539", "message": "Merge pull request #6740 from croensch/master\n\nalso support NO_PROXY"}, {"url": "https://api.github.com/repos/composer/composer/commits/11f1e037392035c7983613b5a037ee04993c16ad", "message": "CS tweaks"}, {"url": "https://api.github.com/repos/composer/composer/commits/ba53a2d0e613b14eaff7cdef99afb3cffda08f82", "message": "CS fixes"}, {"url": "https://api.github.com/repos/composer/composer/commits/41a9357d4b1499d73391b4fd04d722bb7084b557", "message": "Merge remote-tracking branch 'thom8/script_help'"}, {"url": "https://api.github.com/repos/composer/composer/commits/7c7c91344ae6146e7e32b51958d643a41ee8892a", "message": "Avoid some error paths, refs #6678"}, {"url": "https://api.github.com/repos/composer/composer/commits/b94d55d1a992274a6697b7c14a2e4a3802208ee1", "message": "Merge remote-tracking branch 'lulco/search-similar-package'"}, {"url": "https://api.github.com/repos/composer/composer/commits/9a99e86ebce36c8deef396c60dbbb5ed8750d36a", "message": "Rename NonRoot to Transitive, refs #6674"}, {"url": "https://api.github.com/repos/composer/composer/commits/9df22654c3d7a936c6044cb7854b7315d5d37a37", "message": "Merge remote-tracking branch 'grasmash/issue-6661-whitelist-all-deps'"}, {"url": "https://api.github.com/repos/composer/composer/commits/edece864e7e4c668dcad6601df70777882d22116", "message": "Merge pull request #6692 from PetrHeinz/patch-1\n\ntypo \"semvar\" => \"semver\""}, {"url": "https://api.github.com/repos/composer/composer/commits/e12e0335a4d467878093fc76e3dea592ff3e1ce3", "message": "Merge pull request #6677 from kalessil/master\n\nSCA with PHP Inspections (EA Extended)"}, {"url": "https://api.github.com/repos/composer/composer/commits/c0eb32669a1ffa0c7ec4678e928f6de69d28c8c0", "message": "Remove comment"}, {"url": "https://api.github.com/repos/composer/composer/commits/7e067be1dfe1fe6bc4b69c8cd89c226fb74fc2fb", "message": "Merge pull request #6679 from zdanek/patch-1\n\nfixed caret sub title link in the article"}, {"url": "https://api.github.com/repos/composer/composer/commits/080fefa112e61cde43159a17b07f49a918eda577", "message": "Merge pull request #6653 from glensc/sh-syntax\n\nfix parallel test exit scenario shell syntax"}, {"url": "https://api.github.com/repos/composer/composer/commits/6c1da86437542a23d2af7434edc33969456a76a6", "message": "Update deps"}, {"url": "https://api.github.com/repos/composer/composer/commits/0bc7199bdb51f07fbec706eae5dcfb64e865ed87", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/e918ec9b390a4b4647352fd09e731ba2459503a9", "message": "Prepare 1.5.2"}, {"url": "https://api.github.com/repos/composer/composer/commits/0745216c5702cecde837c3ec9d0070598432a42a", "message": "Bump cabundle"}, {"url": "https://api.github.com/repos/composer/composer/commits/92458596ea93cda1d58ee09c8c69ec64e3200ab3", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/69ecb2403e098a5de66c62e0e032ba9dc5efb933", "message": "Add upgrade alias to update, fixes #6649"}, {"url": "https://api.github.com/repos/composer/composer/commits/dae575c197733c4503209cb38d32b73b35e4f46c", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/802849d52cae9f22ff1696cdcac9afd68da3d83a", "message": "Wording tweaks"}, {"url": "https://api.github.com/repos/composer/composer/commits/4853661934f1f368bcd32d2b700e1ebd60272257", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/1682d7d45493b1a7cb461952ff8327164463f2c2", "message": "Fix path repo version parsing to follow COMPOSER_ROOT_VERSION when the git repo is shared with the root package, fixes #6625"}, {"url": "https://api.github.com/repos/composer/composer/commits/a53f2ce7c7dfad75b1ff297e21efdb284aed5ba1", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/f71baa5e0ce0df75abe45d2dab513b97a3db4957", "message": "Try fixing 404s gitlab handling when unauthenticated, refs #6669"}, {"url": "https://api.github.com/repos/composer/composer/commits/54fd2fd4afe37e7b6935930e8344d88c3c858c00", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/56964a93777e5367f4c41f2fe978ea45e0dcd522", "message": "Check for new work dir with both parameters, refs #6651"}, {"url": "https://api.github.com/repos/composer/composer/commits/3a4604ebbcd170321a447d99da4aac966376244f", "message": "Merge remote-tracking branch 'swumao/master'"}, {"url": "https://api.github.com/repos/composer/composer/commits/a8df30c09be550bffc37ba540fb7c7f0383c3944", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/8b61315b14bef09cf39b545a897d0090ce6cf94c", "message": "Normalize URL as symfony Filesystem::mirror does a straight str_replace on realUrl vs actual iteratee path without normalization and our aRchivableFilesFinder does normalize the path, refs #6667"}, {"url": "https://api.github.com/repos/composer/composer/commits/7c0a774157ab0bedb819f97aa46d275bc244943d", "message": "Merge pull request #6654 from andrewryantech/patch-1\n\nUpdate why-can't-composer-load-repositories-recursively.md"}, {"url": "https://api.github.com/repos/composer/composer/commits/1e6854455cd373f2737269e9318f90709aaeeefa", "message": "Merge pull request #6644 from codekandis/feature/util-filesystem-copy-separation\n\nIntroduces a new method `copy()`."}, {"url": "https://api.github.com/repos/composer/composer/commits/eb6106905831af7bbdd094e808749fff7a5e21fd", "message": "Merge pull request #6613 from decadence/patch-1\n\nNote for aliases"}, {"url": "https://api.github.com/repos/composer/composer/commits/1a710bb1e8a457e8e9cc92a78be1572d9c8807ec", "message": "Merge pull request #6632 from Deamon/issue-6627-update-doc-packages-configuration\n\nDocument how to define multiple versions in a package repository"}, {"url": "https://api.github.com/repos/composer/composer/commits/97b22ad387428f9a1e81e37407e4f97520feaca2", "message": "Merge pull request #6608 from kthbit/local-fossil\n\nTeach FossilDriver to work with local fossil repository files"}, {"url": "https://api.github.com/repos/composer/composer/commits/d9885d5b3bd1b28a6d8c679df848540e565ee818", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/9fd4f22ba2c8db648ac580fe1bcdccaee7adf3d7", "message": "Also ignore dir change prompt in list command"}, {"url": "https://api.github.com/repos/composer/composer/commits/d932b17c08aa1b63ef5ded833beafae3a914c807", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/d352cc97f731c2e34c181480d224a3b146f60cfc", "message": "Do not prompt for dir change on create-project, fixes #6617"}, {"url": "https://api.github.com/repos/composer/composer/commits/a019fe7e6fe2a408f36417a455fc61190c451a01", "message": "Merge branch '1.5'"}, {"url": "https://api.github.com/repos/composer/composer/commits/e33d00f98e41f1f75cad5c3ee70321bfdbf50ea0", "message": "Fix gitlab tests"}, {"url": "https://api.github.com/repos/composer/composer/commits/79360da184c9314b1468bc0aff461f3f82fe5bb2", "message": "Merge branch '1.5'"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/1340910", "body": "Aye, see https://github.com/composer/composer/blob/master/phpunit.xml.dist#L6\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1340910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1457922", "body": "Thanks, I'm merging your other PR soon, was doing some changes to it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1457922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1458326", "body": "Doh, rebased the commits by mistake when updating the README fix. It's merged.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1458326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1459395", "body": "Thanks for the patches, but if you want to help, the packagist repo would be better right now, much work is needed over there. If you have time hit me up on irc (#symfony-dev) or jabber/gtalk: seldaek@jabber.org, I'll be happy to explain what the plans are and where help is needed :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1459395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1465738", "body": "Meh, sorry I didn't notice it. Fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1465738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1546145", "body": "PHAR should be an option for most users, but in Symfony or Typo3 for example that would use composer to handle their plugin, they could bundle it with their distribution one way or another, then its distribution is a non-issue. Anyway yes, a PEAR channel is not really necessary at this point, if it ever becomes relevant we can re-discuss.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1546145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1703005", "body": "Sorry I was busy with moving apartments and then holidays.. For now I'd say we can use a submodule. Maybe later, depending on how things go and for ease of use we can merge the code in the repository itself, but that's more a last resort method imo.\n\nAlso @xaav please use `git rebase -i` to squash/cleanup commits a bit, when pull requests have 30 commits doing and undoing random things it's a bit hard to review.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1703005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720282", "body": "Or.. `git rebase -i upstream/master`, edit all lines to start with s/squash except the first, done\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1722185", "body": "Well, yes, I guess I will\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1722185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1722347", "body": "Merged\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1722347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2121782", "body": "Merged (and fixed conflicts I created yesterday:)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2121782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2121929", "body": "Merged thanks\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2121929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2121952", "body": "cc @naderman :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2121952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2122469", "body": "Huh, thanks, I was really not paying attention to what I was doing it seems :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2122469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2190429", "body": "Clarified in 751f506080c6c2b0342bd1e6e695f95c10fd36d5 - though we shouldn't forget to specify all this in our (upcoming:)) documentation efforts.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2190429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2208146", "body": "We use camel case for method names everywhere, please adjust the test methods, and prefix them with test, so you can remove the @test annotation too. Even dox output should be able to cope with `testMemoryPackageHasExpectedNamingSemantics`.\n\nAs for your todo entry, yes, all packages should follow the same semantics so they could be tested together, but we only have the MemoryPackage atm, and I honestly don't know if we'll ever have another package implementation in core.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2208146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231038", "body": "I'm doing a base downloader since I have made other changes to the downloaders. Feel free to submit the tgz one later though. However it annoys me a bit that it wouldn't work on windows as it is.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231436", "body": "See https://github.com/composer/composer/commit/00a4fe2a14595426e4e4e913357fdc86325aae2d\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231497", "body": "Merged, thanks\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231515", "body": "Pretty much done now (though maybe not field tested enough.. we'll see)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231600", "body": "I try to get on it soon.. I realize it's a bit of a pain point right now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2231600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2237072", "body": "True, true. Although we could move the vendor inside .composer by default.\n\nAnd in any case, we'd need a way to verify the integrity of the installed packages, and if any is missing it shouldn't be in the installed repository.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2237072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240793", "body": "Yeah it's mostly the lack of error reporting that sucks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240827", "body": "Well, sure, that works too. We just have to stop outputting \"Done\" when nothing happened :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253077", "body": "Hehe fail, thanks :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253211", "body": "I agree we need to address this eventually, but for now all packages are basically public github repos that don't have \"dist\" (tar/phar/..) versions per-se.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253417", "body": "Sure\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253601", "body": "Well once you do finish thinking about that (feel free to stop by on irc.freenode.org #composer-dev if you need to discuss with others), please let us know if you think there's any blocking issues that should be addressed before it's too late.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253710", "body": "It should indeed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2263911", "body": "Fixed tests and other stuff & merged\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2263911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2264580", "body": "Locking works now, but we still need a way to update (other than `rm composer.lock`:)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2264580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2266995", "body": "Added some info, but we still need more I guess so I leave this open for now, feel free to help :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2266995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2319772", "body": "The thing is, you must define a version yourself, and then a dist/src so it's installable, if the package has no composer.json. The dist/src entry will specify which commit hash it has to use. So the wole locking thing is a non-issue.\n\nAnd yes, we need to reuse packagist code, someone tells me at least once a day, and I know it has to be done, I just didn't have the time yet :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2319772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360257", "body": "Can't reproduce. This works just fine here.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360294", "body": "See https://twitter.com/#!/seldaek/status/123721697319858176 - the issue is it requires something that doesn't exist.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360300", "body": "That said, we still need better reporting on why it couldn't be installed (!! @naderman), because I agree it's confusing as it is.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360336", "body": "Tried with the linked phar as well and I get the same result. Can't reproduce. One thing that could be different is the PlatformRepository on your machine, maybe you have a wonky extension that triggers this funny error. Can you try using composer from source and dumping $ext and $version in line 58 of PlatformRepository?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422958", "body": "@lsmith77: IMO it is more than that, it's about providing transparent autoloading, almost as if we had proper packages in the language itself. Later I suppose we should add a dumper command that outputs a class-map based autoloader for prod.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423038", "body": "Yeah we should look at that before merging this PR. Although shipping class maps sounds a bit annoying to me. Got any link?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423105", "body": "Ah, I did message @ralphschindler earlier about Composer/ZF2 - maybe he can chime in here as well, but I'm sure he's busy with ZendCon.\n\nLooking at the blog post though, it seems like this wouldn't really prevent having the namespace mapping for autoloading in the composer.json, if they do accept to support Composer. \n\nAs for dropping their plans, maybe Ralph can say more, but I strongly doubt they would embrace Composer to that level, it's too early and too risky, and I can't blame them. We just need to move forward ASAP and hope it's not too late.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423244", "body": "Sure that could work. But if we do support class map, I'd prefer if we generate the map ourselves based on the PSR-0 info, scan that dir for any class that contains Symfony namespace, and generate one big map ourselves. Anyway that's not really the question at the moment imo.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423315", "body": "@Stof: Yeah, but we decided not to support them for now, because they're playing lone wolf and refusing to take part in the only standard the php community ever settled on. I'm not going to encourage this. Maybe later if we really see a need for it we can add class map support, but we need to get some experience using the autoloader first, and see if there are really that many PSR-0 offenders out there that have code worth using in the 21st century.\n\n@everzet: I missed that, but yeah that's how I envisioned it as well. Depending on Symfony there is a no-go for PR reasons. We can copy the code if needed, but it shouldn't be a dependency. Using Symfony stuff in Composer itself, if it's hidden in the composer.phar, isn't so dramatic. But the .phar shouldn't be required during the application runtime.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2497384", "body": "Closing, included in #61. If someone has time to review this stuff it'd be nice ;)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2497384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2497963", "body": "You're right that the echo calls have to go, they were mostly for debugging purposes. I think we should pass the ConsoleOutput instance around, and do this only in verbose mode. That way we make sure it's optional everywhere. If really needed we can build an abstraction, but I wouldn't add Monolog as a dependency just for this.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2497963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2500243", "body": "@naderman: There is a little issue here ;) For custom installers to be registered during install, or at all for that matter, we need to know which class in the package to run, like:\n\n``` yaml\n  \"extra\": {\n    \"class\": \"Symfony\\\\Bridge\\\\Composer\\\\BundleInstaller\",\n    \"file\": \"src/Symfony/Bridge/Composer/BundleInstaller.php\"\n  }\n```\n\nThe file entry would also be helpful otherwise we need to parse the autoload config at runtime, and that could prove complex.\n\nWhat this means though obviously is that this class can't have any dependency, it'll just get a vendor directory, the download manager and the local repository injected, and has to be able deal with that. I'm not sure this will be sufficient, but I guess it's the only way, if people need more they probably will have to wrap composer into their framework/app to provide custom logic.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2500243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503830", "body": "We _can_ rely on the autoload info, it's just annoying to load that stuff inside the installer, we might need the \"file\" entry as optional anyway for packages that aren't autoloadable. Sounds reasonable?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2503830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2504075", "body": "Sure we can do that too. I hope I can look into it this week.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2504075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2504634", "body": "Alright. I'll look at unifying the PEAR & PSR-0 stuff in the Sf2 class loader, if possible without breaking the (tagged as stable) API. Then I'll backport that in here and merge.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2504634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2543385", "body": "The \"phppear\" name above has really no meaning to composer, it's just for self-documentation purposes. The PEAR repository will read from the PEAR channel you give it, and create packages accordingly. The package name as defined by PEAR I believe is only `MDB2`, so that's what you should require, no `phppear/` prefix.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2543385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2543393", "body": "Also, I forgot to mention, this won't work until #61 is merged - which I hopefully will do tonight. If you want to try it anyway, use my fork's master branch in the meantime. \n\nYou can also use http://getcomposer.org/composer.phar to test stuff, it's built from my branch.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2543393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2548306", "body": "That is correct. You never have to know where packages are, you just add repositories, and it'll find the fittest package in any of them, according to some rules (the DefaultPolicy class).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2548306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2548779", "body": "No problem, I just merged #61 btw, so you can now try with the sources if you like instead of the phar. And feel free to stop by on irc.freenode.org `#composer-dev`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2548779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2550421", "body": "I just pushed a couple fixes for the PEAR repository. Try recompiling the phar, it should go further but here I'm hitting another issue that I can't really fix right now. You might be more lucky with another PEAR repository though.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2550421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569245", "body": "Yeah I am with @fabpot on this one. I didn't care enough to spend hours arguing it back then, but I prefer complete isolation of packages as well. \n\nAs for supporting one namespace in multiple dirs. It is already possible, but I don't think it's necessary in this case? Do you have an example?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569262", "body": "@fabpot: As @igorw said, it is compatible with PEAR. The implementation is more than sufficient imo. The fallbacks and such can easily be done in a second autoloader if that is required, but IMO it'd be just as easy to allow users to configure their namespaces in their composer.json file too. Usually you have only one namespace in the src/ dir anyway.\n\n@stof: You may have noticed that I used add() and register() which AFAIK are the proposed method names for the SplClassLoader (the new version, not the one in the RFC). The point being that we could just use the php one if it's available, once it's merged. Whatever happens with that I'll definitely keep our autoloader in sync. I want it to be a fallback implementation and that's it. Unless the one in core is really not made flexible enough, in which case we can still extend from it or wrap it to speed things up a bit.\n\nAnother thing regarding generating a map, I don't really like this too much because I don't think every single project should have an autoloader. It's just commodity stuff that should be given for free. What I would like to do though is have a command that will generate a hardcoded MapClassLoader-like thing on demand. For production this would be nice.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569271", "body": "Another note just so it's not forgotten, the autoloader contains some `dirname()` that should be adjusted if the vendor dir changes. \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569275", "body": "Thanks, I spotted it too late yesterday. I shouldn't merge or push stuff when I'm in a rush and have to leave.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571058", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571062", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571072", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571284", "body": "@bergie: What's the status on this? Can you try again with latest http://getcomposer.org/composer.phar ? If it's good close the issue please.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571534", "body": "Pushed a fix for those two errors (should be reflected in the phar at 22:15). Pinged @igorw so he fixes an error in Evenement's composer.json and releases a new version.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571609", "body": "Ok now it works for me here, and if I specify `\"evenement/evenement\": \"0.1.*\"` it installs the latest.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571901", "body": "Great, thanks\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2583662", "body": "IMO this is problematic. Imagine you want to patch a library you use in your project, and run its test suite. You need to reinstall it from source first, so you do `composer mark-dev lib` then `composer update` and you now have the lib, including it's `require-dev` deps installed in your project. You go and work in that lib, and then run the test suite, but it fails because the deps were installed in your project, so you have to do `composer install --dev` in there to get the deps again.\n\nThe only way I see around that is that in test suites bootstrappers, you always check for an autoload.php in `../vendor/.composer/autoload.php` AND if you're being wrapped, `../../../.composer/autoload.php`. This sort of sucks. Therefore I think binding dev-requires to the source install is not the right thing.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2583662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2587763", "body": "This is just for composer not packagist, and I couldn't figure out why those dependencies were there. Whenever symfony packages are ready I will try it to see if it really works without those other components.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2587763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2595314", "body": "Fair point, though I guess we could also just `str_replace('https', 'http', $url)` if openssl is missing.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2595314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2595477", "body": "True. A clear error message is probably best then.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2595477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2609268", "body": "@saltybeagle can we do anything to detect this early in the phar bootstrap and warn the user? This is a really nasty error.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2609268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2621472", "body": "Pushed a fix, I hope it's good enough :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2621472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2621618", "body": "@mikeyp: I unfortunately can't reproduce it here. Could you try the fix @stloyd suggested, and then run bin/compile to get a phar and try again with that? It'd be cool if we can advise users to do the right thing.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2621618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628326", "body": "Yeah, it's the plan to use the Process component or whatever to wrap exec stuff, but for now it works like that, and I don't like to mix huge refactoring with new features, it makes it hard to review. So if that's the only complaints I'll merge.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628587", "body": "If you use composer from source, you need to run `git submodule init && git submodule update` to initialize composer vendors. We will soon change it to use itself to handle its dependencies though.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628662", "body": "Oh, he did :p\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628739", "body": "Wait a second, the stuff shouldn't have been merged like that, it's all in a broken state right now, trying to fix ASAP :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2629000", "body": "Ok, please redownload the phar and try again. It should be fixed now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2629000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2632144", "body": "Relates to #70\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2632144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2642932", "body": "Updated with tests, feedback would be nice now :) /cc @naderman @bergie\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2642932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2643066", "body": "Depends on #58, also could be used by packagist if we build dist packages ourselves.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2643066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2643100", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2643100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2643103", "body": "duplicates #81\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2643103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2647073", "body": "I pushed some fixes that should allow you to get this working now. Please try with a new composer.phar. That being said the main pear repo is very slow to initialize because of the way the pear protocol works and the fact we don't have local caching yet.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2647073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2651068", "body": "Yup I noticed, waking up to 30 cron alert emails :) I'm on it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2651068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2651085", "body": "Ok you were on it before I was I see.  Thanks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2651085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2651091", "body": "../../ needs to be resolved every time a file/path is read, using an absolute path is faster AFAIK.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2651091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2653371", "body": "The lock file is internal info, and as such I don't think it's related to #76.\n\nI'm not sure why you say it's incorrect numbers, but it sounds to me like you didn't get the purpose of the lock file (which admittedly is not explained anywhere:). It keeps track of what was installed so that if you commit it, other people will have the exact same versions of all the dependencies.\n\nNow there is one thing that is incorrect, and that is that for -dev versions, it should ideally remember the exact revision/commit that was used. I think one way to fix it would be to store the dist/source entries for each package to be able to redownload the exact version. That means we need to take a slightly different path in InstallCommand though.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2653371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2653445", "body": "Yes but that's just the internal representation of the version. It could be fixed once we address #76, but I don't think it matters too much.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2653445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2654486", "body": "Fair enough. As said above, it can be fixed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2654486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2654514", "body": "No. Install installs the dependencies to their latest version OR to the versions specified in the lock file if it's present. Update gives you the latest version and writes down a new lock file. It's important to keep both paths.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2654514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2665055", "body": "Sorry @stloyd but I don't think this is necessary. We are not a giant project like Symfony with huge dependencies, we have a few dependencies, and I think it's reasonable to ask the people that want to work on it to install them.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2665055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2665218", "body": "dirname() just cuts off the last directory, `dirname(dirname(__DIR__))` is the equivalent of `__DIR__.'/../../'`, except that the former does not have to be resolved since it is an absolute real path.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2665218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2665293", "body": "No worry :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2665293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2694598", "body": "@stloyd: That's not necessary, it doesn't use bitbucket at all, it just assumes bitbucket URLs are Hg (which may not be correct though since they'll support Git IIRC).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2694598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2742521", "body": "It's an interesting method to build a composer repository out of a set of git repos, but indeed it is kinda weird the way it works now, because unless you disable the packagist repo it will duplicate it all.\n\nI agree with @stof that this doesn't really belong here, it would be cool to have a standalone project to manage small repositories (like packagist light). On a somewhat related note, I started patching Pirum to dump a packages.json at the same time as all the PEAR stuff, but not sure when I'll be done. \n\nNow I'm not sure if we want to extend Pirum some more after that so it supports Composer packages as well as PEAR ones as input, or just create a new project that would use Composer classes to do the work.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2742521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2744880", "body": "Merged thanks, sorry it took so long.. I'll try to look at your other PR when I have some more time but I don't know when that'll be:/\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2744880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2744986", "body": "If you like another easy one with regard to cleaning things up would be to #105 now that we have the Process dependency already. Also #106 (once I merged #104) would be nice.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2744986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745040", "body": "@stloyd: Status: merged.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745137", "body": "@stloyd: both of those are merged. I guess we can rely on the phar ext being enabled? Because then we should prefer tgz/tarballs dists to zip ones since PharData can handle those.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2757004", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2757004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2757016", "body": "You're not the first to be confused by this, although I find it surprising because it's exactly how the symfony vendor script worked (well, ok, it installed dependencies if they weren't specified in the deps.lock, but still same concept).\n\nIn any case, fixing #75 should help. Or we need to turn update into `composer install --update` or something, I don't know. Feedback from confused people would be appreciated :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2757016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2757044", "body": "Known issue with `replace` which is used extensively by symfony/symfony (/cc @naderman, please:)).\n\nAs for the CPU, it has to build up a shitload(tm) of objects for every version of every package in memory, and then scans the whole thing to resolve dependencies, so yeah it's not so surprising.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2757044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2774192", "body": "Duplicate of #78\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2774192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2775378", "body": "More or less. Now, what you describe as directory, composer refers to as repositories. It may be confusing because git repos are also called that, but let's assume those don't exist for now :)\n\nPackagist is a ComposerRepository, any URL that serves a packages.json is a ComposerRepository. This is the most efficient repository type to load since it contains package (release in your terms I guess) metadata, no parsing is required. A ComposerRepository could also be a local path, but I would advise against it because it's not very portable. The DNS is a pretty good abstraction layer for paths.\n\nAdding extra repositories is [already possible](http://packagist.org/about-composer) in Composer. Ideally, and eventually, I hope all opensource requirements will be able to be fulfilled by the packagist repository. Then the only problem left is closed source packages, for in-company usage.\n\nSo what we need IMO is a simple tool that will be like Packagist but easier to setup. Those that want can use Packagist of course and just secure it. All it needs to be able to do is take a set of repositories, parse them (just like Composer does right now) into a list of Packages `RepositoryManager::getRepositories() + RepositoryInterface::getPackages()`, and dump that file to a packages.json. Almost all the pieces are there in Composer to do that very easily. The only thing missing maybe user/pass authentication for the VcsRepository, ComposerRepository, and maybe the dist/source entries. Because of course your closed source code should be password or ssh-key protected.\n\nFor dist/source you could just skip that I guess, and assume that when a user tries to download the package he will be prompted for a password or whatever.\n\nFor Vcs/ComposerRepository, we need to be able to authenticate non-interactively, so that Toccata can be ran as a cron job, rebuilding the packages.json every now and then.\n\nThen for your company projects you would just end up with this in your composer.json, which imo is the easiest we can do:\n\n``` json\n{\n    \"repositories\": { \"acme\": { \"composer\": { \"url\": \"http://toccata.acme.com/\", \"password\": \"lala\" } } }\n    \"require\": {\n        \"oss/package\": \"1.0\",\n        \"acme/internal\": \"*\" \n    }\n}\n```\n\nThis way we push the complexity away from the project into the repositories, and since there are less repos than projects, this is good. If we can make creating secure repositories a breeze, even better.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2775378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776547", "body": "`user:pass@acme.com`, sure, that works for http auth, for git I guess it'll be fine indeed if you have a key set up, but otherwise I'm not sure how to do it. I guess we will need to see if anyone has problems like that.\n\nI didn't get your point that the Toccata code needs to be in Composer, I just think Toccata should use a lot of Composer code, but not especially be included in it. But yeah I think it's nice if it just a composer.json-like file with only repositories, that way it is familiar. I'm just not sure if we want it as part of composer or not. Dumping a packages.json is one thing, but there will also be the need to create zip archives on the fly etc at some point (I still need to add that for packagist), and then generating a small frontend to browse packages might be good too like what [Pirum](http://pear.pirum-project.org/) does. And at this point I really don't think it belongs in Composer anymore. \n\nSo I like to have the tools in Composer to allow anyone to crawl packages at runtime from their own composer.json, no need to setup an extra repo, but if you want to set one up, you can get that Toccata tool and do it easily. Makes sense?\n\nPackagist as default repo, right now you can disable it by having `\"packagist\": false` in your `repositories` key. I think it's easy enough. Anyway if it finds a package in one of your repositories that also exists in packagist, it will take the one from your repo, so it should never be an issue.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776704", "body": "Can you explain what's the use case for having the packages exactly installed in some other place? \n\nIn any case it sounds to me like this is a requirement of the application, and not of the packages, since packages can be installed in many different applications, they shouldn't have to know where they will be installed. The target dir is just there to solve the autoloading problem, it has nothing to do with filesystem cosmetics.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776762", "body": "Well as I said, you could generate a little frontend for it so people in your company can browse the company packages, you could add more options for authentication, and more features maybe that I'm not thinking about, but that would not fit inside Composer. But anyway yes we could still have a very basic version inside Composer I guess because it really doesn't need much code.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777032", "body": "@stof: Well we just needs to ignore the packagist repo in this Command, then it's ok to have it in Composer I think, at least as long as it stays simple like that. If it outgrows the project then I'm happy to move it out to Composer\\Toccata or whatever name for which no I don't have an idea yet.\n\nIn any case, this is not final, but I'll try to merge this and fix the Packagist issue this weekend.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777122", "body": "And if you change the path where the externals end up being checked out, can't you fix the autoloader or something so it still works?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777147", "body": "Yes the PR won't be merged as it is that's not the point, but we should still see if the use case makes sense and if we can address it some other way.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777235", "body": "Ok, but it sounds like you're trying to use Composer for something it was really not designed to do :)\n\nI'm not sure if there is any tool that can help you manage your externals, but I think instead of defining billions of inline packages just so you can checkout stuff with composer you might have an easier time just doing a shell script that executes the svn commands.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777288", "body": "What we could do to help, although I am really not sure this is a good idea but I'm just throwing it out there, is allow per-package configuration of the install dir in that composer option file, once #110 is merged. Then you would define that in the application and it wouldn't impact anyone else.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/511765", "body": "dumb http != http://. http still works, and afaik it's still better/faster than git protocol which is really old.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511768", "body": "As for old version of git.. how old is that? I think very very old, if github thought it didn't matter anymore.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511784", "body": "Because some people, including me and my shitty cygwin git, have problems with https. Some had problems with git protocol too I believe. That's why symfony-standard ended up with http://. Interop hell.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/511804", "body": "Ok, this is fixing it actually http://stackoverflow.com/questions/3777075/https-github-access/4454754#4454754 - just for the record. But let's keep it as is until someone complains..\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/512425", "body": "Yes, it doesn't suffer from the cygwin issues, but I use cygwin all the time for many other reasons so it's easier to grab git from there. Anyway it's solved now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/512425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/515655", "body": "Yeah this is temporary just as a way to make sure that @naderman fixes the problem I am having.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/515655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/589730", "body": "Yeah, copy paste ftw. Why mbstring? Well I just wanted to be sure that we don't blow up on non-ascii package names. Not that I think this should happen, but better safe than sorry, no?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/589730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590502", "body": "This isn't entirely true, the following outputs \u00f6 and then garbage (if saved/served as UTF8).\n\n```\necho utf8_encode(strtolower(utf8_decode('\u00d6')));\necho strtolower('\u00d6');\n```\n\nAll I want to make sure of is that the package names are case insensitive. I lowercase them when they're output in packagist, and I thought lowercasing the user input in composer would complete the loop. Now if we say we only support [a-z0-9_-] in package names, fine by me, but we need to make this explicit and not allow stuff to be mangled if it contains accented chars.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590670", "body": "Sorry to insist, but I'm not seeing the same here:\n\n```\necho ord(utf8_encode(strtolower(utf8_decode('\u00d6'))));\necho ord(strtolower('\u00d6'));\necho ord(utf8_encode(mb_strtolower(utf8_decode('\u00d6'), 'ISO-8859-1')));\necho ord(mb_strtolower('\u00d6', 'UTF-8'));\n```\n\nPrints 195 227 195 195\nPrinting the second byte of each gets you: 182 150 182 182\n\nIt seems to me that strtolower() with UTF8 input is touching things that go beyond the scope of ASCII chars, and therefore should not be relied upon since we do have UTF8.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590678", "body": "According to PHP docs, strtolower follows the locale, if I do `setlocale(LC_ALL, 'C')` before the other calls, then it works as you said, since with the C locale it doesn't try to be smart.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590690", "body": "Yeah but then we need to do that in Composer, or rely on mbstring, which works just fine with UTF8. I'm not sure why so much hate :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/590709", "body": "In my experience it has worked just fine for years, but anyway, I hope [this settles the case](https://github.com/composer/composer/commit/07e181c6ebde32ec49fd829e6aba4154f1a6f51d)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/590709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/619289", "body": "Copy paste mistake I guess, I will fix it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/619289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/626011", "body": "Fair enough, fixed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/626011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/733540", "body": "Nope, since SVN uses a mix of URLs and revisions to refer to an exact commit on one branch, the reference should contain the revision, for example: `/branches/1.x@3902`. Whenever someone works on a SvnDriver for the VcsRepository, I'll make sure that's in it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/733540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/766160", "body": "I guess I could, but it'll trigger an exception anyway if it's not there.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/766160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/812985", "body": "Good point, the restriction just came out of some stuff I was trying and\nthen later removed. Fixed in 2c367e7\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/812985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/891523", "body": "Fixed in e90a8dc4c9c8baa626dc78ebaceb1b1c96846f8c\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/891523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/970326", "body": "No this was to attempt to fix a problem on a system without GZ installed trying to _use_ the phar, not compile it. Seems it didn't help though, but I think it's still a relevant change unless the Phar extension can work with compressed phars without having gz installed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/970326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/970330", "body": "@saltybeagle: Can you confirm/infirm the above statement? (or @helgi?)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/970330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/970430", "body": "The thing is, not every user of composer has gz enabled, so we can't gzip the phar, no matter whether the machine building the phar has gzip or not.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/970430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/977190", "body": "I guess we could add support for \"Name <email> (homepage)\", and make email & homepage optional. /cc @justinrainbow\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/977190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1052710", "body": "Yeah travis told me already ;) I got a half-patch here, just one last issue and not sure why it fails. \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1052710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1101465", "body": "Because if the key isn't set, that throws a notice.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1101465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1128379", "body": "I don't think you got straight what the code here does - first it does a pass on all drivers with $deep = false, and then they should only do guesses based on URLs so it's fast, but they can not be too greedy. Assuming that http:// means svn is wrong, since git can be over http too, and I guess mercurial can too. If no driver found a match in this first pass, a second pass is made with $deep = true, and then they should attempt to connect to the server to identify with more certainty the type of repository. This is done in the lines below, and should take care of WebDAV servers that don't have `svn.` in their hostnames.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1128379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1129253", "body": "Yup, see my explanation above. The `static::isLocalUrl` check makes sure that file:// urls will be checked with `svn st` even in the first pass.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1129253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1129258", "body": "Yeah it's just that traditionally none of the test classes have authorship information so I removed it for consistency. No offense meant :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1129258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1129260", "body": "The whole method is anyway gone in a later commit so no more debugging needed ;)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1129260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1131454", "body": "At this point there isn't much left to mock or test, if the SvnUtil is properly tested and we add some functional tests we could just assume it's fine. Functional tests with svn are annoying though.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1131454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1131487", "body": "Well I did it with git just relying on the system git  https://github.com/composer/composer/blob/master/tests/Composer/Test/Repository/VcsRepositoryTest.php \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1131487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1168592", "body": "D'oh.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1168592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1171214", "body": "Fixed in 1cdae66f8fe0a1f2e5166f5d55ba35b7b2898e30\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1171214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1172317", "body": "Well the problem existed already before. This is a stupid API anyway, we should just have a getOutput at the end I guess and always capture unless a custom handler is given. But I leave that for a later refactoring\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1172317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1188225", "body": "fixed in 48ae8bf3ec2dc282efab14cd2827bd6117de6afc\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1188225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1192288", "body": "True true, will fix\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1192288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1192318", "body": "Not sure what your point is, but if you're worried about the `(1)`, that's because of a change I made in the installed repo format, it will go away after installing once.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1192318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1214374", "body": "It's kinda the same since JSON_ERROR_NONE is 0, but for the sake of correctness I fixed it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1214374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1226700", "body": "I skipped that because it would start failing after the first pass, but actually since we suppress the output that's just fine. Will fix ASAP.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1226700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1226740", "body": "There e364494286f09c4f7a87f6a9a1edd9754844bafc\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1226740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1232968", "body": "the last satis is optional. I guess I will add the .phar for clarity/consistency.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1232968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1241284", "body": "Strange, tested locally and it worked.. I'm on it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1241284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1241290", "body": "Ok fixed, sorry about that.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1241290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1392560", "body": "It's a known issue, but that code is in the process of being rewritten anyway so no biggie if travis fails for a bit. We can't use SplFixedArray under 5.3.4 because while it exists, it segfaults pretty easily.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1392560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1510399", "body": "I don't see the problem of using interfaces to tag special functionality, and I don't have time to refactor half the code everytime I need to fix a minor bug. Sorry if it doesn't please everyone, but there are many notions of what \"OOP\" is.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1510399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1531982", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1531982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1533891", "body": "Because this one is meant for validation errors in the schema, and it messed up the validate command output.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1533891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1538386", "body": "Well I just wanted a quick fix - it's not a great long term solution indeed. It's just a bit hard to have a code given that there may be many combined reasons for a failed resolution.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1538386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1592348", "body": "@palex-fpt: Can you take a quick look at this? I think it's correct but just wanted to have you look at it for safety.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1592348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1598296", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1598296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1608370", "body": "Is extension_loaded so expensive? I'd think it's just a hash lookup,\nwhich would be cheaper than the regex. It's not like this code runs a\nlot anyway.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1608370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1734915", "body": "There is a need: for clarity, to override the docs with details.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1734915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1734920", "body": "Well maybe it does, but it's better than breaking high traffic sites. If you have suggestions to fix it please open an issue.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1734920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1787438", "body": "the readlink or dirname?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1787438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1787465", "body": "So if you remove it all works fine?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1787465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1787549", "body": "Well could you try to edit the file generated by composer, remove -f and see if it works?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1787549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1875322", "body": "Kills how?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1875322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1875360", "body": "I doubt this would have anything to do with this commit. I did have a similar issue when trying phpunit via composer as well yesterday.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1875360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1880902", "body": "True true, I just kept it from the previous code. Will fix\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1880902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1932553", "body": "Not sure what you mean, but an extension version parsing failure does not cause any issue if you require it with `*`.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1932553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/1986342", "body": "You're right, I tend to forget about it, fixed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1986342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2044467", "body": "For safety yes sure, fixed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2044467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2086534", "body": "It might if you require a package with a wildcard and it only exists in dev yes, but most cases people require with dev-master or such which would whitelist it anyway. But I'll try to add some better reporting for the stability use case too, which would fix this issue.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2086534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2099214", "body": "Yes indeed, it started off as an ArrayIO and then got refactored but not\nrenamed. Fixed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2099214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2124815", "body": "Oh right, will fix.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2124815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2225094", "body": "thanks fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2225094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2260060", "body": "Thanks, fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2260060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2353832", "body": "Fixed it to use self:: now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2353832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2384456", "body": "I'd rather not, I know it will suck to have a failed build until 5.5 is made to pass, but I'd rather be reminded of it than shove failures under the rug.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2384456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2385141", "body": "Nope because the delimiters are `{}` and those are already meta characters in regexes so they are always escaped.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2385141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2385146", "body": "No, brackets are allowed. See http://ch1.php.net/manual/en/regexp.reference.delimiters.php\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2385146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2426220", "body": "The problem I encountered was that a script managed by composer's autoloader including another script also managed by composer (like phpunit does) meant the first one had priority, while it should be the other way.\n\nIf you specifically need one to take over, you can register it after including composer's autoloader and using prepend=true as well.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2426220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2427978", "body": "@lisachenko one idea.. store the $loader returned by the included\ncomposer autoload.php, then call ->unregister() then ->register() on it\nto send it back to the end of the autoloader chain. Like:\n\n```\n$loader = include 'vendor/autoload.php';\n$loader->unregister();\n$loader->register();\n```\n\nIt's a bit hackish but it will get you going for now. If you really need\na proper solution like a new option for this please open a new ticket.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2427978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2484717", "body": "The thing is I debugged it here and figured it was passing with 5.5 alpha2, but since travis tends to update VMs only every few weeks I thought it was an ok temporary solution. I just didn't want to hide the error without knowing what it was.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2484717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2485088", "body": "True, fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2485088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2633765", "body": "/cc @craue - saw your message on IRC and since you sent no PR in the meantime, I did it real quick.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2633765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2644365", "body": "@johnstevenson I added a test and \\n and others work just fine it seems (b4d691e46dc86239334bccdfc5c1edb30cbb0bb1). Maybe the issues you got were because you put the addcslashes at the wrong spot?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2644365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2644529", "body": "Well yes, that depends on what your shell gives in as input though.. e.g.:\n\n```\n$ composer config -g cache-files-dir \"a\nb\"\n$ composer config cache-files-dir\na\nb\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2644529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2667359", "body": "note the subtle providers vs provider wording ;) the plural form is destined to go away in time.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2667359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2667511", "body": "It makes it able to use older packagist installs yes, and packagist still supports older composer versions (see https://packagist.org/packages.json) because I don't want to cause an apocalypse :p Ultimately though I would like to remove support for this stuff in both, but I think we'll have to leave it for a few months at least for everyone to upgrade.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2667511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2667559", "body": "@johnstevenson thanks, applied the fixes in c7ed20e9d831b6f73d58a7da5d22de6b4c85c576\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2667559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2667595", "body": "Yes and no. It's still used for some things unfortunately (the show\ncommand for example). I have to go over the code once and slash\neverything using it though, because it's really slow now given the size\nof packagist.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2667595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2704078", "body": "/cc @bschussek:\n\n```\n$ composer show -p | grep -E '(ICU|intl)'\next-intl       1.1.0    The intl PHP extension\nlib-ICU        49.1.2   The ICU PHP library\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2704078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2704510", "body": "The access token is added on the fly in the RemoteFilesystem for all github requests so this should be alright.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2704510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2704721", "body": "Ah yes if you used it with the broken version it corrupted the cache,\nsorry forgot to mention that.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2704721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2705066", "body": "The casing is based on the names reported by PHP. Except in this case,\nbut I used uppercase since that's how it's usually written. That said\npackage names are case insensitive so requiring lib-icu will work too.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2705066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2705093", "body": "Yeah I realize, but I mean the others come straight from PHP names. This\nis the only one that's named explicitly in the code.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2705093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2952958", "body": "It's not about having require-dev or not. If you don't have any `packages-dev` here will be an empty array. This only fails if you use a lock file that was created _without_ dev information (either with update --no-dev, which is a dumb idea, or either with a normal update without --dev before this PR was merged). In this case we can't install the dev packages since we don't have them in the lock file. I'll however make sure that doesn't blow up if the composer.json has no require-dev, because probably in this case people didn't run update with --dev and have an outdated \"corrupt\" lock file.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2952958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3014799", "body": "Thanks, fixed in 1d5e3c5a0d66958e54db55fce7f85d991b99d28e \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3014799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3016017", "body": "True that. Will fix.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3016017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3016142", "body": "Ah man, the constant from hell strikes again.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3016142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3105843", "body": "`__DIR__` resolves to `phar://...` when running from the phar file.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3105843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3150117", "body": "Fixed in 976fe48a72c2ef6cfeda0e8991a232f210e49a9a, thanks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3150117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3392130", "body": "Sounds a bit overkill if it's the only place we need it, but we'll see.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3392130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3447416", "body": "D'oh yes, fixed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3447416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3447434", "body": "Nope, good catch.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3447434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3724336", "body": "Yes, but I think the first two options are really the only viable ones.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3724336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3740833", "body": "The explanation (which obviously not everyone has to agree with) is that when scanning a function, it's nice that when you see a return you know this path is over and there can't be some hidden line executing stuff after a long else block. I think it reduces the potential for bugs by making execution paths more explicit.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3740833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3837986", "body": "Well np, and sorry for merging without spotting that one :) (/cc @simensen just FYI)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3837986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3840325", "body": "Yeah it sounds like it could be related. Anyway I think for now it's not worth it to enable faster adapters. It makes things a wee bit faster on linux but it's already pretty fast there.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3840325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/comments/3840369", "body": "Nope there isn't. You can grab the last tagged release from the site, or\nyou can just clone Composer and run it from source. On the plus side,\nthe fact that there is no easy way to rollback means I try to be very\nresponsive when things break badly :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3840369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/141803", "body": "Also test classes typically don't have author annotations\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/141803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144346", "body": "Sorry to be so anal about all this, but what he meant by lowercase, was only that method names should be camelCased with first letter lower cased, now completely lowercased \u00e0 la `imagecreatefromjpeg()`, which is kind of unreadable :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/150902", "body": "Fixed in https://github.com/composer/composer/commit/92105007145688c89420d84ae40c0588edd29dcb\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/150902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/150903", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/150903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/185801", "body": "AFAIK to avoid potential conflicts (otherwise people would have to specify namespaces like: `\"Foo\\\\\": \"src/\"` with trailing backslash or _ for more safety, and that's a bit error prone. Maybe @igorw can say more.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/185801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/209170", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/209170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/209184", "body": "Fixed in GitHubDriver & GitDriver\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/209184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/212716", "body": "Can you just link to http://packagist.org/about directly?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/212716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220946", "body": "Broken indenting here.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220950", "body": "Indentation problem here too\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220955", "body": "Well this file is kind of a wreck indentation wise, I won't comment on each :) Other than that it looks good.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/223507", "body": "Yes, it's planned. Just not a high prio. First get things to work, then clean up, make it pretty, refactor, identify stuff that can be extracted in base classes or helper classes, etc.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/223507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225713", "body": "Please change that to `!= 0`. AFAIK negative return codes are also valid.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225717", "body": "You can just use `composer.phar` there, and it will write in the cwd. That being said this is not correct, since the phar could be anywhere. You probably should grab the file from InputInterface (or if that's not possible from $_SERVER['argv'][0] or 1 I guess).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225718", "body": "This should probably be trimmed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/234171", "body": "This should be `vendor-dir` for consistency with `install-dir`.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/234171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/234172", "body": "I'm happy if you add a block about configuration in the README, but I would like the basic \"howto\" to remain as simple as possible so please move that down in a separate block that we can extend with all config options.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/234172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/234177", "body": "I'm not sure about the filename yet, will think about it, but you can remove the `$basePath` stuff, just use `new JsonFile('config.json')` and it will read it in the current working directory.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/234177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237942", "body": "That's fine IMO but indeed keeping the $vendorPath for readability could be nice.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237944", "body": "Instead of realpath('') you can use getcwd() it shows the intent a bit better I think. This applies to other places where this is used too.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237950", "body": "I think this is still wrong because it depends on the current working directory of the script that includes the autoload, which can change, and is unknown by Composer anyway.\n\nThe correct way I believe would be to remove the `$vendor/` bit from the `$def['path']`, and then you can just use `dirname(__DIR__)` as `$baseDir`, since the autoload file is always in the `$vendor/.composer/` dir.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/242170", "body": "id isn't public, I don't think that can work?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/242170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/253100", "body": "I don't think this block should be nested, otherwise turning off recommends means turning off suggests, even if they were specifically enabled.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/253100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268567", "body": "I was talking of that indeed, and I had it working, but it did create some awkward potential issues with windows .bat files, and especially I ran into a wall with pirum refusing to do anything if it's not the main file executed (it can't be included by anything). The thing is that most bin scripts as of now are used by PEAR, and PEAR moves them in the bin dir, so I think none of them make much of an assumption about where they are located. They mostly use the current working directory instead. This is also true for all unix utils etc, it should not matter where they are.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268581", "body": "Well, it's the same situation in PEAR, see https://github.com/sebastianbergmann/phpunit/blob/3.6/phpunit.php for an example. `@php_bin@` is replaced by the php binary path during installation. Now as you can see, it does a check, and if `@php_bin@` was not replaced, in that if it adds itself to the include path to mimic the PEAR behavior. So it is fine for development, you just have to plan for it.\n\nI don't like it either, and for all I care I think we should just rely on having php in the PATH for this stuff, because that's what the PATH is for. The thing is that then you have the [batch file for windows](https://github.com/sebastianbergmann/phpunit/blob/3.6/phpunit.bat) that also uses `@bin_dir@` to reference the php file. \n\nWe could say that we just create a batch file on windows, and a shell script on nix, that do call the referenced binaries with php. But that limits us to php scripts as binaries. And it also means we have to use absolute paths in the batch files on windows, which is ok but annoying for people that commit those vendors (that still exists amongst svn users). It'll also force you to reinstall everything if you move the stuff somewhere else on disk, not cool.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268582", "body": "IMO not, because you want those to be easily accessible from the project root in the CLI. The classes in vendor/ are exposed to PHP via the autoloader we provide, and I believe those bins should be exposed to the user as well.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268589", "body": "Sure I don't mind changing the default, I guess it's a rare occurrence anyway that you do use stuff with bins except in global installs.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268602", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268867", "body": "The vendor dir is changed by one of the tests.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268868", "body": "True, copy paste fail.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/279422", "body": "If you set the default value at line 32, you shouldn't re-add it here imo.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/279422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/229581", "body": "The two lines above are unnecessary, you won't get warnings for undefined indices when assigning.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/229581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235687", "body": "No this just initializes the package if it's not there yet, but it will still override since the line below is not included in the if. And the initialization is useless, so it should go away :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235731", "body": "Yes but it is also useless. Line 48 will overwrite the package/version anyway, and it will create the array key if it's not there yet. Just try it :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/285961", "body": "Please always use `{` and `}` to wrap foreach bodies (same for ifs btw). It avoids problems later.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/285961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/282642", "body": "This is not right compared to what was done before. The bin-dir default value was set later so that it's default is always relative to the vendor dir, even if the vendor dir is modified by the user config. The way you do it it's gonna end up in vendor/bin, even if my vendor is libs/.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/282642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/282787", "body": "No no that was correct :) The env should take precedence, since it is the most context-dependent thing. Then config file, then default. Also please don't use @ if you can use isset :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/282787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335476", "body": "This change looks useless, isset() suppresses warnings across multiple depth levels without problem. Unless this is a bug in 5.3.2 which creates a segfault?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/356990", "body": "There should be a space after `function` for anonymous functions as per JSLint\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/356990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/356992", "body": "Ah, there is the space that got missing from above.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/356992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357011", "body": "yes, [JSLint](http://jslint.com), you said you were writing JS in PHP :) That said, I think it makes sense to clearly identify that this is not a function call, JS or not.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "Qclanton": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6549", "title": "Unable  to do \"composer update\" because \"SSL: Handshake timed out\"", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"yiisoft/yii2-app-basic\",\r\n    \"description\": \"Yii 2 Basic Project Template\",\r\n    \"keywords\": [\"yii2\", \"framework\", \"basic\", \"project template\"],\r\n    \"homepage\": \"http://www.yiiframework.com/\",\r\n    \"type\": \"project\",\r\n    \"license\": \"BSD-3-Clause\",\r\n    \"support\": {\r\n        \"issues\": \"https://github.com/yiisoft/yii2/issues?state=open\",\r\n        \"forum\": \"http://www.yiiframework.com/forum/\",\r\n        \"wiki\": \"http://www.yiiframework.com/wiki/\",\r\n        \"irc\": \"irc://irc.freenode.net/yii\",\r\n        \"source\": \"https://github.com/yiisoft/yii2\"\r\n    },\r\n    \"minimum-stability\": \"stable\",\r\n    \"require\": {\r\n        \"php\": \">=5.6\",\r\n        \"yiisoft/yii2\": \"~2.0.11\",\r\n        \"yiisoft/yii2-bootstrap\": \"~2.0.0\",\r\n        \"yiisoft/yii2-swiftmailer\": \"~2.0.0\",\r\n        \"yiisoft/yii2-jui\": \"*\",\r\n        \"ext-curl\": \"*\",\r\n        \"akeneo-labs/spreadsheet-parser\": \"*\",\r\n        \"authorizenet/authorizenet\": \">=1.9.3\",\r\n        \"spipu/html2pdf\": \"*\"\r\n    },\r\n    \"require-dev\": {\r\n        \"yiisoft/yii2-debug\": \"~2.0.0\",\r\n        \"yiisoft/yii2-gii\": \"~2.0.0\",\r\n        \"yiisoft/yii2-faker\": \"~2.0.0\",\r\n\r\n        \"codeception/base\": \"^2.2.3\",\r\n        \"codeception/verify\": \"~0.3.1\",\r\n        \"codeception/specify\": \"~0.4.3\"\r\n    },\r\n    \"config\": {\r\n        \"process-timeout\": 1800\r\n    },\r\n    \"scripts\": {\r\n        \"post-create-project-cmd\": [\r\n            \"yii\\\\composer\\\\Installer::postCreateProject\"\r\n        ]\r\n    },\r\n    \"extra\": {\r\n        \"yii\\\\composer\\\\Installer::postCreateProject\": {\r\n            \"setPermission\": [\r\n                {\r\n                    \"runtime\": \"0777\",\r\n                    \"web/assets\": \"0777\",\r\n                    \"yii\": \"0755\"\r\n                }\r\n            ],\r\n            \"generateCookieValidationKey\": [\r\n                \"config/web.php\"\r\n            ]\r\n        },\r\n        \"asset-installer-paths\": {\r\n            \"npm-asset-library\": \"vendor/npm\",\r\n            \"bower-asset-library\": \"vendor/bower\"\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nrequire.yiisoft/yii2-jui : unbound version constraints (*) should be avoided\r\nrequire.akeneo-labs/spreadsheet-parser : unbound version constraints (*) should be avoided\r\nrequire.authorizenet/authorizenet : unbound version constraints (>=1.9.3) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nThe \"https://bower.herokuapp.com/packages/bootstrap\" file could not be downloaded: SSL: Handshake timed out\r\nFailed to enable crypto\r\nfailed to open stream: operation failed\r\nhttps://bower.herokuapp.com/packages could not be fully loaded, package information was loaded from the local cache and may be out of date\r\nPackage operations: 2 installs, 13 updates, 0 removals\r\n  - Updating symfony/debug (v3.3.2 => v3.3.4): Downloading (100%)\r\n  - Updating symfony/console (v3.3.2 => v3.3.4): Downloading (failed)\r\nDownloading (100%)\r\n  - Updating symfony/dom-crawler (v3.3.2 => v3.3.4): Loading from cache\r\n  - Updating symfony/css-selector (v3.3.2 => v3.3.4): Loading from cache\r\n  - Updating symfony/browser-kit (v3.3.2 => v3.3.4): Downloading (failed)\r\nDownloading (failed)\r\nDownloading (100%)\r\n  - Updating symfony/yaml (v3.3.2 => v3.3.4): Downloading (failed)\r\nDownloading (failed)\r\nDownloading (failed)    Update failed (The \"https://api.github.com/repos/symfony/yaml/zipball/1f93a8d19b8241617f5074a123e282575b821df8\" file could not be downloaded: SSL: Handshake timed out\r\nFailed to enable crypto\r\nfailed to open stream: operation failed)\r\n    Would you like to try reinstalling the package instead [yes]? no\r\n\r\n\r\n  [Composer\\Downloader\\TransportException]\r\n  The \"https://api.github.com/repos/symfony/yaml/zipball/1f93a8d19b8241617f5074a123e282575b821df8\" file could not be downloaded: SSL: Handshake timed out\r\n  Failed to enable crypto\r\n  failed to open stream: operation failed\r\n```\r\n\r\nAnd I expected this to happen:\r\nUpdate and installation of necessary packages", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "airways": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6538", "title": "Unknown SSL protocol error in connection to getcomposer.org:443", "body": "Previously working Docker build script that relies on composer failing randomly. This is happening right now, while posting this ticket, and has happened periodically over the past week with no relevant changes on our side.\r\n\r\nMy `composer.json`:\r\n\r\n```json\r\n{\r\n  \"require\": {\r\n     \"ext-mbstring\": \"*\",\r\n     \"ext-gd\": \"*\",\r\n     \"ext-mcrypt\": \"*\"\r\n  }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n_Not possible to run._\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncurl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer && cd /var/www/ && composer install --no-plugins --no-scripts\r\n\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\ncurl: (35) Unknown SSL protocol error in connection to getcomposer.org:443\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nInstaller script should download composer.phar to the current directly.\r\n\r\nThis usually works, but we periodically run into a problem where this build step fails. This happens both locally and on AWS via Dockerfile running under Convox.\r\n\r\nWe have attempted to use composer.phar download directly from the site locally, but in this case the SSL errors prevent packages from being loaded by composer.\r\n\r\nIt looks like a server configuration error in getcomposer.org, possibly related to the server's system time since the error seems to resolve itself after an indeterminate period of time. Just a guess though.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fbourigault": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6537", "title": "Endless package upgrade.", "body": "The [php-http/mock-client](https://packagist.org/packages/php-http/mock-client) package upgrade endlessly from `v1.0.1` to `v1.0.1`.\r\n\r\nTo reproduce the problem, you can clone the [php-http/httplug-bundle](https://github.com/php-http/HttplugBundle) project and run `composer update`. Then, run `composer update` again and you will get the following output:\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 0 installs, 1 update, 0 removals\r\n  - Updating php-http/mock-client (v1.0.1 => v1.0.1): Loading from cache\r\nGenerating autoload files\r\n```\r\n\r\nRunning composer with PHP default configuration; cache disabled and ignoring cache (`COMPOSER_CACHE_DIR=/dev/null php -n ~/.local/bin/composer --ignore-platform-reqs update`) does not solve the problem.\r\n\r\nI can't reproduce the issue by running `composer require php-http/mock-client` and `composer update` in an empty directory.\r\n\r\n`composer diag` output:\r\n```\r\nChecking composer.json: OK\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\n`php -v output`:\r\n```\r\nPHP 7.1.7 (cli) (built: Jul  5 2017 15:58:06) ( NTS )\r\nCopyright (c) 1997-2017 The PHP Group\r\nZend Engine v3.1.0, Copyright (c) 1998-2017 Zend Technologies\r\n    with Zend OPcache v7.1.7, Copyright (c) 1999-2017, by Zend Technologies\r\n    with Xdebug v2.5.4, Copyright (c) 2002-2017, by Derick Rethans\r\n    with blackfire v1.16.2~linux-x64-non_zts71, https://blackfire.io, by Blackfireio Inc.\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6537/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wilsonld": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6536", "title": "How to enable composer on shared IIS windows server", "body": "I am trying to install the latest version of Richfilemanager which uses the composer package manager on a website which runs on a shared windows IIS server (Godaddy).  I installed composer on my PC and the Richfilemanager works on the local IIS but when I upload it to the remote shared server, it won't initialize.\r\n\r\nPreviously, I had problems running .json files on the shared IIS server as it wasn't set up to recognize them.  I don't have the ability to change the IIS settings,  but I modified the Web.config file to include the following coding:\r\n\r\n```\r\n<system.webServer>\r\n    <staticContent>\r\n         <mimeMap fileExtension=\".json\" mimeType=\"application/json\" />\r\n    </staticContent>\r\n</system.webServer>\r\n```\r\n\r\nSince I couldn't modify the server setup, this coding in the Web.config file did the trick.\r\n\r\nI am clueless as to how to enable the remote IIS server to handle the composer package manager.  Does anyone have information as to how to do it?\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Bubelbub": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6534", "title": "Composer hangs after last scripts execution", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"license\": \"proprietary\",\r\n    \"type\": \"project\",\r\n    \"autoload\": {\r\n        \"psr-4\": {\r\n            \"AppBundle\\\\\": \"src/AppBundle\"\r\n        },\r\n        \"classmap\": [\r\n            \"app/AppKernel.php\",\r\n            \"app/AppCache.php\"\r\n        ]\r\n    },\r\n    \"autoload-dev\": {\r\n        \"psr-4\": {\r\n            \"Tests\\\\\": \"tests/\"\r\n        },\r\n        \"files\": [\r\n            \"vendor/symfony/symfony/src/Symfony/Component/VarDumper/Resources/functions/dump.php\"\r\n        ]\r\n    },\r\n    \"require\": {\r\n        \"php\": \">=5.5.9\",\r\n        \"doctrine/doctrine-bundle\": \"^1.6\",\r\n        \"doctrine/orm\": \"^2.5\",\r\n        \"incenteev/composer-parameter-handler\": \"^2.0\",\r\n        \"sensio/distribution-bundle\": \"^5.0.19\",\r\n        \"sensio/framework-extra-bundle\": \"^3.0.2\",\r\n        \"symfony/monolog-bundle\": \"^3.1.0\",\r\n        \"symfony/polyfill-apcu\": \"^1.0\",\r\n        \"symfony/swiftmailer-bundle\": \"^2.3.10\",\r\n        \"symfony/symfony\": \"3.3.*\",\r\n        \"twig/twig\": \"^1.0||^2.0\"\r\n    },\r\n    \"require-dev\": {\r\n        \"sensio/generator-bundle\": \"^3.0\",\r\n        \"symfony/phpunit-bridge\": \"^3.0\"\r\n    },\r\n    \"scripts\": {\r\n        \"symfony-scripts\": [\r\n            \"Incenteev\\\\ParameterHandler\\\\ScriptHandler::buildParameters\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::buildBootstrap\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::clearCache\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installAssets\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::installRequirementsFile\",\r\n            \"Sensio\\\\Bundle\\\\DistributionBundle\\\\Composer\\\\ScriptHandler::prepareDeploymentTarget\"\r\n        ],\r\n        \"post-install-cmd\": [\r\n            \"@symfony-scripts\"\r\n        ],\r\n        \"post-update-cmd\": [\r\n            \"@symfony-scripts\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"sort-packages\": true\r\n    },\r\n    \"extra\": {\r\n        \"symfony-app-dir\": \"app\",\r\n        \"symfony-bin-dir\": \"bin\",\r\n        \"symfony-var-dir\": \"var\",\r\n        \"symfony-web-dir\": \"web\",\r\n        \"symfony-tests-dir\": \"tests\",\r\n        \"symfony-assets-install\": \"relative\",\r\n        \"incenteev-parameters\": {\r\n            \"file\": \"app/config/parameters.yml\"\r\n        },\r\n        \"branch-alias\": null\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: OK\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update -vvv\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file ./composer.json\r\nChecked CA file C:\\Users\\Bubelbub\\AppData\\Local\\Temp\\composer-cacert-e62a07e61e5870effa81b430e1900778943c228bd7da1259dd6a955ee2262b47.pem: valid\r\nExecuting command (C:\\xampp\\htdocs\\acme): git branch --no-color --no-abbrev -v\r\nExecuting command (C:\\xampp\\htdocs\\acme): git describe --exact-match --tags\r\nExecuting command (C:\\xampp\\htdocs\\acme): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (C:\\xampp\\htdocs\\acme): hg branch\r\nExecuting command (C:\\xampp\\htdocs\\acme): fossil branch list\r\nExecuting command (C:\\xampp\\htdocs\\acme): fossil tag list\r\nExecuting command (C:\\xampp\\htdocs\\acme): svn info --xml\r\nReading C:/Users/Bubelbub/AppData/Roaming/Composer/composer.json\r\nLoading config file C:/Users/Bubelbub/AppData/Roaming/Composer/composer.json\r\nReading C:\\xampp\\htdocs\\acme/vendor/composer/installed.json\r\nReading C:/Users/Bubelbub/AppData/Roaming/Composer/vendor/composer/installed.json\r\nRunning 1.4.2 (2017-05-17 08:17:52) with PHP 7.0.0 on Windows NT / 10.0\r\nLoading composer repositories with package information\r\nDownloading https://packagist.org/packages.json\r\nWriting C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/packages.json into cache\r\nUpdating dependencies (including require-dev)\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/p-provider-2013.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/p-provider-2014.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/p-provider-2015.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/p-provider-2016.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/p-provider-2016-10.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/p-provider-2017-01.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/p-provider-2017-04.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/p-provider-archived.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/p-provider-latest.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$lexer.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$polyfill-util.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-paragonie$random-compat.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$polyfill-php70.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$polyfill-php56.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$polyfill-mbstring.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$common.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-fig$link-util.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-psr$cache.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-psr$container.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-psr$link.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-psr$log.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-psr$simple-cache.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$polyfill-intl-icu.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-twig$twig.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$symfony.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$annotations.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$cache.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$collections.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$inflector.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$intl.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$icu.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$polyfill-php54.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-jdorn$sql-formatter.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$doctrine-bridge.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$doctrine-cache-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$dbal.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$console.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$dependency-injection.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$framework-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$doctrine-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$security-acl.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$debug.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$asset.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$config.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$event-dispatcher.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$filesystem.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$http-foundation.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$http-kernel.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$routing.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$security-core.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$security-csrf.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$stopwatch.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$templating.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$translation.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$finder.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$class-loader.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$cache.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$polyfill-php55.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$polyfill-apcu.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-ircmaxell$password-compat.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$instantiator.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-doctrine$orm.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$yaml.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-incenteev$composer-parameter-handler.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-composer$ca-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-sensiolabs$security-checker.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$process.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-sensio$distribution-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-sensio$framework-extra-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-monolog$monolog.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$monolog-bridge.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$monolog-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-swiftmailer$swiftmailer.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$swiftmailer-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-sensio$generator-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$phpunit-bridge.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$security.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$property-access.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-egulias$email-validator.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-phpdocumentor$reflection-docblock.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-phpdocumentor$type-resolver.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-phpunit$phpunit.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$browser-kit.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$css-selector.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$debug-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$dom-crawler.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$dotenv.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$expression-language.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$form.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$inflector.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$ldap.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$options-resolver.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$property-info.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$proxy-manager-bridge.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$security-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$security-guard.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$security-http.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$serializer.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$twig-bridge.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$twig-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$validator.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$var-dumper.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$web-link.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$web-profiler-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$web-server-bundle.json from cache\r\nReading C:/Users/Bubelbub/AppData/Local/Composer/repo/https---packagist.org/provider-symfony$workflow.json from cache\r\nResolving dependencies through SAT\r\nDependency resolution completed in 1.078 seconds\r\nAnalyzed 10067 packages to resolve dependencies\r\nAnalyzed 557869 rules to resolve dependencies\r\nNothing to install or update\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.001 seconds\r\nReading C:\\xampp\\htdocs\\acme/vendor/composer/installed.json\r\nReading ./composer.lock\r\nGenerating autoload files\r\n> post-update-cmd: @symfony-scripts\r\n> symfony-scripts: Incenteev\\ParameterHandler\\ScriptHandler::buildParameters\r\nUpdating the \"app/config/parameters.yml\" file\r\n> symfony-scripts: Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::buildBootstrap\r\n> symfony-scripts: Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::clearCache\r\n\r\n // Clearing the cache for the dev environment with debug true\r\n\r\n [OK] Cache for the \"dev\" environment (debug=true) was successfully cleared.\r\n\r\n> symfony-scripts: Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::installAssets\r\n\r\n Trying to install assets as relative symbolic links.\r\n\r\n -- -------- ----------------\r\n     Bundle   Method / Error\r\n -- -------- ----------------\r\n\r\n [OK] All assets were successfully installed.\r\n\r\n> symfony-scripts: Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::installRequirementsFile\r\n> symfony-scripts: Sensio\\Bundle\\DistributionBundle\\Composer\\ScriptHandler::prepareDeploymentTarget\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nI expect that the composer send an exit signal or something else that it not hangs on something where nothing happens.\r\n\r\nI read the issues #1959 and #2310 but I think this issue is not related to them. In this issues it hangs on other things.\r\n\r\nThanks in Advance for ideas!", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "montsamu": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6519", "title": "Need to be able to disable ipv6 when composer creates remote stream context", "body": "I am a non-admin user on a system which is slightly misconfigured, in that wget works to download http://packagist.org/packages.json but curl times out, as does composer install/create-project/etc. Unfortunately, as a non-admin user, the ipv6 workarounds are not available to me. (I can't fix the IPV6 setup, and I can't sudo or make temporary changes.) However, curl -4 (forcing ipv4) works, leading me to believe that the socket context used in composer's RemoteFilesytem and StreamContextFactory needs also to be able to force ipv4, which I confirmed by patching composer locally. Unfortunately there is not a \"global\" way to do this in PHP config or runtime settings (well, there is, via stream_context_set_default, but composer does not read the default before creating its own options...), so it requires patching composer source to work. Ideally, a general config setting for \"default context factory\" would be ideal, so I could set:\r\n\r\n(array('socket' => array('bindto' => '0:0'))\r\n\r\nOr defined as a JSON syntax or whatever, as part of the default stream context. Alternately, it is possible that composer might be able to pick up a context I set (e.g. with an auto prepend script calling stream_context_set_default) via stream_context_get_default, but that I haven't tested, only that setting this additional context does in fact allow composer to reach packagist and download packages.json, and frankly adding a composer config for this seems much better than using a prepend script.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6519/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PatrickRose": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6514", "title": "Pear binaries conflict when pear is updated", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"temp/temp\",\r\n    \"description\": \"tmp\",\r\n    \"license\": \"proprietary\",\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"pear\",\r\n            \"url\": \"https://pear.php.net\"\r\n        }\r\n    ],\r\n    \"require\":\r\n    {\r\n        \"pear-pear.php.net/pear\": \"1.10.3\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: OK\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command (after updating pear to 1.10.5):\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nInitializing PEAR repository https://pear.php.net\r\nUpdating dependencies (including require-dev)\r\nPackage operations: 0 installs, 1 update, 0 removals\r\n  - Removing pear-pear.php.net/pear (1.10.3)\r\n  - Installing pear-pear.php.net/pear (1.10.5): Downloading (100%)         \r\n    Skipped installation of bin bin/pear for package pear-pear.php.net/pear: name conflicts with an existing file\r\n    Skipped installation of bin bin/pecl for package pear-pear.php.net/pear: name conflicts with an existing file\r\n    Skipped installation of bin bin/peardev for package pear-pear.php.net/pear: name conflicts with an existing file\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nThe skipped installation messages shouldn't happen I don't think?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "robsch": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6513", "title": "Imrove message when package was not found", "body": "In combination with satis I tried to create a project. I've got the message `Could not find package myCompany/myPackage with stability stable. `. Since I've also just created a stable version 1.0.0 I was wondering why composer did not find the stable version. Took me some time to find out that it did not find the package at all. (I think my mistake was that I thought composer would evaluate an existing composer.json in the directory which has a repository declaration for the the satis server - specifying it as a command parameter is the correct approch - not sure). \r\n\r\nSo you might improve the message to something like: \r\n* Package not found at all: `Could not find package myCompany/myPackage in any version.` or `Could not find package myCompany/myPackage  in any version at repository http://some.satis.url .`\r\n* Package found without needed stability: `Found package myCompany/myPackage, but not with stability stable.` \r\n\r\nOr something like that.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spekary": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6497", "title": "update is installing old version of dev-master", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"qcubed/app-starter\",\r\n  \"description\": \"QCubed application starter template\",\r\n  \"keywords\": [\"qcubed\", \"framework\", \"project template\"],\r\n  \"homepage\": \"http://qcu.be/\",\r\n  \"type\": \"project\",\r\n  \"license\": \"MIT\",\r\n  \"support\": {\r\n    \"issues\": \"https://github.com/qcubed/application/issues?state=open\",\r\n    \"source\": \"https://github.com/qcubed/application\"\r\n  },\r\n  \"require\": {\r\n    \"php\": \">=5.5.0\",\r\n    \"qcubed/composer\": \"dev-qcubed4\",\r\n    \"qcubed/common\": \"dev-master\",\r\n    \"qcubed/application\": \"dev-master\",\r\n    \"qcubed/orm\": \"dev-master\",\r\n    \"qcubed/i18n\": \"dev-master\",\r\n    \"qcubed/cache\": \"dev-master\",\r\n    \"qcubed/phonetextbox\": \"dev-master\",\r\n    \"qcubed/bootstrap\": \"dev-master\",\r\n    \"ezyang/htmlpurifier\": \"^4.9\",\r\n    \"sunra/php-simple-html-dom-parser\": \"^1.5\",\r\n    \"twbs/bootstrap\": \"^3.3\",\r\n    \"theseer/fdomdocument\": \"^1.6\",\r\n    \"enyo/dropzone\": \"^5.1\"\r\n  },\r\n  \"require-dev\" : {\r\n    \"phpunit/phpunit\": \"4.8.*\"\r\n  },\r\n  \"suggest\": {\r\n    \"qcubed/bootstrap\": \"dev-master\"\r\n  },\r\n  \"minimum-stability\": \"dev\"\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nCurrent working directory: '/Sites/gamesafe'\r\nChecking composer.json: WARNING\r\nrequire.qcubed/common : unbound version constraints (dev-master) should be avoided\r\nrequire.qcubed/application : unbound version constraints (dev-master) should be avoided\r\nrequire.qcubed/orm : unbound version constraints (dev-master) should be avoided\r\nrequire.qcubed/i18n : unbound version constraints (dev-master) should be avoided\r\nrequire.qcubed/cache : unbound version constraints (dev-master) should be avoided\r\nrequire.qcubed/phonetextbox : unbound version constraints (dev-master) should be avoided\r\nrequire.qcubed/bootstrap : unbound version constraints (dev-master) should be avoided\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update \r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n  - Installing qcubed/common (dev-master eb93e85): Cloning eb93e852ca from cache\r\n```\r\nWhich is 10 commits back from the latest\r\n\r\nAnd I expected this to happen:\r\n\r\n```\r\nInstalling qcubed/common (dev-master baadc50): Cloning baadc505cd from cache\r\n```\r\nWhich is the latest\r\n\r\nSome other notes:\r\n\r\nMy ```composer``` command is actually this:\r\n```\r\n #!/bin/sh\r\n export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin\r\n echo \"Current working directory: '\"$(pwd)\"'\"\r\n docker run --rm -v $(pwd):/app -v ~/.ssh:/root/.ssh composer $@\r\n```\r\n\r\nWhen I do a new install, it gets the correct, latest version of dev-master\r\n\r\nI have been doing direct git commands without using composer, so something I did got it into this state where it is not getting the very latest version of master.\r\n\r\nOther repos I have exhibit similar behavior, but they get a different, older version. This particular repo gets one 10 commits back from the latest, but another repo gets a version 4 commits back from latest.\r\n\r\nLooking at the -vvv output, which I can post but is quite lengthy, it appears that the update command is downloading the correct information from packagist. Why it is still installing an older version, I cannot figure out.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Toflar": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6476", "title": "Issue with --prefer-lowest", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"foobar/test\",\r\n    \"type\": \"project\",\r\n    \"require\": {\r\n        \"friendsofsymfony/http-cache\": \"^2.0\",\r\n        \"php-http/guzzle6-adapter\": \"^1.1\"\r\n    }\r\n}\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update --prefer-lowest\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - Installation request for friendsofsymfony/http-cache ^2.0 -> satisfiable by friendsofsymfony/http-cache[2.0.0].\r\n    - friendsofsymfony/http-cache 2.0.0 requires php-http/client-common ^1.1.0 -> satisfiable by php-http/client-common[1.3.0, 1.5.0, v1.1.0, v1.2.0, v1.2.1, v1.4.0, v1.4.1, v1.4.2].\r\n    - Conclusion: don't install php-http/client-common v1.4.2\r\n    - Conclusion: don't install php-http/client-common v1.4.1\r\n    - Conclusion: don't install php-http/client-common v1.4.0\r\n    - Conclusion: don't install php-http/client-common 1.3.0\r\n    - Conclusion: don't install php-http/client-common v1.2.1\r\n    - Conclusion: don't install php-http/client-common v1.2.0\r\n    - Conclusion: don't install php-http/client-common v1.1.0\r\n    - php-http/client-common 1.5.0 requires php-http/message ^1.2 -> satisfiable by php-http/message[1.5.0, v1.2.0, v1.3.0, v1.3.1, v1.4.0, v1.4.1].\r\n    - php-http/message 1.5.0 requires php-http/message-factory ^1.0.2 -> satisfiable by php-http/message-factory[v1.0.2].\r\n    - php-http/message v1.2.0 requires php-http/message-factory ^1.0.2 -> satisfiable by php-http/message-factory[v1.0.2].\r\n    - php-http/message v1.3.0 requires php-http/message-factory ^1.0.2 -> satisfiable by php-http/message-factory[v1.0.2].\r\n    - php-http/message v1.3.1 requires php-http/message-factory ^1.0.2 -> satisfiable by php-http/message-factory[v1.0.2].\r\n    - php-http/message v1.4.0 requires php-http/message-factory ^1.0.2 -> satisfiable by php-http/message-factory[v1.0.2].\r\n    - php-http/message v1.4.1 requires php-http/message-factory ^1.0.2 -> satisfiable by php-http/message-factory[v1.0.2].\r\n    - Conclusion: don't install php-http/message-factory v1.0.2\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nI expected it to resolve to a valid set of dependencies :-) Because of `--prefer-lowest` I think it should take `php-http/message v1.2.0`, of which Composer tells me `php-http/message v1.2.0 requires php-http/message-factory ^1.0.2 -> satisfiable by php-http/message-factory[v1.0.2]`. However, the conclusion is `Conclusion: don't install php-http/message-factory v1.0.2` even though it is satisfiable?\r\n\r\nWhen I run `composer update`, everything runs fine and all dependencies are resolved. Funnily enough, when I run `composer update` first, and the `vendor` dir exists (specifically speaking, the `installed.json`), all of a sudden `composer update --prefer-lowest` works too!\r\n\r\nI could temporarily fix it by using this `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"foobar/test\",\r\n    \"type\": \"project\",\r\n    \"require\": {\r\n        \"friendsofsymfony/http-cache\": \"^2.0\",\r\n        \"php-http/guzzle6-adapter\": \"^1.1\"\r\n    },\r\n    \"require-dev\": {\r\n        \"php-http/message-factory\": \"^1.0.2\"\r\n    }\r\n}\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6476/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6284", "title": "Improve memory usage a little by not creating new Link objects", "body": "I was able to shave off only a litte memory usage (about 2% on average) by this change.\r\nAt first I did not consider it to be worth discussing about because the improvements are not significant enough (well, a penny saved is a penny earned but still). However, I still decided to make the changes public because at the end of the day this is what open source is all about. Maybe someone can improve the impact even more based on my idea \ud83d\ude04 \r\n\r\nSo the idea behind it is that most `Rule` instances get a `$reasonData` assigned which mostly is an instance of `Link` or `CompletePackage`. While debugging a little, I noticed that even though a big amount of `Link` instances are actually of equal content, they are not the same (they do not share the same object hash). They are different objects because every `Package` creates its `Link` objects (`requires`,  `conflicts` etc.) when it is created. So the `Link` objects are not shared across memory.\r\nHence, I thought by making sure to not create them but instead reference to an already created one if it is the same should decrease memory usage. This seems to be true but I was expecting an even bigger impact. Now somebody can tell me maybe why the impact is not bigger or make it bigger based on my idea \ud83d\ude0b ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "loiclavoie": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6468", "title": "NFS conflict with composer", "body": "When I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n- Installing google/apiclient-services (dev-master e049d8c): Downloading (100%)\r\n    Failed to download google/apiclient-services from dist: Could not delete /home/vagrant/Code/Project/vendor/google/apiclient-services/.nfs0000000000014fb500000001:\r\n    Now trying to download from source\r\n\r\n```\r\n\r\nThis problem seem to be cause because something, in composer, tries to delete everyfile within the folder. NFS (used to share files accross network), put files with the format .nfsXXX to mark folder to be deleted.\r\n\r\nComposer should not attempt to delete these system file AND should wait a couple of microsecond so that the files get correctly delete over network. I tried to change the nfs to be async, but unfortunately didn't work. \r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6468/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joachim-n": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6452", "title": "'why' and 'why-not' commands don't work for packages that are being prevented from being installed", "body": "I am getting this error when I do composer update:\r\n\r\n```\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - The requested package league/csv could not be found in any version, there may be a typo in the package name.\r\n\r\nPotential causes:\r\n - A typo in the package name\r\n - The package is not available in a stable-enough version according to your minimum-stability setting\r\n```\r\n\r\nSo I tried both 'why' and 'why-not' to get a better understanding of the problem. In particular, I wanted to understand the chain of requirements that is requesting this package.\r\n\r\nBut both of these commands fail, apparently because the package isn't yet installed:\r\n\r\n```\r\n> composer why -r -t league/csv\r\n\r\n\r\n  [InvalidArgumentException]\r\n  Could not find package \"league/csv\" in your project\r\n```\r\n\r\n```\r\n> composer why-not -r -t league/csv\r\n\r\n\r\n  [InvalidArgumentException]\r\n  Could not find package \"league/csv\" in your project\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/6407", "title": "'rejected by your constraint' error message should show where the constraint comes from", "body": "When I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n  Problem 1\r\n    - The requested package foo/bar ... exists as foo/bar[...] but these are rejected by your constraint.\r\n```\r\n\r\nThe package foo/bar isn't mentioned in my composer.json, therefore it must be getting requested by something else.\r\n\r\nHowever, I don't see how I can discover what is causing the problem. The error message should give an indication of this.\r\n\r\nDoing 'composer show --tree foo/bar' says:\r\n\r\n```\r\n  [InvalidArgumentException]\r\n  Package foo/bar not found\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SemperAndroid": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6437", "title": "Composer Install Fails", "body": "Apache 2.4\r\nphp 5.6.3\r\nBluehost VPS\r\n\r\nI haver run many variants of these commands with no luck:\r\ncurl -s getcomposer.org/installer | php -d detect_unicode=Off\r\ncurl -sS https://getcomposer.org/installer | php\r\n\r\nThey report no errors but, they don't download composer either.\r\n\r\nSo I tried this command\r\nwget https://getcomposer.org/composer.phar | php\r\n\r\nand it downloaded a file called composer.phar\r\n\r\nSo then I ran this command because I wanted it to be a global install\r\nmv composer.phar /usr/bin/composer\r\n\r\nand it moved the file to /usr/bin but the permissions were bad. \r\nls -l /usr/bin/composer\r\n-rw-r--r-- 1 root root 1843210 May 21 09:16 /usr/bin/composer\r\n\r\nSo I set the permissions\r\nchmod 777 /usr/bin/composer\r\nroot@xxxxx.com [ABCXYZ]# ls -l /usr/bin/composer\r\n-rwxrwxrwx 1 root root 1843210 May 21 09:16 /usr/bin/composer\r\n\r\nI then tried to see if composer was installed\r\n/usr/bin/composer -V\r\n\r\nWhich resulted in nothing happening\r\n\r\nSo then I ran this\r\nphp /usr/bin/composer -V\r\n\r\nand once again, nothing happened.  No errors, nothing...\r\n\r\nWhat must I do to get composer installed on my Bluehost VPS running CentOS Apache 2.4?\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dserodio": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6427", "title": "Composer is not trusting locally installed CAs on macOS", "body": "On macOS, to add custom CAs to openssl (installed via homebrew), one should copy the .pem file to `/usr/local/etc/openssl/certs` and run `/usr/local/opt/openssl/bin/c_rehash`, which creates a symlink to the certificate under `/usr/local/etc/openssl/certs` ([source](https://github.com/Homebrew/homebrew-core/blob/master/Formula/openssl.rb#L103-L108)).\r\n\r\nAt $WORK, we have an internal CA which is used to sign the SSL certificate used in our local composer repository (we use Artifactory). After installing our company's CA to the Mac's Keychain and also adding it to /usr/local/etc/openssl/certs and creating the appropriate symlink with c_rehash, every tool (openssl, curl, etc.) and language (PHP, Ruby, Python) recognize this CA, except for composer.\r\n\r\nPHP itself does recognize said certificates:\r\n\r\n```shell\r\n$ php --version\r\nPHP 5.6.30 (cli) (built: Mar 11 2017 09:56:18)\r\nCopyright (c) 1997-2016 The PHP Group\r\nZend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies\r\n$ php -r \"file_get_contents('https://composer.intranet');\"\r\n$\r\n```\r\n\r\nHowever, composer does not recognize the certificates installed this way because it only reads the default bundle at `/usr/local/etc/openssl/cert.pem` (see the output from `composer install --prefer-dist -vvv` below).\r\n\r\n\r\n\r\n----\r\n\r\nMy `composer.json`:\r\n\r\n```json\r\n{\r\n    \"repositories\": [\r\n        {\"type\": \"composer\", \"url\": \"https://composer.intranet\"},\r\n        {\"packagist\": false}\r\n    ]\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com rate limit: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.4.1 => 1.4.2)\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install --prefer-dist -vvv\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nReading ./composer.json\r\nLoading config file ./composer.json\r\nChecked CA file /usr/local/etc/openssl/cert.pem: valid\r\nExecuting command (/private/tmp/composer-test): git branch --no-color --no-abbrev -v\r\nExecuting command (/private/tmp/composer-test): git describe --exact-match --tags\r\nExecuting command (/private/tmp/composer-test): git log --pretty=\"%H\" -n1 HEAD\r\nExecuting command (/private/tmp/composer-test): hg branch\r\nExecuting command (/private/tmp/composer-test): fossil branch list\r\nExecuting command (/private/tmp/composer-test): fossil tag list\r\nExecuting command (/private/tmp/composer-test): svn info --xml\r\nFailed to initialize global composer: Composer could not find the config file: /Users/dserodio/.composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /private/tmp/composer-test/vendor/composer/installed.json\r\nRunning 1.4.1 (2017-03-10 09:29:45) with PHP 5.5.38 on Darwin / 15.6.0\r\nLoading composer repositories with package information\r\nDownloading https://composer.intranet/packages.json\r\nDownloading https://composer.intranet/packages.json\r\nDownloading https://composer.intranet/packages.json\r\n\r\n\r\n  [Composer\\Downloader\\TransportException]\r\n  The \"https://composer.intranet/packages.json\" file could not be downloaded: SSL operation failed with code 1. OpenSSL Error messages:\r\n  error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\r\n  Failed to enable crypto\r\n  failed to open stream: operation failed\r\n\r\n\r\nException trace:\r\n () at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Util/RemoteFilesystem.php:482\r\n Composer\\Util\\RemoteFilesystem->get() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Util/RemoteFilesystem.php:101\r\n Composer\\Util\\RemoteFilesystem->getContents() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Repository/ComposerRepository.php:661\r\n Composer\\Repository\\ComposerRepository->fetchFile() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Repository/ComposerRepository.php:479\r\n Composer\\Repository\\ComposerRepository->loadRootServerFile() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Repository/ComposerRepository.php:258\r\n Composer\\Repository\\ComposerRepository->hasProviders() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/DependencyResolver/Pool.php:99\r\n Composer\\DependencyResolver\\Pool->addRepository() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Installer.php:376\r\n Composer\\Installer->doInstall() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Installer.php:223\r\n Composer\\Installer->run() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Command/InstallCommand.php:119\r\n Composer\\Command\\InstallCommand->execute() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/vendor/symfony/console/Command/Command.php:267\r\n Symfony\\Component\\Console\\Command\\Command->run() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/vendor/symfony/console/Application.php:846\r\n Symfony\\Component\\Console\\Application->doRunCommand() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/vendor/symfony/console/Application.php:191\r\n Symfony\\Component\\Console\\Application->doRun() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Console/Application.php:227\r\n Composer\\Console\\Application->doRun() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/vendor/symfony/console/Application.php:122\r\n Symfony\\Component\\Console\\Application->run() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/src/Composer/Console/Application.php:100\r\n Composer\\Console\\Application->run() at phar:///usr/local/Cellar/composer/1.4.1/libexec/composer.phar/bin/composer:54\r\n require() at /usr/local/Cellar/composer/1.4.1/libexec/composer.phar:24\r\n\r\ninstall [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--no-custom-installers] [--no-autoloader] [--no-scripts] [--no-progress] [--no-suggest] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--apcu-autoloader] [--ignore-platform-reqs] [--] [<packages>]...\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ooples": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6423", "title": "SSL: Handshake timed out   Failed to enable crypto   failed to open stream: operation failed", "body": "I try to run composer update both as root user and my normal user and both are giving me this same exact error message all of a sudden and this composer update command was working just fine a few days ago\r\n\r\n**Trying command as root:**\r\n[root@db html]# composer update -vvv\r\nReading ./composer.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem: valid\r\nFailed to initialize global composer: Composer could not find the config file: /root/.config/composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/html/vendor/composer/installed.json\r\nLoading plugin MagentoHackathon\\Composer\\Magento\\Plugin\r\nactivate magento plugin\r\nRunning 1.4.1 (2017-03-10 09:29:45) with PHP 7.0.19 on Linux / 3.14.32-xxxx-grs-ipv6-64\r\nDo not run Composer as root/super user! See https://getcomposer.org/root for details\r\nLoading composer repositories with package information\r\nDownloading https://repo.magento.com/packages.json\r\nDownloading https://repo.magento.com/packages.json\r\nDownloading https://repo.magento.com/packages.json\r\n\r\n\r\n  [Composer\\Downloader\\TransportException]\r\n  The \"https://repo.magento.com/packages.json\" file could not be downloaded: SSL: Handshake timed out\r\n  Failed to enable crypto\r\n  failed to open stream: operation failed\r\n\r\n\r\nException trace:\r\n () at /usr/share/php/Composer/Util/RemoteFilesystem.php:482\r\n Composer\\Util\\RemoteFilesystem->get() at /usr/share/php/Composer/Util/RemoteFilesystem.php:101\r\n Composer\\Util\\RemoteFilesystem->getContents() at /usr/share/php/Composer/Repository/ComposerRepository.php:661\r\n Composer\\Repository\\ComposerRepository->fetchFile() at /usr/share/php/Composer/Repository/ComposerRepository.php:479\r\n Composer\\Repository\\ComposerRepository->loadRootServerFile() at /usr/share/php/Composer/Repository/ComposerRepository.php:258\r\n Composer\\Repository\\ComposerRepository->hasProviders() at /usr/share/php/Composer/DependencyResolver/Pool.php:99\r\n Composer\\DependencyResolver\\Pool->addRepository() at /usr/share/php/Composer/Installer.php:376\r\n Composer\\Installer->doInstall() at /usr/share/php/Composer/Installer.php:223\r\n Composer\\Installer->run() at /usr/share/php/Composer/Command/UpdateCommand.php:158\r\n Composer\\Command\\UpdateCommand->execute() at /usr/share/php/Symfony/Component/Console/Command/Command.php:259\r\n Symfony\\Component\\Console\\Command\\Command->run() at /usr/share/php/Symfony/Component/Console/Application.php:849\r\n Symfony\\Component\\Console\\Application->doRunCommand() at /usr/share/php/Symfony/Component/Console/Application.php:193\r\n Symfony\\Component\\Console\\Application->doRun() at /usr/share/php/Composer/Console/Application.php:227\r\n Composer\\Console\\Application->doRun() at /usr/share/php/Symfony/Component/Console/Application.php:124\r\n Symfony\\Component\\Console\\Application->run() at /usr/share/php/Composer/Console/Application.php:100\r\n Composer\\Console\\Application->run() at /usr/bin/composer:55\r\n\r\n**Trying command as normal user:**\r\nbash-4.2$ composer update -vvv\r\nReading ./composer.json\r\nLoading config file /var/lib/nginx/.config/composer/auth.json\r\nLoading config file ./composer.json\r\nChecked CA file /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem: valid\r\nFailed to initialize global composer: Composer could not find the config file: /var/lib/nginx/.config/composer/composer.json\r\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\r\nReading /var/www/html/vendor/composer/installed.json\r\nLoading plugin MagentoHackathon\\Composer\\Magento\\Plugin\r\nactivate magento plugin\r\nRunning 1.4.1 (2017-03-10 09:29:45) with PHP 7.0.19 on Linux / 3.14.32-xxxx-grs-ipv6-64\r\nLoading composer repositories with package information\r\nDownloading https://repo.magento.com/packages.json\r\nDownloading https://repo.magento.com/packages.json\r\nDownloading https://repo.magento.com/packages.json\r\nReading /var/lib/nginx/.cache/composer/repo/https---repo.magento.com/packages.json from cache\r\nThe \"https://repo.magento.com/packages.json\" file could not be downloaded: SSL: Handshake timed out\r\nFailed to enable crypto\r\nfailed to open stream: operation failed\r\nhttps://repo.magento.com could not be fully loaded, package information was loaded from the local cache and may be out of date\r\n\r\n\r\nException trace:\r\n () at /usr/share/php/Composer/Util/RemoteFilesystem.php:482\r\n Composer\\Util\\RemoteFilesystem->get() at /usr/share/php/Composer/Util/RemoteFilesystem.php:101\r\n Composer\\Util\\RemoteFilesystem->getContents() at /usr/share/php/Composer/Repository/ComposerRepository.php:661\r\n Composer\\Repository\\ComposerRepository->fetchFile() at /usr/share/php/Composer/Repository/ComposerRepository.php:479\r\n Composer\\Repository\\ComposerRepository->loadRootServerFile() at /usr/share/php/Composer/Repository/ComposerRepository.php:258\r\n Composer\\Repository\\ComposerRepository->hasProviders() at /usr/share/php/Composer/DependencyResolver/Pool.php:99\r\n Composer\\DependencyResolver\\Pool->addRepository() at /usr/share/php/Composer/Installer.php:376\r\n Composer\\Installer->doInstall() at /usr/share/php/Composer/Installer.php:223\r\n Composer\\Installer->run() at /usr/share/php/Composer/Command/UpdateCommand.php:158\r\n Composer\\Command\\UpdateCommand->execute() at /usr/share/php/Symfony/Component/Console/Command/Command.php:259\r\n Symfony\\Component\\Console\\Command\\Command->run() at /usr/share/php/Symfony/Component/Console/Application.php:849\r\n Symfony\\Component\\Console\\Application->doRunCommand() at /usr/share/php/Symfony/Component/Console/Application.php:193\r\n Symfony\\Component\\Console\\Application->doRun() at /usr/share/php/Composer/Console/Application.php:227\r\n Composer\\Console\\Application->doRun() at /usr/share/php/Symfony/Component/Console/Application.php:124\r\n Symfony\\Component\\Console\\Application->run() at /usr/share/php/Composer/Console/Application.php:100\r\n Composer\\Console\\Application->run() at /usr/bin/composer:55", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stof": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6415", "title": "[RFC] Split releases and dev branches in separate provider files in composer repositories", "body": "Currently, the composer repositories using separate providers for each package (Packagist does it, and Satis has an option to do it too) are putting all the version of the package in the same file.\r\nBut this has a huge drawback: even though most Composer projects are using only stable versions of packages (due to the default minimum stability), the metadata file of the package gets updated for each commit in the repo (due to the dev version), which invalidates the local cache for this file.\r\n\r\nI suggest reorganizing the provider files to have 2 files per packages: one with releases and one with dev branches (we could have separate files for the non-stable releases too, but I don't think this is worth it). This would have several advantages:\r\n\r\n- the release file would change only when you create a new tag in your repository, which happens much less frequently than doing a commit. This would limit the cache busting effects.\r\n- the dev branch file would be much smaller (most packages have a single dev version IMO, but I haven't checked this assumption based on the Packagist DB), so the file needing to be downloaded when the cache is busted for each commit would be much smaller\r\n- as the pool knows which packages are allowed to use a dev version (the minimum stability and the stability flags are root-only settings), the repository could skip the download of the dev branch files when dev versions are rejected anyway.\r\n\r\nSuch change would require changes in 2 places:\r\n\r\n- in composer to allow having multiple providers for the same file (it probably needs to use a new key in the file to allow having both the new split format and the old format in parallel in the repository to avoid breaking people using older composer versions, as we did in the past)\r\n- in Packagist to implement the new dumping (keeping the existing one in parallel for some time for BC reasons)\r\n\r\nwhat do you think about this idea ?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/3672", "title": "Optimization suggestion for partial updates", "body": "Currently, a partial update loads every possible package versions for all packages in the composer.json. However, most of them are locked to the version available in the lock file because of the exact match rule added during a partial update.\nThis could be taken into account when fetching providers for a dependency (similar to what is done based on root package requirements currently). We could even avoid loading the package metadata from Packagist entirely in this case.\nI think this could make partial updates much faster than they are currently (where the are equivalent to a full update for the resolution part).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3672/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/e91505ce304ad2a9c2920f67da4344b2e9573c8b", "message": "Fix the platform requirement check command\n\nThe command must validate that the current package matches the constraint, not\nthat any newer package matches it."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/1340807", "body": "@xaav As I said in your previous PR, you are only setting an error handler for the testsuite, which is totally useless as this is already done by PHPUnit when you configure it to do it (and it let the user change it through its PHPUnit config). So this change is just useless\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1340807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1465202", "body": "btw, the permissions change should be reverted as this file is meant to be executable\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1465202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1702272", "body": "One thing is sure: putting the Symfony components in the repo is a bad idea as it makes updating them a real pain. You should better use submodules.\n\n@igorw AFAIK the goal is to distribute it as a phar archive so the dependencies would be embedded in the phar\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1702272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1702814", "body": "The vendors script has one advantage: it works for the standard distribution when you remove the repo to start a clean one (which is not so easy to achieve by using submodules). But for a project versioned using git, the proper way to go is to use submodules IMO.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1702814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720346", "body": "`git rebase --squash upstream/master` to avoid having to change all lines by hand :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720690", "body": "ah right, it is an option for merge.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2092972", "body": "Another idea here: write some messages only when the output is verbose instead of always as many of them are not always useful.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2092972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2094498", "body": "sure, as it is already the case anyway. It is more an idea to improve things once we have an easy way to do this.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2094498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2103676", "body": "good for me too\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2103676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2415826", "body": "See #38 for things related to the signing\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2415826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422233", "body": "One point here: the generated code relies on the Sf2 ClassLoader component so this requires that the Solver considers it as a dependency\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422523", "body": "@lsmith77 yeah, and letting them not bother about the way composer uses to put the packages. they simply load the autoloading file and they have their stuff configured properly.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423300", "body": "@Seldaek we should support libraries that don't follow PSR-0 (they suck but the end-user should not be blamed for this) if they provide a class map (which means they don't suck totally as they could also rely on require_once)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569043", "body": "Another argument to generate a map instead of the autoloader: PHP 5.4 is likely to have an SplClassLoader which will probably be more efficient than PHP implementations so it should be possible to use it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2584837", "body": "Were most of the submodules not used anymore by packagist ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2584837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2587927", "body": "sorry, was talking about composer.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2587927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2625293", "body": "Composer already uses the Symfony Console component to handle the command-line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2625293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2625376", "body": "And this PR is not about handling the command-line at all.\nI guess you were referering to the call to external commands (here git) but this is a different topic.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2625376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2713895", "body": "@Seldaek @naderman Could you take a look at this PR ?\n\nI know there is a bunch of CS issues in this PR but it might be easier to discuss the way it is implemented if I don't add many CS comments in the PR. These ones can be added later.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2713895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2736595", "body": "Dumping all existing packages to a packages.json seems really weird to me. I think it would be better to build a tool similar to [Pirum](https://github.com/fabpot/Pirum) able to manage a small composer repository for people not wanting to use a local packagist instance.\n\nThe question then is about how we implement it: as a command in composer itself or as another Composer project dedicated to it ? @Seldaek @naderman throughts ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2736595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2756448", "body": "the difference between them is the lock file. When there is a lock file, `install` downloads the version specified in this file whereas `update` downloads the latest version fitting the requirements and updates the lock file\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2756448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2759648", "body": "what do you mean by proxy local Git or Mercurial repositories ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2759648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2759762", "body": "I don't think it should build it on demand as it requires more work, and having a server running to handle the request. The way pirum works is great: a CLI tool thta generates the needed files and dumps them. Your pear channel is then a set of static files, that can be placed in github pages for instance to make them available. The same should be done for our tool.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2759762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2760160", "body": "@trompette when developing, you will generally ask Composer to get the code from the source, not from an archive, and to us the dev version (i.e. the branch) so running `update` should get the new version of the branch anyway\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2760160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776931", "body": "I still don't think we should dump all available packages in a packages.json file. It makes the command rather useless as your local files will then overwrite packages provided by packagist without the new versions found by packagist. And it makes the file really big when you really only need to add a few packages for it.\n\nPersonally I would vote for creating a Pirum-like tool as a separate project in the composer organization. @Seldaek do you have an idea for its name ? Should it use a subnamespace of the `Composer` namespace or another namespace (like packagist does) ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777134", "body": "as it is a requirement of the application, you should not define the path in the repo so this PR does the wrong thing IMO.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/449133", "body": "This class should probably implement the `IteratorAgregate` method to make it easier to use. There is no special code as the method is already implemented here :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/449133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511757", "body": "you should probably use the git protocol here as the http protocol does not work for people using an old version of git (github dropped the support of dumb http a month ago) and has some issues by returning 403 responses in some cases\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511777", "body": "git < 1.6.6 does not support smart http.\n\nBut well, there is a way to change the url of submodule if needed by using `git submodule init` first and changing the url so it can stay as is.\n\nBtw, why changing https to http ? github gives the https url on the repo page, not the http one\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/511782", "body": "and github documented that old version can simply use the git protocol :) They did it to allow optimizing the way they store the files.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/514925", "body": "you should use mocks to test the solver. Currently, your test is not a unit test but a functional test relying on Packagist being up and containing  only one package: Monolog\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/514925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/619243", "body": "why is it public instead of protected ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/619243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/686390", "body": "@dator of course as composer is a runtime dependency of packagist :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/686390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/766155", "body": "shouldn't you check first that the `url` key is set in the config ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/766155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/804633", "body": "why allowing only one fallback dir when all other places accept arrays ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/804633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/890754", "body": "you could use `class_exists('...', false)` for better performances here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/890754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/890758", "body": "duplicated line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/890758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/944585", "body": "should be typehinted\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/944585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/944586", "body": "same here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/944586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/944587", "body": "and here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/944587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/944596", "body": "I see an issue here (not related to the current change): the use of `exit()` here breaks the use of `->setAutoExit(false)` which will be needed if someone wants to create a web UI for composer (I think the phpBB guys are talking about it)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/944596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/970418", "body": "@dr-fozzy the issue is #301\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/970418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/975263", "body": "what about the author homepage (which is supported by composer) ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/975263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/985501", "body": "this is not equivalent. Composer is compatible with the released versions of Finder and Process\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/985501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/986148", "body": "wrong url: missing the branch name after `blob`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/986148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1129225", "body": "@till `file://` does not ensure it is SVN. You cannot assume that all local urls are SVN ones as other VCS also support local paths.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1129225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1168882", "body": "you should probably add `--prune` to prune old branches if the remote repo deleted some branches\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1168882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1172247", "body": "what if someone wants to change the cwd without capturing the output ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1172247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1192183", "body": "the third argument could be simplified according to the condition needed to reach this code :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1192183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1324339", "body": "this is wrong. You cannot use the same key twice in an array\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1324339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1734912", "body": "This break things if you have several autoload files with a different suffix (which should be available as a CLI switch btw as moving from a closure to a class probably broke the phar holding a composer autoloader for their code again (Behat for instance) by defining the same class name twice\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1734912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1734913", "body": "no need to add this. The application itself has a verbose option (`$ouput->getVerbosity()`)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1734913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1734951", "body": "keeping the class_exists check here and exposing the suffix when dumping the autoloader.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1734951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1775317", "body": "please open a ticket. Comments are not a good way to report issues as they cannot be found again later easily when loking at the list of issues\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1775317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1825527", "body": "you should keep the original exception as previous exception.\n\nAnd you should check that `$data['name']` is set as it could be the reason of the invalid data\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1825527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1872245", "body": "As you are not removing `foo` when finding `foo/../`, it may lead to some WTF for people using such weird stuff. Could it be detected by the `validate` command ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1872245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1880898", "body": "why not using `$fs->ensureDirectoryExists` as you already have a filesystem here ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1880898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1880901", "body": "wrong comment :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1880901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1880903", "body": "wrong comment :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1880903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1917699", "body": "putting the source reference in the dist reference looks weird to me\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1917699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1936929", "body": "the `Problem` class is used when requirements fail\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1936929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1937209", "body": "It does not tell you that the version is wrong when `*` was required as the requirement will pass as soon as the extension is loaded.\nSo in such case, a failure would mean that the extension is not loaded and so display `is missing from your system`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1937209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2044428", "body": "shouldn't you reset ot also in case you throw the RuntimeException to handle the case where someone would catch the exception ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2044428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2083067", "body": "Wouldn't this mark packages without stable versions as typo when your minimum stability is set to stable ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2083067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2096118", "body": "The name looks weird. It does not store the output in an array.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2096118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2124769", "body": "wrong option name\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2124769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2224919", "body": "you should continue instead of returning\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2224919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2485081", "body": "@Seldaek this should be documented IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2485081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2642888", "body": "it may occur in some places IMO (nothing forbids you to use `\\n` in your description, even if Packagist will not display it on several lines)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2642888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2667122", "body": "why not doing this check in all cases as the previous `if` does the same logic when this is set _and_ there is a provider url ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2667122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2667463", "body": "oups, missed it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2667463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2667472", "body": "Btw, this makes Composer able to read older Packagist formats (for people using their own Packagist). But there is no BC layer in Packagist in the other way (for people using an old composer phar), right ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2667472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2667571", "body": "isn't the `includes` stuff in Packagist also a BC layer for an even older schema ? This one may be removed now eventually.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2667571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2996488", "body": "This is wrong when using the env variable\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2996488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2996491", "body": "the env variable will always be a string. it cannot be a boolean\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2996491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3150382", "body": "You can wrap the Composer autoloader into a [Symfony ApcClassLoader](https://github.com/symfony/ClassLoader/blob/master/ApcClassLoader.php). This class has been designed to support wrapping a composer autoloader as well as Symfony ClassLoader, as Symfony also relies on Composer\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3150382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3447398", "body": "there is no exception in diagnose\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3447398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3447413", "body": "is it intended to overwrite the `$e` exception if an exception occurs when checking the disk free space ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3447413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3724309", "body": "but this requires that updates are always done by the dev who installed the packages through composer, not by other devs whi just got them from the git repo, right ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3724309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3724366", "body": "agreed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3724366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3737321", "body": "coding standards\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3737321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3974115", "body": "@chrisyue These classes are using DI. The Factory is the class instantiating them.\n\nand anyway, commenting on a single commit which was in the middle of a 50-commits PR 7 months ago is not the good place to start a discussion. It would get lost very easily.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3974115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/4046541", "body": "you are changing the logic here as you are not calling it anymore without the `false` argument\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/4046541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944", "body": "you should remove this file\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/80944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668", "body": "you should remove the extra empty line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670", "body": "you should add the help for the command too\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671", "body": "it should be protected IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/124671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737", "body": "is it really necessary to use the finder here ? The command will not be added often, and they will likely be only a few ones so registering them explicitly could be more readable and maintainable (like it is done in Doctrine btw)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/125737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420", "body": "the `piblic` keyword should be omitted for interface as they can only define public methods anyway\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422", "body": "same here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/127422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157", "body": "the class name is `JsonLoader`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158", "body": "why aliasing it ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530", "body": "@everzet the type is still there\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531", "body": "all these use statement should probably be removed as they are the only changes in the class\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532", "body": "what is it for ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533", "body": "these should probably be renamed to be more explicit\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534", "body": "the last two are probably useless as there is no change in the class to use them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535", "body": "this change is wrong as the commands are added explicitly, not by using the Finder to search for them\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536", "body": "we should be consistent between the different managers. The `DownloaderManager` uses `UnexpectedValueException` for the corresponding case.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537", "body": "the property should maybe be renamed to be clearer for someone reading the code\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539", "body": "same here than for other managers. Choose one of the 2 exceptions.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543", "body": "I don't see what is shorter by aliasing it to a longer name than `Application` :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550", "body": "@chEbba because the way to update package depends of the way it was downloaded. For instance, when installing the package with a `git clone`, updating it simply means fetching the changes with git.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139567", "body": "If you add stuff in the LibraryInstaller to handle git, you will then have to do the same for SVN, CVS, Mercurial and so on once Composer support them. This will make the class a bigger mess each time you add a new downloader whereas doing it in the downloader keep things clean.\n\nAnd some way to install could require doing some stuff when removing the package other than deleting the directory (it is not the case of the current downloaders but why restricting such cases ?).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139589", "body": "The url is part of the PackageInterface object\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/141791", "body": "you should not add your name in the license header but in the `@author` annotation\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/141791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/161282", "body": "it should be marked as optional\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/161282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/161284", "body": "you should add the needed use statements to keep the line shorter\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/161284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/161287", "body": "you should not use `else` here as the `if` returns\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/161287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172636", "body": "Well, composer uses the Sf2 CS everywhere so it should use them here too IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172902", "body": "you should wrap it in a `class_exists` call to avoid issues when including the file several times from different places (for instance if Silex was loaded from the phar archive _before_ requiring the autoload file)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213748", "body": "but the vendors are not submodules anymore\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213794", "body": "well, the Symfony Console component used by Composer. And doing a git clone will **not** put it in the place mentioned in your autoloader so Composer will not run. The Console is a mandatory dependency.\n\nAnd your latest commit does not register it at all so the tests are still broken.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213832", "body": "with plain git clone, you don't have the Console component so Composer is not usable.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/224807", "body": "this is broken as both interface contain `getArchiveType`. You should either remove this method from one of the interfaces, either define an interface with the method and extend it in both interfaces.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/224807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/221009", "body": "you should remove this extra blank line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/221009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/221016", "body": "you should add a blank line before the `return` statement\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/221016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231924", "body": "the indentation is wrong here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231925", "body": "config.son is too generic IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231927", "body": "the indentation is wrong here too\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231928", "body": "please remove the trailing whitespaces\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231929", "body": "you need a space after `if` and another one before the curly brace\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231931", "body": "you need a space after `if` and another one after the curly brace (same is true line 30)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231933", "body": "what about windows users ? Your detection of absolute paths is Unix-specific\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231936", "body": "you have an extra line here (and still trailing whitespaces)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231938", "body": "``` php\n<?php\n\nif (absolute) {\n    return $this->vendorPath;\n}\n\nreturn substr($this->vendorPath, strlen($this->getBasePath())+1);\n\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/231938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/236993", "body": "instead of modifying $packageConfig and having a nested array access every time after that, I would find it better to keep the `$vendorPath` variable like previously but changing it here if the config exists\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/236993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237006", "body": "This will lead to weird things if the user copies the content of the code somewhere else (for instance if he runs composer locally and then deploy to a prod server via FTP) as the generated file will hardcode the absolute path.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/253422", "body": "you should write it as `if (false !== $pos = ...)`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/253422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268510", "body": "copying the file will break things if it uses things like `__DIR__`. Weren't you talking about creating a file that require the original one ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268580", "body": "and what about windows ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268584", "body": "@naderman `composer.lock` is not in `vendor` either.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268599", "body": "`installBinaries` already determine the final path. Wouldn't it be better to pass it instead of duplicating the generation logic ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268861", "body": "why using a callback returning always the same value ? `->will($this->returnValue($this->vendorDir))` would be more readable\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268862", "body": "for an interface, you can use simple `$this->getMock('Composer\\Repository\\RepositoryInterface')`. using the mock builder to disable the original constructor is useless for an interface\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268866", "body": "`$this->assertFileEquals(__DIR__.'/Fixtures/autoload_'.$name.'.php', $dir.'/autoload_namespaces.php')`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/268866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273859", "body": "the indentation of this line is wrong. You should remove the 2 extra spaces\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273863", "body": "there is already a `list` command in the console component, listing the available commands\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273867", "body": "you should add spaces around `else`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273879", "body": "please remove the use statement that are not needed in this class. For instance, there is no need of the AutoloadGenerator or InputOption\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273882", "body": "there is 2 extra spaces in the indentation\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273885", "body": "the help should explain what the command do and how to use it. This particular line is already displayed automatically by the help command anyway so you help message is not helpful\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273887", "body": "you should add space after `foreach` and before the curly brace\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273890", "body": "according to the CS, it should be `false === strpos(...)`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273891", "body": "it seems totally wrong here.\n\nAnd btw, the array does not look the same than when having tags anyway\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273918", "body": "the indentation is wrong now. There is a level too much. It is 4 spaces per level, not 8\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273920", "body": "please remove this empty line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273922", "body": "please remove this empty line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273923", "body": "same for this empty line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273926", "body": "wrong indentation for all these method calls\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273927", "body": "you should remove the blank line at the beginning of the block here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273959", "body": "Spaces are missing for the `if` and the `else`.\nAlso, a better way to fix it would be to initialize `$output` to an empty array before calling `exec` so that we always have an array (currently, we get `null`, right ?)\n\nAnd this is totally unrelated to the search command. Next time, try to do several pull requests instead of putting all stuff in the same. It makes it easier for the review\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273962", "body": "now, you broke the indentation of the 2 `new` calls. Simply use 4 spaces per level.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273965", "body": "same here for the indentation\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273967", "body": "there is an extra blank line here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273975", "body": "ah no, forgot my comment about the initialization. I forgot the weird behavior for empty arrays (which has been fixed in 5.4 btw)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273981", "body": "use empty instead of counting the elements. It is faster as it only need to know that there is a first element\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/273981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/276991", "body": "your IDE files should be excluded locally: http://help.github.com/ignore-files/\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/276991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/276997", "body": "you have an extra line here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/276997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/276999", "body": "IMO, this argument should be optional, displaying the available versions when omitted\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/276999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277331", "body": "I don't understand here. why doing the loop on all possible packages in this case ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277333", "body": "my idea was to display the list of available versions, not the first version found\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277347", "body": "this should not be done when someone asks specifically for a version\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277697", "body": "but if you have the installed package, it will first loop over all available packages (potentially thousands) and then will not use it at all as it replaces it by the local package.\n\nYou should first check locally and check remotely only when you don't find it locally\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277706", "body": "this is exactly what I wanted to display when the user does not give a specific version but only the package name.\n\nBut when I ask the command to give me informations about `1.0.2`, I expect to see them, not to see that `1.0.3` also exists.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277710", "body": "just imagine a package with 50 versions (look at PHPUnit's tags on github to see that it can be considered). You don't want the whole list when asking for details\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277730", "body": "no need to use `else` here as the `if` returns.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277936", "body": "if you want the list of all version, call the command without specifying the version\n\nIf you call it with the version, it should show the informations for the specified version, not for another one.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278172", "body": "which can makes it unreadable if there is lots of version as I said. You should display the versions in the other case\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278277", "body": "missing space after the `if``And you should use``===``\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278278", "body": "same here for `===`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278279", "body": "and here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278208", "body": "extra line here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278213", "body": "this will force to have a composer file in the current directory, which is not needed (and not wanted) for this command. Please remove the line (you don't use Composer anyway here)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284323", "body": "the indentation is wrong. It should use spaces, not tabs. and you should compare the exit code strictly\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284326", "body": "why changing it ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284329", "body": "this is simply a way to be faster for some common urls. I don't see a good reason to remove them as they don't forbid the use of repos hosted somewhere else\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284751", "body": "the indentation of the comment is wrong here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284752", "body": "please don't add trailing whitespaces\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284753", "body": "same here for trainling whitespaces\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/284753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322531", "body": "all these one are useless as you are already in the `Composer` namespace so you can access them relatively without the use statements\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322534", "body": "IMO, you should always pass the file to the factory. The current code rely on having composer.json in the current directory, which is fine for the CLI but is broken when your code is called from elsewhere (for instance a front controller placed in the `web` subfolder)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322535", "body": "no need for `else` here as you throw an exception\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322537", "body": "this exception can never be reached\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322542", "body": "this method should probably be splitted into a bunch of protected methods to make it easier to extend it (for instance a method to create the RepositoryManager, another one for the DownloaderManager and so on)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322579", "body": "public methods should be defined before protected ones. And according to the Sf2 CS, you should write `static public`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322646", "body": "there is no rule asking to put the static methods at the end, but there is one for the visibility.\n\nIIRC, the Sf2 code even tends to put static public methods before non-static public ones\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322717", "body": "@fabpot what do you think about this point ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/314299", "body": "you should create the `packages` key here to be sure that the final file will contain it as the reading assumes it does (not sure if it is possible to lock an empty array of packages in the way Composer uses the Locker, but nothing in the Locker itself forbids it)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/314299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/324156", "body": "I don't think it should be in the Filesystem class. This method is not about abstracting the filesystem so it is not the resposibility of this class.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/324156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329288", "body": "why not a new class ? it is a different job, so a different place is better.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/349570", "body": "missing spaces around `>`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/349570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/349577", "body": "add a space after the comma separator in the exported array. It will make it prettier\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/349577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/349639", "body": "you forgot to update your test fixture when adding the space :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/349639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/356997", "body": "JSLint ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/356997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357029", "body": "yeah agreed. But writing JS in PHP is not this issue :)\n\nAnd I saw worse than what I wrote in a comment: a whole framework written this way\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357104", "body": "wrong indentation\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357106", "body": "why ? there is `composer.phar update` for this\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357109", "body": "this mixes the responsibility IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/357109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335397", "body": "you should use an `instanceof` check instead\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335419", "body": "thus, I don't think you should replace the helper from inside a particular command. Add the methods in the command instead of the helper if they are specific to the command, and register an helper globally otherwise\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335498", "body": "this has nothing to do with the DialogHelper. It is not about dialog so it should be a separate helper\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341210", "body": "this is wrong. You are typehinting the interface but you use methods which are not part of the interface\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341214", "body": "do you really need to inject them if they are never used ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341215", "body": "same here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341216", "body": "and here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341222", "body": "don't comment old code. Remove it. Git is responsible to keep the history, not comments\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341230", "body": "this is useless; the current regex already supports http as the s is marked as optional\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341241", "body": "your regex is redundant. Supporting both http and https is as simple as `^https?://`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341249", "body": "this should be `getScheme` IMO as it is what the method does\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341254", "body": "none of the drivers ever use them.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341258", "body": "`else` is useless here as the `if` returns.\n\nAnd what is the need of this method which does not work on all systems ? The Console component already have a DialogHelper to ask the user to input things.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341265", "body": "why adding such a method instead of simply writing new messages in the downloaders ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "glensc": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6413", "title": "PEAR repository type does not process PEAR installer dependency", "body": "do you consider this problem reported here something you fix,\r\nor i just workaround and load \"PEAR\" in root `composer.json`?\r\n\r\nhttps://github.com/eventum/eventum/pull/256#issuecomment-300879398\r\n\r\nMy `composer.json`:\r\n\r\n```json\r\n{\r\n        \"repositories\": [\r\n                {\r\n                        \"type\": \"pear\",\r\n                        \"url\": \"https://pear.php.net\",\r\n                        \"vendor-alias\": \"pear\"\r\n                }\r\n        ],\r\n        \"require\": {\r\n                \"pear-pear.php.net/mail_mimedecode\": \"*\"\r\n        }\r\n}\r\n```\r\n\r\nthis does not install any variant of `pear` package (`pear/pear`, `pear/pear-core-minimal`, `pear-pear.php.net/pear`)\r\n\r\nreproducer:\r\nhttps://gist.github.com/glensc/46fe580cab09efb35b8da3f2fe9f87e3\r\n\r\nTL;DR\r\n\r\n\r\npear package is fine, just seems composer does not parse this:\r\n\r\n```xml\r\n   <pearinstaller>\r\n    <min>1.6.0</min>\r\n   </pearinstaller>\r\n```\r\n\r\nas i understand, it's supposed to mean `pear/pear >= 1.6.0`", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/b02aa2e7451975dbe801d232b7bd8d4388a001a4", "message": "changelog: fix typo in 1.5.6 entry"}, {"url": "https://api.github.com/repos/composer/composer/commits/9a6fa3466f59bd5f44b41e148e49de4a6a432091", "message": "fix parallel test exit scenario. introduced in 4d8b371908"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Wirone": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6410", "title": "Using deprecated \"no-custom-installers\" option does not work as expected", "body": "Composer v1.4.1\r\n\r\nMy `composer.json`:\r\n\r\nNot related.\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking composer.json: WARNING\r\nDefining autoload.psr-4 with an empty namespace prefix is a bad idea for performance\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install --no-custom-installers\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nYou are using the deprecated option \"no-custom-installers\". Use \"no-plugins\" instead.\r\nLoading composer repositories with package information\r\nInstalling dependencies (including require-dev) from lock file\r\nNothing to install or update\r\nGenerating autoload files\r\nocramius/package-versions:  Generating version class...\r\nocramius/package-versions: ...done generating version class\r\nPHP CodeSniffer Config installed_paths set to <project>/vendor/frenck/php-compatibility\r\n```\r\n\r\nSince `InstallCommand::execute()` has this:\r\n\r\n```\r\nif ($input->getOption('no-custom-installers')) {\r\n    $io->writeError('<warning>You are using the deprecated option \"no-custom-installers\". Use \"no-plugins\" instead.</warning>');\r\n    $input->setOption('no-plugins', true);\r\n}\r\n```\r\n\r\nI expected that no custom installers / plugins will be called, but as you can see in output above, they were executed. When I use new option `composer install --no-plugins` I get:\r\n\r\n```\r\nLoading composer repositories with package information\r\nInstalling dependencies (including require-dev) from lock file\r\nNothing to install or update\r\nGenerating autoload files\r\n> Dealerdirect\\Composer\\Plugin\\Installers\\PHPCodeSniffer\\Plugin::run\r\nPHP CodeSniffer Config installed_paths set to <project>/vendor/frenck/php-compatibility\r\n```\r\n\r\nIt works as expected (plugins were not called, only post-install scripts).\r\n\r\nAdditionally, when I run `composer install --no-custom-installers --no-scripts` I get:\r\n\r\n```\r\nYou are using the deprecated option \"no-custom-installers\". Use \"no-plugins\" instead.\r\nLoading composer repositories with package information\r\nInstalling dependencies (including require-dev) from lock file\r\nNothing to install or update\r\nGenerating autoload files\r\n```\r\n\r\nPlugins were not called even if the same deprecated option was used, but only with additional `no-scripts` flag (which should not be related?).", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shamiln": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6406", "title": "Setting minimum-stability disrespects packagist from being disabled in repositories", "body": "My `composer.json` contains:\r\n\r\n```\r\n\"minimum-stability\": \"dev\",\r\n\"repositories\": [\r\n        {\r\n            \"type\": \"composer\",\r\n            \"url\": \"https://composer.local\"\r\n        },\r\n        {\r\n            \"packagist.org\": false\r\n        },\r\n        {\r\n            \"packagist\": false\r\n        }\r\n    ]\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer install\r\n```\r\n\r\nThe packages are installed\r\n\r\nAnd I expected this to happen:\r\nThe composer.lock should not reference GitHub.com for the dist:url\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "borekb": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6403", "title": "Docs suggestion: prefer CLI over composer.json editing", "body": "While I understand that `composer.json` is at the core of Composer, I personally interact with most package managers from CLI, be it Composer, npm, Yarn or any other. This is also true for my colleagues and fellow developers. If this is a common approach, I think that the docs should be centered around this use case, for example, [Yarn's usage page](https://yarnpkg.com/en/docs/usage) seems shorter and easier to follow to me than Composer's [Basic usage](https://getcomposer.org/doc/01-basic-usage.md).\r\n\r\nBefore possibly starting a PR, I wanted to ask whether this is a shared view in the community or not. If so, I'd be happy to contribute to the docs.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "antonioribeiro": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6392", "title": "Missing zend-opcache extension in macOS ", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"name\": \"antonioribeiro/clt\",\r\n    \"description\": \"ACR\",\r\n    \"license\": \"proprietary\",\r\n    \"require\": {\r\n        \"php\": \">=7.0\",\r\n        \"laravel/framework\": \"5.4.*\",\r\n        \"cartalyst/sentry\": \"dev-feature/laravel-5.4\",\r\n        \"dingo/api\": \"0.6.*\",\r\n        \"indatus/dispatcher\": \"1.4.1\",\r\n        \"league/csv\": \"6.*\",\r\n        \"phpoffice/phpexcel\": \"^1.8\",\r\n        \"behat/behat\": \"~3.2\",\r\n        \"laravelcollective/html\": \"~5.4\",\r\n        \"venturecraft/revisionable\": \"dev-featureAllowOverloadOfRevisions\",\r\n        \"doctrine/dbal\": \"^2.5\",\r\n        \"predis/predis\": \"^1.0\",\r\n        \"soupbowlweb/copyrighter\": \"^1.0\",\r\n        \"dompdf/dompdf\": \"~0.8\",\r\n        \"docusign/esign-client\": \"^2.0\",\r\n        \"guzzlehttp/guzzle\": \"^6.0\",\r\n        \"bugsnag/bugsnag-laravel\": \"^2.0\",\r\n        \"league/flysystem-aws-s3-v3\": \"^1.0\",\r\n        \"vimeo/vimeo-api\": \"^1.2\",\r\n        \"pragmarx/health\": \"~0.3\",\r\n        \"rollbar/rollbar\": \"^0.18.2\",\r\n        \"laravel/tinker\": \"~1.0\",\r\n        \"amnuts/opcache-gui\": \"^2.2\",\r\n        \"appstract/laravel-opcache\": \"^1.1\"\r\n    },\r\n    \"require-dev\": {\r\n        \"fzaninotto/faker\": \"~1.4\",\r\n        \"mockery/mockery\": \"0.9.*\",\r\n        \"phpunit/phpunit\": \"~5.6\",\r\n        \"phpspec/phpspec\": \"~2.1\",\r\n        \"garygreen/pretty-routes\": \"^0.0.6\"\r\n    },\r\n    \"autoload\": {\r\n        \"classmap\": [\r\n            \"database\"\r\n        ],\r\n        \"psr-4\": {\r\n            \"App\\\\\": \"app/\",\r\n            \"App\\\\Test\\\\\": \"tests/\",\r\n            \"Tests\\\\\": \"tests/\"\r\n        },\r\n        \"files\": [\r\n            \"app/helpers.php\"\r\n        ]\r\n    },\r\n    \"autoload-dev\": {\r\n        \"classmap\": [\r\n            \"tests/TestCase.php\",\r\n            \"oldtests/NullRevisionLogger.php\"\r\n        ],\r\n        \"psr-4\": {\r\n            \"Tests\\\\\": \"tests/\"\r\n        }\r\n    },\r\n    \"repositories\": [\r\n        {\r\n            \"type\": \"git\",\r\n            \"url\": \"https://github.com/antonioribeiro/revisionable\"\r\n        },\r\n        {\r\n          \"type\": \"git\",\r\n          \"url\": \"https://github.com/antonioribeiro/sentry\",\r\n          \"vendor-alias\": \"cartalyst\"\r\n        }\r\n    ],\r\n    \"scripts\": {\r\n        \"post-install-cmd\": [\r\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postInstall\",\r\n            \"php artisan optimize\"\r\n        ],\r\n        \"post-update-cmd\": [\r\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postUpdate\",\r\n            \"php artisan optimize\"\r\n        ],\r\n        \"post-root-package-install\": [\r\n            \"php -r \\\"copy('.env.example', '.env');\\\"\"\r\n        ],\r\n        \"post-create-project-cmd\": [\r\n            \"php artisan key:generate\"\r\n        ]\r\n    },\r\n    \"config\": {\r\n        \"preferred-install\": \"dist\"\r\n    }\r\n}\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nfind: /opt/local/etc/php56/php.ini: No such file or directory\r\nChecking composer.json: WARNING\r\nrequire.indatus/dispatcher : exact version constraints (1.4.1) should be avoided if the package follows semantic versioning\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: WARNING\r\nYou are not running the latest stable version, run `composer self-update` to update (1.2.4 => 1.4.1)\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\n\u279c  clt git:(master) \u2717 composer require laravel/dusk\r\nfind: /opt/local/etc/php56/php.ini: No such file or directory\r\nUsing version ^1.1 for laravel/dusk\r\n./composer.json has been updated\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - amnuts/opcache-gui v2.2.4 requires ext-zend-opcache * -> the requested PHP extension zend-opcache is missing from your system.\r\n    - amnuts/opcache-gui v2.2.4 requires ext-zend-opcache * -> the requested PHP extension zend-opcache is missing from your system.\r\n    - amnuts/opcache-gui v2.2.4 requires ext-zend-opcache * -> the requested PHP extension zend-opcache is missing from your system.\r\n    - Installation request for amnuts/opcache-gui (locked at v2.2.4, required as ^2.2) -> satisfiable by amnuts/opcache-gui[v2.2.4].\r\n\r\n  To enable extensions, verify that they are enabled in those .ini files:\r\n    - /private/var/folders/gt/kd1nt03j59x0lm9jm2kvhj1m0000gn/T/php-no-debug.IT2j07ee\r\n  You can also run `php --ini` inside terminal to see which files are used by PHP in CLI mode.\r\n\r\nInstallation failed, reverting ./composer.json to its original content.\r\n```\r\n\r\nOutput of `php -i | grep -i opcache`:\r\n\r\n```\r\n\u279c  clt git:(master) \u2717 php -i | grep -i opcache\r\nConfigure Command =>  './configure'  '--prefix=/usr/local/Cellar/php71/7.1.3_15' '--localstatedir=/usr/local/var' '--sysconfdir=/usr/local/etc/php/7.1' '--with-config-file-path=/usr/local/etc/php/7.1' '--with-config-file-scan-dir=/usr/local/etc/php/7.1/conf.d' '--mandir=/usr/local/Cellar/php71/7.1.3_15/share/man' '--enable-bcmath' '--enable-calendar' '--enable-dba' '--enable-exif' '--enable-ftp' '--enable-gd-native-ttf' '--enable-mbregex' '--enable-mbstring' '--enable-shmop' '--enable-soap' '--enable-sockets' '--enable-sysvmsg' '--enable-sysvsem' '--enable-sysvshm' '--enable-wddx' '--enable-zip' '--with-freetype-dir=/usr/local/opt/freetype' '--with-gd' '--with-gettext=/usr/local/opt/gettext' '--with-iconv-dir=/usr' '--with-icu-dir=/usr/local/opt/icu4c' '--with-jpeg-dir=/usr/local/opt/jpeg' '--with-kerberos=/usr' '--with-mhash' '--with-ndbm=/usr' '--with-png-dir=/usr/local/opt/libpng' '--with-xmlrpc' '--with-zlib=/usr' '--with-readline=/usr/local/opt/readline' '--without-gmp' '--without-snmp' '--with-libxml-dir=/usr/local/opt/libxml2' '--with-pdo-odbc=unixODBC,/usr/local/opt/unixodbc' '--with-unixODBC=/usr/local/opt/unixodbc' '--with-bz2=/usr' '--with-openssl=/usr/local/opt/openssl' '--enable-fpm' '--with-fpm-user=_www' '--with-fpm-group=_www' '--with-curl' '--with-xsl=/usr' '--with-ldap' '--with-ldap-sasl=/usr' '--with-mysql-sock=/tmp/mysql.sock' '--with-mysqli=mysqlnd' '--with-pdo-mysql=mysqlnd' '--disable-opcache' '--enable-pcntl' '--without-pear' '--enable-dtrace' '--disable-phpdbg' '--enable-zend-signals'\r\nAdditional .ini files parsed => /usr/local/etc/php/7.1/conf.d/ext-opcache.ini,\r\n    with Zend OPcache v7.1.3, Copyright (c) 1999-2017, by Zend Technologies\r\nZend OPcache\r\nopcache.blacklist_filename => no value => no value\r\nopcache.consistency_checks => 0 => 0\r\nopcache.dups_fix => Off => Off\r\nopcache.enable => On => On\r\nopcache.enable_cli => Off => Off\r\nopcache.enable_file_override => Off => Off\r\nopcache.error_log => no value => no value\r\nopcache.fast_shutdown => 0 => 0\r\nopcache.file_cache => no value => no value\r\nopcache.file_cache_consistency_checks => 1 => 1\r\nopcache.file_cache_only => 0 => 0\r\nopcache.file_update_protection => 2 => 2\r\nopcache.force_restart_timeout => 180 => 180\r\nopcache.huge_code_pages => Off => Off\r\nopcache.inherited_hack => On => On\r\nopcache.interned_strings_buffer => 4 => 4\r\nopcache.lockfile_path => /tmp => /tmp\r\nopcache.log_verbosity_level => 1 => 1\r\nopcache.max_accelerated_files => 2000 => 2000\r\nopcache.max_file_size => 0 => 0\r\nopcache.max_wasted_percentage => 5 => 5\r\nopcache.memory_consumption => 64 => 64\r\nopcache.opt_debug_level => 0 => 0\r\nopcache.optimization_level => 0xffffffff => 0xffffffff\r\nopcache.preferred_memory_model => no value => no value\r\nopcache.protect_memory => 0 => 0\r\nopcache.restrict_api => no value => no value\r\nopcache.revalidate_freq => 2 => 2\r\nopcache.revalidate_path => Off => Off\r\nopcache.save_comments => 1 => 1\r\nopcache.use_cwd => On => On\r\nopcache.validate_permission => Off => Off\r\nopcache.validate_root => Off => Off\r\nopcache.validate_timestamps => On => On\r\n```\r\n\r\nAnd I expected this to happen:\r\n\r\nAs you can see Zend Opcache is installed, but, still, composer is telling me the extension is missing.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yrosner": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6391", "title": "File download not working behind proxy after 302 redirect", "body": "Composer cannot download files over https after a redirect\r\n\r\nHere is the output of composer diagnose:\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking HTTP proxy: OK\r\nChecking HTTP proxy support for request_fulluri: OK\r\nChecking HTTPS proxy support for request_fulluri: WARNING\r\nUnable to assess the situation, maybe github is down (The \"https://api.github.com/repos/Seldaek/jsonlint/zipball/1.0.0\" file could not be downloaded: Peer certificate CN=`codeload.github.com' did not match expected CN=`api.github.com'\r\nfailed to open stream: Cannot connect to HTTPS server through proxy)\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MrHash": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6372", "title": "Inconsistent terminal output running scripts", "body": "My `composer.json`:\r\n\r\n```json\r\n{\r\n    \"scripts\": {\r\n        \"rundocker\": \"docker run --rm php:5.6-cli php --ini\",\r\n\t\"rundockercompose\": \"docker-compose run --rm php_cli php --ini\"\r\n    }\r\n}\r\n```\r\nand this docker-compose.yml\r\n```yaml\r\nversion: \"3.1\"\r\nservices:\r\n  php_cli:\r\n    image: php:5.6-cli\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer rundockercompose\r\n```\r\n\r\ni get inconsistent output to the terminal, sometimes nothing, sometimes the correct output. \r\n\r\nConversely:\r\n\r\n```shell\r\ncomposer rundocker\r\n#or\r\ndocker-compose run --rm php_cli php --ini\r\n```\r\nalways shows the expected output.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pniederlag": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6335", "title": "composer config messes up empty autoload/psr-4 object", "body": "I do have a valid `composer.json`, which is in use for quite some time. In order to add another repository I do use the CLI like so:\r\n\r\n```bash\r\ncomposer config repositories.l10nmgr vcs https://git.typo3.org/TYPO3CMS/Extensions/l10nmgr.git\r\n```\r\n\r\nAny subsequent usage of composer cli results in a fatal error:\r\n\r\n```bash\r\n[Composer\\Json\\JsonValidationException]                           \r\n\"./composer.json\" does not match the expected JSON schema:        \r\n- autoload.psr-4 : Array value found, but an object is required \r\n```\r\n\r\nHere is the relevant diff to composer.json that causes it.\r\n\r\n```json\r\n        \"autoload\": {\r\n-        \"psr-4\": {\r\n-        }\r\n+        \"psr-4\": []\r\n     },\r\n```\r\n\r\nthe (empty, yet valid) object entry was changed into an (empty) invalid array value. Setting this back to an empty object '{}' I can continue work as intented.\r\n\r\nComposer version used:\r\n\r\n    composer -- version\r\n    Composer version 1.4.1 2017-03-10 09:29:45\r\nOutput of `composer config repositories.l10nmgr vcs https://git.typo3.org/TYPO3CMS/Extensions/l10nmgr.git`:\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6319", "title": "Extending the schema to support a \"security-reports\" field", "body": "Today, the schema supports a `support` array (https://getcomposer.org/doc/04-schema.md#support). This is great. It has a field for `issues`, `docs`, and more. However, some authors may not appreciate having security reports in their issue tracker (commonly GitHub). The schema doesn't currently allow this distinction.\r\n\r\nMy proposal is to add a field for `security-reports` or `security` to allow an email address or website where security issues can be reported if the maintainer does not want sensitive issues included with bug reports and feature requests.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jonathanjfshaw": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6301", "title": "Set preferred-install for specific packages from command line", "body": "It doesn't seem possible to set  a global config preferred-install for specific packages from the command line.\r\n\r\nI'm trying to setup containers for contributing to Drupal, using a third-party composer.json from drupal-composer/drupal-project. I'd like all drupal packages to be downloaded prefer-source, but all upstream dependencies to be prefer-dist.\r\n\r\nHowever, from the cli this sort of thing does not seem possible:\r\n`composer config --global preferred-install '{\"drupal/*\":\"source\"}'`\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexandruantochi": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6294", "title": "Composer not working behind proxy", "body": "My `composer.json`:\r\n\r\n{\r\n}\r\n\r\nOutput of `composer diagnose`:\r\n\r\nChecking composer.json: WARNING\r\nNo license specified, it is recommended to do so. For closed-source software you may use \"proprietary\" as license.\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: WARNING\r\n[Composer\\Downloader\\TransportException] The \"https://packagist.org/packages.json\" file could not be downloaded: SSL/TLS\r\n already set-up for this stream\r\nfailed to open stream: Cannot connect to HTTPS server through proxy\r\nChecking HTTP proxy: FAIL\r\n[Composer\\Downloader\\TransportException] The \"https://packagist.org/packages.json\" file could not be downloaded: SSL/TLS\r\n already set-up for this stream\r\nfailed to open stream: Cannot connect to HTTPS server through proxy\r\nChecking HTTP proxy support for request_fulluri: OK\r\nChecking HTTPS proxy support for request_fulluri: WARNING\r\nUnable to assess the situation, maybe github is down (The \"https://api.github.com/repos/Seldaek/jsonlint/zipball/1.0.0\"\r\nfile could not be downloaded: SSL/TLS already set-up for this stream\r\nfailed to open stream: Cannot connect to HTTPS server through proxy)\r\nChecking github.com rate limit: FAIL\r\n[Composer\\Downloader\\TransportException] The \"https://api.github.com/rate_limit\" file could not be downloaded: SSL/TLS a\r\nlready set-up for this stream\r\nfailed to open stream: Cannot connect to HTTPS server through proxy\r\nChecking disk free space: OK\r\nChecking pubkeys:\r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version:\r\n\r\n  [Composer\\Downloader\\TransportException]\r\n  The \"https://getcomposer.org/versions\" file could not be downloaded: SSL/TLS already set-up for this stream\r\n  failed to open stream: Cannot connect to HTTPS server through proxy\r\n\r\n\r\n\r\nWhen I run this command:\r\n\r\n`composer global require \"laravel/install\"\r\n\r\nI get the following output:\r\n\r\ncomposer hangs at first line: `Changed urrent directory to C:/Users/Alex/AppData/Romanig/Composer`\r\n\r\nAnd I expected this to happen:\r\n\r\nI have configured my `http(s)_proxy` environment variables to http(s)://username:password@proxy;  Before the config, I could not install composer at all.\r\n\r\n\r\nNow when I try to install any php framework, Composer gets hanged at the first line:\r\n\r\n\r\nAlso checking http connnectivity to packagist takes around 2 minutes to complete with `composer diagnose`.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "houstona": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6292", "title": "GitLab Driver", "body": "I am running into an issue with using the gitlab driver from within a repo of type composer. It says that there is no such download type. The packages.json contains gitlab as the type. Is this not how you use the GitLab driver?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "snoopdouglas": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6267", "title": "Different format for listing suggested packages on install", "body": "The format for listing suggested packages features a lot of repetition and is a tad verbose. I find it hard to read, so I'd like to suggest a different format.\r\n\r\nFor example, here's the tail of the output when starting a new [Craft 3 Beta](https://github.com/craftcms/cms) project:\r\n\r\n```\r\n$ composer create-project craftcms/craft . -s beta\r\n\r\n...\r\n\r\nzendframework/zend-feed suggests installing zendframework/zend-cache (Zend\\Cache component, for optionally caching feeds between requests)\r\nzendframework/zend-feed suggests installing zendframework/zend-db (Zend\\Db component, for use with PubSubHubbub)\r\nzendframework/zend-feed suggests installing zendframework/zend-http (Zend\\Http for PubSubHubbub, and optionally for use with Zend\\Feed\\Reader)\r\nzendframework/zend-feed suggests installing zendframework/zend-servicemanager (Zend\\ServiceManager component, for easily extending ExtensionManager implementations)\r\nzendframework/zend-feed suggests installing zendframework/zend-validator (Zend\\Validator component, for validating email addresses used in Atom feeds and entries ehen using the Writer subcomponent)\r\nleague/flysystem suggests installing league/flysystem-aws-s3-v2 (Allows you to use S3 storage with AWS SDK v2)\r\nleague/flysystem suggests installing league/flysystem-aws-s3-v3 (Allows you to use S3 storage with AWS SDK v3)\r\nleague/flysystem suggests installing league/flysystem-azure (Allows you to use Windows Azure Blob storage)\r\nleague/flysystem suggests installing league/flysystem-cached-adapter (Flysystem adapter decorator for metadata caching)\r\nleague/flysystem suggests installing league/flysystem-copy (Allows you to use Copy.com storage)\r\nleague/flysystem suggests installing league/flysystem-dropbox (Allows you to use Dropbox storage)\r\nleague/flysystem suggests installing league/flysystem-eventable-filesystem (Allows you to use EventableFilesystem)\r\nleague/flysystem suggests installing league/flysystem-rackspace (Allows you to use Rackspace Cloud Files)\r\nleague/flysystem suggests installing league/flysystem-sftp (Allows you to use SFTP server storage via phpseclib)\r\nleague/flysystem suggests installing league/flysystem-webdav (Allows you to use WebDAV storage)\r\nleague/flysystem suggests installing league/flysystem-ziparchive (Allows you to use ZipArchive adapter)\r\npixelandtonic/imagine suggests installing ext-imagick (to use the Imagick implementation)\r\npixelandtonic/imagine suggests installing ext-gmagick (to use the Gmagick implementation)\r\ncraftcms/cms suggests installing ext-imagick (Adds support for more image processing formats and options.)\r\ncraftcms/cms suggests installing ext-intl (Adds rich internationalization support.)\r\n```\r\n\r\nIf these suggestions were instead organised by the suggesting package, and left out the package descriptions (perhaps unless a verbose flag is set), we'd end up with something like this:\r\n\r\n```\r\nzendframework/zend-feed suggests installing:\r\n  - zendframework/zend-cache\r\n  - zendframework/zend-db\r\n  - zendframework/zend-http\r\n  - zendframework/zend-servicemanager\r\n  - zendframework/zend-validator\r\n\r\nleague/flysystem suggests installing:\r\n  - league/flysystem-aws-s3-v2\r\n  - league/flysystem-aws-s3-v3\r\n  - league/flysystem-azure\r\n  - league/flysystem-cached-adapter\r\n  - league/flysystem-copy\r\n  - league/flysystem-dropbox\r\n  - league/flysystem-eventable-filesystem\r\n  - league/flysystem-rackspace\r\n  - league/flysystem-sftp\r\n  - league/flysystem-webdav\r\n  - league/flysystem-ziparchive\r\n\r\npixelandtonic/imagine suggests installing:\r\n  - ext-imagick\r\n  - ext-gmagick\r\n\r\ncraftcms/cms suggests installing:\r\n  - ext-imagick\r\n  - ext-intl\r\n```\r\n\r\nWe could condense this even further using space-delimited lists (similar to apt):\r\n\r\n```\r\nzendframework/zend-feed suggests installing:\r\n  zendframework/zend-cache zendframework/zend-db zendframework/zend-http\r\n  zendframework/zend-servicemanager zendframework/zend-validator\r\n\r\nleague/flysystem suggests installing:\r\n  league/flysystem-aws-s3-v2 league/flysystem-aws-s3-v3 league/flysystem-azure\r\n  league/flysystem-cached-adapter league/flysystem-copy league/flysystem-dropbox\r\n  league/flysystem-eventable-filesystem league/flysystem-rackspace\r\n  league/flysystem-sftp league/flysystem-webdav league/flysystem-ziparchive\r\n\r\npixelandtonic/imagine suggests installing:\r\n  ext-imagick ext-gmagick\r\n\r\ncraftcms/cms suggests installing:\r\n  ext-imagick ext-intl\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mistajolly": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6251", "title": "Issue with generated autoload_static.php on Windows", "body": "Using  standard laravel ```composer.json```, diagnose is all ok. \r\n\r\nWhen updating the `$prefixDirsPsr4` array in `autoload_static.php` contains the wrong entry for 'App\\\\'. Rather than a relative directory it uses an absolute path containing the windows drive letter. Strangely, the base install of laravel via composer works fine but this bug only shows on subsequent updates.\r\n\r\nI can manually fix this by replacing `'W:\\\\` with `__DIR__ . '/../..' .'`.\r\n\r\n```\r\n'App\\\\' => \r\n        array (\r\n            0 => 'W:\\\\/app',\r\n        )\r\n```\r\n\r\nshould be\r\n\r\n```\r\n'App\\\\' => \r\n        array (\r\n            0 => __DIR__ . '/../..' .'/app',\r\n        )\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "acoulton": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6221", "title": "Support strict (no ambiguous classes) mode for generating optimised autoloader", "body": "I'd love a `composer install --optimize-autoloader --prevent-ambiguous` (or similar named) option to make the install fail (rather than just print a warning) if it finds ambiguous class definitions.\r\n\r\nThe resolution of ambiguous class names is platform-dependent (the order composer finds the files varies between filesystems) which can lead to composer autoloading a totally different implementation of a class between development / build / production instances. Similarly classes contained in files that don't match the PSR-0/4 definition won't cause issues locally but may be found and used when the classmap is generated. For example this can happen if working / backup files are accidentally committed, or if a (badly-configured) dependency with a loose psr-0 definition comes with test / example files.\r\n\r\nIt can be very hard to debug and trace the problems this causes. They can arise at any time (even if the composer dependencies don't actually change), so a developer might not always notice them. Often the \"Ambiguous class resolution\" warnings will only arise within a remote build / deployment process and not be noticed - particularly if the composer command output doesn't appear in deployment logs.\r\n\r\nSo I'd like to be able to opt-in to have composer fail with an error if ambiguous classes are found, to force the end-user to fix that rather than hope the resolution is always going to be correct now and in future.\r\n\r\nI'm happy to work on a PR if you agree this is a good idea?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JanTvrdik": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6220", "title": "Changing order of dependencies results in installation failure.", "body": "The following `composer.json` results in installation failure.\r\n\r\n```json\r\n{\r\n\t\"require\": {\r\n\t\t\"guzzlehttp/guzzle\": \"^6.1\",\r\n\t\t\"aws/aws-sdk-php\": \"^3.19\"\r\n\t}\r\n}\r\n```\r\n\r\nOutput of `composer --no-plugins --no-ansi install -vvv`:\r\n\r\n```\r\n...\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.003 seconds\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - aws/aws-sdk-php 3.19.0 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.1 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.10 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.11 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.12 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.13 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.14 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.15 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.16 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.17 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.18 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.19 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.2 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.20 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.21 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.22 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.23 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.24 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.25 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.26 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.27 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.28 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.29 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.3 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.30 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.31 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.32 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.33 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.4 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.5 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.6 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.7 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.8 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.19.9 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.0 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.1 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.10 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.11 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.12 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.13 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.14 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.15 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.16 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.2 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.3 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.4 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.5 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.6 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.7 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.8 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.20.9 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.21.0 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.21.1 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.21.2 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.21.3 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.21.4 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.21.5 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.21.6 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.0 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.1 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.10 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.11 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.2 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.3 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.4 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.5 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.6 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.7 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.8 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.22.9 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.23.0 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - aws/aws-sdk-php 3.23.1 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n    - Conclusion: don't install guzzlehttp/psr7 1.3.1\r\n    - Installation request for aws/aws-sdk-php ^3.19 -> satisfiable by aws/aws-sdk-php[3.19.0, 3.19.1, 3.19.10, 3.19.11, 3.19.12, 3.19.13, 3.19.14, 3.19.15, 3.19.16, 3.19.17, 3.19.18, 3.19.19, 3.19.2, 3.19.20, 3.19.21, 3.19.22, 3.19.23, 3.19.24, 3.19.25, 3.19.26, 3.19.27, 3.19.28, 3.19.29, 3.19.3, 3.19.30, 3.19.31, 3.19.32, 3.19.33, 3.19.4, 3.19.5, 3.19.6, 3.19.7, 3.19.8, 3.19.9, 3.20.0, 3.20.1, 3.20.10, 3.20.11, 3.20.12, 3.20.13, 3.20.14, 3.20.15, 3.20.16, 3.20.2, 3.20.3, 3.20.4, 3.20.5, 3.20.6, 3.20.7, 3.20.8, 3.20.9, 3.21.0, 3.21.1, 3.21.2, 3.21.3, 3.21.4, 3.21.5, 3.21.6, 3.22.0, 3.22.1, 3.22.10, 3.22.11, 3.22.2, 3.22.3, 3.22.4, 3.22.5, 3.22.6, 3.22.7, 3.22.8, 3.22.9, 3.23.0, 3.23.1].\r\n```\r\n\r\nBut when I CHANGE THE ORDER OF DEPENDENCIES, i.e. the `composer.json` looks like this\r\n\r\n```json\r\n{\r\n\t\"require\": {\r\n\t\t\"aws/aws-sdk-php\": \"^3.19\",\r\n\t\t\"guzzlehttp/guzzle\": \"^6.1\"\r\n\t}\r\n}\r\n```\r\n\r\nthe installation succeeds.\r\n\r\n~~~\r\n...\r\nResolving dependencies through SAT\r\nDependency resolution completed in 0.005 seconds\r\nAnalyzed 511 packages to resolve dependencies\r\nAnalyzed 3112 rules to resolve dependencies\r\nPackage operations: 6 installs, 0 updates, 0 removals\r\nInstalls: mtdowling/jmespath.php:2.4.0, guzzlehttp/promises:v1.3.1, psr/http-message:1.0.1, guzzlehttp/psr7:1.3.1, guzzlehttp/guzzle:6.2.2, aws/aws-sdk-php:3.23.1\r\n  - Installing mtdowling/jmespath.php (2.4.0)Reading C:/SoftPortable/msys64/home/John/.composer/cache/files/mtdowling/jmespath.php/49cf6ab986a84171b0ad7caeb1b2af0ff3b1b067.zip from cache\r\n Loading from cache Extracting archive\r\n    REASON: aws/aws-sdk-php 3.23.1 requires mtdowling/jmespath.php ~2.2 -> satisfiable by mtdowling/jmespath.php[2.2.0, 2.3.0, 2.4.0].\r\n\r\n  - Installing guzzlehttp/promises (v1.3.1)Reading C:/SoftPortable/msys64/home/John/.composer/cache/files/guzzlehttp/promises/ba05e5df3bded4f01482d4b16ae313a79742eba6.zip from cache\r\n Loading from cache Extracting archive\r\n    REASON: guzzlehttp/guzzle 6.2.2 requires guzzlehttp/promises ^1.0 -> satisfiable by guzzlehttp/promises[1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.1.0, 1.2.0, 1.3.0, v1.3.1].\r\n\r\n  - Installing psr/http-message (1.0.1)Reading C:/SoftPortable/msys64/home/John/.composer/cache/files/psr/http-message/cc1d4e9ee13f2053b80c08976256789bf3be5256.zip from cache\r\n Loading from cache Extracting archive\r\n    REASON: guzzlehttp/psr7 1.3.1 requires psr/http-message ~1.0 -> satisfiable by psr/http-message[1.0, 1.0.1].\r\n\r\n  - Installing guzzlehttp/psr7 (1.3.1)Reading C:/SoftPortable/msys64/home/John/.composer/cache/files/guzzlehttp/psr7/fb78146b84b56dd4ed4c87f05d93e7932beaff35.zip from cache\r\n Loading from cache Extracting archive\r\n    REASON: aws/aws-sdk-php 3.23.1 requires guzzlehttp/psr7 ~1.3.1 -> satisfiable by guzzlehttp/psr7[1.3.1].\r\n\r\n  - Installing guzzlehttp/guzzle (6.2.2)Reading C:/SoftPortable/msys64/home/John/.composer/cache/files/guzzlehttp/guzzle/b17246bf6f706debba2733a6cc276c746c77b9f9.zip from cache\r\n Loading from cache Extracting archive\r\n    REASON: Required by the root package: Install command rule (install guzzlehttp/guzzle 6.1.0|install guzzlehttp/guzzle 6.1.1|install guzzlehttp/guzzle 6.2.0|install guzzlehttp/guzzle 6.2.1|install guzzlehttp/guzzle 6.2.2|install guzzlehttp/guzzle 6.2.3)\r\n\r\n  - Installing aws/aws-sdk-php (3.23.1)Reading C:/SoftPortable/msys64/home/John/.composer/cache/files/aws/aws-sdk-php/3ef36ed069a532e7156f0b4bab18aa32abb15642.zip from cache\r\n Loading from cache Extracting archive\r\n    REASON: Required by the root package: Install command rule (install aws/aws-sdk-php 3.19.0|install aws/aws-sdk-php 3.19.1|install aws/aws-sdk-php 3.19.10|install aws/aws-sdk-php 3.19.11|install aws/aws-sdk-php 3.19.12|install aws/aws-sdk-php 3.19.13|install aws/aws-sdk-php 3.19.14|install aws/aws-sdk-php 3.19.15|install aws/aws-sdk-php 3.19.16|install aws/aws-sdk-php 3.19.17|install aws/aws-sdk-php 3.19.18|install aws/aws-sdk-php 3.19.19|install aws/aws-sdk-php 3.19.2|install aws/aws-sdk-php 3.19.20|install aws/aws-sdk-php 3.19.21|install aws/aws-sdk-php 3.19.22|install aws/aws-sdk-php 3.19.23|install aws/aws-sdk-php 3.19.24|install aws/aws-sdk-php 3.19.25|install aws/aws-sdk-php 3.19.26|install aws/aws-sdk-php 3.19.27|install aws/aws-sdk-php 3.19.28|install aws/aws-sdk-php 3.19.29|install aws/aws-sdk-php 3.19.3|install aws/aws-sdk-php 3.19.30|install aws/aws-sdk-php 3.19.31|install aws/aws-sdk-php 3.19.32|install aws/aws-sdk-php 3.19.33|install aws/aws-sdk-php 3.19.4|install aws/aws-sdk-php 3.19.5|install aws/aws-sdk-php 3.19.6|install aws/aws-sdk-php 3.19.7|install aws/aws-sdk-php 3.19.8|install aws/aws-sdk-php 3.19.9|install aws/aws-sdk-php 3.20.0|install aws/aws-sdk-php 3.20.1|install aws/aws-sdk-php 3.20.10|install aws/aws-sdk-php 3.20.11|install aws/aws-sdk-php 3.20.12|install aws/aws-sdk-php 3.20.13|install aws/aws-sdk-php 3.20.14|install aws/aws-sdk-php 3.20.15|install aws/aws-sdk-php 3.20.16|install aws/aws-sdk-php 3.20.2|install aws/aws-sdk-php 3.20.3|install aws/aws-sdk-php 3.20.4|install aws/aws-sdk-php 3.20.5|install aws/aws-sdk-php 3.20.6|install aws/aws-sdk-php 3.20.7|install aws/aws-sdk-php 3.20.8|install aws/aws-sdk-php 3.20.9|install aws/aws-sdk-php 3.21.0|install aws/aws-sdk-php 3.21.1|install aws/aws-sdk-php 3.21.2|install aws/aws-sdk-php 3.21.3|install aws/aws-sdk-php 3.21.4|install aws/aws-sdk-php 3.21.5|install aws/aws-sdk-php 3.21.6|install aws/aws-sdk-php 3.22.0|install aws/aws-sdk-php 3.22.1|install aws/aws-sdk-php 3.22.10|install aws/aws-sdk-php 3.22.11|install aws/aws-sdk-php 3.22.2|install aws/aws-sdk-php 3.22.3|install aws/aws-sdk-php 3.22.4|install aws/aws-sdk-php 3.22.5|install aws/aws-sdk-php 3.22.6|install aws/aws-sdk-php 3.22.7|install aws/aws-sdk-php 3.22.8|install aws/aws-sdk-php 3.22.9|install aws/aws-sdk-php 3.23.0|install aws/aws-sdk-php 3.23.1)\r\n...\r\n~~~", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "core23": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6207", "title": "Problem resolving lowest versions", "body": "I got a strange problem, when calling running composer on clean project with the follwing `composer.json` file:\r\n\r\n```json\r\n{\r\n  \"require\": {\r\n    \"friendsofphp/php-cs-fixer\": \"^2.0\",\r\n    \"matthiasnoback/symfony-dependency-injection-test\": \"^1.1\",\r\n    \"phpunit/phpunit\": \"^5.7\",\r\n    \"sonata-project/admin-bundle\": \"^3.1\"\r\n  }\r\n}\r\n\r\n```\r\n\r\nOutput of `composer diagnose`:\r\n\r\n```\r\nChecking platform settings: OK\r\nChecking git settings: OK\r\nChecking http connectivity to packagist: OK\r\nChecking https connectivity to packagist: OK\r\nChecking github.com oauth access: OK\r\nChecking disk free space: OK\r\nChecking pubkeys: \r\nTags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642\r\nDev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952\r\nOK\r\nChecking composer version: OK\r\n```\r\n\r\nWhen I run this command:\r\n\r\n```\r\ncomposer update --prefer-lowest\r\n```\r\n\r\nI get the following output:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - phpunit/phpunit 5.7.0 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.1 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.10 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.11 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.12 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.13 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.14 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.2 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.3 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.4 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.5 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.6 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.7 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.8 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - phpunit/phpunit 5.7.9 requires sebastian/exporter ~2.0 -> satisfiable by sebastian/exporter[2.0.0].\r\n    - Conclusion: don't install sebastian/exporter 2.0.0\r\n    - Installation request for phpunit/phpunit ^5.7 -> satisfiable by phpunit/phpunit[5.7.0, 5.7.1, 5.7.10, 5.7.11, 5.7.12, 5.7.13, 5.7.14, 5.7.2, 5.7.3, 5.7.4, 5.7.5, 5.7.6, 5.7.7, 5.7.8, 5.7.9].\r\n\r\n```\r\n\r\nI don't get why the `sebastian/exporter` 2.0.0 dependency couldn't be loaded, because only two libs use this dependency (`matthiasnoback/symfony-dependency-injection-test` and `phpunit/phpunit`).\r\n\r\nCuriously when I remove any dependency, composer will update my project.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/5505", "title": "dev-master does not use branch-alias when compared against conflict rules (bug?)", "body": "With the following composer.json:\n\n``` json\n{\n    \"name\": \"acme/test-bundle\",\n    \"type\": \"symfony-bundle\",\n    \"require\": {\n        \"php\": \"^5.3 || ^7.0\",\n        \"sonata-project/classification-bundle\": \"^4.0@dev\",\n        \"sonata-project/media-bundle\": \"^4.0@dev\"\n    }\n}\n```\n\nWhen I run this command:\n\n```\ncomposer update\n```\n\nI get this output:\n\n```\nYour requirements could not be resolved to an installable set of packages.\n\n  Problem 1\n    - Installation request for sonata-project/classification-bundle ^4.0@dev -> satisfiable by sonata-project/classification-bundle[4.x-dev].\n    - don't install sonata-project/media-bundle 4.x-dev|install sonata-project/media-bundle dev-master\n    - sonata-project/media-bundle dev-master conflicts with sonata-project/classification-bundle[4.x-dev].\n    - Installation request for sonata-project/media-bundle ^4.0@dev -> satisfiable by sonata-project/media-bundle[4.x-dev].\n```\n\nThis should resolve in installing both libraries in the latest `master` branch versions, because both have a branch-alias `\"dev-master\": \"4.x-dev\"`. Both library have a cyclic dependency ([media](https://github.com/sonata-project/SonataMediaBundle/blob/master/composer.json) and [classification](https://github.com/sonata-project/SonataClassificationBundle/blob/master/composer.json)).\n\nThe classification bundle has also a `conflict` setting, which prevents installing a version greater or lower 4.x. The upper rule seams to be the problem, because when I removed the upper conflict rule (`>= 5.0`) the dependencies could be resolved. Refs https://github.com/sonata-project/SonataClassificationBundle/pull/224.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5505/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "timkelty": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6187", "title": "Intermittent missing files from composer install", "body": "When I run `composer install`, I intermittently end up with an incomplete `vendor` folder. I don't see any errors or anything to indicate it didn't successfully install.\r\n\r\nIf I remove the `vendor` folder and `composer install` again, all is well.\r\n\r\nThis is a huge problem because I'm `composer install`ing on deploy, so it results in a broken deploy.\r\n\r\nHere is an example of a file `diff` between two identical directories that `composer install` was run in. You'll notice one is missing a ton of files (and therefore broke the site on deploy). https://gist.github.com/timkelty/e1c2b4352730ab16d36f437ba1b3aa42\r\n\r\nMy only lead is this troubleshooting note: https://getcomposer.org/doc/articles/troubleshooting.md#zip-archives-are-not-unpacked-correctly- However, I don't even see details on where or what to set to change this.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fredemmott": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6171", "title": "Support autoloading functions, classes, constants on HHVM", "body": "I have a [fairly involved plugin](https://github.com/hhvm/hhvm-autoload/) with a userspace parser to do this, however in HHVM 3.18+ that's not necessary: an extension was added exposing the required information: https://github.com/facebook/hhvm/blob/master/hphp/runtime/ext/factparse/ext_factparse.php#L13-L73\r\n\r\nOnly slight restructuring (and converting classes, functions, and types to lowercase) is needed to use that data with [HH\\autoload_set_paths()](https://docs.hhvm.com/hack/reference/function/HH.autoload_set_paths/).", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6171/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pixiesky": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6153", "title": "Self update prompt", "body": "Currently composer will say after 60 days:\r\n\r\n> Warning: This development build of composer is over 60 days old. It is recommended to update it by running \"/home/vagrant/bin/composer self-update\" to get the latest version.\r\n\r\nIt then immediately proceeds to run the command. I would like to be prompted with an option to update first before continuing.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6153/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Berdir": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6131", "title": "Inexplainable dependency conflict", "body": "Steps to reproduce:\r\n\r\nhttps://github.com/Berdir/strict-dependency-bug\r\n\r\nOutput:\r\n\r\n```\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - berdir/strict-dependency-bug 1.0.0 requires webflo/drupal-core-strict 8.2.6 -> satisfiable by webflo/drupal-core-strict[8.2.6].\r\n    - berdir/strict-dependency-bug 1.0.1 requires webflo/drupal-core-strict 8.2.6 -> satisfiable by webflo/drupal-core-strict[8.2.6].\r\n    - Conclusion: don't install webflo/drupal-core-strict 8.2.6\r\n    - Installation request for berdir/strict-dependency-bug ^1.0 -> satisfiable by berdir/strict-dependency-bug[1.0.0, 1.0.1].\r\n\r\n\r\nInstallation failed, reverting ./composer.json to its original content.\r\n```\r\n\r\nThe problem is related to having more than one valid version in strict-dependency-bug, if you do \"composer require berdir/strict-dependency-bug:1.0.1\" instead, it installs fine.\r\n\r\nThe error doesn't really make sense, how can there be a conflict because of two identical versions?\r\n\r\ndrupal-core-strict is a package that aims to enforce the same dependencies as defined in Drupal's composer.lock. We've noticed that sometimes there are unexpected changes in untested dependencies versions, this is an idea to prevent that.\r\n\r\n(That might or might not really be a good idea. I mostly sharing this in case there's a deeper depencency resolving problem here)\r\n\r\nAny idea what's going on? ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mikeymike": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6096", "title": "create project http auth is overridden by global auth.json", "body": "We work on Magento and have to access their composer repository to pull packages down. This has basic http auth running for both it's community and enterprise packages. \r\n\r\nWe keep our personal keys which have access to public repositories in ~/.composer/auth.json\r\n\r\nWhen running the command below it fails trying to find the EE package. After removing the personal auth details from the global auth.json file it works fine. \r\n\r\n```\r\ncreate-project -q --repository=\"https://xxxx:xxxx@repo.magento.com\" magento/project-enterprise-edition magento2\r\n```\r\n\r\nUnfortunately running `-vvv` doesn't provide any more details on what's actually happening so I can  at this point only assume it doesn't check if the http auth details are in the url and always uses the auth.json details if they exist. \r\n\r\nIs this intentional, it would seem to me that details provided on cli would take precedence ?\r\n\r\nThanks \ud83d\ude04 ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/5012", "title": "Autoload dump uses cwd instead configured baseDir", "body": "hey guys... I'm working on a project for [PHPSchool](http://phpschool.io) (shameless plug) to manage workshops on the users machine (install, uninstall, search etc etc) \n\nI'm using Composer internals to run a Composer install for the downloaded workshops instead of executing Composer directly which is running fine with the code below (just a snippet)\n\n``` php\n$composer = $this->factory->createComposer(\n    $this->io,\n    sprintf('%s/composer.json', $workshopPath),\n    false,\n    $workshopPath\n);\n\n$installer  = ComposerInstaller::create($this->io, $composer);\n$installer->run();\n```\n\nThe `createComposer` method allows for the `cwd` to be passed in, so in my use case I'm passing in the path to the workshop (`~/.php-school/workshops/workshopname`). The value passed in is then used to create the `Config` object to create paths for `vendor-dir` etc etc in the `get` method.\n\nMy problem is that the [AutoloadGenerator uses getcwd](https://github.com/composer/composer/blob/master/src/Composer/Autoload/AutoloadGenerator.php#L102) which after a successful installation leaves the  generated autoload file with the basepath of the workshop manager rather than the workshop itself. \n\nThe quick easy fix for me is to change dir before I install but this doesn't seem right as I'm allowed to set the cwd when I create the Composer obj. \n\nUnfortunately Config doesn't expose the baseDir property either so there doesn't look like there is currently a way to get that base path when generating the autoload files. \n\nShould the Config class expose the base dir so the internals can use the defined baseDir throughout ? \n\nI'm up for creating a PR for this but just wanted to get some thoughts before I do. \n\nThanks :smile: \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AdrianSkierniewski": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6059", "title": "Passing SIGINT to script process", "body": "Hi,\r\n\r\nI noticed that when I kill composer script command (like this below) using ctrl+c, Codeception is still running tests. The problem was more complex than and though at the beginning. Since PHP 7.0, ticks won't work as before ([Codeception issue](https://github.com/Codeception/Codeception/issues/3607)), but PHP 7.1 introduced new feature called [pcntl_async_signals](http://php.net/manual/en/migration71.new-features.php#migration71.new-features.asynchronous-signal-handling), so I decided to create PR for Codeception with fix for 7.1.\r\nAfter fixing Codeception issue I noticed that composer isn't passing the signal to the child process. Later after some investigation, I manage to fix that by adding some PHP 7.1 code in ProcessExecutor (check above).\r\n\r\n```\r\n \"scripts\": {\r\n        ...\r\n        \"test\": [\r\n            \"php vendor/bin/codecept run\"\r\n        ]\r\n```\r\n\r\n```\r\n        pcntl_async_signals(true);\r\n        pcntl_signal(SIGINT, function($sig) use ($process) {\r\n            $process->stop(0, SIGINT);\r\n        });\r\n```\r\n\r\n\r\nUnfortunately, my problem is even more complex, because in the middle I have a docker container and I can't force composer to run docker in TTY mode, so my signals won't reach Codeception after all. I'd probably create a custom script to run those tests instead putting them in composer scripts section, but I wanted to share my research with you guys.\r\n\r\n```\r\n \"scripts\": {\r\n        ...\r\n        \"test\": [\r\n            \"docker exec -it project_web_server_1 php /var/www/vendor/bin/codecept run -c /var/www\"\r\n\r\n        ]\r\n```\r\n```\r\nthe input device is not a TTY\r\n```", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mente": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/6042", "title": "openid connect support?", "body": "composer supports both github oauth and gitlab oauth. Is there any plan to support [OpenID Connect](http://openid.net/connect/)? If there's no plan - are there objections for contribution?\r\n\r\nIt's built on top of oauth so shouldn't be that hard (but I might be too lame). For example it would be great for organizations with [openresty](http://openresty.org/en/)", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/6042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alcaeus": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5987", "title": "Composer update fails when providing platform package", "body": "This may be related to #5030.\r\n\r\nLet's start out with the following `composer.json`:\r\n```json\r\n{\r\n    \"require\": {\r\n        \"alcaeus/mongo-php-adapter\": \"1.0.6\",\r\n        \"doctrine/mongodb\": \"^1.3\"\r\n    }\r\n}\r\n```\r\n\r\n(Note: the exact version constraint for mongo-php-adapter is required for the next step to work)\r\n\r\nRunning `composer install` will fail due to the problem specified in #5030, thus we run `composer install --ignore-platform-reqs`:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\n  - Installing mongodb/mongodb (1.1.0)\r\n    Loading from cache\r\n\r\n  - Installing alcaeus/mongo-php-adapter (1.0.6)\r\n    Loading from cache\r\n\r\n  - Installing doctrine/lexer (v1.0.1)\r\n    Loading from cache\r\n\r\n  - Installing doctrine/inflector (v1.1.0)\r\n    Loading from cache\r\n\r\n  - Installing doctrine/collections (v1.3.0)\r\n    Loading from cache\r\n\r\n  - Installing doctrine/cache (v1.6.1)\r\n    Loading from cache\r\n\r\n  - Installing doctrine/annotations (v1.3.0)\r\n    Loading from cache\r\n\r\n  - Installing doctrine/common (v2.7.1)\r\n    Loading from cache\r\n\r\n  - Installing doctrine/mongodb (1.4.0)\r\n    Loading from cache\r\n\r\ndoctrine/mongodb suggests installing jmikola/geojson (Support GeoJSON geometry objects in 2dsphere queries)\r\nWriting lock file\r\nGenerating autoload files\r\n```\r\n\r\nNow we update the version constraint for mongo-php-adapter:\r\n```json\r\n{\r\n    \"require\": {\r\n        \"alcaeus/mongo-php-adapter\": \"1.0.7\",\r\n        \"doctrine/mongodb\": \"^1.3\"\r\n    }\r\n}\r\n```\r\n\r\nRunning `composer update` will yield an error:\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - doctrine/mongodb 1.4.0 requires ext-mongo ^1.5 -> satisfiable by alcaeus/mongo-php-adapter[1.0.6].\r\n    - doctrine/mongodb 1.3.0 requires ext-mongo ^1.5 -> satisfiable by alcaeus/mongo-php-adapter[1.0.6].\r\n    - doctrine/mongodb 1.4.0 requires ext-mongo ^1.5 -> satisfiable by alcaeus/mongo-php-adapter[1.0.6].\r\n    - Can only install one of: alcaeus/mongo-php-adapter[1.0.7, 1.0.6].\r\n    - Installation request for alcaeus/mongo-php-adapter 1.0.7 -> satisfiable by alcaeus/mongo-php-adapter[1.0.7].\r\n    - Installation request for doctrine/mongodb ^1.3 -> satisfiable by doctrine/mongodb[1.3.0, 1.4.0].\r\n\r\n  To enable extensions, verify that they are enabled in those .ini files:\r\n    - /usr/local/etc/php/7.1/php.ini\r\n    - /usr/local/etc/php/7.1/conf.d/ext-imagick.ini\r\n    - /usr/local/etc/php/7.1/conf.d/ext-intl.ini\r\n    - /usr/local/etc/php/7.1/conf.d/ext-mongodb.ini\r\n    - /usr/local/etc/php/7.1/conf.d/ext-v8js.ini\r\n    - /usr/local/etc/php/7.1/conf.d/ext-xdebug.ini\r\n    - /usr/local/etc/php/7.1/conf.d/memory.ini\r\n    - /usr/local/etc/php/7.1/conf.d/timezone.ini\r\n  You can also run `php --ini` inside terminal to see which files are used by PHP in CLI mode.\r\n```\r\n\r\nExpected behavior: the update is made without problem since the original package dependency is still filled. The special use case is that mongo-php-adapter `provides` ext-mongo as a polyfill.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rogervila": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5959", "title": "Option for keeping only last cached version of every package", "body": "The cache folder uses a lot of disk space, but I don't like to clear it because, after doing it, new projects take a lot of time.\r\n\r\nIs it possible to apply an option that keeps only the last cached version?\r\n\r\nSomething like `composer clear-cache --old`", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "emanuelb": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5940", "title": "Support checksum (sha256) verification in dist fields (for downloaded data)", "body": "While it will not provide the security offered by signing verification:\r\nhttps://github.com/composer/composer/issues/4022\r\n\r\nit easier to implement and does help against malformed target resource (server/mirror/CDN hacked / MITM on connection / etc...) when assuming composer.json content authentic.\r\n\r\nsuggestion:\r\nadd sha256 field that will verify the downloaded data.\r\nfor example in:\r\nhttps://www.phpmyadmin.net/packages.json\r\nall the dist fields except dev-master can contain sha256 field that contain checksum as they point to static files.", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "williamyeh": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5881", "title": "problem with chocolatey intallation", "body": "I'm new to a lot of these things, composer, php, vagrant, homstead, laravel.\r\nBut I found this problem.\r\nSo I was trying to install php and then composer.\r\nI am using windows 10, I used chocolatey package manager to install php.\r\nThen I think I used chocolatey to install composer.\r\nWhat happened is using chocolatey to install composer, it tried to find php on the root directory on C drive. \r\nHowever, chocolatey installed php on C:\\tools\\php.\r\nMaybe there should be a fix in some corresponded scripts? ", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yozman": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5856", "title": "how to run composer script as interactive shell mode?", "body": "hey guys,\r\n\r\nI required `psy/psysh` with composer,\r\nand define a script like\r\n```json\r\n\"scripts\": {\r\n  \"fly\": \"vendor/bin/psysh\"\r\n}\r\n```\r\n\r\nwhen I run `composer fly`\r\nit runs and exit automatic\r\n`composer exec psysh`\r\nis also the same problem,\r\nonly `php vendor/bin/psysh` works.\r\n\r\nhow can I fix it?\r\n\r\nBy the way this is `psysh` author's answer,\r\nhttps://github.com/bobthecow/psysh/issues/328#issuecomment-258663553\r\nhe said composer script is running under a non-interactive mode\r\ncould you please help me?", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5856/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AndreKR": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5796", "title": "Ability to suppress progress output via environment variable", "body": "It seems that currently there is only a command line option (`--no-progress`) but no environment variable available to suppress composers progress output.\n\nI tried using `COMPOSER_NO_INTERACTION` thinking it might also suppress progress output (because it's also kind of a user interaction) but it doesn't.\n\nEnvironment variables are much easier to work with in CI environments, so it would be nice to be able to control this via environment variable.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "josephabrahams": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5769", "title": "Set Environment Variable When `no-dev` option is passed", "body": "It would be very useful to be able to determine is the `no-dev` option has been set when running `post-install-cmd` scripts.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thedamnedrhino": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5761", "title": "extend `composer depends` to work with \"vendor-name/*\"", "body": "As it stands the `depends` command only supports retrieving the dependents of a specific package, and it would be a really welcome Feature if one could search using the `*` package notation, as in the `update` command: `composer update symfony/*`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomasnagy": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5759", "title": "Unable to add extra installer paths through command line.", "body": "We've been trying to add extra installer-paths to composer.json through command line.\nThis to automate our internal project creation workflow. \n\nWhen executing the following the value gets added as  a string.\n`composer config extra.installer-paths.web/modules/custom/{\\$name} type:drupal-module-custom`\n\nIt creates:\n\n```\n\"extra\": {\n        \"installer-paths\": {\n            ...\n            \"web/themes/contrib/{$name}\": \"type:drupal-theme\",\n}\n```\n\nBut it should be:\n\n```\n\"extra\": {\n        \"installer-paths\": {\n            ...\n            \"web/themes/contrib/{$name}\": [\"type:drupal-theme\"],\n}\n```\n\nBut for installer paths it has to be added as an array.\nDocumentation for this seems to be limited.\n\nIs this currently not supported or is there another way to achieve the same result?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5759/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamiel": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5716", "title": "Create event before VCS clone", "body": "Currently there is a PRE_FILE_DOWNLOAD event which gets fired just before composer downloads a file. It would be great to have a similar event before it pulls a remote repository via the VCS downloaders.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "backbone87": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5681", "title": "GitExcludeFilter is not conforming with gitignore spec", "body": "from https://www.kernel.org/pub/software/scm/git/docs/gitignore.html\n\nviolated rules:\n1. **Trailing spaces are ignored unless they are quoted with backslash (\"\\\").** _lines get blindly trimmed at https://github.com/composer/composer/blob/master/src/Composer/Package/Archiver/BaseExcludeFilter.php#L83_\n2. An optional prefix \"!\" which negates the pattern; any matching file excluded by a previous pattern will become included again. **It is not possible to re-include a file if a parent directory of that file is excluded. Git doesn\u2019t list excluded directories for performance reasons, so any patterns on contained files have no effect, no matter where they are defined.** Put a backslash (\"\\\") in front of the first \"!\" for patterns that begin with a literal \"!\", for example, \"!important!.txt\". _every non empty directory gets iterated, even if all directory contents are filtered out_\n3. **If the pattern ends with a slash, it is removed for the purpose of the following description, but it would only find a match with a directory. In other words, foo/ will match a directory foo and paths underneath it, but will not match a regular file or a symbolic link foo (this is consistent with the way how pathspec works in general in Git).** _currently every pattern with a trailing slash matches nothing! this is because trailing slashes are not trimmed, but the final pattern has a lookahead for $ or /_\n4. _Also overriding gitignore files in subdirectories are ignored._\n\n1 and 3 should be easy to fix.\n\n2 though would require more work, because composer relies on the symfony finder and it cant handle such a requirement. this isnt such a big problem currently, because the iterator is mainly used for checked out git repositories, where no ignored files are included.\n\n4 would be more work too, but i dont think this one is high on priority\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/2880", "title": "installation broken, if a update/install fails after some packages were already deployed", "body": "if you update/install an installation and the process fails, when there were some packages already deployed, you end up in a broken installation, because a) there may be packages deployed that are incompatible to one or another and b) the autoload wasnt dumped.\n\nthis happens for example, when a download of a package fails due to remote network issues.\n\nsolutions:\n- in short term, you may be able to separate the download process of each package and execute them before the packages are installed (download all packages, then install all packages)\n- in the long run, it would be nice if the installation is done into a new \"temp vendor\" and after all is set and done, a rename of this \"temp vendor\" dir is done and the old one unlinked.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/2080", "title": "Documentation of the dependency resolution", "body": "Is there a documentation which exactly describes how the dependency resolver _should_ work. I did not found anything.\n\nIf this does not exist so far, is there interest in creating such a document? I think it would be a great reference for further development of Composer and would manifest the behavior to expect when dealing with complex dependency situations.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zerkms": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5673", "title": "[feature request] a link to github comparison on `outdated` command", "body": "How about having another column in the output of the `composer outdated` that leads to the comparison page for the currently installed and the current best candidate versions?\n\nEg: https://github.com/composer/composer/compare/1.2.0...1.2.1\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "christian-weiss": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5647", "title": "\"composer require\" and \"composer require --dev\" do not honor composer.json settings", "body": "When my project contains this:\n\n```\n{\n    \"name\": \"myvendor/yourpackagenamehere\",\n    \"description\": \"This composer package is the  webshop project.\",\n    \"license\": \"proprietary\",\n    \"minimum-stability\": \"stable\",\n    \"require\": {},\n    \"require-dev\": {},\n    \"repositories\": [\n        {\n            \"type\": \"composer\",\n            \"url\": \"https://toran.my.local/repo/private/\"\n        },\n        {\n            \"type\": \"composer\",\n            \"url\": \"https://toran.my.local/repo/packagist/\"\n        },\n        {\"packagist\": false}\n    ],\n    \"config\": {\n        \"secure-http\" : true,\n        \"cafile\":\"my-CA.cer\"\n    }\n}\n```\n\nThen composer is not allowed to talk to packagist (see \"packagist\":false). But when i run:\n`composer require`\nor \n`composer require --dev`\nand enter \"myvendor\" as search text it shows this error:\n\n> [Composer\\Downloader\\TransportException]  \n>   The \"https://packagist.org/search.json?q=myvendor&type=%type%\" file could not be downloaded: SSL operation failed with code 1. OpenSSL Error messages:  \n>   error:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed  \n>   Failed to enable crypto  \n>   failed to open stream: operation failed                                                                                                                      \n> \n> require [--dev] [--prefer-source] [--prefer-dist] [--no-progress] [--no-update] [--update-no-dev] [--update-with-dependencies] [--ignore-platform-reqs] [--sort-packages] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--] [<packages>]...\n\nThe SSL issues is just a follow-up issue. Maybe because composer tries to validate packagist cert using my-CA.cer file, but that should not be discussed here. The main issue is, composer should talk to toran instead of packagist.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "svycka": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5620", "title": "does not install because of requirements could not be resolved.", "body": "please look at this PR https://github.com/svycka/sv-settings/pull/15\nI had `\"zendframework/zend-servicemanager\": \"^2.7.6 || ^3.1.1\",` in composer.json and it failed.\nerror log: https://travis-ci.org/svycka/sv-settings/jobs/154721628#L157-L169\nthen I changed to `\"zendframework/zend-servicemanager\": \"^2.7.5 || ^3.1.1\",` and everything installed but one strange thing it installed `\"zendframework/zend-servicemanager\": 2.7.6` (https://travis-ci.org/svycka/sv-settings/jobs/154725439#L179) so whats wrong with previous one?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5620/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "franz-josef-kaiser": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5602", "title": "Composer repository for dynamic packages receives no param for searched package?", "body": "I am in the process of building a _Composer proxy service/ repository_. Idea of the mini-service is to dynamically deliver language/ translation packages for themes or plugins from _WordPress_ API responses. The routes are the following:\n\n```\n https://api.wordpress.org/translations/plugins/1.0/?slug={slug}&version={version}\n```\n\nThe _Nodejs_-service itself is nothing than a proxy that should be added as `repository` to a `composer.json` of [`type:project`](https://getcomposer.org/doc/04-schema.md#type). The service itself returns the `providers-url`-key as part of the (dynamically generated) `packages.json` file.\n\n```\n\"providers-url\" : \"/\" + request.params.scope + \"/providers/%package%$%hash%.json\"\n```\n\nFor an example, please see the following `composer.json`:\n\n``` json\n{\n    \"name\"              : \"vendor/testproject\",\n    \"type\"              : \"wordpress-project\",\n    \"minimum-stability\" : \"dev\",\n    \"repositories\"      : [\n        {\n            \"type\" : \"composer\",\n            \"url\"  : \"https://{unique-ID}.ngrok.io/test\"\n        }\n    ]\n}\n```\n\nSo far I can only see requests to `/endpoint/packages.json`, but without any params. In an ideal world Composer would send along the `required` packages, either as header or as query param.\n\nI already looked (and tested) through all available options to try to _fake_ my way through the system to somehow get the requested package: `type:{composer|vcs|\u2026}`. Is there a way to make this happen? Or is there at least the _will_ to accept a PR to implement this \u2013 alongside an additional flag to enable that behavior?\n\n_A note regarding hosted services: there could be a combination of `notify-batch` and `request/require` options to gather some stats about searched and actually fetched repositories. This approach might allow to target \"to-cache\" packages much better._\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tractorcow": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5572", "title": "Handle unpushed branches (in vendor checkouts) more gracefully", "body": "As a result of change in behaviour from the following two changes: https://github.com/composer/composer/pull/4878 and https://github.com/composer/composer/pull/3633, it now becomes a lot risker to perform `composer update` within repositories which have installed dependencies with unpushed changes.\n\nMy project has the root composer.json as below:\n\n``` json\n{\n    \"name\": \"silverstripe/installer\",\n    \"description\": \"The SilverStripe Framework Installer\",\n    \"require\": {\n        \"php\": \">=5.3.2\",\n        \"silverstripe/cms\": \"3.1.x-dev\",\n        \"silverstripe/framework\": \"3.1.x-dev\",\n        \"silverstripe-themes/simple\": \"*\"\n    },\n    \"require-dev\": {\n        \"phpunit/PHPUnit\": \"~3.7@stable\"\n    },\n    \"config\": {\n        \"process-timeout\": 600\n    },\n    \"minimum-stability\": \"dev\"\n}\n```\n\nTypically I am working on changes within the silverstripe/framework repo, and prior to the above changes, I could reliably perform composer update periodically, and have any other module I have installed automatically updapte (as well as the framework module). I normally develop my changes on feature branches which don't typically live upstream.\n\nHowever, the result of #3633 is that having unpushed changes (on these branches) results in an error, rather than silently just doing the update, which before would switch back to the original branch and pull down upstream changes.\n\nAlthough #4878 catches this error, it offers two solutions which do not match either of the desired outcome.\n\nThe result of running `composer update` on my project looks similar to the below output:\n\n```\n  - Updating silverstripe/framework (3.1.x-dev 20d1167 => 3.1.x-dev 9621392)\n    Update failed (Source directory framework/ has unpushed changes on the current branch: \nBranch pulls/3.1/fix-select-escaping could not be found on the origin remote and appears to be unpushed)\n    Would you like to try reinstalling the package instead [yes]? \n```\n\nIf I select yes (or hit return) I have my repo deleted, including my unpushed pulls/3.1/fix-select-escaping branch (which of course, would be my own dumb fault for selecting the option, or for not pushing my changes to my fork!)\n\nHowever, the alternative to this is that installation halts.\n\nThe legacy behaviour, which is the one I would prefer to retain, is that framework would swap to whichever branch / tag it wished to update to, and would not delete any other branch which contained my local changes. I could easily then switch back to that branch to continue my work. In fact, if there were no changes upstream, it would not switch the branch at all.\n\nCould I suggest an enhancement to #3633 which would not raise the error if the current branch would otherwise be untouched? It feels like this is unnecessarily an error which could simply be logged to the stderr without interrupting the update.\n\nOf course, if I were on 3.1 branch with unpushed changes, and composer were attempting to update to upstream changes on the same branch, it would certainly be an error. This seems to be the use case that #3633 is attempting to address?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5572/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ezzatron": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5562", "title": "--ignore-platform-reqs does not handle \"conflict\" rules", "body": "With the following composer.json:\n\n``` json\n{\n    \"conflict\": {\n        \"php\": \"<99.0\"\n    }\n}\n```\n\nWhen I run this command:\n\n```\ncomposer install --ignore-platform-reqs\n```\n\nI get this output:\n\n```\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\n\n  Problem 1\n    - Installation request for __root__ No version set (parsed as 1.0.0) -> satisfiable by __root__[No version set (parsed as 1.0.0)].\n    - php 7.0.6 conflicts with __root__[No version set (parsed as 1.0.0)].\n    - Installation request for php 7.0.6 -> satisfiable by php[7.0.6].\n```\n\nAnd I expected this to happen:\n\n```\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nNothing to install or update\nGenerating autoload files\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5562/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rohdef": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5522", "title": "When installing vendor binaries the path does not get updated", "body": "Running in a clean directory (that is there's no vendor folder or at least no vendor/bin) apart from tests:\n\nWith the following composer.json:\n\n``` json\n{\n  \"require-dev\": {\n    \"phpunit/phpunit\": \"5.*.*\"\n  },\n  \"scripts\": {\n    \"test\": [\n      \"@composer install\",\n      \"phpunit -c phpunit.xml\"\n    ]\n  }\n}\n```\n\nWhen I run this command:\n\n```\ncomposer test -vvv\n```\n\nI get this output:\n\n```\nphp composer.phar test -vvv\nReading ./composer.json\nLoading config file ./composer.json\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\nExecuting command (/var/www/html/bookstudenter): git branch --no-color --no-abbrev -v\nFailed to initialize global composer: Composer could not find the config file: /home/rohdef/.composer/composer.json\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\nRunning 685ff8699ba378cc815849fb7daa8d0d2d25c609 (2016-07-12 16:19:15) with PHP 7.0.8-0ubuntu0.16.04.1 on Linux / 4.4.0-30-generic\n> test: @pre-test\n> pre-test: @composer install\nExecuting command (CWD): /usr/bin/php7.0  /var/www/html/bookstudenter/composer.phar install\nLoading composer repositories with package information\nInstalling dependencies (including require-dev) from lock file\n  - Installing mikey179/vfsstream (v1.6.3)\n    Loading from cache\n\n  - Installing webmozart/assert (1.0.2)\n    Loading from cache\n\n  - Installing phpdocumentor/reflection-common (1.0)\n    Loading from cache\n\n  - Installing phpdocumentor/type-resolver (0.2)\n    Loading from cache\n\n  - Installing phpdocumentor/reflection-docblock (3.1.0)\n    Loading from cache\n\n  - Installing phpunit/php-token-stream (1.4.8)\n    Loading from cache\n\n  - Installing symfony/yaml (v3.1.2)\n    Loading from cache\n\n  - Installing sebastian/version (2.0.0)\n    Loading from cache\n\n  - Installing sebastian/resource-operations (1.0.0)\n    Loading from cache\n\n  - Installing sebastian/recursion-context (1.0.2)\n    Loading from cache\n\n  - Installing sebastian/object-enumerator (1.0.0)\n    Loading from cache\n\n  - Installing sebastian/global-state (1.1.1)\n    Loading from cache\n\n  - Installing sebastian/exporter (1.2.2)\n    Loading from cache\n\n  - Installing sebastian/environment (1.3.7)\n    Loading from cache\n\n  - Installing sebastian/diff (1.4.1)\n    Loading from cache\n\n  - Installing sebastian/comparator (1.2.0)\n    Loading from cache\n\n  - Installing phpunit/php-text-template (1.2.1)\n    Loading from cache\n\n  - Installing doctrine/instantiator (1.0.5)\n    Loading from cache\n\n  - Installing phpunit/phpunit-mock-objects (3.2.3)\n    Loading from cache\n\n  - Installing phpunit/php-timer (1.0.8)\n    Loading from cache\n\n  - Installing phpunit/php-file-iterator (1.4.1)\n    Loading from cache\n\n  - Installing sebastian/code-unit-reverse-lookup (1.0.0)\n    Loading from cache\n\n  - Installing phpunit/php-code-coverage (4.0.0)\n    Loading from cache\n\n  - Installing phpspec/prophecy (v1.6.1)\n    Loading from cache\n\n  - Installing myclabs/deep-copy (1.5.1)\n    Loading from cache\n\n  - Installing phpunit/phpunit (5.4.6)\n    Loading from cache\n\nsebastian/global-state suggests installing ext-uopz (*)\nphpunit/phpunit-mock-objects suggests installing ext-soap (*)\nphpunit/php-code-coverage suggests installing ext-xdebug (>=2.4.0)\nphpunit/phpunit suggests installing phpunit/php-invoker (~1.1)\nGenerating autoload files\n> test: phpunit -c phpunit.xml\nExecuting command (CWD): phpunit -c phpunit.xml\nsh: 1: phpunit: not found\nScript phpunit -c phpunit.xml handling the test event returned with error code 127\n```\n\nAnd I expected this to happen:\nNaturally I expected it to start running the phpunit tests, as specified. This works on the second run, where vendor/bin is present. It also works if I remove vendor/bin then create them as empty folders.\n\nI highly suspect that it's the include path that somehow needs to be updated after `@composer install`.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adrienrn": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5508", "title": "Idea: make the Archiver a separate component", "body": "I'm building a deployment tool that at some point needs to build archives.\n\nI've roam the web and recon that composer seem to have the best archiver \"library\" out there, well designed with abstraction and powerful filters. \n\nThat's all of those reasons and especially exclude filters and the path expansion from json for ignoring files that makes me think:\n\nWould it be a good idea to make [the composer archiver code](https://github.com/composer/composer/tree/master/src/Composer/Package/Archiver) available as a standalone component useable by other projects ?\n- Do you think that would be possible?\n  Looking at the code, there's the necessary abstraction to do it with a few adherence with `Composer\\Package\\Package` and some `Composer\\Util`\n- Do you give me the go to outsource the archiver code to a separate repository?\n- Do you think I should fork composer or create a whole new repository and import the archiver part only?\n\nI'm thinking over my head but if that's useful to me, could be useful to more (https://github.com/composer/composer/issues/4040); and maybe someday composer could use it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5508/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kweij": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5492", "title": "Unable to add config extra of non-string type", "body": "With the following composer.json:\n\n``` json\n{\n}\n```\n\nWhen I run this command:\n\n```\ncomposer config -vvv extra.param true\n```\n\nI get this composer.json:\n\n``` json\n{\n    \"extra\": {\n        \"param\": \"true\"\n    }\n}\n```\n\nAnd I expected this to happen:\n\n``` json\n{\n    \"extra\": {\n        \"param\": true\n    }\n}\n```\n\nAlso adding other types beside booleans, such as integers is not possible using the `config` command. Can this feature be added?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amansilla": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5460", "title": "CLI suggest cmd", "body": "I think would be nice to have a command e.g. `composer suggest` for adding a new package to the `suggest` section. So if the user type `composer suggest monolog/monolog \"Allows more advanced logging of the application flow\"` the following content would be added to the `composer.json`.\n\n```\n{\n    \"suggest\": {\n        \"monolog/monolog\": \"Allows more advanced logging of the application flow\"\n    }\n}\n```\n\nWhat do you think about this?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tampe125": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5440", "title": "Suggestion: Add support for web scripts commands", "body": "As far as I know, Composer is intended to be executed from CLI, however sometimes it would be useful to actually run a `composer install` within a web page.\nFor example, I'll report my current use case.\n## The problem\n\nI'm a Joomla extension developer, this means that I simply pack a big zip that will be installed on customer site (please keep in mind that the standard quality of shared hosts is pretty low). \nAt the moment, if I have to use any Composer library, it means that I have to run all my commands locally, download all the libraries and then include them in the installation package. Since most of the libraries has other dependencies, the end result is a very big archive (maybe 10Mb) that the user has to install on his website.\nSuch large archives would lead to timeout issues when the customer tries to upload them, so I have to implement several workarounds to prevent that.\n\nEverything would be easier if I could to simply include the `composer.json` and `composer.lock` in my extension and then run `composer install` on the remote site, within my PHP scripts.\n\nCurrently there are a couple of [solutions](http://stackoverflow.com/questions/17219436/run-composer-with-a-php-script-in-browser), but that are not really usable for two reasons:\n1. **Timeout issues** Trying to download everything in one single page load is VERY risky, since our execution is limited to 30 seconds (maybe less)\n2. **Resource usage** Again, doing everything in a single page load requires a lot of resources and sometimes under-the-par hosting would kill the request\n\nI'm not asking Composer to completely re-invent itself, I think that only a small set of changes would be required.\n## The solution (maybe)\n\nInstead of doing everything in one shot, is it possible to perform the same action step by step?\nIn an ideal world, this what a wrapper of Composer would do when `composer install` is launched:\n1. **Init step** Required dependencies are calculated\n2. **Install step** The same address is polled again again, and each dependency is downloaded/installed one by one. \n3. **Finalization** Final work and clean up\n\nIdeally Composer would store its state and job queue in a temporary file, if that is not possible (too many changes required), it could return the current state, which will be supplied at the next iteration.\nAccess to those steps could be performed by public methods exposed by Composer, so it will be developer responsibility to call them in the correct order and supply the valid input.\n\nIn this way, through several page loads (or AJAX call), we would be able to install the whole sets of dependencies, without the risk of hitting a timeout or using too many resources.\n## Conclusion\n\nI'm perfectly aware that this is a big request and the chances to be fulfilled are very low, however it would be a very big improvement for every extensions developer of any CMS (Joomla, Wordpress etc etc).\nNowadays if you want to interface yourself with any external service (AWS, Google) you have to use Composer. Adding web support would dramatically improve the adoption of Composer inside CMS.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mikeshiyan": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5423", "title": "Cache package after cloning from source", "body": "Feature request.\n\nThere are large packages (with very long log of commits) that don't provide URLs to their dists on packagist.org for some reason. It will be very nice to avoid a headache of cloning such projects every time a _composer create-project_ or _require_ command runs. \n\nSo if the composer could copy the _.git_ dir to the cache or if it could zip the package (make a local dist in cache) after the first clone-n-checkout it'd be a very pleasant feature.\n\nFor example, with no composer.json in empty directory I run this command:\n\n```\ncomposer require --profile drupal/drupal\n```\n\nI get this output:\n\n```\n[37.1MB/6.42s] Using version ^8.1 for drupal/drupal\n[37.1MB/6.42s] ./composer.json has been created\n[37.3MB/6.51s] Loading composer repositories with package information\n[37.4MB/6.89s] Updating dependencies (including require-dev)\n[76.6MB/8.72s]   - Installing wikimedia/composer-merge-plugin (v1.3.1)\n[76.6MB/8.74s]     Loading from cache\n[76.6MB/8.83s] \n[76.6MB/8.84s]   - Installing composer/installers (v1.0.25)\n[76.6MB/8.86s]     Loading from cache\n[76.7MB/8.92s] \n[76.6MB/8.93s]   - Installing drupal/drupal (8.1.2)\n[76.6MB/8.93s]     Cloning 6e89c78a29827737ad180d98079faf32acf609da\n[76.6MB/9232.72s] \n[76.4MB/9237.73s] Writing lock file\n[76.4MB/9237.73s] Generating autoload files\n[76.6MB/9237.86s] Loading composer repositories with package information\n[76.7MB/9238.39s] Updating dependencies (including require-dev)\n[115.8MB/9243.89s] Nothing to install or update\n[115.6MB/9243.90s] Generating autoload files\n[115.5MB/9244.07s] Memory usage: 115.51MB (peak: 119.68MB), time: 9244.07s\n```\n\nThe command ends execution successfully but it takes so long, and the package does not get cached in any way.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "assembledadam": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5409", "title": "Composer autoloading bug", "body": "Been wrestling with this one now for a few hours. I've whittled down the composer file to a few lines/this test case, and it appears to be an issue with composer, not me or any packages.\n\nWith the following composer.json:\n\n``` json\n{\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"5.*\"\n    },\n    \"minimum-stability\": \"dev\"\n}\n```\n\nWhen I run this command:\n\n```\ncomposer up -vvv\n```\n\nIt does the expected - installs PHPUnit. When, immediately after, I run this command:\n\n```\ncomposer up --no-dev -vvv\n```\n\nIt removes PHPUnit as expected, but still tries to autoload its files, and errors out.  See output below:\n\n```\n\u279c  app git:(develop) \u2717 composer up --no-dev -vvv\nReading ./composer.json\nLoading config file /Users/adam/.composer/config.json\nLoading config file /Users/adam/.composer/auth.json\nLoading config file ./composer.json\nChecked CA file /private/var/folders/13/p809p87s5dv9hcq1q3_jcdc40000gn/T/composer-cacert-bcf331364fef73d53e4368ba519a6c3fcb21ea7836c3d8efad4ec32731e8152a.pem: valid\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app): git branch --no-color --no-abbrev -v\nReading /Users/adam/.composer/composer.json\nLoading config file /Users/adam/.composer/config.json\nLoading config file /Users/adam/.composer/auth.json\nLoading config file /Users/adam/.composer/composer.json\nLoading config file /Users/adam/.composer/auth.json\nReading /Users/adam/.composer/auth.json\nReading /Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/composer/installed.json\nReading /Users/adam/.composer/vendor/composer/installed.json\nRunning d401f6e95cca835d165c61648327fc1fa062ba31 (2016-05-19 18:44:43) with PHP 5.6.17 on Darwin / 15.5.0\nLoading composer repositories with package information\nDownloading https://packagist.org/packages.json\nWriting /Users/adam/.composer/cache/repo/https---packagist.org/packages.json into cache\nUpdating dependencies\nReading /Users/adam/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/p-provider-2015-07.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/p-provider-2015-10.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/p-provider-2016-01.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/p-provider-2016-04.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/p-provider-latest.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$recursion-context.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$exporter.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-doctrine$instantiator.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpunit$phpunit-mock-objects.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpunit$php-token-stream.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$code-unit-reverse-lookup.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$version.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$environment.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpunit$php-file-iterator.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpunit$php-code-coverage.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$object-enumerator.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$diff.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$comparator.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-webmozart$assert.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpdocumentor$reflection-common.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpspec$prophecy.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$resource-operations.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-symfony$yaml.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpunit$phpunit.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpunit$php-text-template.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpunit$php-timer.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpdocumentor$type-resolver.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-phpdocumentor$reflection-docblock.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-dflydev$markdown.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-myclabs$deep-copy.json from cache\nReading /Users/adam/.composer/cache/repo/https---packagist.org/provider-sebastian$global-state.json from cache\nResolving dependencies through SAT\nDependency resolution completed in 0.133 seconds\nAnalyzed 1159 packages to resolve dependencies\nAnalyzed 17478 rules to resolve dependencies\nNothing to install or update\nResolving dependencies through SAT\nDependency resolution completed in 0.001 seconds\n  - Removing phpunit/phpunit (5.5.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/phpunit): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/phpunit): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/phpunit): git status --porcelain --untracked-files=no\n  - Removing sebastian/global-state (1.1.1)\n  - Removing symfony/yaml (3.2.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/symfony/yaml): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/symfony/yaml): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/symfony/yaml): git status --porcelain --untracked-files=no\n  - Removing myclabs/deep-copy (1.5.1)\n  - Removing sebastian/resource-operations (1.0.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/resource-operations): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/resource-operations): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/resource-operations): git status --porcelain --untracked-files=no\n  - Removing phpspec/prophecy (1.6.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpspec/prophecy): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpspec/prophecy): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpspec/prophecy): git status --porcelain --untracked-files=no\n  - Removing phpdocumentor/reflection-docblock (3.0.2)\n  - Removing phpdocumentor/type-resolver (0.1.8)\n  - Removing phpdocumentor/reflection-common (1.0.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpdocumentor/reflection-common): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpdocumentor/reflection-common): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpdocumentor/reflection-common): git status --porcelain --untracked-files=no\n  - Removing webmozart/assert (1.1.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/webmozart/assert): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/webmozart/assert): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/webmozart/assert): git status --porcelain --untracked-files=no\n  - Removing sebastian/comparator (1.2.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/comparator): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/comparator): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/comparator): git status --porcelain --untracked-files=no\n  - Removing sebastian/diff (1.4.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/diff): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/diff): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/diff): git status --porcelain --untracked-files=no\n  - Removing sebastian/object-enumerator (1.0.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/object-enumerator): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/object-enumerator): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/object-enumerator): git status --porcelain --untracked-files=no\n  - Removing phpunit/php-timer (1.0.8)\n  - Removing phpunit/php-code-coverage (4.0.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/php-code-coverage): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/php-code-coverage): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/php-code-coverage): git status --porcelain --untracked-files=no\n  - Removing phpunit/php-file-iterator (1.4.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/php-file-iterator): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/php-file-iterator): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/php-file-iterator): git status --porcelain --untracked-files=no\n  - Removing sebastian/environment (1.3.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/environment): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/environment): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/environment): git status --porcelain --untracked-files=no\n  - Removing sebastian/version (2.0.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/version): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/version): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/version): git status --porcelain --untracked-files=no\n  - Removing sebastian/code-unit-reverse-lookup (1.0.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/code-unit-reverse-lookup): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/code-unit-reverse-lookup): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/code-unit-reverse-lookup): git status --porcelain --untracked-files=no\n  - Removing phpunit/php-token-stream (1.4.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/php-token-stream): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/php-token-stream): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/php-token-stream): git status --porcelain --untracked-files=no\n  - Removing phpunit/phpunit-mock-objects (3.2.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/phpunit-mock-objects): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/phpunit-mock-objects): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/phpunit/phpunit-mock-objects): git status --porcelain --untracked-files=no\n  - Removing doctrine/instantiator (1.0.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/doctrine/instantiator): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/doctrine/instantiator): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/doctrine/instantiator): git status --porcelain --untracked-files=no\n  - Removing phpunit/php-text-template (1.2.1)\n  - Removing sebastian/exporter (1.3.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/exporter): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/exporter): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/exporter): git status --porcelain --untracked-files=no\n  - Removing sebastian/recursion-context (1.0.x-dev)\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/recursion-context): git show-ref --head -d\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/recursion-context): git diff --name-status composer/master...master --\nExecuting command (/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/recursion-context): git status --porcelain --untracked-files=no\nReading /Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/composer/installed.json\nReading ./composer.lock\nGenerating autoload files\n\n\n  [RuntimeException]                                                                                                                                                      \n  Could not scan for classes inside \"/Users/adam/Dropbox/.appdata/exnor/dev/app/vendor/sebastian/object-enumerator/src/\" which does not appear to be a file nor a folder  \n\n\nException trace:\n () at phar:///usr/local/bin/composer/src/Composer/Autoload/ClassMapGenerator.php:69\n Composer\\Autoload\\ClassMapGenerator::createMap() at phar:///usr/local/bin/composer/src/Composer/Autoload/AutoloadGenerator.php:319\n Composer\\Autoload\\AutoloadGenerator->generateClassMap() at phar:///usr/local/bin/composer/src/Composer/Autoload/AutoloadGenerator.php:302\n Composer\\Autoload\\AutoloadGenerator->addClassMapCode() at phar:///usr/local/bin/composer/src/Composer/Autoload/AutoloadGenerator.php:249\n Composer\\Autoload\\AutoloadGenerator->dump() at phar:///usr/local/bin/composer/src/Composer/Installer.php:290\n Composer\\Installer->run() at phar:///usr/local/bin/composer/src/Composer/Command/UpdateCommand.php:172\n Composer\\Command\\UpdateCommand->execute() at phar:///usr/local/bin/composer/vendor/symfony/console/Command/Command.php:259\n Symfony\\Component\\Console\\Command\\Command->run() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:844\n Symfony\\Component\\Console\\Application->doRunCommand() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:192\n Symfony\\Component\\Console\\Application->doRun() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:222\n Composer\\Console\\Application->doRun() at phar:///usr/local/bin/composer/vendor/symfony/console/Application.php:123\n Symfony\\Component\\Console\\Application->run() at phar:///usr/local/bin/composer/src/Composer/Console/Application.php:102\n Composer\\Console\\Application->run() at phar:///usr/local/bin/composer/bin/composer:43\n require() at /usr/local/bin/composer:25\n\nupdate [--prefer-source] [--prefer-dist] [--dry-run] [--dev] [--no-dev] [--lock] [--no-custom-installers] [--no-autoloader] [--no-scripts] [--no-progress] [--with-dependencies] [-v|vv|vvv|--verbose] [-o|--optimize-autoloader] [-a|--classmap-authoritative] [--ignore-platform-reqs] [--prefer-stable] [--prefer-lowest] [-i|--interactive] [--root-reqs] [--] [<packages>]...\n```\n\nThe error does not appear to occur when I remove the 'minimum-stability' directive.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "weierophinney": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5402", "title": "Oddities with metapackages and plugin events", "body": "With the following composer.json:\n\n``` json\n{\n  \"require\": {\n    \"zendframework/zend-component-installer\": \"^0.1\",\n    \"zendframework/zend-mvc-plugins\": \"^1.0\"\n  }\n}\n```\n\nwhere:\n- zendframework/zend-component-installer is a composer-plugin, and subscribes to each of the `post-package-install` and `post-package-uninstall` events\n- zendframework/zend-mvc-plugins is a composer metapackage, and adds requirements on four zend-mvc plugin packages\n\nWhen I run this command:\n\n``` console\n$ composer install -vvv\n```\n\nor, after installation, any of:\n\n``` console\n$ composer remove zendframework/zend-mvc-plugin-identity # one of the packages in the plugins metapackage\n$ composer remove zendframework/zend-mvc-plugins # the entire metapackage\n```\n\nInstallation and uninstallation happen normally, _with one exception_: neither of the subscribers defined in zend-component-installer are triggered for the packages required by the metapackage. They _are_ triggered for the metapackage itself, but none of the packages it requires individually, _even when removing them individually_.\n\nI can work around this to a degree by having zend-mvc-plugins duplicate information from the packages it depends on; since install/remove of the metapackage triggers the zend-component-installer subscribers, this works. However, I do find it problematic that removing any of the individual packages does not trigger the subscribers. \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "greg-1-anderson": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5390", "title": "composer global require considered harm^H^H^H occasionally inconvenient and confusing", "body": "With an empty composer.json:, when I run these commands:\n\n```\ncomposer global require \"laravel/installer=~1.1\"\ncomposer global require wp-cli/wp-cli \n```\n\nI get this output:\n\n```\nUsing version ^0.23.1 for wp-cli/wp-cli\n./composer.json has been updated\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\nYour requirements could not be resolved to an installable set of packages.\n\n  Problem 1\n    - Installation request for wp-cli/wp-cli ^0.23.1 -> satisfiable by wp-cli/wp-cli[v0.23.1].\n    - Conclusion: remove symfony/config v2.2.11\n    - Conclusion: don't install symfony/config v2.2.11\n```\n\n_(Error output truncated)_\n\nAnd I expected this to happen:\n\nInstalling commandline tools following recommended installation procedures on the specified project's installation instructions page should succeed, and not be subject to variable failures depending on which other projects were installed first.\n\n**Analysis**\n\nThe Composer documentation says:\n\n> Composer is not a package manager in the same sense as Yum or Apt are. Yes, it deals with \"packages\" or libraries, but it manages them on a per-project basis, installing them in a directory (e.g. vendor) inside your project. By default it does not install anything globally. Thus, it is a dependency manager. It does however support a \"global\" project for convenience via the global command.\n\nHowever, the design of Composer is clearly geared towards the _per-project_ dependency management model. The `global` keyword creates a \"global\" project as a convenience; however, the users of this keyword do not expect that the projects they install in this way should all become part of a single project.  Each project installed has its own set of requirements, and its own expectation that these should be managed in a self-consistent way, and yet, if certain projects are unceremoniously combined, then unexpected project conflicts may be encountered. These errors are difficult for beginning Composer users to understand, and they return with them to the maintainers of the project they are trying to install.\n\n**Suggested Solutions**\n\nIn the short term, stop promoting the use of `composer global require` as an installation method for global cli tools, and instead, actively discourage its use.  As an alternative, users should use `composer require` to install each commandline tool to its own local project, and manage their $PATH or binaries manually (e.g. by creating symlinks from a bin directory already in the $PATH).\n\nIn the mid-to-short term, the Composer `global` keyword should be deprecated (e.g. add warning messages when it is executed), and then either removed or fixed.\n\nIf the `global` keyword is retained, it should not continue to be used to manage a \"global\" project, as doing this is untenable. Instead, it should be re-cast as (or replaced by) a mechanism for managing a global `bin` directory. This is the primary use-case for it right now; it is feasible and practical to combine `bin` directories from disparate projects without causing conflict, as long as each project had its own `vendor` directory -- as is the fundamental assumption for top-level Composer projects.\n\nFor example, a \"global\" but isolated project could be installed to `~/.composer/global/[something]`; its `vendor` and `bin` directories would appear in their usual locations, and the contents of the `~/.composer/global/[something]/bin` directory could be mirrored (via symlink) in `~/.composer/vendor/bin` or, perhaps a better option would be simply `~/.composer/bin`. There are various ways that the string `[something]` could be chosen; the most straightforward would be simply `org/project` (although this means that long paths such as `~/.composer/global/org/project/vendor/org/project` would exist).\n\nOne complication of the proposed solution is that further management of the \"global\" projects would be more complicated.  With the `global` keyword, it is possible to run `composer global require foo/foo`, followed later by `composer global require foo/extension`, and the extension will end up in the same project as the top-level foo/foo project. This is an uncommon use-case, though; usually, the `global` keyword's only use is for the installation of atomic global commandline tools.\n\nI could work on a PR to provide global bin directory management, if there is some agreement on how these commands should best work.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5390/reactions", "total_count": 17, "+1": 17, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Rudloff": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5368", "title": "Cache 404 errors on VCS repositories", "body": "With the following composer.json:\n\n``` json\n{\n    \"name\": \"rudloff/mediawiki-test\",\n    \"require\": {\n        \"mediawiki/core\": \"~1.26.0\"\n    },\n    \"repositories\": [{\n        \"type\": \"vcs\",\n        \"url\": \"https://github.com/wikimedia/mediawiki.git\"\n    }]\n}\n```\n\nWhen I run this command:\n\n```\ncomposer update -vvv\n```\n\nI get this output:\n\n```\nReading ./composer.json\nLoading config file /home/pierre/.composer/config.json\nLoading config file /home/pierre/.composer/auth.json\nLoading config file ./composer.json\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\nExecuting command (/home/pierre/www/archi-mediawiki/test): git branch --no-color --no-abbrev -v\nReading /home/pierre/.composer/composer.json\nLoading config file /home/pierre/.composer/config.json\nLoading config file /home/pierre/.composer/auth.json\nLoading config file /home/pierre/.composer/composer.json\nLoading config file /home/pierre/.composer/auth.json\nReading /home/pierre/.composer/vendor/composer/installed.json\nRunning 1.1.1 (2016-05-17 12:25:44) with PHP 5.6.20-0+deb8u1 on Linux / 3.16.0-4-amd64\nLoading composer repositories with package information\nDownloading https://api.github.com/repos/wikimedia/mediawiki\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=master\nDownloading https://api.github.com/repos/wikimedia/mediawiki/commits/master\nDownloading https://api.github.com/repos/wikimedia/mediawiki/tags?per_page=100\nDownloading https://api.github.com/repositories/6495081/tags?per_page=100&access_token=8babbb933c38fae8b756f24aaa167935a85b0a15&page=2\nDownloading https://api.github.com/repositories/6495081/tags?per_page=100&access_token=8babbb933c38fae8b756f24aaa167935a85b0a15&page=3\nDownloading https://api.github.com/repositories/6495081/tags?per_page=100&access_token=8babbb933c38fae8b756f24aaa167935a85b0a15&page=4\nDownloading https://api.github.com/repositories/6495081/tags?per_page=100&access_token=8babbb933c38fae8b756f24aaa167935a85b0a15&page=5\nDownloading https://api.github.com/repos/wikimedia/mediawiki/git/refs/heads?per_page=100\nReading composer.json of mediawiki/core (wmf/1.26wmf24)\nSkipped tag wmf/1.26wmf24, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf23)\nSkipped tag wmf/1.26wmf23, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf22)\nSkipped tag wmf/1.26wmf22, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf21)\nSkipped tag wmf/1.26wmf21, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf20)\nSkipped tag wmf/1.26wmf20, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf19)\nSkipped tag wmf/1.26wmf19, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf18)\nSkipped tag wmf/1.26wmf18, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf17)\nSkipped tag wmf/1.26wmf17, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf16)\nSkipped tag wmf/1.26wmf16, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf15)\nSkipped tag wmf/1.26wmf15, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf14)\nSkipped tag wmf/1.26wmf14, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf13)\nSkipped tag wmf/1.26wmf13, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf12)\nSkipped tag wmf/1.26wmf12, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf11)\nSkipped tag wmf/1.26wmf11, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf10)\nSkipped tag wmf/1.26wmf10, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf9)\nSkipped tag wmf/1.26wmf9, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf8)\nSkipped tag wmf/1.26wmf8, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf7)\nSkipped tag wmf/1.26wmf7, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf6)\nSkipped tag wmf/1.26wmf6, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf5)\nSkipped tag wmf/1.26wmf5, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf4)\nSkipped tag wmf/1.26wmf4, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf3)\nSkipped tag wmf/1.26wmf3, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf2)\nSkipped tag wmf/1.26wmf2, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.26wmf1)\nSkipped tag wmf/1.26wmf1, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf24)\nSkipped tag wmf/1.25wmf24, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf23)\nSkipped tag wmf/1.25wmf23, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf22)\nSkipped tag wmf/1.25wmf22, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf21)\nSkipped tag wmf/1.25wmf21, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf20)\nSkipped tag wmf/1.25wmf20, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf19)\nSkipped tag wmf/1.25wmf19, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf18)\nSkipped tag wmf/1.25wmf18, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf17)\nSkipped tag wmf/1.25wmf17, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf16)\nSkipped tag wmf/1.25wmf16, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf15)\nSkipped tag wmf/1.25wmf15, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf14)\nSkipped tag wmf/1.25wmf14, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf13)\nSkipped tag wmf/1.25wmf13, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf12)\nSkipped tag wmf/1.25wmf12, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf11)\nSkipped tag wmf/1.25wmf11, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf10)\nSkipped tag wmf/1.25wmf10, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf9)\nSkipped tag wmf/1.25wmf9, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf8)\nSkipped tag wmf/1.25wmf8, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf7)\nSkipped tag wmf/1.25wmf7, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf6)\nSkipped tag wmf/1.25wmf6, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf5)\nSkipped tag wmf/1.25wmf5, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf4)\nSkipped tag wmf/1.25wmf4, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf3)\nSkipped tag wmf/1.25wmf3, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf2)\nSkipped tag wmf/1.25wmf2, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.25wmf1)\nSkipped tag wmf/1.25wmf1, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf22)\nSkipped tag wmf/1.24wmf22, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf21)\nSkipped tag wmf/1.24wmf21, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf20)\nSkipped tag wmf/1.24wmf20, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf19)\nSkipped tag wmf/1.24wmf19, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf18)\nSkipped tag wmf/1.24wmf18, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf17)\nSkipped tag wmf/1.24wmf17, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf16)\nSkipped tag wmf/1.24wmf16, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf15)\nSkipped tag wmf/1.24wmf15, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf14)\nSkipped tag wmf/1.24wmf14, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf12)\nSkipped tag wmf/1.24wmf12, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf11)\nSkipped tag wmf/1.24wmf11, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf10)\nSkipped tag wmf/1.24wmf10, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf9)\nSkipped tag wmf/1.24wmf9, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf8)\nSkipped tag wmf/1.24wmf8, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf7)\nSkipped tag wmf/1.24wmf7, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf6)\nSkipped tag wmf/1.24wmf6, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf5)\nSkipped tag wmf/1.24wmf5, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf4)\nSkipped tag wmf/1.24wmf4, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf3)\nSkipped tag wmf/1.24wmf3, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf2)\nSkipped tag wmf/1.24wmf2, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.24wmf1)\nSkipped tag wmf/1.24wmf1, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf22)\nSkipped tag wmf/1.23wmf22, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf21)\nSkipped tag wmf/1.23wmf21, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf20)\nSkipped tag wmf/1.23wmf20, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf19)\nSkipped tag wmf/1.23wmf19, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf18)\nSkipped tag wmf/1.23wmf18, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf17)\nSkipped tag wmf/1.23wmf17, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf16)\nSkipped tag wmf/1.23wmf16, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf15)\nSkipped tag wmf/1.23wmf15, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf14)\nSkipped tag wmf/1.23wmf14, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf13)\nSkipped tag wmf/1.23wmf13, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf12)\nSkipped tag wmf/1.23wmf12, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf11)\nSkipped tag wmf/1.23wmf11, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf10)\nSkipped tag wmf/1.23wmf10, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf9)\nSkipped tag wmf/1.23wmf9, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf8)\nSkipped tag wmf/1.23wmf8, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf7)\nSkipped tag wmf/1.23wmf7, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf6)\nSkipped tag wmf/1.23wmf6, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf5)\nSkipped tag wmf/1.23wmf5, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf4)\nSkipped tag wmf/1.23wmf4, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf3)\nSkipped tag wmf/1.23wmf3, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf2)\nSkipped tag wmf/1.23wmf2, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.23wmf1)\nSkipped tag wmf/1.23wmf1, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf22)\nSkipped tag wmf/1.22wmf22, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf21)\nSkipped tag wmf/1.22wmf21, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf20)\nSkipped tag wmf/1.22wmf20, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf19)\nSkipped tag wmf/1.22wmf19, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf18)\nSkipped tag wmf/1.22wmf18, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf17)\nSkipped tag wmf/1.22wmf17, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf16)\nSkipped tag wmf/1.22wmf16, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf15)\nSkipped tag wmf/1.22wmf15, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf14)\nSkipped tag wmf/1.22wmf14, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf13)\nSkipped tag wmf/1.22wmf13, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf12)\nSkipped tag wmf/1.22wmf12, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf11)\nSkipped tag wmf/1.22wmf11, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf10)\nSkipped tag wmf/1.22wmf10, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf9)\nSkipped tag wmf/1.22wmf9, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf8)\nSkipped tag wmf/1.22wmf8, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf7)\nSkipped tag wmf/1.22wmf7, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf6)\nSkipped tag wmf/1.22wmf6, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf5)\nSkipped tag wmf/1.22wmf5, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf4)\nSkipped tag wmf/1.22wmf4, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf3)\nSkipped tag wmf/1.22wmf3, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf2)\nSkipped tag wmf/1.22wmf2, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.22wmf1)\nSkipped tag wmf/1.22wmf1, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf12)\nSkipped tag wmf/1.21wmf12, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf11)\nSkipped tag wmf/1.21wmf11, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf10)\nSkipped tag wmf/1.21wmf10, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf9)\nSkipped tag wmf/1.21wmf9, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf8)\nSkipped tag wmf/1.21wmf8, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf7)\nSkipped tag wmf/1.21wmf7, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf6)\nSkipped tag wmf/1.21wmf6, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf5)\nSkipped tag wmf/1.21wmf5, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf4)\nSkipped tag wmf/1.21wmf4, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf3)\nSkipped tag wmf/1.21wmf3, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf2)\nSkipped tag wmf/1.21wmf2, invalid tag name\nReading composer.json of mediawiki/core (wmf/1.21wmf1)\nSkipped tag wmf/1.21wmf1, invalid tag name\nReading composer.json of mediawiki/core (test-hashar-for-ci)\nSkipped tag test-hashar-for-ci, invalid tag name\nReading composer.json of mediawiki/core (fundraising/1.22)\nSkipped tag fundraising/1.22, invalid tag name\nReading composer.json of mediawiki/core (fundraising/1.20)\nSkipped tag fundraising/1.20, invalid tag name\nReading composer.json of mediawiki/core (1.26.3)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/fa11b598b4e396f606c2ffe8a4929c24e0f8cf46 from cache\nImporting tag 1.26.3 (1.26.3.0)\nReading composer.json of mediawiki/core (1.26.2)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/f465524fc4840fb5c8b97e9ee6ffaf2a30c2e644 from cache\nImporting tag 1.26.2 (1.26.2.0)\nReading composer.json of mediawiki/core (1.26.1)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/905d088b12375958099346a922d4f0ccc1db12ca from cache\nImporting tag 1.26.1 (1.26.1.0)\nReading composer.json of mediawiki/core (1.26.0)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/365e22ee61035f953b47387af92ef832f09d5982 from cache\nImporting tag 1.26.0 (1.26.0.0)\nReading composer.json of mediawiki/core (1.25.6)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/01b4001e707ea9535810af364fec2b0cba0f5735 from cache\nImporting tag 1.25.6 (1.25.6.0)\nReading composer.json of mediawiki/core (1.25.5)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/977aee41958f5949adf98d5686f54f8d7e3b801e from cache\nImporting tag 1.25.5 (1.25.5.0)\nReading composer.json of mediawiki/core (1.25.4)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/fbe53db58756b6dae46771a7c637fb096e66ba96 from cache\nImporting tag 1.25.4 (1.25.4.0)\nReading composer.json of mediawiki/core (1.25.3)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/7514b1269aec188e29119b02ca9f6fd695712beb from cache\nImporting tag 1.25.3 (1.25.3.0)\nReading composer.json of mediawiki/core (1.25.2)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/e1b441650669cecd9509dde3c8b355a05127e66c from cache\nImporting tag 1.25.2 (1.25.2.0)\nReading composer.json of mediawiki/core (1.25.1)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/76e04b004b016f78613767b3d0cdbd09aaabb5bf from cache\nImporting tag 1.25.1 (1.25.1.0)\nReading composer.json of mediawiki/core (1.25.0)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/f5c3ee0939e2b5c07a7099caaa6f0aa4102eceb7 from cache\nImporting tag 1.25.0 (1.25.0.0)\nReading composer.json of mediawiki/core (1.25.0-rc.0)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/4dfa4f144d5e238a0fccb4ce1601072b3d0063a4 from cache\nImporting tag 1.25.0-rc.0 (1.25.0.0-RC0)\nReading composer.json of mediawiki/core (1.24.6)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/7255e7da1531d03b77e52cd5d7471a3933bfe8e0 from cache\nImporting tag 1.24.6 (1.24.6.0)\nReading composer.json of mediawiki/core (1.24.5)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/42e1e5586fac1548705bbcb984d22c57992ea748 from cache\nImporting tag 1.24.5 (1.24.5.0)\nReading composer.json of mediawiki/core (1.24.4)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/4f4979479f5d0d1c85ee260d483a759e8051be05 from cache\nImporting tag 1.24.4 (1.24.4.0)\nReading composer.json of mediawiki/core (1.24.3)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/42144f0fd616ac344f224b16dbefdf07a3948e12 from cache\nImporting tag 1.24.3 (1.24.3.0)\nReading composer.json of mediawiki/core (1.24.2)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/5045ffefed8c3be80975f9ca5acb53d5e08cc8fe from cache\nImporting tag 1.24.2 (1.24.2.0)\nReading composer.json of mediawiki/core (1.24.1)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/4cec60080d888bb19a1cc57e149498898db7df6a from cache\nImporting tag 1.24.1 (1.24.1.0)\nReading composer.json of mediawiki/core (1.24.0)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/ebb163995a27caca9c9b146f94a6c8058fe727b6 from cache\nImporting tag 1.24.0 (1.24.0.0)\nReading composer.json of mediawiki/core (1.24.0-rc.3)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/1ea07321e0f87ca64862c640a388fff490bd71b4 from cache\nImporting tag 1.24.0-rc.3 (1.24.0.0-RC3)\nReading composer.json of mediawiki/core (1.24.0-rc.2)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/df9ba79276c58ea28fa5fb162cc6b7e6924df761 from cache\nImporting tag 1.24.0-rc.2 (1.24.0.0-RC2)\nReading composer.json of mediawiki/core (1.24.0-rc.1)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/036d3eb2cbcac84ee1ad58906f1e570c0b6c060d from cache\nImporting tag 1.24.0-rc.1 (1.24.0.0-RC1)\nReading composer.json of mediawiki/core (1.24.0-rc.0)\nReading /home/pierre/.composer/cache/repo/github.com/wikimedia/mediawiki/08139779e0129aba9a1d15ca073a895f6df0d63b from cache\nImporting tag 1.24.0-rc.0 (1.24.0.0-RC0)\nReading composer.json of mediawiki/core (1.23.14)\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=1b1588f892b81983d5cd93bea6f5b5d652b2cdf5\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=1b1588f892b81983d5cd93bea6f5b5d652b2cdf5\nSkipped tag 1.23.14, no composer file\nReading composer.json of mediawiki/core (1.23.13)\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=8a017fe25a3de909c3daa588b25d8957da0510a2\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=8a017fe25a3de909c3daa588b25d8957da0510a2\nSkipped tag 1.23.13, no composer file\nReading composer.json of mediawiki/core (1.23.12)\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=f05a87cc536c5e74dc15d57c6da5244d70d37aaa\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=f05a87cc536c5e74dc15d57c6da5244d70d37aaa\nSkipped tag 1.23.12, no composer file\nReading composer.json of mediawiki/core (1.23.11)\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=fb64dc5803a8b92f0dc70a4f81cbe7260653abf4\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=fb64dc5803a8b92f0dc70a4f81cbe7260653abf4\nSkipped tag 1.23.11, no composer file\nReading composer.json of mediawiki/core (1.23.10)\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=f834e8cab31e40c6289bbc5e5706e181617caebc\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=f834e8cab31e40c6289bbc5e5706e181617caebc\nSkipped tag 1.23.10, no composer file\nReading composer.json of mediawiki/core (1.23.9)\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=3168f88114df2e8b9e4c7affc645a025b9df5fc1\nDownloading https://api.github.com/repos/wikimedia/mediawiki/contents/composer.json?ref=3168f88114df2e8b9e4c7affc645a025b9df5fc1\nSkipped tag 1.23.9, no composer file\n[...]\n```\n\nAnd I expected this to happen:\nThe composer.json files are cached but the 404 errors are not. Because this repository has around 400 tags without a composer.json, the update takes a lot of time to try to fetch them one by one and fail.\nWould it be possible to cache the fact that these tags do not have a composer.json file? \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Soullivaneuh": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5355", "title": "Lowest dependencies resolution fail with no vendor and .lock", "body": "With the following composer.json:\n\n``` json\n{\n    \"name\": \"sonata-project/doctrine-orm-admin-bundle\",\n    \"type\": \"symfony-bundle\",\n    \"description\": \"Symfony Sonata / Integrate Doctrine ORM into the SonataAdminBundle\",\n    \"keywords\": [\"Admin Generator\", \"admin\", \"sonata\", \"bootstrap\", \"generator\"],\n    \"homepage\": \"https://sonata-project.org/bundles/admin\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Thomas Rabaix\",\n            \"email\": \"thomas.rabaix@sonata-project.org\",\n            \"homepage\": \"https://sonata-project.org\"\n        },\n        {\n            \"name\": \"Sonata Community\",\n            \"homepage\": \"https://github.com/sonata-project/SonataDoctrineORMAdminBundle/contributors\"\n        }\n    ],\n    \"require\": {\n        \"php\": \"^5.3 || ^7.0\",\n        \"doctrine/orm\": \"^2.3\",\n        \"symfony/form\": \"^2.3 || ^3.0\",\n        \"symfony/security\": \"^2.3 || ^3.0\",\n        \"symfony/console\": \"^2.3 || ^3.0\",\n        \"symfony/doctrine-bridge\": \"^2.2 || ^3.0\",\n        \"symfony/framework-bundle\": \"^2.2 || ^3.0\",\n        \"symfony/security-acl\": \"^2.2 || ^3.0\",\n        \"sonata-project/exporter\": \"^1.3.1\",\n        \"sonata-project/admin-bundle\": \"^3.0\",\n        \"sonata-project/core-bundle\": \"^3.0\"\n    },\n    \"require-dev\": {\n        \"simplethings/entity-audit-bundle\": \"~0.1\",\n        \"symfony/phpunit-bridge\": \"^2.7 || ^3.0\"\n    },\n    \"suggest\": {\n        \"simplethings/entity-audit-bundle\": \"If you want to support for versioning of entities and their associations.\"\n    },\n    \"provide\": {\n        \"sonata-project/admin-bundle-persistency-layer\": \"1.0.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": { \"Sonata\\\\DoctrineORMAdminBundle\\\\\": \"\" }\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"3.x-dev\"\n        }\n    }\n}\n```\n\nWhen I run this command:\n\n```\n# The issue happen only if composer.lock and vendor are not present\nrm -rf vendor composer.lock && composer update --prefer-lowest -vvv\n```\n\nI get this output:\n\n```\nReading ./composer.json\nLoading config file /home/sullivan/.composer/config.json\nLoading config file /home/sullivan/.composer/auth.json\nLoading config file ./composer.json\nChecked CA file /etc/ssl/certs/ca-certificates.crt: valid\nExecuting command (/home/sullivan/projects/fork/sonata-project/SonataDoctrineORMAdminBundle): git branch --no-color --no-abbrev -v\nReading /home/sullivan/.composer/composer.json\nLoading config file /home/sullivan/.composer/config.json\nLoading config file /home/sullivan/.composer/auth.json\nLoading config file /home/sullivan/.composer/composer.json\nLoading config file /home/sullivan/linux-config/home/.composer/auth.json\nReading /home/sullivan/.composer/vendor/composer/installed.json\nLoading plugin Pyrech\\ComposerNotifier\\NotifierPlugin\nLoading plugin Pyrech\\ComposerChangelogs\\ChangelogsPlugin\nLoading plugin SLLH\\ComposerVersionsCheck\\VersionsCheckPlugin\nRunning 1.1.0 (2016-05-10 15:21:19) with PHP 5.6.4-4ubuntu6.4 on Linux / 3.19.0-49-generic\nLoading composer repositories with package information\nDownloading https://packagist.org/packages.json\nWriting /home/sullivan/.composer/cache/repo/https---packagist.org/packages.json into cache\nUpdating dependencies (including require-dev)\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/p-provider-2015.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/p-provider-2015-07.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/p-provider-2015-10.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/p-provider-2016-01.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/p-provider-2016-04.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\nDownloading http://packagist.org/p/provider-latest%2476511dd80b185ba9f7d3a4c57d438cdfbd88989a0ae89505af9222cc0aa22400.json\nWriting /home/sullivan/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-sonata-project$doctrine-orm-admin-bundle.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$orm.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$dbal.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$console.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$common.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-mbstring.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$inflector.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$cache.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$collections.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$lexer.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$annotations.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$instantiator.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$form.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$event-dispatcher.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$intl.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$options-resolver.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$property-access.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$icu.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-intl-icu.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-php54.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$security.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$http-foundation.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$http-kernel.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-php55.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-psr$log.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$debug.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-ircmaxell$password-compat.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-paragonie$random-compat.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$security-acl.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-php56.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-php70.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-util.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$security-core.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$doctrine-bridge.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$framework-bundle.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$config.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$filesystem.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$routing.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$stopwatch.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$translation.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$dependency-injection.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$templating.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$finder.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$security-csrf.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$asset.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$class-loader.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$polyfill-apcu.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-sonata-project$exporter.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-sonata-project$admin-bundle.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$validator.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$security-bundle.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$twig-bridge.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$expression-language.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-twig$twig.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-twig$extensions.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-sonata-project$block-bundle.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-sonata-project$core-bundle.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-knplabs$knp-menu-bundle.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-sonata-project$cache.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-cocur$slugify.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-knplabs$knp-menu.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-simplethings$entity-audit-bundle.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$phpunit-bridge.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$security-http.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-symfony$security-guard.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-jms$di-extra-bundle.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-gedmo$doctrine-extensions.json from cache\nReading /home/sullivan/.composer/cache/repo/https---packagist.org/provider-doctrine$doctrine-bundle.json from cache\nResolving dependencies through SAT\nDependency resolution completed in 0.089 seconds\nYour requirements could not be resolved to an installable set of packages.\n\n  Problem 1\n    - sonata-project/admin-bundle 3.0.0 requires knplabs/knp-menu-bundle ^2.1.1 -> satisfiable by knplabs/knp-menu-bundle[v2.1.1].\n    - sonata-project/admin-bundle 3.1.0 requires knplabs/knp-menu-bundle ^2.1.1 -> satisfiable by knplabs/knp-menu-bundle[v2.1.1].\n    - Conclusion: don't install knplabs/knp-menu-bundle v2.1.1\n    - Installation request for sonata-project/admin-bundle ^3.0 -> satisfiable by sonata-project/admin-bundle[3.0.0, 3.1.0].\n```\n\nAnd I expected this to happen:\n\nHaving all dependencies installed at lowest version, including `knplabs/knp-menu-bundle` 2.1.1.\n\nIf you do a classic `composer update` and then a `composer update --prefer-lowest`, it works. Very weird.\n\nYou can see the related Travis job: https://travis-ci.org/sonata-project/SonataDoctrineORMAdminBundle/jobs/130328983#L210\n\nAdditional depends info:\n\n``` bash\n$ composer depends --tree knplabs/knp-menu-bundle\nknplabs/knp-menu-bundle v2.1.1 This bundle provides an integration of the KnpMenu library\n\u2514\u2500\u2500sonata-project/admin-bundle 3.1.0 (requires knplabs/knp-menu-bundle ^2.1.1)\n   \u2514\u2500\u2500sonata-project/doctrine-orm-admin-bundle 3.9999999.9999999.9999999-dev (requires sonata-project/admin-bundle ^3.0)\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ofbeaton": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5337", "title": "[UX] Improve Class not found exception in autoloader", "body": "I propose that composer's autoloader improve the appearance of class not found exception messages by reminding the user that they could be missing a composer dependency. This would be in addition to, not instead of.\n\nIn a usual php project, a class not found error message means you forgot to declare that class, so the exception makes sense.\n\nIn a composer project, it often means that you forgot to include a dependency, which can happen when copy+pasting code from a tutorial or documentation. The exception would be a lot more useful if it reminded you of this other possible solution.\n\nWe all know that we can eventually figure it out, especially given the namespace is unlikely to be one for your application.\n\nI don't know if composer could also know if it only installed the prod dependencies or not, but that would also be good information to add, since it is another common way for your to suddenly be missing a class in prod. (see https://github.com/symfony/symfony-standard/issues/975)\n\nThis improvement would change it from just being an error message to providing some hints on possible solutions. Could even possibly lower the noise in support channels for all projects using composer.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andig": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5271", "title": "Skip duplicate errors", "body": "When I run this command:\n\n```\npi@prodpi ~/volkszaehler.org $ composer require php-pm/httpkernel-adapter:dev-deps\n```\n\nI get this output:\n\n```\n./composer.json has been updated\nLoading composer repositories with package information                                                                            Updating dependencies (including require-dev)         Your requirements could not be resolved to an installable set of packages.\n\n  Problem 1\n    - volkszaehler/httpd dev-master requires php-pm/httpkernel-adapter dev-master -> satisfiable by php-pm/httpkernel-adapter[dev-master].\n    - volkszaehler/httpd dev-master requires php-pm/httpkernel-adapter dev-master -> satisfiable by php-pm/httpkernel-adapter[dev-master].\n    - volkszaehler/httpd dev-master requires php-pm/httpkernel-adapter dev-master -> satisfiable by php-pm/httpkernel-adapter[dev-master].\n    - Can only install one of: php-pm/httpkernel-adapter[dev-deps, dev-master].\n    - Can only install one of: php-pm/httpkernel-adapter[dev-master, dev-deps].\n    - Can only install one of: php-pm/httpkernel-adapter[dev-master, dev-deps].\n    - Can only install one of: php-pm/httpkernel-adapter[dev-master, dev-deps].\n    - Installation request for php-pm/httpkernel-adapter dev-deps -> satisfiable by php-pm/httpkernel-adapter[dev-deps].\n    - Installation request for volkszaehler/httpd (locked at dev-master) -> satisfiable by volkszaehler/httpd[dev-master].\n\n\nInstallation failed, reverting ./composer.json to its original content.\n```\n\nAnd I expected this to happen:\n\nDeduplicate the output lines to make the result easier to grasp. Skipped the composer json as I'm only concerned about the output.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5271/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Firehed": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5231", "title": "Generated code in autoload_real.php should be namespaced", "body": "While collisions are effectively impossible due to the random (hashed?) class and function names, having the class and function in the global namespace is slightly annoying when doing work that involves `get_defined_functions` or `get_declared_classes` if any filtering of the resulting array is required, especially when using the namespace support in the Reflection APIs.\n\nUnless there's a reason not to do this (which I'd be very interested in hearing), I'm more than happy to do the work and send a PR. I expect the file output would change from, roughly:\n\n``` php\n<?php\n\n// autoload_real.php @generated by Composer\n\nclass ComposerAutoloaderInit6c610ed51b1f80131597f878239bc803\n{\n   ...\n}\n\nfunction composerRequire6c610ed51b1f80131597f878239bc803($fileIdentifier, $file)\n{\n   ...\n}\n```\n\nto\n\n``` php\n<?php\n\n// autoload_real.php @generated by Composer\nnamespace Composer\\Autoloader;\nclass Init6c610ed51b1f80131597f878239bc803\n{\n    ...\n}\n\nfunction Require6c610ed51b1f80131597f878239bc803($fileIdentifier, $file)\n{\n    ...\n}\n```\n\nand the related call sites would be updated.\n\nThe only question I have is whether `Composer\\Autoload` (that ClassLoader uses) or `Composer\\Autoloader` (based on the generated class name) would be preferable, or something else entirely.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "omerbsh": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5196", "title": "json do not match its signature issue ", "body": "With the following composer.json:\n(none)\n\n``` json\n{\n    ...\n}\n```\n\nWhen I run this command:\n\n```\ncomposer command -vvv (please include -vvv!)\n```\n\nI get this output:\n\n```\n  [Composer\\Repository\\RepositorySecurityException]                                                                                                   \n  The contents of http://packagist.org/p/provider-2014%24778fe81238370a6a10514fa2191d8c49e3b0df47ad7c25361bda5e7c0f48797c.json do not match its signature. This should indicate a man-in-the-middle attack. Try running composer again and report this if you think it is a mistake.                    \n\n```\n\nAnd I expected this to happen:\ninstall cakephp package.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jk": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5155", "title": "Integrate with PhiVE for installing Composer", "body": "As @shochdoerfer pointed out in the [this comment](https://github.com/composer/composer/issues/4381#issuecomment-178590163) it's probably a good idea to support [PhiVE](https://phar.io) as an additional way to securely install Composer.\n\nFrom their website:\n\n> Github releases\n> To distribute phars via Github in a PHIVE compliant way, it needs to be made available as an attachment to a release - alongside with a valid gpg signature. For PHIVE to pick it up, the filenames need to end on \".phar\" and \".phar.asc\" respectively.\n> \n> PHIVE supports github's releases feature for repositories as of version 0.3.0.\n\nAnd since we already have Github releases for composer it should not be too much work to claim an PhiVE alias.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5155/reactions", "total_count": 4, "+1": 2, "-1": 0, "laugh": 0, "hooray": 1, "confused": 0, "heart": 1}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ondrejmirtes": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5076", "title": "When using private repository, Composer silently prefers the Packagist one if the private is not installable", "body": "Let's say there's a package `foo/foo`. It's public, but there's a private version too.\n\nI add a dependency to the dependent (root) project as `\"foo/foo\": \"dev-master\"`.\n\nI add the private repository to composer.json's `repositories` key and that version's master branch has different requirements for dependencies than the public one.\n\nIf the root project has other requirements that are satisfied only by the public version on Packagist, Composer silently installs the public version even if there's a repositories section with the private version repository.\n\nI think that adding the repository to `repositories` section clearly states my intent to use that package version instead of the publicly available one and that Composer should throw an error in this case.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jrobeson": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/5041", "title": "composer stores vendor dir in `$XDG_CONFIG_HOME`", "body": "I seem to have a vendor directory with all source files in `$XDG_CONFIG_HOME` when they should be stored in `$XDG_DATA_HOME`.  With the XDG specification I would expect to see in:\n\n```\n~/.config/composer/\n   composer.json\n   (maybe composer.lock)\n\n~/.local/share/composer/\n     vendor/\n        somepackagedir/\n```\n\nor all of the above in `~/.local/share/composer` \n\nI do have all 3 of XDG_CONFIG_HOME, XDG_DATA_HOME, and XDG_CACHE_HOME set.\n\nI'm using\n\n``` sh\n$ composer --version\nComposer version 1.0-dev (8bf46768f3f5397c259b77321b2e887a53624adb) 2016-03-10 16:31:09\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/5041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AndreasA": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/4808", "title": "Installation Order issues in combination with replace (Toran Proxy only?)", "body": "I am not sure it is a composer issue or a toran proxy issue or a configuration problem but the if I use the following composer.json\n\n```\n{\n    \"config\": {\n        \"vendor-dir\": \"Packages/Libraries\",\n        \"bin-dir\": \"bin\",\n        \"preferred-install\": \"dist\",\n        \"optimize-autoloader\": true\n    },\n    \"description\": \"Replace & Require Bug\",\n    \"name\": \"andreas-allacher/replace-bug\",\n    \"repositories\": [\n        {\n            \"type\": \"composer\",\n            \"url\": \"http://composer.typo3.org/\"\n        }\n    ],\n    \"require\": {\n        \"typo3/cms\": \"6.2.*\",\n        \"friendsoftypo3/tt-address\": \"dev-master\",\n        \"typo3-ter/direct-mail\": \"4.1.*\"\n    }\n}\n```\n\nit works fine that way.\n\nNow if I add the Toran proxy prior to http://composer.typo3.org/ repository, there is however an issue with the installation order:\n\n```\n  - Installing typo3/cms (6.2.17)\nReading .composer/cache/files/typo3/cms/6.2.17.0-6.2.17.tar from cache\n    Loading from cache\n    Extracting archive\n\n    REASON: Required by root: Install command rule (install typo3/cms 6.2.0|install typo3/cms 6.2.1|install typo3/cms 6.2.10|install typo3/cms 6.2.11|install typo3/cms 6.2.12|install typo3/cms 6.2.13|install typo3/cms 6.2.14|install typo3/cms 6.2.15|install typo3/cms 6.2.16|install typo3/cms 6.2.17|install typo3/cms 6.2.2|install typo3/cms 6.2.3|install typo3/cms 6.2.4|install typo3/cms 6.2.5|install typo3/cms 6.2.6|install typo3/cms 6.2.7|install typo3/cms 6.2.8|install typo3/cms 6.2.9)\n\n  - Installing typo3-ter/tt-address (2.3.5)\nDownloading http://typo3.org/extensions/repository/download/tt_address/2.3.5/t3x/\n    Downloading: 100%         \nWriting .composer/cache/files/typo3-ter/tt-address/2.3.5.0-.t3x into cache from /home/andreas/sample/typo3conf/ext/tt_address/a33a3f5f4969554f1f36399a9d7f3132\n    Extracting archive\n\n    REASON: typo3-ter/direct-mail 4.1.0 requires typo3-ter/tt-address * -> satisfiable by friendsoftypo3/tt-address[dev-master], typo3-ter/tt-address[1.0.3, 1.0.4, 2.3.4, 2.3.5].\n\n  - Installing typo3-ter/direct-mail (4.1.0)\nDownloading http://typo3.org/extensions/repository/download/direct_mail/4.1.0/t3x/\n    Downloading: 100%         \nWriting .composer/cache/files/typo3-ter/direct-mail/4.1.0.0-.t3x into cache from /home/andreas/sample/typo3conf/ext/direct_mail/2e04186055d76f6f5dfd1d2adab8aa2f\n    Extracting archive\n\n    REASON: Required by root: Install command rule (install typo3-ter/direct-mail 4.1.0)\n\n  - Installing friendsoftypo3/tt-address (dev-master 4d1a42a)\n```\n\nNow the entry for friendsoftypo3/tt-address in Toran Proxy looks like this:\n\n```\n\"friendsoftypo3/tt-address\": {\n            \"dev-master\": {\n                \"name\": \"friendsoftypo3/tt-address\",\n                \"version\": \"dev-master\",\n                \"version_normalized\": \"9999999-dev\",\n                \"source\": {\n                    \"type\": \"git\",\n                    \"url\": \"https://git.typo3.org/TYPO3CMS/Extensions/tt_address.git\",\n                    \"reference\": \"4d1a42afb68b43f654de7621fe36c4b45bca8aa6\"\n                },\n                \"dist\": {\n                    \"type\": \"zip\",\n                    \"url\": \"<URL>\",\n                    \"reference\": \"4d1a42afb68b43f654de7621fe36c4b45bca8aa6\",\n                    \"shasum\": null\n                },\n                \"require\": {\n                    \"typo3/cms-core\": \">=6.2.2,<8.0\"\n                },\n                \"replace\": {\n                    \"tt_address\": \"self.version\",\n                    \"typo3-ter/tt-address\": \"self.version\"\n                },\n                \"time\": \"2015-12-14 14:23:04\",\n                \"type\": \"typo3-cms-extension\",\n                \"autoload\": {\n                    \"psr-4\": {\n                        \"TYPO3\\\\TtAddress\\\\\": \"Classes\"\n                    }\n                },\n                \"license\": [\n                    \"GPL-2.0+\"\n                ],\n                \"authors\": [\n                    {\n                        \"name\": \"tt_address Development Team\",\n                        \"role\": \"Developer\"\n                    }\n                ],\n                \"description\": \"Displays a list of addresses from an address table on the page.\",\n                \"homepage\": \"https://forge.typo3.org/projects/extension-tt_address\",\n                \"keywords\": [\n                    \"TYPO3\",\n                    \"addresses\",\n                    \"extension\"\n                ],\n                \"uid\": \"32878304700\"\n            }\n        }\n```\n\nWhich clearly has the replace for typo3-ter/tt-address in it.\n\ntypo3-ter/direct-mail has a require for \"typo3-ter/tt-address\": \"*\"\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tschechniker": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/4794", "title": "Composer archive latest stable", "body": "Hi,\n\nis there a way to tell composer archive to use the latest stable version? I already tried the following:\n\n```\ncomposer archive --format=zip slim/slim * --> 1.6.0\ncomposer archive --format=zip slim/slim @stable --> 1.6.0\n```\n\nI'm always getting Version 1.6.0.\n\nas a test i also tried to get a dev version:\n\n```\ncomposer archive --format=zip slim/slim @dev --> 1.6.0\n```\n\nWork works if you add the exact version to the command:\n\n```\ncomposer archive --format=zip slim/slim 2.6.2 --> 2.6.2\n```\n\nSeems like the version constraint is not working as expected?\n\nMy composer.json:\n\n```\n{\n    \"name\": \"test/test\",\n    \"require\": {}\n}\n\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jakoch": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/4644", "title": "feature request: $package->isCached() and $package->getCacheFilename()", "body": "Hey :)\n\ni'm in a plugin trying to check if a package is cached, but i want to avoid copying [these lines of code](https://github.com/composer/composer/blob/master/src/Composer/Downloader/FileDownloader.php#L123-L127) from the FileDownloader class. It would be nice to abstract / refactor these lines, to provide a function `isCached()` as part of the public API of a package and have cleaner code in the FileDownloader and plugins.\n\nRegarding [`getCacheKey()`](https://github.com/composer/composer/blob/master/src/Composer/Downloader/FileDownloader.php#L242-L249): i have to copy the private function into the plugin, too. Because i'm not working with the FileDownloader, but the \"is cached\" condition check depends on it and i need to build the value for `$cacheFolder` to have the target position.\n\n```\n$cacheFile     = $this->getCacheKey($package);\n$cacheFolder   = $this->cacheFilesDir . '/' . $cacheFile;\n```\n\nIt would be nice to discuss the position of the function and whether it makes sense to add a function `getCacheFilename()` to the public package API - to expose the target file of the package in the cache more cleanly. Somehow the key isn't that interesting, if one can get the target path. \nMaybe we could move the private function getCacheKey() to the package class? \n\nAfter the changes, it should be possible to work with the \"package cache\" related Composer API from inside a plugin using the following three methods:\n- `getDistUrl()` (source URL), \n- `isCached()` (test, if a package is cached), \n- `getCacheFilename()` (target location: file of the package in the cache)\n\nin the following away:\n\n```\nif( ! $package->isCached()) {\n  $this->download($package->getDistUrl(), $package->getCacheFilename());\n}\n```\n\nBest, Jens\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/3350", "title": "extend global command to update the path env var", "body": "The [global command](https://getcomposer.org/doc/03-cli.md#global) can be used to install CLI utilities, like php-cs-fixer globally into the `$COMPOSER_HOME/vendor/` folder.  A shortcut for the util is created at `$COMPOSER_HOME/vendor/bin`. \nBut this folder is not automatically added to the $PATH environment variable. \n\nI'm suggesting \n- [ ] to add a check, if `$COMPOSER_HOME/vendor/bin` is already on $PATH\n- [ ] if not, provide a dialog to ask the user, whether to add it or not\n- [ ] provide \"--no-interactive\" with the default behaviour of appending to the PATH\n\nA call like `php composer.phar global require fabpot/php-cs-fixer:dev-master --no-interactive`\nwould result in a working on path installation of `php-cs-fixer` without any user interaction required.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Swader": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/4590", "title": "composer.local.json", "body": "Sometimes, when using VMs in particular, a custom vendor location is necessary to improve performance - certain frameworks and apps are just too IO heavy to survive in shared folders.\n\nIn those cases, moving vendor out of the shared folder path speeds things up dramatically. However, other than with `COMPOSER_VENDOR_DIR` on the command line prefixing every `install`, `update` or `require` command, there is no way to change the vendor dir _for the current project only_ without making global changes (exporting `COMPOSER_VENDOR_DIR` system-wide). Well, there is a way - change `composer.json`, but then there could be conflicts when sharing the projects, as not everyone would agree that having it in the location _you_ prefer would be best for them. Besides, the location on my machine might differ from the location on another's due to difference in username, despite being _relatively_ identical.\n\nProposed solution:\n1. When executing composer commands, Composer checks if there's a `composer.local.json` file present. \n2. If not, goto 3. If yes, it merges the values from that file with those in the main `composer.json` file, overriding the main file's values.\n3. It proceeds as usual.\n\nThis would allow for custom locations of the vendor and bin folder, custom scripts, etc. If needed, there could be limits on what the local file could contain (no author, no require blocks, etc).\n\nThe local file would go into `.gitignore` files.\n\nThoughts?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4590/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pyrech": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/4520", "title": "Exception when uninstalling a plugin", "body": "Hi,\n\nWhen I want to uninstall a plugin, composer will still try to run it at the end of the command (because it was registered in the eventListener by the plugin manager). The problem is that some classes were not autoloaded before the uninstall operation, so the autoloader will fail when running the plugin.\n\nShouldn't composer unregister the plugin before removing it? If yes, I'm not sure where this should be done tough.\n\nYou can reproduce it easily by running:\n\n``` bash\ncomposer global require \"pyrech/composer-changelogs\"\n```\n\nthen:\n\n``` bash\ncomposer global remove \"pyrech/composer-changelogs\"\n```\n\nYou should get the following output:\n\n```\nChanged current directory to /home/mike/.composer\nLoading composer repositories with package information\nUpdating dependencies (including require-dev)\n  - Removing pyrech/composer-changelogs (v1.1.1)\nWriting lock file\nGenerating autoload files\nPHP Fatal error:  Class 'Pyrech\\ComposerChangelogs\\Version' not found in /home/mike/.composer/vendor/pyrech/composer-changelogs/src/OperationHandler/UninstallHandler.php on line 54\n\nFatal error: Class 'Pyrech\\ComposerChangelogs\\Version' not found in /home/mike/.composer/vendor/pyrech/composer-changelogs/src/OperationHandler/UninstallHandler.php on line 54\n```\n\nThe issue is related to pyrech/composer-changelogs#14\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DanielHreben": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/4445", "title": "Describe composer API", "body": "It will be great if somebody describe how to use composer programmatically (instantiate $composer and use his object interface) in documentation. It's enough regular task, [here](https://github.com/composer/composer/issues/3425) and [here](https://github.com/composer/composer/issues/4399) is already a similar questions was asked. \n\nMost package managers like [CPAN](http://search.cpan.org/~andk/CPAN-2.10/lib/CPAN.pm) or [NPM](https://github.com/npm/npm#using-npm-programmatically) has this features and it's described.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4445/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "avindra": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/4332", "title": "Invalid ZIP error for a few weeks now", "body": "Hi,\n\nWe haven't been able to download from dist for several weeks (maybe months) now. We are  forced to use source, which takes quite long because composer doesn't clone with depth=1. Can someone help debug?\n\n```\n$ composer update -vvv\nReading ./composer.json\nLoading config file ./composer.json\nExecuting command (CWD): git describe --exact-match --tags\nExecuting command (CWD): git branch --no-color --no-abbrev -v\nFailed to initialize global composer: Composer could not find the config file: /home/oracle/.composer/composer.json\nTo initialize a project, please create a composer.json file as described in the https://getcomposer.org/ \"Getting Started\" section\nLoading composer repositories with package information\nDownloading https://packagist.org/packages.json\nWriting /home/oracle/.composer/cache/repo/https---packagist.org/packages.json into cache\nUpdating dependencies (including require-dev)\nReading /home/oracle/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/p-provider-2014-10.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/p-provider-2015-01.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/p-provider-2015-04.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/p-provider-2015-07.json from cache\nDownloading http://packagist.org/p/provider-latest$3b07827820eaa10695f2f89e76cc76d61d41a1f1a79232a70b5065890f07bd34.json\nWriting /home/oracle/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/provider-phpmailer$phpmailer.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/provider-easybook$geshi.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/provider-erusev$parsedown.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/provider-filp$whoops.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/provider-guzzlehttp$guzzle.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/provider-guzzlehttp$psr7.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/provider-guzzlehttp$promises.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/provider-psr$http-message.json from cache\nReading /home/oracle/.composer/cache/repo/https---packagist.org/provider-symfony$process.json from cache\nAnalyzed 564 packages to resolve dependencies\nAnalyzed 67 rules to resolve dependencies\n  - Installing phpmailer/phpmailer (v5.2.10)\nDownloading https://api.github.com/repos/PHPMailer/PHPMailer/zipball/07005ecbb80d11ec8c0f067bb37e8909cc7fcbb7\n    Downloading: 100%\nWriting /home/oracle/.composer/cache/files/phpmailer/phpmailer/07005ecbb80d11ec8c0f067bb37e8909cc7fcbb7.zip into cache\n    Extracting archive\nExecuting command (CWD): unzip '/app/myapp/vendor/phpmailer/phpmailer/1ae2dec0ddd65b714d123948d48c89f6' -d '/app/myapp/vendor/composer/c4aeedaf' && chmod -R u+w '/app/myapp/vendor/composer/c4aeedaf'\n    Invalid zip file, retrying...\n  - Installing phpmailer/phpmailer (v5.2.10)\nDownloading https://api.github.com/repos/PHPMailer/PHPMailer/zipball/07005ecbb80d11ec8c0f067bb37e8909cc7fcbb7\n    Downloading: 100%\nWriting /home/oracle/.composer/cache/files/phpmailer/phpmailer/07005ecbb80d11ec8c0f067bb37e8909cc7fcbb7.zip into cache\n    Extracting archive\nExecuting command (CWD): unzip '/app/myapp/vendor/phpmailer/phpmailer/1ae2dec0ddd65b714d123948d48c89f6' -d '/app/myapp/vendor/composer/c4aeedaf' && chmod -R u+w '/app/myapp/vendor/composer/c4aeedaf'\n    Invalid zip file, retrying...\n  - Installing phpmailer/phpmailer (v5.2.10)\nDownloading https://api.github.com/repos/PHPMailer/PHPMailer/zipball/07005ecbb80d11ec8c0f067bb37e8909cc7fcbb7\n    Downloading: 100%\nWriting /home/oracle/.composer/cache/files/phpmailer/phpmailer/07005ecbb80d11ec8c0f067bb37e8909cc7fcbb7.zip into cache\n    Extracting archive\nExecuting command (CWD): unzip '/app/myapp/vendor/phpmailer/phpmailer/1ae2dec0ddd65b714d123948d48c89f6' -d '/app/myapp/vendor/composer/c4aeedaf' && chmod -R u+w '/app/myapp/vendor/composer/c4aeedaf'\n    Failed to download phpmailer/phpmailer from dist: '/app/myapp/vendor/phpmailer/phpmailer/1ae2dec0ddd65b714d123948d48c89f6' is not a zip archive.\n    Now trying to download from source\n  - Installing phpmailer/phpmailer (v5.2.10)\n    Cloning 07005ecbb80d11ec8c0f067bb37e8909cc7fcbb7\nExecuting command (CWD): git clone --no-checkout 'git://github.com/PHPMailer/PHPMailer.git' '/app/myapp/vendor/phpmailer/phpmailer' && cd '/app/myapp/vendor/phpmailer/phpmailer' && git remote add composer 'git://github.com/PHPMailer/PHPMailer.git' && git fetch composer\nExecuting command (/app/myapp/vendor/phpmailer/phpmailer): git remote set-url --push origin 'git@github.com:PHPMailer/PHPMailer.git'\nExecuting command (/app/myapp/vendor/phpmailer/phpmailer): git branch -r\nExecuting command (/app/myapp/vendor/phpmailer/phpmailer): git checkout 'v5.2.10' --\nExecuting command (/app/myapp/vendor/phpmailer/phpmailer): git reset --hard '07005ecbb80d11ec8c0f067bb37e8909cc7fcbb7' --\n\n    REASON: Required by root: Install command rule (install phpmailer/phpmailer v5.2.10)\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xjchengo": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/4269", "title": "Add a option to install and update command to controll whether loads provider listings", "body": "Most of time, the provider listings loading process needs a lot of time under my network.\n\n```\n[4.3MB/0.02s] Reading ./composer.json\n[4.4MB/0.02s] Loading config file /home/vagrant/.composer/config.json\n[4.5MB/0.02s] Loading config file /home/vagrant/.composer/auth.json\n[4.5MB/0.02s] Loading config file ./composer.json\n[5.0MB/0.03s] Executing command (CWD): git describe --exact-match --tags\n[5.3MB/0.04s] Executing command (CWD): git branch --no-color --no-abbrev -v\n[5.3MB/0.04s] Executing command (CWD): hg branch\n[5.3MB/0.05s] Executing command (CWD): svn info --xml\n[6.8MB/0.07s] Reading /home/vagrant/.composer/composer.json\n[6.8MB/0.08s] Loading config file /home/vagrant/.composer/config.json\n[6.8MB/0.08s] Loading config file /home/vagrant/.composer/auth.json\n[6.8MB/0.08s] Loading config file /home/vagrant/.composer/composer.json\n[6.8MB/0.08s] Loading config file /home/vagrant/.composer/auth.json\n[6.8MB/0.08s] Executing command (CWD): git describe --exact-match --tags\n[6.8MB/0.09s] Executing command (CWD): git branch --no-color --no-abbrev -v\n[6.8MB/0.09s] Executing command (CWD): hg branch\n[6.9MB/0.10s] Executing command (CWD): svn info --xml\n[7.6MB/0.13s] Loading composer repositories with package information\n[7.9MB/0.16s] Downloading https://packagist.org/packages.json\n[8.0MB/23.93s] Downloading https://packagist.org/packages.json\n[8.0MB/25.05s] Writing /home/vagrant/.composer/cache/repo/https---packagist.org/packages.json into cache\n[8.0MB/25.07s] Installing dependencies (including require-dev)\n[8.4MB/25.08s] Reading /home/vagrant/.composer/cache/repo/https---packagist.org/p-provider-2013.json from cache\n[8.4MB/25.08s] Reading /home/vagrant/.composer/cache/repo/https---packagist.org/p-provider-2014.json from cache\n[8.4MB/25.08s] Reading /home/vagrant/.composer/cache/repo/https---packagist.org/p-provider-2014-10.json from cache\n[8.4MB/25.08s] Reading /home/vagrant/.composer/cache/repo/https---packagist.org/p-provider-2015-01.json from cache\n[8.4MB/25.12s] Downloading https://packagist.org/p/provider-2015-04$e116192acc59f914d7df3be6e373553528705eea2f18244f6309af5121b43aa0.json\n[10.2MB/157.81s] Downloading https://packagist.org/p/provider-2015-04$e116192acc59f914d7df3be6e373553528705eea2f18244f6309af5121b43aa0.json\n[48.9MB/180.26s] Writing /home/vagrant/.composer/cache/repo/https---packagist.org/p-provider-2015-04.json into cache\n[48.2MB/180.31s] Reading /home/vagrant/.composer/cache/repo/https---packagist.org/p-provider-2015-07.json from cache\n[42.2MB/180.34s] Reading /home/vagrant/.composer/cache/repo/https---packagist.org/p-provider-archived.json from cache\n[42.0MB/180.37s] Downloading https://packagist.org/p/provider-latest$906f94c57e4950afdcb384142391fadcd3fe7569f148f788b70b9f10ee0077c2.json\n[47.1MB/182.60s] Writing /home/vagrant/.composer/cache/repo/https---packagist.org/p-provider-latest.json into cache\n[47.1MB/182.67s] Downloading http://packagist.org/p/vlucas/phpdotenv$919fe0a419aa507aa84bfc58a49a02ac1366a1a6c9fd5fb3ba990bf12b795aa1.json\n[47.3MB/183.35s] Writing /home/vagrant/.composer/cache/repo/https---packagist.org/provider-vlucas$phpdotenv.json into cache\n[47.7MB/183.48s]   - Installing vlucas/phpdotenv (v1.1.0)\n[48.2MB/183.54s] Reading /home/vagrant/.composer/cache/files/vlucas/phpdotenv/732d2adb7d916c9593b9d58c3b0d9ebefead07aa.zip from cache\n[48.2MB/183.55s]     Loading from cache\n[48.2MB/183.55s]     Extracting archive\n[48.2MB/183.56s] Executing command (CWD): unzip '/home/vagrant/Projects/composer-test/vendor/vlucas/phpdotenv/de2d6271ee426d5d56ae484f2bbbfe0b' -d '/home/vagrant/Projects/composer-test/vendor/composer/feb0d38c' && chmod -R u+w '/home/vagrant/Projects/composer-test/vendor/composer/feb0d38c'\n[48.3MB/183.91s] \n[48.3MB/183.91s]     REASON: Required by root: Install command rule (install vlucas/phpdotenv 1.0.0|install vlucas/phpdotenv v1.1.0)\n[48.3MB/183.91s] \n[47.8MB/185.97s] Writing lock file\n[47.8MB/185.97s] Generating autoload files\n[47.8MB/186.03s] Memory usage: 47.84MB (peak: 55.11MB), time: 186.03s\n```\n\nCan we add a option to install and update command to indicate whether we need loads provider listings? In order to make this work, packagist needs to add `providers-lazy-url` like toran proxy does.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sarciszewski": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/4022", "title": "Add Support Cryptographic Signatures with Public Key Pinning", "body": "**Please read these first**\n- http://blog.astrumfutura.com/2015/03/securely-distributing-phars-pitfalls-and-solutions/\n- http://fabien.potencier.org/article/73/signing-project-releases\n- https://github.com/defuse/php-encryption/issues/47\n\nThe purpose of this Github issue is to propose a movement towards enabling package maintainers to publish their own OpenSSL signatures via Composer, should they want to.\n# New optional property for composer.json\n\nI'd like to propose a new `composer.json` property called \"security\". It will have the following properties:\n- `contact` which could contain an array of contact information options for reporting security vulnerabilities\n- `publisher` should contain an array of authorized publishers and the SHA-256 fingerprints of their public keys (e.g. openssl)\n# Example\n\n``` json\n{\n    \"name\": \"some_author/myproject\",\n    \"security\": {\n        \"contact\": [\n              {\n                   \"email\": \"security@example.com\",\n                   \"pgpkey\": \"89F7B8300E87E03C52B05289926BC5171CDEA439\",\n              }\n        ],\n        \"publishers\": [\n            {\n                \"name\": \"our_publishing_key\",\n                \"public_keys\": [\n                    {\n                        \"key\": \"someRSApublickeyhere\",\n                        \"sha256\": \"i4a+yBCeboJ2W4kYSQ1DoxUEK00OUpQ0dE6lw1K5XUk=\",\n                        \"sha1\": \"XijzBWQ2WjqfEprXBu6TRkCUolI=\"\n                    },\n                    {\n                        \"key\": \"someOtherRSAPublickeyhere\",\n                        \"sha256\": \"hCTafmUcyOYtvhO4ENY/U5v1pTK1iq+5YHtRnfiGpAk=\",\n                        \"sha1\": \"xVY8xokHfHi1GSpm8fugZJsLInw=\"\n                    }\n                ]\n            }\n        ]\n    }\n}\n```\n# How it should be used\n\nWhen a package opts to specify their own public keys, Composer should be able to verify signatures on the client's side. Packagist may also benefit from tracking which projects offer digital signatures.\n\nThis idea is just a draft. I'd like to know what the Composer team and PHP community wants before I even think about writing a pull request.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/4022/reactions", "total_count": 14, "+1": 10, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 4}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ross-p": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3888", "title": "Feature request: --is-install-needed", "body": "It's terribly difficult to reliably determine in a programmatic manner if `composer install` actually needs to be executed.\n\nAFAICT the only way is to parse output.  And yet composer just changed it so that nothing gets written to stdout, it all goes to stderr instead.  And thus is perfectly illustrated a reason why parsing output is a terrible way to do anything that should be automated.\n\nThus I request a feature `composer --is-install-needed` which can be used thus:\n\n``` bash\nif composer --is-install-needed --no-dev; then\n  composer install --no-dev --optimize-autoloader\nfi\n```\n\nThe problem right now is that `--optimize-autoloader`, which should always be used in production, _always_ rewrites the `autoload.php`, which essentially causes potential downtime every time you run `composer install`, even if nothing was actually changed.\n\nThere exists `composer --dry-run` but this is not adequate for programmatic interpretation of whether or not something will actually be done, particularly given the recent history of composer changing its output in backwards-incompatible ways.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3888/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "frederikbosch": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3644", "title": "Private repositories: cannot change username and/or password", "body": "Beacuse the password is hardcoded in the composer remote (.git/config), the user is not able to change authentication credentials in auth.json. The only way to do this is by removing the vendor folder and run `composer install` again.\n\nPR #3608 fixes this issue.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3608", "title": "Remove authentication credentials from git config file", "body": "When using private repositories, composer leaves authentication credentials in .git/config. This is undesired behaviour because credentials are potentially leaked. This PR removes credentials after fetching. It contains tests for download and update.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dbu": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3582", "title": "more documentation for repository providers: gitattributes and prefer-lowest", "body": "it would be nice to have articles for best practices when providing a repository. notable, the new prefer-lowest feature to test with the oldest permitted dependencies should be documented, and the [.gitattributes](http://stackoverflow.com/questions/17049313/how-to-ignore-directories-with-composer) to not install tests or documentation in production.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/2811", "title": "More explicit reporting for meta-packages which \"provide\" something.", "body": "We use the require-provide mechanism to decouple interfaces from implementation with phpcr and php-odm. so the phpcr bundle requires \"any phpcr implementation\" https://github.com/doctrine/DoctrinePHPCRBundle/blob/master/composer.json#L23 and the implementation says https://github.com/jackalope/jackalope/blob/master/composer.json#L26\n\nSince composer switched to no longer randomly download any of the providing packages (which makes a lot of sense to me, as you need to configure each of them), people get confused by composer complaining that it found no phpcr-implementation. Could we make this more explicit by telling the user that he needs to specify one of the providers? Possibly even listing all providers we can find on packagist?\n\ni checked if this is already reported, but found only #1559 about the provide field\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ihor-sviziev": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3568", "title": "Show downloading package speed", "body": "For now when I add some package and it size is really big (i'm installing Magneto 1.x via composer) - we have only basic information:\n\n```\n  - Installing magento/core (1.9.1.0)\nDownloading https://api.github.com/repos/bragento/magento-core/zipball/e98ff4ed632c70be2c42168338af3e8a68a5f989\n    Downloading: 15%\n```\n\nWould be great add there download speed and estimated time (like in wget).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sbuzonas": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3449", "title": "Add support for git shallow clones", "body": "When working with a large repository it would be nice to opt for a clone depth of 1 to still leverage git to patch dependencies for a project \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3449/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fazy": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3404", "title": "[Feature] Allow SSH/HTTPS context options to be configured globally", "body": "To make Composer connect to a private repo secured by SSH, I need to specify the location of certain security credentials. For SSH it's `username`, `pubkey_file` and `privkey_file`. For HTTPS, you probably need `local_cert`, `verify_peer`, maybe more.\n\n(BTW I don't know why the public key is needed (OpenSSH command line can SSH to a remote box with just the private key locally, public key remote), but in testing that seems to be true in PHP's SSH implementation too, so not just a composer thing.)\n\nHere's an example:\n\n```\n{\n    \"type\": \"composer\",\n    \"url\": \"ssh2.sftp://satis.example.net:/satis/web\",\n    \"options\": {\n        \"ssh2\": {\n            \"username\": \"composer\",\n            \"pubkey_file\": \"/home/username/.ssh/id_satis.pub\",\n            \"privkey_file\": \"/home/username/.ssh/id_satis\"\n        }\n    }\n}\n```\n\nThe problem is I don't want to specify the path of the SSH keys in the committed (shared) composer.json, because each user will have a different location. \n\nEven if `~/.ssh/id_satis` worked (it doesn't), it's still a bit prescriptive on each user.\n\n(Username could be an issue in some cases, but in my setup composer is a shared account with no shell access, so I just add each user's public key to authorized_keys.)\n\nI could just use `ssh/id_satis`, but then I need to update the build scripts to make sure this always gets copied or linked in, and update .gitignore to stop an accidental commit. Even then, the build script needs to either gain another config option (location of files), or always assume names like `~/.ssh/id_satis`, effectively just working around the fact that `~` doesn't work. Not very elegant.\n\nPerhaps as there's already a `~/.composer/auth.json` file for \"http-basic\" and \"github-oauth\", there can be a section in there? Something like this:\n\n```\n\"ssh\": {\n    \"example.org\": {\n        \"username\": \"username\",\n        \"pubkey_file\": \"/path/to/pub_key\",\n        \"privkey_file\": \"/path/to/priv_key\"\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3404/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jacobkiers": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3400", "title": "composer require asks for authentication whereas composer update does not.", "body": "We have a private satis instance with HTTP Basic authentication. This authentication is globally added with:\n\n``` bash\ncomposer config --global repositories.example composer https://packages.example.org\ncomposer config --global http-basic.packages.example.org username password\n```\n\nWhen performing `composer update`, no credentials are asked (as expected). When using `composer require`, credentials _are_ asked.\n\nHow can we solve this?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "deresh": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3299", "title": "Running interactive scripts as composer script doesn't work as expected", "body": "When running a standalone script as part of post-{install,update}-cmd script then interactive scripts doesn't stop at prompt, it just passes through.\n\nFor example if i put a phing in post-install-cmd as \"phing setup\" and setup task in phing requires user input it just loops through (as if i was pressing enter continuosly) in an infinite loop (because phing required that some fields are filled).\n\nif you need aditional info, just ask ;)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3299/reactions", "total_count": 18, "+1": 18, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jpstacey": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3211", "title": "Documentation on source/dist and (D)VCS \"reference\"?", "body": "Hi,\n\nI can't seem to find much in-depth documentation online on when to use source versus dist: what I'm also looking for is an exhaustive list of what types can be used for each; zip, gzip, git, svn and others all appear in examples, but I can't find an actual list.\n\nIt would also be good to document what's required for the source \"reference\" field: it's not clear (except by downloading the code and tracing through to GitDownloader::updateToCommit()) whether that syntax will happily accept branches or tags, along with other commitish strings.\n\nThanks,\nJ-P\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3211/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sirsquall": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3112", "title": "composer reinstall vendor/package", "body": "Hi,\n\nI'm using composer with artifact, where we store all our common modules. \n\nFor the moment we are using maven who is building all the zip files, and running all the tests for our commons modules, and it's working pretty well.\n\nSo when I go to the project where I want to update my pacakge, composer find no change (normal the version didn't change), so I wanted to lunch a reinstall command instead of removing the package and adding again the package, who is quite borring to do.\n\nSo could you make this improvement ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3112/reactions", "total_count": 11, "+1": 11, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mcd-php": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3016", "title": "DOC: How to develop modular application in one IDE project/folder ?", "body": "Please create documentation page fully dedicated to development of modular application.\n\nWhat if i want to start an application with framework/CMS supporting modules, and i clearly realize what my application should be split into multiple composer packages, and that packages will be valuable for community to reuse ?\n\nHow should i lay out my folders and organize my process ?\n- Put packages in separate folders and then what ? Zip up with Phing and then install with `artifact` ? Git submodules ? Play push/pull with git server on developer's local machine ?\n- Develop in `/vendor` ? Git submodules ? Push from under `/vendor` and then reinstall just over it ? Does `composer` warn on update if changes under `/vendor` are committed but not yet pushed ?\n- Should i never do this, and always develop in fully separate projects, connected only by some kind of composer repository ? If so, for what reasons ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gossi": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3008", "title": "Save whether --dev or --no-dev is installed", "body": "Hi,\n\nI would like to request to save whether the install/update command is run with --dev or --no-dev option.\n\nBackground: I would like to add tooling support for this on the composer-eclipse-plugin. To add the respective (autoload or autoload-dev) into the build path, so contents are available for content assist.\n\nThank you very much\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3008/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/2174", "title": "\"API\" for install path", "body": "Disclaimer: This issue is not intended for an end-users. Instead it focuses on tooling support for composer (such as the [Composer-Eclipse-Plugin](https://github.com/pulse00/Composer-Eclipse-Plugin))\n\nWhen packages installed, they are typically installed in the vendor directory. Though especially custom-installers change the path. One of the main features of the Eclipse-Composer-Plugin is to automatically manage the build-path, so that code-assist works seamlessly without any further user-interaction. For now, packages installed with a custom install path can't be automatically managed.\n\nFor these cases an install path \"API\" (maybe be another property in one of the json-files) would be handy and welcome to provide tooling support.\n\nThanks\ngossi\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "therealmikz": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/3000", "title": "Add plugin::deactivate() method", "body": "I've encountered really strange behavior of composer. When custom installer is removed from dependencies, I get an error saying that its class can't be found. I may be wrong but, as far as I see in composer source, first it is registered as an installer in Composer\\Plugin\\PluginManager::registerPackage() and then it gets phisically removed.\nSteps to reproduce:\n1. Initialize empty composer.json\n2. Add custom installer, In my case bug occured with robloach/component-installer 0.0.12 so the line would be:\n\"robloach/component-installer\": \"0.0.12\"\n3. Run composer install\n4. Remove requirement\n5. Run composer update\nPHP Fatal error:  Class 'ComponentInstaller\\Process\\CopyProcess' not found in /home/mikz/temp/composerTest/vendor/robloach/component-installer/src/ComponentInstaller/Installer.php on line 160\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/3000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "h4cc": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/2847", "title": "Parallel download of dist archives", "body": "When using dist files for downloading, it would be very cool to have a parallel download of these archives.\n\nIs there any chance to add such a feature?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2847/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "olvlvl": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/2797", "title": "An easier way to obtain the sorted package map from script callbacks", "body": "Hi,\n\nI would like to implement some kind of _auto-config_ feature in my framework, and I would like it to be triggered on the \"autoload-dump\" event. My generator needs to traverse the sorted package map to generate the configuration. I'm currently using the following code:\n\n``` php\n<?php\n\nnamespace ICanBoogie\\AutoConfig;\n\nuse Composer\\Script\\Event;\n\nclass FakeAutoloadGenerator extends \\Composer\\Autoload\\AutoloadGenerator\n{\n    static public function sort_package_map(\\Composer\\Autoload\\AutoloadGenerator $generator, $packageMap)\n    {\n        return $generator->sortPackageMap($packageMap);\n    }\n}\n\nclass Generator\n{\n    static public function on_autoload_dump(Event $event)\n    {\n        $composer = $event->getComposer();\n        $package = $composer->getPackage();\n        $generator = $composer->getAutoloadGenerator();\n        $packages = $composer->getRepositoryManager()->getLocalRepository()->getCanonicalPackages();\n        $packageMap = $generator->buildPackageMap($composer->getInstallationManager(), $package, $packages);\n        $sorted = FakeAutoloadGenerator::sort_package_map($generator, $packageMap);\n\n        // \u2026\n    }\n}\n```\n\nWith the following lines in the root package:\n\n``` json\n{\n    \"autoload\": {\n        \"psr-4\": {\n            \"ICanBoogie\\\\AutoConfig\\\\\": \"vendor/icanboogie/icanboogie/auto-config/\"\n        }\n    },\n\n    \"scripts\": {\n        \"post-autoload-dump\": \"ICanBoogie\\\\AutoConfig\\\\Generator::on_autoload_dump\"\n    }\n}\n```\n\nAs you can see the code is pretty long and hackish since the `sortPackageMap()` method is protected and thus cannot be invoked from a public scope.\n\nI would like to know if there is a better way to obtain the sorted package map. Since it is already computed to generate the autoload config, it should be available somewhere.\n\nThanks !\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "padraic": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/2772", "title": "Incorrect description of packages.json", "body": "From 05-repositories.md:\n\n```\nThe main repository type is the `composer` repository. It uses a single\n`packages.json` file that contains all of the package metadata.\n```\n\nIn reality, the file can reference multiple other files which allows for the repository data to be split up.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2814", "title": "[WIP] Developer Package Signing", "body": "This PR is a work in progress. Expect changes and check the TODO list. Review/testing is welcome.\n\nThis pull request is intended to add support for developer-level package signing to Composer using openssl. It includes a \"create-keys\" command to generate an RSA private and public keys (the private key should be encrypted using a passphrase), an \"add-dev-key\" command which imports a private key and extracts the public key for distribution in a package within keys.json, and a \"sign\" command which assembles a manifest of files, their checksums, and lengths, and signs the manifest using a private key within manifest.json. This PR does not address any form of package or metadata signing by Packagist which is also required for repository-level security. This PR does not depend on SSL/TLS support.\n\nTODO:\n1. ADD support for Composer to cache keys.json data since it should only be populated on first encounter so that attacks to alter keys.json have a chance to be detected.\n2. ADD support for Composer to verify package signatures as part of its install/update routines.\n3. ADD verification status to install/update output.\n4. ADD composer command options to reject unverified packages (I'll make it optional but it's strongly suggested that this become enabled by default in time).\n\nYou can currently test sign packages using the following commands (the first three are only required to setup keys):\n\n```\nphp composer.phar create-keys --prefix=myUniquePrefix\n\nphp composer.phar add-dev-key ./path/to/myUniquePrefix-private.pem\n\nphp composer.phar sign-dev-keys ./path/to/myUniquePrefix-private.pem\n```\n\n```\nphp composer.phar sign ./path/to/myUniquePrefix-private.pem\n```\n\nThis should result in two new files: keys.json (used to distribute authorised public keys) and manifest.json (a signed listing of all package files, their SHA256 checksums and lengths).\n\nThe theory is to sign packages and commit keys/manifest changes as the FINAL step before tagging a release. If you make any other changes, or altered the tag after signing, then the signatures could never be verified by users.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nineinchnick": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/2622", "title": "composer.lock file don't use the overridden repositories", "body": "Same issue as in #1252.\n\ncomposer.json:\n\n``` json\n    \"repositories\": [\n        {\n            \"type\": \"vcs\",\n            \"url\": \"https://github.com/pear/Numbers_Words\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=5.3.2\"\n        ,\"pear/numbers_words\": \"dev-master\"\n    }\n```\n\nAfter removing vendor dir contents and composer.lock and issuing `composer install`, composer.lock:\n\n``` json\n        {\n            \"name\": \"pear/numbers_words\",\n            \"version\": \"dev-master\",\n            \"target-dir\": \"Pear/NumbersWordsBundle\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/jroszkiewicz/NumbersWordsBundle.git\",\n                \"reference\": \"6f30aedc01523b58d190849a4a2cb19fe703840f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/jroszkiewicz/NumbersWordsBundle/zipball/6f30aedc01523b58d190849a4a2cb19fe703840f\",\n                \"reference\": \"6f30aedc01523b58d190849a4a2cb19fe703840f\",\n                \"shasum\": \"\"\n            },\n            \"type\": \"library\",\n            \"autoload\": {\n                \"psr-0\": {\n                    \"Pear\\\\NumbersWordsBundle\": \"\",\n                    \"Numbers_Words\": \"\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"PHP License 3.01\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Daniel O'Connor\",\n                    \"email\": \"daniel.oconnor@gmail.com\",\n                    \"role\": \"Pear Developer\"\n                },\n                {\n                    \"name\": \"Jakub Roszkiewicz\",\n                    \"email\": \"j.roszkiewicz@vaka.pl\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Translating numbers to words\",\n            \"homepage\": \"https://github.com/pear/Numbers_Words\",\n            \"keywords\": [\n                \"PEAR\",\n                \"conversion\",\n                \"numbers\",\n                \"translation\",\n                \"words\"\n            ],\n            \"time\": \"2013-06-17 15:30:13\"\n        },\n\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "donquixote": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/2460", "title": "AutoloadGenerator refactoring - strategy talk", "body": "I still would like to refactor the AutoloadGenerator. It is so messy and huge. But I want to wait until PSR-4 lands, https://github.com/composer/composer/pull/2459\n\nPrevious attempts:\n- https://github.com/composer/composer/pull/2142\n- https://github.com/composer/composer/pull/2298\n\nNow, before I give this another try, I would like to discuss some strategy.\n\nI made some strategical decisions in the previous attempts, and would like to know which of these you agree with and which you don't.\n#### 1. Introduce separate classes for different parts of the generated autoload stuff.\n\nOne for PSR-0, one for PSR-4, one for classmap, one for include paths, etc. In the second PR I called this \"aspects\", but discussion showed this was a stupid and misleading choice of word. Maybe \"Plugin\" is better?\n\nEach of these classes can do two things: Dump a file, and return a php snippet for the ComposerAutoloaderInit::getLoader() method. This can be defined in an interface they all implement.\n\nIn the second PR this used to be in the same method, but we can easily split this up to be two separate methods.\n\nOne question is which data to provide to those \"plugins\". The main algorithm should just iterate over all registered plugins and give each the chance to dump a file and add a php snippet. Here they should all receive the same parameters. However, they could have different constructor parameters.\n#### 2. Turn some variables into protected object properties\n\nSome of the variables in AutoloadGenerator are passed around all over the place. E.g. $basePath, $vendorPath, $targetDir, $appDirBaseCode, stuff like that.\n\nI generally believe in reducing the visibility of state and variables as much as possible. An object or method that does not need a given variable, should not get its hand on it. However in this case I don't think that all the passing around really helps anyone.\n\nIt would be easier if at least some of the variables were somehow bundled in an object. This can either be the main object where all the work happens, so you would do $this->vendorPath.\n\nOr it could be a service object that is passed around, to provide everyone with the paths. This could also take care of the calculation of relative paths from one base to another.\n#### 3. Have an object that represents the process\n\nAtm the AutoloadGenerator itself does not remember anything about the generation process. All the information about the generation process is passed in to the dump() method, and will be forgotten afterwards.\n\nI am suggesting a different approach: An object that receives all the information on construction time, and that only lives as long as the generation process.\n\nThis object could either contain all the generation logic, or it could just be a helper to be passed around.\n\nWe should not change the interface of AutoloadGenerator, so this new object would be something else, instantiated from AutoloadGenerator->dump().\n#### 4. LazyEvaluationContainer similar to a DIC\n\nThis was an idea I used in the second PR, that I also like to use \"at home\" in other projects.\n\nIt is meant for a situation where you want to calculate a number of values with a dependency graph. You want to make sure that each value is only calculated once, and you want to make sure that values are calculated in the correct order so that if B depends on A, then A will be calculated before B. The values are all part of the same instance of the problem, they will all be recalculated if the instance parameters change.\n\nTechnically the solution I use works very much like a compiled DIC like in e.g. Symfony2.\n\nI am still not sure this is an idea that can be generally recommended, e.g. @igorw had some valid concerns. I also [asked on stackoverflow](http://stackoverflow.com/questions/19620868/lazy-evaluation-container-for-dynamic-programming) to get some useful feedback, but not sure I asked the right question.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2563", "title": "Autoload generator refactor", "body": "Don't pull this yet, this is in review / demo stage.\nI am going to rebase this quite a lot in the next days.\n\nSee [Issue #2460: AutoloadGenerator refactoring - strategy talk](https://github.com/composer/composer/issues/2460)\n\nKnown issues:\n- Names might not be ideal. Especially \"PluginInterface\" I feel should rather be something else. This is not about providing an API, it is only to organize our internal code better. Please be constructive and suggest alternative identifiers!\n\nFixed issues:\n- Some of the changes should rather go into a separate PR. Especially those about AutoloadGeneratorTest.\n  Solution: This was now factored out into https://github.com/composer/composer/pull/2666, and merged into master.\n- Commits are just \"commit everything I have at a time\", I will rebase when it has shaped up.\n  Solution: Not it is all squashed into one commit.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/3737155", "body": "Is there a reason for return instead of elseif ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3737155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3737337", "body": "ah, is it? is this explained somewhere?\nI am facing the same question here,\nhttps://github.com/composer/composer/pull/2121/files#L0R162\n\n(although it is slightly different, we don't need an additional nesting level.)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3737337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "igorw": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/2249", "title": "Document behaviour of forked (renamed) packages", "body": "The VCS repo reads the package name only from the master branch. This allows effectively actively forking a package and renaming it while keeping the old tags and branches intact. Applies to packagist too.\n\nThis behaviour should be documented.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/2249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/1543704", "body": "I'd rather have Silex packaged as a standard composer package. With the phar still available for those who want it of course.\n\nPhars including other phars quickly becomes messy, I think it's better to move away from this.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1568412", "body": "Tha't kind of a good question, how is composer supposed to manage its own dependencies?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1568412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1568441", "body": "Ok, so I'm confused. @stof did you mean a) package composer into a phar or b) allow composer to install phar-packaged libs?\n\nBecause I assumed you were refering to the latter.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1568441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720272", "body": "Do this to squash your stuff.\n\n```\n# new 'new-patch-6' branch based on master\ngit checkout -b new-patch-6 master\n# stage the state of 'patch-6' for the next commit\ngit reset --soft patch-6\n# create that awesome commit\ngit commit -m 'all my changes in one commit!'\n# get rid of the old patch-6\ngit branch -D patch-6\n# create a new patch-6 based on new-patch-6\ngit checkout -b patch-6\n# get rid of new-patch-6\ngit branch -D new-patch-6\n```\n\nNow your `patch-6` has a single commit containing all changes. You can `push -f`.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720413", "body": "The problem with rebasing is that it rebases everything first, forcing you to resolve conflicts on every commit. `git rebase --squash` does not exist (at least not in 1.7.6). There is however `git merge --squash`, however that has similar problems like rebase, and in this case also comes back with strange merge conflicts.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2258284", "body": "One issue is that the .composer directory is not being created. `installed.json` cannot be created unless it exists.\n\nThe other problem is that PlatformRepository packages are also locked. When re-running `composer install` it will try to install those packages, which is not possible.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2258284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2258687", "body": "Two tests are failing.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2258687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2355873", "body": "I decided to go for an explicit solution. It's a bit more verbose, but gets rid of the ambiguity. Plus, we don't have to change Symfony's class loader.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2355873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360299", "body": "Cannot reproduce this either using `packagist.org/get/composer.phar`.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2416144", "body": "No. We have required, recommended and suggested. Recommended packages are installed by default, suggested packages are displayed to the user and he can install them at will.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2416144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2416894", "body": "This distinction is made in other package managers (such as APT) as well. And no, they are not equivalent. Use a dictionary if you don't believe me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2416894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422164", "body": "- Renamed installAs to target-dir (we discussed this on IRC and decided that it's more accurate than installAs)\n- Refactored autoload code into an AutoloadGenerator\n\nShould be ready for merge.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422410", "body": "I guess we could always have the sf2 ClassLoader as a dependency, added by composer. Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2549700", "body": "Some more related weirdness here.\n\nWith the \"silex/silex\" composer.json from above, it will install \"symfony/symfony\" instead of the individual \"symfony/*\" component packages.\n\nAlso, while the individual packages exist on packagist, when trying to add just this as a dependency:\n\n```\n\"symfony/http-foundation\": \">=2.0\"\n```\n\nIt will respond with:\n\n>  [UnexpectedValueException]  \n>  Package symfony/http-foundation could not be resolved to an installable package.\n\nNot sure if they are really related or individual issues, but they do seem related.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2549700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2568976", "body": "For this reason we already do have a `target-dir` property that can be set. This is the same as the originally proposed \"installAs\". It allows you to specify where the package is installed.\n\nFor bundles:\n\n```\n{\n    \"name\": \"fos/rest-bundle\",\n    \"type\": \"symfony-bundle\",\n    \"target-dir\": \"FOS/RestBundle\",\n    \"autoload\": {\n        \"FOS\\\\RestBundle\": \".\"\n    }\n}\n```\n\nThis will install the package into `vendor/bundles/FOS/RestBundle` and set the autoloader to point to vendor/bundles.\n\nFor components:\n\n```\n{\n    \"name\": \"symfony/console\",\n    \"target-dir\": \"symfony/src/Symfony/Component/Console\",\n    \"autoload\": {\n        \"Symfony\\\\Component\\\\Console\": \"symfony/src\"\n    }\n}\n```\n\nWill install into `vendor/symfony/src/Symfony/Component/Console` and point the autoloader to `vendor/symfony/src`.\n\nBasically, if a `target-dir` is provided, the `target-dir` is relative to the main install dir (like `vendor` or `vendor/bundles`), if none is provided, it's relative to where the package is installed (e.g. `vendor/monolog/monolog`).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2568976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569019", "body": "Actually, since PSR-0 is backward-compatible with PEAR, it is supported. You just need to do prefix matching:\n\n```\n$loader = new ClassLoader();\n$loader->add('Twig_', __DIR__.'/vendor/twig/lib');\n$loader->add('Symfony\\\\', __DIR__.'/vendor/symfony/src');\n$loader->register();\n```\n\nThe current loader does support multiple directories per namespace, you just need to set them in the initial add() call. Being able to add others later is a detail, and could easily be added.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569133", "body": "I don't really care where things are installed, I'd be fine with having everything strictly in package dirs. Ping @everzet.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2595202", "body": "This is not about JSON format validation, it's about validating the actual data in the JSON against a schema. ;-) There is a ticket for format validation as well though: #36, however, we already have a few regexes that do quite a good job at checking the format. We just need to display them in a nicer way, that's all.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2595202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2607559", "body": "Try the things mentioned here: http://silex.sensiolabs.org/doc/usage.html#pitfalls\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2607559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2659150", "body": "It will become a problem as soon as the tests involve a third-party component.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2659150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2659195", "body": "Not sure if it's fixed now, but when I last tried, php would call both stubs all the time.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2659195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2664525", "body": "For optional dependencies, sure. But what about hard deps?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2664525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2695115", "body": "Your patch results in a segfault for me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2695115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2718633", "body": "@stloyd what's the status?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2718633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2718634", "body": "Side note: we discussed being able to supply a github url which would set default values based on data fetched through github api.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2718634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2718786", "body": "needs a getcomposer.org/version file that contains the sha of the latest build.\n\n```\n$ git log --pretty=\"%h\" -n1 HEAD\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2718786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/625506", "body": "For the *nix instructions you'd have to do `./composer.phar` which is really weird. I'd just instruct to use `php composer.phar` everywhere.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/625506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1452556", "body": "You are right. Could you please make a PR for this?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1452556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1455791", "body": "I would think that we want to keep the alias, unless there have been talks about removing it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1455791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1598186", "body": "Repository docs should be updated as well.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1598186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2221681", "body": "Please update the \"repositories\" doc explaining batch notification API.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2221681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2221694", "body": "Please add this new option to the \"cli\" doc.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2221694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2867492", "body": "@rogeriopradoj This was mostly discussed in the context of symfony at symfony/symfony#6605. We decided to encourage including tests and docs as part of the zip distribution (since they are useful during development), and allow users to strip them as part of their own deployment process.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2867492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/150552", "body": "`$config` does not exist, should that maybe be `$json`?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/150552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/161288", "body": "The json-schema spec changed from \"optional\" to \"required\", the default value of this being false. This is being addressed in my [json-schema branch](https://github.com/igorw/composer/compare/json-schema).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/161288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172633", "body": "It's a matter of preference, but I don't really care either way.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172832", "body": "Huh? I added it to the InstallerInterface. I need access to it from outside.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172905", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/185852", "body": "There are a few reasons. First of all, it allows us to use the sf2 class loader, and I also think the distinction makes sense. This is more explicit and also avoids conflicts. It also means we can easily add other things like ClassMap in the future.\n\nI think it's the better solution.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/185852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213601", "body": "What's the purpose of this?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278075", "body": "What's this?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278083", "body": "Missing space before `{`.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278084", "body": "sprintf?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322538", "body": "fixed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322552", "body": "fixed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322553", "body": "changed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322569", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322587", "body": "I put it at the bottom because it's static. Where is it defined that it should be `public static`?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322665", "body": "It is not specified and therefore completely inconsistent. I like to use `static public` (to emphasize the static) and put them at the end to group them.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/322665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Dundee": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/1967", "title": "Actual git reference is not checked", "body": "Hi,\nI have found out that composer install or update is not checking the actual reference of git dependencies which is quite confusing.\n\nUsecase:\n1. project with one dependency, which is a git repository\n2. go to dependency dir and checkout it to another commit/branch/tag (to try if our application is working with this commit). I want to do this directly via git because is much faster and more straightforward.\n3. run composer install in project dir to checkout dependency back to where it should be => \"Nothing to install or update\"\n\nExpected behaviour: Composer should check actual reference of git repositories (similar way as git submodule update do this) and checkout correct commit.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/1967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tmysik": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/1490", "title": "Stable (--porcelain/XML) output", "body": "Would it be possible to produce Composer output also in XML format? Using some command line switch, of course. I am asking because the current output (command line) is \"not stable\" so it is difficult to incorporate support for Composer into other tools (NetBeans in our case). With XML output, we could be sure that any changes in the regular (command line) output will not affect us.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/1490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Petah": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/1298", "title": "Multithreaded/Multiprocess Install/Update", "body": "A nice feature to have would be enabling composer to work on multiple threads/processes.\n\nEach thread/process could download (git pull) 1 dependency. \n\nI know it would be possible because I have implemented it in PHP before. \n\nThey way I have done it (although not very elegant) is:\n\nCreate a temp bash/batch file (linux/windows) that executes the git command and pipes the output to another temp file, then outputs an exit signal to the file.\n\nThe main thread executes the scripts in the background (using `&` on linux, and spawning a `cmd` process on windows) and then scans the temp files for the exit signal. \n\nI know this might be a hard thing to implement but I thought I would just put it on the record as a nice to have in the future. \n\nAn exert  of the script I made is at: https://gist.github.com/4034927\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/1298/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SteelzZ": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/1136", "title": "Ability to define what type of licenses are allowed to be added as dependencies", "body": "Would be nice if I could define global rules for dependencies. In this way I could manage that someone in a team wouldn't put a dependency on a package that requires license. In big project incident like this could cause problems. So if I could define that only X type of licenses are acceptable composer wouldn't allow for someone to install package that has improper license. \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/1136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gergoerdosi": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/704", "title": "Replace remote file_get_contents() calls with cURL", "body": "I found two places in the code where file_get_contents() is used with remote URLs. These are:\n- Composer\\Repository\\ComposerRepository:: notifyInstall()\n- Composer\\Util\\RemoteFilesystem::get()\n\nOn many servers allow_url_fopen is disabled for security reasons. A solution could be to replace these file_get_contents() calls with cURL. This would make cURL as a requirement, but most of the servers have it installed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/704/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fprochazka": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/601", "title": "local-global repositories (composer link command)", "body": "Hi,\n I'm writting simulatenously few libraries and it's realy pain to commit everything and for every few lines write <code>$ composer update</code>. So it would be nice to have new kind of local repository or something, that wouldn't copy the dependency into project, but rather link to it. So when I change something in one project, it affects the other one immediately and I don't have to commit stuff and run update on composer.\n\nSome command like \"link this library, but don't touch it, just autoload it\".\n\nOr is there any suggested worflow on this problem?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/601/reactions", "total_count": 29, "+1": 29, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2426162", "body": "@lisachenko You can do the same, don't you?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2426162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2427893", "body": "@lisachenko I simply don't understand, why can't you register your autoloader after composer and use prepend as well?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2427893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3740880", "body": "And it makes code cleaner, because the \"else\" branch is not indented for another level.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3740880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "rdohms": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/563", "title": "Packages don't update to latest commit / Package repo fails to update", "body": "When declaring packages inside the compose.json file, if reference points to `master` then running updates does not check out the latest commit in the master branch.\n\nExpected behaviour:\nComposer should see that branch is master and check if commit hash is the same as HEAD, if not it should checkout head.\n\nActual behaviour:\nComposer sees that branch is master and ignores the rest.\n\nTemporary workaround is to add the actual commit hash into the reference field, which gets the desired outcome but add overhead in updating.\n\nIdeally reference should also accept dev-master as code for always getting the latest commit, or simply update to latest commit in everything but tags.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/563/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schmittjoh": {"issues": [{"url": "https://api.github.com/repos/composer/composer/issues/183", "title": "Consider adding basic inheritance support for composer.json", "body": "Opening at Jordi's request as discussed on FOSRestBundle.\n\nThis would come in handy for testing a bundle against multiple different vendors without duplicating the entire file.\n\n``` json\n// composer.json\n{\n    require: { \n        \"symfony/symfony\": \"2.*\", \n        // ... more dependencies\n    }\n}\n```\n\n``` json\n// tests/composer-2.0.json\n{\n    inherit: \"../composer.json\",\n    require: { \"symfony/symfony\": \"2.0.*\" }\n}\n```\n\n``` json\n// tests/composer-2.1.json\n{\n    inherit: \"../composer.json\",\n    require: { \"symfony/symfony\": \"2.1.*\" }\n}\n```\n## Edit: Solution\n### Use the Composer Merge Plugin from Wikimedia https://github.com/wikimedia/composer-merge-plugin\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/183/reactions", "total_count": 63, "+1": 63, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2652344", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2652344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tolbon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/595cf4432c42a0c98042866ff21107ea90b2c523", "message": "Fix Test RepositoryFactory"}, {"url": "https://api.github.com/repos/composer/composer/commits/621a9d845cd5b571146298214ad27d5fff6cc670", "message": "Add 'git-bitbucket' in RepositoryFactory\n\nAdd 'git-bitbucket' and 'hg-bitbucket' in RepositoryFactory help to call good driver in vcs\r\nCause if you config your repository type with 'git'. the GitDriver is instantiate and not GitBitbucketDriver\r\n\r\nFix #5389"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mhujer": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/bbee0d7c6c4441b49085e1853ed9e7c927163b14", "message": "Validation warns if script description for nonexistent script is present\n\nFixes #7010"}, {"url": "https://api.github.com/repos/composer/composer/commits/9bb4cce0b8b02696cebfef202d71c8d27c5d6c49", "message": "Fixes typos in docs"}, {"url": "https://api.github.com/repos/composer/composer/commits/149a5e9401f4afcdc9d0b190a318d8668373ee6c", "message": "Change links to prevent unnecessary redirect"}, {"url": "https://api.github.com/repos/composer/composer/commits/58a62dceab4d85653334a43bf589d8965883245a", "message": "Change http to https where possible"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carusogabriel": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/3d262bd637dbf96285766835edf1ce0ba5ed9cec", "message": "Fixes from PHPStan level 0\n\nMore fixes from PHPStan level 0"}, {"url": "https://api.github.com/repos/composer/composer/commits/2ad6f611d7fb57b06f98365e0d0c856048075800", "message": "Allow bin key to receive string"}, {"url": "https://api.github.com/repos/composer/composer/commits/7aad20cb30221f8e4d6996bba74adf01fd16c5c8", "message": "[SvnDownloader] Improve plurals and singulars"}, {"url": "https://api.github.com/repos/composer/composer/commits/486e580db294b5fe2e8ef887efacb7f2500268c9", "message": "Clean up documentation"}, {"url": "https://api.github.com/repos/composer/composer/commits/50045a75362358572237023055d3a7e83005afec", "message": "Add no_useless_else in phpcs"}, {"url": "https://api.github.com/repos/composer/composer/commits/32a409a3ee15e756463b822a5be495e8200a9e31", "message": "Clean elses"}, {"url": "https://api.github.com/repos/composer/composer/commits/885da4c8ef2b685c6b101c915dbd7ac48931b77d", "message": "Refactoring tests"}, {"url": "https://api.github.com/repos/composer/composer/commits/afc9a7643e343831819e52d9f6e42f32f4ea2734", "message": "Use PHPUnit\\Framework\\TestCase instead of PHPUnit_Framework_TestCase"}, {"url": "https://api.github.com/repos/composer/composer/commits/a4b220273e940df888854fe80479163064b31425", "message": "Refactoring Tests (#6849)"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6896", "title": "Add PHPUnit 6 support", "body": "I've added `PHPUnit 6` support to `Composer`. Changes:\r\n- Define mocks with fluent interface;\r\n- `setExpectedException` isn't available in version `6`, so I substitute to `@expectedException` and `@expectedExceptionMessage` notations. But, there are some tests that these expectations are variables, so, I created a method layer in `Composer\\TestCase` and extend those TestCases that need this method.\r\n\r\nOne question: why not extend all TestCases from `Composer\\TestCase`? I guess is easier for maintenance, isn't?", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "remicollet": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/b0fa2bd5e20b5300cdfe977678eea315e96df9a3", "message": "Fix dependency on seld/jsonlint 1.4\n\nAs deprecated flag is used."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "localheinz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/de07f588c14452e69e0ec2e557739657f3b95892", "message": "Fix: Use array_key_exists() instead of isset()"}, {"url": "https://api.github.com/repos/composer/composer/commits/79828f7543f355180c6225442404dd833a0252a2", "message": "Enhancement: Assert that key is removed when value is  null"}, {"url": "https://api.github.com/repos/composer/composer/commits/d034f1e23f6d5ff5d8257c7e112caed2330cc7a1", "message": "Fix: Add 'sort-packages' to composer-schema.json"}, {"url": "https://api.github.com/repos/composer/composer/commits/5e68566ce6387452d29092e9dff3ca7b5d93a947", "message": "Fix: Typo / wording"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6942", "title": "Fix: Remove unused parameter and field", "body": "This PR\r\n\r\n* [x] removes an unused parameter and field from `Locker`\r\n\r\n\ud83d\udc81\u200d\u2642\ufe0f The instance of `RepositoryManager` passed in into its constructor is never used.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "johnstevenson": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/85e08faebf6c145b807c8b82d2b209a222479656", "message": "Cache composer packages on Appveyor"}, {"url": "https://api.github.com/repos/composer/composer/commits/058f204dd804ac14e8d976fac24536938db3d1e2", "message": "Remove build platform from appveyor.yml"}, {"url": "https://api.github.com/repos/composer/composer/commits/02fbbd5a427346ecae0720ae096e1f6e5c42088d", "message": "Skip MockedZipDownloader tests if zip is missing (#6917)\n\n* Skip MockedZipDownloader tests if zip is missing"}, {"url": "https://api.github.com/repos/composer/composer/commits/7ee3a92a28a62598ae3d60222e48f2581fcfe5f2", "message": "Modularize appveyor.yml and use Composer-Setup"}, {"url": "https://api.github.com/repos/composer/composer/commits/3dc7d500dfdaf5b5889ac112802166d5a5b9feda", "message": "Don't use shallow_clone if tests are export-ignored"}, {"url": "https://api.github.com/repos/composer/composer/commits/fbdb9ac790e6656b661a9eb3c9c00e43d16ee7ac", "message": "Fix chocolatey php and remove old artefacts"}, {"url": "https://api.github.com/repos/composer/composer/commits/3511edc9e8a97634a1a23b2d7de2177d1cb829c2", "message": "Fix shell proxy to allow user-defined cygdrive"}, {"url": "https://api.github.com/repos/composer/composer/commits/b0922b95afc8ec029a90a616a7613286b73615be", "message": "Report multiple inis in php.ini specific messages\n\nWhere systems use multiple ini files it is perhaps more useful to\nsuggest running `php --ini` to see their locations, rather than showing\nthe loaded php.ini (if one exists)."}, {"url": "https://api.github.com/repos/composer/composer/commits/b1aed48e1ae26de30ad14b874a22fc95bdcfbe8a", "message": "Fix bug setting COMPOSER_ORIGINAL_INIS\n\nThis variable stores the loaded ini file and any additional scanned ini\nfiles, separated by a path-separator. The loaded ini file should always\nbe present, even if it is an empty value. Unfortunately I removed any\nempty value to parse the ini files, then used the truncated list to set\nthe variable.\n\nThis bug surfaced on docker php images. These do not have a specific\nphp.ini but store all their settings in the location(s) configured at\nbuild time using --with-config-file-scan-dir."}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2642829", "body": "Brill, that works, but `addcslashes` is very brutal. For example it breaks valid Json like `\\n` or `\\u00a3`, but I presume you are not expecting to see those?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2642829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2643077", "body": "It's a tricky one. I was working on something that successfully preserved the Json input, but (BIG) failed to properly escape paths that contained valid Json (other than `u00a3` type). So `foo\\foo` would become `foo\\\\foo`, but `foo\\bar` would be `foo\\bar`. At which point I decided it was probably necessary to do this checking/conversion outside of the JsonManipulator, IF valid Json was expected and needed to be preserved.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2643077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2643786", "body": "Oops, `foo\\foo` would become `foo\\foo` (I forgot \\f is a formfeed). What I meant was that  `foo\\another` would become `foo\\\\another` etc\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2643786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2644436", "body": "Ok, but running `composer config -g cache-files-dir a\\nb\\fa` from the command-line produces this config.json:\n\n```\n{\n    \"config\": {\n        \"cache-files-dir\": \"a\\\\nb\\\\fa\"\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2644436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2644516", "body": "My comments about addcslashes were regarding your commit, rather than my initial endeavours (which I completely buggered up in my commit by turning all value data into a string!)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2644516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/composer/composer/comments/2645030", "body": "Ah yes, I guess should not have been testing this through the command-line. A couple of things I noticed:\n\nThe strpos params are inverted in this line, so newline always ends up as `\\n` \n\n```\n$this->newline = false !== strpos(\"\\r\\n\", $contents) ? \"\\r\\n\": \"\\n\";\n```\n\nhttps://github.com/composer/composer/blob/master/src/Composer/Json/JsonManipulator.php#L32\n\nAnd  `for ($i = 0; $i <= $strLen; $i++)` means that there is always an extra iteration beyond the last character.\n\nhttps://github.com/composer/composer/blob/master/src/Composer/Json/JsonFile.php#L198\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2645030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "mbrodala": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/7369aba645bed5fc1025581342d7e2b54aa468db", "message": "Fix some grammar"}, {"url": "https://api.github.com/repos/composer/composer/commits/8424235fac3ea7ceaf5f855ffed23351c21a91ca", "message": "Rename to \"scripts-descriptions\""}, {"url": "https://api.github.com/repos/composer/composer/commits/ad56577223d1a7945af7e67f8f1e25c1360cbc3d", "message": "Ensure scripts description items are strings"}, {"url": "https://api.github.com/repos/composer/composer/commits/80d0c2029b8f588f8b00e3a1ca8daac4edc3144e", "message": "Move \"scripts-description\" to toplevel\n\nFixes #6881"}, {"url": "https://api.github.com/repos/composer/composer/commits/4721a7c2c81f377859ff97c472873e88a8ea38b6", "message": "Document arguments for custom commands\n\nCustom commands support the same pattern to pass arbitrary arguments like the \"run-script\" Composer command."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "TheFox": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/512188d21261d2e2e11f0a0b24861f2353d2be11", "message": "Filter macOS .DS_Store files when detecting github archives, fixes #6784, closes #6785"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "renoirb": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/9f723ba3814cf77fbe20472684fcf6d990cbf3f3", "message": "Support GitLab repositories w/ port over HTTPs\n\nWhen we have self-hosted GitLab, over HTTPs, on a different port.\n\nrel composer/composer#6894"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jean85": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/fc6c12bd0a427184820894309c65387807236e97", "message": "Fix pretty version guessing when non-dev branch"}, {"url": "https://api.github.com/repos/composer/composer/commits/54adf0b61e3d2b32ae3d5eff482e0256138fe3f9", "message": "Add regression test about VersionGuesser pretty_version handling"}, {"url": "https://api.github.com/repos/composer/composer/commits/3cf31da414d92a2c063f7ec1467c7bc40fa2efee", "message": "Fix root package not having a pretty version when detecting from VCS, fixes #6845, closes #6847"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomzx": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/c3b6c0c85ea9484792e785cbe07d127a57875440", "message": "Make sure exitCode is defined in the show command."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sonjaq": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/20cdfd09ae35f460f45162d0653c165c1c2de637", "message": "Corrects documentation link by removing space\n\nThere was an extra space lurking that prevented a link from rendering. The space is now removed."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brettsantore": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/449ecf098df9a63bb3eef898db1ef3a4d7bcd279", "message": "clarify optionality of package in require command"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kohkimakimoto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/afa0b14389bd552784629ad81a94f993c8308bd9", "message": "update doc"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Nenglish7": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/467603e1dd658df07665d33191bd16bd42703dc8", "message": "Update README.md\n\nFix grammar."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "OskarStark": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/8b90037d7bf345861ab9276e737316414070e087", "message": "highlight previous composer version"}, {"url": "https://api.github.com/repos/composer/composer/commits/e85bcc882c09517cf714b32c0af80a4508998bc3", "message": "output used strategy"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danepowell": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/8695fd69486703e371d37120d8a1f8fb9c5ad29d", "message": "Clarified language on branch naming for forks"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "LC43": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/f569833f5a44a2392723d2f1340e8a6c6f63b217", "message": "move $length variable outsite foreach (#6828)\n\nthe `foreach` over the `prefixDirsPsr4[$search]` won't affect `$length`. \r\n\r\nIt's used for the offset of `$logicalPathPsr4`."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "curry684": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/eab705d0574c357cef819866f1bdc25e7b3b6683", "message": "Reword exception text to evoke somewhat less panic\n\nRefs https://github.com/composer/composer/issues/5196#issuecomment-346754244\r\n\r\nSignature mismatch could indicate MitM, or just a CDN issue which is rather more likely."}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4998", "title": "Removed inefficiency in the autoloader generation", "body": "This line was originally added for PHP 5.2 compatibility but that was dropped long ago, so no longer need to incur the handful of extra function calls on every autoloader init.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dunglas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/657068886f28d3c3832ea305b58f2d82365fa82a", "message": "Fix comments"}, {"url": "https://api.github.com/repos/composer/composer/commits/78a62f890126c5ab2337d68b34283a7c347ace57", "message": "Deploy PHAR to GitHub releases"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maartenba": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/128e424c90b9aad4ed7a86dd43b182aaddfd60d1", "message": "Avoid sending Authorization header to another domain on redirect, fixes #6716"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gregatcode": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/8a136d18e54c9dca834025569b4b2eaeda098c6d", "message": "Correctly extract username/password from URL"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "saulwilcox-jisc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/bb9738377268017aa4220d342f7a86b335692145", "message": "Add 'remove' to example global commands\n\nCommon and useful enough to be explicitly stated in docs"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zachflower": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/a59f7399bf2e30132169b9efde94d2b7a4a39aa4", "message": "Use environment variables to define default values instead"}, {"url": "https://api.github.com/repos/composer/composer/commits/8d6f8a6f421e45960d354136ee519fa4a0b368d6", "message": "Reverse new config-file changes"}, {"url": "https://api.github.com/repos/composer/composer/commits/9ed0a2d35f8d341dbcf5cee3e9859140b33373ce", "message": "Use default configs, where applicable, in init"}, {"url": "https://api.github.com/repos/composer/composer/commits/6ce11697ecc83ce67af91f50134c542b6c294d6c", "message": "Load default config in with other configs"}, {"url": "https://api.github.com/repos/composer/composer/commits/9c109dfea15eeca4bda5ecddb177d0ca060c317b", "message": "Add default config source to Config class"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RobberPhex": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/3ce71a55bfa9206031c77687ff37fad0345547e5", "message": "fix unittest"}, {"url": "https://api.github.com/repos/composer/composer/commits/e768e297cd233438a12697823347e45f19f9f52a", "message": "fetch tag,commit form local but not ref"}, {"url": "https://api.github.com/repos/composer/composer/commits/0ad985122df53b26b72df99ac7437b2721213188", "message": "Don't fetch when ref already on local"}], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6683", "title": "fix gitlab repo config in composer.lock", "body": "1. When `attemptCloneFallback` use `generatePublicUrl` to get public_url, we cannot forget some gitlab instance doesn't support https. **So we get `scheme` from config.**\r\n2. When generate `composer.lock` file, we should use repo url *what user wrote* at `composer.json` , not we got from gitlab api.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GawainLynch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/f74c6f462098e0149460d661ff50f3701e45694a", "message": "Update tests to handle optional QuestionHelper::setInputStream() availability"}, {"url": "https://api.github.com/repos/composer/composer/commits/f96e0e033b4098ce992d5c72eb0bb94ebc282f06", "message": "Use Terminal class for dimensions post Symfony 3.2"}, {"url": "https://api.github.com/repos/composer/composer/commits/157075b996a3858492a4871d07b309d8d7eccd21", "message": "Migrate ConsoleIO::select to use QuestionHelper and ChoiceQuestion"}, {"url": "https://api.github.com/repos/composer/composer/commits/8b42aed060a6e57e088bb70bc84d85f34a05e637", "message": "Create a local escapeArgument() for Symfony 4 compatibility."}, {"url": "https://api.github.com/repos/composer/composer/commits/3a491a9b340b8f5658e5f83a217a93ad156a0a1a", "message": "Add Syfmony 4.0 component constraints"}, {"url": "https://api.github.com/repos/composer/composer/commits/b859bbcdcf3bf4ef168235fc63b67f49c7a21356", "message": "Pass a VCS filtered iterator to mirror"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mihaiplasoianu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/02b57ff4a2bac62f9df9c71c641b850f390537e2", "message": "Return non-zero exit code with --strict and single package"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jvasseur": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/71c2ecbacefd91864b8b0f349b874e37dce00da9", "message": "Fix platform package detection in VersionParser"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "itscaro": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/007ca5ff6a4f837796c8e270f7b77a9183a0aed5", "message": "workaround for gitlab installation with relative url\n\nSigned-off-by: Minh-Quan TRAN <account@itscaro.me>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cafferata": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/b36622d3167567c882431c412c760dcdf6bd70eb", "message": "Update 03-cli.md\n\nPackage `fabpot/php-cs-fixer` is, so I replaced it with `friendsofphp/php-cs-fixer`."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DQNEO": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/20d6f879289ddc822ad418b722b3472f521aa99d", "message": "add PHP 7.2 in travis"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "renanbr": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/f1fb969a3ad0638d8be21d477c8fca6e4ac8e46f", "message": "add php version and binary to the dignose command"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2899227", "body": "When user does not specify a version, Composer selects older one.\nI think it's better to select the most recent package when multiple match is found.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2899227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "croensch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/bd6168ef85dd74b58142ad56e08e3ad2eb97208f", "message": "fix pull 6740\n\nwrongly copied the check, either must be in not-empty"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arjank": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/a03efa2fda39b4c924993631a8f139dd856fcb73", "message": "Composer init - abandoned package warning\n\nAdded warning for abandoned packages in case more than one package is found for require / require-dev in composer init."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "legoktm": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/2a384176531b3eb2362b90648ec069e2b111cfdf", "message": "Sort vendor/composer/installed.json deterministically\n\nJust like composer.lock, sort installed.json in order of the package\nnames. This makes it easier to review diffs when this file is changed."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PetrHeinz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/7d06c3b9b848e191536835078de00b94d955d291", "message": "typo \"semvar\" => \"semver\""}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zdanek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/dc693c3a6e2ca190c9354043f51a22713cbaca0d", "message": "fixed caret sub title link in the article\n\nFixed link to Caret version range paragraph"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thom8": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/bf880ad5e0d81154694c636a48a29ea3571afb93", "message": "Allow custom script descriptions."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lulco": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/c409f9635344815c2739cfddbd0ed139b8406b61", "message": "Removed unused uses"}, {"url": "https://api.github.com/repos/composer/composer/commits/1efe02f2e1e93cc6b998e03143815bbe393169aa", "message": "Search similar package when package could not be found"}, {"url": "https://api.github.com/repos/composer/composer/commits/84fed794d723b5e3311720ada651ef3376bca6c1", "message": "Trying to find package with similar name when package could not be found"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kalessil": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/c8615358cb83d695473d350dcf7f82ef35e287e9", "message": "SCA with PHP Inspections (EA Extended)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Deamon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/3d753b117bdfdd67cd91be2b08d573390f26b05d", "message": "add test on remove mainkey at end of file"}, {"url": "https://api.github.com/repos/composer/composer/commits/5b29b7c8e3dfa5fccc535637fdfdaf688255209b", "message": "delete last coma if deleting last element before end of file"}, {"url": "https://api.github.com/repos/composer/composer/commits/bff904d11c35a1665be902a7288f1becad2fe882", "message": "add example on how to add several version of a package"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Ayesh": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/eb078b432fe8d77d2c8f169dd02c5d9923343e2b", "message": "Prevent automatic parent directory composer.json discovery if working-dir parameter is set"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mikk150": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/2a89d37651a3016c20089165a3f1b56351d3896c", "message": "fix gitlab not telling visibilty if user is not logged in"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "valga": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/37addea4471fb35411f49e437a211d78e2b9776e", "message": "Make composer see installed dev packages"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fkryvyts": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/dc509b236fad2604d12b251c69884a9f3b3f4173", "message": "Fixed error, when composer.phar was broken, if it compiled inside folder, that has /composer in path"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andrewryantech": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/a6d0ecd13f4974bd4c1c5cb48a243347d1022986", "message": "Update why-can't-composer-load-repositories-recursively.md"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "codekandis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/composer/composer/commits/f178c340e904cd905057bece2bce1bd0f05429ce", "message": "Fixed tests."}, {"url": "https://api.github.com/repos/composer/composer/commits/39d8104897ae7966a41c99b60c6b3e45cb92f050", "message": "Introduces a new method `copy()`.\n\nSome packages, e. g. `tm/tooly-composer-script`, are using the composer classes to e. g. create symlinks or perform other file operations. While there's only a `copyThenRemove()` method this commit introduces a new `copy()` method. `copy()` behaves the same as the copy part of `copyThenRemove()` did with one exception: it returns `true` on success and `false` on failure. Copying a directory may lead to a `false`, while the whole directory or some of its files couldn't been copied. To ensure backwards compatibility `copyThenRemove()` calls `copy()` now. This commit also adds the necessary tests."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zymsys": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7011", "title": "Show reason for php version package mismatch due to config.platform", "body": "A couple of times I've run into a frustrating situation where a config.platform generated by the Symfony installer has specified a php 5 version and I've changed my require to php 7 without realizing the config.platform issue. That leaves me hunting for a version of php that isn't installed anywhere on my system. Using verbose or even very very verbose doesn't seem to help. \r\n\r\nI used xdebug to track it down and saw that the package knew what the problem really was in its description but it wasn't revealing this to the user. This patch exposes that information. The nested parens aren't pretty, but I think developers will be able to parse it.\r\n\r\nThe patch starts by determining the version in the same way it used to. Then it double checks that we have a package, and that it is a CompletePackage so that it has a description. If so it appends the description to the version information.\r\n\r\nI double checked it with phpcs and it complained about line lengths, but it also did this for much of the rest of the file.\r\n\r\nThe output looks like this:\r\n\r\n```\r\nLoading composer repositories with package information\r\nUpdating dependencies (including require-dev)\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - This package requires php >=7.0.0 but your PHP version (5.6.0; Package overridden via config.platform (actual: 7.0.22)) does not satisfy that requirement.\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tanarurkerem": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/7006", "title": "Update how-do-i-install-a-package-to-a-custom-path-for-my-framework.md", "body": "Title changed", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wsandin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6956", "title": "Fix for issue 6602 - warning when running composer as another user", "body": "Raising a warning if the current user doesn't match the initial ownership of the $home directory. \r\nNot sure how this works on let's say Windows, might have to add some extra checks for that.\r\n\r\nWould love some feedback on how I can improve this PR in order to merge into master.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mbaynton": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6864", "title": "Proposed event on SolverProblemsException with power to trigger re-run.", "body": "So this is definitely not ready to actually merge yet, but @naderman suggested discussing PRs early, so here goes. Oh, in case there would otherwise be confusion, this is unrelated to my work on `replace`.\r\n\r\nThe problem this helps solve is enabling Drupal installations/updates for nontechie users without exceeding the resource limitations of a webserver environment; it's a huge pain point for Drupal right now that it isn't possible to do Composer-enabled installs/updates in a browser. The way it helps solve it is by allowing a plugin to initially restrict the `Pool` to a repository containing only one version of each required package, all of which are pre-selected to be compatible with each other; this should make the sat problem and number of modeled packages/decisions trivial/very fast in execution time/low in memory. For sites that only need things available from this special repository, a complete Composer run ought to work fine within the confines of a webserver environment. When the site does also have requirements from the wider world, the first solver run will fail, but it will fail fast. This PR would allow a plugin to then introduce packagist etc to the Pool and rerun the Solver. (I believe @thom8 has talked with some Composer maintainers about the possibility of running the solver on a remote \"solver as a service\" host; I've got a vague idea of also swapping out the standard solver for the remote one long-term when a full-scale dependency resolution is required.)\r\n\r\nSomething like this have a chance of going in?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "am05mhz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6751", "title": "adds 2 steps install script for windows users", "body": "just add a little convenience for windows users ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hboomsma": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6714", "title": "add gitlab-dist-format option", "body": "Add `gitlab-dist-format` configuration option for the `GitLabDriver`. It defaults to `zip` as is the current default. You can set it to `zip`, `tar.gz`, `tar` and `tar.bz2`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kthbit": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6707", "title": "Teach fossil to use HTTP Basic and Fossil built-in authentication", "body": "Composer was unable to clone/pull from a Fossil repo that was protected by either HTTP Basic or Fossil  authentication. This patch attempts to fix that. Both (or either) authentications are stored in auth.json. HTTP Basic auth is specified as before, per domain. Fossil credentials are specified per remote repository, in case pulling from multiple remote repositories with different credentials for each.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "webflo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/6139", "title": "Test case for #6131", "body": "I think this is valid test case for #6131. Not 100% sure.\r\n\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stratdes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5360", "title": "ISSUE 3568 Show downloading package speed", "body": "- Added new class Download to represent the download progress\n- Added the util class DownloadUnitsFormatter to format Download class speed and ETA values\n- Some refactor on RemoteFileSystem\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hirak": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/5293", "title": "Parallel downloader", "body": "## Parallel Prefetcher\n\nporting from https://github.com/hirak/prestissimo\n- Fetching packages in parallel at `Composer\\Installer::doInstall()`\n- This is NOT replacement of `Composer\\Util\\RemoteFilesystem`.\n  - `repository.json` download in serial\n- If `!extension_loaded('curl')`, then fallback to RemoteFilesystem\n- If it fails to download, then fallback to RemoteFilesystem. (do not retry / do not show any prompt)\n### See also\n\nhttps://github.com/composer/composer/pull/2696\nhttps://github.com/composer/composer/issues/3930#issuecomment-193750145\n### Question\n\n`github-token`, `gitlab-token` options are still alive?\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L235\nhttps://github.com/composer/composer/blob/36665d791d8ec6520e31880dfe462bd2bf799132/src/Composer/Util/RemoteFilesystem.php#L240\n\nI can't find any documentation about that options. In this P-R, I didn't implement it yet.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aripringle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4210", "title": "add support for config inheritance", "body": "Refs #183. This is a refactoring of #1013, with attempts to address the comments in that thread.\n\nAll credit goes to @1stvamp for the original code.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fcastilloes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/4036", "title": "Add support to interactive scripts defined in composer.json", "body": "This change should allow for interactive scripts defined in composer.json as requested in issue #3299 without breaking non-interactive scripts.\n\nAs far as I know, the Process component accepts both a stream or a string as input argument. I see no reason to pass a string, but the stdin is useful. Any reasons not to do it or something I didn't consider?\n\nI've run the test suite and introduces no errors.\n\nThanks.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pierrejoye": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/3897", "title": "draft support for Pickle in Composer", "body": "Draft support for Pickle (https://github.com/FriendsOfPHP/pickle) in Composer.\n\nSpent more time to dig composer code than actually implement that but at least it works to install exts from within a project.\n\nExample project and extension composer.json:\nhttps://gist.github.com/pierrejoye/1bbc2bdcec5887e60490\n\nIf you like to test with more extensions:\ngit  clone myext\ncd myext\npickle convert\n\nAdd the dep to your project. If you do not want to fork an ext, you can create a dep vs a zip file and use the artifact repository, it should work.\n\nStill many things to solve but at least there is something to play with now\n\nUpdate:\n\nAccording to our discussions, it is now a two steps process to install extensions, to make sure users understand that installing extensions may affect many projects:\n\nFirst, the usual command:\ncomposer install\n\ncomposer will tell you to run\ncomposer install --install-extensions\n\nif the project has extensions dependencies\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "peteraba": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2696", "title": "Curl transfer", "body": "Added curl fallback for data transfer. Moved hard coded stream context calls into separate transfer class. Created interface for transfer classes. Added tests.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hason": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/2424", "title": "Added API for an install path in installable repository", "body": "Fixes #2174\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1226680", "body": "Please add a line for BC\n\n```\n$this->process->execute(sprintf('cd %s && git remote add composer %s', escapeshellarg($path), escapeshellarg($initial->getSourceUrl())), $output);\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1226680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1226778", "body": "Thank you very much!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1226778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "flavioheleno": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/composer/composer/pulls/1628", "title": "Added cURL support as a Driver", "body": "The work is pretty rough, but is working.\nIt still lack of options to choose between file_get_contents driver (aka. stream driver) or curl (aka. curl driver).\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stloyd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/1465220", "body": "Yeah @stof is right, it's an issue with editing files though GitHub pages.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1465220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2609501", "body": "@Seldaek Maybe adding check to `stub` ?\n\n> Composer\\Compiler::getStub()\n\n``` php\n<?php\n\nif (ini_get('detect_unicode')) {\n    throw new \\RuntimeException('Check your config, bro! ;-)');\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2609501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2614273", "body": "As @Seldaek request, I'm informing that some work on this feature will be probably send this weekend.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2614273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628611", "body": "@Seldaek This was changed ~~today~~ yesterday (Naderman merged your PR). So @prehfeldt you need to call:\n\n```\n~ wget http://getcomposer.org/composer.phar\n~ php composer.phar install\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628769", "body": "@Seldaek Seems that `composer.json` was not updated ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2652380", "body": ":+1: or even more ;-) I'm not always online to check documentation at packagist... ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2652380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2658296", "body": "@Seldaek It seems we can't (as @saltybeagle mentioned) do this in userland. As I see you changed a bit error when `composer.json` is found, this should help to @mikeyp and @evan108108 (and other Mac'ers (tm)).\n\nAbout issue with `phar`... I was think about making command (in `bin/`) that could run a check on `php.ini` and return some common pitfall warnings. But as mention, user **must** run it alone, we cannot do it in phar (or in `stub` as I suggested, this would fail on some OS [ubuntu works good, even when some pitfalls are detected as possible]).\n\nIt could look like:\n\n> `bin/check_pitfalls`\n\n``` php\n#!/usr/bin/env php\n<?php\n\n$errors = array();\nif (false !== $unicode = ini_get('detect_unicode')) {\n    $errors['unicode'] = 'On';\n}\n\nif (false !== $readonly = ini_get('phar.readonly')) {\n    $errors['readonly'] = 'On';\n}\n\nif (false !== $hash = ini_get('phar.require_hash')) {\n    $errors['require_hash'] = 'On';\n}\n\nif (false !== $suhosin = ini_get('suhosin.executor.include.whitelist')) {\n    if (false === strpos($suhosin, ',') && $suhosin != 'phar') {\n        $errors['suhosin'] = $suhosin;\n    } else if (false === in_array('phar', explode(',', $suhosin))) {\n        $errors['suhosin'] = $suhosin;\n    }\n}\n\nif (false === empty($errors)) {\n    echo 'Composer detected that you have enabled some settings in your';\n    echo '`php.ini` file that can make Composer unable to work properly.';\n    echo \"\\n\\n\";\n\n    echo 'Make sure that you have changed options listed below:';\n    echo \"\\n\";\n    foreach ($errors as $error => $actual) {\n        switch ($error) {\n            case 'unicode':\n                echo \"\\rdetect_unicode = Off (actual: {$actual})\\n\";\n                break;\n\n            case 'readonly':\n                echo \"\\rphar.readonly = Off (actual: {$actual})\\n\";\n                break;\n\n            case 'require_hash':\n                echo \"\\rphar.require_hash = Off (actual: {$actual})\\n\";\n                break;\n\n            case 'suhosin':\n                echo \"\\rsuhosin.executor.include.whitelist = phar (actual: {$actual})\\n\";\n                break;\n        }\n    }\n\n    exit(1);\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2658296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2658572", "body": "@saltybeagle I was thinking exacly about something like `go-pear` (maybe not exacly in `.bat` etc., just in php ;-) But this would lead to downloading, lets say, `install_composer.php` ;-) or something similar. Which would test userland for `phar`, `php.ini`, common pitfalls and maybe few others things :-)\n\n@Seldaek, @naderman What do you think about such file ? I could make some work on php version if you would like this idea.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2658572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2659202", "body": "@igorw When any of third-party components will be in, then every test based on it should have check in `TestSuite::setUp()` (or only in test function) for class from this component, i.e. like tests for bridges in Symfony2.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2659202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2664629", "body": "I understood what you mean, but every deps in test could be checked, so it's not really problem (look at Symfony2 tests ;-). @Seldaek, @naderman What do you think about this ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2664629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2694561", "body": "IMO looks nice, but you should split Bitbucket from Hg and use it same way as GitHub is.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2694561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2694712", "body": "@Seldaek I'm not telling that this is necessary ;-) But we should re-use already added conventions. The main reason why I wanna to split is that Bitbucket gives similar API as GitHub ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2694712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2743321", "body": "@webfactory What is status of this ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2743321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745076", "body": "@webfactory Thx for info.\n@Seldaek Big thanks ;-) Once #33 and this one are merged I can continue work on selecting downloader automaticly by testing that it is supported by actual userland (not everyone have zip extension ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745237", "body": "@Seldaek I saw that you merged those two. Thanks again ;-)\n\nAbout relying on phar, we cannot here, it's same problem as with zip ext. Phar/PharData [rely](http://www.php.net/manual/en/phar.requirements.php) on zip extension for compressed phars/data. So decompression still will fail.\n\nHint:\n\n> `bool PharData::extractTo ( string $pathto [, string|array $files [, bool $overwrite = false ]] )`\n> (...)\n> This method is similar to `ZipArchive::extractTo()`.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/746270", "body": "Why not just `<2.2-dev` ? ;-) (and I know that would cap also symfony1, but it not exists on packagist)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/746270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1052664", "body": "@Seldaek You need to update `GitDownloaderTest` to follow up with new behavior.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1052664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1168567", "body": "You mean: 2012-04-03 =)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1168567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1192306", "body": "With latest version I'm getting something like:\n\n```\n Updating twig/twig(1) to twig/twig (1.7-dev)\n\n (...)\n\n Updating symfony/symfony (1) to symfony/symfony (2.1-dev)\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1192306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1214317", "body": "`JSON_ERROR_NONE !== json_last_error()`, IMO a bit more _clean_.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1214317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1538363", "body": "@Seldaek Maybe instead of using such \"hacks\" we could introduce error codes to this exception? If you like this idea, I can give a try =)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1538363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1538408", "body": "Ok. I will try to find something that can cover your needs, and is more clear than such \"quick fixes\" =)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1538408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1953804", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1953804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1986324", "body": "@Seldaek This should go also to `HgDriver`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1986324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3150714", "body": "This was already changed in 976fe48a72c2ef6cfeda0e8991a232f210e49a9a.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3150714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139566", "body": "Then `@todo` should be added to inform us (readers for what it is ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213605", "body": "Dunno ;-) it's kind of copy&paste from old Composer code :-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213779", "body": "@stof What vendors ? I'm trying to get  tests running when downloading Composer as source (git clone), and without this change it's impossible. But line mentioned by @igorw (and that one above) can be deleted, and I will do this in next commit.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213825", "body": "@stof I think you misunderstood me. I **tested** this code and with plain **git clone**, it's only way to get tests running.\n\n> `phpunit` with this PR\n\n```\nPHPUnit 3.6.2 by Sebastian Bergmann.\n\nConfiguration read from /composer/phpunit.xml.dist\n\n..............................I................................  63 / 175 ( 36%)\n............................................................... 126 / 175 ( 72%)\n.................................................\n\nTime: 1 second, Memory: 13.25Mb\n\nOK, but incomplete or skipped tests!\nTests: 175, Assertions: 277, Incomplete: 1.\n```\n\n> `phpunit` without it\n\n```\nPHP Warning:  require(/composer/tests/../vendor/.composer/autoload.php): failed to open stream: No such file or directory in /composer/tests/bootstrap.php on line 14\nPHP Fatal error:  require(): Failed opening required '/composer/tests/../vendor/.composer/autoload.php' (include_path='.:/usr/local/php:/usr/local/lib/php') in /composer/tests/bootstrap.php on line 14\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213879", "body": "@stof Please... ;-) Where in this PR I mentioned (I just drink a beer but it cannot work that fast that I can't find it ;-) that I wanna to **use** Composer as a _plain git clone_ ? IMO our whole discussion is pointless, as I **don't** wanna to use Composer as a plain `git clone`, I wanna **test it** as _plain git clone_!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/213879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220938", "body": "You should fix CS here and below. Also `$key` is never used.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220939", "body": "`$key` is never used.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/220939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/320490", "body": "What if [`allow-url-fopen`](http://www.php.net/manual/en/filesystem.configuration.php#ini) is off ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/320490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329242", "body": "Seems like typo here ;-) Didn't you mean: `$package->getRecommends()` ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Tyrael": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/1543569", "body": "how would the average user install composer?\nif we drop the idea of supporting the installation through pear, then something similar like the go-pear.phar comes to mind (https://github.com/composer/composer/issues/6 ?).\nimo we should make the installation as easy as we can.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543581", "body": "so you just download the phar file then. I see.\nbtw. you mention this the second time: you do know that pear can be installed both system wide and locally, and you can have multiple installation for which you can pass the config file path to the -c argument.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "xaav": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/1543648", "body": "I was hoping to use composer as a plugin manager for one of my web applications.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543971", "body": "It doesn't. But neither does downloading composer from pear.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1543971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1567307", "body": "I'm on it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1567307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1572514", "body": "> Silex for instance **is distributed through** a phar archive. \n\nRead your sentences carefully. The information that you require has already been stated.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1572514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1702015", "body": "It is a shame that no one will comment on this.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1702015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1702546", "body": "@stof so we are using submodules here and not the vendors script? @naderman @seldaek Do you agree with this? Is there anything else that needs to be fixed?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1702546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1703350", "body": "Okay, I'll make these changes as soon as I get the time.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1703350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1715516", "body": "Okay, I've added submodules now.\n\n> Also @xaav please use git rebase -i to squash/cleanup commits a bit, when pull requests have 30 commits doing and undoing random things it's a bit hard to review.\n\nI tried to do that, but it ended up adding more duplicate commits (as you can see above).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1715516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720328", "body": "> Or.. git rebase -i upstream/master, edit all lines to start with s/squash except the first, done\n\nYeah, tried that and it created the duplicate commits. I'm going to try the other method.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1720328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/1722158", "body": "I followed Igorw's instructions, but it ended up adding the \"Adding phar support\" commit, and losing changes in the \"Adding submodules\" commit. I then had to make a commit to avoid losing further information in the repository. \n\nCan't you just perform a \"git merge --squash\" instead?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/1722158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/511956", "body": "I'm using mysysgit, and don't have any problems.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/511956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575", "body": "Sorry; another side affect when squashing commits.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/81575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "weaverryan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2094420", "body": "Thanks @stof, I've made all of the changes.\n\nOn the verbose stuff, I agree, but I'll save it for later - it's probably ok that we're a little \"noisy\" for now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2094420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563", "body": "I agree also - was a bit of copy-and-paste, but I've simplified it now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/126563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chEbba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2109427", "body": "Remove public keyword\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2109427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2223747", "body": "Will rewrite base on last big changes.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2223747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2252783", "body": "@damianb will look at it closer later\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2252783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2252839", "body": "Also, i dont see a way to provide a public key to downloader in current version. Any ideas?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2252839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2497729", "body": "Found a related issue #54\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2497729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2497741", "body": "Added a prototype of cached downloads #62\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2497741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2711656", "body": "Any news here? I think PR is still actual.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2711656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2711692", "body": "Any comments for prototype? Need some discussion to finish with this necessary feature\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2711692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2714172", "body": "Thnx @stof\nYes, there are a lot of CS problems, but the main idea is to discuss architecture things.\n\nFor me it will be cleaner to use only WritableRepositoryInterface without separate PackageStorageInterface (may be encapsulate it inside some implementation of repository). But there are some problems: WritableRepository does not allow to pass a downloaded location; repository is used on the installer level while cache implementation on the downloader level is more logical.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2714172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2744951", "body": "tnx, will made a refactoring of exceptions for downloaders\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2744951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745031", "body": "\u041e\u043a. Also i have some ideas about #64 will describe them there.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549", "body": "Why does downloader need to have update and remove methods? It's really strange for Downloader, as we have update and uninstall methods in Intaller.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139560", "body": "@stof Yes, i found this use case with git, but we can auto-detect this situation (if we already have a local repo in the target path), same as with a local directory copy when we can just sync instead of replace all content.\n\nAnd what about remove? I can't found any use case for this.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139585", "body": "I didn't offer to move this logic to Installer, as downloader can detect when it needs to download or update. I worry about a complexity level of \"Downloader\".\n\nMoreover the current method signature is applicable only for CVS downloaders, because there is no url for the new version of package. Also the new version of package can be stored in different location.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139600", "body": "Oh yes, but than the dowload method has 2 urls: one from PackageInterface and another from argument. What is the difference?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/149727", "body": "Added a @throws for FileDownloader::extract().\nThis note was to remember about Phar constructor exception, because i think Downloader exceptions needs some refactoring. Will try to add some types of exceptions in a separate pull request\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/149727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/224930", "body": "Ooops, fixed. Wrote in a blind mode :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/224930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "wilmoore": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2219785", "body": "All updated.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2219785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/143838", "body": "Fair enough...dropping my name from the header -- not adding @author since it isn't there in any of the other test classes.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/143838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144331", "body": "fair enough.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144332", "body": "removed...thanks for feedback.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144362", "body": "No worries. That was quickly correctable.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/144362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "everzet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2232825", "body": "That's exactly my plan :-) `$preferSource` should become `--source` option.\n\nAs of `vendor/`, i'm planning to place this type of config into `composer.json` file itself like this:\n\n``` json\n{\n    \"installers\": {\n        \"library\": \"vendor\",\n        \"symfony-bundle\": \"vendor/bundles\",\n    }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2232825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2236300", "body": "The problem is that we use `.composer` to store installed packages registry ACROSS all installers. It means, that we might have one installer, which will install something into `vendor/` and another installer, that might install something into `another_vendor/`. Moving installed packages registry into any of these folder is just wrong ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2236300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240721", "body": "I think the current behavior is correct. If user asks something stable, then we shouldn't provide him something unstable instead. It's user job to investigate what package version he needs and supports. It's how any other software out there works and nobody's confused, IMO\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240819", "body": "@Seldaek i don't think that this is the solver job actually. It's we, who should check if all requested packages were been solved with solver. It's like \"Hey, buddy solver, find me stable package! What? No package found? ALARM!\"\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240846", "body": "Fully agree.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240899", "body": "But if solver just could be able to tell us somehow about packages that he failed to find. It would be awesome, @naderman\nBecause there still might be complex cases, when package wasn't been found not because he hasn't proper version, but becase the package on which he depends doesn't have required stability (wrongly configured package?). So, i was wrong actually. It seems like a solver job to tell whether it found something or not :-/\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2240899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2245060", "body": "@Seldaek I think we should close this issue, as @igorw opened more clean https://github.com/composer/composer/issues/30 one\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2245060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2256887", "body": "https://github.com/composer/composer/pull/40\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2256887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2353901", "body": "@igorw so what you've decided with PEAR/PSR-0 autoloading differences?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2353901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2374185", "body": "ok. Seems fair enough :-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2374185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423217", "body": "We already support `PSR-0` and `PEAR` autoloaders. What we need in order to support Ralphs method is just `MAP` autoloader configuration:\n\n``` json\n{\n  \"autoload\": {\n    \"PSR-0\": {\"Symfony\": \"vendor/symfony/src\"},\n    \"PEAR\":  {\"Twig_\": \"vendor/twig/lib\"},\n    \"MAP\":   [\"path/to/.map_file1.php\", \"path/to/.map_file2.php\"]\n  }\n}\n```\n\nAnd that's it. Right? And we can always optimize all this map files, PSR-0, PEAR autoloading routines into one big autoloading mapfile for the production.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423287", "body": "> @igorw: I guess we could always have the sf2 ClassLoader as a dependency, added by composer. Thoughts?\n\nI think we should not. In my opinion, we should dump our autoloading function/class and all the other needed autoloading code into `.composer/autoload.php` file itself. It would be a better, more clean and faster way, in my opinion. Making sf2 ClassLoader a required dependency for every composer-enabled project out there is just a bad call, IMO :-/\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2457917", "body": "@igorw bro, what's the status of this? Help needed?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2457917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538", "body": "To be cleaner/shorter :-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540", "body": "It's for lock. It's not implemented yet ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541", "body": "Yeah, it would. I've just tried to finish this big refactoring as fast as possible. We'll clean Composer with later PRs ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139541/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544", "body": "Yeah, `UnexpectedValueException` is Seldaek legacy. I kinda don't like it, because `InvalidArgumentException` provides more contextual info :-) We'll clean those things in later PRs\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545", "body": "Agree.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139558", "body": "@stof exactly ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139620", "body": "@chEbba: https://github.com/composer/composer/pull/22\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139628", "body": "@chEbba, @stof the point is - we can't surely say what we need in `DownloaderInterface` now, cuz actual Downloaders are not implemented/tested yet. We'll think about interface later on, when we'll be more sure bout it's requirements ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/139628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/148272", "body": "Use `@throws` in method docBlock for such stuff\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/148272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/148273", "body": "Same here\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/148273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/163305", "body": "yep, it makes code less clean.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/163305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172799", "body": "This should be either `protected` or `private` as it's not part of the public API.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/172799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329259", "body": "Yup. Filesystem doesn't operates on processes - it operates on files.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329316", "body": "@digitalkaoz If there's no specific worker to do a job in da house, then it's obvious that you need to hire a new one.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nikic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2238964", "body": "I just found that you have a website at http://packagist.org/, which has some info at what this project is about (http://packagist.org/about, http://packagist.org/about-composer). Adding a link to that page in the readme should be enough :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2238964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "damianb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2250768", "body": "I'm of the opinion that a phar downloader should also handle openssl signed phars natively if it's signed and openssl is available.\n\nAlso, it might be worth considering checking if the phar is properly signed similar to how [koto/phar-util](https://github.com/koto/phar-util) already does it (it takes a hackish solution, a temporary override of the error handler to detect a faulty openssl signature).\n\nedit: worth a read: http://blog.kotowicz.net/2010/08/hardening-php-how-to-securely-include.html\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2250768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253122", "body": "Public keys would have to be obtained through a separate methodology, possibly; they might be distributed via a central mechanism, they might be made available in the composer.json file (in the future, perhaps), or a number of other ways.\n\nThis probably needs to be looked at separately then.  I'll open up an issue about supporting public keys in composer.json I think.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253331", "body": "Yep.  It's one for the back burner, but if accounted for earlier now with changes in design it should be much easier to work in than later on.\n\nThe biggest problem I see, however, is that of relating keys to packages seamlessly.  \n\nAnyways, semi-relevant: I'm playing with an idea right now for a specific security model of package/addon loading [[link]](https://gist.github.com/1242961), but I don't expect it to be completely applicable due to its ultra-paranoid design.  It'd end up being quite similar to how browser vendors have CA signing set up, but with a bit less trust involved in third parties; either you're whitelisted for by the vendor, you are whitelisted _specifically_ by the user, or GTFO.\nAnd while I think it should be _possible_ to lock down source packages using composer this far, I would be against it being default behavior.  I imagine it being frustrating as hell!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2253331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2416111", "body": "Disagree, big -1 here.  Behavior should mirror larger repository systems: install what you want, it makes recommendations, tells you their package names, but doesn't install them - only requirements are installed.  Recommendations are things that should be reviewed by the end-user, not installed blindly.  Making a break like this is counter-intuitive. \n\nIf anything, this should be reversed.  Install recommended packages with a flag, otherwise just inform the end user about them.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2416111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2416299", "body": "Then you're butchering the language - recommended and suggested are equivalent in the english language.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2416299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/512003", "body": "Echoing @xaav.  I've been using msysgit for a while, and haven't had problems with https github URLs.\n\nThough, I will say that when behind my college's extensive firewall setup, I have to use the git:// URLs (instead of the https URLs) in order to push/pull.  But, that's another story.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/512003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/150611", "body": "and if the `$json` variable is equates to false after parsing with `json_decode`?  It's still valid JSON then, it's just an empty file (which will result in `!$hash` flagging it for a call to `json_last_error()`.\n\nIt's still technically valid JSON, so it should not be treated as invalid - why not return an empty array instead?  It'd be a proper response in that circumstance.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/150611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "bergie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2360011", "body": "Note: it worked with this composer.json:\n\n```\n{\n    \"require\": {\n        \"monolog/monolog\": \">=1.0.0\"\n    }\n}\n```\n\nIf you remove composer.lock and the vendor dir, and change the dependency to straight version (`1.0.0`), then you get the error show above again.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360267", "body": "Maybe you have newer composer than the phar provided from the link in README?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360603", "body": "Confirming, works now.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2360603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571380", "body": "With latest composer.phar I get new and exciting errors, like:\n- Package php could not be resolved to an installable package.\n- Unknown installer type: Library\n\n(with [this composer.json](https://github.com/bergie/dnode-php/blob/master/composer.json))\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571747", "body": "Works now here as well. Pushed dnode-php to Packagist. Thanks for fixing this!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2571747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lsmith77": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2422510", "body": "so whats the goal of this .. to get people off the ground quickly?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422976", "body": "hmm this gets tricky quickly if you want to provide a solution for more than just initial playing around.\nFYI the zend guys are defining a naming convention for shipping autoloaders and class maps with their components.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2422976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423048", "body": "http://ralphschindler.com/2011/09/19/autoloading-revisited\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2423048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2625401", "body": "it probably should use one component of as many libraries as possible to be politically correct :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2625401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kelvinj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2547719", "body": "Thanks Jordi.\n\nSo, if I add multiple pear repositories and then add a package to require, it will search all of the pear repositories for that package. Is that correct?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2547719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2548707", "body": "Excellent\u2026 thanks so much.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2548707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2549199", "body": "Thanks. BTW trying to build the phar from source and I get an error:\n\n```\nCall to undefined method Composer\\Package\\BasePackage::parseVersion() in phar:///Users/Shared/Sites/test/composer.phar/src/Composer/Repository/PearRepository.php on line 2\n```\n\nIf this is just me being ignorant, then my apologies and please feel free to ignore this. :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2549199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fabpot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2569073", "body": "Thanks for the info.\n\nBut why things are installed relative to the main install dir when using `target-dir`? It's not consistent and I really like the fact that an installed library is always installed under its name. That way, no conflict is ever possible.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2569073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2952923", "body": "I don't understand why an exception is thrown here. It's not an error per se. When using composer in automated tools (like a continuous integration server), it would be quite tedious to check if the `require-dev` section is not empty to conditionally add the `--dev` option when installing the dependencies. What about just doing nothing here instead?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2952923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "domnikl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2595139", "body": "+1 on that, had a comma to many in my composer.js, ran `php composer.phar install` and got a pretty ugly stack trace, would be nice if there was only an error message saying what was wrong in my composer.js instead \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2595139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2595421", "body": "No, that won't work for github URLs. Seems like they redirect everything to https, e.g.\n`file_get_contents('http://github.com/composer/composer');` does not work without the SSL extension enabled\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2595421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2621820", "body": "Yes very good and much more user friendly :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2621820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gimler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2600710", "body": "i use a simple composer setup\n\n``` yaml\n{\n    \"name\": \"gimler/MySQLndUhTool\",\n    \"type\": \"library\",\n    \"description\": \"Transparency log, debug mysql connections in all php processes\",\n    \"keywords\": [\"log\",\"logging\",\"mysql\",\"debug\",\"database\"],\n    \"homepage\": \"http://github.com/gimler/MySQLndUhTool\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"Gordon Franke\",\n            \"email\": \"info@nevalon.de\",\n            \"homepage\": \"http://nevalon.be\"\n        }\n    ],\n    \"require\": {\n        \"php\": \">=5.3.0\",\n        \"symfony/event-dispatcher\": \"2.0.*\",\n        \"symfony/finder\": \"2.0.*\"\n    },\n    \"autoload\": {\n        \"psr-0\": { \"MySQLndUhTool\": \"src/\" }\n    }\n}\n```\n\nthe first time i run the install command all works fine. when i run the install command a second time it download the symfony/symfony package ;(\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2600710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "evan108108": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2603953", "body": "I too am not able to install composer. Here is what Im doing/seeing:\n\n$ php composer.phar install\n\nPHP Fatal error:  Uncaught exception 'RuntimeException' with message 'The composer.json file could not be found in the current directory' in phar:///Users/xxx/composer.phar/bin/composer:37\nStack trace:\n#0 /Users/xxx/composer.phar(15): require()\n#1 {main}\n  thrown in phar:///Users/xxx/composer.phar/bin/composer on line 37\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2603953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mikeyp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2607119", "body": "I'm not running Suhosin. I got the same result with E_ALL and no error message was provided. \n\nMy configure looks like this: \n```Configure Command =>  './configure'  '--prefix=/usr/local/Cellar/php/5.3.6' '--disable-debug' '--disable-dependency-tracking' '--with-config-file-path=/usr/local/Cellar/php/5.3.6/etc' '--with-iconv-dir=/usr' '--enable-exif' '--enable-soap' '--enable-sqlite-utf8' '--enable-wddx' '--enable-ftp' '--enable-sockets' '--enable-zip' '--enable-pcntl' '--enable-shmop' '--enable-sysvsem' '--enable-sysvshm' '--enable-sysvmsg' '--enable-memory-limit' '--enable-mbstring' '--enable-mbregex' '--enable-bcmath' '--enable-calendar' '--enable-memcache' '--enable-zend-multibyte' '--with-openssl=/usr' '--with-zlib=/usr' '--with-bz2=/usr' '--with-ldap' '--with-ldap-sasl=/usr' '--with-xmlrpc' '--with-iodbc' '--with-kerberos=/usr' '--with-libxml-dir=/usr/local/Cellar/libxml2/2.7.8' '--with-xsl=/usr' '--with-curl=/usr' '--with-gd' '--with-snmp=/usr' '--enable-gd-native-ttf' '--with-mcrypt=/usr/local/Cellar/mcrypt/2.5.8' '--with-jpeg-dir=/usr/local/Cellar/jpeg/8c' '--with-png-dir=/usr/X11' '--with-freetype-dir=/usr/X11' '--with-gettext=/usr/local/Cellar/gettext/0.18.1.1' '--with-tidy' '--mandir=/usr/local/Cellar/php/5.3.6/share/man' '--enable-fpm' '--with-mysql-sock=/tmp/mysql.sock' '--with-mysqli=mysqlnd' '--with-mysql=mysqlnd' '--with-pdo-mysql=mysqlnd'\n\n```\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2607119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2607154", "body": "Just for kicks, I tried to install with the default OS X PHP and received the same error as @evan108108 above.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2607154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "saltybeagle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2607868", "body": "@mikeyp I think your first issue was caused by the `detect_unicode` PHP ini setting. You could try:\n\n```\nphp -d detect_unicode=0 composer.phar install\n```\n\n@igorw linked a doc with details on how to permanently fix any CLI phar issues.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2607868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2610211", "body": "@Seldaek The error happens so early, I don't think it's something we can detect in userland code at runtime.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2610211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2658390", "body": "@stloyd That's an interesting proposal. I wonder if it would be worthwhile to cook up a simple install shell script (sort of like go-pear), which runs those simple checks, grabs the latest phar and sets up a bin/composer executable for the end-user.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2658390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "till": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2621182", "body": "I want this. ;-)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2621182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2624767", "body": "Maybe composer should adopt a library wrapping the command-line, so you guys don't have to re-invent the wheel.\n\nI think this could be a concern for a later pull request though.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2624767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1129067", "body": "I don't get this change. Why do you remove `file://`?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1129067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1129073", "body": "I actually prefer two lines since that makes easier debugging.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1129073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1129077", "body": "https://github.com/composer/composer/blame/8fb9c4bf3beeb0d07d8e35495ba0f4dd53c8fd3e/tests/Composer/Test/Repository/Vcs/SvnDriverTest.php\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1129077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1131446", "body": "Ah, ok. You wouldn't even keep it to be able to e.g. mock the code better?\n\nI guess it could be achieved without it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1131446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1131470", "body": "You just need to write an SVN server in PHP. Let me know when you send a PR so I can review. :D\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1131470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1133005", "body": "I guess we could do something similar with `svnadmin`.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1133005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1493200", "body": "I approve of this commit! :joy:\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1493200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "prehfeldt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2628720", "body": "@stloyd I did call those commands, but it looks like I cloned the project a few hours to early, so thank you.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2628720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "henrikbjorn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2631209", "body": "This have nothing to do with the packages or what composer installs. This is to have the composer cli utility availible everywhere. I dont want to add composer.phar to every project i have.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2631209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2651084", "body": "Also is there a reason `dirname(dirname(__DIR__))` is used instead of `__DIR__.'/../../` ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2651084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2653465", "body": "Why is there two commands? arent we always interested in installing the changed version numbers or the new libraries when doing `composer install`?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2653465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2757280", "body": "I guess that most that are confused by this (including) me see the dependency management not being fuzzy when used in an Application context. And for Libraries i think having semi fuzzy dependencies makes sense where it is not strictly required to have a specific version but a fuzzy minor like 2._, 2.0._, >=2.0 where as Applications would have specific ones like 2.1.0 or 2.1.1 and does not require a lock file where the exact downloaded dependency version is stored.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2757280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/964746", "body": "Wouldn't `'/' . ltrim($link, '/')` be more simple?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/964746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/209641", "body": "Changed and squashed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/209641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/212719", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/212719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/223468", "body": "@Seldaek @Stof @naderman wouldnt it make sense to use the Process Component since there is quite a lot of thoose system function used?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/223468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "marijn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2653437", "body": "I'm referring to the fact that it has four version number components instead of three... \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2653437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2653468", "body": "In my opinion it's confusing, especially if we're going to encourage people to commit `composer.lock`. People will want to look at the file, and browse the relevant source code of the related project to inspect and file for bugs...\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2653468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2665282", "body": "My bad, I wasn't aware that this would work for directories as well :-$\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2665282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yevgenko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2666690", "body": "ok, now it works, thanks!\n\nOn Sun, Nov 6, 2011 at 9:26 PM, Jordi Boggiano <\nreply@reply.github.com>wrote:\n\n> I pushed some fixes that should allow you to get this working now. Please\n> try with a new composer.phar. That being said the main pear repo is very\n> slow to initialize because of the way the pear protocol works and the fact\n> we don't have local caching yet.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/composer/composer/issues/92#issuecomment-2647073\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2666690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "webfactory": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2694528", "body": "Sorry for the CS problems, I just forgot to check... Our companies coding conventions are kind of non standard I think.\nI fixed the unused $key variable in both drivers... ;)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2694528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2694740", "body": "I will add a Bitbucket driver (and perhaps a Kiln driver, if they extend their API...).\nJust didn't need it yet.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2694740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2695753", "body": "By the way, I think it is a good idea to make a base class for the git and hg drivers (and perhaps vor the downloaders), because the way git and hg work are soo similar. Any opinion on that?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2695753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2713046", "body": "@dsp: Just put *.swp to your global hgignore settings. Then they are not contained in hg status.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2713046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745016", "body": "@stloyd: Well, the code works. The VcsDrivers should be refactored (which is an general issue of composer: #106). Also I postponed the Kiln-Driver until they update their api.\n\nAnd of course it would be nice, if the code makes it into the master branch. But that's not up to me :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745265", "body": "Of course you need to disable the packagist repo in the file listing the repositories you want to generate your own packages.json file from. In my opinion the packagist repository default is wrong in the first place, because now composer is coupled with packagist, which is (imho) just one of many repositories... But I can understand that you want to have it as a standard to ease the use of composer and to push packagist :)\n\nI also see, that my command has nothing todo with the normal use case of composer, so a standalone solution would of course be better. My problem is, that I needed a quick solution and all the code I use (except my command) was already in composer.\n\nWe would need to extract all the repository, drivers and package code into a standalone thing (maybe some kind of composer-common?). Then composer itself would contain the dependencyresolver, commands, installers and downloaders...\n- Per\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2745265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2774929", "body": "Per and me are sharing this account, so I edited his above comments to make clear who said what. That being said, I'll try to outline what we hope Composer is going to provide. We'd be glad to learn if that is in line with the project's goals and if so, help and contribute :-).\n\nFor clarity, I will say \"package\" for a particular piece of vendor code, like \"ACME/superlib\". A \"release\" is a concrete version of a package, like \"ACME/superlib version 1.0\".\n\nNow:\n- Composer is a tool to fetch releases from various locations and place them in a (customizable?) local directory, e. g. \"./vendor\". It supports various drivers/approaches for downloading and unpacking (tgz over http(s), git, hg, PEAR...). The \"distribution point\" for a release is (the driver to use + necessary parameters like URLs, branches, ...). Composer can also prefer \"source\" or \"dist\" variants if a release provides distribution points for both.\n- Composer decides which releases to fetch. You just list the packages and version requirements. Composer will find a solution, honoring transitive dependencies.\n- Composer needs a list of all the stuff it can possibly reach. Let's call this the \"release directory\". This directory contains all known packages, the releases for each of them with their dependencies and distribution point(s) - basically, that should be what already is available in a packages.json nowadays.\n- When it comes to building this release directory, you obviously need some starting pointers. Like with distribution points, these pointers are tupels of (a scanner implementation to use, parameters for it).\n- A \"scanner\" produces a list of entries for the directory. Different scanner implementations come to mind:\n  -- \"Manual\" produces a single entry, based on package name, version and distribution points given in the configuration.\n  -- \"Vcsrepo\" can scan a SCM repository, look for branches demarking versions and generate release entries for all of them, incorporating dependencies found in the branches' composer.json.\n  -- PEAR for scanning a PEAR channel for available releases\n\nLet's assume [\"Toccata\"](http://en.wikipedia.org/wiki/Toccata) is the name for the code producing the release directory from starting pointers. \n\nHaving Toccata as part of Composer, all you need in your project are the Toccata starting pointers (to produce the directory) and the package + version requirements (for the Composer job itself). As building the directory is expensive, you probably want to cache the result and only rebuild it at discretion (\"composer --toccata\"). As long as you only change the package requirements in composer.json, just run \"composer\". It will use the cached directory (given it exists) and do the composition job. \n\nThe (cached) directory generated from a set of starting pointers could be placed on a simple, static read-only webserver itself. A particular scanner type (\"directory\") would just fetch the file (from a given url, that is) and add its contents during the Toccata run. \n\nThat way, you created directory hub and your projects' composer.json need no longer contain all the starting pointers, but just the \"directory\" entry (plus version requirements). For updating the hub's packages.json, you need a composer.json with \"starting pointers\" only and run \"composer --toccata\". This could be done with a cron job, for example. \n\nPackagist is a hub very much like this, only it is open for additions of \"starting pointers\" and rebuilds the directory when changes are made.\n\nIs that what you were talking about :-)?\n- Matthias\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2774929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776412", "body": "Well, why not just use http://user:pass@acmerepo.com/packages.json as the URL for the composer type repo?\n\nWhen it comes to repositories that need to be \"scanned\" in the Toccata phase through SSH (are there any?), we could rely on the user having set up his environment accordingly, or have an extra parameter that contains the ssh command to execute - just like CVS does with CVS_RSH in the env.\n\nWhen you want to be able to specify all repos in the composer.json, the \"Toccata\" code needs to be part of Composer anyway. \n\nSo generating a packages.json for the \"hub\" repository would be based on a composer.json as well, only that it contains no \"require\" section. And maybe call composer with an extra flag to silence any warnings that would complain about the \"require\" missing ;-).\n- mp.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776443", "body": "Oh, and as to packagist as the default repo: What do you think about having it as the default unless \"repositories\" is specified? \n\nComposer would work out of the box with a minimal `require`-only composer.json and use Packagist. As soon as you start adding your own repos in the `repositories` section, you probably know what you are doing and would be able to include packagist.org if you need to/can use it.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776734", "body": "> So I like to have the tools in Composer to allow anyone to crawl packages at runtime from their own composer.json, no need to setup an extra repo.\n\nAgree.\n\n> but if you want to set one up, you can get that Toccata tool and do it easily. Makes sense?\n\nIf Composer can do the crawl and possibly saves the crawl's result in a \"packages.json\" (in a local cache), then \"Toccata\" has happened :-). \n\nJust stash the packages.json on any static http server and reference it as \n`repositories\": { \"acme\": { \"composer\": { \"url\": \"http://path.to/packages.json\" } } }``\n\nNo need for a separate tool - or what am I missing?\n\n> Dumping a packages.json is one thing, but there will also be the need to create zip archives on the fly etc at some point (I still need to add that for packagist)\n\nWhy so?\n\n>  and then generating a small frontend to browse packages might be good too like what Pirum does. And at this point I really don't think it belongs in Composer anymore.\n\nSure. Composer can crawl repos specified in composer.json and dump the resulting packages.json. \n\nThis is open for advanced tools, just like Packagist already is.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776852", "body": "I think we agree. The code is there, dumping the packages.json is subject of this pull req and everything else (the advanced/customized Packagist) is left as an exercise to the reader :-).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2776852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/225399", "body": "@dsp: There are three ways of defining \"branches\" in mercurial currently. The most common and easiest way of branching is cloning the repository (called branch repositories). This of course leads do different urls, so we cannot handle this approach within this driver. The second way is named branches, that are parsed by the driver with \"hg branches\". And finally there are bookmarks. Bookmarks are quite a new concept. Personally I am not sure yet, if there are a good tool to use for marking distinct versions of your library, because there are ment kind of lightway and easy to change and move around. The main reason why I would not want to implement them in this driver is, that there are a lot of users / systems not yet having the required version of mercurial to use this feature.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225466", "body": "@dsp: Thanks for this suggestions. But hg pull -u is not able to pull and update to a _specific revision_, so I have to do it in two steps (sadly enough I had already pushed the change after I noticed that).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235673", "body": "I think Per wanted not to overwrite already recognized packages with that, in case they come from different repos repeatedly.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235724", "body": "Line #47 is only executed when the if condition in #46 holds, that is, the package is not yet in the $packages list.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235747", "body": "Too bad :-( I only looked at the lines above and did not see #48 :-( Shame on me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/235747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/282753", "body": "You are completely right... Sorry, I underestimated it... My last commit should fix it. I also noticed that letting ENV always win makes no sense... The priority of configurations is now \"from file\" > ENV > default. Ok?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/282753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "trompette": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2759493", "body": "I love @stof idea to have a tool like Pirum to be able to manage a small composer repository. I guess it would be better if it's a project of its own.\n\nBut I'm wondering if it would not be simpler to just proxy local Git or Mercurial repositories...\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2759493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2759670", "body": "I mean write a tool (packagist light) that build on demand composer packages from local repositories. I'm not sure if i'm being crystal clear ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2759670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2760000", "body": "Maybe you're right. I was just thinking it would be great to have such a tool when developping third party bundles as the associated package would have to be regenerated quite often...\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2760000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2761162", "body": "Yes, you may be right again. :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2761162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2769943", "body": "@Seldaek i think the `install --update` is a good thing and i agree with @jmikola that some output explaining what's going on to the user would be great.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2769943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777163", "body": "What do you think about **Compyrum** for the name ? :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jmikola": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2769784", "body": "@Seldaek: apart from my OSCON presentation, I never used Symfony2's vendor script (submodules for life :)\n\n#75 does make sense to me. In this case, `install` should know that the lock file is incomplete, so some output to the user would be helpful - even if the ultimate solution is to tell them to use `update` or a `--updated` option. Closing this.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2769784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1930205", "body": "See my comment in #623. Is this error message printed only when `'ext-name': '*'` fails, or also when an extension version check fails? (for the few extensions that support version checks).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1930205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1936571", "body": "Well, since some extensions report versions like `$Id af982c...$`, I would expect there's no way Composer can parse that version string and users would need to rely on `*`. But I was curious as to when the code above would run, since the error messages says that the wrong version is installed.\n\nDoes this run any time the extension requirement fails, or just when using a version number instead of `*`?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1936571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1937172", "body": "Then, does it make sense to say the version is wrong if `*` was required? That's the bit that confused me.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1937172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1937355", "body": "Got it. Re-reading the code, it's quite obvious now. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1937355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "wwwdata": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/composer/composer/issues/comments/2777075", "body": "yes you are right, it is a requirement of the application.\n\nThe use case is: I got my own repository with my own packages and simply want to use composer to manage all the externals for me.\n\nMy problem is: I want to use Git as my repository but in my company there are a lot of externals stored in svn repos and I need a way to manage that easily so I though't it would be best and a clean solution to use composer and the nice json config file.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777164", "body": "that would assume the externals are php files which is not the case.\n\nExternals can be either normal php files, in that case yes, you are right. But externals also can be some javascript files or css Files that are stored elsewhere but are also needed in the project.\n\nAnother solution would be to check them out in vendor/ as everything else goes to and make symlinks to the vendor/someothercss or whatever folders. I don't know, maybe that is the smarter and cleaner way?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/issues/comments/2777164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "beberlei": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/588490", "body": "strtolower has no second parameter.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/588490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "dator": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/686354", "body": "inception :D install composer with composer ^^\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/686354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "pminnieur": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/732296", "body": "shouldn't this be `svn co %s@%s %s`? (see http://www.svnbook.spears.at/nightly/de/svn.ref.svn.c.checkout.html)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/732296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/732297", "body": "same here, shouldn't this be `svn switch %s@%s`? (see http://www.svnbook.spears.at/nightly/de/svn.ref.svn.c.switch.html)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/732297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "dr-fozzy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/970322", "body": "I believe we need to determinate extension installed\n\n```\nif(function_exists('gzopen'))\n```\n\n...\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/970322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/970394", "body": "http://www.php.net/manual/en/phar.cancompress.php may help on this? Or I have wrong understanding of problem?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/970394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/970474", "body": "Obviously, we may build and provide several versions of composer.phar for different compression methods, but this looks ugly for me. \nMaybe its \"phar\" extension related bug? As I see, there are no capability to combine several compressed phar's in one, and then load that version of it, wich PHP supports...\n\nP.S. Or we can just pick up compression methods that installed on most common distribution, or that witch may be easily installed (maybe bz2, as it can be installed through pecl extension)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/970474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ooflorent": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1101454", "body": "Why not using `$config['type'] ?: 'vcs` ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1101454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "toastedghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1127939", "body": "What is with the access via WebDAV protocol to Subversion-aware Apache server? Shouldn't it be supported although?\n\nAnd by rereading these lines, i think 'svn.' could be a part of an url, but didn't have to. Maybe ^http is the better choice?\n\nhttp://svnbook.red-bean.com/en/1.7/svn.basic.in-action.html#svn.advanced.reposurls\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1127939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1128437", "body": "Ah ok. I had a second look into the function and now it is clear. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1128437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "hhamon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1188098", "body": "why don't using the `pathinfo()` native function for getting the extension?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1188098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jalliot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1232840", "body": "`composer.phar create-project composer/satis satis`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1232840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1241277", "body": "@Seldaek This commit broke the phar:\n\n```\nPHP Warning:  require(phar:///home/jordan/bin/composer.phar/vendor/ClassLoader.php): failed to open stream: phar error: \"vendor/ClassLoader.php\" is not a file in phar \"/home/jordan/bin/composer.phar\" in phar:///home/jordan/bin/composer.phar/vendor/autoload.php on line 5\nPHP Stack trace:\nPHP   1. {main}() /home/jordan/bin/composer.phar:0\nPHP   2. require() /home/jordan/bin/composer.phar:15\nPHP   3. require() phar:///home/jordan/bin/composer.phar/bin/composer:3\nPHP   4. includeIfExists() phar:///home/jordan/bin/composer.phar/src/bootstrap.php:19\nPHP   5. include() phar:///home/jordan/bin/composer.phar/src/bootstrap.php:15\nPHP Fatal error:  require(): Failed opening required 'phar:///home/jordan/bin/composer.phar/vendor/ClassLoader.php' (include_path='.:/usr/share/php:/usr/share/pear') in phar:///home/jordan/bin/composer.phar/vendor/autoload.php on line 5\nPHP Stack trace:\nPHP   1. {main}() /home/jordan/bin/composer.phar:0\nPHP   2. require() /home/jordan/bin/composer.phar:15\nPHP   3. require() phar:///home/jordan/bin/composer.phar/bin/composer:3\nPHP   4. includeIfExists() phar:///home/jordan/bin/composer.phar/src/bootstrap.php:19\nPHP   5. include() phar:///home/jordan/bin/composer.phar/src/bootstrap.php:15\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1241277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "palex-fpt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1392338", "body": "it does not work under 5.3.3 due:\nSolver.php:\n        if (version_compare(PHP_VERSION, '5.3.4', '>=')) {\n            $this->decisionMap = new \\SplFixedArray($this->pool->getMaxId() + 1);\n        } else {\n            $this->decisionMap = array_fill(0, $this->pool->getMaxId() + 1, 0);\n        }\n\nand in Transaction.php it relies on fact, that decisionMap is object and does not have copy semantics on assign\nTransaction.php\n111:         $allDecidedMap = $this->decisionMap;\n121:        foreach ($allDecidedMap as $packageId => $decision) {\n139:                $this->decisionMap[$packageId] = -1;\n161:                $this->decisionMap[$packageId] = -1;\n\nIt can be fixed by changing \n $this->decisionMap[$packageId] = -1;\nto\n $allDecidedMap[$packageId] = -1;\n\nor by modifying Solver PHP version test, cause SplFixedArray is available since 5.3.0\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1392338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/1450626", "body": "Actually composer uses 'pear-{channelAlias}/' prefix to build package name.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1450626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/1450640", "body": "PEAR repository describes dependencies in '{channeName}/\n{packageName}' form. To build composer-like name it is required to make call to external channel to get its alias name.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1450640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/1455633", "body": "PR that corrects documentation or PR that corrects implementation? I implemented 'pear-{channelName}/' that is backward compatible with 'pear-{channelAlias}/' in palex-fpt@b25af12c . But it is depends on #775\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1455633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/1455940", "body": "At current state it is unusable. 60+ seconds for reading 'pear.php.net' channel. Packages 'pear/Http_request', 'pear/Net_url2', 'pear/Text_diff' does not works. To be honest only working pear packages are symfony and zend ones, but its available without pear support.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1455940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/1510384", "body": "More oop-ish way would be to add RepositoryInterface::supportsNotification() method.\nOr place notify install into RepositoryInterface, get rid of NotifiableRepositoryInterface, \nand do nothing in ArrayRepository::notifyInstall().\ninstanceof here is like method_exists === no-oop style.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1510384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "digitalkaoz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1531975", "body": "something gone wrong: \n\n``` sh\nPHP Fatal error:  Access level to Composer\\Installer\\PearInstaller::$filesystem must be protected (as in class Composer\\Installer\\LibraryInstaller) or weaker in phar:///home/vagrant/builds/composer/composer/composer.phar/src/Composer/Installer/PearInstaller.php on line 95\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1531975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1533453", "body": "why not use the `JsonValidationException` from composer?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1533453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/277663", "body": "mh i thought it would be better to see all versions available...for upgrading downgrading issues\nif the package is installed, the installed version is highlighted\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277670", "body": "if we dont ask for a specific version, it would pick the fist version found, but if you have installed a version of this package, then grep this package instead \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277679", "body": "for that i would use `search` instead of  `show` it greps the first version found, but shows all available versions, the installed version is highlighted\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277718", "body": "yeah you're right, i fixed that...\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277749", "body": "well im undecided, what if i only want to know if there exists a specific version, or a newer than my installed package?\n\nbut you're right 50 versions are information zero\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277801", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/277801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278139", "body": "well it shows the information for the specified version, but also informs you that there are other version\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278265", "body": "ok fixed it, if a version is provided the command will only show this, else all versions\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278307", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278085", "body": "a misplaced newline ;) fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278094", "body": "in my opinion `sprintf` only makes sense with more than `1` argument?!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278098", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278224", "body": "fixed, it was temporary cause this functions intializes some things\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278225", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/278225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/279600", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/279600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329283", "body": "yeah ok, could move it, but where? a new class? i think not! couldnt imagine a better place :/\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329358", "body": "ok fixed it, now its in seperate class, and fascades the `Symfony\\Component\\Process\\Process`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/329358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "craue": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1608364", "body": "Maybe switching the order of those conditions to only call `extension_loaded` in cases where an HTTPS URL is requested?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1608364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1608560", "body": "You're right. Not having openssl enabled is presumably the less probable case.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1608560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2634936", "body": "@Seldaek: Great. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2634936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "kdambekalns": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1774672", "body": "With this change the $this is now inside the anonymous function starting in line 70. This breaks the code for PHP 5.3 as afar as I can tell from \"PHP Fatal error:  Using $this when not in object context in phar:///opt/local/bin/composer/src/Composer/Command/DependsCommand.php on line 74\"\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1774672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Baachi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1775332", "body": "@stof Issue is already reported #1034 and fixed :)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1775332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "benji07": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1787404", "body": "this don't work on mac os\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1787404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1787441", "body": "the -f option\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1787441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1787491", "body": "don't know\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1787491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/1787553", "body": "I can't run the script see #1045\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1787553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "armetiz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1831502", "body": "Exact ! \n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1831502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "michilehr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/1875260", "body": "This kills again phpunit which worked with https://github.com/composer/composer/commit/f377e9ca87968539f2b0f71c8cdf034b7e27922a\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1875260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/1875334", "body": "`PHP Fatal error:  Cannot redeclare php_tokenstream_autoload() (previously declared in /Users/michi/Desktop/PHPUNIT/vendor/phpunit/php-token-stream/PHP/Token/Stream/Autoload.php:45) in /Users/michi/Desktop/PHPUNIT/vendor/phpunit/php-token-stream/PHP/Token/Stream/Autoload.php on line 230`\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1875334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/1875397", "body": "Okay - after this commit (https://github.com/composer/composer/commit/ebc9c73008958438019e0faf96aabccfe33c0498) everything worked fine. Now its broken again :(\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/1875397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cs278": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2259393", "body": "Should use `$hostname` here.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2259393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3015994", "body": "This exception should probably reference the environment variable name and value.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3015994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3016069", "body": "and `{$this->config[$key]}` should have made that clearer.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3016069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "johnkary": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2261616", "body": "`$callback` here is now undefined.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2261616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "lisachenko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2353638", "body": "It's better to declare this property protected or change the `getLoader()` method to use self::$loader, not the static::$loader. I have an issue with LSB when trying to extend that class with AOP library:\n\nFatal error: Cannot access property ComposerAutoloaderInit3afe4f03d310e7f53418ea6a9d6bf45c::$loader\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2353638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/2426082", "body": "Was it really necessary to prepend composer autoloader? I have an issue with this, because I'm using my own loader before project loader for auto-creating proxies for class. And now composer just loads original class, because it's first. It seems, that composer should respect the order of registration to allow developer to decide on order.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2426082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/2427455", "body": "@HosipLan no, I can't, because composer loader will be always the number one. I can only change the order of autoloaders by inverting order for that case. But it's not a very good idea as it's not clear enough. Appending autoloaders instead of prepending is much more logical, isn't it?\n@Seldaek Can we use some flag for composer? Something like `prepend=true` in the project?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2427455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/2427833", "body": "Relates to the issue https://github.com/lisachenko/go-aop-php/issues/30\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2427833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/2427967", "body": "@HosipLan because I need to load my library's autoloader first to use specific classes for loading the autoloader for composer.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2427967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/2427995", "body": "@Seldaek thanks, already done ) https://github.com/lisachenko/go-aop-php/commit/100588e2c2d9318f1d892f7ab89e0e50747402a5 I'll create a ticket for this to discuss.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2427995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "triplepoint": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2382035", "body": "It might be best to mark the PHP 5.5 build as \"allowed to fail\", by inserting this after the PHP: section:\n\n``` yaml\nmatrix:\n  allow_failures:\n    - php: 5.5\n```\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2382035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/2472713", "body": "So this happened anyway at https://github.com/composer/composer/commit/265d69d38fbc4e4af1028618fa9cb4fa5fb81124 .  Is still still undesired behavior?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2472713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jaspernbrouwer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2704498", "body": "I think this line also needs the \"access_token query param\" fix.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2704498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/2704578", "body": "Ahh, right :)\nI ran into a bit of trouble which I tracked down to this line. But is seems it was due to me not clearing the cache dir...\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2704578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "webmozart": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2705050", "body": "Great, thank you! Question on the casing: why `lib-xsl` but `lib-ICU`?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2705050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/2705078", "body": "Ah ok.\n\n> I used uppercase since that's how it's usually written\n\nYeah, and it's usually XSL and XML too :) no big deal.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2705078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "olamedia": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2765034", "body": "Let's make 3 multiplications, replacing breaks with comment lines to make cool script XD\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2765034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "rogeriopradoj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/2867313", "body": "Hello @Seldaek, is it available some discussion about this decision (I mean, do not use/or encourage to use .gitattributes to provide light-weight packages)?\n\nI am asking that cause of phpoffice/phpexcel project, particularly its [issue 98](https://github.com/PHPOffice/PHPExcel/issues/98) and [their commit using .gitattributes](https://github.com/PHPOffice/PHPExcel/commit/477902570160a5c1a070bf157ce146a373076f2d) as the issue solution.\n\nThanks in advance!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2867313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/2867644", "body": "Oh, thanks @igorw, I can see your point.\n\nAfter a long analysis, I could probably say that the problem there at https://github.com/phpoffice/phpexcel it the lack of tags in composer way. I will definitely suggest @MarkBaker to focus on retagging the releases.\n\nThanks again!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/2867644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "pborreli": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/3147576", "body": "are you sure of that ? I think it's not an optimization at all, plus, strict assertion is needed.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147577", "body": "$first = $class[0] ?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147585", "body": "it will not scan the whole string it stops at the first occurrence and here it's at the very beginning (0)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147631", "body": "made a little benchmark https://gist.github.com/pborreli/5520770\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3147733", "body": "but it's 3 times faster and this PR is focused on performance.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3147733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3148005", "body": "here we can't put strlen outside as the prefix is different on each loop\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3148005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/comments/3150720", "body": "done in 976fe48a72c2ef6cfeda0e8991a232f210e49a9a\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3150720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mkantor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/3148002", "body": "[Here are what the benchmarks run like on two of my systems, including a new benchmark with `strlen` outside the loop](https://gist.github.com/mkantor/5521360).\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3148002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/3148248", "body": "Good point; I hadn't noticed the context.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3148248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Taluu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/3150707", "body": "why not `$prefix[0]` rather than a call to `substr` ?\n\n_edit :_ hum nevermind did no see that @pborreli already made the suggestion below, which was fixed in 976fe48\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3150707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "bhuga": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/3225362", "body": ":+1: :crying_cat_face:\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3225362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/3965556", "body": "This should be safe to remove. Let us know if you're still seeing it!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3965556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "gggeek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/3389594", "body": "seems ok. Would it be overkill to have the cd /D thing generated in some base FS util class?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3389594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "shprink": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/3837974", "body": "My company is back on track since that commit. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3837974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "webignition": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/3840248", "body": "That explains the issues I was spotting!\n\nA test environment I'm running under Jenkins CI was failing to autoload two classes and I had a heck of a time figuring out why this was going on.\n\nDoes that sound related to the issues you were seeing with the adapter creating issues on some platforms? I can provide more details if so and if that would help track down the cause of such issues.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3840248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/3840338", "body": "Cool, fair enough.\n\nIncidentally, if I end up running `./composer.phar self-update` and end up with a broken version (as was likely today), is there an easy way of updating to a non-broken version? Such as something along the lines of `./composer.phar self-update <commit hash>` to update to a specific commit?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3840338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "chrisyue": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/3973983", "body": "why PharArchiver? and why not use di?\nZipArchive can have much better compression ratio than Phar, it can save a lot bandwidth. Make it configurable?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3973983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/comments/3974277", "body": "@stof Aha, sure, I've opened a issue: https://github.com/composer/composer/issues/2219, see you there\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/3974277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "fabian": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/composer/composer/comments/4031840", "body": "I guess this should be `\"type\": \"composer-plugin\"` as documented above?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/comments/4031840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "yethee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593", "body": "Here typo\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/133593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "dsp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/223670", "body": "what about hg pull -u?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/223670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/223672", "body": "i'm not sure about branches. there are a lot of ways of branching and maybe we should consider\nsupport mercurial bookmarks as part of \"branches\" too if they point to a head.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/223672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225440", "body": "@webfactory Fair enough. I implemented bookmarks so I have somewhat of a biased opinion on that, but I see your point, so let's stick to named branches at the moment.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/225440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "prodigitalson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/232022", "body": "Any suggestions? Is something like `composer.config.json` to verbose?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/232022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237639", "body": "My thinking was that at some point there may be configuration settings that require default settings, and that they may need to be the same as what is passed in to the `PackageLoader` later so I used a merge type strategy here. If thats doubtful or would be better handled another way then we can do as you suggest.\n\nRegardless which strategy we use we can definitely make a local `$vendorPath` for readability sake in this script.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/237639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jsor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/252385", "body": "This was simply copied from https://github.com/composer/composer/blob/master/src/Composer/Command/InstallCommand.php#L61\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/252385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/253403", "body": "The flag has been renamed from `--required-only`. Will fix that.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/253403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "justinrainbow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/330102", "body": "Would both `$package->getRecommends()` and `$package->getSuggests()` be good?  Is there another way to get a list of all the package links instead?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/330102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335425", "body": "@stof Do you think those methods would be helpful in other Composer commands?  If not, I can just move them into the InitCommand.  Otherwise, I can register the Helper in `Composer\\Console\\Application` instead.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335496", "body": "@stof I moved this into the `Composer\\Console\\Application` by overriding the `getDefaultHelperSet` method.  https://github.com/justinrainbow/composer/commit/9e4a371bed319c9c7efbdfb756d4059132737830#L1R191\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335507", "body": "This has been removed now - just moved the code into the `InitCommand` since it is only used one time\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/335507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "simensen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/349649", "body": "sigh. why do i feel like i just failed a test. ;) (not a phpunit one)\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/349649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "francoispluchino": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/composer/composer/pulls/comments/341547", "body": "Because this method clears the current line and does not have the percentage of download displayed one below the other, but only on the same line\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341564", "body": "It's a trick I found on stackover to hide the password in the prompt. On Windows, it is unfortunately forced to use an external script that opens a dialog box with a input text. I can remove it, but from a security point of view, this way the password is not saved in the history of php://stdin.\nIt is also necessary that I find the source for the quote.\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341574", "body": "I move this constructor in every class that extends FileDownloader?\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341579", "body": "They will be used for entering the login / password for each private repository\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341580", "body": "They will be used for entering the login / password for each private repository\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341581", "body": "They will be used for entering the login / password for each private repository\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341590", "body": "Yes, it's an oversight on my part\n", "reactions": {"url": "https://api.github.com/repos/composer/composer/pulls/comments/341590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}