{"_default": {"1": {"Aman-Osman-Bose": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/608", "title": "Jenkins doesn't get beyond \"Trying to run container for\"", "body": "-  [1.1.2 ] docker-plugin version you use\r\n-  [Jenkins ver. 2.89.2] jenkins version you use\r\n-  [Version = 17.09.1-ce, API Version = 1.32] docker engine version you use\r\n\r\nThe container gets launched in the docker and I see the container in the docker ps -a, but nothing is happening after that. \r\n\r\n**stack trace / logs / any technical details that could help diagnose this issue**\r\n\r\n- Jenkins Logs\r\n\r\nJan 16, 2018 11:31:51 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nAsked to provision 1 slave(s) for: test-docker\r\nJan 16, 2018 11:31:51 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nWill provision 'test-auto', for label: 'test-docker', in cloud: 'docker'\r\nJan 16, 2018 11:31:51 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud addProvisionedSlave\r\nProvisioning 'test-auto' number '2' on 'docker'; Total containers: '2'\r\nJan 16, 2018 11:31:51 AM INFO hudson.slaves.NodeProvisioner$StandardStrategyImpl apply\r\nStarted provisioning Image of test-auto from docker with 1 executors. Remaining excess workload: 0\r\nJan 16, 2018 11:31:51 AM INFO com.nirima.jenkins.plugins.docker.DockerTemplate provisionNode\r\nTrying to run container for test-auto (edited)\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pitargue": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/605", "title": "ssh Connection Timeout, max no of retries and seconds to wait between retries has no effect", "body": "docker-plugin version 1.1.2\r\nJenkins version 2.101\r\nDocker version 1.12.6, build ec8512b/1.12.6\r\n\r\nUsing ssh connection method to jenkins agents in local docker cloud, configuring:\r\n  Connection Timeout in Seconds\r\n  Maximum Number of Retries\r\n  Seconds To Wait Between Retries\r\n\r\nseems to have no effect.  The logs always say trying for 30 times as fast as it can.  (Our slaves come up real slow so need a bit of delay.)\r\n\r\nSEVERE: Failed to connect to docker-sys4:32841 (try 1/30) - There was a problem while connecting to docker-sys4:32841\r\n\r\n...\r\n\r\nSEVERE: Failed to connect to docker-sys4:32842 (try 30/30) - There was a problem while connecting to docker-sys4:32842\r\nJan 11, 2018 1:59:02 PM com.nirima.jenkins.plugins.docker.DockerCloud$1 run\r\nSEVERE: Error in provisioning; template='DockerTemplate{configVersion=2, labelString='bvs', connector=io.jenkins.docker.connector.DockerComputerSSHConnector@453e723d, remoteFs='/root', instanceCap=10, mode=EXCLUSIVE, retentionStrategy=com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy@769c3fe9, dockerTemplateBase=DockerTemplateBase{image='localhost:5000/bvsimages/centos7-systemd-with-bvs:latest', pullCredentialsId='', registry=null, dockerCommand='/usr/lib/systemd/systemd --switched-root --system', hostname='', dnsHosts=[], network='', volumes=[/mnt/tank/bvs:/mnt/tank/bvs], volumesFrom2=[], environment=[TZ=America/Los_Angeles], bindPorts='', bindAllPorts=false, memoryLimit=null, memorySwap=null, cpuShares=null, privileged=true, tty=true, macAddress='null', extraHosts=[]}, removeVolumes=true, pullStrategy=PULL_NEVER, nodeProperties=[]}' for cloud='docker'\r\njava.io.IOException: SSH service didn't started after 60s.\r\n\r\n\r\nAny other info I can provide?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "saxonww": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/604", "title": "Concurrent stages occasionally 'steal' agents from another stage", "body": "I'm using docker-plugin version 1.1.2 on Jenkins 2.89.2. The Docker engine version is 17.09.0-ce. We're using the 'attach docker container' connect method.\r\n\r\nWe have several pipeline jobs which attempt to spin up images using label expressions matching Docker agent templates. The observed behavior is that a stage will attempt to allocate a node for label `someExpression`, it will be identified that there are no existing nodes matching `someExpression`, then a docker container will be spun up to meet the need; at that time, the job will instead depend on e.g. `docker-containerId` and begin using it as soon as it's spun up.\r\n\r\nWhat we're seeing is that sometimes with two stages (A and B) which use the same label expression `someExpression`, A will be causing a new Docker container to be spun up right when B is trying to determine if one exists. B will 'steal' A's container, but by that point 'A' will be dependent on `docker-containerId` instead of `someExpression`. A will then stall.\r\n\r\nCompounding this is that once stage B finishes and `docker-containerId` terminates, stage A goes back to depending on `someExpression`, but this does not immediately result in a new Docker container spinning up to meet the need. If there is a new stage C which also needs `someExpression`, _it_ will cause a new container to spin up, but then A will steal that one, and C will stall. And so on.\r\n\r\nI believe restarting Jenkins will clear this condition. Also, assigning `someExpression` to a non-Docker agent will let the stalled stage complete, but then it seems that all stages want to (and will wait on) that non-Docker agent instead; we have to remove `someExpression` from the non-Docker agent, change `someExpression` to `someOtherExpression` for the Agent Template in Jenkins config, then change it back, before things get back to normal.\r\n\r\nThe relevant entries from jenkins.log:\r\n```\r\nJan 11, 2018 10:31:23 AM com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nINFO: Asked to provision 1 slave(s) for: someExpression\r\nJan 11, 2018 10:31:23 AM com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nINFO: Will provision 'artifactory:5000/imageName:version', for label: 'someExpression', in cloud: 'Docker - Linux'\r\nJan 11, 2018 10:31:23 AM com.nirima.jenkins.plugins.docker.DockerCloud addProvisionedSlave\r\nINFO: Provisioning 'artifactory:5000/imageName:version' number '1' on 'Docker - Linux'; Total containers: '12'\r\nJan 11, 2018 10:31:23 AM hudson.slaves.NodeProvisioner$StandardStrategyImpl apply\r\nINFO: Started provisioning Image of artifactory:5000/imageName:version from Docker - Linux with 1 executors. Remaining excess workload: 0\r\nJan 11, 2018 10:31:23 AM com.nirima.jenkins.plugins.docker.DockerTemplate pullImage\r\nINFO: Pulling image 'artifactory:5000/imageName:version'. This may take awhile...\r\nJan 11, 2018 10:31:28 AM com.nirima.jenkins.plugins.docker.DockerTemplate pullImage\r\nINFO: Finished pulling image 'artifactory:5000/imageName:version', took 5076 ms\r\nJan 11, 2018 10:31:28 AM com.nirima.jenkins.plugins.docker.DockerTemplate provisionNode\r\nINFO: Trying to run container for artifactory:5000/imageName:version\r\nJan 11, 2018 10:31:30 AM com.nirima.jenkins.plugins.docker.DockerCloud$1 run\r\nSEVERE: Error in provisioning; template='DockerTemplate{configVersion=2, labelString='someExpression', connector=io.jenkins.docker.connector.DockerComputerAttach\r\nConnector@2bd76cef, remoteFs='/home/jenkins', instanceCap=2147483647, mode=EXCLUSIVE, retentionStrategy=com.nirima.jenkins.plugins.docker.strategy.DockerOnceRe\r\ntentionStrategy@46952426, dockerTemplateBase=DockerTemplateBase{image='artifactory:5000/imageName:version', pullCredentialsId='', reg\r\nistry=DockerRegistryEndpoint[null;credentialsId=null], dockerCommand='', hostname='', dnsHosts=[], network='', volumes=[/var/run/docker.sock:/var/run/docker.so\r\nck, /usr/bin/docker:/usr/bin/docker:ro], volumesFrom2=[], environment=[], bindPorts='', bindAllPorts=false, memoryLimit=null, memorySwap=null, cpuShares=null,\r\nprivileged=false, tty=false, macAddress='null', extraHosts=[]}, removeVolumes=false, pullStrategy=PULL_ALWAYS, nodeProperties=[]}' for cloud='Docker - Linux'\r\ncom.github.dockerjava.api.exception.DockerClientException: Unable to read temp file /tmp/docker-java8036914009658167143.tar.gz\r\n        at com.github.dockerjava.core.command.CopyArchiveToContainerCmdImpl.exec(CopyArchiveToContainerCmdImpl.java:144)\r\n        at io.jenkins.docker.connector.DockerComputerConnector.injectRemotingJar(DockerComputerConnector.java:87)\r\n        at io.jenkins.docker.connector.DockerComputerAttachConnector.afterContainerStarted(DockerComputerAttachConnector.java:63)\r\n        at com.nirima.jenkins.plugins.docker.DockerTemplate.provisionNode(DockerTemplate.java:435)\r\n        at com.nirima.jenkins.plugins.docker.DockerCloud$1.run(DockerCloud.java:268)\r\n        at jenkins.util.ContextResettingExecutorService$1.run(ContextResettingExecutorService.java:28)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: io.netty.channel.ConnectTimeoutException: connection timed out: dockerHost/10.0.0.10:2375\r\n        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:267)\r\n        at io.netty.util.concurrent.PromiseTask$RunnableAdapter.call(PromiseTask.java:38)\r\n        at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:120)\r\n        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403)\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n        at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n        ... 1 more\r\n```\r\n And at this same time on the Docker host:\r\n\r\n```\r\nJan 11 10:30:27 dockerHost dockerd[134558]: time=\"2018-01-11T10:30:27.637806915-05:00\" level=error msg=\"attach: stderr: write tcp 10.0.0.10:2375->10.99.99.10:37100: write: broken pipe\"\r\nJan 11 10:30:27 dockerHost dockerd[134558]: time=\"2018-01-11T10:30:27.924120839-05:00\" level=error msg=\"Error running exec in container: exec attach failed: write tcp 10.0.0.10:2375->10.99.99.10:37100: write: broken pipe\"\r\nJan 11 10:30:37 dockerHost dockerd[134558]: time=\"2018-01-11T10:30:37.640352382-05:00\" level=info msg=\"Container 0aa82b3ebb261fbb7db167956991a0fe868746cea8ceba74d002257d4c77c1de failed to exit within 10 seconds of signal 15 - using the force\"\r\n```\r\n\r\nWe see that the 'attach container' method is marked as experimental, but aside from the above we have not had major problems with it. I haven't tried replacing my containers with some which would work via JNLP.\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pteichner": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/603", "title": "Docker Plugin is creating issues in log and when manually creating non docker node", "body": " - [ ] docker-plugin version you use: 1.1.2\r\n - [ ] jenkins version you use: 2.73.2\r\n - [ ] docker engine version you use: 17.09.1-ce\r\n - [ ] stack trace / logs / any technical details that could help diagnose this issue\r\n\r\nJenkins exception in the logs show the below error, even when there is no templates added or jobs running that would require a docker container to run in.\r\n\r\n```\r\nTimer task hudson.model.LoadStatistics$LoadStatisticsUpdater@1d3715b0 failed\r\njava.lang.NullPointerException\r\n\tat com.nirima.jenkins.plugins.docker.DockerCloud.getTemplates(DockerCloud.java:388)\r\n\tat com.nirima.jenkins.plugins.docker.DockerCloud.getTemplate(DockerCloud.java:340)\r\n\tat com.nirima.jenkins.plugins.docker.DockerCloud.canProvision(DockerCloud.java:322)\r\n\tat hudson.model.Label.getClouds(Label.java:227)\r\n\tat hudson.model.Label.isEmpty(Label.java:436)\r\n\tat jenkins.model.Jenkins.getLabels(Jenkins.java:2018)\r\n\tat hudson.model.LoadStatistics$LoadStatisticsUpdater.doRun(LoadStatistics.java:395)\r\n\tat hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:51)\r\n\tat jenkins.security.ImpersonatingScheduledExecutorService$1.run(ImpersonatingScheduledExecutorService.java:58)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sporkisfaster": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/602", "title": "Getting error \"Jenkins doesn't have label - testslave\"", "body": "Getting Jenkins doesn't have label testslave error in any job configuration in jenkins. Tried pipeline, freestyle, etc. The job just hangs there without spinning up any container with docker.\r\n\r\nAs for the docker agent template connect methods I tried SSH injection, manually pasting the key, JNLP, etc. Made sure there were no leading spaces in the label name. \r\n\r\nWhen testing connection in the docker plugin I get the version and api version reply from docker so the communication is happening between jenkins and the docker daemon. Not sure what's going on past that.\r\n\r\n\r\n\r\nJenkins: v 2.100\r\nDocker plugin 1.1.2\r\nDocker Version = 17.07.0-ce, API Version = 1.31", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fraz3alpha": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/601", "title": "TooLongFrameException thrown via docker-java for > 1000 containers running", "body": "\r\nWhen I have a large number of containers already running in my target Docker environment the following error is thrown by the Docker plugin (and its dependencies) and containers cannot be created:\r\n\r\n```\r\nJan 10, 2018 9:56:00 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nAsked to provision 1 slave(s) for: jenkins-slave\r\nJan 10, 2018 9:56:00 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nWill provision 'evarga/jenkins-slave', for label: 'jenkins-slave', in cloud: 'test-swarm'\r\nJan 10, 2018 9:56:00 AM SEVERE com.github.dockerjava.core.async.ResultCallbackTemplate onError\r\nError during callback\r\nio.netty.handler.codec.TooLongFrameException: object length exceeds 1048576: 1056644 bytes discarded\r\n\tat io.netty.handler.codec.json.JsonObjectDecoder.decode(JsonObjectDecoder.java:106)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n...\r\n```\r\nThis happens when I get to approximately 1100 containers, and can be matched with a call to `curl ${DOCKER_HOST}/containers/json | wc`, so it is probably occuring during the part of the process where the plugin is requesting out what is currently running so as to obey any caps defined.\r\ne.g. \r\n```\r\n# curl ${DOCKER_HOST}/containers/json | wc\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100 1092k    0 1092k    0     0  22.2M      0 --:--:-- --:--:-- --:--:-- 22.6M\r\n      1    4243 1118431\r\n```\r\n\r\nThere is no configurable parameters as far as I can tell to adjust the size of decoding frame\r\n\r\nEnvironment details:\r\n\r\nJenkins version: `2.73.1`\r\ndocker-plugin version: `1.1.2`\r\nDocker version `17.09.0-ce` via legacy swarm mode (`swarm:1.2.8`)\r\n\r\nMy current level of running containers was not a problem at version 0.16.2, it was only with an upgrade to 1.1.2 where this started happening.\r\n\r\nIn this particular test the 1000+ containers that are running aren't doing anything, they were generated outside of Jenkins and are just sitting there sleeping via a script such as this one:\r\n```\r\n#!/bin/bash\r\nfor i in `seq 1 1000`;\r\ndo\r\n  echo $i\r\n  docker -H :4000 run -d busybox:latest sleep 18000\r\ndone\r\n```\r\nFull output of failing and passing plugin versions:\r\n\r\nv0.16.2 is successful:\r\n```\r\nJan 10, 2018 10:34:52 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nAsked to provision 1 slave(s) for: jenkins-slave\r\nJan 10, 2018 10:34:52 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nWill provision 'evarga/jenkins-slave', for label: 'jenkins-slave', in cloud: 'test-swarm'\r\nJan 10, 2018 10:34:52 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud addProvisionedSlave\r\nProvisioning 'evarga/jenkins-slave' number '1' on 'test-swarm'; Total containers: '1201'\r\nJan 10, 2018 10:34:52 AM INFO hudson.slaves.NodeProvisioner$StandardStrategyImpl apply\r\nStarted provisioning Image of evarga/jenkins-slave from test-swarm with 1 executors. Remaining excess workload: -0.122\r\nJan 10, 2018 10:34:52 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provisionWithWait\r\nTrying to run container for evarga/jenkins-slave\r\nJan 10, 2018 10:34:56 AM INFO com.nirima.jenkins.plugins.docker.utils.PortUtils$ConnectionCheckSSH execute\r\nSSH port is open on 10.127.159.67:40026\r\nJan 10, 2018 10:34:56 AM INFO com.nirima.jenkins.plugins.docker.launcher.DockerComputerSSHLauncher getSSHLauncher\r\nCreating slave SSH launcher for /10.127.159.67:40026\r\nJan 10, 2018 10:35:02 AM INFO hudson.slaves.NodeProvisioner$2 run\r\nImage of evarga/jenkins-slave provisioning successfully completed. We have now 3 computer(s)\r\n```\r\n\r\nv1.1.2 fails:\r\n```\r\nJan 10, 2018 10:43:49 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nAsked to provision 1 slave(s) for: jenkins-slave\r\nJan 10, 2018 10:43:49 AM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nWill provision 'evarga/jenkins-slave', for label: 'jenkins-slave', in cloud: 'test-swarm'\r\nJan 10, 2018 10:43:49 AM SEVERE com.github.dockerjava.core.async.ResultCallbackTemplate onError\r\nError during callback\r\nio.netty.handler.codec.TooLongFrameException: object length exceeds 1048576: 1049308 bytes discarded\r\n\tat io.netty.handler.codec.json.JsonObjectDecoder.decode(JsonObjectDecoder.java:106)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:72)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33)\r\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nJan 10, 2018 10:43:49 AM WARNING com.nirima.jenkins.plugins.docker.DockerCloud provision\r\nBad template 'evarga/jenkins-slave' in cloud 'test-swarm': 'object length exceeds 1048576: 1049308 bytes discarded'. Trying next template...\r\nio.netty.handler.codec.TooLongFrameException: object length exceeds 1048576: 1049308 bytes discarded\r\n\tat io.netty.handler.codec.json.JsonObjectDecoder.decode(JsonObjectDecoder.java:106)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:72)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33)\r\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:297)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:413)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9595367141243acab3317b15dc30326206178664", "message": "Guard against null image tags during pull logic\n\n  - In the case where there happens to be a badly stored image on the\n    target host it is possible that the image.getRepoTags() call will\n    return null. This causes an exception to be thrown during processing\n    which can only be recovered by cleaning up the Docker host. In the\n    case where you either use a host/swarm managed by someone else, or\n    share the resources with other teams, you cannot always guarantee\n    all hosts will be clean, so it is important to include this check"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46281040", "body": "I'm really keen to get hold of this fix/enhancement. Is it expected to be rolled into a release shortly - or should I try to manually build a package to install?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46281040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "gamma": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/594", "title": "Jenkins gets stuck when there are no resources to schedule a container", "body": "\r\nIf you get some troubles with docker-plugin, please report\r\n - [ x ] docker-plugin version you use: **1.1+**\r\n - [ x ] jenkins version you use: **2.96**\r\n - [ x ] docker engine version you use: **Version = swarm/1.2.6, API Version = 1.22**\r\n - [ ] stack trace / logs / any technical details that could help diagnose this issue\r\n\r\nI have my docker cloud images configured to only spawn 5 to 10 instances max. There are several jobs that start 5+ jobs at once. The first jobs get started until the limit is reached and Jenkins would wait for resources being available.\r\n\r\nStarting with docker-plugin 1.1 this does not work as expected. The jobs get stuck. Even stopping and starting new jobs manually does not work, only a restart of Jenkins.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/20c97a890c73868d2539fe622e5a50879d17db68", "message": "Prefix and Suffix have been reversed."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3bb3552f71b12058f21983c8a43b7f42735db761", "message": "Do not require the port binding for the ssh service to be on the 0.0.0.0 address. (#454)\n\nThe problem is that Windows Server 2016 docker implementation does not support \"host IP addresses in NAT settings\" - Removing the fixed IP solves the problem and makes no problems with *NIX based servers."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spbkelt": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/581", "title": "java.io.IOException: Read end dead permanently - master disconnects docker attached agents", "body": "jenkins: 2.73.3\r\ndocker-plugin: 1.0.4\r\n\r\nWe are facing constantly issue with disconnecting master -> agent\r\n\r\n```\r\nCannot contact DLB1-68a3142a64ab: java.io.IOException: remote file operation failed: /home/jenkins/workspace/FirstRain Projects/RC Builds/Tools@2/tools/parent_tools at hudson.remoting.Channel@72a90e54:DLB1-68a3142a64ab: java.io.IOException: Read end dead\r\n```\r\n\r\nJenkins master logs:\r\n```\r\nDec 14, 2017 2:45:11 PM INFO hudson.slaves.ChannelPinger$1 onDead\r\nPing failed. Terminating the channel DLB1-68a3142a64ab.\r\njava.io.IOException: Read end dead\r\n\tat java.io.PipedInputStream.checkStateForReceive(PipedInputStream.java:262)\r\n\tat java.io.PipedInputStream.receive(PipedInputStream.java:226)\r\n\tat java.io.PipedOutputStream.write(PipedOutputStream.java:149)\r\n\tat java.io.OutputStream.write(OutputStream.java:75)\r\n\tat hudson.remoting.ChunkedOutputStream.sendFrame(ChunkedOutputStream.java:93)\r\n\tat hudson.remoting.ChunkedOutputStream.drain(ChunkedOutputStream.java:89)\r\n\tat hudson.remoting.ChunkedOutputStream.write(ChunkedOutputStream.java:58)\r\n\tat java.io.OutputStream.write(OutputStream.java:75)\r\n\tat hudson.remoting.ChunkedCommandTransport.writeBlock(ChunkedCommandTransport.java:45)\r\n\tat hudson.remoting.AbstractSynchronousByteArrayCommandTransport.write(AbstractSynchronousByteArrayCommandTransport.java:45)\r\n\tat hudson.remoting.Channel.send(Channel.java:671)\r\n\tat hudson.remoting.Request.callAsync(Request.java:229)\r\n\tat hudson.remoting.Channel.callAsync(Channel.java:937)\r\n\tat hudson.remoting.PingThread.ping(PingThread.java:106)\r\n\tat hudson.remoting.PingThread.run(PingThread.java:86)\r\n\r\nDec 14, 2017 2:45:11 PM WARNING hudson.remoting.Channel close\r\nHaving to terminate early\r\njava.io.IOException: Read end dead\r\n\tat java.io.PipedInputStream.checkStateForReceive(PipedInputStream.java:262)\r\n\tat java.io.PipedInputStream.receive(PipedInputStream.java:226)\r\n\tat java.io.PipedOutputStream.write(PipedOutputStream.java:149)\r\n\tat java.io.OutputStream.write(OutputStream.java:75)\r\n\tat hudson.remoting.ChunkedOutputStream.sendFrame(ChunkedOutputStream.java:93)\r\n\tat hudson.remoting.ChunkedOutputStream.drain(ChunkedOutputStream.java:89)\r\n\tat hudson.remoting.ChunkedOutputStream.write(ChunkedOutputStream.java:58)\r\n\tat java.io.OutputStream.write(OutputStream.java:75)\r\n\tat hudson.remoting.ChunkedCommandTransport.writeBlock(ChunkedCommandTransport.java:45)\r\n\tat hudson.remoting.AbstractSynchronousByteArrayCommandTransport.write(AbstractSynchronousByteArrayCommandTransport.java:45)\r\n\tat hudson.remoting.Channel.send(Channel.java:671)\r\n\tat hudson.remoting.Channel.close(Channel.java:1389)\r\n\tat hudson.remoting.Channel.close(Channel.java:1356)\r\n\tat hudson.slaves.SlaveComputer.closeChannel(SlaveComputer.java:731)\r\n\tat hudson.slaves.SlaveComputer.access$800(SlaveComputer.java:96)\r\n\tat hudson.slaves.SlaveComputer$3.run(SlaveComputer.java:649)\r\n\tat jenkins.util.ContextResettingExecutorService$1.run(ContextResettingExecutorService.java:28)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\nDocker container is live and running at the same time\r\n```\r\ndocker ps | grep 68a3142a64ab\r\n68a3142a64ab        ***/ignite/firstrain/jenkins-agent:1.0                               \"/bin/sh\"                23 minutes ago       Up 23 minutes                                                                                                                                                                                                               dreamy_bardeen\r\n```\r\n\r\nI can even connect and run command inside it\r\n```\r\ndocker exec -it 68a3142a64ab bash\r\n[jenkins@68a3142a64ab ~]$ ps aux\r\nUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\r\njenkins        1  0.0  0.0  11780  2704 pts/0    Ss+  14:24   0:00 /bin/sh\r\njenkins     1554 19.7  0.0  11784  3056 pts/1    Ss   14:48   0:00 bash\r\njenkins     1572  0.0  0.0  47456  3324 pts/1    R+   14:49   0:00 ps au\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/560", "title": "Add support of CpuQuota in container settings", "body": "You have support of CpuShares, but there is no CpuQuota support. So we are not able to limit cpu resources actually. Can you add it please?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jackalsh": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/572", "title": "Migration from 0.16.2 to 1.1 troubleshooting", "body": "We are upgrading docker-plugin from version 0.16.2 to 1.1\r\nAfter upgrade, all current container template configurations from Manage Jenkins -> Configure System just disappeared. Can you please tell me if this is a known issue because of some back incompatibility?\r\nThanks in advance.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mohaijiang": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/554", "title": "can not use jenkins parameter in image label", "body": "![image](https://user-images.githubusercontent.com/3366709/32772331-78c61958-c960-11e7-8c7b-aed45838abfa.png)\r\n\r\n - [x] docker-plugin version 1.04 \r\n![image](https://user-images.githubusercontent.com/3366709/32772159-fcb0b710-c95f-11e7-9f08-112235580afd.png)\r\n\r\n - [x] jenkins version 2.73.3\r\n - [x] docker engine version 1.12.6\r\n - [x] stack trace / logs / any technical details that could help diagnose this issue\r\n```\r\nDocker Build\r\nDocker Build: building image at path /var/lib/jenkins/workspace/nbo-cicd-5.0.0/admin\r\nStep 1 : FROM java:8-jre\r\n\r\n ---> e44d62cf8862\r\n\r\nStep 2 : VOLUME /tmp\r\n\r\n ---> Using cache\r\n\r\n ---> 62d3fda4ed65\r\n\r\nStep 3 : ADD target/nbo-cicd-admin-*-SNAPSHOT.jar app.jar\r\n\r\n ---> 96d41cdccf5b\r\n\r\nRemoving intermediate container 1aeead391387\r\n\r\nStep 4 : ENV JAVA_OPTS \"\"\r\n\r\n ---> Running in 22801adf2401\r\n\r\n ---> 2e7b8006a892\r\n\r\nRemoving intermediate container 22801adf2401\r\n\r\nStep 5 : ENTRYPOINT sh -c java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar\r\n\r\n ---> Running in a24c73924d70\r\n\r\n ---> 5804290e1167\r\n\r\nRemoving intermediate container a24c73924d70\r\n\r\nSuccessfully built 5804290e1167\r\n\r\nTagging built image with registry.one2.newtouch.com:5000/newtouchone-test/nbo-cicd-admin:${BUILD_NUMBER}\r\nERROR: Build step failed with exception\r\ncom.github.dockerjava.api.exception.InternalServerErrorException: {\"message\":\"invalid tag format\"}\r\n\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:109)\r\n\tat com.github.dockerjava.netty.handler.HttpResponseHandler.channelRead0(HttpResponseHandler.java:33)\r\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:241)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\r\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1334)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:926)\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:134)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nBuild step 'Build / Publish Docker Image' marked build as failure\r\nFinished: FAILURE\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ndeloof": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/549", "title": "introduce composition to define Docker-based Agent", "body": "Jenkins `slave.jar` runtime and remoting protocol introduce significant constraints on the docker image one can use to define a Docker-based build agent.\r\nUsing a pod-like[1] composition one could define a build agent by combining a remoting container with arbitrary docker image (which could not even bundle a JRE), as well as some additional resources like a database, selenium browser, etc.\r\nGrouping a set of containers sharing the same net namespaces, they can access each others as localhost:xx, share volumes, etc. \r\nSee docker-slaves-plugin as a PoC\r\n\r\n[1:] https://kubernetes.io/docs/concepts/workloads/pods/pod/. ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5a2a123cd808a9c82d154cbcc22ef906a6a97907", "message": "move back container lifecycle management in template#provisionNode\nJNLP command can be built based on node name\nwe just can\u2019t guess container ID to use it for node name"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/efd14ff05b32c3208a817bccae5495b5b32a2f64", "message": "fix #606 prevent NPE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/0708302ed8dcaab2c8c27ae0920f3018512ef8f9", "message": "expose docker related env variables as computer\u2019s environment\nfix #595"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9109ed38359aaeca0850f42cb24527076c95908a", "message": "let user configure registry URL for Auth\nfix #589"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/142b73c13e4e847fd8cd7b16596060823fef954d", "message": "attempt to fix #592"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5628ea225e2c5a4259f70d7eb340d482e40159ec", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e6c593d3342ff5b81d6fed0cad8f7cd94777836c", "message": "[maven-release-plugin] prepare release docker-plugin-1.1.2"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/50eec35a641e16901e503d68ed353e1176eb7bfd", "message": "CI windows node don\u2019t have docker4windows"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b67801b511a394b497c51b26f4fc3341bf217916", "message": "only active when jerkins.version=2.89.1"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f2f1af6fa08d876b42506ea1cde0cba2c2d02141", "message": "back to 2.60 as minimal requirement"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cf206f152b11a06367e229a07f50f9e150ef0c44", "message": "workaround CommandLauncher missing as we test on 2.89LTS\nthanks to @bulanovk"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9f655140253bae82d7793148eb2eb5754966ef8c", "message": "get test to run on OSX, Windows and Linux\n\nSigned-off-by: Nicolas De Loof <nicolas.deloof@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b9b9d514926bf782177504465576f827f9a37749", "message": "change log"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8563d678312a9414f1f875bd9df22d8b6e85291e", "message": "made a mistake"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/222be01332a19a5cb0d8793eb5773cd980834ae7", "message": "protect against NPE (#580)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/bca9036fb517069165772fcae3996a74114505a1", "message": "Build Action to document container informations (#576)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8f1144fb4982c0c1645d492258136f5735745dd0", "message": "don\u2019t run test relying on docker.sock when platform is Windows"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5de5765a3302b6b1613666a1f4d7340124060e5b", "message": "dead code"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b906c37f0add6a4a44fb4858aa8ff9de0ebeeabe", "message": "revert host key injection (#568)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/bb89bd95848b39ba598faa8e563a27465c1e8073", "message": "number executor doesn\u2019t make sense for a \u00ab\u00a0use once\u00a0\u00bb agent"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/57978e7583b69ed05f039599a05a6f3c63c289e8", "message": "EnvironmentVariablesNodeProperty do not implement `equals()`"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c12a225432da755b5cf99d59dd6c6ce04217d530", "message": "close #553 data binding for NodeProperties"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cb75470432078046f75a89b777e3aedf7a76624d", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/80f3f9ea3b918dff5072084b9e517bf7b5dcca97", "message": "[maven-release-plugin] prepare release docker-plugin-1.1.1"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/0b41fb9a044db8d68fd4e0b4b06269f999a8533f", "message": "change log"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5547465d601ef4eb032ffa4d2d95f38b6e082982", "message": "test JNLP and Attach connector"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/263964f1dc89bee80e63b541db62fddb015ba2f3", "message": "acceptance test for SSH connector"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3761e475dcb2249102e1261f1c2e89592a2c35d2", "message": "ui data binding doesn\u2019t use configured propertydecriptor and need to know target type"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/2d0dda5a20401c34ad25dbf8df2b2948365b4f8e", "message": "use default timeout of 10 minutes to avoid JENKINS-47953"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1b8be15a14f99073c566ebc4fe4330b5bf578e0a", "message": "deprectate DockerCloudRetentionStrategy\n(#569)\nautomatically convert to DockerOnceRetentionStrategy"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c2709d76ff7d2769b1b6f034270d8922253e626f", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8de03a4cc0381adb7c7a19eddedc400715dff936", "message": "[maven-release-plugin] prepare release docker-plugin-1.1"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6c15c1a27856b7cd16ecfda5a70e73129a27a0ac", "message": "move to io.jenkins.docker"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c089ecfc56693d80bf109ae8ee4225df8b79849e", "message": "credentialsId is actually optional"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3e29e7bfb16c63d418459b64e7821267f2227117", "message": "fix snippet generator for dockerNode"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f4bdfdff65fdfc1f7815172c9ffc1dffca3d3fe6", "message": "move docker-plugin to repository root"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3519e92523affa8e89a7cd95c996e691471be98a", "message": "run node provisioning outside CPS thread"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f2231e26004cc38ac5648c6e72bf15c3cc18aad3", "message": "computer"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a115a83eed3d480e1f41f6603641a7e9b1111cf6", "message": "obsolete"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/ccd5a1e0d8ba2e2f35a41973cc854041c3b174a9", "message": "missing enum label in UI"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/92d366e580878b07b334e717d2b9b4b481d959b0", "message": "container configuration not set in config UI (#559)\nadded missing @DataBoundSetter\nadded test-case for configuration roundtrip"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c4e4e798434551801c1a7c470fa2a246a1d7c398", "message": "group IP retrieval in it\u2019s own method"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f7c78e80d7f72be5bab8349993c9b98ace3670c3", "message": "promote \u00ab\u00a0attach\u00a0\u00bb connector"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a4b52e38c2b581962f50712998fc83159b2dcb44", "message": "reviewed ssh external IP detection (#552)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/4b48131d44358b136aa176d9423a53fb15fdc7bf", "message": "remove \u00ab\u00a0terminating\u00a0\u00bb flag which prevent node termination but the first one"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6d165f1370b4ca3982ba8c3ebafc96d264f9e71b", "message": "use PEMEncodable"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c58e36c31abf10ee9ba5c2ddcd0b952c50701248", "message": "inject host_key for SshHostKeyVerificationStrategy (#555)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a527a26eff4c032dc7071238ef0e5df947b7c06c", "message": "offer option to configure SshHostKeyVerificationStrategy (#555)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5eb85ca5e2a5ac3e8e80bd4900011e92caab9d52", "message": "additional SSH configuration properties"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8ab1550994494df44c617cbb2a38f3fc2ea797fc", "message": "avoid exposing DockerTemplate in new codebase"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/7675298c0e8bc4ac1759f571ea549424bdaacf1b", "message": "use direct socket\ndocker-java in attached mode takes 3 minutes to establish remote channel (sic)."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8ee6d15c5f1090b9c5971964a4a6fd358d4cf356", "message": "detect launch failure while container is gone, then cleanup"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c630d190933923018dbcb304a0f97307b651737a", "message": "bootstrap some information page for a docker node"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/bbde497f6be17e9be8e86350f53e5aec2605d978", "message": "remove \u00ab\u00a0mappedFsWorkspace\u00a0\u00bb feature which is a non-sense as docker might not run on same physical host"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/dd79e0ff86d8d4b98f0f45543ae8f630c3b9564a", "message": "DockerTransientNode can\u2019t be created without a containerId"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/ce2971e519d82989c10beeb8070308b3e387c421", "message": "not required anymore"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/36e085ea796d86bdd40e7ee4507c7430718b152a", "message": "fix provisioning broken during refactoring"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/fbb357738ded820daf37c65a23edc789b052dbeb", "message": "use OptionalJobProperties\nmake DockerJobTemplateProperty a full job property"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5070b97dc7da10e2100b61062cb16d5bb1ea62ef", "message": "Moved \u00ab\u00a0commit container after build\u00a0\u00bb logic in DockerJobProperty"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/389f2f4fce7fc4596a65d5a44e721c191f2cbac4", "message": "workaround Restricted(NoExternalUse)\nremove obsolete jelly view"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/7a4953a0f098f89e51fc397d7df61a1329c8ecfe", "message": "deprecate DockerSlave and introduce DockerTransientNode\nreduces amount of shit we sent on remote channel as class references"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9bf481aac670959542dcb8f576e1e803b422b895", "message": "upgrade to latest Jenkins and dependencies \nworkaround for resurrecting JENKINS-39669"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c9750f04a175d4dde9ab27b7324461956afbc1a2", "message": "use a callback"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/933494b852aee999fd22ab88abbc0fe0705fff38", "message": "[WiP] introduce \u00ab\u00a0dockerNode\u00a0\u00bb pipeline support\ninspired by https://github.com/jglick/ephemeral-docker-agent-plugin"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9471fa4897f6170cbe7ec43ec667f22587461317", "message": "remove connectors dependency on DockerCloud"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a52cba317e86618eee32e58d1484872eb1792168", "message": "introduce DockerAPI to host connection details to a docker API endpoint"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/7cc747698ece739952d18d1146e2b75bb4f3f03f", "message": "remove getDockerTemplateBase indirection"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6f84b04c56981dc7ba935977c195f22a5836a9ba", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/51da07c3994eafcd945dc280b0d3f8890efe94bb", "message": "[maven-release-plugin] prepare release docker-plugin-parent-1.0.4"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/058106236a2c84260b5ebd372d37c6e5d36df8f1", "message": "prepare 1.0.4 release"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b07deb6f15362a12ad07f308b3f9b9951774594b", "message": "workaround for #546"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b574ba2a30dfcdd0f3cecbba4065d456ef4e3fa2", "message": "with JENKINS-39232 we need to referene a JNLPLauncher (#543)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/d575d551812847d2237842119090e3c67b46db7d", "message": "fix #542 configuration lost migrating from 0.16.x to 1.0.2"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/910e53af70af779ea0e68846432ac7f2c8b12d09", "message": "Run JLNP process from launcher (#543)\nNot doing this PlannedNode#future never complete and we get a phantom planned node to block provisioning for more agents.\nFor same reason provisioning doesn\u2019t have to register the newly created Slave."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/dc296ca053c7fa9c50de1b9b26f2d014a3fca239", "message": "diagnostic code for (#543)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/16a46cf50c865eba45d0a3ba7e5882498129789f", "message": "use a custom label to enforce job template is used by assigned task in queue"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f9743724cadfa89de7b7710b67af5f258895b2b0", "message": "select docker cloud from a list"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1c7a4c5cf09ddd1335a9c144948a75f91fca0a0e", "message": "1.0.3"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/89e60667da297ad8e9a3d484820f5c65f0a4b84e", "message": "more explicit display names"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1b8a1d9255fdeb80445930ccd8fdc94cb763606b", "message": "[JENKINS-35554] use credentials 2.1+ API"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/7ff97ef17a61cf0874ceaf6b673e4b2d751164a8", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6b6cfb56e4aaa6f3eeace4b40bf15e5b2019e664", "message": "[maven-release-plugin] prepare release docker-plugin-parent-1.0.2"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1355d93899f7963d1ee8cae9ad367230312d0e0c", "message": "fix DockerImagePullStrategyTest"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/d342195d1107bb7c69a0084dae855c2b5362017a", "message": "SSHLauncher can\u2019t retrieve custom Credentials after restart"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/d3fee09f684b5814cd5930f3cbd7995b59663c68", "message": "run docker exec within Launcher so agent can be restarted"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/0ef4cfcecb62b999e7bbd2b2ca5ac82cd00ce650", "message": "refactored launchers \nAgent provisionning is managed by DockerCloud with hooks for connector to fine tune the container, then connector provides a ComputerLauncher. This launcher can be reused to reconnect to this same agent, typically when jenkins is restarted while a pipeline runs on this docker agent."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/dc40c8723ef052b9e626b449b8d29430e5bc70cd", "message": "changelog"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a20fce4b969bf15cac50319eeed0fc7788f672fd", "message": "lookup credentials with SYSTEM authentication (#535)\nJenkins.getAuthentication() is only set in the context of a builder, which also mean we need to revisit how those access AuthConfig\u2026"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/60d40bfb8a7388d8e4cc6d458d12ea085496932b", "message": "wait for SSHD to be ready (#536)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/08110044284c01f97907b4f5a274afc0ede5dd00", "message": "revisit SSH launcher UI for extensibility"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/d15a3f148c3c8765a3d1a329f89db84ab3dd31fc", "message": "run container with configured user (#534)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/12b8f54b269a6ae1989176f6d887787cdbaae51f", "message": "option to connect as non-root user (#530)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6b7c23c751d1208429d86a3bb474d13c8d19c293", "message": "some clarification on help tips"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/185041e7f18b6e771274b1de662bb77ff16ad44d", "message": "useSSHkey option not saved (#530)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/aab7c9c1ef9129aadd3a5eb50d35c37952853b90", "message": "change log"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c57be50c635fc2353dff24a5516d419b21ff029d", "message": "log container inspect and throw error if Exited"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3d4baa667560b94f9d75bfcff06c8d66323d524e", "message": "wrong title (inverse meaning)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3ea135b59ff37763ac8c6ffbd771fd72b7de8ba3", "message": "fix auth token generation (#524)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/d95582d7d041322315364e54304311bdc830e8c0", "message": "prevent NPE (#524)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/42c709f1f10ec190ab64c7a1696875faab8e14b8", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/86473f6a64d75651f273c0cd441f15478ea22d8b", "message": "[maven-release-plugin] prepare release docker-plugin-parent-1.0.1"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/fed8e55f0d2679cf676cdccb41e28e046b9d8785", "message": "changelog"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1e3fdaa900b72854fc61af40baddcff3e42bacc5", "message": "option to disable SSH key injection and use configured SSH credentials (#529)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a4e2daa586ac6334a2dd9f9b5edbe4126b31649c", "message": "removed by mistake"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5962a2de1eaba89f210ca92905b13c8150a99455", "message": "cleanup"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/4687463149ec72825b5922bb0a05a33266090d01", "message": "ignore missing container on cleanup"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/577fa4838a6df1d4d310075b64a3755414c6017e", "message": "I\u2019ve been confused by docker-commons API\n\u00ab\u00a0token\u00a0\u00bb is actually the auth base64 storage for credentials\nsee https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/cli/cli/config/configfile/file.go#L214"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1b3039c87c9399ee91c9de30eb1f57ce57caa63d", "message": "connect JNLP agents using computer\u2019s JNLPMac (#526)\nrequired to connect to masters with authentication"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3576ef12864c31a1152e5622ab24b28d5725b91e", "message": "select cloud from a list, not plain text name"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/4a87fc5c826cc1d051e66bf6e3cd6eaac712b2fb", "message": "only configure credentialsId as we don\u2019t rely on registry URL"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/4ede359d4f7bd90a7f03f6f160fd2b1e90278aca", "message": "docker-java 3.0.14 released"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a0d33d0a41fa07d347c2ae48c1df5b0593d7a981", "message": "changelog"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e3ebd78b1d7b05fbeb2b6386605a8159e41172ab", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/dc429500b8e7ab21f3ccf5dd79d85588cb61e03c", "message": "[maven-release-plugin] prepare release docker-plugin-parent-1.0.0"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/0c77dc39a0661e5e358e0f1477301f8c1f31f3a9", "message": "resolve credentials based on current ItemGroup context"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/942f406e9ad4e8b4dcc147b77662e445af00fd47", "message": "registry authentication using username/password\nsee https://docs.docker.com/engine/api/v1.32/#section/Authentication"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/425bb1f12b9dc57789cc88857ad2518a1614f988", "message": "fix missing username for registry authentication (#519)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/2da60eace95674ef3d92475ba715fac7c3ad6577", "message": "fix build and push (#519)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8a029729d1010c0c222893d23ca135f1dd89c9f3", "message": "use of an EmptyList breaks addTemplate() with UnsupportedOperationException (#492)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/7b6d0f876d02f30f9822adfb2d2218d36d8e3fac", "message": "check for image after pull\nas detection for pull status based on message is fragile on swarm"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f28f1f182efd84b4b6cddb9c296e2e4812c17fad", "message": "fix template environment UX (#413)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c8dec24774651af43420ee56cfb6eb0cb11b6381", "message": "select cloud from a list"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cce39d1424bc91965e72ad5861737c94a247dc6c", "message": "java.lang.StackOverflowError"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a0f0d6edbe81e95b29c5cf0285c78b7fc2fe5ce8", "message": "migrate legacy DockerDirectoryCredentials to docker-commons\u2019 DockerServerCredentials (#520)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/7f8157b3daa0e3228e009befcc836d8bd433bcaf", "message": "generate docker build context tar on agent, but run \"docker build\" API call on master (#519)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/32643bcf2791c37bee06cd0f36a147f1ffab5f87", "message": "data binding was broken by optionalblock"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/127d2cd76f99acd53a493a993e228d5fd615eac2", "message": "\u00ab\u00a0idleMinutes\u00a0\u00bb used as attribute name hide parent class attribute for Xstream unmarshaling"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/ffa30f044e22263465d6a6950e739d19291bad62", "message": "move \u00ab\u00a0docker build\u00a0\u00bb to a static class to avoid unexpected references to nonserializable classes (#519)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6ab06da819b856fbfe8cbc5d3bd66154ff002d68", "message": "Add support for environment variable (#435)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9cd0f050b4f7c9add89cc0bda9ec874c323af514", "message": "fix use of deprecated serverURL (#518)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1823c66fe47b53ee65436dcc0ee9b5aaf59f2ecc", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/aee995a913d86925f74f969e3872c44d253fa02d", "message": "[maven-release-plugin] prepare release docker-plugin-parent-0.18"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/373ee96863345b5f12658d03cebda80bcdd663bd", "message": "only expose our own RetentionStrategies (#364)\nnext step will be to hide this all and manage cleanup internally"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c88429f93e6a46eff1b2b97e58b38e248ed66ec9", "message": "setting default timeouts to infinity is bad (#445)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/ae115b1c4aa1738701b776ba3469b14793f1b8ef", "message": "remove obsolete swarm slave.\nnode running container could better be retrieved using `docker inspect -f {{.Node.Name}}` if this is the feature we want"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/847f63730e41387b2abdf90e0674db9593b660d5", "message": "on swarm standalone the pull completion message might not be the last received one"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/edcb20518d3da6912958da54e67253571cea9a70", "message": "fix support for DockerServerCredentials"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/fad7f3d08e3941d76aebd713cd9379134d0d7350", "message": "fix a regression in SSH launcher (#517)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/29773ba99604da4e77e3df4b1d42b9bd04d5cab2", "message": "Make template sections collapsible"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/ab84a7b7234da964e1182d65786297384d3dec04", "message": "obsolete"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6892a3acaed7738b7e448230af42994a7ddffe10", "message": "Create ISSUE_TEMPLATE.md"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9a272a4b929979d979bd3ebbb0a04134ccfeaf06", "message": "Token Macro is actually a required dependency (#463)"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/acd5ce094540ef0d8e919a9f311e45aab6d186ec", "message": "Update CHANGELOG.md"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/febabd5179f242e529df642ab0b964a951352f7e", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5678e14cb0328e67853c792eb649843dd373469a", "message": "[maven-release-plugin] prepare release docker-plugin-parent-0.17"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f11890dc12550aa239d06050daada6af3093f980", "message": "obsolete configuration upgrade tests\nnot needed as we already require reconfiguration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e9ba5f2fb5b1d387351fcb07df2acc6c5ceade4e", "message": "configure registry for build/publish"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/34cde3861c7768dd80570be26cc3804508af045b", "message": "next version is 0.17"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1eadeb196d7ee7ba482f6590e9b851dc7e9b0c68", "message": "builder to set cloud templates must run as ADMIN.\nremove migration code as we aren\u2019t backward compatible here"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/4651a261f43a4a138a5c3ad20c53ae680ca0c8c6", "message": "replace obsolete DockerRegistry with DockerRegistryEndpoint"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cabd1d48101bc794fbd08a6a55f96315d08cf5cd", "message": "configure DockerCloud with endpoint and registry"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/d452d4f92ed4206556b8bbcedefd7474f6cee793", "message": "introduce docker-commons\nwill require job reconfiguration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e0eb4937bd7b721ce51ed070bad650df58ecc34b", "message": "update maitainer list"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/810055bc972f4e8c6077750c5d4ea2101a903a89", "message": "we now rely on docker-java-api-plugin"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5eb7b531e5cb915c68b553304fcd8faec9fd0282", "message": "remove stdout debug\nset container ID"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/33d5bbd60b135a2dc4896b5d20d7cb36d6cf0bb9", "message": "fix broken import"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/ff9c08e25b5d04d6848826434d745d3ffb9946d0", "message": "QueueListener to ping NodeProvisioner when a task enter the Queue"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5a27e2ee1400968a88c3cc30b17854c8ebd0084c", "message": "custom NodeProvisioner.Strategy to reduce provisioning delay"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e437000d709c28c8efe3a6d85f587e2ab269dd79", "message": "[JENKINS-42187] don\u2019t call docker API as we own Queue.lock"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/84fa7fdeb705092bd1e807415d971d729f0c0364", "message": "[JENKINS-25033] prevent credentials leak"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f7899058b944b9bc40b0510d83f2f860a319a814", "message": "prevent NPE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/145cc5e0b24b3ec615e00bcd14604f5ace08bcdd", "message": "make attached launcher last on the list as experimental option"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/73cb70c2c651189121cb0754a6118c8aec37a78e", "message": "missing import"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e734d82b27867a7af3a64c1ab01cf74073686ce2", "message": "docker-java-api hosted on jenkinsci and released"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/63ff3b252d58748c52700b889e898464fb2d16bc", "message": "fix #478"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9bedfb8d8116d49922a57d536ff7b7b9bd6ec007", "message": "open stdin for interactive stdin/out channel"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5cc29816e80ea1dfba937289ecbb0e44f1f50be1", "message": "update change log"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/56251bbabb7d3874e0bd18b870bc6eec2ab3bc0f", "message": "switch to a recent LTS codebase"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6979cc9ef3f58b70a59da4a52752f8b68947845e", "message": "simpler"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/41ae3dcd48ee4cab8c1f2de25486fa258ace2677", "message": "stop using a shaded docker-java\ndepend on an API plugin to provide this dependency"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/81a7ea93ba06e8b61cdeea8a7086d692c1f158c0", "message": "workaround missing splitToList in guava 11"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/32dd30c31a51b486b9fb7537a6f9e829ecd6a985", "message": "imports cleanup"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/53758fe45b9a64d39ed41b944f15c18e352384d7", "message": "remove httpclient dependency for just trivial string replacement"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3339bf16686adb063f1864de2b51f0c1d2611ff4", "message": "avoid use of shaded guava for methods available in jenkins-core bundled guava version"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5e5ef1d47a9afcc2fd0d09c6dc9a66f8642310cb", "message": "explain prerequisites based on selected launch method"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/afa442271921083c3c9d1252eff8ca563298ff04", "message": "introduce AttachedDockerSlaveProvisioner"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/2fa8f321aa4dad616d8da3a8d0e29035f93eab7c", "message": "remove obsolete code"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a9b1b8378370563ed7ac145cbec700f7a81e7e96", "message": "DockerSlaveProvisioner implementation for ssh"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5d9a3249853f007d136ab68aece7ade85a3a7584", "message": "introduce DockerSlaveProvisioner\nwill give more flexibility on container setup so various agent setup strategies can be implemented\nJNLPDockerSlaveProvisioner require DockerSlave to be active on Jenkins so connection can be established when container starts, while SSLDockerSlaveProvisioner do require the container to be started before the DockerSlave is created and SSHLauncher establish a connexion."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/4d26bf7cf0bd6ebed4a66d24c0513d2e49cbfd92", "message": "duplicate Descriptor instances registered as Extensions"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5b9c31e5604446e7cb0ebf1c56a0d8057793de82", "message": "Create Jenkinsfile"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/71a5f515f208ba234d552e1aea20923528ac8e86", "message": "docker new logo"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/7c837f0879a9fb02df794bea8491b285240aacc1", "message": "remove obsolete workaround for registry v1 API issue"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/264e60633a6cf31295f80fc223012d3428b5092e", "message": "many javadoc errors to be fixed"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6c5f008a63b57f26baac217c914efe80b76ef9d9", "message": "fix upper bound dependencies errors"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3dff6769b4e12a51d73e87745612c75d1eb7488f", "message": "moved plugin specific stuff into plugin\u2019s pom.xml"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6a0e21e2604d14a83195ad22e92d10ef3211de79", "message": "upgrade to latest docker-java"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9421e3d571008ada10e1c9ac28e2fd1adb0859aa", "message": "make DOCKER_HOST optional (#450)\n\nseems the initial intent was to let container access it's containing host, but actually this prevent a build to rely on /var/run/docker.sock bind mount. Also, there's no guarantee the hostname/ip as declared in jenkins for connectivity from master is relevant from container."}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12046630", "body": "Did you encountered any special issue with JNLP launcher ?\nI'd like to rely on this for kubernetes-plugin\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12046630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "dtothefp": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/491", "title": "bad Volumes Option UX, require multiline input", "body": "Potentially similar to https://github.com/jenkinsci/docker-plugin/issues/206 but wanted to isolate this issue and see if I'm missing something with how the \"Volumes\" options works under the \"Container Settings\" menu.\r\n\r\nI'm running a Jenkins Master using the official [Jenkins Docker image](https://hub.docker.com/_/jenkins/). I'm bind mounting the docker socket into the Jenkins docker container as suggested here https://jpetazzo.github.io/2015/09/03/do-not-use-docker-in-docker-for-ci/:\r\n\r\n```yaml\r\nversion: \"2.1\"\r\nservices:\r\n  jenkinsdata:\r\n    build: ${DATA_CONTAINER}\r\n  jenkinsmaster:\r\n    build: ${MASTER_CONTAINER}\r\n    volumes:\r\n      - /var/run/docker.sock:/var/run/docker.sock\r\n      - ${DOCKER_BIN:-/usr/bin/docker}:/usr/bin/docker\r\n    volumes_from:\r\n      - jenkinsdata\r\n    ports:\r\n      - \"50000:50000\"\r\n  jenkinsnginx:\r\n    build: ${NGINX_CONTAINER}\r\n    ports:\r\n      - \"80:80\"\r\n    links:\r\n      - jenkinsmaster:${MASTER_CONTAINER}\r\n```\r\nThis works fine for using `docker` commands within builds running on master.\r\n\r\nNow, I've switched to running jobs on a slave server using the Jenkins docker-plugin using the `evarga-jenkins-slave` image.\r\n\r\n<img width=\"1513\" alt=\"screen shot 2017-05-08 at 11 53 00 am\" src=\"https://cloud.githubusercontent.com/assets/4656726/25820098/064a4c5c-33e5-11e7-9311-91d27d88c143.png\">\r\n\r\nA simple freestyle build works fine on the slave, but bind mounting the docker socket into the slave container using the \"Volumes\" option under \"Container Settings\" does not seem to work if I do `which docker` in the build it fails. Maybe there is something I don't understand about mounting volumes in the docker slave or am passing config incorrectly?\r\n\r\n#### Jenkins Version\r\n```\r\n2.32.2\r\n```\r\n\r\n#### Docker Version\r\n```\r\nClient:\r\n Version:      1.13.1\r\n API version:  1.26\r\n Go version:   go1.7.5\r\n Git commit:   092cba3\r\n Built:        Wed Feb  8 06:50:14 2017\r\n OS/Arch:      linux/amd64\r\n\r\nServer:\r\n Version:      1.13.1\r\n API version:  1.26 (minimum version 1.12)\r\n Go version:   go1.7.5\r\n Git commit:   092cba3\r\n Built:        Wed Feb  8 06:50:14 2017\r\n OS/Arch:      linux/amd64\r\n Experimental: false\r\n```\r\n\r\n#### Plugins\r\n```\r\ndocker-workflow:1.10\r\nmailer:1.20\r\nworkflow-job:2.10\r\ngit:3.2.0\r\nant:1.4\r\npam-auth:1.3\r\npipeline-graph-analysis:1.3\r\nauthentication-tokens:1.3\r\nssh-credentials:1.13\r\nbuild-timeout:1.18\r\nmatrix-auth:1.4\r\nws-cleanup:0.32\r\npipeline-stage-tags-metadata:1.1.2\r\ncredentials-binding:1.11\r\nssh-agent:1.14\r\nstructs:1.6\r\ngithub:1.26.2\r\nhandlebars:1.1.1\r\npipeline-milestone-step:1.3.1\r\npipeline-rest-api:2.6\r\nworkflow-support:2.14\r\nrebuild:1.25\r\ncredentials:2.1.13\r\nworkflow-aggregator:2.5\r\nbouncycastle-api:2.16.1\r\ngithub-api:1.85\r\nace-editor:1.1\r\nexternal-monitor-job:1.7\r\ngithub-branch-source:2.0.5\r\nicon-shim:2.0.3\r\ngradle:1.26\r\nwindows-slaves:1.3.1\r\nresource-disposer:0.6\r\njunit:1.20\r\nantisamy-markup-formatter:1.5\r\nmapdb-api:1.0.9.0\r\ngithub-organization-folder:1.6\r\nldap:1.14\r\ndocker-commons:1.6\r\njquery-detached:1.2.1\r\nworkflow-step-api:2.9\r\nworkflow-cps:2.29\r\npipeline-model-api:1.1.2\r\nworkflow-durable-task-step:2.10\r\ngit-client:2.4.1\r\npipeline-input-step:2.5\r\nmatrix-project:1.9\r\npipeline-stage-view:2.6\r\nemail-ext:2.57.1\r\nworkflow-basic-steps:2.4\r\nscript-security:1.27\r\ntoken-macro:2.1\r\npipeline-stage-step:2.2\r\nscm-api:2.1.1\r\ndurable-task:1.13\r\ntimestamper:1.8.8\r\npipeline-model-extensions:1.1.2\r\npipeline-build-step:2.4\r\nworkflow-cps-global-lib:2.7\r\npipeline-model-definition:1.1.2\r\ncloudbees-folder:6.0.3\r\nworkflow-api:2.12\r\nssh-slaves:1.16\r\nbranch-api:2.0.8\r\npipeline-github-lib:1.0\r\npipeline-model-declarative-agent:1.1.1\r\nmomentjs:1.1.1\r\nworkflow-multibranch:2.14\r\nplain-credentials:1.4\r\nworkflow-scm-step:2.4\r\ngit-server:1.7\r\nghprb:1.35.0\r\nsubversion:2.7.2\r\ndocker-plugin:0.16.2\r\ndisplay-url-api:1.1.1\r\n```\r\n\r\n#### config.xml\r\n```xml\r\n  <clouds>\r\n    <com.nirima.jenkins.plugins.docker.DockerCloud plugin=\"docker-plugin@0.16.2\">\r\n      <name>docker</name>\r\n      <templates>\r\n        <com.nirima.jenkins.plugins.docker.DockerTemplate>\r\n          <configVersion>2</configVersion>\r\n          <labelString>docker-slave</labelString>\r\n          <launcher class=\"com.nirima.jenkins.plugins.docker.launcher.DockerComputerSSHLauncher\">\r\n            <sshConnector plugin=\"ssh-slaves@1.16\">\r\n              <port>22</port>\r\n              <credentialsId>JenkinsDockerSlave</credentialsId>\r\n              <jvmOptions></jvmOptions>\r\n              <javaPath></javaPath>\r\n              <maxNumRetries>0</maxNumRetries>\r\n              <retryWaitTime>0</retryWaitTime>\r\n              <sshHostKeyVerificationStrategy class=\"hudson.plugins.sshslaves.verifiers.KnownHostsFileKeyVerificationStrategy\"/>\r\n            </sshConnector>\r\n          </launcher>\r\n          <remoteFsMapping></remoteFsMapping>\r\n          <remoteFs>/home/jenkins</remoteFs>\r\n          <instanceCap>1</instanceCap>\r\n          <mode>EXCLUSIVE</mode>\r\n          <retentionStrategy class=\"com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy\">\r\n            <idleMinutes>10</idleMinutes>\r\n            <idleMinutes defined-in=\"com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy\">10</idleMinutes>\r\n          </retentionStrategy>\r\n          <numExecutors>1</numExecutors>\r\n          <dockerTemplateBase>\r\n            <image>dfp/jenkins-slave</image>\r\n            <dockerCommand></dockerCommand>\r\n            <lxcConfString></lxcConfString>\r\n            <hostname></hostname>\r\n            <dnsHosts/>\r\n            <network></network>\r\n            <volumes>\r\n              <string>/var/run/docker.sock:/var/run/docker.sock /usr/bin/docker:/usr/bin/docker</string>\r\n            </volumes>\r\n            <volumesFrom2/>\r\n            <environment/>\r\n            <bindPorts></bindPorts>\r\n            <bindAllPorts>false</bindAllPorts>\r\n            <privileged>false</privileged>\r\n            <tty>false</tty>\r\n            <extraHosts class=\"java.util.Collections$UnmodifiableRandomAccessList\" resolves-to=\"java.util.Collections$UnmodifiableList\">\r\n              <c class=\"list\"/>\r\n              <list reference=\"../c\"/>\r\n            </extraHosts>\r\n          </dockerTemplateBase>\r\n          <removeVolumes>false</removeVolumes>\r\n          <pullStrategy>PULL_LATEST</pullStrategy>\r\n        </com.nirima.jenkins.plugins.docker.DockerTemplate>\r\n        <com.nirima.jenkins.plugins.docker.DockerTemplate>\r\n          <configVersion>2</configVersion>\r\n          <labelString>docker-slave-evarga</labelString>\r\n          <launcher class=\"com.nirima.jenkins.plugins.docker.launcher.DockerComputerSSHLauncher\">\r\n            <sshConnector plugin=\"ssh-slaves@1.16\">\r\n              <port>22</port>\r\n              <credentialsId>JenkinsDockerSlave</credentialsId>\r\n              <jvmOptions></jvmOptions>\r\n              <javaPath></javaPath>\r\n              <maxNumRetries>0</maxNumRetries>\r\n              <retryWaitTime>0</retryWaitTime>\r\n              <sshHostKeyVerificationStrategy class=\"hudson.plugins.sshslaves.verifiers.KnownHostsFileKeyVerificationStrategy\"/>\r\n            </sshConnector>\r\n          </launcher>\r\n          <remoteFsMapping></remoteFsMapping>\r\n          <remoteFs>/home/jenkins</remoteFs>\r\n          <instanceCap>1</instanceCap>\r\n          <mode>EXCLUSIVE</mode>\r\n          <retentionStrategy class=\"com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy\">\r\n            <idleMinutes>10</idleMinutes>\r\n            <idleMinutes defined-in=\"com.nirima.jenkins.plugins.docker.strategy.DockerOnceRetentionStrategy\">10</idleMinutes>\r\n          </retentionStrategy>\r\n          <numExecutors>1</numExecutors>\r\n          <dockerTemplateBase>\r\n            <image>evarga/jenkins-slave</image>\r\n            <dockerCommand></dockerCommand>\r\n            <lxcConfString></lxcConfString>\r\n            <hostname></hostname>\r\n            <dnsHosts/>\r\n            <network></network>\r\n            <volumes>\r\n              <string>/var/run/docker.sock:/var/run/docker.sock /usr/bin/docker:/usr/bin/docker</string>\r\n            </volumes>\r\n            <volumesFrom2/>\r\n            <environment/>\r\n            <bindPorts></bindPorts>\r\n            <bindAllPorts>false</bindAllPorts>\r\n            <privileged>false</privileged>\r\n            <tty>false</tty>\r\n            <extraHosts class=\"java.util.Collections$UnmodifiableRandomAccessList\" resolves-to=\"java.util.Collections$UnmodifiableList\">\r\n              <c class=\"list\"/>\r\n              <list reference=\"../c\"/>\r\n            </extraHosts>\r\n          </dockerTemplateBase>\r\n          <removeVolumes>false</removeVolumes>\r\n          <pullStrategy>PULL_LATEST</pullStrategy>\r\n        </com.nirima.jenkins.plugins.docker.DockerTemplate>\r\n      </templates>\r\n      <serverUrl>tcp://<my_ip>:4243</serverUrl>\r\n      <connectTimeout>5</connectTimeout>\r\n      <readTimeout>15</readTimeout>\r\n      <version></version>\r\n      <credentialsId></credentialsId>\r\n      <containerCap>5</containerCap>\r\n    </com.nirima.jenkins.plugins.docker.DockerCloud>\r\n  </clouds>\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jstarcher": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/475", "title": "Long running tasks without output causes build to get stuck", "body": "Actual:\r\nJenkins job that uses fabric to run an indexing command which takes several minutes to complete and does not have any output until finished causes build to get stuck and never finishes even after the fabric script finishes on the destination node.\r\n\r\nExpected:\r\nJenkins job that uses fabric to run an indexing command which takes several minutes to complete and does not have any output until finished should not get stuck.\r\n\r\nPlugin version: 0.16.2\r\n\r\nDocker info:\r\n```\r\nContainers: 10\r\n Running: 9\r\n Paused: 0\r\n Stopped: 1\r\nImages: 21\r\nServer Version: 1.13.0\r\nStorage Driver: aufs\r\n Root Dir: /var/lib/docker/aufs\r\n Backing Filesystem: extfs\r\n Dirs: 136\r\n Dirperm1 Supported: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\nSwarm: active\r\n NodeID: n8groekak3pju1jqjc2uvph4v\r\n Is Manager: true\r\n ClusterID: dm96j4qo4h9zdnj8kdeheb01q\r\n Managers: 1\r\n Nodes: 1\r\n Orchestration:\r\n  Task History Retention Limit: 5\r\n Raft:\r\n  Snapshot Interval: 10000\r\n  Number of Old Snapshots to Retain: 0\r\n  Heartbeat Tick: 1\r\n  Election Tick: 3\r\n Dispatcher:\r\n  Heartbeat Period: 5 seconds\r\n CA Configuration:\r\n  Expiry Duration: 3 months\r\n Node Address: 192.168.0.100\r\n Manager Addresses:\r\n  192.168.0.100:2377\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 03e5862ec0d8d3b3f750e19fca3ee367e13c090e\r\nrunc version: 2f7393a47307a16f8cee44a37b262e8b81021e3e\r\ninit version: 949e6fa\r\nSecurity Options:\r\n apparmor\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.4.0-59-generic\r\nOperating System: Ubuntu 16.04.1 LTS\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 8\r\nTotal Memory: 31.42 GiB\r\nName: ubuntu\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\r\nOnly thing relevant in the jenkins job:\r\n```\r\nFeb 11, 2017 3:24:02 AM INFO hudson.model.Run execute\r\nMPJ Update Index #11 aborted\r\njava.lang.InterruptedException\r\n\tat java.lang.Object.wait(Native Method)\r\n\tat hudson.remoting.Request.call(Request.java:147)\r\n\tat hudson.remoting.Channel.call(Channel.java:821)\r\n\tat hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:256)\r\n\tat com.sun.proxy.$Proxy95.join(Unknown Source)\r\n\tat hudson.Launcher$RemoteLauncher$ProcImpl.join(Launcher.java:1029)\r\n\tat hudson.tasks.CommandInterpreter.join(CommandInterpreter.java:154)\r\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:108)\r\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:65)\r\n\tat hudson.tasks.BuildStepMonitor$1.perform(BuildStepMonitor.java:20)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.perform(AbstractBuild.java:779)\r\n\tat hudson.model.Build$BuildExecution.build(Build.java:205)\r\n\tat hudson.model.Build$BuildExecution.doRun(Build.java:162)\r\n\tat hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:534)\r\n\tat hudson.model.Run.execute(Run.java:1728)\r\n\tat hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)\r\n\tat hudson.model.ResourceController.execute(ResourceController.java:98)\r\n\tat hudson.model.Executor.run(Executor.java:404)\r\n```", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Noodle05": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/464", "title": "Create/start slave docker container and attach to specific network?", "body": "Hi,\r\n\r\nWe have a requirement like this:\r\n\r\nOur product will depend on many other services like cache server, dataserver and so on. And we want to use docker-compose to config/organize environment for each test, so each test will have their own environment.\r\n\r\nThe idea is: use docker-compose to prepare network, volumes and service dockers. And then use jenkin's docker-plugin to start slave docker, attache to docker-compose created network, build and run test in slave.\r\n\r\nMy question is: How/where I can specify network in jenkins slave docker. Any idea?\r\n\r\nThanks\r\n\r\nNoodle ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gupbeheer": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/413", "title": "Start/Stop Docker containers build step 'Run Container' multiple environment properties", "body": "There is no possiblity to add multiple environment properties to the \"Run Container\" build step. The split is done based on \"\\n\" but there is only the option to put in one line. \nIn the Template settings there is an option to \"expand\" the \"environment\" input field to a textarea. This should also be possible within the 'Start/Stop Docker container' build step 'Run Container'.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "farahfa": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/401", "title": "Containers sometimes don't get removed after job is done", "body": "Hello,\n\nFrom time to time, I notice that there are a lot of containers that aren't removed after the job is done, is there an explanation as to why that happens? Is it a bug or am I missing something? When I do docker rm $(docker ps -a -q) and remove the containers and then run a bunch of jobs, then it works as expected.\n\nFadi\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "encodeering": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/400", "title": "a configurable retry delay for the connection check would be nice", "body": "the default is set to 2 seconds, which doesn't seem to fit the environment on a pi, as it always exceeds this limit\n\n`Jun 05, 2016 9:06:58 AM com.nirima.jenkins.plugins.docker.utils.PortUtils$ConnectionCheckSSH execute\nSEVERE: Failed to connect to 172.17.0.1:32775 (try 8/60) - The kexTimeout (2000 ms) expired.`\n\nthe container is definitly running and a manual connectable on the mentioned port. it simply takes some time to get it working\n\n`INFO: Launching computer docker-cloud-90ee7c5574ec as it has been in demand for 7 min 33 sec\nSSH Launch of docker-cloud-90ee7c5574ec on 172.17.0.1 completed in 44,797 ms`\n\nwould be nice to have a configuration here, as it works much better on different platforms (amd64) - of course, equipped with better hardware components\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexpenev-s": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/392", "title": "Non descriptive error messages", "body": "Hello,\nUnder Provision & Start Container - please consider:\n1. Template ID - is confusing as to this is the image ID/Tag; one might try to put an index here as templates are defined in the UI. Maybe rename to: Image ID/Tag\n2. The error message for not finding a Template ID is 'java.lang.NullPointerException' - this is not useful if you have to find what is wrong within the whole configuration. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/392/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "witokondoria": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/362", "title": "Allow configuration of Volume plugins", "body": "Related to https://github.com/docker-java/docker-java/issues/329, the plugin should allow to configure a volume plugin\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kummerer94": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/338", "title": "Binding slaves to a job", "body": "Hey everyone,\n\nI like this plugin very much, it takes away so much work and the newest versions provision and tear down slaves very smoothly.\n\nI want to add a use-case to this issue. However, I don't know whether this is actually possible using the Jenkins API:\n\nIf I want to make the workspace of a job in Jenkins available to the slaves, I have to mount the whole workspace of all jobs into the container.\n\nWe want to have a similar functionality like the CloudBees Docker Custom Build Environment provides. But, since the plugin poorly handles the startup of the job (not everything is run inside of the container), we can't and won't use it. (Also, you can't configure every option like --add-host, etc.) We need to start a slave for a specifiy job and after that job is finished the slave is torn down.\n\nThus, the slave's lifecycle is bound to the job's. The goal of this is to be able to use the Jenkins Job environment (at least the core variables, like JOB_NAME) during startup. This would allow us to only mount job specific directories and solve the issue of mounting the whole workspace.\n\nInstead of adding a lot of slave configurations (which can only be done in the Jenkins global configuration) it would be easy to make some of this configuration generic using these build variables. For example, you could pull a specific tag of an image based on the job that's running. Of course, you wouldn't have to mount all job directories into the container.\n\nAs a first step, it would be great to know whether this is actually possible. Can you access the build environment (or at least the job name?) before the slave is actually provisioned?\n\nHope to hear your feedback,\nAlex\n\nNote: This issues originated in #325.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IntelBob": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/334", "title": "Option to limit container launch attempts upon failure", "body": "If Jenkins fails to launch a container say due to a SSH error, it'll keep retrying until it exhausts the container cap value. It'll only stop when the job is canceled. This is a problem if there are multiple jobs using the same Docker cloud and may not be able to launch containers. It'll be great if there is docker plugin option to limit number of attempts to launch a container if Jenkins fails to launch it on first try. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "samrocketman": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/242", "title": "Docker builds do not work with matrix project plugin", "body": "When launching a build for a matrix project the job stays infinitely waiting on slaves and the docker plugin does not spin up any containers. I have published scripts which automatically generate a matrix build job if you wish to test this.\n\nhttps://github.com/samrocketman/jenkins-bootstrap-jervis\n1. export a GitHub API token.\n2. Provision a jenkins instance with `./jervis_bootstrap.sh`\n3. When Jenkins is up press the build botton on \"Generate Jenkins job from YAML\" and generate the project `samrocketman/jervis`.\n4. Visit \"GitHub Organizations\" tab and see the jervis-master job for a working builder.\n5. Configure the docker plugin and update the samrocketman/jervis-master Jenkins job to use a docker slave.\n\nYou'll notice that it just stays infinitely in the queue because jobs never appear.\n\nDuplicate issue here: https://issues.jenkins-ci.org/browse/JENKINS-28661\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hcguersoy": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/91", "title": "Commit / push if failure", "body": "In addition to the 'commit / push on succes' it would be nice to have a functionality to commit and / or push a image of a failed build to inspect it.\n\nIn my case, the successful build images are not very interesting but it would be nice to have the possibility to inspect why a build fails.  \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/91/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45416213", "body": "It was 1.6\n\nI've tried to reproduce it today but I've already destroyed the vm and there are newer Jenkins releases. Tried it with newer jenkins version but there I get other errors - I'll investigate with and maybe open an issue:\n\nThe current error is below - jenkins starts every 10 seconds a new container but could not build. \n\n```\nJun 07, 2014 5:21:26 PM INFO com.nirima.jenkins.plugins.docker.DockerCloud provision\nExcess workload after pending Spot instances: 1\nJun 07, 2014 5:21:26 PM INFO com.nirima.jenkins.plugins.docker.DockerCloud connect\nBuilding connection to docker host docker1 URL http://localhost:4243\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n1 * Sending client request on thread jenkins.util.Timer [#7]\n1 > GET http://localhost:4243/images/0058c31c1c7f/json\n\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n2 * Client response received on thread jenkins.util.Timer [#7]\n2 < 200\n2 < Content-Length: 1881\n2 < Content-Type: application/json\n2 < Date: Sat, 07 Jun 2014 17:21:26 GMT\n{\"Architecture\":\"amd64\",\"Author\":\"hcguersoy\",\"Comment\":\"\",\"Config\":{\"AttachStderr\":false,\"AttachStdin\":false,\"AttachStdout\":false,\"Cmd\":[\"/bin/sh\",\"-c\",\"/usr/sbin/sshd -D\"],\"CpuShares\":0,\"Cpuset\":\"\",\"Domainname\":\"\",\"Entrypoint\":null,\"Env\":[\"HOME=/\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"http_proxy=http://10.49.92.33:8080\",\"https_proxy=http://10.49.92.33:8080\",\"no_proxy=localhost,127.0.0.1,*.local,169.254/16,10.20.30.*, 10.49.*\"],\"ExposedPorts\":{\"22/tcp\":{}},\"Hostname\":\"622fc7921d28\",\"Image\":\"98c0d9c32ed1cbf7db7ad5f212614f039d6288fefe259272f6ac40dcbc69a2a8\",\"Memory\":0,\"MemorySwap\":0,\"NetworkDisabled\":false,\"OnBuild\":[],\"OpenStdin\":true,\"PortSpecs\":null,\"StdinOnce\":true,\"Tty\":true,\"User\":\"\",\"Volumes\":{\"/data/jenkins\":{}},\"WorkingDir\":\"\"},\"Container\":\"c7d10b02a9f76fbd711f892e0e4f5ea00b6202c6612e8d683d486133c9540a68\",\"ContainerConfig\":{\"AttachStderr\":false,\"AttachStdin\":false,\"AttachStdout\":false,\"Cmd\":[\"/bin/sh\",\"-c\",\"#(nop) CMD [/bin/sh -c /usr/sbin/sshd -D]\"],\"CpuShares\":0,\"Cpuset\":\"\",\"Domainname\":\"\",\"Entrypoint\":null,\"Env\":[\"HOME=/\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"http_proxy=http://10.49.92.33:8080\",\"https_proxy=http://10.49.92.33:8080\",\"no_proxy=localhost,127.0.0.1,*.local,169.254/16,10.20.30.*, 10.49.*\"],\"ExposedPorts\":{\"22/tcp\":{}},\"Hostname\":\"622fc7921d28\",\"Image\":\"98c0d9c32ed1cbf7db7ad5f212614f039d6288fefe259272f6ac40dcbc69a2a8\",\"Memory\":0,\"MemorySwap\":0,\"NetworkDisabled\":false,\"OnBuild\":[],\"OpenStdin\":true,\"PortSpecs\":null,\"StdinOnce\":true,\"Tty\":true,\"User\":\"\",\"Volumes\":{\"/data/jenkins\":{}},\"WorkingDir\":\"\"},\"Created\":\"2014-05-20T13:30:15.620669095Z\",\"DockerVersion\":\"0.11.1\",\"Id\":\"0058c31c1c7f516b2bd07d379e4fd2d5d3691da81ca48dfce7ee97c041bd8192\",\"Os\":\"linux\",\"Parent\":\"98c0d9c32ed1cbf7db7ad5f212614f039d6288fefe259272f6ac40dcbc69a2a8\",\"Size\":0}\n\n\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n3 * Sending client request on thread jenkins.util.Timer [#7]\n3 > GET http://localhost:4243/containers/json?all=false&limit=-1&since=&before=&size=false\n\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n4 * Client response received on thread jenkins.util.Timer [#7]\n4 < 200\n4 < Content-Length: 2\n4 < Content-Type: application/json\n4 < Date: Sat, 07 Jun 2014 17:21:26 GMT\n[]\n\nJun 07, 2014 5:21:26 PM INFO hudson.slaves.NodeProvisioner update\nStarted provisioning Image of 0058c31c1c7f from docker1 with 1 executors. Remaining excess workload:0.0\nJun 07, 2014 5:21:26 PM INFO com.nirima.jenkins.plugins.docker.DockerCloud connect\nBuilding connection to docker host docker1 URL http://localhost:4243\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n5 * Sending client request on thread Computer.threadPoolForRemoting [#4]\n5 > POST http://localhost:4243/containers/create\n5 > Content-Type: application/json\n{\"Hostname\":\"\",\"PortSpecs\":[\"22/tcp\"],\"User\":\"\",\"Tty\":false,\"OpenStdin\":false,\"StdinOnce\":false,\"Memory\":0,\"MemorySwap\":0,\"CpuShares\":0,\"AttachStdin\":false,\"AttachStdout\":false,\"AttachStderr\":false,\"Env\":null,\"Cmd\":[\"/usr/sbin/sshd\",\"-D\"],\"Dns\":[\"\"],\"Image\":\"0058c31c1c7f\",\"Volumes\":null,\"VolumesFrom\":\"\",\"Entrypoint\":[],\"NetworkDisabled\":false,\"Privileged\":false,\"WorkingDir\":\"\",\"Domainname\":\"\",\"ExposedPorts\":null,\"OnBuild\":null}\n\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n6 * Client response received on thread Computer.threadPoolForRemoting [#4]\n6 < 201\n6 < Content-Length: 90\n6 < Content-Type: application/json\n6 < Date: Sat, 07 Jun 2014 17:21:26 GMT\n{\"Id\":\"a5f8401371e0cb919e8090693cc0fa0fd1a0c84334b69457508445adaaef391a\",\"Warnings\":null}\n\n\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n7 * Sending client request on thread Computer.threadPoolForRemoting [#4]\n7 > POST http://localhost:4243/containers/a5f8401371e0cb919e8090693cc0fa0fd1a0c84334b69457508445adaaef391a/start\n7 > Content-Type: application/json\n{\"PortBindings\":{\"22/tcp\":[{\"HostIp\":\"0.0.0.0\"}]},\"Privileged\":false,\"Dns\":[\"\"]}\n\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n8 * Client response received on thread Computer.threadPoolForRemoting [#4]\n8 < 204\n8 < Content-Length: 0\n8 < Content-Type: text/plain; charset=utf-8\n8 < Date: Sat, 07 Jun 2014 17:21:26 GMT\n\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n9 * Sending client request on thread Computer.threadPoolForRemoting [#4]\n9 > GET http://localhost:4243/containers/a5f8401371e0cb919e8090693cc0fa0fd1a0c84334b69457508445adaaef391a/json\n\nJun 07, 2014 5:21:26 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n10 * Client response received on thread Computer.threadPoolForRemoting [#4]\n10 < 200\n10 < Content-Type: application/json\n10 < Date: Sat, 07 Jun 2014 17:21:26 GMT\n10 < Transfer-Encoding: chunked\n{\"Args\":[\"-D\"],\"Config\":{\"AttachStderr\":false,\"AttachStdin\":false,\"AttachStdout\":false,\"Cmd\":[\"/usr/sbin/sshd\",\"-D\"],\"CpuShares\":0,\"Cpuset\":\"\",\"Domainname\":\"\",\"Entrypoint\":null,\"Env\":[\"HOME=/\",\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\",\"http_proxy=http://10.49.92.33:8080\",\"https_proxy=http://10.49.92.33:8080\",\"no_proxy=localhost,127.0.0.1,*.local,169.254/16,10.20.30.*, 10.49.*\"],\"ExposedPorts\":{\"22/tcp\":{}},\"Hostname\":\"a5f8401371e0\",\"Image\":\"0058c31c1c7f\",\"Memory\":0,\"MemorySwap\":0,\"NetworkDisabled\":false,\"OnBuild\":null,\"OpenStdin\":false,\"PortSpecs\":null,\"StdinOnce\":false,\"Tty\":false,\"User\":\"\",\"Volumes\":{\"/data/jenkins\":{}},\"WorkingDir\":\"\"},\"Created\":\"2014-06-07T17:21:26.40599198Z\",\"Driver\":\"aufs\",\"ExecDriver\":\"native-0.2\",\"HostConfig\":{\"Binds\":null,\"ContainerIDFile\":\"\",\"Dns\":[\"\"],\"DnsSearch\":null,\"Links\":null,\"LxcConf\":null,\"NetworkMode\":\"\",\"PortBindings\":{\"22/tcp\":[{\"HostIp\":\"0.0.0.0\",\"HostPort\":\"49153\"}]},\"Privileged\":false,\"PublishAllPorts\":false,\"VolumesFrom\":null},\"HostnamePath\":\"/var/lib/docker/containers/a5f8401371e0cb919e8090693cc0fa0fd1a0c84334b69457508445adaaef391a/hostname\",\"HostsPath\":\"/var/lib/docker/containers/a5f8401371e0cb919e8090693cc0fa0fd1a0c84334b69457508445adaaef391a/hosts\",\"Id\":\"a5f8401371e0cb919e8090693cc0fa0fd1a0c84334b69457508445adaaef391a\",\"Image\":\"0058c31c1c7f516b2bd07d379e4fd2d5d3691da81ca48dfce7ee97c041bd8192\",\"MountLabel\":\"\",\"Name\":\"/thirsty_fermat\",\"NetworkSettings\":{\"Bridge\":\"docker0\",\"Gateway\":\"172.17.42.1\",\"IPAddress\":\"172.17.0.16\",\"IPPrefixLen\":16,\"PortMapping\":null,\"Ports\":{\"22/tcp\":[{\"HostIp\":\"0.0.0.0\",\"HostPort\":\"49153\"}]}},\"Path\":\"/usr/sbin/sshd\",\"ProcessLabel\":\"\",\"ResolvConfPath\":\"/var/lib/docker/containers/a5f8401371e0cb919e8090693cc0fa0fd1a0c84334b69457508445adaaef391a/resolv.conf\",\"State\":{\"ExitCode\":0,\"FinishedAt\":\"0001-01-01T00:00:00Z\",\"Paused\":false,\"Pid\":5380,\"Running\":true,\"StartedAt\":\"2014-06-07T17:21:26.513536354Z\"},\"Volumes\":{\"/data/jenkins\":\"/var/lib/docker/vfs/dir/0611b4dff146f630a51d2d85cf8881e31a08b56e7edb8ff3d05cb14852200f4d\"},\"VolumesRW\":{\"/data/jenkins\":true}}\n\n\nJun 07, 2014 5:21:26 PM SEVERE com.nirima.jenkins.plugins.docker.DockerCloud$1 call\nError in provisioning; slave=null, template=DockerTemplate{image=0058c31c1c7f, parent=DockerCloud{name=docker1, serverUrl=http://localhost:4243}}\n```\n\nDue to this I close this issue.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45416213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45422077", "body": "Just for the records - run a new trial with the latest jenkins & docker plugin (0.5, all other plugin are latest, too). Now it runs fine.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45422077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46005741", "body": "#30 runs into an error :-(\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46005741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48584212", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48584212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53392528", "body": "Same issue here. Have downgraded to 1.1.1 and works again.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53392528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "larrycai": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/86", "title": "\"Additional tag to add\" is not the docker image's tag", "body": "I want to add extra real docker image tag for my saved docker images, like\n\n```\npython_app:b$BUILD_NUMBER\n```\n\nI suppose it could be generated as docker image name `python_app` and the tag name is like `b221` 221 is my build number\n\nWhile it is `python_app:b221` as docker image name, `latest` is the tag name\n- docker plugin version 0.7\n- jenkins (LTS) 1.565.1\n- docker : 1.1.2 (boot2docker)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/86/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45824106", "body": "I meet same problem, it works ok for 0.3.5 with Java 1.6. Do you have plan to support Java1.6 again, or will stay with Java 7 ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45824106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52410119", "body": "More error log before in SSH actually\n\n```\nINFO: Creating slave SSH launcher for 172.17.42.1:49157\nAug 14, 2014 10:17:06 PM hudson.slaves.NodeProvisioner update\nWARNING: Provisioned slave Image of larrycai/jenkins-slave failed to launch\njava.lang.NoSuchMethodError: hudson.plugins.sshslaves.SSHLauncher.<init>(Ljava/lang/String;ILcom/cloudbees/plugins/credentials/common/StandardUsernameCredentials;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;)V\n        at com.nirima.jenkins.plugins.docker.DockerComputerLauncher.getSSHLauncher(DockerComputerLauncher.java:53)\n        at com.nirima.jenkins.plugins.docker.DockerComputerLauncher.<init>(DockerComputerLauncher.java:36)\n        at com.nirima.jenkins.plugins.docker.DockerTemplate.provision(DockerTemplate.java:187)\n        at com.nirima.jenkins.plugins.docker.DockerCloud$1.call(DockerCloud.java:156)\n        at com.nirima.jenkins.plugins.docker.DockerCloud$1.call(DockerCloud.java:151)\n        at jenkins.util.ContextResettingExecutorService$2.call(ContextResettingExecutorService.java:46)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:166)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1146)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:701)\nAug 14, 2014 10:17:07 PM com.nirima.jenkins.plugins.dock\n```\n\ndocker-plugin: 0.7\njenkins:1.565.1 (LTS)\nSSH slave plugin: 1.5\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52410119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52412804", "body": "Just noticed that we need SSH Slave plugin 1.6+, after upgrade the problem is solved. \n\nUnfortunately current Jenkis LTS 1.565.1 is bundled with old SSH Slave plugin, it will make lots of trouble for this plugins.\n\nI update the title for it\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52412804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52412820", "body": "will be nice in the plugin to report in the log when it detect this problem\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52412820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52867716", "body": "+1, so far it is just pulled if it doesn't exist, pulling every time is good feature to have\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52867716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53229172", "body": "Ok, then just close it so far\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53229172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "guilhem": {"issues": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/20", "title": "Be able to fix public IP", "body": "Currently all ports are bind on `0.0.0.0`\nIt may be useful (and secured) to be able to fix another IP (for example the IP used to call API ;) )\n\nIn my case, Host server have a public address and a internal bridge. I only want to see docker vm accessible by internal bridge :)\n\nMore generally, be able to pu our own config in API can be great.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/20/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42976679", "body": "oh ok. sorry.\n\nIt's quite sad to not be able to pull a public vm :(\n\nI test and it works.\nThank you :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42976679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49998810", "body": "Yes this is not exactly a regression, but it prevent from using a tag :)  (who was working before).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49998810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23464363", "body": "`0.10.5` version is released... if we want another one, we may use `0.10.6-SNAPSHOT`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23464363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "larsskj": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/fc1d4139d6eea2a3ffbc52739876619f338d1623", "message": "Option format for SSHD changed."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Typz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b30d9d7c65dfbdedd0646ffa45d9b644bc7f0d94", "message": "Fix SSH connector with standalone swarm\n\nWhen running against a standaline swarm, the container is running on a\nhost which is likely different from the docker endpoint, so the IP\naddress must be retrieved from the bindings."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abayer": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/771b6009c0419ca206286bd90fabf5038079a871", "message": "Test in CI against two most recent LTSes as well."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c02806860b1e3f98aa0d688dea4beca4214c8110", "message": "Adding more tests of dockerNode\n\nAlso added Issue annotations for existing ones, and made sure we're\nusing the new docker agent env."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/2d38c8127be8723cfced72995bf44dff6553c37e", "message": "Initial tests of dockerNode step\n\nSpecifically, basic provisioning, tool installation, dir step, and\nnested within a node block."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b84d0a7135727dae7fbf0c41328af3cea4e71183", "message": "Fix test compilation."}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/25537517", "body": "Probably want a `Callback` here, like in https://github.com/jglick/ephemeral-docker-agent-plugin/blob/master/src/main/java/org/jenkinsci/plugins/ephemeral_docker_agent/DockerNodeStep.java#L129, and no `stop` method...", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/25537517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "bulanovk": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/30d172f0eecf7793d80424b7cd7b113995d6a59f", "message": "Restore multi-line control for container setting\nDisable test using unix soc on Windows OS family"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f2041229886e7338ecd181e66fe24b6bac04d3e9", "message": "According to remoting.jar documentation -tunnel option should be used instead of --tunnel\n\nFix for issue https://github.com/jenkinsci/docker-plugin/issues/550"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hypnoce": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/30c41c1739c44aeaf9e876b006b21743a8739509", "message": "Fixes #532 : Merge configured binded ports with ssh port."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alonbl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/28cb4a2e2c000312cd6c293cbe3041229d8bacfd", "message": "Permit only jenkins user to login when authorized keys is used"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1f83654b474651509b196362f49aafab845956bf", "message": "fix wait for SSHD to be ready (#536)\n\nsuccess of execute is actually a success"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kmbulebu": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/2b6962b3a641c235dad7ca9010cdc3e5c647c8b9", "message": "Added Node Properties to template configuration.\n\nEnables setting node properties, such as tool locations, on a per docker image basis."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "slawekjaranowski": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/21858b9120d9a2e78a389b7cb1ee6099a091cf1d", "message": "Pull image improvement\n\nCorrect implementation for PULL_LATEST strategy\nwhich doesn't pull if image name doesn't contains latest tag."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/07faf89cbee4c0a1d0c33fff6b4404fef49180dc", "message": "Unit tests should be platform independent (#448)\n\n* Unit tests should be platform independent\r\n\r\nAs we know windows system has different path separator.\r\n\r\n* Update of links in CONTRIBUTING.md"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "batmat": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/87857fe4ed673df3adb90cd9a75ed03c7469dbd5", "message": "[FIX JENKINS-39689] dont embed an old version of tiger_types\n\nWhich in turn is used by Stapler."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8799434655b42a605af9b54b796c1efa01af9f56", "message": "Correctly encode the \u00a3 in UTF-8 (#458)\n\nThat character has apparently been submitted using a CP-1252 encoding\r\n(the Windows default one).\r\n\r\nThis is failing the build somehow. At least there's currently an error\r\nduring the compilation of that test class file:\r\n\r\n```\r\n[INFO] Compiling 8 source files to /scratch/jenkins/workspace/plugins/docker-plugin-freestyle/docker-plugin/target/test-classes\r\n[ERROR] /scratch/jenkins/workspace/plugins/docker-plugin-freestyle/docker-plugin/src/test/java/com/nirima/jenkins/plugins/docker/builder/DockerBuilderPublisherTest.java:[22,54] unmappable character for encoding UTF-8\r\n```"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pjdarton": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6e10e70cce24426fc6f9eadebf8328b356331095", "message": "Fix JENKINS-39100 (#452)\n\nPrevents NPE during JenkinsUtils.makeAuthConfig when dealing with registries that have no username/password defined."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/80aa6b8572b4540e10ef488711d3e0a2508512cd", "message": "JENKINS-39103: Fix \"Build / Publish Docker Container\" Image field validation (#453)\n\n* Fix Jenkins-39103.\r\n\r\nTags validation no longer complains about non-trivial-but-valid tags.\r\nChanged displayname from \"Build / Publish Docker Containers\" to \"Build /\r\nPublish Docker Image\" because we're building an image (just one) and not\r\na container.\r\nCorrected error message from \"What this build run on Docker?\" to \"Was\r\nthis build run on Docker?\".\r\nAdded unit-test for tag-validation code.\r\n\r\n* Cosmetic UI enhancements to DockerBuilderPublisher build step.\r\n\r\nRemoved \"description\" of \"Image\" field.  The help-text explained it\r\nbetter, and the old description was (strictly-speaking) incorrect.\r\nImproved help text for \"Image\" field.\r\nAdded help text for pushOnSuccess checkbox."}], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/609", "title": "Tidy up imports", "body": "The java code has accumulated a lot of import statements over the years, many of which have been made unnecessary by subsequent code changes.  This makes my IDE unhappy with lots of warnings all over the place.\r\nThis change removes all the imports that my IDE deemed unnecessary.\r\nNo functional changes were made to any of the code.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stephenc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/ac1c0efad2ac17890a7fad7e94629bf849f5a954", "message": "[FIXED JENKINS-39473] Switch to bouncycastle-api plugin for bouncycastle jars (#456)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31626071", "body": "Look at the evilness below here:\n\n```\njenkins.addNode(slave);\n```\n\nNOOOOOOOOOOOOOOOOOO! Leave that up to NodeProvisioner as per [javadoc](https://github.com/jenkinsci/jenkins/blob/master/core/src/main/java/hudson/slaves/Cloud.java#L145) and the baseline version of Jenkins is well well at least 1.503\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31626071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31626317", "body": "This is the wrong way to wait. What you want to do is check the docker container until it is **ready** to connect and then **and only then** return. This way sadly needs to do the evil adding to Jenkins so that `toComputer()` does not return `null`...\n\nwrong wrong and more wrong!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31626317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31628094", "body": "@KostyaSha the back story is that I have been telling @kohsuke that the Cloud API is \"a pile of shite\" and he asks for \"why\" and \"where is the evidence\". Well this is one of the pieces of evidence: that implementations end up doing this...\n\nThe Javadocs clearly state that implementations should not add the node to Jenkins and it is the responsibility of NodeProvisioner to do the adding. Even [@kohsuke has done this](https://github.com/jenkinsci/mansion-cloud-plugin/blob/master/src/main/java/com/cloudbees/jenkins/plugins/mtslavescloud/PlannedMansionSlave.java#L247) in that which I previously considered to be the second best cloud api implementation...\n\nA good cloud API would give you the abstractions such that you can get the sequencing of all these events correct and return the node instance at the correct point in time. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31628094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31637753", "body": "That's the general overview of it.\n\nThe gotcha - if there is one - is that in some ways the easiest way to test if the node is ready is to try to connect with a launcher... which needs the node to be added to Jenkins so you can get the other half of the Node/Computer duality created.\n\nThe correct way is to use a non-launcher based way to determine that the node is ready to connect with\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31637753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106025", "body": "Should the IP address be hard-coded? (I don't mind if this is a sensible default and the address is hidden in an Advanced box)\n\nOr is this an implicit configuration that all slave images can safely assume the IP address mapping?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106136", "body": "probably want to make all these `@Deprecated` fields as `transient` so that they do not get saved out on resave\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106164", "body": "Should migrate the `@Deprecated` fields if non-null\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106478", "body": "Well I was just providing some comments on what you've done so far. This was by no means a \"final\" review, rather just some things I spotted... I rather note down things I spot when I spot them than occupy my head trying to remember them for when the review actually is ready...\n\nStudies show that most people's working memory is about 6-8 \"slots\" and when you fill them up, something falls out... keeping 2 of these slots occupied for my comments on this WIP is too expensive a cost to pay. You are free to ignore my comments if you want\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32107149", "body": "I know you do, but we all can benefit with a reminder comment in a pull request... I've been known to put such reminders in myself **on my own pull requests** so that I don't forget. This is a big change... a good change, but still big. There is lots that anyone could forget, reminders are a good thing... but if you're going to get all tetchy maybe I will stop reviewing this change altogether.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32107149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lucamilanesio": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c5c5be139070278b36165c66b97c425bf8f9d42c", "message": "Give high priority to Docker Hostname definition (#446)\n\nWhen the Docker Hostname is defined at Cloud level, it should be used\r\nas preferential setting over the other automatisms."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5ea845b970fd575b37af5cda712133079c09828e", "message": "Configure Docker hostname when using unix socks (#443)\n\n* Configure Docker hostname when using unix socks\r\n\r\nWhen using Docker URL with unix-domains sockets we cannot access the\r\ndocker hostname from the host part of the URL. Even using the docker\r\ninspection of the machine created dynamically would not expose the\r\nright value accessible from the outside.\r\n\r\nAllow to explicitly define the Docker hostname you want to use when\r\nJenkins master needs to connect to slave instances created.\r\n\r\n* Update DockerComputerSSHLauncher.java"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "magnayn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b40f5b5157f9f7447cbcf9aecb545828f5885888", "message": "Merge pull request #444 from eaglerainbow/bump-docker-java-shaded\n\nBumping docker-java.version to 3.0.6"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/72c1756b98f36b9c24acdefc8d6eb194297cbb3d", "message": "Update the changelog"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/72f4e0c6fd10227d61541df9f812b39d52245aac", "message": "Assume this dist repo is now deprecated in favour of https:\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e6d68f53db6a56b0dcc234009a27949cf7d33eb3", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3f74952bd1ee32f882961283474a3478c4047cb1", "message": "[maven-release-plugin] prepare release docker-plugin-parent-0.16.2"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9c50793fc38b65d7fb7c3de60f107685dd73305f", "message": "docker-java with unix socket support\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/4e19067bf49b72bd0b3150a02fb170d237a03a1c", "message": "Use our docker-jenkins"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/64055d3b1f4d35fa2e30e1304cfed84bc959b196", "message": "Minor updates\nBump plugin parent version\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/954ebdab1a6c79e32eb9d7691145574c8624a3a2", "message": "If the connection is unix sockets, then URL can only\nbe 0.0.0.0\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f61245682c1f39799b7701e1ec259699b143eb32", "message": "Trace connectivity.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/0c5cf7a6cb2baf021fa18aeaa6376d1e30a41747", "message": "Merge pull request #425 from eaglerainbow/ContainerCapZero\n\nContainer Cap = 0 blocks provisioning of new containers"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f0fb5efdcc99e3893cf34ccee38b252a4eb2d4a6", "message": "Merge pull request #436 from Loki-Afro/master\n\nDefault value for Remote FS Root Mapping"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b09d5ec374e02749da1f8c34c21e1c94a911899c", "message": "Merge pull request #434 from eaglerainbow/errorHandling\n\nImproved Error reporting in case of termination errors"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b5657c113cdb7cecf1b8c59d205b3ce16ba513cc", "message": "Merge pull request #423 from lh39/patch-1\n\nAdded german translation for plugin description"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f566b4d13746c0a2c300254ef7dfbe8bb287fbb7", "message": "Fix shading & findbugs so CI ought to work,.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/fc21e71647865117e9f183f74cc7836b822f186f", "message": "Potentially authenticate when doing pulls.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/084f6dd31a632f0eaadce25d8687185dbfe5baa9", "message": "Since the url is no longer final, make private and provide\naccessor.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/d056f3c91b0f0a1c9d9255d8438ab58b760ea993", "message": "If settings had a http: or https: url, change these to tcp:\notherwise the cloud won't work.\n\nMost people will have the former format, so be nice and migrate\nthem.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cfb346bfad620c7abc1385b5669c164d3d75b81c", "message": "Add imports."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b545180b8f0087259f23f9e20f5b968025d4b379", "message": "Merge remote-tracking branch 'origin/master'"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/f732289777e44cef7fdd7657e1be2e75d1c8fcf6", "message": "Merge remote-tracking branch 'origin/docker-java-next'"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/459a88f03fb09a9121e066a4e4f897a9cfefcd75", "message": "Tag containers with jenkins ID.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/346300095e4c2ce463f8b6a2de4fea74e1ffd384", "message": "Merge pull request #383 from irissmann/template-project-config\n\nJENKINS-33426: Add support for configuraion of templates on project l\u2026"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/968d72d1b4734ad4c9e1f4f411a3c594af2847f5", "message": "Make build work (if not the actual plugin).\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e2d0587a04d19259ecd71cebc6f440fe4b3954e5", "message": "Merge branch 'upgrade-docker-java-3.x' of https://github.com/bschelberg/docker-plugin into bschelberg-upgrade-docker-java-3.x\n\n# Conflicts:\n#\tdocker-java-shaded/pom.xml\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/DockerCloud.java\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/DockerSlave.java\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/DockerTemplateBase.java\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/builder/DockerBuilderControlOptionStop.java\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/builder/DockerBuilderPublisher.java\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/client/ClientConfigBuilderForPlugin.java\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/launcher/DockerComputerJNLPLauncher.java\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/launcher/DockerComputerLauncher.java\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/launcher/DockerComputerSSHLauncher.java\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/utils/JenkinsUtils.java"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1967eb53effd2eabc7048c8ef08cd2c6e11a0eaa", "message": "Update Changelog.\n\nSet non-snapshot in pom replete with big-ass warning.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/2b75a9671786abf8c157319cda2119645d09b24f", "message": "Merge remote-tracking branch 'origin/master'\n\nMove to docker-java 3.x.\n\nI am soaking this in my jenkins env. Seems to be working, so probably\nready to switch over."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b17c0272d65cc9a7f5c7466741aa48f08ce4572a", "message": "Merge pull request #416 from fraz3alpha/guard_against_null_repotags\n\nGuard against null image tags during pull logic"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/34d61b9a5b817a63a674daf9ce9f741ef9228848", "message": "Merge pull request #408 from eaglerainbow/limit-docu-pullrequest\n\nImprove documentation on Container Cap and Instance Capacity"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/b228fe86c8534b3d8402fca53a266f3e29fc191a", "message": "Merge pull request #418 from Loki-Afro/docker-java-next\n\nJENKINS-36080 enable to specify docker api version"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cba06db385ef850fa846a2d2b4f5ae999842cd07", "message": "Merge pull request #410 from eaglerainbow/availability-docu-pullrequest\n\nImprove documentation on Retention Strategy/Availability drop down"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a94881d04db5f054dcb244f50e9140170ebc8ef4", "message": "Update base pom.\n\nHow did this ever work without the compiler version\nspecified?!\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/e3fe32092c478cdafede85468f75289a812d7f22", "message": "Use auth configuration when pushing.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/517f2456414d7db30878ddb603bce101f9702e91", "message": "I literally could not give a crap about javadoc."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/95b31f4acf84cda384a7988b9d51f88058d8d5d5", "message": "Changes to shaded dependencies and exceptions.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/41d076270279d0d8753c282214a4124082a1bb0c", "message": "Updates from docker-java API changes 3.0.x\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9706b4f0a95ebe447564f6d47ade4c2fe773e853", "message": "Merge branch 'master' into docker-java-next\n\n# Conflicts:\n#\tdocker-java-shaded/pom.xml\n#\tdocker-plugin/src/main/java/com/nirima/jenkins/plugins/docker/launcher/DockerComputerJNLPLauncher.java"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/17bfd21e61049ac1c4896d1cd6e228f512cf17be", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/dcc8edf3d46be3090757ba711d4647dfec581fa9", "message": "[maven-release-plugin] prepare release docker-plugin-parent-0.16.1"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/3acc736fcb97c05333b8d61a38aa05b536727595", "message": "Merge pull request #384 from fab30/patch_issue_33437\n\nPatch issue 33437"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cf73128e4814ad07827ad507a99a5b6a7f2af6d7", "message": "Merge pull request #399 from wsoula/all-builds-must-be-docker\n\nAdd caveat about workspace mapping"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/ac2797a3966aac90152b0d78a75bf04c60469ec1", "message": "Update to 2.2.3+\n\nUse a private branch, because docker-java will not work in\nany released form if you have a self-signed cert that is\na wildcard.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cd44c83ab6192cb0d2329b7d35f9be7ed6bd7e63", "message": "Remove some deprecated API usage in credentials, use the\nstandard list models.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/624ef7519aa9035e9c6a6393a3db6c88af08d0cd", "message": "Use an authconfig if available when pushing to registry.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/91dfa05fdec46d0b5a79b55aec21d7883f5143db", "message": "Add list of registries into the docker config.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9a9e99d75bc017c756d560b0ce0750667386390f", "message": "Add a concept to store remote docker registries as increasingly\nthese need auth to login to.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c4e9901c5b062932997f1ad06b6dc84a071014d5", "message": "Some docker implementations do not support build (Joyent Triton). Therefore\ntrying to do a docker build on them won't work.\n\nAllow optionally to specify using a *different* cloud to do your build on.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>\n\nUpdate builder publisher.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/4f87e84c57b1dcd7abe63d09523a5fcb20595dc4", "message": "Support for cloud to determine if it is running on\nTriton.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c8fdc5ec0af00dc79f436304d5cbb61fa7eb23df", "message": "Merge pull request #377 from dekobon/master\n\nSupport Joyent Triton and Single Host Abstractions"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/8d937de667e39e6cc75e3d402314e2533dbaeb13", "message": "Merge pull request #367 from bamthomas/master\n\n[fix] running JNLP with user jenkins breaks the init command with a q\u2026"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/2aeb033addbb72c2fdecd940635a0c63c0a398ef", "message": "The SimpleBuildStep perform() function is a superset of the\nBuildStep, so don't need both signatures.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/498c14371b10a03765f1761fbcfd125c55067125", "message": "Merge pull request #320 from djaara/master\n\nJENKINS-30200: Nullpointer exception while connecting to a docker"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1ccd2e7ce449dc05332176ba23edf95fd3a1330d", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/32ec4fcb19ac9bd6ab817104d5bc1b7d0387c359", "message": "[maven-release-plugin] prepare release docker-plugin-parent-0.16.0"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6f79b89d117662eff5d422de480998a7ef875989", "message": "And revert the test, too.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/68886eb6b15cf5bca1c71b0f1537764c13fb2468", "message": "Back to a non-broken version of docker-java.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/c9e28f9166c3d076e3d2a268efc1785c2b662f9a", "message": "Distinguish docker swarm slaves, so we can do things like\nhave a different default naming policy for them.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/a2627bf846cb760fcfdeb6ed462ec6e4d10800bd", "message": "For when next version of docker-java is released.\n\nMinor API changes afoot.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/ff433ecdc3e0380f9a483ad8f5f2ec27e0768947", "message": "When a pull happens and the registry is v1, docker responds\nwith a last line of \"WARNING\". This confuses docker-java which\nthinks this does not indicate success.\n\nIntroduce option to work around this issue temporarily.\n\nMove PluginImpl into DockerPluginConfiguration, as Plugin\ndeemed to be deprecated.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9832bd93a008b835d0e506233df7e19f42822cd9", "message": "Update Changelog\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1165b5c34ceaab8744805caf311a501423946cce", "message": "Allow Docker directory credentials, which in turn allows\ncontact with TLS hosts.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5a287f654f2531d20074744e893841cfd2a92c97", "message": "Create a simple credential type to point to certificates\ndirectory.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/bfa2ed1316fdb6354ac3935e6a4ba11aebf412d6", "message": "Be more robust when target may not have wget, and\nif there are invalid directory settings.\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/619b43e21eba4538a51c1e40170b6a98b9b60727", "message": "Merge pull request #293 from tobias-/fix_jnlp\n\nFix JNLP for more cases"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/d564bca8acfdfcfc9d8f8a7c18bf5eeab52b5ea8", "message": "Merge pull request #352 from pfalcon/bad-template-log-exc\n\nDockerCloud: Accompany \"Bad template\" message with actual stacktrace."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904029", "body": "Can you try the latest version as a snapshot, as this has added the required annotation  ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904278", "body": "I've just rolled a 0.2, which includes a fix for this. Can you try it and get back to me?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904291", "body": "Actually, it should be fixed in 0.2 release; can you try it and let me know if it works?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33904291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34073446", "body": "Hm - I think it's just an annotation required.\n\nthe forked docker-java code is here:\nhttps://github.com/magnayn/docker-java\n\nOught to be a relatively easy fix..\n\nOn Tue, Feb 4, 2014 at 1:28 PM, andrewcooke-isti\nnotifications@github.comwrote:\n\n> running mvn install in a copy cloned from git gives:\n> \n> [ERROR] Failed to execute goal on project docker-plugin: Could not resolve dependencies for project com.nirima:docker-plugin:hpi:0.3-SNAPSHOT: Could not find artifact com.kpelykh:docker-java:jar:0.6.1-nm-SNAPSHOT in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/) -> [Help 1]\n> \n> please provide instructions if you want me to test this further.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/2#issuecomment-34058712\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34073446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34077402", "body": "I think you need\n\n@DataBoundConstructor\n\non the constructor of DockerComputerLauncher\n\nI don't know why your instance needs this and mine doesn't, however!\n\nOn Tue, Feb 4, 2014 at 4:20 PM, andrewcooke-isti\nnotifications@github.comwrote:\n\n> nope.\n> \n> i built docker-java from the repo you linked to above (i had to use\n> -DskipTests) and then built docker-plugin and installed the hpi file.\n> \n> then when i try to add a node (after specifying number of executors and FS\n> root) i see\n> \n> javax.servlet.ServletException: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n>     at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:778)\n>     at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n>     at org.kohsuke.stapler.MetaClass$4.doDispatch(MetaClass.java:210)\n>     at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n>     at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n>     at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n>     at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n>     at org.kohsuke.stapler.Stapler.service(Stapler.java:225)\n>     at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n>     at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n>     at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n>     at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n>     at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n>     at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n>     at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n>     at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n>     at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n>     at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n>     at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n>     at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n>     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n>     at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n>     at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n>     at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n>     at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n>     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n>     at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n>     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n>     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n>     at org.eclipse.jetty.server.Server.handle(Server.java:370)\n>     at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n>     at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960)\n>     at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021)\n>     at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\n>     at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n>     at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n>     at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n>     at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n>     at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n>     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n>     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n>     at java.lang.Thread.run(Thread.java:744)\n> Caused by: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n>     at hudson.model.Descriptor.newInstance(Descriptor.java:576)\n>     at hudson.model.ComputerSet.doDoCreateItem(ComputerSet.java:293)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n>     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>     at java.lang.reflect.Method.invoke(Method.java:606)\n>     at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n>     at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n>     at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n>     at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:120)\n>     at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n>     at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n>     ... 46 more\n> Caused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n>     at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n>     at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n>     at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:396)\n>     at hudson.model.Descriptor.newInstance(Descriptor.java:567)\n>     ... 57 more\n> Caused by: java.lang.IllegalArgumentException: Failed to convert the launcher parameter of the constructor public hudson.slaves.DumbSlave(java.lang.String,java.lang.String,java.lang.String,java.lang.String,hudson.model.Node$Mode,java.lang.String,hudson.slaves.ComputerLauncher,hudson.slaves.RetentionStrategy,java.util.List) throws java.io.IOException,hudson.model.Descriptor$FormException\n>     at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:686)\n>     at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n>     at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n>     ... 60 more\n> Caused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.ComputerLauncher from {\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"}\n>     at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n>     at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n>     at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:684)\n>     ... 62 more\n> Caused by: org.kohsuke.stapler.NoStaplerConstructorException: There's no @DataBoundConstructor on any constructor of class com.nirima.jenkins.plugins.docker.DockerComputerLauncher\n>     at org.kohsuke.stapler.ClassDescriptor.loadConstructorParamNames(ClassDescriptor.java:176)\n>     at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:671)\n>     at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n>     at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n>     ... 64 more\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/2#issuecomment-34076654\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34077402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/35803257", "body": "Think this should now be fixed - feel free to reopen if you see it again.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/35803257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40147624", "body": "It's being set, but for some reason the latest version of Docker seems to ignore this.\nIt was working on 0.7.x, but isn't on 0.10.x.\n\nYou can see the DNS being sent in the JSON that's logged to the console\n\nI worked around in the short term by adding a --dns entry into DOCKER_OPTS\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40147624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40147734", "body": "I've bumped the ssh link to the latest version, which ought to help\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40147734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40180972", "body": "It's been bumped mostly as the older Jenkins' didn't work compiling with JDK8, so it shouldn't have to move any further..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40180972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40584560", "body": "Cool - thanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40584560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40585000", "body": "Is this still an issue on the latest release?\n\nI'm running against Docker 0.10.0 and it seems OK.\n\nContainerInspectProperties does indeed have\n@JsonIgnoreProperties(ignoreUnknown = true)\n\nSo it shouldn't actually be raising an error..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40585000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40585156", "body": "That's cool.\n\nDo you want to add that to the wiki page? \nhttps://wiki.jenkins-ci.org/display/JENKINS/Docker+Plugin\n\nIt would be neat to perhaps have a feature whereby we could specify to pull a docker image to use as the build slave before startup.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40585156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40585219", "body": "Merged - thx\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40585219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40612318", "body": "Fixed in -master\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40612318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40892300", "body": "Docker has changed, this is now part of HostConfig.\nMade change to jDocker and added fix here, is in -master / next release.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40892300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42570373", "body": "You don't need to have jenkins running on the same host (we don't).\n\nDo you have some kind of firewall running on the docker host? There may be options around what address forwarded ports are bound to.\n\nWhat docker version are you using?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42570373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42579352", "body": "I don't know if I'm understanding this right. Is it\n\nHost (IP a.b.c.d)\n  Container 1 - Jenkins\n  Container 2 - ssh (mapped to a.b.c.d:eeee)\n\nFrom within Container 1, can you\n  ssh a.b.c.d ?\n\nFrom within the host, you can\n ssh a.b.c.d -p eeee ?\n\nFrom within Container 1, can you\n  ssh a.b.c.d -p eeee ?\n\nIf it's (Yes, Yes, No), then that's down to your networking config and I'm\nnot sure how the plugin can help as it's merely spinning up docker images\nwith the API..\n\nOn Thu, May 8, 2014 at 5:49 PM, Marcel Wysocki notifications@github.comwrote:\n\n> root@hv ~ # rpm -qa docker-io\n> docker-io-0.10.0-2.el7.x86_64\n> \n> I have no firewall running. Just the docker creates NAT entries for\n> iptables.\n> \n> I want to have jenkins running on the same host because that way i can\n> bind the docker tcp port to the bridge ip address and dont need to make my\n> docker instance public over the internet.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/17#issuecomment-42574274\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42579352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42975121", "body": "Fixed.\n\nIt was staged @ sonatype but not closed.\n\nOn Tue, May 13, 2014 at 2:37 PM, Guilhem Lettron\nnotifications@github.comwrote:\n\n> docker-plugin rely on jdocker 0.2.5 but only 0.2.4 has been pushed on\n> maven repo\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/18\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42975121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42975321", "body": "Can you launch the image from the commandline, and does it have an ssh server running?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42975321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42976207", "body": "That error is coming back from docker.\n\nYour host (192.168.133.1) does not have that image, you need to pull it\nfirst.\n\nOn Tue, May 13, 2014 at 5:07 PM, Guilhem Lettron\nnotifications@github.comwrote:\n\n> when trying to put guilhem/jenkins-slave-deb-build as docker ID, plugin\n> fail:\n> \n> 1 \\* Sending client request on thread jenkins.util.Timer [#5]\n> 1 > GET http://192.168.133.1:4243/images/guilhem%2Fjenkins-slave-deb-build/json\n> \n> mai 13, 2014 4:06:16 PM INFO org.glassfish.jersey.filter.LoggingFilter log\n> 2 \\* Client response received on thread jenkins.util.Timer [#5]\n> 2 < 404\n> 2 < Connection: close\n> 2 < Content-Length: 47\n> 2 < Content-Type: text/plain; charset=utf-8\n> 2 < Date: Tue, 13 May 2014 16:06:16 GMT\n> No such image: guilhem/jenkins-slave-deb-build\n> \n> mai 13, 2014 4:06:16 PM ATTENTION com.nirima.jenkins.plugins.docker.DockerCloud provision\n> Failed to count the # of live instances on Docker\n> javax.ws.rs.NotFoundException: HTTP 404 Not Found\n>     at org.glassfish.jersey.client.JerseyInvocation.convertToException(JerseyInvocation.java:917)\n>     at org.glassfish.jersey.client.JerseyInvocation.translate(JerseyInvocation.java:822)\n>     at org.glassfish.jersey.client.JerseyInvocation.access$600(JerseyInvocation.java:90)\n>     at org.glassfish.jersey.client.JerseyInvocation$3.call(JerseyInvocation.java:693)\n>     at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n>     at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n>     at org.glassfish.jersey.internal.Errors.process(Errors.java:228)\n>     at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:422)\n>     at org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:689)\n>     at org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:405)\n>     at org.glassfish.jersey.client.proxy.WebResourceFactory.invoke(WebResourceFactory.java:318)\n>     at com.sun.proxy.$Proxy70.inspectImage(Unknown Source)\n>     at com.nirima.docker.client.DockerClient$Image.inspect(DockerClient.java:473)\n>     at com.nirima.jenkins.plugins.docker.DockerCloud.addProvisionedSlave(DockerCloud.java:203)\n>     at com.nirima.jenkins.plugins.docker.DockerCloud.provision(DockerCloud.java:120)\n>     at hudson.slaves.NodeProvisioner.update(NodeProvisioner.java:281)\n>     at hudson.slaves.NodeProvisioner.access$000(NodeProvisioner.java:51)\n>     at hudson.slaves.NodeProvisioner$NodeProvisionerInvoker.doRun(NodeProvisioner.java:368)\n>     at hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:54)\n>     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n>     at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:351)\n>     at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:178)\n>     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:165)\n>     at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:267)\n>     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1146)\n>     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n>     at java.lang.Thread.run(Thread.java:701)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/19\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42976207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42977376", "body": "Yep - it's in the list of features to add..\n\nOn Tue, May 13, 2014 at 5:14 PM, Guilhem Lettron\nnotifications@github.comwrote:\n\n> oh ok. sorry.\n> \n> It's quite sad to not be able to pull a public vm :(\n> \n> I test and it works.\n> Thanks you :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/19#issuecomment-42976679\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42977376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42978934", "body": "No, that's right - your docker host will be mapping port 49152 to the\n'inner' port 22.\n\nOn Fri, Apr 25, 2014 at 12:53 PM, James Mills notifications@github.comwrote:\n\n> I've found a bug where if you configure the Docker plugin such as:\n> - Docker Host: 172.17.42.1\n> \n> Where the Jenkins Master is a Docker Container itself.\n> \n> When Jenkins spawns new salves in the configuration\n> it incorrectly tries to perform an SSH connection to\n> 172.17.42.1:49152 for example rather than the\n> actual IP Address of the newly formed Container.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/14\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42978934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408847", "body": "Thanks - it seems that docker have made a breaking change to use Id instead of ID.\njDocker now supports both, and this change should have made it into the 0.5 release.\nHTH!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408864", "body": "Can you try 0.5 - this is much more aggressive about reaping containers from its list if the docker\nhost reports it doesn't exist.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408880", "body": "Which version of SSH slaves do you have installed?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408906", "body": "Can you try 0.5? I can't follow why you're getting that error but noone else is..\n\nFeel free to re-open if that doesn't help...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408942", "body": "Can you try 0.5 (feel free to re-raise if it doesn't fix). I'm using docker 0.9 and it seems ok..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45408942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45409044", "body": "I'm going to close this as I'm not sure what else the plugin would need to do; it could be down to needing some additional options. If you find out feel free to re-open and we can add what's needed..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45409044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45709610", "body": "So there's 2 DNS settings\n1) the Container configuration \n2) the Host configuration (used to spin up the container).\n\nIn the docker API, (1) now seems to be deprecated. (2) is new, and therefore not supported on all docker versions. For the sakes of backwards compatibility, the plugin sets both.\n\nNow that docker has apparently officially gone 1.0, we should probably move to remove (1) altogether.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45709610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45740883", "body": "Yeah, that's probably a good idea.  I'm not sure the calculation is working correctly currently, there seems to be some race condition in there.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45740883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45987204", "body": "So 1.7 is required for any Jersey version >= 2.7 (current release is now 2.9). \n\nWhen diagnosing why the API was failing (which seemed eventually be that the version of docker I was testing against returned a content-type header, but no actual content), the first course is usually to upgrade dependencies.\n\nWhilst it's probably possible to revert backwards in this instance, there isn't a 1.6 maintenance version for Jersey from what I can see.\n\nI used to be somewhat more sympathetic to Java versioning when it wasn't open-source, and significant platforms (like Macs) were perennially a version behind. That's not true any more; Java 1.6 was EOL over a year ago, 1.7 will EOL in under a year, and the roadmaps that state when these events happen have been around a long time.\n\nWhat seems to happen however is that Corporate IT departments are slow to upgrade. They want their free software to run, without doing any work themselves. My worry is that by bowing to requests to maintain compatibility with obsolete platform versions, we're actually rewarding that behaviour - and making it even harder to move the platform on and take advantage of modern platform features. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45987204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45987388", "body": "Good idea!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45987388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45988617", "body": "Seems to build in 1.8 against 1.554, so I've changed the POM to that.\n\nI'll roll a release when I'm not firewalled off from release repositories..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45988617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46015626", "body": "Yeah, it's likely 'cos it hasn't synced to central for jDocker, I wouldn't worry about it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46015626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46149402", "body": "Ack. \n\nWe can probably filter with guava, but I suspect in testing I forgot the 'none' case :(\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46149402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46151875", "body": "Ok, I merged and re-rolled a 0.6.1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46151875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282376", "body": "Thanks for doing this.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282719", "body": "I've merged it - soonest I can get a release out is probably tonight (I'm firewalled from :8081).\n\nOne note - I suspect the template cap might be unreliable. It's got nothing to do with this patch, but the code I wrote here:\n\n```\nCollection<Container> matching = Collections2.filter(containers, new Predicate<Container>() {\n              public boolean apply(@Nullable Container container) {\n                  ContainerInspectResponse cis = dockerClient.container(container.getId()).inspect();\n                  return (cis.getImage().equalsIgnoreCase(ir.getId()));\n              }\n          });\n```\n\nIsn't quite right; it seems that the image returned by docker is arbitary if it has multiple tags. I.E: answering the question 'is this container based on _this_ image' isn't as simple as that. If you don't have >1 tag per image, you'll probably be ok.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282775", "body": "Fixed for 0.6.1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282848", "body": "What kind of timeouts have you set in the config ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46406685", "body": "Ok, so the following is happening :\n- when the / page is rendered, it attempts to display each of the slaves down the RHS\n- to do that, each slave is asked \"are you accepting jobs\"\n- what we do then is check that the container exists, and is up.\n  --> if the host fails to respond (or times out), we say 'no'.\n\nThus I suspect your host is unresponsive.\n\nThis behaviour is marginally better in the freshly minted 0.6.2, as it defers the 'check remote' to be as late as it can. It's possible we can factor that all out into the retention strategy, which is probably where it should go.\n\nGive 0.6.2 a spin and see if it's any better.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46406685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46406766", "body": "@dreewoo  you'll probably need 1.0 with plugin > 0.6, as the JSON API changed quite a bit.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46406766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46406777", "body": "MErged\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46406777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46407302", "body": "Yes, I observe this too :-(\n\nWhat I _think_ happens is Jenkins launches the slave, then immediately tries to connect to it (we defer this to the SSH Launcher, which is equivalent to you ssh'ing from the console). This is all in DockerComputerLauncher (which defers to SSHLauncher, which is part of jenkins).\n\nIf that connection happens very quickly, I think sometimes the sshd in the container isn't ready yet, and the launch fails. It seems a shame that the SSHLauncher doesn't retry (it does wait 60 seconds to get that connection).\n\nIf this is true, we might be able to fix by retrying the SSH launch. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46407302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46665485", "body": "You might want to try out the current master - I've wrapped the SSHLauncher in something that\nretries if it doesn't connect.\n\nIt doesn't have configurability yet, but then again neither does the SSH Launcher.. :-)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46665485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47928492", "body": "Cool.\n\nWe should probably add an option for builds to say whether they want to pull if not existing, or pull every time (this would be useful as if you had a Jenkins image, it could auto-update if you changed it).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47928492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48581135", "body": "merged.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48581135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48650306", "body": ".. what @thomassuckow said!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48650306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48893840", "body": "Hmm. I don't know if it's related to these fixes, but my Jenkins now eventually dies from having too many threads. It seems dead SSH connections leave a reader lying around:\n\n\"reader\" daemon prio=3 tid=0x000000000ae59000 nid=0x2063f runnable [0xfffffd7f44d1a000]\n   java.lang.Thread.State: RUNNABLE\n        at java.net.SocketInputStream.socketRead0(Native Method)\n        at java.net.SocketInputStream.read(SocketInputStream.java:150)\n        at java.net.SocketInputStream.read(SocketInputStream.java:121)\n        at net.schmizz.sshj.transport.Reader.run(Reader.java:68)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48893840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49351143", "body": "Not sure if it directly helps, but the token macro ${DOCKER_CONTAINERID} will resolve to the build's container ID within the context of a build, you might be able to hack something up with that.\n\nWhat might be hard is if you want those 'steps' to be jenkins slaves based on the output of the previous stage. I think that would be cool - but the problem is Jenkins launches slaves effectively by 'label' rather than 'specific image' -- it provisions machines in the background, then assigns jobs to them - not sure if there's a way around that..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49351143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49461802", "body": "Ack. Should be fixed in master / next release\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49461802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49651778", "body": "So - just catching up - I'm not sure I understand which issue we're addressing, and if it's a fix or a mitigation.\n\nCurrently, we get the behaviour that Jenkins seems to 'spin up' a number of slaves, even if there is no work for them to do - presumably ready for when a job kicks off. Whilst that isn't particularly what we want, the real problem is it's consuming a limited number of containers, so some jobs might not get to spin up because the docker host is capped.\n\nIsn't a timeout on an 'idle' slave just going to cause another one to be spawned in it's place? Or am I missing something? \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49651778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49657681", "body": "Ah - OK, so the problem is\n- job requests an instance, but doesn't care about which node (has no label)\n- that calls getTemplate(null), which just returns the first template\n- that gets launched, but when jenkins looks at it later on, it says the mode is EXCLUSIVE, which isn't a match.\n- Jenkins tries again... multiple instances, hilarity ensues.\n\nIn which case, could we not fix this by \n- adding the mode to DockerSlave.provision() method\n- The call in DockerCloud then becomes\n  slave = t.provision(new StreamTaskListener(System.out), label==null?Node.Mode.NORMAL:Node.Mode.EXCLUSIVE);\n\nThat avoids us having to specify a mode for the template itself (which I'm not sure would be right if you have a mix of tied and untied jobs). Less options for the user to get wrong.\n\nThe job timeout bit is probably useful for what you're describing - I was just checking it wasn't just going to keep respawning.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49657681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49661117", "body": "I like that solution even better, if that's true. I think it was only ever EXCLUSIVE as I thought that was required to prevent >1 job being launched on the slave.\n\nSo all that needs to change is\nNode.Mode mode = Node.Mode.EXCLUSIVE;\nbecomes\nNode.Mode mode = Node.Mode.NORMAL;\n\nIf you can rebase your idle timeout patch on top of that I can merge it as I think it's useful. thanks for tracking through what was happening, too.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49661117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49723262", "body": "If you're building work-in-progress jDocker (SNAPSHOT), you'll probably want to build that first\n\nhttps://github.com/nirima/jDocker\n\nalso -DskipTests in the mvn commandline will prevent you having to specify a docker host for tests to run.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49723262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49732341", "body": "The synchronized block can probably go. The function itself was originally wholly synchronized, but that doesn't work (and the sync statement is probably just historical from that).\n\nThere's a nasty race condition in Jenkins which is why the use of the AtomicInteger to determine if the check is already running - otherwise the whole thing can deadlock.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49732341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49779926", "body": "0.7 released.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49779926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49780040", "body": "Fixed in 0.7 release.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49780040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49780191", "body": "0.7 released\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49780191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49850450", "body": "You may want separate pull requests for each feature - but I'm guessing it's d3ad960 that you're most interested in (LXCConf options) ? That looks like it probably merges cleanly.\n\nI think some of the other patches have been superceded / reworked. The thing you want to be careful of is accidental re-formatting (e.g 3590be) as it makes it very hard to review what actually changed (and breaks analysing the history of 'where was this written')\n\nWhat I'd do is\n- do a 'git fetch' from jenkinsci/docker-plugin\n- either rebase your changes on top of that, or use git cherry-pick. For example, if you do something like\n\ngit remote add jenkinsci https://github.com/jenkinsci/docker-plugin.git\ngit fetch jenkinsci\n\nthen either\ngit checkout jenkinsci/master\ngitk --all \n(then select your patch, right-click and 'cherry pick')\n\nOR, possibly easier :\ngit rebase -i jenkinsci/master\nwill let you reorder / remove /rework superceded patches. (rebase -i is really, really, really useful). If you make the LXC one the first in the list, you can PR that one without the other patches (and I don't think there's any dependency between them).\n\nthen push, and re-PR.\nHTH!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49850450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49980333", "body": "I'm not sure that's a regression; DockerCloud:255 is new for this version, it's spinning up a container if one hasn't been found (though, now that I look at it, I'm not sure it's in the right place).\n\nHowever, what you say is also true - it shouldn't assume that 'latest' is the one that's wanted. It should use Identifier to figure out which part is which, so ought to be a relatively simple fix.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49980333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49980438", "body": "I've enabled issues for that project (an oversight...)\n\nThe docker API documentation can be a touch inaccurate at times.. :-/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49980438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51044863", "body": "I think you can work around if the slave already has the correct container..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51044863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52915262", "body": "I don't believe we have control of this, Jenkins decides the UI ordering\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52915262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52916066", "body": "Probably permanent, because I can't see the use of >1 executor per _docker_ slave.\n\nSince docker is an extremely lightweight \"process wrapper\", it's (basically) no more expensive to instantiate a new slave than it is to try to run a second executor within the first. Just bump the number of allowable  up in the cloud configuration\n\nThere's also no general guarantee that the test executor will be in the same slave as the upstream job (well, you could tie it with labels, but... yuck).\n\nIf you're trying to 'share' outputs to downstream jobs, tag the build job, then use a linked container for the downstream jobs.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52916066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52916738", "body": "Yes, definitely want this.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52916738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54597691", "body": "I think it's probably they have either changed their API, or (possibly more likely) removed an item that used to be deprecated.\n\nIt's probably really simple to fix, just at this moment I don't have a lot of time to devote to it (these things likely get bumped in priority the moment someone at $WORK installs a new docker :-) )\n\nIf you're not scared of Java, you could try building the library (https://github.com/nirima/jDocker) - the tests will likely fail at some point, and give you a bigger indication of what needs fixing (and you don't need all the Jenkins stuff in order to test it).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54597691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55598164", "body": "Cool.\n\nI'm just rolling up some other changes, I'll cut a release some time this\nweek after smoke testing it in our Jenkins rig.\n\nThanks to all for the various diagnoses, esp. @thomassuckow for figuring\nout it's the chunked issue.\n\nOn Mon, Sep 15, 2014 at 3:28 PM, Maciej Mazur notifications@github.com\nwrote:\n\n> it works with DOcker 1.2 and jDocker 1.6-SNAPSHOT (installed manually)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/issues/90#issuecomment-55597823\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55598164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56787945", "body": "No, that looks great as it is. I'd been monitoring the -dev lists and had seen various talk about the EC2 plugin's behaviour. I'd just copied that in the first instance, but always thought the 'only do 1 job' thing was a touch hacky.\n\nI was going to roll a release as there's a few changes of late which fix quite a lot of stuff..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56787945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808727", "body": "It's not so hard to 'git clone && mvn -DskipTests clean install'.\n\nIf Sonatype's snapshot repository is anything like as cumbersome as the release repo, I won't be doing that.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808871", "body": "Well, words eaten, it isn't painful at all.\n\nSNAPSHOT deployed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290337", "body": "I'm firewalled, so I can't access :8081 so it won't upload.\n\nFWIW, I never use the release plugin. It causes unending misery when it fails - which is always!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10309044", "body": "I have released and tagged a beta-1. As long as there's only one, there are\nno problems.\n\nI frankly don't care for maven-release-plugin, and I rather suspect it\nwon't work anyway (certainly versions:set doesn't). Plugins need to be\nparented from the Jenkins pom, but the shaded dependency jar cannot be,\notherwise you get a whole load of wrongness in that artifact. Feel free to\ntry however!\n\nOn Thu, Mar 19, 2015 at 7:01 PM, Kanstantsin Shautsou <\nnotifications@github.com> wrote:\n\n> the same request https://issues.jenkins-ci.org/browse/JENKINS-26517\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/commit/c8b893c38b81aadc724b544357c344e584a6773b#commitcomment-10292510\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10309044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10513414", "body": "Because it works!\n\nOn Tue, Mar 31, 2015 at 11:11 PM, Kanstantsin Shautsou <\nnotifications@github.com> wrote:\n\n> Why do you copy everything from jclouds?!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/commit/bdde16c512c9f72eabc209b7d369f258c987a7af#commitcomment-10506696\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10513414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10514892", "body": "Or, more specifically - they have _exactly_ the same issues that we have -\na 3rd party library (guava dependent), and a desire to use a later guava\nversion than is bundled with Jenkins.\n\nJenkins plugin system puts the core classloader _before_ the plugin\nclassloader (well, you can reverse that - it's not recommended and the\nguidance is 'bad things happen if you do this'). That's a pain, because you\nget occasional (and therefore very hard to test, as you get sudden and\nunexpected regressions) class cast and class reference errors - likely\nbecause when a guava class is referenced that is present in 11.x, you get\nthe Jenkins version, and if it isn't present in 11.x, you get the plugin\none. Specifically, I discovered in beta-1 a brand new classcast exception\ncaused by exactly this in the buildpublisher.\n\njenkins-jclouds has a core jenkins developer working on it. I'm minded to\nbelieve if that's the best solution they can come up with, then it's worth\ncopying as a starting point that _works now_. There may be better\nsolutions, but I rank them as lower value in allocating my time than adding\nfeatures.\n\nOn Wed, Apr 1, 2015 at 9:23 AM, Nigel Magnay nigel.magnay@gmail.com wrote:\n\n> Because it works!\n> \n> On Tue, Mar 31, 2015 at 11:11 PM, Kanstantsin Shautsou <\n> notifications@github.com> wrote:\n> \n> > Why do you copy everything from jclouds?!\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jenkinsci/docker-plugin/commit/bdde16c512c9f72eabc209b7d369f258c987a7af#commitcomment-10506696\n> > .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10514892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10517167", "body": "Doesn't that therefore answer the question of why it's been done that way -\nbecause shading does not work with HPI packaging?\n\nYou're right in that I don't actually care particularly how shading _should_\nwork. Delving into fixing maven's shade interaction with HPI is utterly and\ncompletely non-interesting to me. Having a plugin that doesn't completely\nfail when trying to build docker images from dockerfiles and push them to a\ncentral location _is_ critical, right now.\n\nYes, WIP branches will break. But I can't see any PR commit that is\ndescribed with \"fix shading so that it works correctly with the HPI\npackaging\" ? If one did, I'd be more than happy to merge it, and even do\nthe rebasing work if it's based on an earlier commit, since I doubt that'd\nbe very difficult. And likely jenkins-jclouds would likely welcome a\nsimilar patch.\n\nOn Wed, Apr 1, 2015 at 10:52 AM, Kanstantsin Shautsou <\nnotifications@github.com> wrote:\n\n> @magnayn https://github.com/magnayn person that did shading doesn't\n> remember what he did and why. I already cleaned some crap of your\n> copy-paste in my WIP branch, but your coding style cleanup will broke all\n> my work. It looks like you even didn't check what is happening and how\n> shading should work. Second shading should relocate guava classes, issue\n> happens because shade doesn't work with hpi packaging.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/commit/bdde16c512c9f72eabc209b7d369f258c987a7af#commitcomment-10515833\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10517167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10517848", "body": "Oh, right, so you _don't_ have a fix for shade/hpi mismatch.\n\nOf course it's understood how and whether it works; shading isn't exactly a\ncomplex process, therefore I disagree with your characterisation. When the\nclassref issue arose, it's easy to understand _why_ it occurs - so it's\nlogical to look at other plugins (particularly ones with input from core\ndevs) to see how they have attacked the same problem. The fact that they\n_also_ haven't a fix for the shade/hpi mismatch suggests that it may be a\nnon-trivial fix. Certainly non-trivial compared with what they have\nactually done, which is to access classes in shaded packages directly.\n\nAccessing classes by their shaded names is not ideal. But it works - right\nnow - and 'truth&beauty' solutions can come afterwards. It is, after all,\njust a search and replace change.\n\nOn Wed, Apr 1, 2015 at 11:29 AM, Kanstantsin Shautsou <\nnotifications@github.com> wrote:\n\n> Shading+hpi issue i found only yesterday and i already debugging it. In\n> wip branch i have some other clean-ups for poms. I don't care about\n> jclouds. If you want develop this plugin in such way \"i fixed somehow and\n> it looks to work\" and \"i copy-pasted some crap and it looks to work\", then\n> i gave up. You can continue doing alpha, beta after your every not reviewed\n> merge and ask people to test and infinitely getting bug reports.\n> How contributors should understand code when even author doesn't know how\n> and whether it works?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/commit/bdde16c512c9f72eabc209b7d369f258c987a7af#commitcomment-10517358\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10517848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10523348", "body": "As I've already said, I don't agree with your assertion of 'without understanding what you actually do' - the issue (the way jenkins interacts with classloaders) is understood precisely. It's also pretty well understood that the the classloading infrastructure is pretty hairy, leading to sub-optimal solutions like shading.\n\nPlease explain what bug is now present, and raise an issue if neccessary.\n\nI hear that you would rather \"try to fix or understand what happens with hpi and shading\". That's great, because I won't be doing that. I agree that doing so would represent a better solution. But I won't hold up not apply fixes waiting for a solution that may or may not materialise. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10523348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10525775", "body": "I don't think I have anything more to add.\n\nOn Wed, Apr 1, 2015 at 4:06 PM, Kanstantsin Shautsou <\nnotifications@github.com> wrote:\n\n> You said that plugin do 2 shades: 1) for docker-java library and it works,\n> 2) for guava. If you see any class/guava issues that mean that shading\n> doesn't work. And seems it doesn't work, because of hpi plugin ignore\n> execution, i'm debugging it. You can see executed mojos here\n> https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/202/com.nirima$docker-plugin/executedMojos\n> No shade, but it defined in pom.\n> So instead of checking why it doesn't work, you just changed classes to\n> shaded, that eventually matched to shaded from docker-java-shaded (1). I\n> got some advices from @jglick https://github.com/jglick and will try\n> proposed hack to do .jar packaging with maven-jar-plugin that works fine\n> with shade-plugin.\n> \n> Without any review of commits you just hiding real issues. I very hate\n> dealing with fixing/debugging post-factum.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/commit/bdde16c512c9f72eabc209b7d369f258c987a7af#commitcomment-10525728\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10525775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13692892", "body": "Workflow projects have TaskListeners, not BuildListeners.\n\nOn Fri, Oct 9, 2015 at 5:05 PM, Kanstantsin Shautsou <\nnotifications@github.com> wrote:\n\n> Where did you get issue with BuildListener? I need know for test case.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/commit/463eac252b2e0ba16db908fe366fe372c4853517#commitcomment-13689866\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13692892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23838880", "body": "I'm not clear why this is any better than what's already there : \nPortUtils.waitForPort is already attempting to wait for the remote SSH to be available before continuing ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23838880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28756486", "body": "You could use Collections2.filter() if you wanted\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28756486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "eaglerainbow": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/629ae525efbe6c62dd17ec794147abef42c66050", "message": "Bumping docker-java.version to 3.0.6"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cb7bdbd33cbe9e8a088f9c8fb459a5baf2b22079", "message": "Improved Error reporting in case of termination errors\n\nhttps://github.com/jenkinsci/docker-plugin/issues/401 documents a case \nwhere terminating a container failed. Log output was too bad to properly\nallow backtracking to the root cause, which prevents proper debugging. \n\nThis commit adds additional logging output of the causing exception in\nthe hope that a later analysis of the root cause will be possible."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/82c97cced78d150e9d85bef9742af233aadac154", "message": "[Fix] Help text on Container cap - Default value / value of zero\n\nAs seen in the discussion of pull request\nhttps://github.com/jenkinsci/docker-plugin/pull/425, it turned out that\nduring the migration from a string parameter to a numerical parameter,\nthe semantics of \"0\" has been adjusted to mean \"zero containers may be\nprovisioned\". Unfortunately, the help text was forgotten to be adopted\nproperly.\nThis commit fixes the documentation to reflect the current state of\nimplementation."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/06e0eb06528a50a9f1c2e8552610cfed81b37f50", "message": "Improve documentation on Retention Strategy/Availability drop down\n\nThe field for defining the retention strategy for a DockerTemplate\nrefers to the generic availability help. However, the values described\nthere only do have little in common with the values which the end user\ncan select. \nThis commit provide a rough summary about the retention strategies and\ntries to describe their behavior in a nutshell to the end user. The text\nis newly associated to the field \"Availability\" in the configuration\ndialog."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/10ce2f0f48ee1c8091cbedebd87f421f20848bc0", "message": "Improve documentation on Container Cap and Instance Capacity\n\nDocumentation of these two vital parameters left room for interpretation\n(leading to uncertainties).\nMoreover, the documentation of \"Container Cap\" was not reachable for the\nend user (also fixed with this commit)."}], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/426", "title": "[FEATURE] Docker Watchdog Async Periodic Work", "body": "As being discussed in\nhttps://github.com/jenkinsci/docker-plugin/issues/401, there seems to be\nissues with containers which are not cleaned up properly. Therefore, a\nWatchdog-like periodic work instance is being introduced, which verifies\nthe consistency of the containers which are reported to be running on\nthe docker server (and were provisioned by the current Jenkins instance)\ncompared with the slaves attached to the current Jenkins instance.\nMoreover, containers which have exited, but have not been removed yet,\nare reported.\n\nSo far, only reports to the logs are being generated. After further\nanalysis on the issue has been performed, there is the intention to also\ntrigger clean up commands to the docker server, fixing container leaks.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Loki-Afro": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1af64bb931830c219be2215eba2563134be1294d", "message": "Default value for Remote FS Root Mapping"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/cf8c043f1350ef844bae5512d977d50e044f2ddf", "message": "JENKINS-36080 enable to specify docker api version\n\nRevert \"Hide API version from users and nullify for existed installations.\"\nThis reverts commit 59abe7c1916c02247228b537be41d4ebd0478049.\n\nSince our dependency docker-java is not yet docker api v1.24 compatible\nwe need a way to specify the docker api version to use. This was\nfunctionality was removed a while ago. It is back now, as a more or less\nworkaround.\n\nNote that \"http://..\" was removed from docker-java as a configuration option, it should now\nbe \"tcp://...\""}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bschelberg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/698663f65a6128d4a15d23b8b060f96617adf6e9", "message": "Upgrade docker-java to 3.0.1"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wsoula": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/7f80fe061d43cdbc35e2d87bf41c2ed2776e5e12", "message": "Add caveat about workspace mapping\n\nThis change adds some helper text to the remote workspace mapping\nconfiguration option that would have saved me a lot of time.  This adds\ndocumentation about #246"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "irissmann": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/5eadee151ec5f025261ec2b0b001e2abb538fb41", "message": "[JENKINS-33426]: Add support for configuraion of templates on project level."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fab30": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/9aef75a32bf8639aeeca199a9fd9a08e84ca00d4", "message": "Fix tests and change network field"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/d5553d47c95defbb70079a5eb263fd6a61ebbc31", "message": "Add network field to permit the multi host networking"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dekobon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/1b4b2546567bdb0e1ffcb2a64075a5ed7a1c457e", "message": "Broke single host abstraction detection into its own method."}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/0c6eb610427a30499472ff61321d341c1d982c00", "message": "Added support for single host abstraction on Joyent's Triton."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pfalcon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/commits/6e12706ad56317c7b473ae6a8768277c697be67f", "message": "DockerCloud: Accompany \"Bad template\" message with actual stacktrace.\n\nThat message is confusing, and oftentimes, wrong - the problem may be not\nwith Docker template, but with something else, and it may be not even on\nDocker side, but on plugin side. So, just let people to see what really\nhappens and where, to have better chance to diagnose it.\n\nImplementation uses SLF4J feature available since 1.6:\nhttp://www.slf4j.org/faq.html#paramException (Jenkins uses 1.7)\n\nSigned-off-by: Paul Sokolovsky <paul.sokolovsky@linaro.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "laenzlinger": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/497", "title": "JENKINS-45266: Support for setting shared memory size (--shm-size) for docker slaves", "body": "For our use case we would like to increase the shared memory size of the containers started by the docker-plugin. The setting is possible via the command line with the option --shm-size.\r\n\r\nThis PR allows to configure the shared memory sized in the jenkins plugin configuration (within the template config)\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kepeket": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/488", "title": "Improve container garbage collection", "body": "Very often, when containers are unexpectedly killed, the plugin keeps tracks of them, preventing Jenkins to pop up additional slaves.\r\n\r\nThis workaround allow the plugin to get the exact amount of containers running by polling the docker api from time to time", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pault28": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/472", "title": "[FIX docker-plugin-407] Make ssh port binding configurable", "body": "- Fix issue #407  - security issue with binding all started containers with 0.0.0.0::port\r\n- This adds an option box that controls how the ssh port is bound when starting the container. Ticking it results in `127.0.0.1:32770->22/tcp`.\r\nDefault  and current behaviour (not ticking) is `0.0.0.0:32770->22/tcp`\r\n- related to fix for #20\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/jenkinsci/docker-plugin/472)\n<!-- Reviewable:end -->\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amerkel2": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/440", "title": "Fix reading of network settings from docker.", "body": "This pull request fixes https://issues.jenkins-ci.org/browse/JENKINS-38135 by reading the container's IP address from the `network` map of the container settings instead of using the deprecated top-level `IPAddress` field in case a custom network is defined for the docker template.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jcsirot": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/168", "title": "Add the possibility to choose the image repository and tag when commited", "body": "This patch adds 2 fields to customize the repository and tag when the docker image is commited. When these fields are left empty the default values are used (i.e. the job name for the repository and the build name for the tag).\n", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rskang": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/132", "title": "Commit / tag on failure", "body": "Also shows names as well as IDs in the Build Data section\n\nCode by @djl197 I just merged it onto a more current master\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/jenkinsci/docker-plugin/132)\n\n<!-- Reviewable:end -->\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lfryc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33914236", "body": "Hey @magnayn thanks for quick response.\n\nI can no longer reproduce the issue above with 0.2 release! Thanks.\nDoes it mean the issue I have linked isn't actually relevant to this one?\n\n---\n\nDuring testing I have also caught this issue: https://github.com/jenkinsci/docker-plugin/issues/3\nwhich seems not to be relevant.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/33914236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "andrewcooke-isti": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34056407", "body": "i updated to 0.2 and it still crashes:\n\n```\njavax.servlet.ServletException: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"foo\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:778)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.MetaClass$4.doDispatch(MetaClass.java:210)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n    at org.kohsuke.stapler.Stapler.service(Stapler.java:225)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n    at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n    at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n    at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n    at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n    at org.eclipse.jetty.server.Server.handle(Server.java:370)\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n    at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960)\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021)\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n    at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"foo\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at hudson.model.Descriptor.newInstance(Descriptor.java:576)\n    at hudson.model.ComputerSet.doDoCreateItem(ComputerSet.java:293)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n    at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n    at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n    at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:120)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    ... 46 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"foo\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:396)\n    at hudson.model.Descriptor.newInstance(Descriptor.java:567)\n    ... 57 more\nCaused by: java.lang.IllegalArgumentException: Failed to convert the launcher parameter of the constructor public hudson.slaves.DumbSlave(java.lang.String,java.lang.String,java.lang.String,java.lang.String,hudson.model.Node$Mode,java.lang.String,hudson.slaves.ComputerLauncher,hudson.slaves.RetentionStrategy,java.util.List) throws java.io.IOException,hudson.model.Descriptor$FormException\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:686)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 60 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.ComputerLauncher from {\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:684)\n    ... 62 more\nCaused by: org.kohsuke.stapler.NoStaplerConstructorException: There's no @DataBoundConstructor on any constructor of class com.nirima.jenkins.plugins.docker.DockerComputerLauncher\n    at org.kohsuke.stapler.ClassDescriptor.loadConstructorParamNames(ClassDescriptor.java:176)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:671)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 64 more\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34056407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34058712", "body": "running `mvn install` in a copy cloned from git gives:\n\n```\n[ERROR] Failed to execute goal on project docker-plugin: Could not resolve dependencies for project com.nirima:docker-plugin:hpi:0.3-SNAPSHOT: Could not find artifact com.kpelykh:docker-java:jar:0.6.1-nm-SNAPSHOT in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/) -> [Help 1]\n```\n\nplease provide instructions if you want me to test this further.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34058712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34076654", "body": "nope.\n\ni uninstalled the plugin, restarted, built docker-java from the repo you linked to above (i had to use `-DskipTests`) and then built docker-plugin and installed the hpi file.\n\nthen when i try to add a node (after specifying number of executors and FS root) i see\n\n```\njavax.servlet.ServletException: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:778)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.MetaClass$4.doDispatch(MetaClass.java:210)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n    at org.kohsuke.stapler.Stapler.service(Stapler.java:225)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n    at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n    at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n    at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n    at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n    at org.eclipse.jetty.server.Server.handle(Server.java:370)\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n    at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960)\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021)\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n    at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at hudson.model.Descriptor.newInstance(Descriptor.java:576)\n    at hudson.model.ComputerSet.doDoCreateItem(ComputerSet.java:293)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n    at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n    at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n    at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:120)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    ... 46 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:396)\n    at hudson.model.Descriptor.newInstance(Descriptor.java:567)\n    ... 57 more\nCaused by: java.lang.IllegalArgumentException: Failed to convert the launcher parameter of the constructor public hudson.slaves.DumbSlave(java.lang.String,java.lang.String,java.lang.String,java.lang.String,hudson.model.Node$Mode,java.lang.String,hudson.slaves.ComputerLauncher,hudson.slaves.RetentionStrategy,java.util.List) throws java.io.IOException,hudson.model.Descriptor$FormException\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:686)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 60 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.ComputerLauncher from {\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:684)\n    ... 62 more\nCaused by: org.kohsuke.stapler.NoStaplerConstructorException: There's no @DataBoundConstructor on any constructor of class com.nirima.jenkins.plugins.docker.DockerComputerLauncher\n    at org.kohsuke.stapler.ClassDescriptor.loadConstructorParamNames(ClassDescriptor.java:176)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:671)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 64 more\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34076654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34085462", "body": "i haven't changed from the version i gave in the top post (1.549).\n\nand yes, i agree that the error message says that i need @DataBoundConstructor on the constructor of DockerComputerLauncher - i thought that was what was applied in 0.2 or trunk.  why did you ask me to build / try those if they didn't have that?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34085462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34086914", "body": "adding @DataBoundConstructor gives a new compile time error about @Target.  i don't have time to understand this code; it's going to be quicker for me to replace your plugin with a script.  happy to provide more details on the install if you need them, but won't be compiling more test code for a while.  sorry.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34086914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rws-github": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34079064", "body": "Odd, the DockerComputerLauncher does not need to be constructed by JSON. It\nshould be created by the DockerTemplate during provisioning. What version\nof Jenkins are you using? I'm on 1.549.\n\nOn Tue, Feb 4, 2014 at 11:26 AM, magnayn notifications@github.com wrote:\n\n> I think you need\n> \n> @DataBoundConstructor\n> \n> on the constructor of DockerComputerLauncher\n> \n> I don't know why your instance needs this and mine doesn't, however!\n> \n> On Tue, Feb 4, 2014 at 4:20 PM, andrewcooke-isti\n> notifications@github.comwrote:\n> \n> > nope.\n> > \n> > i built docker-java from the repo you linked to above (i had to use\n> > -DskipTests) and then built docker-plugin and installed the hpi file.\n> > \n> > then when i try to add a node (after specifying number of executors and\n> > FS\n> > root) i see\n> > \n> > javax.servlet.ServletException: java.lang.RuntimeException: Failed to\n> > instantiate class hudson.slaves.DumbSlave from\n> > {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProper\n> > ties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n> > at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:778)\n> > at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n> > at org.kohsuke.stapler.MetaClass$4.doDispatch(MetaClass.java:210)\n> > at\n> > org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n> > \n> > at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n> > at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n> > at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n> > at org.kohsuke.stapler.Stapler.service(Stapler.java:225)\n> > at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n> > at\n> > org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n> > \n> > at\n> > hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n> > at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n> > \n> > at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n> > \n> > at\n> > hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n> > \n> > at\n> > hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n> > at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n> > \n> > at\n> > org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n> > \n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n> > \n> > at\n> > hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n> > \n> > at\n> > org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n> > \n> > at\n> > org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n> > at\n> > org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n> > \n> > at\n> > org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n> > at\n> > org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n> > \n> > at\n> > org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n> > \n> > at\n> > org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n> > at\n> > org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n> > \n> > at\n> > org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n> > \n> > at\n> > org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n> > \n> > at\n> > org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n> > \n> > at org.eclipse.jetty.server.Server.handle(Server.java:370)\n> > at\n> > org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n> > \n> > at\n> > org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960)\n> > \n> > at\n> > org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021)\n> > \n> > at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\n> > at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n> > at\n> > org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n> > \n> > at\n> > org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n> > \n> > at\n> > org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n> > \n> > at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n> > at\n> > java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n> > \n> > at\n> > java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n> > \n> > at java.lang.Thread.run(Thread.java:744)\n> > Caused by: java.lang.RuntimeException: Failed to instantiate class\n> > hudson.slaves.DumbSlave from\n> > {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"sta\n> > pler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n> > at hudson.model.Descriptor.newInstance(Descriptor.java:576)\n> > at hudson.model.ComputerSet.doDoCreateItem(ComputerSet.java:293)\n> > at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n> > at\n> > sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n> > \n> > at\n> > sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n> > \n> > at java.lang.reflect.Method.invoke(Method.java:606)\n> > at\n> > org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n> > at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n> > at\n> > org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n> > \n> > at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:120)\n> > at\n> > org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n> > \n> > at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n> > ... 46 more\n> > Caused by: java.lang.IllegalArgumentException: Failed to instantiate\n> > class hudson.slaves.DumbSlave from\n> > {\"name\":\"docker\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{&\n> > quot;stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n> > at\n> > org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n> > at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n> > at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:396)\n> > at hudson.model.Descriptor.newInstance(Descriptor.java:567)\n> > ... 57 more\n> > Caused by: java.lang.IllegalArgumentException: Failed to convert the\n> > launcher parameter of the constructor public\n> > hudson.slaves.DumbSlave(java.lang.String,java.lang.String,java.lang.String,java.lang.String,hudson.model.Node$Mode,java.lang.String,hudson.slaves.ComputerLauncher,hudson.slaves.RetentionStrategy,java.util.List)\n> > throws java.io.IOException,hudson.model.Descriptor$FormException\n> > at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:686)\n> > at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n> > at\n> > org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n> > ... 60 more\n> > Caused by: java.lang.IllegalArgumentException: Failed to instantiate\n> > class hudson.slaves.ComputerLauncher from\n> > {\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\"}\n> > \n> > at\n> > org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n> > at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n> > at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:684)\n> > ... 62 more\n> > Caused by: org.kohsuke.stapler.NoStaplerConstructorException: There's no\n> > @DataBoundConstructor on any constructor of class\n> > com.nirima.jenkins.plugins.docker.DockerComputerLauncher\n> > at\n> > org.kohsuke.stapler.ClassDescriptor.loadConstructorParamNames(ClassDescriptor.java:176)\n> > \n> > at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:671)\n> > at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n> > at\n> > org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n> > ... 64 more\n> > \n> > ## \n> > \n> > Reply to this email directly or view it on GitHub<\n> > https://github.com/jenkinsci/docker-plugin/issues/2#issuecomment-34076654>\n> > \n> > .\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/2#issuecomment-34077402\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/34079064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37861910", "body": "To configure Jenkins to use Docker: go to Manage Jenkins and select\nConfigure System. At the bottom of that page, there should be a 'Cloud'\nsection with a drop-down to create a Docker cloud. That should get you\nstarted.\n\nOn Mon, Mar 17, 2014 at 3:15 PM, Erik Kristensen\nnotifications@github.comwrote:\n\n> I got it installed, but I don't see how to tell Jenkins to start the\n> container or use it for the build process?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/jenkinsci/docker-plugin/issues/6#issuecomment-37858001\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37861910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "grimpy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36282835", "body": "Downgraden SSH slaves to version 1.6 (instead of 1.6.1) fixed it\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36282835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vania-pooh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36836759", "body": "Works for me. Installed it from Jenkins UI yesterday.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36836759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36886313", "body": "It's under Manage Jenkins > Configure System > Cloud > Add a new cloud > Docker. Then you need to specify docker instance label in the build label. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36886313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36893979", "body": "I think \"Slave Launchers and Controllers\". It's version is 0.2\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36893979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36902901", "body": "I have two times more links.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36902901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37904400", "body": "You need to check \"Restrict where this project can be run\" checkbox in the build configuration and specify label from the docker configuration in the admin section (there's a field called \"Labels\" there).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37904400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "ekristen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36885715", "body": "odd, I'm running the latest jenkins, 1.553, when I search for docker in available plugins all I get is \"docker-build-step\", I've manually scrolled through the list and I've used the search feature. What category is it suppose to be under? Thanks\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36885715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36886588", "body": "I'm assuming you have to install a plugin though first? I don't see Cloud under \"Configure System\". I'm definitely not a Jenkin's expert. Thanks for the help.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36886588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36887991", "body": "I just looked through pluginManager/available again and there is no entry for this plugin? It is suppose to be there correct? Under which section and with what title?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36887991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36900671", "body": "These are the only options I have under that category. \nhttps://dl.dropboxusercontent.com/u/15809802/Screen%20Shot%202014-03-06%20at%2010.42.03%20AM.png\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36900671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36904243", "body": "Thanks for helping! Once you confirmed that I dug a little more into it, seems that my Jenkins system hadn't updated the plugins properly. All is well now! \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/36904243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37858001", "body": "I got it installed, but I don't see how to tell Jenkins to start the container or use it for the build process?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37858001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37862000", "body": "I got that part figured out. Once that is setup, how do you tell a project/build to use it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/37862000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kei-yamazaki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/38026822", "body": "I had the same problem.\nDowngraded plugin to 1.6, but it's not work.\nBut, version 1.5 is work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/38026822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mamciek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39317290", "body": "Any chance of fixing this any time soon?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39317290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46005506", "body": "I have added volume configuration option: https://github.com/jenkinsci/docker-plugin/pull/30\nWaiting for merge :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46005506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46006182", "body": "The whole project is failing since 2014-05-16 08:57:28. This is not because of my pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46006182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55597823", "body": "it works with DOcker 1.2 and jDocker 1.6-SNAPSHOT (installed manually)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55597823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zloykaban": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39319697", "body": "I have a same problem ! and same work around docker plugin version 0.3, jenkins version 1.556 and 1.557\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39319697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sfreire": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39516143", "body": "ai have tg same problem with random ssh credentials being created..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39516143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39667172", "body": "@ckulla , you downgraded what to which version exactly?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39667172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40585336", "body": "@magnayn , im waiting for the RPM for v0.10.0. as soon as I have it, i'll report again\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40585336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ckulla": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39645226", "body": "Same problem here, downgrading helped. Hope this issue will be fixed soon. \n\nWhen reading the docs I see that there should also be a \"SSH Username with password\" credential but I don't see it anywhere, see https://wiki.jenkins-ci.org/display/JENKINS/SSH+Slaves+plugin\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/39645226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sduchesneau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40515784", "body": "Hi, I added a simple parameter \"Docker Command\" on this repo here: https://github.com/sduchesneau/docker-plugin\n\nIt does not use the Default CMD, but it allows me to set a default command ( I use /sbin/init on tianon/ubuntu-init )\n\nIt works for me. (for convenience, I put the compiled .jar here -> http://stepd.ca/docker-plugin.jar)\n\nTo build it on ubuntu 12.04, with maven:\n\n```\nsudo apt-get install openjdk-6-jdk maven2\ngit clone git@github.com:sduchesneau/docker-plugin.git\ncd docker-plugin\nmvn install\n```\n\n(then install the docker-plugin.hpi file to jenkins from advanced tab in \"Manage Plugins\" and restart jenkins)\n\nPlease let me know if it works for you. (I've just sent a pull request.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40515784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40516585", "body": "+1 same issue and workaround here.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40516585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cloudbees-pull-request-builder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40516580", "body": "[plugins \u00bb docker-plugin #17](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/17/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40516580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/41662289", "body": "[plugins \u00bb docker-plugin #22](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/22/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/41662289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/43327968", "body": "[plugins \u00bb docker-plugin #25](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/25/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/43327968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45749379", "body": "[plugins \u00bb docker-plugin #32](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/32/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45749379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46005560", "body": "[plugins \u00bb docker-plugin #35](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/35/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46005560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46137425", "body": "[plugins \u00bb docker-plugin #38](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/38/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46137425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46178371", "body": "[plugins \u00bb docker-plugin #40](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/40/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46178371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46203013", "body": "[plugins \u00bb docker-plugin #41](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/41/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46203013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46210425", "body": "[plugins \u00bb docker-plugin #42](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/42/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46210425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46218269", "body": "[plugins \u00bb docker-plugin #43](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/43/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46218269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46488267", "body": "[plugins \u00bb docker-plugin #48](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/48/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46488267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46581264", "body": "[plugins \u00bb docker-plugin #49](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/49/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46581264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47149403", "body": "[plugins \u00bb docker-plugin #51](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/51/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47149403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47149546", "body": "[plugins \u00bb docker-plugin #52](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/52/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47149546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47149693", "body": "[plugins \u00bb docker-plugin #53](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/53/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47149693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47204780", "body": "[plugins \u00bb docker-plugin #54](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/54/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47204780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47705920", "body": "[plugins \u00bb docker-plugin #55](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/55/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47705920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47798206", "body": "[plugins \u00bb docker-plugin #56](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/56/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47798206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47837373", "body": "[plugins \u00bb docker-plugin #57](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/57/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47837373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48416049", "body": "[plugins \u00bb docker-plugin #60](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/60/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48416049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49113763", "body": "[plugins \u00bb docker-plugin #66](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/66/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49113763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49337488", "body": "[plugins \u00bb docker-plugin #67](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/67/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49337488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49666497", "body": "[plugins \u00bb docker-plugin #69](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/69/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49666497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49666982", "body": "[plugins \u00bb docker-plugin #70](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/70/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49666982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49703578", "body": "[plugins \u00bb docker-plugin #71](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/71/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49703578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49849160", "body": "[plugins \u00bb docker-plugin #77](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/77/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49849160/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49978388", "body": "[plugins \u00bb docker-plugin #78](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/78/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49978388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49984269", "body": "[plugins \u00bb docker-plugin #79](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/79/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49984269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50154238", "body": "[plugins \u00bb docker-plugin #80](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/80/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50154238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50170890", "body": "[plugins \u00bb docker-plugin #81](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/81/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50170890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51595247", "body": "[plugins \u00bb docker-plugin #83](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/83/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51595247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51595444", "body": "[plugins \u00bb docker-plugin #84](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/84/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51595444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53463025", "body": "[plugins \u00bb docker-plugin #86](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/86/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53463025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53622012", "body": "[plugins \u00bb docker-plugin #87](https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/87/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53622012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "evarga": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40586550", "body": "OK. Please, add it to the Wiki page at your convenience, in a manner you think is most suitable.\n\nThanks, Ervin\n\nOn Apr 16, 2014, at 12:39, magnayn notifications@github.com wrote:\n\n> That's cool.\n> \n> Do you want to add that to the wiki page? \n> https://wiki.jenkins-ci.org/display/JENKINS/Docker+Plugin\n> \n> It would be neat to perhaps have a feature whereby we could specify to pull a docker image to use as the build slave before startup.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40586550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "prologic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40706948", "body": "I don't think I'm understanding this plugin all that well or I'm doing something wrong:\n\nThis is the error I get when I try to add a Docker Node:\n\n```\nA problem occurred while processing the request. Please check our bug tracker to see if a similar problem has already been reported. If it is already reported, please vote and put a comment on it to let us gauge the impact of the problem. If you think this is a new issue, please file a new issue. When you file an issue, make sure to add the entire stack trace, along with the version of Jenkins and relevant plugins. The users list might be also useful in understanding what has happened.\n\nStack trace\n\njavax.servlet.ServletException: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"test\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"1172.17.0.8\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\",\"launchTimeoutSeconds\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:778)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.MetaClass$4.doDispatch(MetaClass.java:210)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:858)\n    at org.kohsuke.stapler.Stapler.invoke(Stapler.java:631)\n    at org.kohsuke.stapler.Stapler.service(Stapler.java:225)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:686)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1494)\n    at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:96)\n    at hudson.plugins.greenballs.GreenBallFilter.doFilter(GreenBallFilter.java:58)\n    at hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:99)\n    at hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:88)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:48)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n    at hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:76)\n    at hudson.security.HudsonFilter.doFilter(HudsonFilter.java:164)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:46)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1482)\n    at hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:81)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1474)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:499)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\n    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1086)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:428)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1020)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\n    at org.eclipse.jetty.server.Server.handle(Server.java:370)\n    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\n    at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:960)\n    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1021)\n    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\n    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\n    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:668)\n    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\n    at winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: java.lang.RuntimeException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"test\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"1172.17.0.8\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\",\"launchTimeoutSeconds\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at hudson.model.Descriptor.newInstance(Descriptor.java:576)\n    at hudson.model.ComputerSet.doDoCreateItem(ComputerSet.java:293)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.kohsuke.stapler.Function$InstanceFunction.invoke(Function.java:298)\n    at org.kohsuke.stapler.Function.bindAndInvoke(Function.java:161)\n    at org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:96)\n    at org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:120)\n    at org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:53)\n    at org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:728)\n    ... 48 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.DumbSlave from {\"name\":\"test\",\"nodeDescription\":\"\",\"numExecutors\":\"1\",\"remoteFS\":\"/home/jenkins\",\"labelString\":\"\",\"mode\":\"NORMAL\",\"\":[\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"hudson.slaves.RetentionStrategy$Always\"],\"launcher\":{\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"1172.17.0.8\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\",\"launchTimeoutSeconds\":\"\"},\"retentionStrategy\":{\"stapler-class\":\"hudson.slaves.RetentionStrategy$Always\"},\"nodeProperties\":{\"stapler-class-bag\":\"true\"},\"type\":\"hudson.slaves.DumbSlave\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:396)\n    at hudson.model.Descriptor.newInstance(Descriptor.java:567)\n    ... 59 more\nCaused by: java.lang.IllegalArgumentException: Failed to convert the launcher parameter of the constructor public hudson.slaves.DumbSlave(java.lang.String,java.lang.String,java.lang.String,java.lang.String,hudson.model.Node$Mode,java.lang.String,hudson.slaves.ComputerLauncher,hudson.slaves.RetentionStrategy,java.util.List) throws java.io.IOException,hudson.model.Descriptor$FormException\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:686)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 62 more\nCaused by: java.lang.IllegalArgumentException: Failed to instantiate class hudson.slaves.ComputerLauncher from {\"stapler-class\":\"com.nirima.jenkins.plugins.docker.DockerComputerLauncher\",\"host\":\"1172.17.0.8\",\"credentialsId\":\"\",\"port\":\"22\",\"javaPath\":\"\",\"jvmOptions\":\"\",\"prefixStartSlaveCmd\":\"\",\"suffixStartSlaveCmd\":\"\",\"launchTimeoutSeconds\":\"\"}\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:589)\n    at org.kohsuke.stapler.RequestImpl.bindJSON(RequestImpl.java:400)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:684)\n    ... 64 more\nCaused by: org.kohsuke.stapler.NoStaplerConstructorException: There's no @DataBoundConstructor on any constructor of class com.nirima.jenkins.plugins.docker.DockerComputerLauncher\n    at org.kohsuke.stapler.ClassDescriptor.loadConstructorParamNames(ClassDescriptor.java:176)\n    at org.kohsuke.stapler.RequestImpl.instantiate(RequestImpl.java:671)\n    at org.kohsuke.stapler.RequestImpl.access$100(RequestImpl.java:81)\n    at org.kohsuke.stapler.RequestImpl$TypePair.convertJSON(RequestImpl.java:587)\n    ... 66 more\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/40706948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "insom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/41662552", "body": "_Can't believe I'm replying to a bot_\n\nJust for the record it's failing because master already depends on an unreleased version of jDocker - I've not changed this for better _or_ worse.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/41662552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "stylpe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/41792070", "body": "You're referring to https://issues.jenkins-ci.org/browse/JENKINS-22347 ? It's included in 1.554.1 which is scheduled to be released today. I don't know how this version dependency is managed, but I hope it's possible to specify both 1.557 and 1.554.1 as supported?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/41792070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42538070", "body": "I checked the plugin list again today (running LTS 1.554.1), and it was in the list, and installed successfully! So I'm closing this issue (don't know if you actually did anything to make this happen :P). \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42538070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/43740930", "body": "Sorry about this, I just realized only version 0.3 is available for the LTS version, and it has problems like #4. Can you see if it's possible to make the latest version available?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/43740930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282000", "body": "Hey, thanks for taking care of this, but the plugin page still states Required Core 1.557 :(\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46282000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46816616", "body": "I think it's because you require jenkins-core 1.557. I can't reopen this issue, do you want me to open a new one?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46816616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46816978", "body": "No, you can see the pom here: https://github.com/jenkinsci/docker-plugin/blob/1f3d988b890ddba14e3192455a1d5ac6612b6351/pom.xml \n\nThe org.jenkins-ci.plugins:plugin dep is 1.554, but the org.jenkins-ci.main:jenkins-core dep is still 1.557\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46816978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48151144", "body": "@magnayn ping?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48151144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49274020", "body": "I guess this isn't a huge issue anymore, since the next LTS is scheduled for wednesday next week and will be based on version 1.565 according to http://jenkins-ci.org/stable-rc\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49274020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "maci0": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42574274", "body": "```\nroot@hv ~ # rpm -qa docker-io\ndocker-io-0.10.0-2.el7.x86_64\n```\n\nI have no firewall running. Just the docker created NAT entries for iptables.\n\nI want to have jenkins running on the same host because that way i can bind the docker tcp port to the bridge ip address and dont need to make my docker instance public over the internet.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42574274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42582319", "body": "I too think it is down to network stuff..\nWhen I nmap the host ip from within a docker container I can see all published ports listed as filtered.\nThe only thing the plugin could to would be to use the containers internal ip when it detects that it runs within a container on the same system.\nIt seems people have been using swarm in order to get that working. but that would require me manually creating the containers as buildstep and then have them connect to the jenkins instance through the internal bridge network.\n\nFollowing the console output to clarify my previous post\n\n```\nroot@hv ~ # docker ps -a                         \nCONTAINER ID        IMAGE                 COMMAND                CREATED             STATUS              PORTS                     NAMES\n377b33637584        maci/jenkins:latest   java -jar /usr/lib/j   25 hours ago        Up 2 minutes        0.0.0.0:49167->8080/tcp   jenkins             \nroot@hv ~ # docker run -d -p 22 maci/jenkins-slave /usr/sbin/sshd -D\nae04cc523fde3a2a45acad5dd4fb61db527c555a89b446bbd3fdb430a522a751\nroot@hv ~ # docker ps -a\nCONTAINER ID        IMAGE                       COMMAND                CREATED             STATUS              PORTS                     NAMES\nae04cc523fde        maci/jenkins-slave:latest   /usr/sbin/sshd -D      5 seconds ago       Up 4 seconds        0.0.0.0:49156->22/tcp     high_bohr           \n377b33637584        maci/jenkins:latest         java -jar /usr/lib/j   25 hours ago        Up 2 minutes        0.0.0.0:49167->8080/tcp   jenkins             \nroot@hv ~ # docker run -i -t fedora ssh -vvvv 172.17.42.1 -p 49156\nOpenSSH_6.4, OpenSSL 1.0.1e-fips 11 Feb 2013\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 51: Applying options for *\ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to 172.17.42.1 [172.17.42.1] port 49156.\ndebug1: connect to address 172.17.42.1 port 49156: Connection timed out\nssh: connect to host 172.17.42.1 port 49156: Connection timed out\n255 root@hv ~ # ssh -vvvv 172.17.42.1 -p 49156                                                                                                                       :(\nOpenSSH_6.4, OpenSSL 1.0.1e-fips 11 Feb 2013\ndebug1: Reading configuration data /etc/ssh/ssh_config\ndebug1: /etc/ssh/ssh_config line 51: Applying options for *\ndebug2: ssh_connect: needpriv 0\ndebug1: Connecting to 172.17.42.1 [172.17.42.1] port 49156.\ndebug1: Connection established.\ndebug1: permanently_set_uid: 0/0\ndebug1: identity file /root/.ssh/id_rsa type -1\ndebug1: identity file /root/.ssh/id_rsa-cert type -1\ndebug1: identity file /root/.ssh/id_dsa type -1\ndebug1: identity file /root/.ssh/id_dsa-cert type -1\ndebug1: identity file /root/.ssh/id_ecdsa type -1\ndebug1: identity file /root/.ssh/id_ecdsa-cert type -1\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_6.4\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_6.4\ndebug1: match: OpenSSH_6.4 pat OpenSSH*\ndebug2: fd 3 setting O_NONBLOCK\ndebug3: put_host_port: [172.17.42.1]:49156\ndebug3: load_hostkeys: loading entries for host \"[172.17.42.1]:49156\" from file \"/root/.ssh/known_hosts\"\ndebug3: load_hostkeys: loaded 0 keys\ndebug1: SSH2_MSG_KEXINIT sent\ndebug1: SSH2_MSG_KEXINIT received\ndebug2: kex_parse_kexinit: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: kex_parse_kexinit: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-dss-cert-v00@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-rsa,ssh-dss\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: none,zlib@openssh.com,zlib\ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: first_kex_follows 0 \ndebug2: kex_parse_kexinit: reserved 0 \ndebug2: kex_parse_kexinit: ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1\ndebug2: kex_parse_kexinit: ssh-rsa,ecdsa-sha2-nistp256\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour,rijndael-cbc@lysator.liu.se\ndebug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: hmac-md5-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-md5,hmac-sha1,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-ripemd160,hmac-ripemd160@openssh.com,hmac-sha1-96,hmac-md5-96\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit: none,zlib@openssh.com\ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: \ndebug2: kex_parse_kexinit: first_kex_follows 0 \ndebug2: kex_parse_kexinit: reserved 0 \ndebug2: mac_setup: found hmac-md5-etm@openssh.com\ndebug1: kex: server->client aes128-ctr hmac-md5-etm@openssh.com none\ndebug2: mac_setup: found hmac-md5-etm@openssh.com\ndebug1: kex: client->server aes128-ctr hmac-md5-etm@openssh.com none\ndebug1: sending SSH2_MSG_KEX_ECDH_INIT\ndebug1: expecting SSH2_MSG_KEX_ECDH_REPLY\ndebug1: Server host key: ECDSA 61:c1:7c:de:9e:f0:11:10:0c:55:7b:46:92:e9:f2:cb\ndebug3: put_host_port: [172.17.42.1]:49156\ndebug3: put_host_port: [172.17.42.1]:49156\ndebug3: load_hostkeys: loading entries for host \"[172.17.42.1]:49156\" from file \"/root/.ssh/known_hosts\"\ndebug3: load_hostkeys: loaded 0 keys\ndebug3: load_hostkeys: loading entries for host \"[172.17.42.1]:49156\" from file \"/root/.ssh/known_hosts\"\ndebug3: load_hostkeys: loaded 0 keys\ndebug1: checking without port identifier\ndebug3: load_hostkeys: loading entries for host \"172.17.42.1\" from file \"/root/.ssh/known_hosts\"\ndebug3: load_hostkeys: loaded 0 keys\nThe authenticity of host '[172.17.42.1]:49156 ([172.17.42.1]:49156)' can't be established.\nECDSA key fingerprint is 61:c1:7c:de:9e:f0:11:10:0c:55:7b:46:92:e9:f2:cb.\nAre you sure you want to continue connecting (yes/no)? ^C\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42582319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42812750", "body": "i think it is related to https://github.com/dotcloud/docker/pull/1454\n\nso the plugin either need to be made aware of the --link feature of docker to link the containers to the jenkins instance (thats what i do atm combined with the swarm plugin) or the plugin should detect if jenkins itself is running inside a docker container and in that case get the internal ip address of the slave nodes and not the public address/port\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42812750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "iflowfor8hours": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42990166", "body": "Yes. They launch fine from the command line and I can ssh in. \nI've decided to take a different approach to managing docker jenkins slaves and already destroyed this instance where I was experiencing this problem so I don't think I'll be much help in debugging it at the moment. Sorry about that!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/42990166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "DustinChaloupka": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/44699002", "body": "Figured out that slaves will be spawned automatically instead of needing to create new nodes for this as long as the master does not have any executors running.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/44699002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46441314", "body": "That is a shame that it doesn't retry. :(\n\nI'll look into seeing if that is the problem then!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46441314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46680859", "body": ":+1: I will definitely give that a try.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46680859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46695637", "body": "Closing in favor of https://github.com/jenkinsci/docker-plugin/pull/38\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46695637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48901693", "body": "@magnayn I'm not sure.  My jenkins has been running for about a week straight without dying and I am spawning slaves at a pretty good rate.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48901693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "pdavidson100": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/44919682", "body": "This would be really helpful for us - we want to put our local maven repository in a shared data-only container to speed up builds.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/44919682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "stanhu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45411367", "body": "Thanks for the explanation. I thought that might be the case, but I couldn't find documentation in the API  or in the source code that **ID** was ever used. As far back as docker v0.3.3 and the API v1.0 (http://docs.docker.io.s3-website-us-west-2.amazonaws.com/reference/api/docker_remote_api_v1.0/), the endpoint has returned **Id**. As far as I can tell, v0.3.2 did not even have the remote API implemented. I think the API was first introduced here: https://github.com/dotcloud/docker/commit/26bfeb1d67ebe818be17d6f5bdd525b2447c5879\n\nWhat version of docker was docker-plugin tested against?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45411367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yongjunj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45573885", "body": "Seconded - this will be helpful.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45573885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54192821", "body": "+1 - I can confirm the issue as well.\n\nJenkins logs - note `portMapping=null, ports=Ports{ports={}, mapping=null}}`:\n\n```\nSep 02, 2014 5:41:47 PM hudson.slaves.NodeProvisioner update\nWARNING: Provisioned slave Image of jenkins-slave failed to launch\njava.lang.RuntimeException: No mapped port 22 in host for SSL. Config=ContainerInspectResponse{id=6a1265afb5a9b477afd99b31fde24a01e5928a4a0dbbc5b38a96437bd500f64e, created=2014-09-02T17:41:38.415326418Z, path=/usr/bin/supervisord, args=[Ljava.lang.String;@591dfb79, config=ContainerConfig{hostName=6a1265afb5a9, portSpecs=null, user=, tty=false, stdinOpen=false, stdInOnce=false, memoryLimit=0, memorySwap=0, cpuShares=0, attachStdin=false, attachStdout=false, attachStderr=false, env=[Ljava.lang.String;@3f68f2a4, cmd=[Ljava.lang.String;@3120d82, dns=null, image=veblen-jenkins-slave, volumes=null, volumesFrom=, entrypoint=null, networkDisabled=false, privileged=false, workingDir=, domainName=, exposedPorts={22/tcp={}}, onBuild=null}, state=ContainerState{running=true, pid=79236, exitCode=0, startedAt=2014-09-02T17:41:38.593935975Z, ghost=false, finishedAt=0001-01-01T00:00:00Z}, image=ae26c00a0e206b81c1a4f084f57671e44c2544f53d5a0da0e42deb2a027b6dc2, networkSettings=NetworkSettings{ipAddress=172.17.0.108, ipPrefixLen=16, gateway=172.17.42.1, bridge=docker0, portMapping=null, ports=Ports{ports={}, mapping=null}}, sysInitPath=null, resolvConfPath=/var/lib/docker/containers/6a1265afb5a9b477afd99b31fde24a01e5928a4a0dbbc5b38a96437bd500f64e/resolv.conf, volumes={}, volumesRW={}, hostnamePath=/var/lib/docker/containers/6a1265afb5a9b477afd99b31fde24a01e5928a4a0dbbc5b38a96437bd500f64e/hostname, hostsPath=/var/lib/docker/containers/6a1265afb5a9b477afd99b31fde24a01e5928a4a0dbbc5b38a96437bd500f64e/hosts, name=/high_albattani, driver=aufs}\n        at com.nirima.jenkins.plugins.docker.DockerComputerLauncher.getSSHLauncher(DockerComputerLauncher.java:62)\n        at com.nirima.jenkins.plugins.docker.DockerComputerLauncher.makeLauncher(DockerComputerLauncher.java:41)\n        at com.nirima.jenkins.plugins.docker.DockerComputerLauncher.<init>(DockerComputerLauncher.java:37)\n        at com.nirima.jenkins.plugins.docker.DockerTemplate.provision(DockerTemplate.java:206)\n        at com.nirima.jenkins.plugins.docker.DockerCloud$1.call(DockerCloud.java:164)\n        at com.nirima.jenkins.plugins.docker.DockerCloud$1.call(DockerCloud.java:159)\n        at jenkins.util.ContextResettingExecutorService$2.call(ContextResettingExecutorService.java:46)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n```\n\nJenkins version 1.578\nDocker plugin 0.7\n\nDocker version 1.2.0:\n\n```\nuser@server:~$ docker version\nClient version: 1.2.0\nClient API version: 1.14\nGo version (client): go1.3.1\nGit commit (client): fa7b24f\nOS/Arch (client): linux/amd64\nServer version: 1.2.0\nServer API version: 1.14\nGo version (server): go1.3.1\nGit commit (server): fa7b24f\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54192821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "thomassuckow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45668084", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45668084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45689950", "body": "I am still having trouble where leaving the field blank gives unexpected defaults in 0.3.5\nHostConfig{...,  \"Dns\": null} results in the container inheriting the hosts settings, which for me is desirable as the network restricts what can be used for dns.\n\nHowever, docker-plugin seems to at a minimum send \"Dns\": [\"\"] which gives the problem described by OP. I think null is the more reasonable default, and if the user does not want to have dns they can put a space or random ip in the box.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45689950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45776004", "body": "This seems to be getting pulled in from jDocker which is getting pulled in from:\njava.lang.UnsupportedClassVersionError: org/glassfish/jersey/client/proxy/WebResourceFactory : Unsupported major.minor version 51.0\n\nThe jDocker README is also out of date claiming Java 1.6 compatibility.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45776004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45947391", "body": "I have submitted a pull request that restores Java6 compatability: https://github.com/nirima/jDocker/pull/2\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45947391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46205972", "body": "I've updated to 0.6.1 and appears to be working with Java6. Closing.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46205972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46320780", "body": "The defaults:\n\n```\nConnection Timeout: 5\nRead Timeout: 15\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46320780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46588402", "body": "I'll run with 0.6.2 for a while. We'll have to see if docker server crashes again, but I can also do some tests with just shutting it down.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46588402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46623134", "body": "So far so good, The docker server kernel panic'd and Jenkins remained responsive, though I think when I was seeing this before it was dying during a job.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46623134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46868056", "body": "Got the docker server to kernel panic again, it occurred when the plugin attempted to start the container.\n\nInterestingly though, before that there was a container running but no jobs were being sent to it and the docker-plugin was not removing it. I killed the container, but the docker plugin failed to make a new one reporting 500 internal server error. I restarted the whole docker service and then when the plugin attempted to start a new container, kernel panic. There is obviously some bug in docker, but that does not seem to be hanging Jenkins anymore, so I will close this ticket.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46868056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46987306", "body": "```\nCaused by: java.io.IOException: Cannot run program \"git.exe\" (in directory \"/home/jenkins\"): error=2, No such file or directory\n```\n\nYour git setup in Jenkins appears to be messed up. It looks like it is trying to use a windows install of Git on linux.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46987306/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48195122", "body": "Sounds a lot like #50 \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48195122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48624136", "body": "How is this different than tagging the images and restricting where jobs can run?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48624136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48742867", "body": "There has been an ongoing issue where Jenkins attempts to SSH before the docker container is ready, retrying seems to be hit an miss. If I had to guess I would say this is related. In my setup, frequently it can take several minutes/attempts of bringing a container up and down for Jenkins to connect.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48742867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48970407", "body": "After more testing, this seems to be Jenkins taking a while to spin up Cloud slaves if a dumb slave exists. I suspect it may be related to if there is a time estimate for the job.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48970407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48970689", "body": "Are you still having problems with this? I believe this is actually Jenkins \"NodeProvisioner\" deciding there is not enough work to be done to justify spinning up a cloud slave. Make sure the build has completely succeeded/failed once and see if the next time it will spin up Docker slaves.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48970689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49054011", "body": "I need to do more investigating, which will probably involve building the plugin myself. But I believe what is happening is that jobs with no label restriction are causing a docker container to be provisioned. The logic in the DockerCloud is to use the first container when a null label is requested, thus they are all the same container getting provisioned. However, for some reason, Jenkins thinks the provisioned slave is not satisfactory and will not send the job to it. Even worse, the Docker retention policy will not terminate an idle slave if it has not done work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49054011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49180787", "body": "I am curious what the queue length looks like in the Load Statistics screen. Based on what I have read, Jenkins should try to spin up a slave if it is greater than 1, but it is also dampened to prevent spinning up slaves for a single job if it can avoid it.\n\nIf Jenkins does want to spin one up and the docker plugin says it has a compatible container, it will be logged as \"Excess workload\" just before attempting to start a container (which may fail if it is at the limit).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49180787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49182033", "body": "I wonder if we could open our own tcp connection with a short timeout, if it connects then call it good, if it fails sleep 1 second.\n\nI also wonder what the EC2 plugin does...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49182033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49337425", "body": "Fixed test build failures on my rebase.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49337425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49639407", "body": "So far this seems to be working like a dream for me.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49639407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49653563", "body": "So this is fixing two issues that cause #54.\n\n1: The docker-plugin advertised that it could handle untied jobs (Normal Mode) by accepting null passed as label. But the spawned slaves were created such that they could not (Exclusive Mode). Thus every time a slave was spawned, Jenkins would spawn another.\n\nSo to fix this, I added an option to specify the Mode for each container and adjusted the getTemplate method to obey that. It defaults to Normal, I am unsure how to change that but it matches the EC2 plugin behavior.\n\n2: When a slave is spawned but there is no work for it to perform (Took too long to spawn, job was aborted, Jenkins restarted, etc.) it would not be terminated until it processed a job. This takes up a container even though no job may ever use it.\n\nFor this one, I added a timeout for a job that has no work. I picked 5 minutes arbitrarily, but this should be a relatively uncommon occurrence with the first issue being fixed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49653563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49659113", "body": "You could fix it that way if you don't want to expose the option. Though I don't think it is that confusing since it is an option on dumb slaves and the master node.\n\nIf you do allow untied jobs to run on docker slaves, I am not convinced the following is even necessary.\n\n```\nslave = t.provision(new StreamTaskListener(System.out), label==null?Node.Mode.NORMAL:Node.Mode.EXCLUSIVE);\n```\n\nA normal mode slave will accept labeled jobs, so you could just change the line in the plugin with Mode.EXCLUSIVE to Mode.NORMAL and it would \"work\". It is slightly different than what you wrote as you could spawn a slave for a labeled job and then Jenkins could decide to put an unlabeled job on it and then spin up another. But I don't think that is really a problem or likely.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49659113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49659652", "body": "Here is a question for you. We are discussing on #59, whether it is worth having the \"Utilize node as much as possible\"/\"Tied jobs only\" option on containers. Alternatively should it be hard coded one way or another?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49659652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49659809", "body": "Duplicate of #54 \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49659809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49659902", "body": "I have not been able to reproduce this. Closing.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49659902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49662869", "body": "Also, could you explain the necessary of the synchronization in the Retention strategy? As far as I can tell it doesn't accomplish anything as shouldTerminate is a local variable and c does not need to be synchronized nor does this synchronize affect the return values of c.\n\nhttps://github.com/jenkinsci/docker-plugin/blob/master/src/main/java/com/nirima/jenkins/plugins/docker/DockerRetentionStrategy.java#L41\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49662869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49666927", "body": "Split into #61 and #62 based on discussion here.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49666927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49753683", "body": "As magnayn mentioned. You need to get jDocker from https://github.com/nirima/jDocker\n\n```\nmvn -DskipTests clean install\n```\n\nThen in the docker-plugin\n\n```\nmvn clean package\n```\n\nThe plugin will be the *.hpi file in the target folder.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49753683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50035634", "body": "I'm not sure what @magnayn wants to do but I will summarize some observations.\n\nPull Requests should be on a branch, it saves you headaches later (I screwed this up recently too, we are all human). When you want to merge into master, the generally recommended approach is to make a new branch based on master and then merge your old branch into it.\n\nThe Tidy Up commit should probably have been squashed into the merge since conflicts should have been resolved there. `git rebase -i HEAD~2` can be really useful for that.\n\nWhen making commits and you have stuff you want to include and stuff you don't, I like to use git gui and stage individual lines, theres other ways to do single line staging but nothing I have found on the command line is as easy.\n\n`git stash` is great for keeping those unwanted changes around for making a commit later.\n\nLastly, the duplicate commits kind of bug me, but it may be more work than it is worth to change that. It isn't necessarily \"wrong\".\n\nI hope we haven't made git seem more ominous, it is a fickle beast and I look forward to your changes. :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50035634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50171212", "body": "That looks great :+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50171212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51279331", "body": "This sounds really similar to https://issues.jenkins-ci.org/browse/JENKINS-17157\n\nWhich mentions https://wiki.jenkins-ci.org/display/JENKINS/SSH+Slaves+plugin#SSHSlavesplugin-Loginprofilefiles\n\nWhich hints at a strange configuration of OpenSSH. Basically, the non-interactive shell is not using bash. I am not really sure how to fix that though. It looks like you are running some redhat variant. I haven't seen this behaviour in RHEL5 or RHEL6.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51279331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51930427", "body": "It sounds like you are running a matrix jobs and/or jobs with no label causing them to get bound to the first docker image. The easiest solution would be to bind those jobs. If it is a matrix job you may want to restrict it to 'master'\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51930427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51967656", "body": "Strange. Is there a lot of instances of the first job to be executed or does it start the first container and then give no work to it? Jenkins itself decides what and how many cloud slaves get started. If you have restricted the docker plugin to have only a few running at a time, Jenkins may be prioritizing job A not realizing that the plugin will be unable to accommodate more slaves for job B.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51967656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52066739", "body": "What version of the plugin are you running? There was a bug in a previous version where Jenkins would ask the docker plugin for \"any\" slave. But when the docker plugin spun it up it would tag it as \"tied jobs only\". That is the only way I can think of a docker slave being created and having no work on it.\n\nNow, idle slaves should be torn down after a few minutes. Does that slave of the first image stick around or does it go away and a new one takes its place?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52066739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53468793", "body": "I don't understand why this change is necessary / what is wrong.\n\nAlso it looks like there is another change (remotefs) wrapped into this one. There also appears to be a strange merge commit (probably should have been a rebase?).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53468793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53932071", "body": "After CoreOS updated docker to 1.2.0, now the plugin is not launching slaves properly. In my case it is filling the maximum number of instances, but they are not being added to Jenkins as slaves.\n\nI feel like the create request is missing \n\n```\n\"ExposedPorts\":{\n    \"22/tcp\": {}\n}\n```\n\nBut I am not familiar enough with the api to be certain.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53932071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54361789", "body": "The package name was misspelled in the this pull request.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54361789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54877445", "body": "None of the tests appear to test exposing ports. The NetCat test looks like it may have at one time but I don't think it tested correctly on 1.1.2 either.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54877445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54990274", "body": "Interesting, I'll have to see if I can reproduce that.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54990274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55002579", "body": "jDocker 1.4 does successfully port forward. It appears to be the transfer-encoding:chunked. I am looking into why the new jDocker uses chunking so I can disable it temporarily as well as finding the breaking change in docker.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55002579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55815115", "body": "Duplicate of #90 \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55815115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56073677", "body": "I am not sure what you are trying to accomplish with \"run multiple slaves of the same image in the same job\".\n\nIf you mean can the same image be used simultaneously, absolutely. I have many matrix jobs that spawn 8 instances of the same image.\n\nIf you are just wanting to use multiple CPU cores, just use them. Though be aware of what jobs are running and whether you will be over provisioning your system if the maximum number of jobs runs.\n\nIf you mean something else, please elaborate. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56073677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56077642", "body": "Unfortunately that is controlled by Jenkins based on the information in /load-statistics. When you only have two jobs, it may just wait for the first to complete. If the job takes sufficiently long Jenkins will go ahead and spin up another instance for the second job. Just make sure that you haven't set the max instances for Docker too low that it isn't allowed to spin up another.\n\nEdit: Note that often Jenkins will wait if it has no estimated time for the Job (For example, the first time you run it).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56077642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56746950", "body": "Just gave this a spin and seems to work fine.\n\nSeeing the following in logs, not sure if it is related to this change or not:\n\n```\nI/O error in channel f51ebb040e0e@foo\njava.io.IOException: Unexpected termination of the channel\n    at hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:50)\nCaused by: java.io.EOFException\n    at java.io.ObjectInputStream$PeekInputStream.readFully(ObjectInputStream.java:2304)\n    at java.io.ObjectInputStream$BlockDataInputStream.readShort(ObjectInputStream.java:2773)\n    at java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:780)\n    at java.io.ObjectInputStream.<init>(ObjectInputStream.java:278)\n    at hudson.remoting.ObjectInputStreamEx.<init>(ObjectInputStreamEx.java:40)\n    at hudson.remoting.AbstractSynchronousByteArrayCommandTransport.read(AbstractSynchronousByteArrayCommandTransport.java:34)\n    at hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:48)\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56746950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56828292", "body": "You need to install the token macro plugin \nhttps://wiki.jenkins-ci.org/display/JENKINS/Token+Macro+Plugin\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56828292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/58270275", "body": "Not sure if this is related to this change, but I hadn't noticed it before. I have matrix jobs that are not bound to a specific node. The matrix itself gets started on a docker slave for a different job. The jobs the matrix spawns succeed but then the matrix itself fails because the slave it was running on gets terminated.\n\n```\nBuilding remotely on 1366cbb019a3@host (docker tags) in workspace /home/jenkins/workspace/job\nCloning the remote Git repository\n[...]\nTriggering Job ? options\nConfiguration Job ? options is still in the queue: Waiting for next available executor on options\nJob ? options completed with result SUCCESS\nLooks like the node went offline during the build. Check the slave log for the details.FATAL: channel is already closed\nhudson.remoting.ChannelClosedException: channel is already closed\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/58270275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808636", "body": "It uses nirima/jDocker\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23554207", "body": "When amiCap is zero, this if statement causes the containerCap (server maximum) to not be checked. This means an infinite number of containers could be spawned even when the containerCap is set.\n\nAdditionaly this return bypasses the provisoningAmi's counting. which means the count of running slaves will probably be wrong (I believe, I don't fully understand the provisioningAmi's object).\n\nIf it returned false this would be a totally different story because then nothing would be provisioned.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23554207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557424", "body": "In which case it should be `return false;`\n\nThis leads to another issue:\nIn the event an ami has too many instances, the plugin will not look for other images that also satisfy the conditions. When matching labels, it should really be getting a list of templates that are compatible.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557618", "body": "I will wait for @magnayn to weigh in on #142. If this change turns out to be holding up this pull request, I'll move it to another PR (or someone could pull only the first two commits).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23194262", "body": "The elseif will give a Null pointer exception if the slave is set to exclusive\n\n+1 to combining\n\n```\nif( (label == null && !t.getExclusiveMode()) || (label != null && label.matches(t.getLabelSet())) ) {\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23194262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23194327", "body": "I agree with exclusiveMode. Then getToggleMode becomes getExclusiveMode\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23194327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/25873734", "body": "Erroneous whitespace\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/25873734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31634455", "body": "I am not super familiar with the cloud api, but @stephenc please tell me if I am understanding.\n\nNodeProvisioner.PlannedNode takes a Future. Currently, we provision a slave (including doing some bad things) and return a node immediately despite it not being connected yet. Instead what we should be doing is creating a slave and get connected to the docker instance and finally resolve the future.\n\nI'm guessing if that is what were are supposed to be doing there is some gotcha that prevents us from creating a slave that way...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31634455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hashar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45749326", "body": "I too we love 1.554.2 to be supported if at all possible.  If there are some specific patches required, maybe upstream can have them backported to the LTS version if they are trivial enough.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45749326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46816872", "body": "According to @magnayn , the POM has been updated but a new release of the plugin needs to be pushed to the Jenkins plugin repository. Once done, I guess the 1.557 requirement will disappear in favor of 1.554 :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46816872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46817219", "body": "So commit c8f6f77cb535d657bbe4b044527f297271d8748b failed to update all the versions :(\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46817219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49583758", "body": "Lets wait for 1.565. Thanks :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49583758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "weltenwort": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45881492", "body": "+1, especially for the volume configuration\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45881492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "madkinder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45960331", "body": "Is there anything I could help to make it happen?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/45960331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rbywater": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46110513", "body": "I can't seem to actually get it to start two same image jobs to run. Say I've got a docker image with \"java\" as a label, if I start the first job that uses the java label it starts up the docker container and starts work. If I then start a second (different) job that uses the java label, it sits there saying its waiting for a free executor on the slave node created by the first job.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46110513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46128285", "body": "From the sound of an email response on the Jenkins list (https://groups.google.com/d/msg/jenkinsci-users/QCOzryzieeo/l9VZUul1U2EJ) it sounds like it is expected that plugins continue to support Java 6. Not sure if thats official guidelines or not but perhaps if there is a way to do so the plugin should?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46128285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46128348", "body": "Just noticed that Java 6 compatiblity has been restored so ignore my previous comments :)  Presumably this issue can be closed now?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46128348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46220421", "body": "Strange - will have to try and debug why it's occurring on my instance. Out\nof interest, what version of Jenkins are you running as I'm running the\nlatest non-lts one.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46220421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "alexfu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46119872", "body": "Not only do I think install instructions are absolutely needed, but also usage instructions.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46119872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "philpep": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46150952", "body": "I confirm this issue after upgrading to v0.6 (and docker 1.0.0)\n\nAs a workaround I've setup a shared volume \"/mnt/share:/mnt/share\"\n\n+1 for this fix. Thank you.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46150952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50336208", "body": "Sorry. Dupplicate of #68 \n\nI close this one.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50336208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50336515", "body": "+1 To have tags working again (either via container ID parsing or a separate param)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50336515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51049235", "body": "It doesn't seem. See my issue #70 , the image wheezy64:jenkins exists on the docker server, but it try to start wheezy64:jenkins:latest\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51049235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dreewoo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46188546", "body": "@rbywater I don't have any issue getting it to start more than one job with the same image, quite the opposite actually. Sometime it takes some time to launch more than 1 container (~ 1 or 2 minutes), maybe your jobs are too fast and it does not have the time to start a new executor ?\n\n@magnayn Yes the current code is not really working and I often find myself having a lot more containers running on one host compared to what I defined in the image instance cap.\n\n~~I'me having quite a hard time understanding how Jenkins is using the `Cloud.provision()` method as it manages to call the callback in~~\n\n``` java\nnew NodeProvisioner.PlannedNode(t.getDisplayName(),\n    Computer.threadPoolForRemoting.submit(new Callable<Node>() {\n        [...]\n    })\n```\n\n~~multiple times, without checking the result of `addProvisionedSlave()`\nAnyway, I must be missing something ;)~~\n\nEdit: I figured it out reading Jenkins cloud documentation and the EC2 plugin code. The PR #34 fixes the race condition and add an instance cap per machine. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46188546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46221010", "body": "I'm running ver. 1.566, will try with the latest (1.568) tomorrow if you want.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46221010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46311437", "body": "@rbywater It (multiple jobs with the same image) seems to be working fine with the last jenkins version (1.568). However I'm currently running Docker 0.11 as the 1.0 isn't available on CentOS yet, don't know if it makes a difference.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46311437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47902934", "body": "Oh that's a great feature ! Thank you.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47902934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48039987", "body": "I also observe the same comportment and haven't been able to track-it down.\n\nIn fact, I'd like to be able to enable this as a feature, so Jenkins could \"preload\" the slaves (within the max container or max instance limit), reducing the cloud plugin overhead when starting a lot of jobs at the same time.\n\n(Jenkins 1.567, Docker 1.0.0 on CentOS 6)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48039987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "hyleung": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46205122", "body": "Thanks, guys!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46205122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Liryna": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46989399", "body": "Oh yes you are right, strange that only happens now :O\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/46989399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49668044", "body": "Thanks alot for these fix ! can't wait to test them :) !!!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49668044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kristoflemmens": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47090019", "body": "So I found the problem myself by browsing the code. The container cap value has to be empty to have unlimited hosts. The documentation at https://wiki.jenkins-ci.org/display/JENKINS/Docker+Plugin says that 0 is unlimited\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47090019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mgius": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47149617", "body": "Sorry bout the spam, removed some netbeans autogenerated crap.  Should be good to go now.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/47149617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "djl197": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48719283", "body": "If I create a slave node manually and enter the same details.\nThen when the slave is launched via Docker - it is able to connect to it and run.\nSo I am even more confused as the why the SSHLauncher call in getSSHLauncher is not working :-(\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48719283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48748736", "body": "I think I have solved this now :-) Will post some updates once I am sure\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/48748736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49138760", "body": "I have played around a bit - and I now have a configurable delay before attempting to SSH to the container.\nThat seems to have solved it for me - so in the plugin I have a per container setting (default 30seconds).  With this change it works a whole lot better and generally gets in first attempt rather than failing 3 times and then rerunning the container.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49138760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49138870", "body": "Yes - if I specify a specific label then Jenkins spins up my container. \nIf I use the same labels as everything else it seems that Jenkins is very reluctant to spin up a container.\nEven sometimes appearing to refuse to spin one up even when all 'physical' slaves are busy. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49138870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49849195", "body": "Sorry - I am new to Git and its all a bit messy - any help appreciated on what I do next to feed this back?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49849195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50051074", "body": "Cool, in will remove all the extra stuff.\nWill look at using git squash to sort out the request.\nI think my master branch is now in OK state so the pull request may end up a bit ugly but the code changes should be minimal:-) hopefully with you tomorrow.  I will then add another request for delayed slave initialisation.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50051074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50170421", "body": "OK - I have updated this pull request and I think it has everything required.\nHopefully I have sorted out my git newbie issues........\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50170421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "colegleason": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49112207", "body": "Any update on this? I'm also experiencing this issue.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49112207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49244740", "body": "@djl197 I'd love to see that delay back in the master plugin!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49244740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49675717", "body": "I would love to see a new release with the connection retry logic: 31159d7a904e64294bf39214e7384d385808f3e1\n\nIt can take me >50 min for Jenkins to finally SSH into a slave before it is torn down.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49675717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sym3tri": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49677109", "body": "@magnayn any idea when the next release is? We're constantly seeing race conditions as containers spin up and get destroyed repeatedly. Sometimes takes up to an hour of that to get a successful connection.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49677109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49782676", "body": "@magnayn awesome. thank you. \n\nI noticed the github releases don't have the actual built package, nor is it in the [jenkins index](https://updates.jenkins-ci.org/download/plugins/docker-plugin/). \n\nAny tips on how to best download a build of 0.7?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/49782676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hawky-4s-": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50393631", "body": "I have the same issue, running Docker-Plugin 0.7 on an Ubuntu 14.04 with Jenkins package installed. Docker host is configured as http://127.0.0.1:2375.  \nThe job starts and docker-plugin tries to download the requested image (it is not on host yet), then this appears in the jenkins log:\n\n```\nJul 28, 2014 4:37:41 PM com.nirima.jenkins.plugins.docker.DockerCloud provision\nINFO: Excess workload after pending Spot instances: 1\nJul 28, 2014 4:37:41 PM com.nirima.jenkins.plugins.docker.DockerCloud countCurrentDockerSlaves\nINFO: Images found: []\nJul 28, 2014 4:37:41 PM com.nirima.jenkins.plugins.docker.DockerCloud countCurrentDockerSlaves\nINFO: Pulling image camunda/camunda-ci-docker-mysql since one was not found.  This may take awhile...\nJul 28, 2014 4:37:41 PM com.nirima.jenkins.plugins.docker.DockerCloud countCurrentDockerSlaves\nINFO: Finished pulling image camunda/camunda-ci-docker-mysql\nJul 28, 2014 4:37:41 PM com.nirima.jenkins.plugins.docker.DockerCloud provision\nWARNING: Failed to count the # of live instances on Docker\njavax.ws.rs.NotFoundException: HTTP 404 Not Found\n        at org.glassfish.jersey.client.JerseyInvocation.convertToException(JerseyInvocation.java:917)\n        at org.glassfish.jersey.client.JerseyInvocation.translate(JerseyInvocation.java:822)\n        at org.glassfish.jersey.client.JerseyInvocation.access$600(JerseyInvocation.java:90)\n        at org.glassfish.jersey.client.JerseyInvocation$3.call(JerseyInvocation.java:693)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:228)\n        at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:422)\n        at org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:689)\n        at org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:405)\n        at org.glassfish.jersey.client.proxy.WebResourceFactory.invoke(WebResourceFactory.java:318)\n        at com.sun.proxy.$Proxy76.inspectImage(Unknown Source)\n        at com.nirima.docker.client.DockerClient$Image.inspect(DockerClient.java:466)\n        at com.nirima.jenkins.plugins.docker.DockerCloud.countCurrentDockerSlaves(DockerCloud.java:264)\n        at com.nirima.jenkins.plugins.docker.DockerCloud.addProvisionedSlave(DockerCloud.java:284)\n        at com.nirima.jenkins.plugins.docker.DockerCloud.provision(DockerCloud.java:154)\n        at hudson.slaves.NodeProvisioner.update(NodeProvisioner.java:281)\n        at hudson.slaves.NodeProvisioner.access$000(NodeProvisioner.java:51)\n        at hudson.slaves.NodeProvisioner$NodeProvisionerInvoker.doRun(NodeProvisioner.java:368)\n        at hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:54)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n\nJul 28, 2014 4:37:51 PM com.nirima.jenkins.plugins.docker.DockerCloud provision\nINFO: Excess workload after pending Spot instances: 1\nJul 28, 2014 4:37:51 PM com.nirima.jenkins.plugins.docker.DockerCloud countCurrentDockerSlaves\nINFO: Images found: []\nJul 28, 2014 4:37:51 PM com.nirima.jenkins.plugins.docker.DockerCloud countCurrentDockerSlaves\nINFO: Pulling image camunda/camunda-ci-docker-mysql since one was not found.  This may take awhile...\nJul 28, 2014 4:37:51 PM com.nirima.jenkins.plugins.docker.DockerCloud countCurrentDockerSlaves\nINFO: Finished pulling image camunda/camunda-ci-docker-mysql\nJul 28, 2014 4:37:51 PM com.nirima.jenkins.plugins.docker.DockerCloud provision\nWARNING: Failed to count the # of live instances on Docker\njavax.ws.rs.NotFoundException: HTTP 404 Not Found\n        at org.glassfish.jersey.client.JerseyInvocation.convertToException(JerseyInvocation.java:917)\n        at org.glassfish.jersey.client.JerseyInvocation.translate(JerseyInvocation.java:822)\n        at org.glassfish.jersey.client.JerseyInvocation.access$600(JerseyInvocation.java:90)\n        at org.glassfish.jersey.client.JerseyInvocation$3.call(JerseyInvocation.java:693)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:228)\n        at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:422)\n        at org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:689)\n        at org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:405)\n        at org.glassfish.jersey.client.proxy.WebResourceFactory.invoke(WebResourceFactory.java:318)\n        at com.sun.proxy.$Proxy76.inspectImage(Unknown Source)\n        at com.nirima.docker.client.DockerClient$Image.inspect(DockerClient.java:466)\n        at com.nirima.jenkins.plugins.docker.DockerCloud.countCurrentDockerSlaves(DockerCloud.java:264)\n        at com.nirima.jenkins.plugins.docker.DockerCloud.addProvisionedSlave(DockerCloud.java:284)\n        at com.nirima.jenkins.plugins.docker.DockerCloud.provision(DockerCloud.java:154)\n        at hudson.slaves.NodeProvisioner.update(NodeProvisioner.java:281)\n        at hudson.slaves.NodeProvisioner.access$000(NodeProvisioner.java:51)\n        at hudson.slaves.NodeProvisioner$NodeProvisionerInvoker.doRun(NodeProvisioner.java:368)\n        at hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:54)\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744)\n```\n\nTest connection in Jenkins works.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50393631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50760375", "body": "Nvm, I had a typo in the image name.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50760375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26792690", "body": "Please make the use of CloudRetentionStrategy optional, eg. only use it when multiple executors are configured.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26792690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "aikomastboom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50601529", "body": "Indeed, for the time being I am attempting to set it up manually with the help of 'Docker build step plugin' which may give me the freedom I need to do this.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/50601529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51165829", "body": "Hit a wall trying to use the 'Docker build step plugin' as well, but I am sure it can be realized using that fine plugin in the near future.\n\nFor the moment (for those interested) I realized above utilizing the power of the https://wiki.jenkins-ci.org/display/JENKINS/inheritance-plugin (I use version 1.5.0). Creating two abstract jobs, docker_before and docker_after and making sure the are run before and after for each task added.\n\ndocker_before has one build step that looks like this:\n\n```\nif [ -n \"${PREVIOUS_STEP}\" ]; then\n  EXISTING_TAG_ID=$(docker images | grep \"${PREVIOUS_STEP}-${REVISION_HASH}\" | awk '{print $3}')\n  if [ -z \"${EXISTING_TAG_ID}\" ]; then\n    echo \"FAIL, not run ${PREVIOUS_STEP} step yet\"\n    exit 1\n  fi\nelse\n  EXISTING_TAG_ID=${DOCKER_IMAGE_ID}:latest\nfi\nexport DOCKER_IMAGE_WORKSPACE=/home/jenkins/workspace\nexport DOCKER_CONTAINER_ID=$(docker run --dns=${DNS} -P -d ${EXISTING_TAG_ID} /usr/sbin/sshd -D)\nexport DOCKER_CONTAINER_PORT=$(docker inspect ${DOCKER_CONTAINER_ID} | grep HostPort |head -1  | cut -d \"\\\"\" -f 4)\n\necho \"export DOCKER_CONTAINER_ID=${DOCKER_CONTAINER_ID}\" > ./env-${BUILD_TAG}\necho \"export DOCKER_CONTAINER_PORT=${DOCKER_CONTAINER_PORT}\" >> ./env-${BUILD_TAG}\necho \"export DOCKER_IMAGE_WORKSPACE=${DOCKER_IMAGE_WORKSPACE}\" >> ./env-${BUILD_TAG}\necho \"export STEP_NAME=start\" >> ./env-${BUILD_TAG}\n# check login\nssh jenkins@${DOCKER_HOST_IP} -p ${DOCKER_CONTAINER_PORT} -o \"StrictHostKeyChecking no\" bash -c \"date\" || \\\nsleep 3 ; ssh jenkins@${DOCKER_HOST_IP} -p ${DOCKER_CONTAINER_PORT} -o \"StrictHostKeyChecking no\" bash -c \"date\"\n```\n\nand docker_after looks like this:\n\n```\nsource ./env-${BUILD_TAG} \n\n# find existing tagged image\nEXISTING_TAG_ID=$(docker images | grep \"${STEP_NAME}-${REVISION_HASH}\" | awk '{print $3}')\n\ndocker stop ${DOCKER_CONTAINER_ID}\nif [ \"${DO_NOT_COMMIT}\" == \"0\" ]; then\n  docker commit -m \"${STEP_NAME}-${REVISION_HASH}\" ${DOCKER_CONTAINER_ID} ${DOCKER_IMAGE_ID}:${STEP_NAME}-${REVISION_HASH}\nfi\ndocker rm ${DOCKER_CONTAINER_ID}\n\n# remove old existing tagged image\nif [ -n \"${EXISTING_TAG_ID}\" ]; then\n  docker rmi ${EXISTING_TAG_ID} || true\nfi\n\nrm -rf ./env-${BUILD_TAG}\n```\n\nthe build step job then becomes something like this:\n\n```\nsource ./env-${BUILD_TAG}\n\necho \"export STEP_NAME=build\" >> ./env-${BUILD_TAG}\n\nbanner \"Build It\" | cowsay -f turtle -n\n\nssh jenkins@${DOCKER_HOST_IP} -p ${DOCKER_CONTAINER_PORT} -o \"StrictHostKeyChecking no\" \\\n\"${DOCKER_IMAGE_WORKSPACE}/ops/bin/buildit\"\n```\n\nenvironment variables you see here, that are no defined, are defined at the 'manage jenkins' level or are passed in as parameters (DO_NOT_COMMIT, PREVIOUS_STEP, REVISION_HASH)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51165829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51053454", "body": "I had the same problem with Docker-Plugin 0.7. I then looked into the code... recognized, that currently the latest tag is added automatically removed it from my id et voila... it worked.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51053454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51144955", "body": "I find it under advanced section, sorry :-\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51144955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52032272", "body": "Hm... I renamed the label and it worked. But yes, there is always a container from the first image, that gets started, even if there is only a job for the second image.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52032272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52145228", "body": "In all our jenkins master instances runs the docker-plugin version 0.7 on jenkins lts 1.565.1. Yes, it gets torn down after a few minutes, but why does it get started in the first place?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52145228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55691785", "body": "I'm having the same issue on Ubuntu 12.04 and docker 1.2.0\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55691785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "http-418": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51281558", "body": "Yeah, I'd looked at those issues.  The problem is that the empty environment only occurs when using the Docker plugin.  I can't re-create the problem without the plugin.\n\nIf I set up an identical Docker container by hand, slave configuration goes off without a hitch.  Only the plugin seems to be able to trigger the issue.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51281558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51383823", "body": "The solution turned out to be the command: when I ran by hand, it used the CMD in the Dockerfile, which included -o UsePAM=o.\n\nThe plugin was invoking by default with just \"/usr/bin/sshd -D\"\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51383823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lpa": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51594766", "body": "Tested on release 0.7\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51594766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "johnrengelman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51612910", "body": "I'm having this same issue when a lot of jobs are in the queue.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51612910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "michaelheyvaert": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51751948", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51751948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "schmitch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51880806", "body": "I'm having the same problem with just a single task..\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51880806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "devpie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51966840", "body": "Hi... jan-mueller-work here. I have two free-style-jobs:\n- first job is restricted to label a\n- second job is restricted to label b\n- first image is bound to label a\n- second image is bound to label b\n\n=> so the second job never gets executed on the second image because only containers of the first image are getting started. Our strategy is, that the master is not executing any jobs... he has 0 executors.\n\nI will evaluate again tomorrow :smiley: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/51966840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53622247", "body": "Yes, sorry I am not as familiar with git as i should supposedly be. I rebased the branch now.\n\nThere is always an HTTP error/exception when the deleted line tried to start the container for the second time. It got already started by the call to provisionNew().\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53622247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "irinabov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52775028", "body": "This issue is not fixed in the latest release (start containter choice).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52775028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52775315", "body": "Confirmed as not working on 0.7.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/52775315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "abraverm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53240710", "body": "I'm experiencing the same issue with 0.7 using custom tags (user/repository:my_tag). Quick fix is to use image ID\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53240710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "maxfields2000": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53345512", "body": "Can confirm, have been tracking this exact same issue this morning. It appears that the containers no longer port map port 22 correctly, and as such cannot become slaves because they are unreachable.\n\ntypically the port mapping on a running docker plugin container has: 0.0.0.0:49153->22/tcp  however with docker 1.2 it just shows a:  22/tcp.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53345512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ivey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53346980", "body": "What's interesting is that when I copied the JSON payloads via tcpdump, then POSTed them with curl ... it mapped appropriately.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53346980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54563785", "body": "Probably related to docker/docker#7869\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54563785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mkostrikin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53400672", "body": "After upgrade to 1.2.0 while docker plugin has cap on running instances:\nWARNING: Failed to count the # of live instances on Docker\njavax.ws.rs.ProcessingException: Error reading entity from input stream.\n        at org.glassfish.jersey.message.internal.InboundMessageContext.readEntity(InboundMessageContext.java:868)\n\nWhen cap was set to 0:\nWARNING: Provisioned slave Image of jslave failed to launch\njava.lang.RuntimeException: No mapped port 22 in host for SSL. Config=ContainerInspectResponse{id=aa77af7974e67ab53ec0eb04a1cc33d228fe028afb1a89a6cb3c6da5756abfd4, created=2014-08-26T10:02:56.633228801Z, path=/usr/sbin/sshd, args=....\nAnd new containers get starting without external ssh port mapped:\nb559d23421dc        jsn:latest          \"/usr/sbin/sshd -D\"    6 seconds ago       Up 5 seconds        22/tcp              sad_carson  \n27f0234912a        jsn:latest          \"/usr/sbin/sshd -D\"    16 seconds ago      Up 15 seconds       22/tcp              angry_fermi  \n2e4d4234eec        jsn:latest          \"/usr/sbin/sshd -D\"    26 seconds ago      Up 25 seconds       22/tcp              sad_feynman                                 \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53400672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "frosenberg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53645177", "body": "I have a similar issue with docker v1.2.0. Whenever a slave is supposed to be launched, I see this in the logs\n\n```\nprovision\nWARNING: Failed to count the # of live instances on Docker\njavax.ws.rs.ProcessingException: Error reading entity from input stream.\n    at org.glassfish.jersey.message.internal.InboundMessageContext.readEntity(InboundMessageContext.java:868)\n    at org.glassfish.jersey.message.internal.InboundMessageContext.readEntity(InboundMessageContext.java:812)\n    at org.glassfish.jersey.client.ClientResponse.readEntity(ClientResponse.java:309)\n    at org.glassfish.jersey.client.JerseyInvocation.translate(JerseyInvocation.java:813)\n    at org.glassfish.jersey.client.JerseyInvocation.access$600(JerseyInvocation.java:90)\n    at org.glassfish.jersey.client.JerseyInvocation$3.call(JerseyInvocation.java:693)\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\n    at org.glassfish.jersey.internal.Errors.process(Errors.java:228)\n    at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:422)\n    at org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:689)\n    at org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:405)\n    at org.glassfish.jersey.client.proxy.WebResourceFactory.invoke(WebResourceFactory.java:318)\n    at com.sun.proxy.$Proxy78.inspectContainer(Unknown Source)\n    at com.nirima.docker.client.DockerClient$Container.inspect(DockerClient.java:248)\n    at com.nirima.jenkins.plugins.docker.DockerCloud$2.apply(DockerCloud.java:268)\n    at com.nirima.jenkins.plugins.docker.DockerCloud$2.apply(DockerCloud.java:266)\n    at com.google.common.collect.Iterators$7.computeNext(Iterators.java:649)\n    at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:143)\n    at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:138)\n    at com.google.common.collect.Iterators.size(Iterators.java:151)\n    at com.google.common.collect.Collections2$FilteredCollection.size(Collections2.java:222)\n    at com.nirima.jenkins.plugins.docker.DockerCloud.countCurrentDockerSlaves(DockerCloud.java:272)\n    at com.nirima.jenkins.plugins.docker.DockerCloud.addProvisionedSlave(DockerCloud.java:284)\n    at com.nirima.jenkins.plugins.docker.DockerCloud.provision(DockerCloud.java:154)\n    at hudson.slaves.NodeProvisioner.update(NodeProvisioner.java:281)\n    at hudson.slaves.NodeProvisioner.access$000(NodeProvisioner.java:51)\n    at hudson.slaves.NodeProvisioner$NodeProvisionerInvoker.doRun(NodeProvisioner.java:368)\n    at hudson.triggers.SafeTimerTask.run(SafeTimerTask.java:54)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\n    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: com.fasterxml.jackson.databind.JsonMappingException: (was java.lang.NullPointerException) (through reference chain: com.nirima.docker.client.model.ContainerInspectResponse[\"NetworkSettings\"]->com.nirima.docker.client.model.NetworkSettings[\"Ports\"])\n    at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:232)\n    at com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(JsonMappingException.java:197)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapAndThrow(BeanDeserializerBase.java:1311)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:208)\n    at com.fasterxml.jackson.databind.deser.impl.InnerClassProperty.deserializeAndSet(InnerClassProperty.java:101)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:295)\n    at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:121)\n    at com.fasterxml.jackson.databind.ObjectReader._bind(ObjectReader.java:1179)\n    at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:635)\n    at com.fasterxml.jackson.jaxrs.base.ProviderBase.readFrom(ProviderBase.java:660)\n    at org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$TerminalReaderInterceptor.invokeReadFrom(ReaderInterceptorExecutor.java:239)\n    at org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$TerminalReaderInterceptor.aroundReadFrom(ReaderInterceptorExecutor.java:211)\n    at org.glassfish.jersey.message.internal.ReaderInterceptorExecutor.proceed(ReaderInterceptorExecutor.java:139)\n    at org.glassfish.jersey.message.internal.MessageBodyFactory.readFrom(MessageBodyFactory.java:1109)\n    at org.glassfish.jersey.message.internal.InboundMessageContext.readEntity(InboundMessageContext.java:853)\n    ... 35 more\nCaused by: java.lang.NullPointerException\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53645177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mastef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53989281", "body": "same issue here with docker 1.2.0 and shipyard, which uses docker-py 0.3.1\n\nthe containers are launched without publishing the ports `80/tcp instead of 0.0.0.0:44034->80/tcp`\n\nare there maybe any breaking changes with Docker 1.2.0 such as removal of depreciated parameters?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/53989281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zbindenren": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54036857", "body": "I have the same issue with docker version 1.1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54036857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lielran": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54086713", "body": "i am also getting errors with CoreOS,  Docker 1.2.0 ,and Jenkins 1.578 \n\n```\nExcess workload after pending Spot instances: 1\nSep 01, 2014 7:18:54 PM INFO com.nirima.jenkins.plugins.docker.DockerCloud countCurrentDockerSlaves\nImages found: [Image{repository=null, tag=null, id=f3ac335af281c1ece22f2b76f79b62c0eb9dc75e27fb4bc6fba063135b20fbfc, created=1397576253, size=0, virtualSize=436605835}]\nSep 01, 2014 7:18:54 PM INFO com.nirima.jenkins.plugins.docker.DockerCloud addProvisionedSlave\nAMI Instance cap of 2 reached for ami evarga/jenkins-slave, not provisioning.\nSep 01, 2014 7:18:54 PM SEVERE com.nirima.jenkins.plugins.docker.DockerCloud$1 call\nError in provisioning; slave=null, template=DockerTemplate{image=evarga/jenkins-slave, parent=DockerCloud{name=dokcer-coreos, serverUrl=http://10.1.42.1:2375}}\nSep 01, 2014 7:19:03 PM WARNING hudson.slaves.NodeProvisioner update\nProvisioned slave Image of evarga/jenkins-slave failed to launch\njava.lang.RuntimeException: No mapped port 22 in host for SSL. Config=ContainerInspectResponse{id=75566d81a7315099c23eb32db7d35ceaf09f492bd969def3ec7ef32e8a26a442, created=2014-09-01T19:18:54.272045514Z, path=/usr/sbin/sshd, args=[Ljava.lang.String;@27b52a0, config=ContainerConfig{hostName=75566d81a731, portSpecs=null, user=, tty=false, stdinOpen=false, stdInOnce=false, memoryLimit=0, memorySwap=0, cpuShares=0, attachStdin=false, attachStdout=false, attachStderr=false, env=[Ljava.lang.String;@6e6d87a5, cmd=[Ljava.lang.String;@58e49a46, dns=null, image=evarga/jenkins-slave, volumes=null, volumesFrom=, entrypoint=null, networkDisabled=false, privileged=false, workingDir=, domainName=, exposedPorts={22/tcp={}}, onBuild=null}, state=ContainerState{running=true, pid=7847, exitCode=0, startedAt=2014-09-01T19:18:54.470714684Z, ghost=false, finishedAt=0001-01-01T00:00:00Z}, image=f3ac335af281c1ece22f2b76f79b62c0eb9dc75e27fb4bc6fba063135b20fbfc, networkSettings=NetworkSettings{ipAddress=10.1.0.5, ipPrefixLen=16, gateway=10.1.42.1, bridge=docker0, portMapping=null, ports=Ports{ports={}, mapping=null}}, sysInitPath=null, resolvConfPath=/var/lib/docker/containers/75566d81a7315099c23eb32db7d35ceaf09f492bd969def3ec7ef32e8a26a442/resolv.conf, volumes={}, volumesRW={}, hostnamePath=/var/lib/docker/containers/75566d81a7315099c23eb32db7d35ceaf09f492bd969def3ec7ef32e8a26a442/hostname, hostsPath=/var/lib/docker/containers/75566d81a7315099c23eb32db7d35ceaf09f492bd969def3ec7ef32e8a26a442/hosts, name=/furious_poincare, driver=btrfs}\n    at com.nirima.jenkins.plugins.docker.DockerComputerLauncher.getSSHLauncher(DockerComputerLauncher.java:62)\n    at com.nirima.jenkins.plugins.docker.DockerComputerLauncher.makeLauncher(DockerComputerLauncher.java:41)\n    at com.nirima.jenkins.plugins.docker.DockerComputerLauncher.<init>(DockerComputerLauncher.java:37)\n    at com.nirima.jenkins.plugins.docker.DockerTemplate.provision(DockerTemplate.java:206)\n    at com.nirima.jenkins.plugins.docker.DockerCloud$1.call(DockerCloud.java:164)\n    at com.nirima.jenkins.plugins.docker.DockerCloud$1.call(DockerCloud.java:159)\n    at jenkins.util.ContextResettingExecutorService$2.call(ContextResettingExecutorService.java:46)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\n\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54086713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55426077", "body": "Cool ! Thanks\nOn Sep 12, 2014 4:32 PM, \"magnayn\" notifications@github.com wrote:\n\n> Closed #90 https://github.com/jenkinsci/docker-plugin/issues/90 via\n> nirima/jDocker#4 https://github.com/nirima/jDocker/pull/4.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/issues/90#event-164752348.\n\n## \n\nThis e-mail, as well as any attached document, may contain material which \nis confidential and privileged and may include trademark, copyright and \nother intellectual property rights that are proprietary to Kenshoo Ltd, \n its subsidiaries or affiliates (\"Kenshoo\"). This e-mail and its \nattachments may be read, copied and used only by the addressee for the \npurpose(s) for which it was disclosed herein. If you have received it in \nerror, please destroy the message and any attachment, and contact us \nimmediately. If you are not the intended recipient, be aware that any \nreview, reliance, disclosure, copying, distribution or use of the contents \nof this message without Kenshoo's express permission is strictly prohibited.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55426077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55630721", "body": "how can you work with jDocker 1.6-SNAPSHOT ?\n\nOn Mon, Sep 15, 2014 at 5:28 PM, Maciej Mazur notifications@github.com\nwrote:\n\n> it works with DOcker 1.2 and jDocker 1.6-SNAPSHOT (installed manually)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/docker-plugin/issues/90#issuecomment-55597823\n> .\n\n## \n\nThis e-mail, as well as any attached document, may contain material which \nis confidential and privileged and may include trademark, copyright and \nother intellectual property rights that are proprietary to Kenshoo Ltd, \n its subsidiaries or affiliates (\"Kenshoo\"). This e-mail and its \nattachments may be read, copied and used only by the addressee for the \npurpose(s) for which it was disclosed herein. If you have received it in \nerror, please destroy the message and any attachment, and contact us \nimmediately. If you are not the intended recipient, be aware that any \nreview, reliance, disclosure, copying, distribution or use of the contents \nof this message without Kenshoo's express permission is strictly prohibited.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55630721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "reubenavery": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54215867", "body": "+1 .. leaving me utterly confused.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54215867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "docwhat": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54559978", "body": "@magnayn Any clue what's going on? All the above are slightly different. Did docker change its API?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54559978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "gaillou": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54948999", "body": "A workaround is to downgrade jenkins docker plugin to 0.6.1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/54948999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "guilhermef": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55632230", "body": "I'm having the same issue on Ubuntu 14.04 and docker 1.2.0\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/55632230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "horaceheaven": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56071825", "body": "@magnayn Since the number of executors per slave is restricted to one, is it possible to run multiple slaves of the same image in the same job? \n\nAlso, I see that you indicated above to \"Just bump the number of allowable up in the cloud configuration\", I'm not sure exactly which option you're referring to in the configurations, can you shed some light on this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56071825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56077034", "body": "@thomassuckow Ultimately, what I'm trying to accomplish is to run concurrent builds using this plugin on Jenkins. When I click \"Build Now\" while a previous build is running on a docker slave, I get the following message \"(pending\u2014Waiting for next available executor on docker-slave-test-0)\". I was wondering if its possible to get some form of concurrency using this plugin?\n\nAs @magnayn mentioned earlier, the default number of executors for each docker slave is 1. He also made reference to \"Just bump the number of allowable up in the cloud configuration\", I'm not sure what exactly he meant by that.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56077034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56091201", "body": "It seems as if the issue I'm facing is related to this https://issues.jenkins-ci.org/browse/JENKINS-24752\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56091201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "apemberton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56447205", "body": "@lielran You can download from: http://repo.jenkins-ci.org/releases/com/nirima/docker-plugin/0.6.1/\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56447205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/57544304", "body": "Hi @magnayn - was wondering if you were able to release a new version including this PR?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/57544304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56812130", "body": "The `Unexpected termination of the channel` error seems to be thrown whenever a slave is `terminate`d this way (so it is not exactly \u201cunexpected\u201d). You can see this reproducibly in `MockSlaveTest` in `mock-slave-plugin`. I am not sure if this is a bug in Remoting; @kohsuke would be the one to ask.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/56812130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/58306106", "body": "@thomassuckow I do not know of any particular reason why a slave would be terminated during a matrix build by my change, though I did not specifically test compatibility with the Matrix Project plugin. Is this reproducible, and if so is it specific to the new retention strategy?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/58306106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6262917", "body": "You need not (and should not) declare a dependency on `jenkins-core` from a plugin POM. It is implied by the parent POM.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6262917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6262941", "body": "Not using `maven-release-plugin`?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6262941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6263007", "body": "This makes the plugin unavailable for LTS users, greatly limiting its usefulness for a while. Can you test with Java 7 for the time being? Or use 1.554.1 as the baseline, which contains a backported fix of [JENKINS-18537](https://issues.jenkins-ci.org/browse/JENKINS-18537)?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/6263007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7806571", "body": "By the way this change (and c4f11e72a3167bfe183c7a70461decbc3781468b which requires it) makes it hard for others to build and test dev versions of the plugin from the `master` branch. I would suggest either publishing snapshot builds of https://github.com/magnayn/docker-java to the Sonatype snapshot repository (and then using Maven dated snapshot dependencies), or just releasing beta versions of the library when you need to use new features from the Jenkins plugin.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7806571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7807384", "body": "Catching NPE is very dangerous. This has now expanded to a 6-line block and when I try to launch a cloud I just get this message without it being clear that it corresponds to the original problem. Instead explicitly check for this port being absent.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7807384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808005", "body": "Or is it nirima/jDocker you are using?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/7808005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/25184100", "body": "This kind of bug ought to have first been reproduced using a `@LocalData` test.", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/25184100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/24252153", "body": "Bad idea. If you want to pick up the version from Jenkins, add an `<exclude>` to the dependency that would otherwise suck in a newer Guava.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/24252153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37976546", "body": "Sounds like something else is broken then. In normal form construction `descriptor` is always set.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37976546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37976565", "body": "BTW (maybe since fixed) this should be checking `d.id` to work in any locale.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37976565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37976644", "body": "(Or just edit the `getDisplayName` of that strategy to begin with, and use `f:dropdownDescriptorSelector` rather than all this stuff.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37976644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "dmelamedcl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/58136885", "body": ":+1: for that feature. Is there a current workaround for this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/58136885/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ewoutp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/58144124", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/issues/comments/58144124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "KostyaSha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/8619077", "body": "Why you do this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/8619077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9314653", "body": "@magnayn When you do this without real reason you cut thousands of people that uses not the latest version. So please always provide comment why you do update of core dependency. Example, i have 1.565.3 LTS will your plugin work with it, because now i can't use it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9314653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9351065", "body": ":-1: Why this value in minutes?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9351065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9353957", "body": "In my case i need seconds, because i can't wait for 5 minutes and plain value is seconds.\nYou can change it to seconds and create readResolve() function that will convert values to new settings.\nAlso add FormValidation https://wiki.jenkins-ci.org/display/JENKINS/Form+Validation for this field and help page that will have description.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9353957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9354145", "body": "btw, why it string and not long?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9354145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9418947", "body": "New library? What is the difference between old and new?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9418947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9419465", "body": "Caused regression https://github.com/jenkinsci/docker-plugin/pull/143\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9419465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9419493", "body": "@magnayn Could you please next time do it with PR that other people can review?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9419493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10288384", "body": "Where is back to -SNAPSHOT state?\nFor releasing beta version you just need run maven-release-plugin and specify beta version. The same as general release, but with -beta1 tail.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10288384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290361", "body": "I can release for you\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290419", "body": "M... you mustn't merge PRs on top of released version. If you want emulate maven-release-plugin you must do second commit with setting release version (==beta1) to new -SNAPSHOT version. Either you have two source states with the same artifact version that is wrong.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10290419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292289", "body": "I will fix and release beta2 \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292337", "body": "mvn package\n\n```\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project docker-java-shaded: Could not resolve dependencies for project com.nirima:docker-java-shaded:jar:0.9.0-SNAPSHOT: Could not find artifact com.nirima.docker-java:docker-java:jar:1.0.1-SNAPSHOT in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/) -> [Help 1]\n[ERROR]\n```\n\nHow do you build at all it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292510", "body": "the same request https://issues.jenkins-ci.org/browse/JENKINS-26517\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10292510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10309081", "body": "@magnayn you may not use release plugin, but you must follow maven versioning rules and logic. Any version without -SNAPSHOT tail must define only one source state.  So you should do 2 commits during release\nI will try locally avoid modules and back to previous source code layout\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10309081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10506696", "body": "Why do you copy everything from jclouds?!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10506696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10515833", "body": "@magnayn person that did shading doesn't remember what he did and why. I already cleaned some crap of your copy-paste in my WIP branch, but your coding style cleanup will broke all my work. It looks like you even didn't check what is happening and how shading should work. Second shading should relocate guava classes, issue happens because shade doesn't work with hpi packaging.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10515833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10517358", "body": "Shading+hpi issue i found only yesterday and i already debugging it. In wip branch i have some other clean-ups for poms.  I don't care about jclouds. If you want develop this plugin in such way \"i fixed somehow and it looks to work\" and \"i copy-pasted some crap and it looks to work\", then i gave up. You can continue doing alpha, beta after your every not reviewed merge and ask people to test and infinitely getting bug reports.\nHow contributors should understand code when even author doesn't know how and whether it works?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10517358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10522564", "body": "@magnayn do you mean @abayer ? He doesn't do core development according to commits. And he has no idea why/how he did all this changes. Instead of resolving issues people just spread bugs to other plugins. \n\nYou said that pom shading copy-paste from jclouds just works. And now you did another one copy-paste and says again that it \"just works\". So previous \"just works\" was not \"just works\".\nI can help with development and resolve issues. But i don't want to do debugging and fixing after somebody copy-pastes, that even didn't do changes through PRs. \n\nNobody even tried to fix or understand what happens with hpi and shading. You will always add new bugs without understanding what do you actually do. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10522564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10525728", "body": "You said that plugin do 2 shades: 1) for docker-java library and it works, 2) for guava.  If you see any class/guava issues that mean that shading doesn't work. And seems it doesn't work, because of hpi plugin ignore execution, i'm debugging it. You can see executed mojos here https://jenkins.ci.cloudbees.com/job/plugins/job/docker-plugin/202/com.nirima$docker-plugin/executedMojos\nNo shade, but it defined in pom.\nSo instead of checking why it doesn't work, you just changed classes to shaded, that eventually matched to shaded from docker-java-shaded (1). I got some advices from @jglick and will try proposed hack to do .jar packaging with maven-jar-plugin that works fine with shade-plugin.\n\nWithout any review of commits you just hiding real issues. I very hate dealing with fixing/debugging post-factum.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10525728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/11393982", "body": "I failed with tag name! :cry: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/11393982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12050932", "body": "It should work, but i found 3d way of implementation and need think what better to use. Will try to do release soon.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12050932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113597", "body": "coding style\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113598", "body": "no spaces\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113608", "body": "Either provide descriptions either remove this jadadoc lines\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113616", "body": "no space, redundant spaces\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113642", "body": "don't call variables with underscore \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113684", "body": "AFAIK Throwing runtime exceptions is bad practise in java.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113710", "body": "no space after for, as usual random space putting without any coding style \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113740", "body": "use try with resources\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113769", "body": "never use space separated input values\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113815", "body": "does it have corresponding UI binding?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113993", "body": "Also this redundant, because any provisioning error is wrapped and printed in provisioning block. If you need to know what cloud fails, then in root exception print must add cloud name.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12113993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12243195", "body": "no, temp variable\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12243195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13685888", "body": "@magnayn please use PRs!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13685888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13685898", "body": "Then remove unused import\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13685898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13685916", "body": "And afair this is wrong fix as this method is already deprecated and i planned to fix this issues at this weekend.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13685916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13689866", "body": "Where did you get issue with BuildListener? I need know for test case.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13689866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13692955", "body": "Well, workflow support requires additional review.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13692955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13693717", "body": "Checked, null makes sense, but status is deprecated. Testing code update locally.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13693717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700759", "body": ":-1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700784", "body": "null is a valid field value, not sure how you get NPE, but you will get it again because setter/constructor not called and you will have null in field again.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700849", "body": "And btw you killed my work https://github.com/jenkinsci/docker-plugin/pull/298 i started with composing common object and then found that docker-java has no all build features, so end in extending docker-java.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700884", "body": "My suggestion will be refactor BuildPublisher before releasing workflow either it will lock any future changes\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700917", "body": "Ok, found. Right catch :+1: Test case will be welcome\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700936", "body": "`@Nonnull` then\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700937", "body": "And `@Nonnul` for argument\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13700937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13701140", "body": "`magnayan: No, I will not be using PRs for minor functionality fixes.`\nThis commit is not a minor fix. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/13701140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/15328176", "body": "@tianlai https://github.com/jenkinsci/docker-plugin/issues/235#issuecomment-147975445 i'm working in my variant of docker plugin\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/15328176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23205854", "body": ":-1: long name environmentsString\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23205854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462119", "body": "This fix seems right\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462171", "body": "This wrong, SNAPSHOT version for not released plugin version is ok, because it needs fixes for functionality.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23464401", "body": "Right, then ok\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23464401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23553590", "body": ":-1: it looks like a good performance optimization when capacity is zero.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23553590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23556406", "body": "https://github.com/jenkinsci/docker-plugin/pull/142#discussion_r23509336\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23556406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557839", "body": "For templates i have simple patch that allows set the same label for multiple amis.\nAlso, you can't define two instances with the same ami - either fetch of the number running instances wouldn't work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23557839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462310", "body": "not only tagged, hash also works.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462390", "body": "Please indicate what is default.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462465", "body": "Is word \"with\" needed here?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462507", "body": "Is it '-p' command?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462563", "body": "Indicate that job name is 'repo' and tag is build number.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462614", "body": "Why choose? Just  \"Docker provider name\"\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462711", "body": "Maybe shorten to \"is allowed to run\" and \"blank - unlimited\". Also what will happen if i enter 0 ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462734", "body": "What if it will be blank?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462853", "body": "maybe \"the location on the Jenkins master where the job workspaces will be mapped from the images using volumes, network shares, etc.\"?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23462853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23509036", "body": "Then mention it and provide link to documentation. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23509036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23509336", "body": "I think @magnayn should review and discuss later plugin usability, because now they are not \"user friendly\". If value is integer, that it can't be unlimited. zero must be zero - use case for not removing configuration but disabling it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23509336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23183206", "body": "Merge to one if?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23183206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23183270", "body": "Why not call var 'inclusive' or 'exclusive' (depends on what better fit to code)? \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23183270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23201712", "body": "Why mode? exclusiveLabel will be more accurate then.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23201712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23389569", "body": "Will check later, but probably we should reuse existed dropdown control that already has clever description.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23389569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23463879", "body": "Help page is here src/main/webapp/help/system-config/master-slave/usage.html\nJellly: hudson/slaves/DumbSlave/configure-entries.jelly\nExisted form: lib/form/slave-mode.jelly\nJust reuse form and change variable to real Mode object.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23463879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23857853", "body": "This can provide wrong message for entered variables like ${BUILD_NUMBER}.\nWill check how this can be fixed...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23857853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23940065", "body": "use spaces after coma\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23940065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23859144", "body": "I also had issues that jenkins slave failed to connect to ssh. I think it was because of ssh wasn't started. Then slave and image waited timeouts. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23859144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23919725", "body": "I had no chance to collect info, but sounds like your described. I also tried press manually launch slave and it connected successfully, but jobs and slave state wasn't provisioned further. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23919725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23930037", "body": "IMHO ssh connection itself should be more responsive and should have timeout and retry that we should be able to handle\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23930037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26806793", "body": "Why not use getBoolean method?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26806793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26806841", "body": "Slow logging, remove string concatenations wit object argument\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26806841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26806930", "body": "Why result is used for tag name?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26806930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26776785", "body": "Why not integer? Please check indentation\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26776785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26776874", "body": "I think null is not acceptable here, so better use primitives\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26776874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26786461", "body": "Please remove this from constructor and add DataBoundSetter with right default value\nLink #171\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26786461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26907844", "body": "again, use privimite\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26907844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27343866", "body": "Is it make any sense? What will happen if OnceRetentionStrategy will be used with more executors?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27343866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27344478", "body": "Sent this question to maillist hope to get some comments https://groups.google.com/d/msg/jenkinsci-dev/6nGESEvJ_S0/M-jLIrHJS6AJ\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27344478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27526865", "body": "Why not just template.getParent().serverUrl.getHost() ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27526865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27527554", "body": "Have no code under hand, afair some addresses already URL, so if it URL, then no need to create new objects. And usually URI is preferred instead URL.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27527554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27528379", "body": "Checked, change looks right.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27528379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27887873", "body": "white space change\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27887873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27888122", "body": "Not sure that it right separators\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27888122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27889360", "body": "Does it expected to be a multiple tags input?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27889360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27889583", "body": "Slow logging, use object reference\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27889583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27889678", "body": "imho no need to do new lines, one line assignment is readable enough. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27889678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27889767", "body": "Slow logging\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27889767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890075", "body": "in my variant i just allowed using tokens and excluded useless checkboxes\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890196", "body": "Please put space after all if and for in your changes\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890492", "body": "imho better call function `filterTagName()` or even better `stripTagName` because cleanImageTag looks for me like remove tags from real image.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890667", "body": "Are you sure that only for newly committed images?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890782", "body": "interesting why it not tagImage or imageTagName ...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27890782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26907796", "body": "Please name variables friendly, it's not C\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26907796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26907914", "body": "remove space before String and put after for `for (String volume : volumes) {`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26907914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26907916", "body": "put space after comma\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26907916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29360007", "body": "must be test scope\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29360007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29361967", "body": "I feel that you should better do it with regexp and optional group matching. \nAnd it will be very good to move such functionality to docker-java....\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29361967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29362167", "body": "I think better move single entry parsing to separate static method. Then it will be easier test parsing.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29362167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29444267", "body": "Why this trick needed?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29444267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29444335", "body": "Better store in real format and return String only in expected for UI getter. This must simplify many code.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29444335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29444446", "body": "Looks inconsistent with previous block.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29444446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29444532", "body": "Better don't mount at all imho. Either it will be not obvious. Also all input data must be checked with FormValidation.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29444532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29460368", "body": "https://wiki.jenkins-ci.org/display/JENKINS/Form+Validation\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29460368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29460426", "body": "Is it two separate features?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29460426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29460517", "body": "```\n-v=[]: Create a bind mount with: [host-dir]:[container-dir]:[rw|ro].\n       If \"container-dir\" is missing, then docker creates a new volume.\n```\n\nIsn't this handled somewhere in docker-java?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29460517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29548001", "body": "but with Volumes vs Binds that probably wouldn't work...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29548001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30939103", "body": "After analysing library changes it seems that better store input data as `String[]`. This should save us from changes in docker-java.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30939103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30939143", "body": "You can't create volume during start.\nCreate container support bind + volume creation calls.\nStart only support additional binding. \nIn this plugin case it should be enough to configure container during creation.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30939143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30938504", "body": "What was this 2 lines about?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30938504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30938539", "body": "Please put right javadoc `@author lanwen` or better your first and last names. Date and time imho redundant.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30938539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30938720", "body": "Probably MappedFsWorkspaceBrowser class can be just refactored to have static method that will extract path from action, then it will be easier to test it without mocking.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30938720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947057", "body": "I mean that i don't want change this test code atm. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947066", "body": "Because it will cost more efforts with backward compatibility.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947079", "body": "That mean that there are enough imports for collapsing them. It doesn't influence on runtime performance.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947171", "body": "Nobody cares about such info. If you really interesting about class hierarchy and their usage, then open in IDE.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947199", "body": "Just because default checkstyle rule do it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947223", "body": "Not the same\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947233", "body": "They close, but i see no ways for combining them.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947272", "body": "Better such validation rather then no at all. This variant is already 10 times rewritten locally :laughing: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987291", "body": "You are wrong, this code lines not about beauty, it data migration.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987315", "body": "It filters array of strings.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987395", "body": "As you see i mentioned that it need to be removed or replaced in future. I have no time for beatifying code that will be removed soon. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987608", "body": "Your proposed replacement absolutely wrong from data migration view point. Even if current code duplicated, then it not an issue. And as i repeated 100 times personally to you \"configuration handling will be changed\" no sense in wasting time on code beauty. Instead of continuing unbundling launcher i spent the whole day on unrelated to fixes comments.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30983596", "body": "I don't like guava functions internals. Jenkins has Utils.\\* And all input variables handling need to be reviewed later. So this not critical atm.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30983596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31083728", "body": "changed\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31083728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30995198", "body": "I think after #234 it will be possible just to have retries as additional option for DockerSSHComputerLauncher, because it already wrapping sshlauncher/sshconnector to have ability to choose/configure launcher in UI. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30995198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31649452", "body": "Please make it public\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31649452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31669032", "body": "mm... maybe better long?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31669032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31674971", "body": "Some description about what kind of connection required: tcp/udp/ssh?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31674971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32358785", "body": "Have you verified that order is preserved?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32358785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32359138", "body": "This is why ordinal that you deleted exists.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32359138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32359614", "body": "java 1.7 available\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32359614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32385376", "body": "Why?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32385376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32397229", "body": "Really?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32397229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32397243", "body": "Why not just `descriptor.` ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32397243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31626551", "body": "This part of code is not mine and of course it weird for me, my idea was to implement all objects and pass to Cloud API .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31626551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31626852", "body": "This also not my code, but without it i had spawned many containers. \nWhat will be the right way of provisioning/calling some methods for this block of code?\nAs i see Computer object created after slave added and created by update() calls after adding slave.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31626852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31641370", "body": "Sorry, but when launcher will be used then? And it seems that in case of jnlp this may look crazy, though i can have some timeout and do connection retries from docker side. \nSo backing to my initial idea, i can move current launcher configuration to separate launcher class (unbundle hardcodes), then i can have some (static) methods that i can call from Provisioner for determining that connection is ok, like i did method for configuring dockerCreate parameters.  And then Cloud API will use \"standard\" launcher methods? \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31641370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106220", "body": "This is WIP\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106252", "body": "this is WIP i will call you when something will be ready for review\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106877", "body": "I know what to do with backward compatibility. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32106877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32107313", "body": "I just want save your time. You can ignore generic things like backward compatibility. ATM i'm playing with better design (in general docker based methods for launcher: wait, contribute), then i will need review what is broken because hardcoded launcher in template was used in other (non cloud functionality) parts of plugin.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32107313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32281504", "body": "No problems. Added reviewable.io \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32281504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32385707", "body": "TODO migrate to setter\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32385707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32385850", "body": "Probably better require everywhere `DockerCloud, DockerTemplate, InspectContainerResponse/CreateContainerCmd` ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32385850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32511712", "body": "Not a problem, can be changed later. I don't expect that somebody will implement this outside this plugin.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32511712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33064095", "body": "I have WIP of other way of running and executing container, but this what i need to control from plugin. Allowing users defining connections will be not a good solution.You can't have secret before running container, so your request doesn't make sense.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33064095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33064272", "body": "yes, need split changes from local work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33064272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33068601", "body": "Repeating again: \n\n> You can't have secret before running container\n\n\"I have other WIP way of executing and running slave processes\"\n\nI don't want block this PR because of nuances that can be changed later.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33068601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33836372", "body": "Does anyone know what is the use case of this builder?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33836372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33883223", "body": "@steve-jansen i'm marking this launcher as experimental. And if it doesn't work - will fix later. I think everybody need fix related to ssh. \nOr even will remove from available for some time...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33883223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34261980", "body": "too long sentence.\nPlease split put new line after dot and after br\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34261980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910226", "body": "+\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910329", "body": "they are all from static config and method is pretty simple - validate loaded data. I usually set debugger breakpoint and navigate objects/errors.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910415", "body": "Wouldn't work, environment is `String[]`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34911098", "body": "overhead :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34911098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34946844", "body": "Not critical also i want migrate to groovy later.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34946844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34947311", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34947311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34923351", "body": "Not really critical. This value is used in UI, probably it can be null, but 'no configuration' from ui is returned as empty string, so emulating the same behaviour. I can try return null if you want.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34923351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34923445", "body": "will be bad)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34923445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34923484", "body": "will run FB later\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34923484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34924320", "body": "Sorry, forgot. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34924320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34946839", "body": "1) it copy from upstream docs\n2) docker fully supports ipv6? ;)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34946839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34948209", "body": "Please send PR to docker documentation :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34948209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34970456", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34970456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35038507", "body": "copy from hudson.. i had idea do page binding but then skipped...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35038507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35039267", "body": "Named like`hudson.Functions`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35039267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35039531", "body": "more interesting where it was required, because it definitely was required somewhere :(\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35039531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35041237", "body": "reverted back where it was. Will keep for now. Will clean on next releases.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35041237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35041276", "body": "just removed\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35041276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35054224", "body": "I just converted crazy jelly, hope something can be simplified in future, now i don't want break something.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35054224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35054809", "body": "i just copied that is used! When somebody describe all this magic, then i will be glad to do modern way :P\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35054809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35054829", "body": "DockerFunctions! bingo\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35054829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35201454", "body": "just did consistent with second dropdownListBlock\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35201454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35201515", "body": "in my manual tests it doesn't influence\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35201515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35201533", "body": "but this block fixes showing selected entry with right data\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35201533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28195715", "body": "Never do fields public, DataBoundSetter is for setters\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28195715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28195719", "body": "I think almost all code can be replaced with one regexp. Do you know regexps?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28195719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28195727", "body": "Optional block in optional block just for some number of values looks like a wrong design\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28195727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196153", "body": "Damn, not constructor, create setter and put DataBoundSetter\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196180", "body": "JobProperty was put into optionalBlock with inline=true, because jenkins core sucks and doesn't wrap it in existed UI (i have idea how fix it, but it need some time). In your case you will be forced to wrap all this options in if statements in java code - that usually sucks by design.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196191", "body": "Why not just return boolean?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196197", "body": "And you have this method, looks really duplicated\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196279", "body": "It looks absolutely redundant \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196288", "body": "Usually constants are put as static final in class fields \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196291", "body": "You matching by one regexp and printing as error other regexp.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196339", "body": "Using public fields is bad solution, because you will unable to change it's behaviour later.\nConstructor makes sense when there are not many parameters. Template for example has so many fields, so it better to use setters. Also constructor with critical fields + setter is more groovy friendly in case you will create some configuration programmatically.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196513", "body": "You should follow docs, jelly checks for public field and then for getter/setter AFAIR. But again, using public fields is bad practise.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196523", "body": "If you created a real wrapper object, then using .toString() is bad idea, wrapper class should provide some clear getter that wouldn't depend on toString() implementation that usually has format \"Key = value\" for printing all object internals.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196565", "body": "You can define multiple patterns with group matches, example https://github.com/jenkinsci/github-plugin/blob/master/src/main/java/com/cloudbees/jenkins/GitHubRepositoryName.java#L26-L48\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196575", "body": "And if this regexp is really right, then it's ok to use, but document/comment somehow. Not sure that it right java regexp, on first look it perl/PCRE.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35114818", "body": "btw, is it the same as NameParser from docker-java do?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35114818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35490855", "body": "Use case it up to user, just implement ability to not pull any images, i.e. somebody on mobile or dial-up\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35490855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35490859", "body": "Probably, https://github.com/jenkinsci/jenkins/blob/9c443c8d5bafd63fce574f6d0cf400cd8fe1f124/core/src/main/java/hudson/model/BallColor.java#L57\nBut i don't want waste time on localisation :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35490859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35493178", "body": "or just in high cost vm. Do you have any objections for it? ;)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35493178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35493183", "body": "We are pulling, this block is only for pulling image\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35493183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/36038570", "body": "restored this method to have ABI/API compatibility\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/36038570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/36038573", "body": "moved `pullImage` into this block\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/36038573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/36767426", "body": "It should be implemented in other way, using clone interfaces like SSHLauncher that need to be fixed also. It was a temp hack.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/36767426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/36767504", "body": "It was temp hack.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/36767504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37417872", "body": "F*cking variable naming in docker API. Just to have less chaos following their upstream naming either it will be hard for me to sync API->docker-java&docker-plugin \nhttps://github.com/docker-java/docker-java/pull/299\nhttps://github.com/docker-java/docker-java/pull/299/files#diff-50e3dbf43281453d0708f5249573aae6R16\nhttps://docs.docker.com/reference/api/docker_remote_api_v1.20/#build-image-from-a-dockerfile\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37417872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37420991", "body": "i copy-pasted description to fields, but it overkill to copy-paste on getters/setters\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37420991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37421011", "body": "@lanwen \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37421011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804148", "body": "`} catch (...) {`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804251", "body": "Don't catch, errors are catched and reported on root provisioning level.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804422", "body": "don't fill stringbuilder, print into listener\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804507", "body": "the same, print into listener!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804581", "body": "use primitive\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804610", "body": "primitive\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37804610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37805916", "body": "only if we didn't enforce default on our side...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37805916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37806614", "body": "hm, some timeout existed before in configuration but not used AFAIR, requires review...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37806614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37808919", "body": "what is `getProgress` ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37808919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37809619", "body": "progress is ok because i can see that it works, also all tools do the same trash in console (maven/wget/curl/etc). \nWhat will be ideal, it's progress with `append`! But then we should know some granularity or diff to previous line... Try store curLine, nextLine, and if progress is not null, then `String diff = nextLine.replace(curline, '')` and append this tail to listener if it `!diff.isEmpty()` :) ! \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37809619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37810027", "body": "And you are printing into LOGGER, not listener, it this place has no listener, then no need printing at all imho.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37810027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37810107", "body": "Could you try this https://github.com/jenkinsci/docker-plugin/pull/300/files#r37809619 trick for builder/publisher?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37810107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38022633", "body": "(TODO for me) All this control classes need to be updated and provide listener for printing output. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38022633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38024606", "body": "created #305, will handle myself\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38024606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38158969", "body": "breaks Builder as it not Serialisable\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38158969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38199752", "body": "@lanwen i added description, though i think it not the end of story with this client/config builders...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38199752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38204092", "body": "TODO migrate to plain values in plugin config :(\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38204092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38280524", "body": "should be `println()` as we glue text\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/38280524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "ninja-": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/8663335", "body": "you didn't provide docker-java with the KeystoreSSLConfig class anywhere :\\\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/8663335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "saaadhu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9353697", "body": "IdleTermination timeout was in minutes already, and IIRC, it did not specify the time unit used in the UI, so I figured I would make this timeout minutes too, to avoid confusion.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/9353697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jpgxs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10599758", "body": "This change breaks standard usage.\n\nBy default, containers will bind to IP address 0.0.0.0 - NOT `null`\n\nTherefore this will work for testing when testing with cloud 'localhost' but not anything else.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10599758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10600016", "body": "It may be sufficient to change this to `if(host == null || host.equals(\"0.0.0.0\"))` but this would not account for situations where the cloud URL was proxying to another docker host, binding containers to all ports.\n\nThis isn't something easy to inspect as far as I'm aware, however.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/10600016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27891311", "body": "Yeah, it takes the ID from the newly committed image and does a `docker rmi -f ...` \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27891311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27891627", "body": "No idea; I would have preferred imageId as this is what the commitCmd returns\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27891627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28195882", "body": "Sure, I can move it to DataBoundConstructor in that case\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28195882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196042", "body": "I thought it best as the hidden values are only applicable to committed containers; I do see your point as the optional block has no adjacent options.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196266", "body": "isValid() returns boolean, validate() throws exceptions with the reason for the name being invalid - e.g. for form validation when users enter the repository name\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196274", "body": "I was going with something like:\n\"(?:(?:._/(?:(?:[a-z0-9.]+[a-z0-9.-](?=[^-]))/)/)|(?:.+[:.].+)|(?:(?:[a-z0-9.]+[a-z0-9.-](?=[^-]))/))?[a-z0-9_.-]+(?::[a-zA-Z0-9][a-zA-Z0-9_.-]_)?\"\n\nIt just couldn't be used to specifically clean the names up\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196289", "body": "Haha I know how much you hate constructor :wink: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196519", "body": "It does indeed, I just think @KostyaSha is pointing it out as bad practice \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "oleg-nenashev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/11393945", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/11393945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28500753", "body": "This annotation is a part of JSR-305 standard, which is being supported by almost all static analysis tools and IDEs.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28500753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "denouche": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/11908895", "body": "Hi!\nI'm very interested in this patch and I wonder why the new added method `bySshWithEveryRetryWaitFor` is present in v0.9.3 but not used yet in `DockerComputerLauncher` ? \nSomething like:\n\n```\n-            PortUtils.canConnect(host, port).withEveryRetryWaitFor(2, SECONDS);\n+            PortUtils.canConnect(host, port).withRetries(3).bySshWithEveryRetryWaitFor(2, SECONDS);\n```\n\nThanks in advance!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/11908895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "lanwen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/11909794", "body": "It used in new-style provision logic in #234\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/11909794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12115206", "body": "@magnayn could you implement any changes over PR next time? Think community should review changes (12 hours at least) before they merged to master. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12115206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12115682", "body": "please use brackets even if only one line inside. Its hard to read without them\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12115682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12115725", "body": "here you can use `Validate.notNull(clientConfig, \"Could not get client because we could not find the cloud that the project was built on. What this build run on Docker?\")` to simplify precheck\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12115725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12115758", "body": "what for you return `null` here if later you throwing exception on null client config?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12115758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/14213385", "body": "@magnayn i've found retry lib, maybe you can try it to remove all that retry stuff from code?\nhttps://github.com/rholder/guava-retrying\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/14213385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28499020", "body": "Just for interest - what this annotation does?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28499020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28194021", "body": "can you split it to separated test methods? It a little bit hard to read :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28194021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30943233", "body": "Construction of full path - `fsMapping/workspace/jobname` with help of `File(File parent, String child)`. Same as inside of `getFile` method in commons-io\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30943233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30943268", "body": "don't think it should be done - because of it needs to check how it gets the action from jenkins (it needs mocks) and because of content of such static method will be equal the content of inner `if` (its overhead). Mocks here is simple and easy to use.\n\nAlso it needs job name to construct full path\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30943268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30944614", "body": "> [Minor] Think rule to not use wildcard imports is good. (In idea it can be found on `code style` -> `java` -> `imports`)\n\nWhen review, you can see each class in scope and where from every function or const is imported. Also any import modification is visible on review\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30944614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30944627", "body": "> Because other already not in list\n\nWhy not to start change it? It can simplify convertion to array and back\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30944627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30944636", "body": "> Not in this time ;)\n\nWhat does \"not\" means here?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30944636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947077", "body": "ok, ill refactor it myself after your merge and send pr\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947150", "body": "its only review point, not perfomance.\n\nFor example - how you can know where `PortBinding` located, if more than one `*` imports and no any import of `com.github.dockerjava.api.model.PortBinding`? You should go first to same package, then go to first `*`, then to second... (Or you should clone whole project to see it in IDE)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947191", "body": "ok, think should be contributing rules then in future. Lot of open-source projects restricts wildcard imports\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947208", "body": "hmm this is same as `#fillContainerConfig` but with another exceptions\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947246", "body": "```\n+                for (String s : strings) {\n+                    if (s.equals(\"/\")) {\n+                        return FormValidation.error(\"Invalid volume: path can't be '/'\");\n+                    }\n+\n+                    final String[] group = s.split(\":\");\n+                    if (group.length > 3) {\n+                        return FormValidation.error(\"Wrong syntax: \" + s);\n+                    } else if (group.length == 2 || group.length == 3) {\n+                        if (group[1].equals(\"/\")) {\n+                            return FormValidation.error(\"Invalid bind mount: destination can't be '/'\");\n+                        }\n+                        Bind.parse(s);\n+                    } else if (group.length == 1) {\n+                        Volume.parse(s);\n```\n\n```\n+            for (String vol : getVolumes()) {\n+                final String[] group = vol.split(\":\");\n+                if (group.length > 1){\n+                    if (group[1].equals(\"/\")) {\n+                        throw new IllegalArgumentException(\"Invalid bind mount: destination can't be '/'\");\n+                    }\n+\n+                    binds.add(Bind.parse(vol));\n+                } else if (vol.equals(\"/\")) {\n+                    throw new IllegalArgumentException(\"Invalid volume: path can't be '/'\");\n+                } else {\n+                    vols.add(Volume.parse(vol));\n+                }\n```\n\nvery close\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947251", "body": "ok\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30947251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987083", "body": "just check once (`isNotBlank` contains null check)\n\n```\nif (isNotBlank(volumesFrom)) {\n      setVolumesFrom2(new String[]{volumesFrom});\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987239", "body": "don't use concrete class names if it has interface - in this case it should be List\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987349", "body": "Are you kidding me?\n\nWhat for you need two ifs if second if also checks first?\nAnd why you asking me ok, or not, if you don't listen me? \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987655", "body": "So you can just write `will be fixed next time` and merge without any doubt. And next time don't write duplicated code.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30987655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30948919", "body": "`StringUtils.isNotBlank()` or just set `withMacAddress(trimToEmpty(getMacAddress()))` - then it just do nothing (as it null by default)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30948919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30983673", "body": "its apache commons-lang, not guava. Jenkins's Utils.\\* mostly copy-paste from there\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/30983673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31669548", "body": "`ConnectionInfo connect(ServerHostKeyVerifier verifier, int connectTimeout, int readTimeout, int kexTimeout)` - that's the main cause of int cast\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31669548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31701205", "body": "only tcp. Will add it next time\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31701205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31406508", "body": "JFI `URI.create(..).getHost()` can help avoid catching of MailformedUrlExc\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/31406508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910075", "body": "please add simple comment to assertTrue/False, `assertFalse(\"bindAllPorts\", tBase.bindAllPorts);` for example\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34909814", "body": "better `Joiner.on(\"\\n\").join(defaultIfNull(environment, emptyList()));`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34909814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910829", "body": "`defaultIfNull(environment, new String[] {})` ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34910829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34946564", "body": "`\"${%Remove volumes after run}\"` ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34946564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34921911", "body": "why here you check for null and in another place you check only size?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34921911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34921931", "body": "what will be if null?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34921931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34924022", "body": "no, it only to compare with second null check\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34924022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34924110", "body": "`CollectionUtils.isNotEmpty()`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34924110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34946536", "body": "what will be if we want ipv6?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34946536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34947885", "body": "Not fully, but support\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34947885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34947893", "body": "Not fully, but supports. I have already use docket in ipv6 only net\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34947893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34951399", "body": "use `split(\":\", 2)` for correct ipv6 handling\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34951399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34962191", "body": "please move pattern to const\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34962191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34987292", "body": "can avoid if with one of lang3.Validate methods.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34987292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34987357", "body": "can you use const here? Or instead you can change const in future, but can forget to change it here. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/34987357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35038083", "body": "no need to write default empty public constructor. Or make it private and class - final\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35038083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35038332", "body": "why without generic?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35038332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35038760", "body": "maybe name it as UIFunctions or UIHelpers?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35038760/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35045523", "body": "`stapler-class` is deprecated\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35045523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35045595", "body": "so many logic in view! :|\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35045595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35047278", "body": "So if u wanna use `hudson.Functions`, you can't use import - you should write full class name\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35047278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28193905", "body": "maybe use `defaultIfEmpty` from commons-lang?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28193905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28193914", "body": "`Strings.isNullOrEmpty(tagToken)` ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28193914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28193918", "body": "why you reinit nulls with nulls?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28193918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28193936", "body": "maybe use conts to save name of each part? Or too many duplications instead\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28193936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196479", "body": "[Javadoc](http://stapler.kohsuke.org/apidocs/org/kohsuke/stapler/DataBoundSetter.html) says that it can be used on field with any access modifier (sure it should be private)\n\n> The field is discovered through simple reflection, so its name must match the property name, but its access modifier can be anything.\n\nWill it work without setter in case of private field with annotation?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/28196479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35487458", "body": "how can we localize it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35487458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35487469", "body": "if we don't pull image, why we write that we finished?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35487469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35487485", "body": "think use case in javadoc will be useful\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35487485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35491409", "body": "who run slave via mobile internet? :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35491409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35496135", "body": "ah, ok, my fault\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/35496135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37416643", "body": "what is it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37416643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37420118", "body": "ah, its \"quiet\". \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37420118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/40180933", "body": "Think you can remove it completely. Git saves the history in case of restoring\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/40180933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "sammyxx": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12122521", "body": "is this what you ment?\nThis looks pretty nice in my Jenkins now.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/12122521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "tianlai": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/15325048", "body": "waiting for the next available release with this fix to work with docker api 1.20. @KostyaSha when will be the next release approximately? \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/15325048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "oconnormi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/25662885", "body": "Just curious when this will be available in a released version. Ran into an issue with this today \ud83d\ude04 ", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/25662885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "aberkIBM": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/26892914", "body": "thank you!", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/comments/26892914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "imasen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23476584", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23476584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23476630", "body": "I'm not a native speaker, but I think it is not needed. Instance is also not correct because it's called container.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23476630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477029", "body": "\"Choose\" because the user needs to provide a name, it is not a name already used at for example Docker Host configuration. I changed it to: \" Provide a name for this Docker Cloud\".\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477273", "body": "``` java\n        if(containerCapStr.equals(\"\")) {\n            this.containerCap = Integer.MAX_VALUE;\n        } else {\n            this.containerCap = Integer.parseInt(containerCapStr);\n        }\n```\n\nI found this in DockerCloud.java. If zero, then this Cloud will not be used. So \"The maximum number of containers that this provider is allowed to run\" is correct for Integer.MAX_VALUE and also 0.\n\nI think this could be a bug. What happens, if the numer is below zero?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477651", "body": "I found this:\n\n``` java\n        if (instanceCapStr.equals(\"\")) {\n            this.instanceCap = Integer.MAX_VALUE;\n        } else {\n            this.instanceCap = Integer.parseInt(instanceCapStr);\n        }\n```\n\nThe description above is wrong. In my opionion if it's 0 it should not start Instances on this machine. If it's blank, then it's Integer.MAX_VALUE.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23477651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23478039", "body": "Ok.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23478039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23187977", "body": "Looks good for me.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23187977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23188069", "body": "Good idea, I think exclusive should be good for this. So if exclusive = false then it's Normal-Mode, if true then its Exclusive-Mode.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23188069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23208176", "body": "exclusiveMode is better, because it's called mode in Node.Mode JavaDoc: http://javadoc.jenkins-ci.org/hudson/model/Node.Mode.html\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23208176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mvtorres": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23853383", "body": "Our jenkins server and docker server is on the same box. As soon as the docker container is started, the container ssh port forward on 127.0.0.1, and the port, is already up. But the SSH daemon may not have finished starting up. When I tested this scenario, PortUtils.waitForPort does not block, since the port is already up. It only does a port is open check. The new change tries to do an ssh connection, which fails if the SSH daemon is not ready.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23853383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23885877", "body": "So did you get the slave node showing as offline/suspended, and when you look at the slave log, you get a connection terminated on Ssh Slave plugin 1.6, or IllegalStateException on Ssh Slave plugin 1.9?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/23885877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "carlossg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/24253308", "body": "Yeah, that's the other option I mentioned\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/24253308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "menski": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/25867575", "body": "You added `int memoryLimit, int cpuShares` as constructor arguments even though your aren't using them. Also they are `int` instead of `Integer` which will lead to NPE in `DockerTemplate` line 264 if the values are `null`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/25867575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37805348", "body": "But the readTimeout can be null if non is set.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37805348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37806380", "body": "what should be the default? there was non before?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37806380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37809296", "body": "if you pull a layer there will be this nice `[====>            ]` progress indicator. So the status will be the same with an updated progress until the layer was pulled completely. I thought it would be enough to log every status once and not the progress.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/37809296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "maafy6": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26781055", "body": "I actually had `int` to start, saw there were some other recent fields that used `Integer` so I switched it at the last moment. Argument about not null makes sense to me, I'll change and fix indent tonight.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/26781055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27345878", "body": "I'm not 100% sure if this answers your question, but hopefully this will make sense. I have not tested with OnceRetentionStrategy and multiple executors. From the [source](https://github.com/jenkinsci/durable-task-plugin/blob/master/src/main/java/org/jenkinsci/plugins/durabletask/executors/OnceRetentionStrategy.java) and docs, it looked like it very much expected to be running on a slave with one executor. As far as I could tell from the source, as soon as _any_ task was completed, it would try and terminate the slave. What I didn't want to happen was the following scenario:\n- DockerTemplate configured with two executors and OnceRetentionStrategy\n- Jenkins queues two jobs, QuickJob and LongJob\n- Jenkins spins up a new slave with that template and assigns QuickJob to one executor and LongJob to the other on that slave.\n- QuickJob completes quickly and triggers a terminate long before LongJob completes.\n\nI wasn't sure what would happen at this point, whether or not it would let LongJob finish up before tearing down or if it would just get killed. If it's the latter, then we certainly can't allow Once with multiple executors, if it's the former, then it'd be fine (but it doesn't seem significantly different than running as Cloud with a low idle termination time).\n\nAs for the case where we're running a ContinuableExecutable and a Cloud strategy, I don't have that in my system and am not familiar enough with the paradigm to speak to it, so it is untested. (Do such tasks assume/require that they be built on the same node?)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27345878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "srwalter": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27527291", "body": "I just moved the existing code inside a conditional.  I can change it if you like\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/27527291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tjamet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29360165", "body": "i'll update it\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29360165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29454866", "body": "In fact there is no withVolumes for `StartContainerCmd` and almost all methods of it have been made deprecated:\n'TODO: Almost all methods are deprecated as they have corresponding siblings in {@link CreateContainerCmd} now.'\nfrom https://github.com/docker-java/docker-java/blob/master/src/main/java/com/github/dockerjava/api/command/StartContainerCmd.java\nI've tried to be as consistent as possible from the existing code\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29454866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29455217", "body": "Bind 'mounts' a volume from the host, 'Volume' creates a volume\nBoth adds parsers but didn't find common parser to detect wether we were talking of a bind `hostPath:ContainerPath[:Mode]` or a volume `ContainerPath`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29455217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29455356", "body": "didn't find the form validation, where about is it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29455356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29479537", "body": "https://github.com/docker-java/docker-java/blob/master/src/main/java/com/github/dockerjava/api/model/Bind.java#L51\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/29479537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "olivergondza": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32359023", "body": "No, is there any desired order? It should be trivial to create any order you like this way.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32359023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32393787", "body": "No one needs to refer to the symbol for now, it is exposed for jelly consumption only. It is not a part of plugin API so it can be changed freely in the future.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32393787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32407396", "body": "IIRC it did not worked.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/32407396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "steve-jansen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33051989", "body": "@KostyaSha my preference would be to declare an `ENTRYPOINT` in my dockerized slave and have the plugin send in the `-jnlpUrl` and `-secret` args.  This would let we do things like baking the slave.jar into my docker build if I want to.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33051989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33052068", "body": "@KostyaSha should `remoteFS` apply here?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33052068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33066857", "body": "Perhaps this pseudo example will help me explain:\n\n```\ncat > Dockerfile << EOF\nFROM myregistry/java:8\n\nRUN mkdir /home/jenkins\nWORKDIR /home/jenkins\nADD http://myartifactory/repo/slave.jar /home/jenkins\n\nENTRYPOINT [ \"java\", \"-jar\", \"slave.jar\"]\nEOF\n\ndocker build myslave .\n\ndocker run myslave -jnlpUrl http://jenkins.example.com:8080/some/jnlp/url -secret someSecret\n```\n\nAbove avoids the need to execute the `cd /home/jenkins` and `wget` at runtime.  [ENTRYPOINT](https://docs.docker.com/reference/builder/#entrypoint) allows you to concatenate args from a `docker run` into a base command, rather than overwriting the command.  It can be a very powerful alternative to `CMD` in a Dockerfile.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33066857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33073353", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/docker-plugin/pulls/comments/33073353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}