{"_default": {"1": {"svanoort": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/9c5f16187aba2a4d440793c4ff7d4b7204c32e51", "message": "Merge pull request #443 from vgaidarji/vgaidarji/plot-plugin-pipeline-compatibility\n\nMention plot plugin Pipeline compatibility"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vgaidarji": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6416f6a9f6b3d6659a5eaef4500bd7e1c55280c8", "message": "Mention plot plugin with Pipeline compatibility"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jglick": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/3cd2074c861850793006e5b86f6dda94ffd8e112", "message": "Merge pull request #442 from lanwen/patch-1\n\nUpdate DEVGUIDE.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/98058e2fa58f7245a87f070f7dc91526f600aa29", "message": "[JENKINS-35420] Noting release."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/51b3b59fa9ca23bef53c6810914d9fabeb3d4ebb", "message": "[JENKINS-35420] Noting."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f5c998378846209c2ceb37500f79d89c8da395ab", "message": "[JENKINS-26056] Noting withAnt\n\nFrom https://github.com/jenkinsci/ant-plugin/pull/22."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c84a9af380854dbafd66e265b63cd05969ad7c47", "message": "Merge pull request #439 from alexbrjo/alexbrjo-compat-update\n\n[JENKINS-32263] [JENKINS-32650] [JENKINS-33841] [JENKINS-33310] [JENKINS-26591] [JENKINS-30522] Updated support status for several plugins"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/23d473486c8e345e8f6586d30f889c313f9f5adf", "message": "Merge pull request #438 from jenkinsci/recampbell-patch-1\n\n[JENKINS-30700] Noting cobertura fix"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/bbdb34bf64a64a6481f24924bdee542873d19926", "message": "Merge pull request #437 from oleg-nenashev/my-plugins\n\nUpdate COMPATIBILITY for several plugins."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/573552990365bb208d4447784a69fd435e26759b", "message": "JENKINS-31803 (tfs) claimed to be fixed."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8cb078fc36828654bc4574ca1228057f2863d21f", "message": "Merged #429 to note JENKINS-41267."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f31f8fda473e4910f344afb50b0c95844825b7c9", "message": "Merge pull request #433 from jglick/jenkins.io\n\nUpdating or removing some content"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/db5cf31926d7e009cf30ed14a8e7325d384067e9", "message": "Merge pull request #428 from oleg-nenashev/PrioritySorter\n\n[JENKINS-36570] - Add PrioritySorter to the Pipeline Compatibility list"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/74522f80f474be8c765d65158c107308f6f22c73", "message": "Merge pull request #432 from seanf/JacocoPublisher\n\nFix step name for JacocoPublisher"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f820d662ca3019bef280022b288611c084ed116e", "message": "Merge pull request #431 from casz/patch-1\n\nAdd AccuRev compatibilty"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ddf73bebcafd7bca9293f28b8fa84a0d7bda478b", "message": "Merge pull request #430 from nfalco79/master\n\n[JENKINS-40624] Update COMPATIBILITY.md to update NodeJS plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b293156039a223ee592298cbd762fed9291f68a5", "message": "Merge pull request #426 from estarter/patch-1\n\n[JENKINS-40765] [JENKINS-40766] Add release/m2release plugins to the list"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/be4c63608ad58b985f24448be46b6b5438d79463", "message": "Merge pull request #425 from GabLeRoux/patch-1\n\nBuild parameters not groovy variables anymore"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/2474a2ebb98cd0390b2ea99f672cbd010e4b1485", "message": "Updating or removing some content."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c8d5db3b12ddb0beb10db48b4edc45513efb43cd", "message": "More on clouds\n\nCC @ndeloof"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/14425eddb7cba82d5b403e9b46bf38e982734235", "message": "[JENKINS-40759] Should depend on the structs plugin, not the library"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f29227dee8f5450704ae8a6482819bf993e30443", "message": "Merge pull request #424 from ajzaff/patch-1\n\nAdd CoberturaPublisher to compatability note"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/820b2508abbc9125f8c11db341530dd58d89e5ec", "message": "Merge pull request #422 from ceilfors/JENKINS-37044\n\nAdd jira-trigger to compatibility note."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/9bbfcac9bb966317f035468277ee96076d54d120", "message": "Sundry updates."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/03fbf941e0c84226d61fa193fdc03e0ea7656f99", "message": "[JENKINS-37068] Merging #415 with fixups."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/89af4663420ef56de3b360bd18e51132a1f1ef39", "message": "[JENKINS-33355] Merging #421, fixing up plugin short name."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/0d0879a490fb0f5adbf147f2690c90bce1acf9b3", "message": "Merge pull request #420 from Dohbedoh/JENKINS-28454\n\n[JENKINS-28454] Add WsCleanup to compatible steps"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6e744eb34fd7485c37deae58bb7d4b82bf496758", "message": "Merge pull request #418 from mrooney/master\n\nmark StashNotifier as supported and link to docs"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/fd40f01c3d7ebe535b291e65a991e2dad5181533", "message": "Merge pull request #416 from eddumelendez/sonarqube_check\n\nUpdate SonarQube compatibility"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/576c9ecdf58287ef36cff0121554a51235b50dd6", "message": "Merge pull request #412 from 62mkv/patch-1\n\n[JENKINS-33310] reflected compatibility status of HockeyApp Plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/63791640268fa092d44c66f2bc98f9351049d1c8", "message": "Merge pull request #410 from netmikey/patch-1\n\n[JENKINS-27120] Mark JaCoCoPublisher as compatible"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f80ee9fafc7a90fb342489b342049f2a12d6bbf1", "message": "Merge pull request #417 from jlong/master\n\nTUTORIAL: Update `archive` to `stash` in explanation of multiple threads code"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/863286ae8269300a5468aa191777a99cd83067c4", "message": "Merge pull request #411 from reftel/feature/stash_notifier\n\nStash Notifier supports pipeline as of 1.11"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/397ef027abcd16e6d430e6ca026a0f4bf970aff8", "message": "Merge pull request #406 from StephenKing/StephenKing-stackoverflow-tag\n\nUpdate tag name for StackOverflow"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/667e9f5ab4ef50fe523a32f1c35a5cbf7d9cf957", "message": "Merge pull request #419 from eyalbe4/master\n\nUpdate Artifactory Plugin compatibility."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/83aebaa5e956cac0b94c61a68e9781f409244ec2", "message": "Updated splitTests tutorial\n\nDemonstrating how to bind variables for `parallel` closures."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/1c7ff2fa2d38838be83bf57279632ff3490d019f", "message": "Merge pull request #405 from tarioch/patch-2\n\n[JENKINS-38060] Tracking SVN does not work with pipeline"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8c6467ffb134ab23b01eb9585395698c90c86b7d", "message": "Merge pull request #408 from jenkinsci/oleg-nenashev-patch-2\n\n[JENKINS-32353] Ownership plugin supports Pipeline starting from 0.9.0"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/5851e030e02c0e1478f6f60507dc199471b25796", "message": "Merge pull request #409 from rkettelerij/patch-1\n\nUpdate COMPATIBILITY.md: jobconfighistory already supports pipeline"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c4e08859b0bff01fc29bb84a60957c40e45e39e0", "message": "Merge pull request #407 from jenkinsci/cucumber-compat\n\n[JENKINS-26340] Update COMPATIBILITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/83ab079aaf1bc35967f50e6f12426d3619c57745", "message": "Noting pipeline label."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ae63bc8b5a1faf213463916ec73e200d28158c6a", "message": "Some more link updates."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7b248591da804aae17f004339eb5af532063ee04", "message": "[INFRA-894] New JIRA query."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e139021cc90ef6b14ff6ea1b19ff88f4c15050cf", "message": "Linking to text on @NonCPS."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/3263e635ac649228f2d22164c92e36754a72c5d3", "message": "[JENKINS-30019] Noting merge of https://github.com/jenkinsci/next-build-number-plugin/pull/5."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b4b4d4b266301b924a8a9b2e3dde8d5c698b95aa", "message": "Merge pull request #402 from bitwiseman/patch-2\n\nChange \"slave\" to \"agent\""}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d234db971a021ef58271f2e2724f1debd1d4f54f", "message": "[JENKINS-29922] @aheritier requests some information about version availability."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/50af0b6b4dfc80fe27a2966e638d2e9a7f119045", "message": "Merge pull request #401 from jglick/docs-JENKINS-29922\n\n[JENKINS-29922] Documentation update"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a12c5e1263f576d0b8b2eb58ca9eddc2140171a2", "message": "Also documenting `Symbol`s on nested `Describable`s."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/18f8b05bf73eb80fc6827e2ab0554798b13dc4a4", "message": "Describing @Symbol usage for plugin developers."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e427620c71253b9b4ba1fa7d8f0a5b45e712bf68", "message": "[JENKINS-29922] Documentation update."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7cac2cc3e3419318bd3a29a560cb94c7cd826724", "message": "[JENKINS-34981] Merged #397, resolving a merge conflict and correcting the plugin name."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f1980f2804fd78f64915066359f05c1bdc68b15d", "message": "Merged #395, correcting a formatting error and an inconsistency in formatting relative to other items."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/dbd112a58ea64ea994feb2ffff5847e50b2ee375", "message": "Merge pull request #396 from jenkinsci/clover-compatibility\n\n[JENKINS-27302] Clover is compatible with Pipeline since 4.6.0"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/18b212493e5db24fcf65c5696f706c3457e34227", "message": "Merge pull request #398 from kuisathaverat/ConfluencePublisher\n\n[JENKINS-36345] Add ConfluencePublisher to compatibility list for pipeline"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7a96766cf62abca8ffe99bb8b34e09993c40829a", "message": "@olivergondza noticed that it is FilePath.toComputer, not .getComputer."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/0f89bec1544422c1aed35e44d61f1b02b6255370", "message": "Merge pull request #400 from jenkinsci/oc-cloud-is-compatable\n\nnote that operations-center-cloud was supported."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/372820bb7112ecf021020503e0d0ea5b5a72f9d7", "message": "[JENKINS-27121] Noting https://github.com/jenkinsci/testng-plugin-plugin/pull/28."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/49774c5ef2460b9435311b02d32b45d1091a66f0", "message": "Merge pull request #394 from witokondoria/patch-1\n\n[JENKINS-28930] Noting release of vsphere-cloud-plugin including pipelines support"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/15dbf7093031f9dcb6be6ec65c40ab343d8e387f", "message": "Merge pull request #393 from MikeCaspar/master\n\nAdd IronMQNotifier to compatibility list for pipeline"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/788da65a7329c48009e1fbb7cbf1c51677cf435b", "message": "Noting Credentials"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a81be77c28951f61ff7fa6b2a77a16c0f92a8959", "message": "Merged #387."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/703e3fd3caeceeb861e6945b4ee833359bb2ffa5", "message": "Merged #386."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/14fa1ba4c8f4b6552697d0acded19405ef19dec4", "message": "Merge pull request #384 from cprice404/gatling-compatibility\n\nAdd gatling plugin to compatibility list"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7d9e49792c951f4da5e27a9c9222ed0b13b2e690", "message": "Added another reason why WorkflowJob does not act like AbstractProject"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/829ae0f65f5788e6a7cb4d5cc6ad4cb96f513068", "message": "Merge pull request #385 from cpoenisch/master\n\n[JENKINS-31999] Adding ecutest-plugin to COMPATIBLITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8da8ded6133d5590a898d30c4dbf55eb92a2d6eb", "message": "Merge pull request #391 from hangdong/patch-1\n\njenkins 2.x specific direction"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8c13adbd32bdf5474b3134a7b21e5eceb7815db3", "message": "[JENKINS-35247] Noting."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f1d6ce44be97781c98c16641b74ac7c4fdfae01a", "message": "[JENKINS-34450] Noting backport to 1.14.1."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/893e3484a25289c59567c6724f7ce19e3d23c6ee", "message": "Merge pull request #383 from HRMPW/patch-1\n\n[JENKINS-27123] Update COMPATIBILITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/281eef2ca5254293018a2bff0a4e6665d0711a54", "message": "Merge pull request #382 from abayer/add-powershell-to-compat\n\nAdding Powershell to compat list"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ef81a769ab3698d8090df937299afc3268e5c711", "message": "Merged #380: noting https://github.com/jenkinsci/cucumber-reports-plugin/pull/35."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7596ae10c2035a6c239e4ce8ca3af4c1ee1f78c8", "message": "Noting JENKINS-30269 (CC @amuniz)"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/9f9ad9cda0ab0d1fabaa87829cc677860d75dfc4", "message": "[JENKINS-34151] Noting."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6cffbecd874b924677ce3b3c5b1e0e2f45689cc5", "message": "Question from https://github.com/jenkinsci/gitlab-plugin/issues/271"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/72a4ac9c280013c8a68a7b8b24b9b1a8d6ea045a", "message": "Adding a section capturing some discussions from #jenkins."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/10d1067cb14a7ca417ff5969ec40d976efe1ec6f", "message": "More broken links."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/1666176d8e862d1942c97bc2063eb70ea41358ac", "message": "Updating documents to try to reflect current locations."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/bda102424258024c5fbcc58d48650cc1ca28cbf2", "message": "Merge pull request #379 from jenkinsci/oleg-nenashev-patch-1\n\nAdd Exclusion-Plugin to the list"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/54257fd38262a55823b7f81fce85bf2aef9d2369", "message": "Missing cast."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/56b40a9f87d93942586088072f9ded1dac776a4a", "message": "Documenting usage of variables, since this was a point of confusion in https://github.com/jenkinsci/jacoco-plugin/pull/66."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d9234cc89d6bf7245d0d1f71e96faf8d2ea99ee4", "message": "All plugin code moved to independent repositories."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/bf27820de489a1898080605b75c92d7e0ae7a95c", "message": "Noting some cleanup tasks I had to do."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/077ae6e8a64621c8e9dd633cfdc0cd5a9836a190", "message": "Merge branch 'master' of github.com:jenkinsci/workflow-plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e16ecccdbb457c4513d9ee85255dcb850565ecec", "message": "Merge pull request #377 from recena/JENKINS-31162-3\n\nCategory ID has changed"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d902f38bb76eec0e69458d97aed8416d1e5205b8", "message": "Recording script used to move source history to individual repositories."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/5b102a5b06745b1eeeb7c1305096bf80e37c1a90", "message": "Merge pull request #372 from jenkinsci/eachClosure-JENKINS-26481\n\n[JENKINS-26481] [JENKINS-27421] Fix ArrayList$Itr, and integration test for Object.each(Closure)"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b356799f09d18b0d9f96c1084354df072b7d656f", "message": "[JENKINS-26481] With new script-security and groovy-cps releases, eachClosure finally passes."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8ba8579c142735296edae370e1809048d4744b82", "message": "Merge branch 'master' into eachClosure-JENKINS-26481"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e3906483924dab49f8aeddbf6b72a1db75a47874", "message": "Merge pull request #375 from recena/JENKINS-31162\n\n[JENKINS-31162] Support for Item categorization in Jenkins 2"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a990468a828e64961eda24332673c9cb8835c629", "message": "[FIXED JENKINS-27421] Producing a safe serialization replacement for ArrayList$Itr,"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ccac19edb8caeb4ab300fc5cce536f4410a85e45", "message": "Merge pull request #374 from jglick/ReverseBuildTrigger-JENKINS-33971\n\n[JENKINS-33971] Integration test for ReverseBuildTrigger.upstream2Trigger bug"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/4b72d5eb9dee1aab91a7cb314a848016f26c1871", "message": "Merge pull request #373 from jglick/demo-updates\n\nDemo updates"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d2e726274b919aa3492d195dc75bf39711df7c2b", "message": "[JENKINS-33971] Integration test for ReverseBuildTrigger.upstream2Trigger bug."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f4d6b88e34e8c3987e57c8a4bfd530e9db937810", "message": "Plugin updates."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f5b57d86a5a6ead91884dbcd8fa9e9a19c28bad4", "message": "Refactoring Dockerfile so that bigger, less volatile layers are defined first."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/2b2fd8760d117c24e099cfb9f231e8b65d91711f", "message": "Using a non-release version for now."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/07f36024c20fb900c99de6d02d7d0acef6f62b5a", "message": "[JENKINS-26481] Creating integration test."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/af3ea552b9eeb2b1358dc666ff8cce051cc9e53b", "message": "Merge pull request #369 from jglick/reorg\n\nReorganization"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/9bf98f696517d3b8d71a83d6b1114eae03096cd8", "message": "Merge pull request #371 from kohsuke/JENKINS-32925\n\n[JENKINS-32925] Handle recursion"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/86734f5d26ee0f18895bfa2cfb98148c8608d6d0", "message": "Simplifying test deps."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b373d9284e2b15e2291e8e851f81e263e51a95bd", "message": "A couple of test-jar cleanups."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e39e286e1d32d03c2dcd872ec2649a0478e4768d", "message": "Making all plugins buildable without the reactor."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6ae6d3e4ca79ff6a642bafcb0471d1667b5ec753", "message": "Starting to clean POMs."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/5be98b7d938a4aea9da9913b10b7e32a9bfc7fd4", "message": "Found a way to make build-snapshot work again."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e0c5ef55e2f2f52bd49cd6fd70390a99f47c1840", "message": "Moving ignores to the directory that uses them."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b6bb15a097ce88dd91bc571158a308b274c2d87d", "message": "Removing remnants of SingleJobTestBase from ExecutorStepTest."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/82d1b833d604c8e61ad52ba470c905d823b13e4e", "message": "Moved remaining tests out of aggregator."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d177c5a45e11dc4a11395e82b8a13f789c52a580", "message": "Merge branch 'master' into reorg"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/041c313d2b890f75b31ea0b35251f2098f4798b8", "message": "Merge pull request #370 from jglick/no-DescribableHelper-test\n\nRemove DescribableHelperTest"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/effff9b623e69f19582758b5fceb66e3f941de9c", "message": "Moving some more tests."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c424997a887e8f3d5618214f186fd1bbda5df5a7", "message": "Moving some more tests."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f326da43b79923c3212205ee6516cfccef019566", "message": "Oops, wrong artifactId."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f238def3af5d0d81bf542d1fac0c237ff870bebc", "message": "Factored out pipeline-stage-step plugin."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/963828cd128121442630425a23b78069563fb9ae", "message": "Factored out pipeline-input-step plugin."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/9d83e174f98424f9a33b005e506eecdac66be606", "message": "Massaging filenames to minimize diff."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/97bba462ce30d7dcaa0e95b48ba07d13855cc628", "message": "Factoring out a new pipeline-build-step plugin."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8d7dcd7f3d5d0b28596ad5f7674efc2174a8f4a6", "message": "More careful use of the Mockito test dependency."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/712d524bf0942c0d7068c829a3a9ca45b7dae329", "message": "Also moved ComputerPickle and FilePathPickle to workflow-durable-task-step, introducing FilePathUtils pending JENKINS-26096."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f785550f355fb114dd9c4631c83a71ecba43ba89", "message": "Merge branch 'master' into reorg"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a6af484daec3f73648e6c6fc696e0273d443365e", "message": "Adding test deps on structs plugin."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f89768eec39c1e27636bc33914ea937b150b8a01", "message": "Merge pull request #366 from jglick/ExecutorStep.label-help\n\nAdd more detailed help for ExecutorStep.label"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/84389c190b35182582ec5e3ad9cf5c09c3992239", "message": "Merge branch 'master' into reorg"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/3de1d0259af9c1cfe98de2a6609c6f0f8fd04f26", "message": "Now that DescribableHelper is deprecated, there is no reason to keep running its tests."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/75334478f7ed7941fd667725fd072772a7535bf8", "message": "Merge pull request #362 from jenkinsci/symbol\n\nUsing structs plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/dfebaa492563f4b92ee138a6e797db83cffb0ebb", "message": "Moving ExecutorStep and some affiliated code to workflow-durable-task-step."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f9d1ddb25d18ba5371f7fad6ffd2bfbad473a0c2", "message": "Moved StashStep and UnstashStep to workflow-basic-steps.\nNote that this means adding a dependency on workflow-api for the first time, but that seems harmless enough."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/0b6e8bf4299883f4a64ce9993caec79df8f29a50", "message": "Inlined <dependencyManagement>."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/fba160f0bdf6312590bc8c2d498f57c31a9c814a", "message": "Move to a 2.0 version scheme."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/aab4bf9e3fbd53fc8a26ab31f0c36eaccb0eb10d", "message": "Using MockAuthorizationStrategy."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b82a98818cd513a5de5c4b4bc93f664ee4fb4063", "message": "Forgot to specify a version."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b8a69450df4e0fe89b39ff31d3ed5cb76d43fd09", "message": "Moved cps and scm-step tests."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/4e337cf6c108c8455d6b00011e7c7074eb053390", "message": "Moved cps-global-lib integration tests."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/79131b9351d33d2530c7baa747caccdd90399606", "message": "Sketching reorganization structure."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ca83c601fea226320ca2fb1b90983e0a0cd1f1f2", "message": "Merge pull request #368 from jglick/1.642.3\n\nSwitch baseline to 1.642.3"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b37caedf19b48fdb3e4818215b3631564dd4555a", "message": "Switch baseline to 1.642.3."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/3be9c52695ec3539b4b368a48d9919ae11455b10", "message": "Merge pull request #367 from jenkinsci/oleg-nenashev-patch-1\n\nAdd throttle-concurrent-builds plugin to the list"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/640c6dba735c4db47955cca27a2fe56d72abed6f", "message": "Add more detailed help."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d75fc7c8999b6d1d7bb9d98ecd81d100c3f4ae7a", "message": "Merge pull request #365 from jglick/branch-property-filtering-JENKINS-32670\n\n[JENKINS-32670] Integration test"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/5b4c683a801a0685e9d8e3af69c3be096ded6984", "message": "Merge pull request #363 from jglick/duplicate-children-JENKINS-32179\n\n[JENKINS-32179] Integration test"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/81197656afe5f6f7bee5d2a79ef3d6ca3848231d", "message": "Suppress test until we have a release."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c4d91a5ac639ff8ca24e7116747faf3801313664", "message": "Have to comment out test addition for now."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/96460b497b3427fcfba461fbcf45933318b91b34", "message": "[JENKINS-32670] Integration test showing that branch property strategies are hidden by default for multibranch Pipeline projects."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e161fcfbecaccfc517bcf4c5a843a9c50c437046", "message": "Merge pull request #364 from kmadel/JENKINS-27652\n\n[JENKINS-27652] Workflow support for Slack Notifications"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8739b2321b57cbb638e29ff3941628d11f3057cb", "message": "[JENKINS-32179] Integration test."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/82e7defa37c05c5f004f1ba01c93df61ea7868a5", "message": "1.15 released."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/48cc7fdc33b2790e3b15cb9e68eafdb73ef5262b", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c553822e5ee756abc84d1f2509038418450da191", "message": "[maven-release-plugin] prepare release workflow-1.15"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c85a422f2fdfa67e3e228623b5cf97b211db1f8b", "message": "Need to use scm-api:1.1 now."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/dc5be087cc1f8e0320f601cb522a9092f8f6d4f9", "message": "Merged #321: 1.642.x."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e1ccc77cbfeca18ace30b4e8cf0f41e1cf0813f7", "message": "Merge pull request #358 from jenkinsci/description\n\nAdded description"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/76bdc6f044f2eaf60f0f313cb09c7e006802e9a5", "message": "Merge pull request #244 from jglick/getTrustedRevision\n\n[JENKINS-33256] Calling SCMSource.getTrustedRevision"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/16b208659591a68e1958629e3c1789f02d3918ce", "message": "Merge branch 'master' into core-1.642.x"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f19e83d255e2e44cac2e78a37708ca55de2f65b5", "message": "Merge pull request #356 from jglick/SCMHead-Actionable-JENKINS-33309\n\nExport the Branch & SCM to REST"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e72317e7fb7524761b16a957720ca254bdf80ffd", "message": "Updating index.jelly to match pom.xml."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8e4472c0ad8775abb1b1037b2f1d91614bb8c499", "message": "scm-api 1.1, changelog"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/04f4f216090916e6253cafff90ad0e08d00decfd", "message": "Merge branch 'master' into getTrustedRevision"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c90a35dec2f8ac2fd5d52f5b1ca39b9a13e51571", "message": "Merge pull request #361 from alexanderrtaylor/master\n\n[JENKINS-33458] Note Sidebar Link plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/1d45a6ea661f84f3588668bc0c9a023510303cd9", "message": "Deleting comment now filed as JENKINS-33438."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/967e6f2a212f057212eca7f8da8389a615bed62f", "message": "Expose SSH on port 2222 for the demo.\nFor reasons not yet diagnosed, Jenkins CLI using the Remoting transport fails:\n\u2026 hudson.remoting.SynchronousCommandTransport$ReaderThread run\nSEVERE: I/O error in channel Chunked connection to http://localhost:8080/cli\njava.io.StreamCorruptedException: invalid stream header: 0A0A0A0A\n\tat java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:806)\n\tat java.io.ObjectInputStream.<init>(ObjectInputStream.java:299)\n\tat hudson.remoting.ObjectInputStreamEx.<init>(ObjectInputStreamEx.java:48)\n\tat hudson.remoting.AbstractSynchronousByteArrayCommandTransport.read(AbstractSynchronousByteArrayCommandTransport.java:34)\n\tat hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:48)\n\nhudson.remoting.RequestAbortedException: java.io.StreamCorruptedException: invalid stream header: 0A0A0A0A\n\tat hudson.remoting.Request.abort(Request.java:297)\n\tat hudson.remoting.Channel.terminate(Channel.java:847)\n\tat hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:69)\n\tat ......remote call to Chunked connection to http://localhost:8080/cli(Native Method)\n\tat hudson.remoting.Channel.attachCallSiteStackTrace(Channel.java:1416)\n\tat hudson.remoting.Request.call(Request.java:172)\n\tat hudson.remoting.Channel.call(Channel.java:780)\n\tat hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:250)\n\tat hudson.remoting.$Proxy1.waitForProperty(Unknown Source)\n\tat hudson.remoting.Channel.waitForRemoteProperty(Channel.java:1258)\n\tat hudson.cli.CLI.<init>(CLI.java:147)\n\tat hudson.cli.CLIConnectionFactory.connect(CLIConnectionFactory.java:72)\n\tat hudson.cli.CLI._main(CLI.java:479)\n\tat hudson.cli.CLI.main(CLI.java:390)\nCaused by: java.io.StreamCorruptedException: invalid stream header: 0A0A0A0A\n\tat java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:806)\n\tat java.io.ObjectInputStream.<init>(ObjectInputStream.java:299)\n\tat hudson.remoting.ObjectInputStreamEx.<init>(ObjectInputStreamEx.java:48)\n\tat hudson.remoting.AbstractSynchronousByteArrayCommandTransport.read(AbstractSynchronousByteArrayCommandTransport.java:34)\n\tat hudson.remoting.SynchronousCommandTransport$ReaderThread.run(SynchronousCommandTransport.java:48)"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/37a9cf64e6bcd8a99af0e5f5d4b17c8a8d5f43ae", "message": "Export the Branch & SCM to REST."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/421efc44ba8a6274d48de6b62174af978b342ba4", "message": "Merge branch 'master' into getTrustedRevision"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7b016b5cdbcf18fbda7fecba02d0bc58fe5ac598", "message": "Back to 1.15-SNAPSHOT."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/9bf29f4422ed08ee5e7aa7e08e8a1e76416eeef4", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/3c739b20212d340c6346187605791b37780d3d85", "message": "[maven-release-plugin] prepare release workflow-1.15-beta-1"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/00d4377b78aa8dd6a97fdb94a635becc06efafa2", "message": "Prep for 1.15-beta-1."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e51ddbbe6ec954dc4bccefb123528ddf28162d5e", "message": "[FIXED JENKINS-32925] Merged #351."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/0b0b2aa0c5e9af8263b454ea26a4b71b82547b57", "message": "Merge branch 'master' of github.com:jenkinsci/workflow-plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f66308082191e764b55447d5bc1cc40f8d0914ca", "message": "[JENKINS-33198] Merging #353 with touch-ups."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/cfc1a95ae95f1151bf0d0a924fe1e0480a9653f8", "message": "Merge pull request #349 from bsideup/patch-1\n\npropose forward2docker as an alternative to `boot2docker ip`"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a235998ce63d836a151d1035214fc208c550edeb", "message": "Merge pull request #352 from tfennelly/bloated-ui-hpi-fixes\n\nUse repackaged jQuery HPI"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7bbcab0390b6d97dc40d4dbaf8dde34ef2c5af0c", "message": "Merge pull request #350 from jglick/temp-dir-JENKINS-27152\n\n[JENKINS-27152] Option for pwd step to return temp directory"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8f78b049806df28018b72b97e96a836ff43c6c55", "message": "https://github.com/jenkinsci/jenkins/pull/2066 merged toward 1.652."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8c74333321f007e829b2a9581af643b792ef47a6", "message": "[JENKINS-27152] Option for pwd step to return temp directory."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7d2004ea482418f84c3f221d3f55dff20e8ada44", "message": "Including OSS stage view plugin in demo."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/2e4a0cb3012983317e8125add4cd1e74df003c0c", "message": "1.14"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/eb1c78a3f16a33435bcf21b3d1794101922d68e8", "message": "[maven-release-plugin] prepare for next development iteration"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ccc72791a7d86f4d9631bfb00aff88ae3afab82c", "message": "[maven-release-plugin] prepare release workflow-1.14"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/1747ac863f61c1ee19fc4e61d5772d0f0388a4f0", "message": "Merging #346 with edits for formatting."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/091295d3077ba15cd5c999c256d94f276b9afc7d", "message": "Merge pull request #347 from jglick/sleep-sandbox\n\nSimple form of sleep step would fail in sandbox"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/862d5af91f77834d70841751382f3c5508d00483", "message": "Demo updates."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/37d59994cfe5ee330238502bf6dd152377dd6a30", "message": "Simple form of sleep step would fail in sandbox.\norg.jenkinsci.plugins.scriptsecurity.sandbox.RejectedAccessException: Scripts not permitted to use method org.jenkinsci.plugins.workflow.cps.CpsScript sleep long"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/3795078f830298f7426f452d02b6e2fee7d07afb", "message": "Next version expected to be 1.14."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a62e52a222e9e74932149afd0d56986401490845", "message": "Merge pull request #334 from jglick/rerun\n\n[JENKINS-32727] Rerun a build with script edits"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c6416e00f5b6463e1c36be05a4403f4e4b6d03b0", "message": "More variable renames for @svanoort."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/bc073d6493f0ba343c16d4d77015cde9ac87f708", "message": "Strengthened tests and some variable renames for @svanoort."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/3ec0a188fdfd00caf2704cee1e82faee2ea47c5e", "message": "Miscellaneous review comments from @tfennelly."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/71d187dcbcc4a64ac6043cb25ea594571578002d", "message": "@tfennelly suggests using redo.png rather than clock.png."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a1feea55cabc2b1b77c8dcdefa249f646ad5ff7c", "message": "Adding some comments to tests at @tfennelly\u2019s request."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/3ca6d414c9f2963c1022eb7cbac74f595a5d7436", "message": "Merge branch 'master' into rerun"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a05eb6a108686e118c991380f252ec7ee71a09e5", "message": "Merge pull request #344 from jglick/pollDuringBuild-JENKINS-32214\n\n[JENKINS-32214] Polling baseline with in-progress builds"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d26750fc6fa85274aaf6991f52069078bc7ff13f", "message": "Merge pull request #345 from rpionke/patch-1\n\nAdding performance-signature-dynatrace to COMPATIBILITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/345d8f5ef8351e9d038c74a3fc7473b0243a0e7d", "message": "With matrix-auth 1.3, can finally make test pass."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/74afa8ebf6edb2651dcfc6a64157cdef301bd5b4", "message": "Changelog entry."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/480926afa4e03fd552249c65acecc5545990d838", "message": "Merge branch 'master' into rerun"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/56abe0f31eb1505ba2e66cd7b1d9bd4525d839b7", "message": "[JENKINS-28946] Noting release of https://github.com/jenkinsci/jira-plugin/pull/72."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c12abe251d9ad396966460bfb8d7bf9469eb6064", "message": "[JENKINS-32214] WorkflowJob.poll reworked to consider polling baselines from any running build or prior polling."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/05e46bc4c66a5e0db4f5cced25f824d022b1d95a", "message": "[FIXED JENKINS-32214] WorkflowJob.poll should give preference to any SCMRevisionState from the latest running build."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/9c1721e0d2f3593345ef00f4dc6f0eac9c18aecd", "message": "SCMTrigger unnecessary in pollDuringBuild."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a65de829d3ccd619136c63bbb37502ba74ec5c0a", "message": "Merge branch 'pollDuringBuild-JENKINS-32214' of https://github.com/jglick/workflow-plugin into pollDuringBuild-JENKINS-32214"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b2e61422f8c54d74b56c70c14c0708409305baf5", "message": "Disabling ACE editor during functional tests, since it seems to spin off into hyperspace when run from HtmlUnit\u2019s JavaScript interpreter."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50962732", "body": "@kohsuke these are your changes until the most recent failed attempts to push via validated merge.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50962732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50962769", "body": "Changes in [this build](https://jenkins.ci.cloudbees.com/job/Plugins/job/workflow-plugin/240/) need to be added.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50962769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51071086", "body": "Having the `StepExecution` in a separate top-level class seems unnatural. I will work on making it be a _nested_ static class by default. (This should also allow the diff for this PR to be reduced.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51071086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51074858", "body": "Also the rewrite of `DurableTaskStepExecution` needs more work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51074858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51114105", "body": "@kohsuke found two serious problems with `FlowExecutionList`, easily reproduced by writing a flow with a long-running task and restarting Jenkins in the middle.\n1. `IOException: \u2026 did not yet start` is thrown from `WorkflowRun$Owner.get` even for completed or running builds. Seems `WorkflowRun.execution` is sometimes null. But why?\n2. `unregister` apparently does nothing of the sort, because the exception keeps on getting printed over and over for the same build. (Which is just as well, given the first problem.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51114105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51118432", "body": "Fixed that problem. @kohsuke now the next problem is that `controller.writeLog` in `DurableTaskStepExecution` changes the state of the `FileMonitoringController.lastLocation`. In the `master` version of `DurableTaskStep`, this is explicitly checked for: `NO_CHANGE` vs. `UPDATED`; in the latter case the state is resaved. But now we just rely on something saving the `StepExecution`, which could be too late: if Jenkins is killed in the middle of a long-running task, the saved state will be from the very beginning of the task, so all the console output printed during the last session will be duplicated.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51118432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51124922", "body": "`StepExecution.context` should be accessible only via a getter, not as a (nonfinal!) field.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51124922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51234948", "body": "Looks like it is failing on CI for a different reason:\n\n```\nERROR: missing workspace /\u2026/workspace/demo@3 on slave\n```\n\nMy local failure was a test timeout.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51234948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51665630", "body": "Seems to work now, ready to merge assuming tests pass.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51665630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/52706750", "body": "`@RequirePOST` is only needed for mutator web methods, so this change should suffice\u2014thanks!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/52706750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/55273297", "body": "Huh, must have gotten moved around with the recent website refresh. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/55273297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/60958917", "body": "Neat but not maintainable in the long term as steps are added (perhaps by plugins we do not even know about), and parameters for steps are changed.\n\nWe had [discussed doing static documentation generation](https://trello.com/c/1QGjX5VS/86-generated-step-documentation) but abandoned this plan after adding the snippet generator (and in favor of the option of [DSLD](https://trello.com/c/qeHfDtyz/156-dsld)). Automated reference documentation is still an option if you want to work on it, though probably DSLD needs to come first.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/60958917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/61756320", "body": "A start and end time would make sense. And you might need something like a `CauseOfBlockage` to explain/render the reason for the pause.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/61756320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/62001478", "body": "The experience from `DurableTaskStep` is that `WatchTask` should be replaced by a `Timer` managed from `start` and `onResume`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/62001478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/62001574", "body": "Could also be replaced by [this more general feature](https://trello.com/c/YmF6cG1J/169-wait-for-condition-step).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/62001574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63104826", "body": "I assume you tested this manually and it works? An automated test would be nice, though I am not sure if there is an easy way to assert that a `FlowNode` change was persisted.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63104826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63138367", "body": "OK, so that would mean the block here should be replace with a single call\n\n```\nnode.save();\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63138367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63141652", "body": "Makes sense. Using a number as low as 1 makes me a bit nervous but I guess extensions with the same ordinal are just randomly sorted somehow.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63141652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63580171", "body": "Is there something else to do here or is it ready to merge?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63580171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63580467", "body": "The original link was more useful, but perhaps it only works when logged in.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63580467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751333", "body": "@reviewbybees\n\nThe test failure seems unrelated and might in fact be solved by #33.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751345", "body": "@reviewbybees\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751362", "body": "@reviewbybees\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69755370", "body": "> Could not find artifact org.jenkins-ci.plugins:copyartifact:jar:1.33-SNAPSHOT in repo.jenkins-ci.org (http://repo.jenkins-ci.org/public/)\n\nYou can `deploy` a `SNAPSHOT` version from https://github.com/jenkinsci/copyartifact-plugin/pull/55 to make this CI build pass (I think).\n\nAlternately, delete this PR, and just add `workflow-aggregator` as a `test`-scoped dependency to `copyartifact-plugin`. See https://github.com/jenkinsci/credentials-binding-plugin/pull/3 for an example of this. (You need a 1.580.1 baseline in that case.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69755370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70157761", "body": "I think this makes more sense inside `copyartifact-plugin`. `CoreStepTest` tested build steps present in Jenkins core or bundled plugins, as a proof of concept, but clearly that does not scale to lots of integrations. (And I might just move the tests for the bundled plugins into those plugins, though one of them also tests `CatchErrorStep` which is hard to test with the steps in core.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70157761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70166870", "body": "The PR builder seems to be confused, by building the changes here together with those in #37. Bug in `github-pull-request-build` I presume (CC @kohsuke).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70166870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70927120", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70927120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71046136", "body": "> if you load a non relative file\n\nThis was actually a valid customer use case reported to me, which is why I disabled the validation. IIRC they wanted to use `dir` in a special location known to exist on the slave machine. Obviously if you change the slave configuration that will not work, but neither will plain old shell scripts using `pushd`, and I think the error in such a case would be self-explanators.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71046136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71098465", "body": "Interesting\u2026 of course that plugin is only in the Jenkins repo, not in Central, yet this `pluginRepository` is declared in the parent POM and I thought Maven would first resolve the project model before looking for it. Perhaps because it is an extension it is loaded during an earlier part of the model building process.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71098465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71109040", "body": "Yes, that is why you are seeing it\u2014but of course the intention is that you should not _need_ any special settings to build. (I think our CI builder is configured to predefine the Jenkins repo for all plugin jobs, which is probably a poor decision.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71109040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71235041", "body": "> I assume there's a warning of some sort allowing you to follow up and fix?\n\nThat would be a _Skipped_ entry in the test report.\n\n:+1: and merging, thanks.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71235041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71273155", "body": "@tfennelly it looks like you \u201cmerged\u201d this PR by rebasing all of its commits into `master` for some reason. For the future you can just click the merge button in GH (or use `git merge`, which automatically closes the PR).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71273155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71280742", "body": "@reviewbybees ready to merge as far as I am concerned.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71280742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71288294", "body": "@reviewbybees re-review\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71288294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71479922", "body": "I already did this myself.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71479922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72704113", "body": "> moving to surefire with 2 retries\n\nStill awaiting a PR to do this, or I can try it if you do not wish to.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72704113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74858004", "body": "As currently conceived, this would be better placed in the `workflow-aggregator` plugin. (Is there actually a specific reason to bundle it inside a plugin, or can it just be retrieved from static web content? Your first installation suggestion implies that it could; your second implies that IDEA somehow detects this file automatically when it is somewhere in the classpath.)\n\nMore broadly, as a solution to [JENKINS-26126](https://issues.jenkins-ci.org/browse/JENKINS-26126) this is unsatisfactory, because you are only including syntax for a few steps (which people could easily memorize anyway), whereas the important use case is less-common steps you are not already familiar with, perhaps added by plugins outside the standard Workflow suite; or steps with obscure options that are likely to evolve from release to release. What is needed is for the `workflow-cps` plugin to be able to generate complete DSLD and/or GDSL on demand, according to the set of currently installed plugins providing steps (or extensions like `SCM` and `SimpleBuildStep` that can be used by metasteps). This presupposes some refactoring of `DescribableHelper` so that it can report on class metadata independently of a particular instance.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74858004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74925269", "body": "`WorkflowTest.env` test failure is not reproducible locally; need to investigate (probably as part of #41).\n\n`CoreWrapperStepTest.useWrapper` failure was not reproducible locally, and passed the next time. Suggests that the test has some robustness flaw, TBD.\n\n`PushdStepTest.restarting` failure looks like an unrelated race condition affecting restarts, perhaps.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74925269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75164358", "body": "Actually not looking too bad at the moment in Java 8. If I set the job to rebuild itself repeatedly (once per second), and monitor the class count, it climbs to around 50\u201360 before spontaneously clearing.\n\nThe `ClassInfo` leak in detail, from MAT:\n\n```\nClass Name                                                                                             | Ref. Objects | Shallow Heap | Ref. Shallow Heap | Retained Heap\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\njava.lang.Thread @ 0x708730d28  Computer.threadPoolForRemoting [#5] Native Stack, Thread               |           16 |          120 |               768 |         3,504\n'- contextClassLoader org.jenkinsci.maven.plugins.hpi.RunMojo$2 @ 0x7075d4208  /jenkins                |           16 |           96 |               768 |     2,002,944\n   '- classes java.util.Vector @ 0x7075e15a0                                                           |           16 |           32 |               768 |     1,701,504\n      '- elementData java.lang.Object[5120] @ 0x707878848                                              |           16 |       20,496 |               768 |     1,701,472\n         '- [3552] class org.codehaus.groovy.reflection.ClassInfo @ 0x7079139a0                        |           16 |           24 |               768 |           232\n            '- globalClassSet org.codehaus.groovy.reflection.ClassInfo$ClassInfoSet @ 0x707913a38      |           16 |           32 |               768 |           112\n               '- segments org.codehaus.groovy.util.AbstractConcurrentMapBase$Segment[16] @ 0x707913a58|           16 |           80 |               768 |            80\n                  |- [15] org.codehaus.groovy.reflection.ClassInfo$ClassInfoSet$Segment @ 0x707913aa8  |            1 |           48 |                48 |       828,488\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n```\n\nor from VisualVM:\n\n```\nthis     - value: groovy.lang.GroovyClassLoader$InnerLoader #18\n <- <classLoader>     - class: WorkflowScript, value: groovy.lang.GroovyClassLoader$InnerLoader #18\n  <- referent     - class: org.codehaus.groovy.util.ReferenceType$SoftRef, value: WorkflowScript class WorkflowScript\n   <- ref     - class: org.codehaus.groovy.reflection.ClassInfo, value: org.codehaus.groovy.util.ReferenceType$SoftRef #2309\n    <- [30]     - class: java.lang.Object[], value: org.codehaus.groovy.reflection.ClassInfo #462\n     <- table     - class: org.codehaus.groovy.reflection.ClassInfo$ClassInfoSet$Segment, value: java.lang.Object[] #46259\n      <- segment     - class: org.codehaus.groovy.reflection.ClassInfo, value: org.codehaus.groovy.reflection.ClassInfo$ClassInfoSet$Segment #13\n       <- classInfo     - class: org.codehaus.groovy.reflection.stdclasses.ArrayCachedClass, value: org.codehaus.groovy.reflection.ClassInfo #151\n        <- ARR_CLASS     - class: org.codehaus.groovy.runtime.dgmimpl.arrays.IntegerArrayGetAtMetaMethod, value: org.codehaus.groovy.reflection.stdclasses.ArrayCachedClass #11\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75164358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75165673", "body": "Java 7 shows the same behavior of `WorkflowScript` count resetting to 0. However the number of `InnerLoader`s continues to increase and the permanent generation steadily grows until I force an `OutOfMemoryError`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75165673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75166976", "body": "On a lark I tried\n\n``` groovy\norg.codehaus.groovy.util.ReferenceBundle.softBundle.type = org.codehaus.groovy.util.ReferenceBundle.weakBundle.type\n```\n\nbut it does not seem to help.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75166976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75171648", "body": "Well even on Java 7 (u67) the permanent generation does apparently get collected if you are just patient enough; takes around 1000 `InnerLoader`s before that happens, but over time I get a sawtooth curve on the PermGen graph, with cycles around every 15 minutes on my machine. So I think I am declaring victory for now.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75171648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75231600", "body": "And clearing the `shell` field after the build finishes.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75231600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75443284", "body": "@reviewbybees ready to merge from my perspective.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75443284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75443765", "body": "@reviewbybees again (note that the last build was a success)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75443765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75445804", "body": "[JENKINS-25975](https://issues.jenkins-ci.org/browse/JENKINS-25975) proposes deleting `WatchYourStep` in favor of `SemaphoreStep`, among other changes.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75445804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75578048", "body": "So I probably need to explain better. In fact `DescribableHelper` is a standalone class (no non-core dependencies) so it is not too hard to cover. Basically this takes a data-bound object with some configuration and converts it into a JSONish representation of the configuration: so `Map<String,Object>` for bean properties, `List` for arrays/lists, `String` or primitives for basic values including `enum`s, etc. It also handles the `$class` syntax to select an implementation of an abstract extension point.\n\nWorkflow uses it in two ways: when you write a call to a step, `instantiate` is used to take your Groovy data expression, e.g.\n\n``` groovy\nsomestep mode: 'NORMAL', handlers: [[$class: 'WhateverHandler', useStuff: true]]\n```\n\nand translate it into an actual `Step` object, as if you had written out the API calls in Java syntax:\n\n``` java\nSomeStep s = new Somestep(Somestep.Mode.NORMAL);\ns.setHandlers(Collections.<Handler>singletonList(new WhateverHandler(true)));\n```\n\nConversely, the Snippet Generator lets you configure `SomeStep/config.jelly` and then `uninstantiate` is used to translate that back into some maps/lists/primitives (which `Snippetizer` just renders in Groovy syntax).\n\nThe problem was with steps (or data-bound structures used somewhere inside a step definition) that had object-valued properties with non-null defaults. Notoriously, `InputStep` only requires one property\u2014`String message`\u2014but has two other properties (`ok` and `parameters`) with non-null default values, and another (`id`) with a default value _computed_ from `message`. So when you typed in a simple message in the form and asked for a DSL snippet, you got a long messy statement, most of which was actually redundant. This is confusing to new users in particular: they assume they need to copy and paste the whole thing into their script and there is no indication that some parts are optional. With this patch, you get a simple\n\n``` groovy\ninput 'Hello?'\n```\n\nunless you actually configured something in the _Advanced_ block.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75578048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75754470", "body": "> I do think some of the data bound getter checking/inspect code looks a bit incomplete\n\nThere are some known bugs and surely some unknown bugs.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75754470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75754616", "body": "BTW @tfennelly please comment on the aggregate diff (`files` link from the PR), not on an individual commit inside the PR. This ensures that your comments appear inline in the appropriate place and are automatically hidden if obsoleted by a follow-up commit.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75754616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75770757", "body": "> I think you might have done this too\n\nBy accident, yes I think so.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75770757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75860315", "body": "@reviewbybees interim: I would like to merge the last-known-good commit to `master`, since for this PR there is no harm in only some tests having been corrected but not all, and it may be helpful.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75860315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76422159", "body": "@reviewbybees for another interim merge, as I may not have time to finish this in the near future, and do not want merge conflicts in tests with unrelated work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76422159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76428944", "body": "@ndeloof I suggest starting PRs from a forked repo to avoid bugs in (a) the JIRA notification daemon and (b) PR builder; except for complex changes where you expect multiple committers.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76428944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76465762", "body": "This causes multiple test regressions. Anyway any change to `DescribableHelper` must be accompanied by a new unit test in `DescribableHelperTest`. They are not difficult to write.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76465762/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76474332", "body": "Well I would start by reverting your current change, then writing a test reproducing the condition described in the issue.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76474332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76481230", "body": "It is not necessary to close a PR, you can just push follow-up commits as needed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76481230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76487687", "body": "Test passed on my machine, rechecking\u2026\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76487687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76533974", "body": "So the test results:\n- The newly added test usually (always?) fails due to [JENKINS-25890](https://issues.jenkins-ci.org/browse/JENKINS-25890), which this test apparently is unusual in triggering.\n- `GitStepRestartTest.checkoutsRestored` is an unrelated random failure I know how to fix (will do so in a separate PR).\n- The `ParallelStepTest.invisibleParallelBranch` failure is random, from [JENKINS-27057](https://issues.jenkins-ci.org/browse/JENKINS-27057).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76533974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76535725", "body": "And often in recent days, the whole test run blows up with this mystery error:\n\n```\njava.nio.channels.ClosedByInterruptException: null\n    at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)\n    at sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:312)\n    at org.apache.commons.io.FileUtils.doCopyFile(FileUtils.java:1142)\n    at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:1091)\n    at org.apache.commons.io.FileUtils.copyFile(FileUtils.java:1038)\n    at org.jvnet.hudson.test.JenkinsRule$7$Jpl.resolveDependencies(JenkinsRule.java:1615)\n    at org.jvnet.hudson.test.JenkinsRule$7.decorateHome(JenkinsRule.java:1557)\n    at org.jvnet.hudson.test.JenkinsRule.newHudson(JenkinsRule.java:533)\n    at org.jvnet.hudson.test.JenkinsRule.before(JenkinsRule.java:331)\n    at org.jvnet.hudson.test.JenkinsRule$2.evaluate(JenkinsRule.java:480)\n```\n\nwhich looks like something wrong with the CI environment but I do not know where to start.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76535725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76859371", "body": "Most of these probably require closer review by me to see if they are really plausible and which section they belong in.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76859371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76859438", "body": "Did not get a chance to review this today, will try tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76859438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76981838", "body": "> maybe it could be maintained there alongside the workflow step implementation\n\nAs I wrote, that is not sustainable. Remember that not only `Step`s provided in plugins can change their direct options, but metasteps can pick up options from Jenkins core or other plugins with no Workflow dependencies at all, which are in some cases quite complex and frequently evolving. For example,\n\n``` groovy\ncheckout([$class: 'GitSCM', \u2026lots of stuff here\u2026])\n```\n\n> you probably could create something to generate this file\n\nWell that is the hard part. :-)\n\n> it is also possible to create multiple gdsl files, perhaps one for each plugin?\n\nNot practical. My idea is rather that the `workflow-cps` plugin would offer a button that would generate GDSL and/or DSLD on the fly according to all currently installed plugins. You would then save the result somewhere and ask your IDE to use it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76981838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76984690", "body": "This was initially filed some time ago but I am taking the liberty of assuming you meant it to be @reviewbybees.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76984690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76987073", "body": "Withdrawing this from consideration for a while, since I realized that `isReady` is probably going to usually be `false` as of #65\u2014which is not blocking, but certainly is not useful either. I think the future needs to be cached.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76987073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77004919", "body": "Fixed that issue, back to @reviewbybees.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77004919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77061643", "body": "Was this intended to be @reviewbybees?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77061643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77061720", "body": "@reviewbybees should be ready for review.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77061720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77061802", "body": ":+1: assuming tests pass.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77061802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77152410", "body": "To test: rebuild all plugins as snapshots, then install in a virgin 1.580.1 using _Plugin Manager \u00bb Advanced \u00bb Upload_ in dependency order. Or there is a CLI command which might be more convenient.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77152410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77152747", "body": "As @jtnord notes, the simpler patch is to add `(dynamicLoadable=YesNoMaybe.NO)` to the `Listener` extension point. But admins may really prefer to use the plugin immediately.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77152747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77153643", "body": "Extra credit: file a core PR to copy your impl to `FilePath.toComputer` to fix [JENKINS-26096](https://issues.jenkins-ci.org/browse/JENKINS-26096).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77153643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77174602", "body": "Minor suggestions but :+1: good enough if you want to stop here.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77174602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77185397", "body": ":+1: other than those minor comments.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77185397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77186146", "body": "Will need to merge with `master` since there is a merge conflict with #70. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77186146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77188716", "body": "Build 953 from 495edb4 was stable (the PR builder is having trouble noting that here), so again @reviewbybees.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77188716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77193015", "body": "Regarding `$class` here: there _is_ a `ParameterValue.getValue` which @kohsuke added recently (without any actual uses, AFAICT); JENKINS-26093 notes that an alternate approach under consideration was the creation of `ParameterDefinition.createValue(Object)`, which would presumably let you specify the parameters as a `Map<String,Object>`. (At runtime the definitions would need to be looked up in the downstream project so you would know whether a `String` value was meant to become a `StringParameterValue`, `PasswordParameterValue`, etc.) If such an API were added and WF were to depend on the appropriate core version, this would still be an option, presumably with a new `@DataBoundSetter` taking such a map, and some more hacking around in Jelly and `Snippetizer` to make the Snippet Generator produce that.\n\nHere (in 72860e9, the non-UI part of the PR) I am going with a more conservative change. `parameters` still accepts a list of actual `ParameterValue` objects, but the preferred mode is to use the `$class` data binding style, which (a) avoids the need to import Jenkins model classes, (b) does not trigger sandbox violations.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77193015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77193328", "body": "`StaplerReferer` is needed because `StaplerRequest.findAncestor`, used here to look up the `WorkflowJob` being configured so that a relative `job` path can be interpreted correctly, does not work when called from a dynamically-injected form fragment.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77193328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77201402", "body": "Did not work, still fails randomly, I suspect because the flag is not saved in the first Jenkins run, and it actually matters in the second run.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77201402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77231984", "body": "Thanks all!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77231984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77257369", "body": "`isAssignableFrom` was in fact in the right direction (the method name was misleading); the problem was related but different.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77257369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77379421", "body": "The problem with putting content in `CpsFlowDefinition/help-script.html` is that this is not accessible to users of `CpsScmFlowDefinition`, but that problem already exists so I would not worry about it here.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77379421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77379485", "body": "> check the variables I listed\n\nThat is your job. :-)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77379485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77417940", "body": "`JENKINS_URL`, `BUILD_URL`, and `JOB_URL` are definitely _supposed_ to be there. `DefaultStepContext.getEnvironment` might be at fault here. File a bug, and if you feel up to it, fix it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77417940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77418025", "body": "JENKINS-27145 has an analysis of what normally sets every variable I know of.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77418025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77440016", "body": "> outputting `env.getEnvironment().keySet()` in a script\n\nWell I would cross-check against\n\n``` groovy\nsh 'env | sort'\n```\n\nwhich may have different results.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77440016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553209", "body": ":+1: at last!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553584", "body": "Please use add-on commits. Every time you rebase, all of my comments from the earlier commit get hidden, even the ones that apparently are still valid.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553674", "body": "IMO there is no need to rebase ever.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553711", "body": "[`doFillCredentialsIdItems` example](https://github.com/jenkinsci/git-plugin/blob/9acee7ab9f7afacd3cf19a067c7c04aae4eeffe5/src/main/java/hudson/plugins/git/UserRemoteConfig.java#L77-91)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77554016", "body": "The `c:select` example from `UserRemoteConfig/config.groovy` should probably _not_ be copied, since it is mostly a workaround for JENKINS-19124, which AFAICT was fixed in a core version predating the current baseline for `git-plugin`. (CC @stephenc, @MarkEWaite)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77554016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77557646", "body": "> the user-friendly name of a credential is not guaranteed to be unique\n\nI am not talking about a display name, but about `IdCredentials.id`, which in sufficiently recent versions of `credentials-plugin` (and downstream) you are allowed to pick explicitly. And yes it must be unique.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77557646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77560152", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77560152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77560862", "body": "All test failures are the notorious `ClosedByInterrupt` which @recampbell is trying to track down. Of course this masks any legitimate failures that might have come later.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77560862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77560973", "body": "All test failures here are `ClosedByInterrupt`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77560973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77562312", "body": "@reviewbybees still awaiting (re-)review\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77562312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77562350", "body": "@reviewbybees still awaiting review\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77562350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77563424", "body": "Random-looking failure unrelated to these changes.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77563424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77566105", "body": "BTW technically this needed another review, but I forgive you. :-)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77566105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77568301", "body": "BTW need to `git merge master`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77568301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77613564", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77613564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77613986", "body": "We have been having problems with the CI builds generally, but these test failures look real.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77613986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77620276", "body": "Well go back to storing `credentialsId` before you pay attention to test failures.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77620276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77651260", "body": "@reviewbybees now done from my perspective.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77651260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77869231", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77869231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77933250", "body": "In consultation with @jtnord with @kohsuke we agreed to always offer a wrapper pojo for builds, but to offer the raw `Run` as a backdoor for advanced use cases (not whitelisted for the sandbox).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77933250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78554918", "body": "@reviewbybees back in play.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78554918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78562694", "body": "The `InputStepTest.test_cancel_run_by_input` failure looks random (and I cannot reproduce locally in this branch). https://github.com/jenkinsci/jenkins/commit/9a63158 promises to produce a more useful diagnostic message.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78562694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78563675", "body": "Log remains at\n\n```\nStarted\nRunning: Allocate node : Start\nStill waiting to schedule task\nWaiting for next available executor\nResuming build\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78563675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78565133", "body": "```\n\"Executor #0 for slave0 : executing PlaceholderExecutable::null\" Id=3088 Group=main WAITING on com.google.common.util.concurrent.AbstractFuture$Sync@58687fbf\n    at sun.misc.Unsafe.park(Native Method)\n    -  waiting on com.google.common.util.concurrent.AbstractFuture$Sync@58687fbf\n    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:834)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:994)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1303)\n    at com.google.common.util.concurrent.AbstractFuture$Sync.get(AbstractFuture.java:275)\n    at com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:111)\n    at org.jenkinsci.plugins.workflow.cps.CpsStepContext.getThreadSynchronously(CpsStepContext.java:231)\n    at org.jenkinsci.plugins.workflow.cps.CpsStepContext.doGet(CpsStepContext.java:276)\n    at org.jenkinsci.plugins.workflow.support.DefaultStepContext.get(DefaultStepContext.java:67)\n    at org.jenkinsci.plugins.workflow.support.steps.ExecutorStepExecution$PlaceholderTask$PlaceholderExecutable.run(ExecutorStepExecution.java:382)\n    at hudson.model.ResourceController.execute(ResourceController.java:89)\n    at hudson.model.Executor.run(Executor.java:240)\n```\n\nis the problem.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78565133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79090816", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79090816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79091751", "body": "Add an entry to `CHANGES.md`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79091751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79476494", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79476494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79484653", "body": "The test failure is covered by #85.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79484653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/81715301", "body": "@reviewbybees again please\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/81715301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82529304", "body": "Evaluated and added as appropriate.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82529304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82924512", "body": "Would need a test. Probably could just be added to `ReadWriteFileStepTest` as a new test case.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82924512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82929479", "body": "> why removing the `@author` on first commit?\n\nBecause looking at the file I realized that at least half of what it now consists of was _not_ written by Vivek. That is why I hate `@author` tags. :-) If you actually care who did what (and when), look at Git history.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82929479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83133098", "body": "The test failure is in `WorkflowTest.executorStepRestart`, which has been failing off and on for a while now; apparently #89 did not help.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83133098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83138013", "body": "You forgot to make a `config.jelly`. (`StepConfigTester` can be used to test the correctness of the config form, though I generally do not bother with it for steps with such trivial configuration.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83138013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83182191", "body": "Confirmed my hypothesis:\n\n```\n\u2026 jenkins.InitReactorRunner$1 onAttained\nINFO: Completed initialization\nloading demo #1 @665c98da\nloading demo #1 @a6756a5\n[demo #1] Resuming build\n[demo #1] Resuming build\n```\n\nI think this is [JENKINS-22767](https://issues.jenkins-ci.org/browse/JENKINS-22767).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83182191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83197185", "body": "@reviewbybees after more recent commits\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83197185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83197404", "body": "(I expect to file a separate PR copying the new utilities to `jenkinsci/jenkins/test/src/main/java/`.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83197404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83587388", "body": "Note that you need to run `diff` with a low similarity index, such as `git show -M2 f46415b10badf290400f9afc6419f66dc54092d3`, to see the rename sensibly. If GitHub offers a way to pass `-M` to the diff view, I could not find it: tried `files?M=2` by analogy with the semisecret `?w=1` without success.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83587388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83716162", "body": "I would also merge with `master` to pick up some test fixes.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83716162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/7062596", "body": "Can you also delete the branch on remote?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/7062596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/7268639", "body": "Will look into that soon; ideally would make a 0.1-beta-2, but I think this should wait for #9 at least.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/7268639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8225875", "body": "Why not just export these on `Run` where they are defined?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8225875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8225893", "body": "Ditto, and anyway you cannot export a `protected` method AFAIK. (Meaning there is probably a missing check in `ExportedBeanAnnotationProcessor`.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8225893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8225951", "body": "Is this really of any interest? All you can get from there that I can see is the `number`, which is pretty much irrelevant for a one-off executor.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8225951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8226013", "body": "And what is the purpose of exporting the bean without adding `@Exported` to any methods?\n\nI am confused by the purpose of this whole commit. Would anyway be useful to have some tests verifying that information needed by real use cases is still produced by REST API calls. It is not difficult to write such tests, passing `?tree=\u2026` to `WebClient.goToXml`, and it would prevent regressions.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8226013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8231065", "body": "Fine, but are all these needed in production code? Which?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8231065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8245465", "body": "Yes; in this case it is needed by `workflow-cps-checkpoint`, pending review of the call by @kohsuke.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8245465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8373916", "body": "Does not appear to have worked.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8373916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8374824", "body": "Maybe. Anyway 51ee3a743b5b2802b4785fbf96c6088d2730fa46 got the job done at last.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8374824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8502366", "body": "I am not sure this is going to work so well. Now if there was a problem with `getContext` in `onResume`, I think the timer will still be restarted, except `listener` will be null, so `check` will repeatedly throw `NullPointerException`.\n\nBetter would be for the engine to avoid calling `onResume` at all if the context was not correctly restored.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8502366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8502391", "body": "\u2026or for `AbstractStepExecutionImpl.onResume` to throw `IllegalStateException` in this case, blocking the rest of the override from running, and for the engine to catch such exceptions and propagate them to `onFailure`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8502391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8502937", "body": "Why are you overriding it here, where it is useless, and not in `WorkspaceStep`?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8502937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8502982", "body": "If you just made `reportMissingContextVariableException` return an `Exception`, that would allow it to replace a `MissingContextVariableException` with an `AbortException`, getting the clean error message.\n\nFor that matter, you could just move this logic into `checkContextAvailability` and then it could throw an `AbortException` with a reasonable message itself. This would make more sense to me and allow us to eliminate a type `MissingContextVariableException` from the API that has no other meaning to users of the API.\n\nI would try all this myself but I cannot get `WorkflowJobNonRestartingTest` to run at all. All the tests pass but they do not really start Jenkins. Some problem with Groovy, I can only presume.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8502982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8561853", "body": "So try my suggestion with making `reportMissingContextVariableException` return an `Exception`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8561853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8626137", "body": "This does not look right. `runningTasks` values are the contexts of the `ExecutorStepExecution`, not its body; whereas `context` here is that of the body, which has already finished.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8626137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8763045", "body": "No, I would strongly recommend using `@SuppressWarnings` instead.\n\nIn this case the warning seems legitimate to me; I think this would better be a static nested class.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8763045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8781478", "body": "No, `@edu.umd.cs.findbugs.annotations.SuppressWarnings`. `@SuppressFBWarnings` is fine too if you have a version of the FB annotations library that includes it (I have never seen this before so I am assuming it is new).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8781478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8984135", "body": "Please update `CHANGES.md` to note this fix.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8984135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8995091", "body": "No test?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8995091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8995539", "body": "[Test failure](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/org.jenkins-ci.plugins.workflow$workflow-aggregator/727/testReport/junit/org.jenkinsci.plugins.workflow.steps.parallel/ParallelStepTest/invisibleParallelBranch/) apparently due to `ConcurrentModificationException` from XStream, perhaps due to [JENKINS-19561](https://issues.jenkins-ci.org/browse/JENKINS-19561).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8995539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8999130", "body": "Probably not.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8999130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/9007685", "body": "There should be a test for this. And there should be a better way to check if a `Throwable` is not really `Serializable`. (BTW this is a bug in Groovy I think.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/9007685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/9007721", "body": "And the (purported) fix should be noted in `CHANGES.md`, since it sounds like a high-priority issue: undiagnosable failure.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/9007721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/9250904", "body": "JENKINS-26149 is what I meant to reference, not JENKINS-26051.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/9250904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/9860894", "body": "What is the status of this branch ([diff](https://github.com/jenkinsci/workflow-plugin/compare/kohsuke))? You have five unmerged commits that have been untouched for a few months now. What were they fixing, and are they obsolete?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/9860894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10323357", "body": "Cf. #85, #89, #92.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10323357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10388436", "body": "@kohsuke no this too is incorrect. See #100. Remember that all code changes are required to be reviewed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10388436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12379489", "body": "A bit of it, mostly about `@DataBoundSetter`; I include it here because it is especially relevant for Workflow compatibility: if you get it wrong, UI configuration from freestyle projects may still work, but _Snippet Generator_ and/or actual runtime behavior from Groovy may be broken.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12379489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12380115", "body": "Merges #147.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12380115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12676843", "body": "_Workflow: Multibranch_\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12676843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12869638", "body": "Correct as written in English. Watch _Highlander_.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12869638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/14431295", "body": "Traceable to https://github.com/jenkinsci/jenkins/pull/1774.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/14431295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15324080", "body": "True, but does not solve the problem of identifying the Workflow-compatible SCMs from a static context.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15324080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/15756429", "body": "@kohsuke do you plan to release this? Otherwise this branch cannot even be tested, much less merged.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/15756429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/17423949", "body": "This could remain `protected` so long as `SCMStep` itself is `public`, since typically `DescriptorImpl` is a nested class of the step. But making this `public` too allows you to keep the descriptor separate if you really want (then you need to explicitly specify the `Descriptor.clazz` in the `super` constructor).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/17423949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/19854048", "body": "Nope. You are going to need to move `InputStep` into `workflow-support`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/19854048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/19854059", "body": "`PauseAction` would be the more conventional name. There is no such thing as a `PauseNode`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/19854059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20374943", "body": "BTW should this line not be in an `else`-block?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20374943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549229", "body": "Is it safe to `start` before we `setupTimer`?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549252", "body": "I guess it should be harmless, just noting the change of behavior.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549509", "body": "Better to just `@link` to the methods and let their own Javadoc speak to the details.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549677", "body": "This seems very weird. I would expect `onStart`, `onSuccess`, and `onFailure` to simply be given `StepContext` as a parameter. (Which would mean we do not implement `FutureCallback` any more, but that seems fine to me.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549703", "body": "Rather, that it has failed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549775", "body": "This overload seems unnecessary.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549794", "body": "Could be `final`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549854", "body": "Huh? You just deleted `addCallback`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549876", "body": "A `@see` tag is gratuitous when the type is already mentioned in the method signature.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549968", "body": "Removing the `implements FutureCallback` would also allow us to delete the confusing `wrap` method and `withCallback` overload, which do not seem to contribute anything to the API.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550138", "body": "What is the purpose of this move? It does not seem to be used in its new location unless I am missing something.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550232", "body": "Then I would suggest making `wrap` or the overload document this nonobvious purpose (or even be restricted to `StepContext` so it is clear).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550707", "body": "This does not look right. `runningTasks` values are the contexts of the `ExecutorStepExecution`, not its body; whereas `context` here is that of the body, which has already finished.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20553675", "body": "Fine for now, but do these need to be whitelisted in `script-security`?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20553675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20553826", "body": "I meant the overload taking `Collection`, which AFAICT no one is calling, and is less convenient than the `Object...` version.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20553826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22860320", "body": "Can just be dumped in `CoreStepTest` with the rest of them, I think.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22860320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22865811", "body": "The `version` can be placed directly in `aggregator/pom.xml`. The only reason for having `dependencyManagement` is when multiple modules need to use the same version of a dependency, which is not the case here.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22865811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22865880", "body": "Do not need to enable fingerprinting for purposes of this test.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22865880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22865912", "body": "Could be inlined.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22865912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22879790", "body": "I think it makes most sense to just move this into jenkinsci/copyartifact-plugin#55 to begin with. Adding a test-only dependency should be unobjectionable.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22879790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116036", "body": "Easier to just say:\n\n```\njenkinsRule.assertBuildLogContains(\"\u2026\", run);\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116060", "body": "Again use `assertBuildLogContains`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116114", "body": "This makes no sense to me. What is `continueOnError` for? If a field is mandatory, then the flow must set it, and there is no reason to allow recovery from the mistake if it does not.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116144", "body": "Prefer to put this as a nested class of `MailStep` for readability.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116195", "body": "Get rid of this flag. Either the mistake was in the flow configuration, in which case no recovery is appropriate; or it was a runtime error, in which case the flow can use a `try`-`catch` block if it wants to handle the error and continue.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116262", "body": "Should be no need to wrap it in `node`; it does not require a `FilePath` or other node-related context parameters.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116289", "body": "Can be simplified:\n\n```\nWorkflowRun run = jenkinsRule.assertBuildStatus(Result.FAILURE, job.scheduleBuild2(0));\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116315", "body": "Recommend `basic-steps`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116385", "body": "This is mandatory, so it should not be `@CheckForNull`, or even a `@DataBoundSetter`; it should be a parameter of the `@DataBoundConstructor`. Same for `body`. (`to` could I guess be omitted, if you want to only use `bcc` for example.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116472", "body": "`List<String>` might be more intuitive. I know it all gets flattened to one comma-separated string in the actual mail message, but logically from the program you have a list of recipients.\n\nThe downside of that signature is that I am not sure how to make data binding in `config.jelly` bind a `List<String>` without some hacks. `f:repeatable` might work, but I think this only takes `Describable` elements. It is possible to do it by adding a virtual field of type `String` but maybe too much work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116528", "body": "Use `AbstractSynchronousStepExecution` if you do not intend to use a callback.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116539", "body": "Make it `private`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116577", "body": "Legitimate to have blank `to` if some other kind of recipient is specified.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116589", "body": "With `continueOnError` gone, can all be collapsed to one line.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116633", "body": "With `AbstractSynchronousStepExecution`, the whole `try` block can be deleted; any error is assumed to be thrown up. Just\n\n```\nTransport.send(buildMimeMessage());\nreturn null; // for Void return value\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116659", "body": "This goes away with `AbstractSynchronousStepExecution`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116671", "body": "What does this due when the `charset` is null? Is that allowed?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116705", "body": "You are missing a `config.jelly`, needed for the snippet generator to work.\n\nTo test the form, use `StepConfigTester`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116795", "body": "Depends on https://github.com/jenkinsci/mailer-plugin/pull/16. You could try\n\n```\nmvn -DskipTests clean deploy\n```\n\nfrom a checkout of that branch, then set this version to the timestamped snapshot, something like `1.13-20150116.193108-1` (you will see the output from `deploy:deploy`). This allows us to pin this PR to a particular revision of the upstream PR, and should allow the PR builder to actually run on this one.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23116795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23248181", "body": "> I don't really see the \"benefit\" of `@DataBoundConstructor`\n\nEvery `Describable` class must have exactly one, even if empty.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23248181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249058", "body": "> they have all been implemented in separate java files (at least the ones I checked)\n\nOnly the ones Kohsuke wrote; I have already inlined most of them, but apparently you looked at some of the remaining ones. (Once you release the plugin, then you cannot change it, since the serial form of running flow builds encodes the class name of the `StepExecution` implementation.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249238", "body": "Typo.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249258", "body": "Copy-paste error.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249283", "body": "Typo.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249389", "body": "Need to move this version up into `dependencyManagement` of the root POM.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249643", "body": "Can be `final`. (Ditto `body`.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249715", "body": "`<Void>`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249789", "body": "Use `AbortException` for user errors like this where no stack trace is needed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249802", "body": "Ditto here.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249883", "body": "Some of these could probably be inside `f:advanced` since there is not commonly a need to customize them.\n\nShould also create `help-replyTo.html` etc. where it is not obvious what the field is for, especially when it is not obvious what happens when it is left blank.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249993", "body": "What is this field for? There is a default suffix configured in Jenkins global configuration which can be used for recipients missing `@` (a somewhat dubious feature). But if you do not want to use that suffix, you do not need this field. Just write out the full address to begin with.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23249993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23250042", "body": "`r.assertEqualDataBoundBeans(step1, step2);`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23250042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23489514", "body": "Right, there is no particular reason the same procedure could not be done on a slave; you would just need to allow a label expression to be configured. I think it can be skipped unless someone requests it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23489514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23489529", "body": "Makes sense, just to be on the safe side.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23489529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24244167", "body": "This `entry` block should ideally be defined as a reusable tag in `/lib/hudson/project` so we could call `<p:config-displayName/>`; bonus points for a core PR with that refactoring.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24244167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24877488", "body": "Just because the array should take a bit less heap than a wrapping `List`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24877488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24897297", "body": "To be clear, the _original_ code was already converting `List<Action>` to `Action[]`. The only real change I am making here is replacing `new Action[0]` with `null`. The other changes merely encapsulate the null check when serving the list back.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24897297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25376628", "body": "See the sordid explanation in `AbstractStepExecutionImpl` (and I curse @kohsuke for plaguing this plugin with Guice). Since I only need `step` inside `start` (to compute `end`), `optional=true` instructs the system to leave `step` as null after a Jenkins restart if the `Execution` is resumed. If I needed the `step` later (as some `StepExecution`s do), I would make it non-`optional`, not `transient`, and would have to make the `Step` implement `Serializable`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25376628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25384291", "body": "> I am not a fan of \"magic\" code\n\nYes, my feeling too. @kohsuke wanted a \u201cconvention-over-configuration\u201d system. I did push back on one point: the original no-arg constructor for `AbstractStepDescriptorImpl`, which inferred the `StepExecution` type by appending `\"Execution\"` to the `Step` implementation class name, meaning a rename refactoring could cause runtime failures.\n\nBy way of background, there is one key advantage of the use of Guice in step definitions, which is that `AbstractStepDescriptorImpl.getRequiredContext` automatically stays synchronized with the `@StepContextParameter`s you are actually requesting in your `AbstractStepExecutionImpl`. (Even this is not quite as watertight as it may seem, because you can still call `StepContext.get(Class)` directly; and some steps actually need to do so because the call does not come from the `StepExecution` itself, but rather from some other object, such as a `BodyExecutionCallback` (which is passed a `StepContext` in its methods). For these steps, there is sometimes a `@StepContextParameter` field which is not actually used, just to force `getRequiredContext` to list that type.)\n\nThe other uses of Guice more or less boil down to your not needing to explicitly call constructors (or write code in `onResume`), but I find the LoC reduction to be modest\u2014not really justifying the high risks of injection, such as the \u201cthrow-up-your-hands-in-despair\" exception in [JENKINS-26513](https://issues.jenkins-ci.org/browse/JENKINS-26513).\n\nAt any rate, the use of Guice is optional here, so if there is consensus on this point we can \u201cdeguice\u201d some steps as a proof of concept, and if the result seems preferable, just deprecate the API types using it: `AbstractStepDescriptorImpl`, `AbstractStepExecutionImpl`, `AbstractStepImpl`, and `StepContextParameter`. `AbstractSynchronousStepExecution` would also need a replacement, though [JENKINS-25879](https://issues.jenkins-ci.org/browse/JENKINS-25879) suggests it needs to be redesigned anyway.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25384291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25211901", "body": "Good question, try it please!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25211901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25212008", "body": "Not sure offhand how to do that, and anyway the original test did not check it so out of scope.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25212008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25214129", "body": "Might; feel free to try that after this is merged.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25214129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25348973", "body": "> why has this changed\n\nIn fact the build status was _already_ `ABORTED`, but due to a mistake in @kohsuke\u2019s original code this was not being checked. I fixed that (later in this test), and corrected the expected status.\n\n> as a user I would expect a timeout to be reported as failure\n\nThe `timeout` step intentionally sets the build result to `ABORTED`. Proposed changes to that behavior are off topic here.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25348973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25349192", "body": "Ditto above; the intention of code is for it to be `ABORTED`, but the wrapping in `ParallelStepException` breaks the transmission of this status.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25349192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25351291", "body": "> standard Jenkins behaviour\n\nFWIW the `build-timeout` plugin has a complex set of `BuildTimeOutOperation`s; the default seems to be to set the result to `ABORTED`. Unlike in a freestyle project, a workflow can customize timeout handling by just catching `InterruptedException` and doing something else, such as `error`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25351291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25632679", "body": "Scheduling the `WorkflowJob` will succeed. Its attempt to schedule the `FreeStyleProject` will fail. This causes `scheduleBuild2` to return `null`, which needs to make the step fail, which is the bug I fixed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25632679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25636070", "body": "Cleared up some confusion on the phone: `QDH` is active during the `rejectedStart` test, _not_ during the `noWait` test. For the first test, `ds` is successfully added to the queue (but never builds), so `us` succeeds; for the second test, `ds` is not even added to the queue, so `us` fails.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25636070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25652080", "body": "Actually belongs under the build steps section.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25652080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25652106", "body": "Clearly `Log Parser` is not the class name which needs fixing here. If you do not know the class name, omit it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25652106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25652168", "body": "(And I doubt it is actually a build step, though I have not looked yet.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25652168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25652177", "body": "Probably not fixable.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25652177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25704429", "body": "What do you mean by \u201cfix-up for testing\u201d?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25704429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25704553", "body": "Remember this is only used to implement a `ListenableFuture`; every caller should just be calling `.get()` on that immediately, or checking `.isDone()`, or perhaps waiting on the result some other way.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25704553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25710311", "body": "`ContextResettingExecutorService`? I do not think it matters (and `Timer` is not, currently), but I suppose it cannot hurt.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25710311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25692010", "body": "Unnecessary and can be reverted.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25692010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25771549", "body": "`getChannel` might return null IIRC.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25771549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25771875", "body": "Just make sure this includes `MasterComputer` (I think it does).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25771875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25772216", "body": "Alternate idea (might be more robust): encapsulate the lookups of `channelNames` (in `WorkspaceActionImpl`, `WorkspaceListLeasePickle`, and `FilePathPickle` itself) into a method which before returning `null` (or throwing `IllegalStateException`, as all currently impls do) would fall back to doing this inspection of the currently online `Computer`s.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25772216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776775", "body": "> how it's more robust\n\nHandles the case that `onOnline` was not delivered for some reason.\n\n> iterates the list of `Computer`s directly\n\nSee JENKINS-26096 for why that does not work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776834", "body": "> the existing code was not checking for it\n\nBecause the existing code was in a listener callback which is called as soon as the channel is constructed and set. This code is not.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25780901", "body": "`channel = computer.getChannel()` should suffice.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25780901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25781026", "body": "You can just make `getChannelName` be `@Nonnull` and throw `IllegalStateException`; then the callers are simpler, and you do not need `getChannelNames` since that is only used for the exception message.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25781026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25769329", "body": "Just occurred to me that this will not handle relative paths, need to fix that.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25769329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25785573", "body": "BTW this `impersonate` and granting `RUN_SCRIPTS` would probably be unnecessary if you just passed `true` for `sandbox`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25785573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25785675", "body": "`FailingHttpStatusCodeException` I guess?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25785675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25809571", "body": "Unrelated but would be needed for #59 anyway.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25809571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25809591", "body": "Stylistic change only, avoids `rawtypes` warning.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25809591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25821344", "body": "Before the fix, this map value as returned from `uninstantiate` was a singleton list of an actual `CleanBeforeCheckout` instance.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25821344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25868427", "body": "And in this case the item of interest was not recently added, so there should be no race condition.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25868427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25908519", "body": "Generalizes the change in #40 to be more broadly usable.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25908519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24010793", "body": "How can this be `alice` when she has not yet logged in?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24010793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24010875", "body": "This will not work unless you have first called\n\n```\nj.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n```\n\nwhich you would probably want to do at the top of the test method.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24010875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898269", "body": "Ah, right, never mind.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898345", "body": "Can kill the dummy comment (use `@author` and/or add real Javadoc if you like), but please add a copyright header as in other source files.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898366", "body": "No-op change could be reverted to minimize diff.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898451", "body": "In general, PRs should avoid making semantically null changes to lines not otherwise related to the diff. Whitespace-only changes make `git blame` less useful, increase the chance of conflicts during `git merge` or `git cherry-pick`, etc. And of course it is harder to review a longer diff.\n\nIn particular, you should configure your IDE to _not_ automatically reformat files just because you are editing something in them.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898687", "body": "`doProceed` is an implicit `@WebMethod` so I am not sure what the impact is of adding a new parameter (even if it is not marked `@QueryParameter`).\n\nAnyway this seems unnecessary. The check for `User.current()` could just be in `doProceed` to begin with, right? Just as it is in `doAbort`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898750", "body": "Conventional name (matching similar classes in core) would be `userId`, to make it clear that it is `User.id`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898894", "body": "The `User.displayName` could change at any time, and cannot be used to uniquely identify this person. You should instead store the `User.id`. (That also allows the `summary.jelly` to hyperlink to the `/user/*` page, assuming the user still exists when it is rendered. [Here](https://github.com/jenkinsci/jenkins/blob/419d670cd0f672b0b3eba6ad4bcc97e8c6948424/core/src/main/resources/hudson/model/Cause/UserIdCause/description.jelly) is an example.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898950", "body": "Gratuitous; `ParameterValue` was already imported.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898961", "body": "!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24898961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25702774", "body": "(resolved)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25702774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25702922", "body": "`getUserId` is fine here.\n\nYou could simplify slightly to\n\n``` java\nassertEquals(\"alice\", action.getUserId());\n```\n\nbut it does not really matter.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25702922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703006", "body": "I would not store this as a field. Just do the lookup of `User.get(userId).getDisplayName()` on demand.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703109", "body": "And what if `userId` is null? You check that in `getUserName` but that is too late to save this line!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703183", "body": "Does not really to be `@Exported`. This is only for the benefit of `summary.jelly`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703284", "body": "If you are not adding an `ApproverAction` when the approver is anonymous (which I think is fine), then `ApproverAction` can declare `userId` as `@Nonnull` and skip the null checks, simplifying several things.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703687", "body": "The hyperlink is not going to work when you have `escape-by-default='true'`; `<` will become `&lt;`. You can solve that using `<j:out value=\"${\u2026}\"/>` but then you _must be careful_ to call `h.escape(\u2026)` on the user\u2019s display name, so that they cannot launch a (stored) XSS attack.\n\nIt would be wise to use HtmlUnit (`JenkinsRule.WebClient`) to verify that the expected approval text, including valid hyperlink, in fact appears on the build index page.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703764", "body": "(I would even suggest using `@Restricted(DoNotUse.class)` to make it clear that this is expected to be called only from the Jelly view, not from Java code.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25703764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25772860", "body": "Not sure why it works, but I guess if it does then this can be ignored for now.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25772860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25773133", "body": "Update: `InternationalizedStringExpression` specifically escapes parameters, but not the actual bundle key.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25773133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941535", "body": "Still needs to be `@Exported`, or there is no point in having the class as a whole be an `@ExportedBean`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25868967", "body": "In fact they are not currently available inside `node` either. As noted in JENKINS-27145:\n\n> Setting these variables from `ExecutorStepExecution` would be welcome.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25868967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869234", "body": "Did you test this\u2014does `${rootURL}` actually work here? AFAIK this does not work for a help page rendered as static HTML, which is why the standard link comes from `Shell/config.groovy` in `entry.description`, rather than from a help page. The one example I know of where dynamic content is rendered in a help page is `ArtifactArchiver/help-defaultExcludes.groovy`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869246", "body": "typo\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869373", "body": "IIRC `p` and `pre` are both block-level elements, so I would suggest `</p><pre><code>`. (BTW if you switch to Jelly/Groovy you have to produce well-formed X(HT)ML.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869410", "body": "Suggest `target=\"_blank\"` (IIRC) to avoid wiping out the config screen.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25870438", "body": "Ah, [found it](https://github.com/jenkinsci/jenkins/blob/2983905e459a0311a1ca549847663999f4e5cd76/core/src/main/java/hudson/model/Descriptor.java#L831)!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25870438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942665", "body": "Just use `JenkinsRule.getLog(b)`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942683", "body": "Oh, I guess you are making use of the split into separate lines.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942753", "body": "`workflow-api` is the right place for this, the comment can be removed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942776", "body": "Do not extend `LabelAction`, just make this an interface extending `Action`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942783", "body": "Should be an interface, no defined storage.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942802", "body": "(`LabelAction` was a mistake, do not follow its bad example!)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942987", "body": "`getParents` may not return null, and if it is empty then the loop will be a no-op anyway, so this `if` statement could just be deleted.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25942987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943079", "body": "This seems fishy. What if there is a block like `node {}` inside `parallel`? IIUC this code would fail to display any branch prefix for steps run inside that.\n\nI do not see any particular reason to check for `BodyInvocationAction` at all.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943175", "body": "Do we really need to be that specific? I had something simpler in mind, and more limited to the problem at hand (distinguishing parallel branches): an action which could be attached to any node (but typically a `BlockStartNode`), and which would specify a \u201cthread name\u201d to apply to that node and its descendants.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943293", "body": "Would be more self-explanatory to call `LineTransformationOutputStream.forceEol` directly. I know `close` delegates to this, but you then have to dig into core sources to understand that.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943316", "body": "(Since the normal behavior of a filtering stream in `close` is to close its delegate, which we do _not_ want here.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943326", "body": "Can just be `private`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943409", "body": "Could be simplified to\n\n``` java\nlogger.printf(\"[%s] %s%n\", prefix, message);\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943512", "body": "IOW something like\n\n``` java\n/** Applies to a {@link FlowNode} and all descendants (except those with their own such action). */\npublic interface ThreadNameAction extends Action {\n    @Nonnull String getThreadName();\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943692", "body": "(There is a possible use case for a block-scoped log prefix which is _not_ a thread name, say `retry` count number, but I think it behaves differently: a given step can only be in one thread, whereas it could be nested inside several blocks of non-`parallel` steps which should probably all be reported if any are. So if and when such a feature is needed it would be a different `Action` API anyway.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25944016", "body": "Just add `@Nonnull` to `getParents`, at which points FindBugs would actually fail the build if you left this code in!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25944016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25944077", "body": "It is not a `java.lang.Thread.name`, but we are talking about logical \u201cthreads\u201d within the CPS VM, which should have an analogous property.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25944077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25944151", "body": "If you do want to write tests for it\u2014probably overkill since the hard work is done in the superclass, but who knows\u2014then I would just give it default (\u201cpackage-private\u201d) access.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25944151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953799", "body": "Revert this, passing null to the super call is intentional since we override `getDisplayName` and do not want to store two fields.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953877", "body": "AFAIK this method is used only from `ParallelStepTest.shouldHaveParallelStepsInTheOrder`, so it could be deleted in favor of `getThreadName`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953909", "body": "My advice worked: this comment is now redundant. :-)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953984", "body": "As before (comment hidden because of action rename), I think the reference to `BodyInvocationAction` should be removed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25955188", "body": "Right\u2026 I wonder if you can terminate the recursion upon encountering a `BlockEndNode`. Thus `getLogPrefix` on the join node created by the end of the `parallel` step would get `null` from the recursion on each of its parents, which is what you want.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25955188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25955437", "body": "IOW try something like this:\n\n``` java\nprivate String getLogPrefix(FlowNode node) {\n    ThreadNameAction threadNameAction = node.getAction(ThreadNameAction.class);\n    if (threadNameAction != null) {\n        return threadNameAction.getThreadName();\n    }\n    if (!(node instanceof BlockEndNode)) {\n        for (FlowNode parent : node.getParents()) {\n            String prefix = getLogPrefix(parent);\n            if (prefix != null) {\n                return prefix;\n            }\n        }\n    }\n    return null;\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25955437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25958034", "body": "So that is pretty close at least, should be able to use `/flowGraph` to debug that.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25958034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25967229", "body": "Actually this could now just be `ThreadNameAction`, permitting `ParallelLabelAction` to be made private.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25967229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941722", "body": "I think you meant\n\n``` groovy\ngit url: 'git@git.local.domain:ps/project.git', credentialsId: '67c3072d-b9a7-44fa-a5aa-560ba9c1662f'\n```\n\nBTW use\n\n``````\n```groovy\n``````\n\nto open code blocks intended to be parts of flow scripts, so we get syntax coloring.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941726", "body": "`this`, `takes`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941759", "body": "typo\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941909", "body": "Test results are not in yet, but I cannot imagine how this could pass! You have not edited `GitStep/config.jelly` to add an entry with `<c:select/>`, nor created `GitStep.DescriptorImpl.doFillCredentialsIdItems` to enumerate the available credentials.\n\nAnd of course the test would need to actually create a credentials item of a suitable type: a dummy `credentialsId` would not appear in the pulldown and so could not be round-tripped. Note that the actual Snippet Generator does not ever round-trip anything, but `StepConfigTester` is nonetheless helpful in ensuring that all required components of form databinding are present and functioning.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941935", "body": "perhaps\n\n```\nThe `git` step lets\u2026\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941984", "body": "Since you can now pick the ID for a newly created credentials item, and the `git` step is specifically optimized for writing without snippet generation, it would make more sense to show as an example a human-readable ID.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25941984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943800", "body": "(unresolved comment from rebased commit)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943856", "body": "Use `EnvVars.masterEnvVars`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943925", "body": "This _should_ not pass since no such credentials exists.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25952974", "body": "No, you cannot store a `Credentials` like this, you should only keep the `credentialsId` as you had it before (not sure why you changed it).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25952974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953544", "body": "Tend to prefer the `CredentialsProvider.lookupStores(r.jenkins).iterator().next()` technique since it avoids referring to this implementation class.\n\nBTW there is no reason for this to be an `@Extension` here, since it is normally; you could just inline it. (It does not seem to have any important state, at least for now, though it could in the future\u2014another reason to prefer looking up the existing providers.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25953544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25967559", "body": "Treat a `Step` like any other `Describable` object.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25967559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25985672", "body": "You cannot do this check here because you do not have the `Item context` which you need to look up folder credentials. Just skip it; if the credentials are missing, this will get reported by `GitSCM` anyway.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25985672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25985788", "body": "Do not pass in a null `credentialsId` and then pass null to `addDefaultCredentials`. If `credentialsId != null`, then verify that `lookupCredentials` returns non-null; otherwise skip the call to `addDefaultCredentials`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25985788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25985877", "body": "As noted below, you can just make `credentialsId` here be `@Nonnull`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25985877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25985966", "body": "This block can be deleted for workflows, as variable substitution only makes sense for freestyle projects. (Even if the URL is computed in the flow script, the `@DataBoundConstructor` will get the evaluated result, and anyway this form validation is only for the snippet generator, where you should only be entering a _sample_ URL.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25985966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26380764", "body": "Try creating a method in _this_ class like\n\n``` java\nprivate static <P extends Job> P configRoundtrip(JenkinsRule rule, P job) throws Exception {\n    rule.configRoundtrip(job);\n}\n```\n\nand then change the above code to\n\n``` java\np = configRoundtrip(rule, p);\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26380764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26399399", "body": "This assertion is not particularly interesting here, could probably be omitted.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26399399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400179", "body": "Needs to be updated. (Preferably the variable name, too.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400194", "body": "Ditto here.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400479", "body": "Unclear to me if storing a reference to the `ParallelStepExecution` like this is kosher. @kohsuke? I was already confused by why `ParallelStepExecution` is storing its `BodyExecution`s.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400562", "body": "`failFast = (Boolean) e.getValue()` would suffice, I think.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400663", "body": "This should rather be moved down into the `if (o.isFailure())` block.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400987", "body": "(not quite, but similar)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26400987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26426961", "body": "typo\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26426961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26426993", "body": "BTW the comment looks wrong too.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26426993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26708992", "body": "I did not want to use the `Run` instance because this needs to work across Jenkins restarts. Nor did I want to use the `externalizableId` because I wanted this to work as a `ClassRule` across different test cases within the same suite, which often reuse the same project name and of course build number (`p #1`) for example. Whereas the `logFile` includes the randomized `$JENKINS_HOME` prefix and so should be both consistent across restart and unique across tests.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26708992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26709268", "body": "This is a general `@Extension`, so active even in tests that are not asking for me. In that case, `!active` and so the map is updated but nothing else happens. (Well, the log file is still opened, but nothing extra is printed.) I suppose it would be preferable to return immediately from all listener methods if `!active`; this is set pretty early as a `@ClassRule` so there should not be a race condition.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26709268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26655732", "body": "Probably you want to add your own copyright. :-)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26655732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26699803", "body": "Gratuitous, could be reverted.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26699803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26699899", "body": "This is building the job twice. Probably you meant something like\n\n``` java\nr.assertLogContains(\"FileExists: false\", r.assertBuildStatusSuccess(p.scheduleBuild2(0)));\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26699899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26699915", "body": "(ditto here)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26699915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26700022", "body": "Could save a few seconds of test time and shorten sources by merging these two test cases into one: `fileExists`, `echo`, `writeFile`, `fileExists`, `echo` should print false then true.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26700022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26700081", "body": "Can skip `Boolean.valueOf` and rely on autoboxing.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26700081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26781574", "body": "Nope, it is legal. Generally use of it is discouraged in non-generated code. This is sort of a special case. I considered also `__initialize__` etc.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26781574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27403272", "body": "This one got deprecated.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27403272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27403336", "body": "Yes a bunch of stuff is in illogical places, to avoid blowing out the Docker cache rerunning everything from the start: some of these installations are quite slow.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27403336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27404892", "body": "BTW `WaitForConditionStepTest.catchErrors` also uses this idiom but catching `FileNotFoundException` there is useful for test coverage purposes as explained in a comment there.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27404892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27419174", "body": "@kohsuke FYI this seems like a flaw in databinding.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27419174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27428468", "body": "I do not know what you can do with EnvInject. Anyway I would not expect this to be useful, just testing what is possible. It seems harmless to me.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27428468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27429099", "body": "`EnvVars.override` handles an empty string by unsetting the environment variable and I think that is what people expect. As you note, Windows does not seem to even support empty values.\n\nMaking `overrides` be a `Map<String,String>` seems attractive but I do not think it would work well with the DSL invocation syntax because it would be confused with the parameter map (unless you explicitly specified `overrides:`, which is too verbose).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27429099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27434486", "body": "(To be clear, I prefer to have the test assert all interesting aspects of behavior, even the questionable ones, so that any future change in behavior has to be a conscious choice that touches test code.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27434486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27562149", "body": "Unfortunately those are not necessarily identical, because an `EnvVars` also holds a `platform` field which is left unset in the no-arg constructor. It is transferred in the copy constructor but only originally set in `masterEnvVars`, which in this case (assuming you are currently inside a `node` block, otherwise you do not care about the platform) would come via the `contextualEnvironment` passed from `PlaceholderExecutable` calling `Computer.getEnvironment` (which calls `getRemote`, which loads `masterEnvVars` in the slave JVM, meaning the slave\u2019s environment variables, not the master\u2019s).\n\nIf you forgot and started with the no-arg constructor, all of your tests would still pass, because `override` falls back to using `File.pathSeparatorChar` (\u201cit's still more error prone that _[sic]_ I'd like\u201d according to the comment), which from a test would be the same on a slave as on the master. But anything using `PATH+XXX` syntax might fail in the field.\n\nConfused yet? I am, which is why I want to be done with refactoring this logic. :-)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27562149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27320874", "body": "`ExecutorStepExecution.Callback` does not fit the pattern. `TimeoutStepExecution.Callback` might, but maybe not, since it is not `static` (uses `TimeoutStepExecution.killer`). `WorkspaceStepExecution.Execution` and `TmpDirStepExecution.Execution` could share a common convenience superclass with `CoreWrapperStep.Callback`. There is not much boilerplate here but could make sense as a separate refactoring PR.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27320874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27387258", "body": "Yes, making this pass or be skipped on Windows will be necessary\u2026just did not want to fire up a VM to check this now.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27387258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27387307", "body": "Yeah, probably should do that. IIRC the easiest way is to append `:` to the message, which Bourne shell will never treat as part of a variable name.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27387307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27388169", "body": "Good question. It will not. Making it do so would require `CoreWrapperStep` to define a `PickleFactory` for a `SimpleBuildWrapper` (which would also need to be `Serializable`), and then there would need to be some API allowing a `Pickle` to differentiate between being deserialized as part of a Jenkins restart vs. being deserialized in another `Run` as part of a checkpoint. Even that is probably not enough, because simply calling `setUp` again will not work in all cases; say the original Xvnc server set `DISPLAY=:11` and the new one sets `DISPLAY=:12` yet some code in the block is somehow caching the environment.\n\nAnd adding subtle logic like this is out of the question without good test coverage, which is hard since the checkpoints are not available in OSS, so the tests would need to be in _that_ plugin, and branched to match this one.\n\nAnyway our [documented recommendation](http://jenkins-enterprise.cloudbees.com/docs/user-guide-docs/workflow-sect-checkpoint.html#workflow-sect-checkpoint-files) for checkpoints is that they not be used inside a `node` block to begin with. There are too many things that can go wrong; you would need to get the exact same slave back, with an untouched workspace. And if checkpoints live at \u201ctop level\u201d (i.e., in a scope not holding locks on any external resources), then they cannot be inside `wrap` either.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27388169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29234481", "body": "Yeah, [here](https://github.com/cloudbees/jenkins-ci.org-docker/blob/66dc63923438e70eaebd68da41bc7b9ea35ce2aa/plugins.sh).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29234481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29256724", "body": "Should be `boolean` not `@CheckForNull Boolean`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29256724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29256822", "body": "Please avoid reformatting existing code. It makes the PR diff too long and hard to review. The fewer diff lines, the better.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29256822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29382041", "body": "Package-private, and anyway the `workflow-job` plugin was not intended to expose any APIs.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29382041/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29385528", "body": "At any rate, this logic is basically copied from freestyle projects.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29385528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29525725", "body": "Uh, I think you forgot to add `+ \"script\"`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29525725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29525914", "body": "This will not work. It will always be null. Did you test this patch? (`mvn -f aggregator hpi:run -Dhudson.slaves.WorkspaceList=~` or similar)\n\nBest to simply copy the [original definition of `COMBINATOR`](https://github.com/jglick/jenkins/blob/ca3b1db4d6f761861885d03355f35ccafe7cc425/core/src/main/java/hudson/slaves/WorkspaceList.java#L291).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29525914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29525998", "body": "Still wrong (see comment on outdated diff).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29525998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29535587", "body": "Orphaned import, but no matter.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29535587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29581586", "body": "Ha! No, I just looked at this class and realized that essentially nothing of what he originally wrote remains unedited, so leaving the attribution there is just misleading. If you want to know what someone wrote, check Git history.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29581586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29683666", "body": "Yes, it is within one flow execution.\n\n`RunFlowSingleton` does not make much sense but some variant might. Or would `GlobalVariable` be clearer?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29683666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29683703", "body": "Yes, that would be a good idea.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29683703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29683824", "body": "There is no `Run.getEnv` method. I am not sure what you are saying.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29683824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "lanwen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/03e5be69483e8df1c3817d4c1f84658089aa0744", "message": "Update DEVGUIDE.md\n\nfollowing https://github.com/jenkins-infra/jenkins.io/pull/1190"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexbrjo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/068c6f1ad7eb7f59f7fa4169d130ac4662f9d778", "message": "Updated support status for several plugins\n\nUpdated pipeline support for plugins: HttpRequest, PerformancePublisher, HockeyappRecorder, ghprb and test-results-analyzer. Checked support via Jira, PRs, changelogs. Confirmed HttpRequest by checking syntax snippet.\r\n\r\n@reviewbybees"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "recampbell": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8f8f2e2576c445e8e68771fd3b7a876ba0cc7717", "message": "Noting cobertura fix"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70308939", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70308939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71229646", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71229646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71291129", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71291129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/81907911", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/81907911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83172819", "body": ":+1: Seems legit\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83172819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "aheritier": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d537ba19e3cf2da86ce0bf2f1b359a50b5a01f9b", "message": "XCodeBuilder implements SimpleBuildStep in 2.0.0\n\nSee https://github.com/jenkinsci/xcode-plugin/pull/74"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/18537395", "body": "perfect @jglick \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/18537395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "oleg-nenashev": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e3a463caa8e7acd19343373243e9516283add831", "message": "Update COMPATIBILITY for several plugins.\n\nI added documentation links where it was possible. I hope everybody is fine with such format improvement.\n\n- TCB plugin support Pipeline starting from 2.0\n- EnvInject offers partial support\n- Job Restrictions offers partial support (95% done, heh)\n- Release plugin offers the `release()` step\n- Ownership plugin now has documentation"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/56881d7370aaab5408aa4ea5e0df95c988cee170", "message": "Priority Sorter is compatible since 3.5.0"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/615a0b9b0c3ade0157da4cd8118398b608a1e679", "message": "[JENKINS-36570] - Add PrioritySorter to the Pipeline Compatibility list"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ac1a00caa5abf5e96fd3379575c3236eb7feaa9a", "message": "Ownership plugin supports Pipeline starting from 0.9.0"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/5246cba230e1eccc36a66af1d18584671bcd0e94", "message": "Add Exclusion-Plugin to the list\n\nhttps://wiki.jenkins-ci.org/display/JENKINS/Exclusion-Plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/5578cc034790402d514557648f076db44143ed02", "message": "Add throttle-concurrent-builds plugin to the list\n\nhttps://issues.jenkins-ci.org/browse/JENKINS-31801"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29381912", "body": "Is it safe? the method was not private\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29381912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29383492", "body": "<code>Item.DISCOVER</code> may be missing in the logic (e.g. \"I can see the project, but cannot open its internals\"). On the other hand, this executor cell will leak some info in such case\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29383492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29581431", "body": "Is it a penalty for the missing Javadoc? :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29581431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "mrooney": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c763a48c5470de84932403f81f18ba2bae5f814f", "message": "Update COMPATIBILITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7e7cec697a329cb0d9e51ea6d0779de9ffdc1885", "message": "mark scoring-load-balancer job-level preferences as unsupported, link to issue"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/371d153453f00688c28be814beb2b29d1aab3c52", "message": "Merge remote-tracking branch 'upstream/master'"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/45f75f52895047a450d1f35804ee76f104b87ecc", "message": "mark StashNotifier as supported and link to docs"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "seanf": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6b6a62ad4e7ea498d89a49ed6690428f2f6e276b", "message": "Fix step name for JacocoPublisher"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "casz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c0a94b592b2166be225c134075d91d071529af75", "message": "Add AccuRev compatibilty\n\nAdded Databound Setters and set isApplicable to true.\r\nhttps://github.com/jenkinsci/accurev-plugin/blob/master/src/main/java/hudson/plugins/accurev/AccurevSCM.java"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nfalco79": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/39fefd89349ff34886d014f05882bd9a9fcbdc7f", "message": "Add nodejs wrapper pipeline details"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GabLeRoux": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6f373f7d7068df1bd1ca4bfdd44d7da03977625c", "message": "Oups I wrote Example twice"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ac44fcd900486ec4726d2b040a7bebcd1f55bf5f", "message": "Updated build params documentation after review\n\n* params are also accessible as environment variables\r\n* `isFoo` parameter was defined a boolean parameter\r\n* Better style to use single quotes `'` when not interpolating."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/bd8d95b303b9e20d530b247d478261e76585feaf", "message": "Build parameters not groovy variables anymore\n\nI had an issue when working with Build parameters, found the solution in JENKINS-40235 and added details here: http://stackoverflow.com/a/41276956/1092815"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "estarter": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8cef4dbe342cbe0cd6124ad93250615510c96ed8", "message": "add release/m2release plugins to the list"}], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/435", "title": "JENKINS-40765 compatible since version 2.7", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ajzaff": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/fae8860096a6f270361d5eb1cd7afe95f4e3ffbf", "message": "Add CoberturaPublisher to compatability note\n\nPR 55 (https://github.com/jenkinsci/cobertura-plugin/pull/55)\r\n\r\nSigned-off-by: Alan Zaffetti <alan.zaffetti@ibm.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ceilfors": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f6ba57ccaf1df74aeddadf2bf9dc577ad633a32d", "message": "Add jira-trigger to compatibility note."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "62mkv": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6d9265e68e008ca6033deb259af12b67b4e769e9", "message": "reflected compatibility status for \"Xcode Plugin\""}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/cc10bb3f991238850ca03fbc8638aef51efe426c", "message": "corrected \"class name\" for HockeyApp"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/271a01686eaaceba97c96e3686839e34f93e0727", "message": "reflected compatibility status of HockeyApp Plugin\n\nUpdate COMPATIBILITY.md to reflect compatibility status of HockeyApp Plugin"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/20082315", "body": "Thanks for fixing this for me! Where is that \"plugin short name\" to be found ?", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/20082315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Dohbedoh": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/fa8f66eb6a080c5eb057a5b8dccdc22d42f91bf9", "message": "[JENKINS-28454] Add WsCleanup to compatible steps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "netmikey": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/1731c8cee94876fd0ab0426e5ad3e9694b339546", "message": "Show Plugin version instead of ticket number"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/54eb0309224dd5163d157aef1c333c1cef0e2f0a", "message": "Mark JaCoCoPublisher as compatible"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eddumelendez": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/53ee346b4b9f8d7e55c72196f83f8ec8a64bd922", "message": "Update SonarQube compatibility"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eyalbe4": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a496aa75e4671470b0d061258aad9b1e0d767d7c", "message": "Update Artifactory Plugin compatibility."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jlong": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c71ec188d905f02e82ad2b48fb62538fc963002f", "message": "Update `archive` to `stash` in explanation of multiple threads code"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Mechazawa": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/3e2b02c5f6621ee9a0ca48a9fb2aba77fd31d88b", "message": "Add CloverPHP"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rkettelerij": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/5ffce7d5c29df2d80cc4f651b585abd0ff427576", "message": "jobconfighistory already supports pipeline\n\nI changed the wording a bit"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jtnord": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d9223f417eb4dfabe5118e52e1a72d1de1f81126", "message": "Update COMPATIBILITY.md\n\ncucmber test reports now supports pipeline"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f5deeee848389d87784b929cf3ba63a8f2ebfd9b", "message": "note that operations-center-cloud was supported.\n\nOC-cloud has been supported since 1.7.5 and 1.8.3"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70993672", "body": "The relative path checker would have been usefull for catching misconfigurations (rather than security).\ne.g. if you load a non relative file then when the job moves to a different slave at an abitrary moment the step command  - rather than a shell script failing when run from a command.  I think the steps failing are at the moment generally harder to diagnose - so am questioning if this should have been removed (even if it was disabled by default).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70993672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71047100", "body": "fair enough.\n+1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71047100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71452544", "body": "see file comment \n:-1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71452544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72694086", "body": ":+1: +1:\n- need to discuss getting the flaky test plugin on jenkins and then moving to surefire with 2 retries...\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72694086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72707353", "body": "@jglick I do not want to make the change until we have the flaky test plugin[1] on Jenkins - otherwise we would loose the ability to see these (right now they are skipped in the XML report).\n\n[1] https://wiki.jenkins-ci.org/display/JENKINS/Flaky+Test+Handler+Plugin\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72707353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75655186", "body": "1 question inline - otherwise lgtm.\nLet me know if you want me to re-run the tests.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75655186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75941368", "body": "see inline comments, however I am ok on an interim merge and prepared for a ~~clazz~~ result status war\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75941368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76793239", "body": ":-1: on interim merge as GitHub is as usefull as a chocolate fireguard for tracking differences between various commits and being able to comment on them.\n\n:+1: to just merge it and do the follow up changes in a different PR.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76793239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76813574", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76813574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77231213", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77231213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77876932", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77876932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78911985", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78911985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79302885", "body": "@reviewbybees - feeling confident....\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79302885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23526196", "body": "this is confusing as mailer plugin 1.2 is very old.  THis should say supported since 1.2 of _workflow_ (since all other sinces refer to the plugin version not workflow version.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23526196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25210733", "body": ":100: for replacing groovy with java\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25210733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25210992", "body": "this brings an intresting question - what will happen if you have both an echo in a windows node and an echo in a Linux node?\nWIll the console render correctly - will it contain spruious \\r if the main task in on a linux host  - or will lines be munged if this is on a Windows host?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25210992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25211099", "body": "it would be good to see that the roundtrip leaves this still in the waiting state.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25211099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25213206", "body": "agreed out of scope.\n\nwouldn't a check on exec.isComplete() do this though?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25213206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25331497", "body": "why has this changed - I don't see a corresponding TimeoutStep change?\n\nas a user I would expect a timeout to be reported as failure (which matches IIRC standard Jenkins behaviour).\nsomething has failed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25331497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25331637", "body": "I disagree here - the symptom should not change the cause.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25331637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25632473", "body": "AS the schedule will be rejected by the TestExtension (rejectedStart) isn;t this just a test that has a race condition and may randomly fail?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25632473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25632968", "body": "if that's the case then why are we asserting that our build was a success - shouldn't it fail?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25632968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25636026", "body": "was my confusion - I incorrectly assumed the value of the TestExtension was to aid debuggin in Jenkins - not to restrict it to only be injected into the named test.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25636026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26044714", "body": "BTW: for documentation example.com should be used in future.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26044714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26045570", "body": "nit: should be a sentence.  \"Please enter the Git repository url.\" (or as this is already git in the context  - \"Please enter repository url\".\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26045570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26426986", "body": "No - the user sees a `FlowInterruptedException`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26426986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27427318", "body": "Can you normally override BUILD_TAG in freestyle with the envinject plugin?  \nIf you can seems like a bug - I would not expect that you can override builtin Jenkins contributed variables (admittedly I once wrote a plugin that did exactly that, but plugin code and variables are different.)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27427318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27428580", "body": "Hmmm.\nnulled= should be an empty string not null.  In the shell I would expect that it sets a variable (that is if you execute set or ENV i would expect it to be returned.)  Which isn't possible with the current syntax - so maybe this should be a map (key/value) instead? \n\nif you want it to be unset (or nulled) then seems like withEnv(['NULLED'=null, 'FOOBAR=WIBBLE'])\n\n_Note_: windows behaves differently to bash here - which may make my arguments pointless :-/\n\n```\n$ export BOGUS=\n$ env | grep BOGUS\nBOGUS=\n$\n\nC:\\>set WIBBLE=\nC:\\>set WIBBLE\nEnvironment variable WIBBLE not defined\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27428580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27378137", "body": "assume isUnix?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27378137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27378565", "body": "don't you want to check it contains exactly that path (ie /home/jenkins/extra/bin:/usr/bin:/bin:/opt/bin should fail right?)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27378565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27378665", "body": "does this still work with checkpointing?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27378665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27388627", "body": "Thanks for the clarification.\n_BTW - in the linked documents the example checkpoint is inside a node :-o \n Most people will have stopped reading by the get down to the important bit of info that is burried further down._\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27388627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "StephenKing": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/b8a399bb800a51f4e91899541ce2aabb586c3eea", "message": "Update tag name for StackOverflow\n\nThe usage guidance of the [jenkins-workflow](http://stackoverflow.com/questions/tagged/jenkins-workflow) tag on StackOverflow recommends using tag [jenkins-pipeline](http://stackoverflow.com/questions/tagged/jenkins-pipeline) instead."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tarioch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/9ef8cebece207bb2920d6eeb240177b2c3a51dc3", "message": "Tracking SVN does not work with pipeline"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bitwiseman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/33014824d8d0a17146f5961ae4fd008ba808ffcc", "message": "Change \"slave\" to \"agent\"\n\nWe're moving to using \"agent\" instead of \"slave\"."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kuisathaverat": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/945d67b6e9d573bd7941ddabcf45053579bb3645", "message": "Update COMPATIBILITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d502ae9b66731853a2542c35568b72d9b2eb6515", "message": "Add ConfluencePublisher to compatibility list for pipeline"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alecharp": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/76c8619737dc3496356c8bb88fac5266dc3af638", "message": "Change syntax as plugin already compatible\n\nThanks @jglick"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a6bb2368763bf763241cd71bcce8e795be0bd8b2", "message": "Clover is compatible with Pipeline since 4.6.0"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82925940", "body": ":+1:\n\nwhy removing the `@author` on first commit?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82925940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "witokondoria": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/fceeee4fab43b0aad7aa6207157dcaa8a64341a7", "message": "moved MarathonStep to custom steps section"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/60baa7daa1b6130c2cf4ba4277a3634b71a999b6", "message": "Added third party marathon plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/1630a5f9d2d364c6f55570f4d251d50f997130a9", "message": "Noting release of vsphere-cloud-plugin including pipelines support"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DJViking": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/cef4671bce4c7a69cd5393174b68159124fa5ee9", "message": "[JENKINS-34981] Add valgrind-plugin to COMPATIBILITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7dfda062d1f6c202a98b83a7ca928297f356c9bc", "message": "Fix naming for NexusArtifactUploader in COMPATIBLITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7251c2d835227bd30ba67f010eb0c69d3d3d0ec6", "message": "[JENKINS-34943] Update nexus in COMPATIBLITY.md\n\nSupported as of 2.2"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/d3107677ecaf93d4dc42c0eacf684b2f44fa4c63", "message": "[JENKINS-34943] Add cppcheck to COMPATIBLITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/fbb0b831764b9fa1206dbc55419178bab9da887d", "message": "[JENKINS-34943] Add nexus to COMPATIBLITY.md"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "karlhaas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/766869d376dba6d17402381007ca393e65b2602c", "message": "FBR-284: fixt karma dependencies"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6b2cdf25e4611f775646f1f649abe2d2b168973d", "message": "Added plugin ID bitbucket-build-status-notifier"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e5685cadb28f4c530cdc306398e818e28267f7d0", "message": "Added BitbucketBuildStatusNotifier"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MikeCaspar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/21905d948f65ac05ae7df5fb42c7d3aa36e7a8ae", "message": "Change from quote to proper character"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/badcbc64d6f74510746f2d32535de1207380e611", "message": "Add missing 'character'"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/559008430132c21bb377c4a4c8b4c6fcd82816a4", "message": "Add IronMQNotifier to compatibility list for pipeline\nAdjust plugin-id to match jenkins site name of  ironmq-notifier"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/f22de8e21b49605b44a5b6c73080000b1782009c", "message": "Merge remote-tracking branch 'origin/master'\n\n# Conflicts:\n#\tCOMPATIBILITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ca943c3f5a0bffe8d6b3dfd65ed0100529b066a0", "message": "Add IronMQNotifier to compatibility list for pipeline\nAdjust plugin-id to match jenkins site name of  ironmq-notifier"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/50a90bd3fed3c026c46527a242fe8e755be7e50f", "message": "Add IronMQNotifier to compatibility list for pipeline"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hangdong": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a5798e947572ec285790f157e30673eb595e0966", "message": "jenkins 2.x specific direction\n\ndirection for find add maven option under jenkins 2.x"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cpoenisch": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/9e27d4bb282391b883c02207188ca96e1cbd407b", "message": "[JENKINS-31999] Adding ecutest-plugin to COMPATIBLITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6dba9b82739b9efcd00469931d53338f87eaa00a", "message": "[JENKINS-31999] Adding ecutest-plugin to COMPATIBLITY.md"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/81b6842899af1cc7a40e7465742d8533af80ee2b", "message": "[JENKINS-31999] Adding ecutest-plugin to COMPATIBLITY.md"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HRMPW": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/8e0538f940fc3e527e893fda93f7587d820773f4", "message": "Updating status of Build Failure Analyzer Plugin\n\nUpdated \"supported in\" for Build Failure Analyzer Plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6fd98f7d6c8cec2aa380ede56f914c093a830232", "message": "Update COMPATIBILITY.md\n\nAdding check for Build Failure Analyzer"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abayer": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/4cf7f120c0f100128e2f130991c5bed5a1d6a9dd", "message": "Adding Powershell to compat list"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "damianszczepanik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/0962882f4dfb546376a2beef391c0393340ec3cb", "message": "Added info about compatibility of Cucumber Reports Plugin"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "recena": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/17f0c3755c717bdfcd5820da0bad3b89c50986e8", "message": "Category ID has changed"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/98a1afc7748398d08df1bdf068e038baee353934", "message": "[JENKINS-31162] @amuniz's comment was addresed"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6bea194f47bd19bca555b87e9bbd4152c2f402f5", "message": "[JENKINS-31162] To prevent XSS"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/e99d4bc50b04553d14c209fe670228a6f435b196", "message": "[JENKINS-31162] Support for Item categorization in Jenkins 2"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12409260", "body": "@jglick Indeed, my mistake.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12409260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15073928", "body": "In the future:\n\n```\n<p>Note that this step is shorthand for the generic SCM step:</p>\n<pre>checkout([$class: 'SubversionSCM', remote: 'http://sv-server/repository/trunk']]])</pre>\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15073928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "kohsuke": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ff210c3819a66e6fec7772a3242ff105c3646513", "message": "[JENKINS-32925] Handle recursion\n\nUse stack to keep track of traversal."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/01d00339cbddcde55c2dcb5867d355ab349b061d", "message": "Rely on a released version\n\n1.0 botched due to the usual Maven problem (MRELEASE-812)"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/bc3464fa93e9d8b8a020143f5cd463c4d4b6aad8", "message": "Rely on a released version"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/ea27cd81831e6f588177d46d6bae66a87b2b0990", "message": "Specify what class to look for"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/227052d4a93fc16376bdb432de321a8ed04ac648", "message": "Use a deployed version"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/627d3cf09719554758b1a2e0ff12e69e73d6a950", "message": "Failed to update this"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c93978e905e5f837f6e846b9ad4dc2879f3d1479", "message": "This functionality is deprecated"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/66fb729c0ceb98d5e34890dc62eb2b6d4acf4d21", "message": "Switched to structs-plugin"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c1e68ae9db46a6040b25aab967f400ab03bf3d5c", "message": "Also for pipeline multibranch"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7cd381852be1c9ac2a44b81fc7b6c067e97f1f12", "message": "Added description\n\nAmong other places, this shows up in the setup wizard to explain what this plugin is."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a3d3209beacd7c98ae3e3b013d94458c71dafb03", "message": "Merge pull request #354 from jenkinsci/fix-action\n\nAdd/remove action was broken"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/4d6a55dc48cc9f4a90872ec4e2178027600d13c0", "message": "Add/remove action was broken"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/47426930", "body": "I've merged pull request #4 so I'm closing this.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/47426930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63106608", "body": "I have the change that makes FlowNode implement Saveable, which would let this be done as node.save(). It's working its way through the pipeline right now.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63106608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63141945", "body": "Extensions with the same ordinal is sorted by the display name alphabetically or the class name. See `ExtensionComponent.compareTo()`\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63141945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71244568", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71244568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71281816", "body": "Firstly, I just want to say this feature is incredible!!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71281816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71288431", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71288431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79202818", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79202818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79259739", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79259739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79482668", "body": ":+1: \n\nDon't let the perfect get in the way of better\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/79482668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8229449", "body": "This was while working with @tfennelly to show him how API exposure from the workflow plugin work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8229449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8522976", "body": "I've initially done exactly what you said, then realized that a really meaningful error message needs to talk about engine-specific concepts, such as referring to functions, printing stack traces, etc. \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8522976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8523001", "body": "I was looking for an example where a provided context and required context has an overlap, and this was an easy example. Yes, we need to override this function elsewhere.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8523001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8998336", "body": "That `ConcurrentModificationException` is a real issue, but I don't think that's related to this change, right?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8998336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549630", "body": "I think the other way around would be more problematic, because timer can fire before we have the `body`.\n\nEither way, for CPS execution it doesn't make any difference as the actual execution won't start until after the `start` method returns anyway.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20549630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550141", "body": "I'll have `BodyExecutionCallback` take `StepContext` as parameters, but the `wrap` is useful because many steps don't care about this callback and would rather pass `CpsStepContext` as `FutureCallback` so that the end of the body immediately ends the step.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550191", "body": "They provide convenience.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550429", "body": "Looks like in the end I didn't use this change. I'll roll back.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20550429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23487536", "body": "You can just inject Snippetizer as a field like `@Inject private Snippetizer snippetizer;` and avoid static `get` method.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23487536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23487656", "body": "Perhaps `execution.flowStartNodeAction.clear()` here?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23487656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23487757", "body": "I guess the future TODO is to support a specific slave. Sometimes credentials/network visibility demands that the checkout happen in a specific node.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23487757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23487798", "body": "Injection can be used here, too.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23487798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26418257", "body": "Users are going to see this exception, no? Don't we need to explain this like users will read it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26418257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26417940", "body": "`StepExecution` is persisted in program state, so this is OK. `BodyExecution`s are stored to allow cancellation of parallel branches.\n\n@jtnord is saying that if branches don't do any exception handling of its own, parallel step itself will not report failures in the other branches, and that's probably true. But the case I was thinking about is branches having steps with block scopes and that would see the exception and the flow graph will report it. (unverified, so this is just me thinking alound)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26417940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26418471", "body": "I'd also put the exception message and chain the original failure, since the exception can be visible.\n\nIt's bit like `InterruptedException`, that you'd often want to know who interrupted it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26418471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27189056", "body": "This is where I meant to leave the code example. For some people, \"plain try-catch-finally block\" isn't obvious. In my original version I was trying to emphasize that by having the actual snippet.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27189056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27319548", "body": "`$class` must die, granted not in this PR, but soon enough.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27319548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27319822", "body": "This pattern of a clean-up followed by delegation to `context` happens often enough that there it should be defined as another class. See `WorkspaceStepExecution.Callback` `TimerStepExecution.Callback`, and `ExecutorStepExecution.Callback`. `TmpDirStepExecution.Callback` is probably also that category.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27319822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "kmadel": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/46930e3c28fd5e52ca04b3ff8c97f1aaf1d640ec", "message": "[JENKINS-27652] Workflow support for Slack Notifications (Pre and Post build)\n\nSlack supports Jenkins Pipeline as of version 2.0"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexanderrtaylor": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/a52befc18cddcd153cf9468797bd1119e75c13b2", "message": "[JENKINS-33458] Note Sidebar Link plugin\n\nSidebar link Plugin added to Compatibility.md"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cast": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/7cd6e642059c637906fd9a88efaff085a744ae76", "message": "Added aws-lambda-plugin to compatibility.md"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kwhetstone": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/64e8b85a6f5c568663e23757b1bb121b8a1e8a46", "message": "Updates from suggestions."}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/2c725ba2dee158c87380837f56711e3d39ddc00c", "message": "Remove extra log statements"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/15881d92f84520c0e4205b8a6610d5c1e7275e8a", "message": "Check for null"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/6617e679c9bb1e3a96fe95f22bc484b4a7b4c168", "message": "Add tracking to prevent stack overflows."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tfennelly": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c83b2cc9f1759c0efd02ca39be4e110c197986f7", "message": "Use repackaged jQuery HPI\n\nThe jQuery plugin was bloated due to a bad assembly. See JENKINS-33245."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/61785859", "body": "Cause of blockage... good idea.  Thanks Jesse !!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/61785859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63139319", "body": "If the Saveable version is on the way then I'll close this and use that.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63139319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63139822", "body": "Ah... KK has already done it. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63139822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69243910", "body": "@jglick Looks fine to me as far as I get what the change is about.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69243910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69749212", "body": "Just to save looking... that CI test failure is because these test changes are depending on a SNAPSHOT of the coptartifact-plugin.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69749212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70284126", "body": "Yes I think it made sense to have these in workflow aggregator before workflow was released, but seems like these plugins can now depend on workflow and maintain these tests themselves, right? Less messy.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70284126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70921744", "body": "I think/hope this can be merged as soon as PR https://github.com/jenkinsci/mailer-plugin/pull/16 is merged upstream.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/70921744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71056833", "body": "@reviewbybees anyone else that can review this?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71056833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71230625", "body": ":+1: \n\nI assume there's a warning of some sort allowing you to follow up and fix?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71230625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71309629", "body": "@jglick oops I didn't realise that was a sin, sorry.\n\nIt's kinda funny. Last place I worked, you'd get your b**ls handed to you in a jar if you didn't `git pull --rebase ...` before pushing changes to a project. It was more or less universally considered bad to just merge due of the ugly history that was left after. Doctors differ and patients die :)\n\nEDIT: The above might sound like I disagree with you, but I don't. What I did screws up the PR, which is bad. Sorry about that. Just a habit that I need to stop (or at least push back to the PR before - so the PR merges properly in github).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71309629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71320887", "body": "Awesome feature Jesse !!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71320887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72652034", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72652034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74721988", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74721988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74880341", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74880341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75220139", "body": "So the main thing so far has been the upgrade of `groovy-cps`and the use of `org.jboss.marshalling.reflect.SerializableClassRegistry` and `java.beans.Introspector` to clean out the classes loaded by the script classloader?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75220139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75269031", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75269031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75378533", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75378533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75380020", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75380020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75427249", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75427249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75456416", "body": ":+1:  again if it's needed\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75456416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75456971", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75456971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75730144", "body": "I think I get it for the most part so :+1: \n\nI do think some of the data bound getter checking/inspect code looks a bit incomplete (e.g. assumption about method names always starting with \"get\"), but that wasn't part of this changeset and I suppose once Jenkins people know about this they will always use \"get_\" and not e.g. \"is_\" etc.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75730144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75763113", "body": "@jglick Ah I was wondering why it appeared like that - I thought it was some new Github thing :smile:. I probably did exactly as you suggest coz I sometimes go through the changes one commit at a time as it can be easier to see what's happening. I think you might have done this too coz I seem to remember a similar review comment from yourself in a different PR.\n\nAnyway ... :+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75763113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76052462", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76052462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76810314", "body": ":+1: assuming that test is ok\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76810314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76932929", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76932929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76952500", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76952500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76981135", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76981135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77061818", "body": "Oh yeah thanks ... @reviewbybees\n\n:smile: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77061818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77134519", "body": "Spurious CI failure .. forcing a new build ... no changes were made so no need to recheck anything.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77134519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77135647", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77135647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77162875", "body": "@jglick tested this fix so far and it fixes the issue (without requiring a Jenkins restart). Will now look at the other things you were proposing.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77162875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77174308", "body": "@reviewbybees or the 12hr rule will be invoked\n\n(just kidding about the 12hr rule :smile: )\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77174308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77176682", "body": "@jglick Might leave as is for now. Thanks.\n\nIf the `IllegalStateException` is thrown inside `getChannelName` then it's harder to provide a decent exception message. In the case of `WorkspaceActionImpl`, you'd need to pass in the `workspace` name to get the message to the same level of detail in the error.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77176682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77192233", "body": ":+1: \n\nNote sure I totally understand it though (`StaplerReferer` etc`).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77192233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77230804", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77230804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77371318", "body": "@reviewbybees please\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77371318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77386315", "body": "@jglick I updated the list of unavailable variables and it's kinda lengthy :disappointed:\n\nMaybe we need to do something specific to this coz this looks bad imo?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77386315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77434090", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77434090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77435535", "body": "> `JENKINS_URL`, `BUILD_URL`, and `JOB_URL` are definitely _supposed_ to be there. `DefaultStepContext.getEnvironment` might be at fault here. File a bug, and if you feel up to it, fix it.\n\nRight, I thought they were too because I had an example script that I know used to work and was using `BUILD_URL`. I got the following list of vars from outputting `env.getEnvironment().keySet()` in a script and it produced:\n\n```\n[BUILD_DISPLAY_NAME, BUILD_ID, BUILD_NUMBER, BUILD_TAG, CLASSPATH, HUDSON_HOME, HUDSON_SERVER_COOKIE, JENKINS_HOME, JENKINS_SERVER_COOKIE, JOB_NAME]\n```\n\n> JENKINS-27145 has an analysis of what normally sets every variable I know of.\n\nI did read that but would need to read it again ... kinda didn't add up for me at the time. Sorry.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77435535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77556946", "body": "@jglick ok, not sure how I tested `BUILD_URL` and came to the conclusion it was not there (I was sure I did an `echo` test on it and it printed `null`). Anyway, did what you said above and you are right; some of the vars I said were not present are present.\n\nSo are we good with this then?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77556946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77606294", "body": "@jglick ok I think that's fixed now using `BlockEndNode` - I was just using it incorrectly.\n\nAlso removed `ParallelLabelAction.getBranchName()` as requested. Hopefully tests pass and we can give it a thumbs up ;)\n\nBack to Basketball match now :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77606294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78510967", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78510967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78882027", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/78882027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/81539885", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/81539885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82925329", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82925329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82925720", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82925720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83184800", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83184800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83536645", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83536645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83695123", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83695123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83772697", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83772697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/19864113", "body": "Cool... I was wondering about that actually and meant to add it as a comment in the PR description.\n\nWhen wondering about this I was also wondering what was the logic behind where the different Action impls are located... some in api, some in step-api, some in basic-steps, support etc.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/19864113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/19864258", "body": "Ok.. will rename.\n\n\"PauseNode\" as in \"this node causes the run to pause\".\n\nThe \"Action\" suffix on many of these kinda makes little sense to me anyway since these are not performing an \"action\" per se :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/19864258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20391408", "body": "Yeah, I have that sorted in https://github.com/tfennelly/workflow-plugin/commit/0958016795daf1f4a5fd1197b041962f5c6bef41 and will create a PR for that.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/20391408/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22863352", "body": "Sure, I'll do that. I noticed `CoreStepTest` after I had created `CopyArtifactBasicTest`.\n\n`CoreStepTest` will get very cluttered if all of these tests are dumped in there.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/22863352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23129411", "body": "Makes no sense to me either :( Has all the signs and smells of a brain fart.\n\nI'd say I thought it was needed in the case where there's an error sending, but then stupidly applied to to the config checks too.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23129411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23131933", "body": "Thanks for spotting `@CheckForNull`. I copied it from elsewhere thinking it would result in a runtime check, but then realised it didn't and was just a build time findbugs check.\n\nWhen you said it \"should be a `@DataBoundConstructor`\" I was thinking the args would be auto-checked for null but that does not seem to be the case. If so, then I don't really see the \"benefit\" of `@DataBoundConstructor` other than if it's a convention.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23131933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23131943", "body": "Fair point.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23131943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23131945", "body": "`charset` can't be set to `null` or an empty string.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23131945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23131961", "body": "I agree that `MailStepExecution` would be easier to maintain inside `MailStep` (my natural inclination would be to do that), but this is not how it's been done for the other steps i.e. they have all been implemented in separate java files (at least the ones I checked). It's a small thing though either way. I'll move them together into one.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23131961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23528187", "body": "The new `mail` step is in 1.2 of the `workflow` plugin (not the `mailer` plugin).\n\nMy interpretation of the format in this doc is that the first token is the name of the step, then the second is the name of the plugin (i.e. `workflow` here). So I should probably change the first token from `mailer` to `mail`.\n\nI do agree though that the current format is not too clear and can be misinterpreted.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23528187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23528295", "body": "Nah, on second review, the first token is probably the plugin name.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/23528295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24846751", "body": "Why convert the `actions` `List` provided in the constructor to an array and then back to a `List` in the `actions` method? In case the List gets modified or something?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24846751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25376291", "body": "I assume the fact that `step` is marked `optional=true` means it can, in theory, end up being null, right? If so, does it's use need to be checked?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25376291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25378158", "body": "As a general rule I am not a fan of \"magic\" code e.g. CDI, Aspects (anyone use them at all now?) and the like. Sure they can make the code easier to read if you're just interested in getting a general feel for how something works, which is great as long as everything works. If there's a problem though, debugging etc become a pitarse.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25378158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25634831", "body": "@jtnord I think it's the downstream job that fails, which should be irrelevant to the Workflow job since it's not waiting on it (`wait: false`), right?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25634831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776132", "body": "It does.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776156", "body": "I'll check for it but the existing code was not checking for it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776450", "body": "@jglick We can do that but not sure I see how it's more robust.\n\nAs a matter of interest - what is this listener giving anyway i.e. why doesn't `WorkspaceActionImpl` etc just call something that iterates the list of `Computer`s directly off the `Jenkins` instance? It's all in memory already so I don't see the benefit of creating a secondary list.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25776450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25893576", "body": "Nit: variable names like `p` and `n` are not very friendly when reviewing code where the change does not show the variable decl e.g. in this case you can't see what `n` is, meaning you have to view the full source to see what it is.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25893576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869506", "body": "Yes I tested it and, to my surprise, it does work.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25869506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943570", "body": "Sorry, I thought you wanted it to extend `LabelAction`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943606", "body": "ok :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943699", "body": "I prefer having checks like that even when, in theory, they are not needed atm (that can change if someone changes the called code). That said, I'll remove it if you feel strongly about it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943866", "body": "Ok, but it's not really the thread name, is it? Or maybe it is by coincidence. Totally cool with renaming though. I do remember now that you did mention a name like that. I had just forgotten :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943949", "body": "Yeah maybe. Just means we need to capture it by type earlier then. I suppose casting it isn't too ugly.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25943949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25944002", "body": "Sure .. I made it protected because I initially had something else in mind and thought I'd be writing tests specifically targeting it, which never happened. Thanks for spotting it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25944002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25954815", "body": "Fair point. But it seems like I do need some way knowing when to stop searching up through the parents, otherwise I run into the situation where the `FlowEndNode` finds the `ParallelStep` as a parent (which seems very fishy to me, but I assume correct - [screenshot](https://www.dropbox.com/s/6npn2zqd3rk5w8y/Screenshot%202015-03-06%2015.20.10.png?dl=0)) and we end up thinking the end nodes are part of the parallel step, which is obviously not right.\n\ne.g.\n\n```\nStarted\nRunning: Allocate node : Start\nRunning on master in /var/folders/nw/tdwkgqsx1bj91gbwybt4d8540000gn/T/junit4918197128410133531/junit7632045101504281797/workspace/demo\nRunning: Allocate node : Body : Start\nRunning: Execute sub-workflows in parallel : Start\n[a] Running: Parallel branch: a\n[b] Running: Parallel branch: b\n[a] Running: Print Message\n[a] echo a\n[a] Running: Print Message\n[a] echo a\n[a] Running: Execute sub-workflows in parallel : Body : End\n[b] Running: Print Message\n[b] echo b\n[b] Running: Print Message\n[b] echo b\n[b] Running: Execute sub-workflows in parallel : Body : End\n[a] Running: Execute sub-workflows in parallel : End\n[a] Running: Allocate node : Body : End\n[a] Running: Allocate node : End\n[a] Running: End of Workflow\nFinished: SUCCESS\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25954815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25955024", "body": "You're such a NIT picker ;)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25955024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25955435", "body": "OK, thanks. Need to think about that (and debug) :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25955435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25957012", "body": "@jglick Using `BlockEndNode` is better but still not quite right. See the `Running: Execute sub-workflows in parallel : Body : End` logs think they have a `ThreadNameAction` parent. Will investigate more later. Thanks Jesse.\n\n```\nStarted\nRunning: Allocate node : Start\nRunning on master in /var/folders/nw/tdwkgqsx1bj91gbwybt4d8540000gn/T/junit6508583420884267681/junit4964712954863688158/workspace/demo\nRunning: Allocate node : Body : Start\nRunning: Execute sub-workflows in parallel : Start\n[a] Running: Parallel branch: a\n[b] Running: Parallel branch: b\n[a] Running: Print Message\n[a] echo a\n[a] Running: Print Message\n[a] echo a\n[a] Running: Execute sub-workflows in parallel : Body : End\n[b] Running: Print Message\n[b] echo b\n[b] Running: Print Message\n[b] echo b\n[b] Running: Execute sub-workflows in parallel : Body : End\nRunning: Execute sub-workflows in parallel : End\nRunning: Allocate node : Body : End\nRunning: Allocate node : End\nRunning: End of Workflow\nFinished: SUCCESS\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25957012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26707627", "body": "Why use the log file as the key (Vs say the `Run` instance or its externalisable Id) ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26707627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26707888", "body": "`active` is meant to be a static, right?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26707888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26708135", "body": "Ok sorry... I see what this is doing.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26708135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26780883", "body": "I always assumed `$` would have been an invalid char in a java identifier :smile: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26780883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27559876", "body": "Perhaps could be simplified further to:\n\n```\nEnvVars env = new EnvVars();\nif (contextualEnvironment != null) {\n    env.putAll(contextualEnvironment);\n}\nenv.putAll(customEnvironment);\n```\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/27559876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29233396", "body": "Where is the `plugins.sh` script?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29233396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29233434", "body": "Oh maybe it's in `jenkins:1.596.2` ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29233434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29681661", "body": "Does `Run` not have a `getEnv` method wrapping access to the actions etc? I know it's API could explode if you added everything to it, but this one seems fundamental to me.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29681661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29682741", "body": "What is the scope of this \"singleton\"? A `Run`? My gut tells me to stay away from using the word \"Singleton\" in the naked form i.e. add something to it e.g. `RunFlowSingleton`.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29682741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29682989", "body": "Not relevant to this PR really but, does `Run` not have a `getEnv` method wrapping access to the actions etc? I know it's API could explode if you added everything to it, but this one seems fundamental to me.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29682989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29683571", "body": "Should there be a `@Nonnull` on the `script` arg?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29683571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "bsideup": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/5af4fe43ff5c16f17e129fa8b221dbb266f46a47", "message": "propose forward2docker as an alternative to `boot2docker ip`"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mgaunin-cloudbees": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/bfe1c9132ffd2f768c4a8216985ffa179c021652", "message": "COMPATIBILITY.md update for stashNotifier\n\nadded stashNotifier plugin as not compatible (cf. issue#92) in _Build steps and post-build actions_ section"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/163097432da114747d05eb337b3b2e60dcf24d15", "message": "COMPATIBILITY.md update for stashNotifier\n\nadded stashNotifier plugin as not compatible"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rpionke": {"issues": [], "commits": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/commits/c4958a271d9f75794e69d8e3ec541f50113726c3", "message": "Adding performance-signature-dynatrace to COMPATIBILITY.md\n\ndon't know if i should name the other 5 builders PerfSigStart/Stop Recording, PerfSigActivateConfiguration, PerfSigMemory/Thread Dump"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pesetskyps": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/441", "title": "powershell", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jbriggs22": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/440", "title": "Updated support status for Coverity Plugin", "body": "As of Coverity plugin version 1.10.0 there is support for pipeline. We created a new publisher step instead of working pipeline support into the existing `CoverityPublisher`. Also added a `SimpleBuildWrapper` to use a `CoverityToolInstallation` on the path.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "artem-fedorov": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/436", "title": "[JENKINS-32650] Update compatibility", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hypery2k": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/423", "title": "Adding rocketchat-notifier plugin", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "anenviousguest": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/403", "title": "[JENKINS-34000] Added TapPublisher to the list of compatible steps", "body": "https://issues.jenkins-ci.org/browse/JENKINS-34000\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cloudbees-pull-request-builder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46076666", "body": "[plugins \u00bb workflow-plugin #136](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/136/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46076666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46077562", "body": "[plugins \u00bb workflow-plugin #139](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/139/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46077562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46077714", "body": "[plugins \u00bb workflow-plugin #145](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/145/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46077714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46206359", "body": "[plugins \u00bb workflow-plugin #147](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/147/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46206359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46208021", "body": "[plugins \u00bb workflow-plugin #149](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/149/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46208021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46231481", "body": "[plugins \u00bb workflow-plugin #157](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/157/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46231481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46232340", "body": "[plugins \u00bb workflow-plugin #158](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/158/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46232340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46232378", "body": "[plugins \u00bb workflow-plugin #159](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/159/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46232378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46233866", "body": "[plugins \u00bb workflow-plugin #160](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/160/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46233866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46339296", "body": "[plugins \u00bb workflow-plugin #173](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/173/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46339296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46351704", "body": "[plugins \u00bb workflow-plugin #181](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/181/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/46351704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/47094310", "body": "[plugins \u00bb workflow-plugin #193](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/193/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/47094310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/47115688", "body": "[plugins \u00bb workflow-plugin #194](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/194/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/47115688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49218365", "body": "[plugins \u00bb workflow-plugin #212](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/212/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49218365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49223165", "body": "[plugins \u00bb workflow-plugin #213](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/213/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49223165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49252198", "body": "[plugins \u00bb workflow-plugin #216](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/216/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49252198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49266021", "body": "[plugins \u00bb workflow-plugin #217](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/217/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49266021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49441647", "body": "[plugins \u00bb workflow-plugin #220](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/220/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/49441647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50930938", "body": "[plugins \u00bb workflow-plugin #235](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/235/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50930938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50949828", "body": "[plugins \u00bb workflow-plugin #242](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/242/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50949828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50950379", "body": "[plugins \u00bb workflow-plugin #244](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/244/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50950379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50951032", "body": "[plugins \u00bb workflow-plugin #246](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/246/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50951032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50951853", "body": "[plugins \u00bb workflow-plugin #248](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/248/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/50951853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51063477", "body": "[plugins \u00bb workflow-plugin #250](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/250/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51063477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51064561", "body": "[plugins \u00bb workflow-plugin #252](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/252/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51064561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51068072", "body": "[plugins \u00bb workflow-plugin #254](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/254/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51068072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51070527", "body": "[plugins \u00bb workflow-plugin #256](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/256/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51070527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51070925", "body": "[plugins \u00bb workflow-plugin #257](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/257/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51070925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51112359", "body": "[plugins \u00bb workflow-plugin #265](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/265/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51112359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51116042", "body": "[plugins \u00bb workflow-plugin #267](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/267/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51116042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51119424", "body": "[plugins \u00bb workflow-plugin #269](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/269/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51119424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51120026", "body": "[plugins \u00bb workflow-plugin #270](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/270/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51120026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51127302", "body": "[plugins \u00bb workflow-plugin #272](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/272/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51127302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51199300", "body": "[plugins \u00bb workflow-plugin #274](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/274/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51199300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51200065", "body": "[plugins \u00bb workflow-plugin #275](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/275/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51200065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51203220", "body": "[plugins \u00bb workflow-plugin #277](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/277/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51203220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51204865", "body": "[plugins \u00bb workflow-plugin #278](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/278/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51204865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51206170", "body": "[plugins \u00bb workflow-plugin #279](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/279/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51206170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51206895", "body": "[plugins \u00bb workflow-plugin #280](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/280/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51206895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51212195", "body": "[plugins \u00bb workflow-plugin #283](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/283/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51212195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51220284", "body": "[plugins \u00bb workflow-plugin #285](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/285/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51220284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51220892", "body": "[plugins \u00bb workflow-plugin #286](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/286/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51220892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51233970", "body": "[plugins \u00bb workflow-plugin #290](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/290/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51233970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51241917", "body": "[plugins \u00bb workflow-plugin #295](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/295/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51241917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51651670", "body": "[plugins \u00bb workflow-plugin #315](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/315/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51651670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51666292", "body": "[plugins \u00bb workflow-plugin #318](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/318/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51666292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51666676", "body": "[plugins \u00bb workflow-plugin #319](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/319/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/51666676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/52685035", "body": "[plugins \u00bb workflow-plugin #347](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/347/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/52685035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/53326484", "body": "[plugins \u00bb workflow-plugin #352](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/352/) FAILURE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/53326484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/53329367", "body": "[plugins \u00bb workflow-plugin #354](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/354/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/53329367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/53338476", "body": "[plugins \u00bb workflow-plugin #356](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/356/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/53338476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/53840060", "body": "[plugins \u00bb workflow-plugin #367](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/367/) UNSTABLE\nLooks like there's a problem with this pull request\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/53840060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/54878809", "body": "[plugins \u00bb workflow-plugin #379](https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/379/) SUCCESS\nThis pull request looks good\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/54878809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dcoraboeuf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/47113823", "body": "Seems to be duplicated by pull request #4 \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/47113823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "anafke": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/52712717", "body": "I mistakenly pushed this commit, rather than sync my local changes with my forked repository.  It will not happen again in the future.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/52712717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "daniel-beck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63679885", "body": "That was probably just due to the rename. The link was missing the newly added `-plugin` suffix.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/63679885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8245185", "body": "Isn't it a bit early to collect `@Deprecated` methods?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8245185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12385469", "body": "So, what needs to be installed?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12385469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15180344", "body": "@jglick https://github.com/jenkinsci/workflow-plugin/blob/958e6e70ce8c45bd5374d3ca3f45d3b8f91a6983/basic-steps/src/main/java/org/jenkinsci/plugins/workflow/steps/ArtifactUnarchiverStepExecution.java#L39 looks like this is mandatory.\n\nAlso, could provide a `**` or similar example for the Ant pattern, likely would have prevented confusion [on the users list](https://groups.google.com/forum/#!msg/jenkinsci-users/F5DcqH1JY30/SIKu7lNNDwAJ).\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15180344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "ikeike443": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/67090507", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/67090507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "stephenc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751635", "body": "+1 from TBMOTGH\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751681", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69751681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71195245", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71195245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72637384", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/72637384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74833912", "body": ":+1: from the blind man on the galloping horse\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74833912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74834113", "body": "(checkpoint) changes so far look ok to me, but I lack the context to be certain\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74834113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75264272", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75264272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75575114", "body": "It's all greek to me!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75575114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75733553", "body": ":+1: from the blind man on the galloping horse (I know I need to dig deeper into this, but I have other stuff to work on)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75733553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75770597", "body": ":+1: from TBMOAGH\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75770597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75939886", "body": "@jglick :+1:  on interim merge\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/75939886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76549072", "body": ":+1: I am arming the drones to deploy against the Guice fans\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76549072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76952443", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76952443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77120843", "body": ":+1: from me but did you ever resolve the `$class` fight with @kohsuke \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77120843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77190147", "body": "I'm still :+1: but I think we want @kohsuke to review the `$class` stuff as it seems against his vision\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77190147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77339627", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77339627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77344397", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77344397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77566879", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77566879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77567154", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77567154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77579771", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77579771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8374741", "body": "You're probably not activating the release profile\n\nOn Thursday, October 30, 2014, Jesse Glick notifications@github.com wrote:\n\n> Does not appear to have worked.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/workflow-plugin/commit/c6683ef39717e1f7c02dfc8cf0bb9e2eaf45f5bf#commitcomment-8373916\n> .\n## \n\nSent from my phone\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8374741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25376972", "body": "> I curse @kohsuke for plaguing this plugin with Guice\n\nWhat do you expect from the Guice fanboy. Excessive use of Guice considered harmful.\n\n(Just like goto has some legitimate and useful use cases, the same for Guice... but you need to clearly define the layer at which Guice is being applied and be consistent in that application otherwise you end up with a similar mess to the cross layer EJB issue that plagued JavaEE apps)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25376972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25702296", "body": "Isn't this another thread pool that will need fix-up for testing?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25702296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25705107", "body": "So it doesn't need to be context resetting then?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25705107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25853095", "body": "technically this **should** be asserting while holding the Queue lock... but in a test where decisions are not being made it is probably safe enough\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25853095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26376736", "body": "@jtnord if you are going to be nit picky on people using `l` as a variable identifier and the perfectly cromulent word iff (which can only embiggen your soul) _and_ you insist on using a brain-dead IDE, please do not submit pull requests with gratuitous whitespace changes ;-)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/26376736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "rsandell": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69760008", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/69760008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71449248", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71449248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76927696", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76927696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82925759", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82925759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82926997", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/82926997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "gclayburg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71103591", "body": "Hey Jesse - great work on the plugin.  This opens up much more advanced ways to manage builds!\n\nAnyway, this was my first time trying to build a Jenkins plugin.  I don't have any special settings.xml or other Jenkins projects built in my local repo.  That probably has something to do with it.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71103591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74919144", "body": "Hey Jesse - you are correct, IDEA just needs this static file to exist somewhere in the classpath.  I just stuck it in one of your modules so that maybe it could be maintained there alongside the workflow step implementation.  I'm not that familiar with the workflow codebase, but you probably could create something to generate this file.  In some cases, there is duplication between Javadoc in the step implementations and the existing help system that you see on the Jenkins config page.  In any event, it is also possible to create multiple gdsl files, perhaps one for each plugin?\n\nSo, the motivation for doing this was to allow IntelliJ to help flag syntax errors in the build script before a complete Jenkins build ran and reported errors.  In my case, I was learning the basic workflow suite and the options available.  I just prefer having the documentation available in the editor when possible.  I suppose once you are intimately familiar with all the steps you wouldn't need this, but it helped me.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74919144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "reviewbybees": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71312645", "body": "I prefer to rebase _and_ then do an explicit merge commit... Unless it's a single commit that you are merging.\n\nFor medium to large changes I dislike squashing to a single commit as you don't see how it was developed and code review becomes big-bang rather than incremental\n\nSent from my iPhone\n\n> On 24 Jan 2015, at 10:27, Tom Fennelly notifications@github.com wrote:\n> \n> @jglick oops I didn't realise that was a sin, sorry.\n> \n> It's kinda funny. Last place I worked, you'd get your b**ls handed to you in a jar if you didn't git pull --rebase ... before pushing changes to a project. It was more or less universally considered bad to just merge due of the ugly history that was left after. Doctors differ and patients die :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n> \n> ## \n> \n> You received this message because you are subscribed to the Google Groups \"engineering-code-reviews\" group.\n> To unsubscribe from this group and stop receiving emails from it, send an email to engineering-code-reviews+unsubscribe@cloudbees.com.\n> To post to this group, send email to engineering-code-reviews@cloudbees.com.\n> To view this discussion on the web visit https://groups.google.com/a/cloudbees.com/d/msgid/engineering-code-reviews/jenkinsci/workflow-plugin/pull/39/c71309629%40github.com.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71312645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "apemberton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71326415", "body": "Agree. Very good idea. :)\n\nOn Sat, Jan 24, 2015, 10:00 AM Tom Fennelly notifications@github.com\nwrote:\n\n> Awesome feature Jesse !!\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/jenkinsci/workflow-plugin/pull/40#issuecomment-71320887\n> .\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/71326415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "FlxPeters": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74644448", "body": "+1 Thats pretty cool\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/74644448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ndeloof": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76472925", "body": "I indeed have seen test regression, don't understand how this could work using isAssignableFrom the wrong way. Will run them in a debugger.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/76472925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77551592", "body": "@reviewbybees\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77551592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553651", "body": "ok, then need to rebase before getting this merged.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77553651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77554513", "body": "afaik the user-friendly name of a credential is not guaranteed to be unique (I've seen duplicated on my own instance, maybe not using \"latest\"). So if I use it here I'm not sure about users intention.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77554513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77554704", "body": "or maybe you're talking about GitStep/config.jelly, not DSL syntax ?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77554704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77609900", "body": "https://jenkins.ci.cloudbees.com/job/plugins/job/workflow-plugin/986/ fails but pass on my workstation :-\\\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77609900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77619749", "body": "annoying if I can't reproduce :-\\\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77619749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25965609", "body": "Why ? For standard component which get serialized to xml I know we can't do that, be a workflow step is serialized according to it's @DataBound attributes.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25965609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25993989", "body": "will need to backport this to git-plugin then\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25993989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "woohgit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77230560", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77230560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "varmenise": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77561944", "body": "@reviewbybees (need another +1)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/77561944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24073388", "body": "I think I am just comparing \"Alice\" with the submitter parameter defined in the input set definition above:\n assertEquals(\"alice\", is.getInput().getSubmitter()); does not look like failing \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/24073388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25679588", "body": "should this be \n`assertEquals(is.getInput().getSubmitter(), action.getUserName());` instead? though username=id\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25679588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25767839", "body": "I understand your point - but then, I am not sure why the code above works, [as well as](https://github.com/jenkinsci/jenkins/blob/419d670cd0f672b0b3eba6ad4bcc97e8c6948424/core/src/main/resources/hudson/model/Cause/UserIdCause/description.jelly). \n![screen shot 2015-03-04 at 12 24 34](https://cloud.githubusercontent.com/assets/5398781/6482732/79a4e0c6-c269-11e4-9399-b10880b8f801.png)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25767839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nexus49": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83741821", "body": "Thanks Jesse for you feedback. Its my first contribution so i still figure some things out... Let me know if you have further feedback for me to incorporate.\n\nCheers,\nBastian\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/issues/comments/83741821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "flesire": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/6952276", "body": "Typo : \"checck out\" must be replace by \"check out\". \n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/6952276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "esinsag": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/7259135", "body": "Can you also update the docker image (jenkinsci/workflow-demo) you are using for the demo with the latest plugins and configuration?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/7259135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "KostyaSha": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8750677", "body": "Aren't better store filters in .xml? Example https://github.com/jenkinsci/git-plugin/blob/master/src/findbugs/excludesFilter.xml\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8750677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8778916", "body": "Do you mean `java.lang.SuppressWarnings` ? \nBtw http://findbugs.sourceforge.net/api/edu/umd/cs/findbugs/annotations/SuppressWarnings.html it deprecated.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/8778916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/11916659", "body": "Maybe can -> must?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/11916659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/11916805", "body": "imho part of this description relates to generic java/plugin development knowledge/quality and should be hosted under \"Extend jenkins\" documentation.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/11916805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/11916833", "body": "I not sure how setter/jenkins will work with objects stored in HashMap, they must be immutable afaik.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/11916833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12035979", "body": "Please put on new line following other coding style\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12035979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12297986", "body": "Finally some description. :+1: \nCould you also describe why you can't create some proxy/adapter that will deal with existing AbstractProject methods (not all jobs requires polling and those that need it can obviously fail and only then require core upgrade)?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12297986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12552189", "body": "@stephenc maybe you can expose your kick provisioner hack into plugin (if it not CB strategic)? :)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/12552189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15355651", "body": "For Type error try 1.625.3\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15355651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "kentoj": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10529154", "body": "This is an excellent addition to the tutorial. It would be nice to have a more clear example on how to use the build number in flow.groovy. I posted a question to Jenkins' Google groups on it: [post](https://groups.google.com/forum/#!searchin/jenkinsci-users/workflow-plugin%7Csort:date/jenkinsci-users/rQe45k6Uu3E/HN2ZcDfKfkIJ)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10529154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "perrefe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10834765", "body": "And is there a way to access to the list or array of input parameters to iterate over it?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10834765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10895233", "body": "Nice trick!, but in my actual scenario I have a set of boolean parameters (names of servers, and yes, I could enter their names comma separated but it is not practical at all.) where each one represent a server that will be affected by the job if the input checkbox is checked. So it should be easy to iterate all those params searching for the ones with true values. \n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10895233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TG9541": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10839649", "body": "@perrefe has a point here: it's obvious that one can do amazing things with CPS, but especially advanced Jenkins users who know Matrix Build, or other multi configuration techniques, well need some guidance for rewriting their solutions as CPS scripts. As long as there are open collection/list/string handling, or CPS transformation issues, this is of some importance (e.g. JENKINS-26307, JENKINS-27893, JENKINS-27916, JENKINS-27421).\n\nAh, yes, the question... to access an array of input parameters, make it a delimited string, and spIit it (like in the parallel test execution example) :-)\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/10839649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "cnmcavoy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/14446299", "body": "Why isn't this `>=`? If there has been more than 3 interruptions, there is no way for someone to \"undo\" one and get back to 3 to hard kill a job.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/14446299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "coolhead": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15088997", "body": "lot of things to learn from this info, awesome work!!!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15088997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mjdetullio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15164925", "body": "Overriding `isApplicable(Descriptor)` in this DescriptorImpl will allow you to filter SCMs.\n\nAlso note https://github.com/jenkinsci/branch-api-plugin/pull/24\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15164925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "lowsky": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15561908", "body": "nothing happened since 2 month...\n\nCan we help to get the version 1.9 released? \nCan I support testing the lastest version of the plugin:\n\nhttps://github.com/jenkinsci/embeddable-build-status-plugin\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/15561908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "amuniz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/17348364", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/comments/17348364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "harniman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25671249", "body": "ok - sorry I thought that was the plugin name. The entry class seems to be LogParserBuildStep - is that what I should put?\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25671249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25671372", "body": "Ok I've moved it, and based on the understanding this is now the class name not the plugin name, I've changed it to SvnTagPublisher\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/25671372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rpocase": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29525780", "body": "I definitely did. I'll get that fixed.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29525780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29526315", "body": "Yep, it worked on a local instance. I'll update it to you that definition.\n", "reactions": {"url": "https://api.github.com/repos/jenkinsci/pipeline-plugin/pulls/comments/29526315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}