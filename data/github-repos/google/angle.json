{"_default": {"1": {"Oletus": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/0e99b7a3bc8b474cba091ef65bb53264e6384ce2", "message": "Prevent changing AST expression type from outside\n\nTIntermNode classes now contain all the logic for setting node types.\n\nChanging the constant values of constant union nodes from outside is\nalso not necessary anymore.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Ic10d41b1e5f93152df440a655057591dc1b783b0\nReviewed-on: https://chromium-review.googlesource.com/863626\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/342b83d49c4d2d9ee5a51b89f8a60bf0cff1dfe9", "message": "Don't copy unmangled built-in names\n\nThis optimizes memory and CPU use of symbol table initialization.\nThis was measured to make a debug build of angle_unittests run around\n10% faster on Windows.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Icd5272c6cfc0d5122550c403621bfa5944c92a83\nReviewed-on: https://chromium-review.googlesource.com/859958\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/b60d30f71a672e10b38999ae26c6267ba6393739", "message": "Make TVariable type immutable\n\nThis enables using constexpr types for built-in variables and some of\nthe variables created in AST transformations.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Ie85b3c9872a071a7c023ced013b14ad91cff7cee\nReviewed-on: https://chromium-review.googlesource.com/868134\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/fa8869752a63e1818b0b8e53c2d18e7e0c6fe9e8", "message": "Fix handling array constructor statements in HLSL output\n\nArray constructors that are used as a statement by themselves need to\nbe pruned from the AST before writing HLSL output.\n\nThis fixes an assert in OutputHLSL.\n\nBUG=angleproject:2307\nTEST=angle_unittests\n\nChange-Id: Ib49461a4be173f3856f5a264ac0af8d818a61798\nReviewed-on: https://chromium-review.googlesource.com/874691\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/2c9cc8b6e81017b4b6f1655645191bc6a4e5eaeb", "message": "Don't duplicate symbol type information in AST nodes\n\nFunction prototype nodes and symbol nodes already refer to symbols\nthat have type information, so the type doesn't need to be copied to\nthe TInterm* AST node classes. Now type is only stored in those AST\nnode classes that represent other types of expressions. They use\na new TIntermExpression base class for this.\n\nSince now we may use the TType from builtin symbols directly instead\nof copying it, building the mangled names of types in the correct\nmemory pool is also required. The code now realizes the types of\nbuilt-in variables when they get added to the symbol table.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Ic8d7fc912937cb8abb1e306e58c63bb9c146aae9\nReviewed-on: https://chromium-review.googlesource.com/857005\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/28efd82c9119d8371154455b57d13dd14884e184", "message": "Fix dxgi support table generation script\n\nThe previous patch edited the generated file manually. Fix the script\nto generate the file so that angle_white_box_tests pass.\n\nBUG=angleproject:2300\nTEST=angle_white_box_tests\n\nChange-Id: Ie8f182b515721a56d6a2da2dac316aa4e296f005\nReviewed-on: https://chromium-review.googlesource.com/870113\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/ceffd20ce2d6ce3d5e92c7c3792af97bfa23fdf2", "message": "Set colorspace of D3D pbuffers according to DXGI format\n\nWhen a EGL pbuffer is created based on a D3D SRGB texture using\nEGL_ANGLE_d3d_texture_client_buffer, SRGB conversions are performed as\nif it was an SRGB surface. The value of EGL_GL_COLORSPACE now\nreflects that correctly. If the pbuffer is bound to a texture and used\nas a framebuffer attachment, querying GL_FRAMEBUFFER_COLOR_ATTACHMENT\nalso reflects that correctly.\n\nThe behavior is the same on both the D3D backend, where there is no\nnative interop involved, and on the GL backend using\nWGL_NV_DX_interop(2).\n\nThere are a few limitations on the GL backend that relies on native\ninterop:\n\n1. SRGB conversion for textures created this way can't be disabled\nusing the GL_FRAMEBUFFER_SRGB_EXT toggle that's exposed in ANGLE\nthrough EXT_sRGB_write_control. This is now documented in the\nEGL_ANGLE_d3d_texture_client_buffer spec. On the D3D backend this is\nnot a problem since EXT_sRGB_write_control is not supported either\nway.\n\n2. Creating a pbuffer out of a D3D11 texture with the format\nDXGI_FORMAT_B8G8R8A8_UNORM_SRGB does not work, even though it was\nlisted as one of the supported formats in the\nEGL_ANGLE_d3d_texture_client_buffer spec. It's now mentioned that\nsupport for this format is optional.\n\nBUG=angleproject:2300\nTEST=angle_white_box_tests\n\nChange-Id: I70ee0646680805e4469291a5b2ce59e92fda009e\nReviewed-on: https://chromium-review.googlesource.com/866743\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/cf180fccb24adbe48080876074b7a9cbd3435ab5", "message": "Keep TIntermSymbol data consistent in DeferGlobalInitializers\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I25bd8baded9c13e75555578e4b61b99a56e0c702\nReviewed-on: https://chromium-review.googlesource.com/850974\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/ea22b7a58bfde015d146c292a2ef65837d6e4aca", "message": "Constant fold array indexing and comparison\n\nA virtual function to get the constant value of an AST node is added\nto TIntermTyped. This way a constant value can be retrieved\nconveniently from multiple different types of nodes. TIntermSymbol\nnodes pointing to a const variable can return the value associated\nwith the variable, constructor nodes can build a constant value from\ntheir arguments, and indexing nodes can index into a constant array.\n\nThis enables constant folding operations on constant arrays, while\nmaking sure that large amounts of data are not duplicated in the\noutput shader. When folding an operation makes sense, the values of\nthe arguments can be retrieved by using the new\nTIntermTyped::getConstantValue(). When folding an operation would\nresult in duplicating data, the AST can just be left to be written out\nas is.\n\nFor example, if the code contains a constant array of arrays, indexing\ninto individual elements of the inner arrays can be folded, but\nindexing the top level array is left in place and not replaced with\nduplicated array literals.\n\nConstant folding is supported for indexing and comparisons of arrays.\n\nIn case constant arrays are only referenced through foldable\noperations, the variable declarations will be pruned from the AST by\nthe RemoveUnreferencedVariables step.\n\nBUG=angleproject:2298\nTEST=angle_unittests\n\nChange-Id: I5b3be237b7e9fdba56aa9bf0a41b691f4d8f01eb\nReviewed-on: https://chromium-review.googlesource.com/850973\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/ea78d2bb7a07660301ed407d4618f008b9f4395f", "message": "Prune unreferenced variables with a constructor initializer\n\nTreat aggregate constructors as having no side effects, which enables\npruning declarators that have a constructor initializer.\n\nSome logic in RemoveUnreferencedVariables is fixed to make this work\ncorrectly for structs. The bugs were previously not exposed since\nconstructors were treated as having side effects, but now that those\ncan be pruned the logic needs to be correct.\n\nBUG=angleproject:2298\nTEST=angle_unittests\n\nChange-Id: I6fbe61a9e82065196baa29c200bf556fc21d8962\nReviewed-on: https://chromium-review.googlesource.com/856499\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/c74ec1a5bbbd12541d19075b0d91a02f7e30bb14", "message": "Record gl_in array size in a symbol in ParseContext\n\nInstead of referring to the gl_in symbol in the symbol table, create\na gl_in symbol with the right array size once the array size is known.\nThis makes the type of TIntermSymbol nodes pointing to gl_in\nconsistent with the variable type.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I31673d33526a91f8d069ee8d7d2f181a49665fd0\nReviewed-on: https://chromium-review.googlesource.com/857004\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/0690e1aa31d4e0c9f1ab641e5c0dab75a79c026e", "message": "Add a workaround to clamp gl_FragDepth\n\nNVIDIA OpenGL drivers at least up to version 388.59 don't clamp\ngl_FragDepth when it is written to a floating point depth buffer.\nThis bug is now worked around by clamping gl_FragDepth in the shader\nif it is statically used.\n\nBUG=angleproject:2299\nTEST=angle_end2end_tests on NVIDIA\n\nChange-Id: I61589b2b0dd2813c4901a157c8d37e470063773c\nReviewed-on: https://chromium-review.googlesource.com/840842\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/b38dfde0a7237c32b9d6341e834276f486dc7948", "message": "Keep TIntermSymbol nodes consistent in PruneNoOps\n\nCreate new TVariables to change struct declaration qualifiers in\nPruneNoOps so that the node doesn't end up with an inconsistent\nqualifier from the variable.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I7f6cd557eb3e46f4ead4ffbe37d8960ff7776d10\nReviewed-on: https://chromium-review.googlesource.com/850673\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/765924f039f1231afe4e200b97bb64fae76507d0", "message": "Fold ternary and comma ops only after parsing is done\n\nIn case folding a ternary op or a comma op would change the qualifier\nof the expression, the folding is deferred to a separate traversal\nstep.\n\nAfter this there are no more cases where the type of a TIntermSymbol\nnode needs to differ from the type of the variable it is referring to.\nThere are still some cases where some parts of TIntermSymbol type are\nchanged while keeping the TVariable type the same though, like when\nassigning array size to gl_PerVertex nodes or sanitizing qualifiers of\nstruct declarations.\n\nBUG=angleproject:2267\nTEST=angle_unittests, angle_end2end_tests\n\nChange-Id: I1501c8d361f5f765f43ca810d1b7248d9e2c5986\nReviewed-on: https://chromium-review.googlesource.com/850672\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c71862aa324c4a7fd9f397cd770a509c1f576ec2", "message": "Store referenced interface blocks in a cleaner data structure\n\nThe previous code was hard to read since the referenced interface\nblocks stored a different type of node depending on if the interface\nblock was instanced or not.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Ie8fdb61a17280ca0875159702f819b884d08706b\nReviewed-on: https://chromium-review.googlesource.com/839443\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/bbd9d4c61e96d3736654ddd7624e68755a8ac218", "message": "Use TVariable instead of TIntermSymbol for variables\n\nThis removes unnecessary indirection. It's easier to just create\nTVariables in createSamplerSymbols, and to track referenced variables\nusing TVariable pointers instead of TIntermSymbol pointers.\n\nBUG=angleproject:2267\nTEST=angle_unittests, angle_end2end_tests\n\nChange-Id: Id1e75e04da084eb9026f581f22070b27a45615ba\nReviewed-on: https://chromium-review.googlesource.com/839442\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/8b5e8fdb3c353d46c81243b31889856181ff66ae", "message": "Replace remaining usage of TName with TSymbol\n\nTName used to contain just a subset of the information stored in\nTSymbol. It makes more sense to use TSymbol directly instead of\nconverting it to TName.\n\nThis also improves type safety a bit by making some functions only\ntake in TVariable or TFunction instead of the more generic TName.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Icb46923c25d33ebbbbc06ddc487da25957dda771\nReviewed-on: https://chromium-review.googlesource.com/829143\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/93b059db4a5ab007e5239dff61eae3656e8da286", "message": "Index symbols by id in OutputHLSL\n\nThis is cleaner than indexing them by their name string.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I0d0ef5e3f6a3f26c94f096b086cdf3da40d495e4\nReviewed-on: https://chromium-review.googlesource.com/845559\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/d8724a947bd8663a796a3dc70057a17fc91ae516", "message": "Start D3D constant register allocations from 1 on NVIDIA\n\nRecent NVIDIA drivers have a bug where a specific optimized path\ninside the driver doesn't handle constant register 0 correctly. Work\naround this by starting constant register allocations from 1. This\nshould make sure that the bug doesn't trigger if the ordering of\nuniforms is changed on the D3D backend.\n\nThe repro case seems to require some specific driver state to be set\nthat's used inside Chromium. Because of this we have not been able to\ndevelop a standalone test case so far.\n\nThe maximum number of available uniform slots is reduced accordingly.\nThis should not take them below required minimums in the spec.\n\nBUG=angleproject:2294\nTEST=WebGL tests on passthrough command buffer,\n     angle_end2end_tests --gtest_filter=*GLSLTest*Uniform*\n\nChange-Id: I92fff71efe5432ea7f15a7e90d497492514c65dc\nReviewed-on: https://chromium-review.googlesource.com/847481\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c33f1e8c35147a9e97390cedba50d886ee212db4", "message": "Simplify creating the call DAG\n\nDon't copy function name strings unnecessarily and traverse function\nbody nodes manually to avoid some extra traversal steps.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Ie010aabcb8bc78fa6abce397ea2bdd9092e74187\nReviewed-on: https://chromium-review.googlesource.com/847552\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/2768bc8a70b6f3626c1277ff1df3d11af00e7dbd", "message": "Clean up creating constant folded nodes\n\nIt's not necessary to set the qualifier on folded nodes separately,\nthey always use the qualifier of the node being folded.\n\nBUG=angleproject:1490\nTEST=angle_unittests\n\nChange-Id: Id2581ef4cae42d7137fbe0caf18c3fcacbf954c6\nReviewed-on: https://chromium-review.googlesource.com/847553\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/4728bdc805d718774760aded60e768d8e55dd108", "message": "Unify looking for symbols with a specific name in the AST\n\nKeep only one traverser for looking up symbol nodes by name instead\nof having two largely identical ones.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I36e906258180e22b7b1353cab79d90266d99fa0e\nReviewed-on: https://chromium-review.googlesource.com/836895\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/bed35d766712ca1248b90d67ea250e04eefbae01", "message": "Don't query names of empty symbols\n\nThis makes it possible to return a reference from TSymbol::name()\ninstead of a pointer. This is safer since it completely avoids the\npossibility of a nullptr dereference. An assert is making sure that\nthe function is not being called for empty symbols.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I44279f65989dbb828322843fc0216ba84d91dedf\nReviewed-on: https://chromium-review.googlesource.com/836894\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/b8cb939f5817e558ca29b9f9c2e2e15c20342eb7", "message": "Fix tracking variables in folded ternary operators\n\nThe result of folding a ternary operator may be a TIntermSymbol node\nwhere the qualifier doesn't match the qualifier of the variable that\nthe node is referring to.\n\nGet the qualifier from the variable instead of directly from\nTIntermSymbol when collecting variables in CollectVariables or when\ntracking referenced variables in OutputHLSL.\n\nBUG=angleproject:2288\nTEST=angle_unittests, angle_end2end_tests\n\nChange-Id: If294a7fe9dca50f2ebcea3feff887e72a521d395\nReviewed-on: https://chromium-review.googlesource.com/836893\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/f095799b54ea62f37b6af4e272c535b92562ea6d", "message": "Fix accessing the name of a nested struct definition\n\nWhen generating an error message about the struct nesting limit, the\ncode should make sure that the struct definitions are not nested.\nWhile nested struct definitions by themselves are also an error,\nthey're not a syntax error so parsing will continue after encountering\nthem.\n\nThis fixes a regression from commit: Don't allocate name strings for\nempty symbols.\n\nBUG=chromium:797156\nTEST=angle_unittests\n\nChange-Id: I4149fbe874c0e7ec90e690aec078ccaf7313eab0\nReviewed-on: https://chromium-review.googlesource.com/842643\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/aaa55bfa376d9f9b0085e8fb04cf427942d31ee2", "message": "Index symbols by id in ValidateOutputs\n\nThis is cleaner than indexing them by their name string.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I6cdc4125fadb6c7049ad8664e8a66da2a9a5bb8d\nReviewed-on: https://chromium-review.googlesource.com/836892\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/b6af22b522becc2757e62526edaaa6bb136c1a97", "message": "Store TVariable* in TIntermSymbol instead of storing id\n\nThis is an intermediate step to only storing a TVariable * in\nTIntermSymbol instead of copying the name.\n\nThis makes it possible to get a constant value out of a TIntermSymbol\nwithout doing a symbol table lookup.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Ibff588241a4ad4ac330063296273288b20a072c9\nReviewed-on: https://chromium-review.googlesource.com/829142\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/beb6dc74a2bcd35404a2054aae2927a193c4e240", "message": "Always use TFunction instead of TFunctionSymbolInfo\n\nThis reduces unnecessary memory allocations and conversions between\ndifferent objects containing the same data.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I87316509ab1cd6d36756ff6af7fa2b5c5a76a8ea\nReviewed-on: https://chromium-review.googlesource.com/827134\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/1bb8528c057f103070d8523c512adf1e0f83c2c3", "message": "Remove TFunctionSymbolInfo from TIntermAggregate\n\nAll the information stored in TFunctionSymbolInfo was duplicated from\nthe TFunction that the aggregate node pointed to.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I1f5574ab0416e5cae00c3dae6fc11d2fe1fa128c\nReviewed-on: https://chromium-review.googlesource.com/827065\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/0c37100dfc684824ee3c532d90c8f2e3f03e10e2", "message": "Always create TFunctions for function call nodes\n\nThis simplifies code and ensures that nodes get consistent data.\n\nIn the future function call nodes could have a pointer to the\nTFunction instead of converting the same information into a different\ndata structure.\n\nBUG=angleproject:2267\nTEST=angle_unittests, angle_end2end_tests\n\nChange-Id: Ic0c24bb86b44b9bcc4a5da7f6b03701081a3af5c\nReviewed-on: https://chromium-review.googlesource.com/824606\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/37385e11d38322cfc4d72e0b9cac51e380b263da", "message": "Emulate tanh on HLSL\n\nThis ensures mathematically correct results on large inputs.\n\nBUG=chromium:795269\nBUG=angleproject:1093\nTEST=dEQP-GLES3.functional.shaders.builtin_functions.precision.tanh*\n\nChange-Id: Id5ba05a3284e51a34f196b419abef0f4a41551e0\nReviewed-on: https://chromium-review.googlesource.com/832463\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/d4529f304be7b8a2c4f9d0e4d6b586468f23c9a5", "message": "Define symbol classes in a separate file\n\nThe plan is to use symbols more also outside the symbol table, so it\nmakes sense to define the symbol classes in a separate header file.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I94167415ef43ba9bd9126ca32d9c498e1437f3f8\nReviewed-on: https://chromium-review.googlesource.com/822414\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/ae4dbf32ba112c767d6e67d6e5734fc81d8c2d8c", "message": "Don't allocate name strings for empty symbols\n\nThis removes unnecessary memory allocations.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Ide575ea19ab2f8e9fc93092490f1352efa6024a3\nReviewed-on: https://chromium-review.googlesource.com/817415\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/a2d981418d78120269dfe7960578f7b7b82680aa", "message": "Fix allowing non-constant ternary global initializer\n\nCheck the qualifier of a node resulting from the folding of a ternary\nnode correctly. The folded node might even be a TIntermConstantUnion\nwith a non-constant qualifier.\n\nBUG=angleproject:2285\nTEST=angle_unittests\n\nChange-Id: I74516e44ce9d78bc54093a5b58d14cf33a57e6e5\nReviewed-on: https://chromium-review.googlesource.com/829138\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/195be9424f8b8446a0daba4d93dc7a8982d4842c", "message": "Always create TVariables for TIntermSymbol nodes\n\nTIntermSymbol nodes are now constructed based on a specific TVariable.\nThis makes sure that all TIntermSymbol nodes that are created to refer\nto a specific temporary in an AST transform will have consistent data.\nThe TVariable objects are not necessarily added to the symbol table\nlevels - just those variables that can be referred to by their name\nduring parsing need to be reachable through there.\n\nIn the future this can be taken a step further so that TIntermSymbol\nnodes just to point to a TVariable instead of duplicating the\ninformation.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I4e7bcdb0637cd3b588d3c202ef02f4b7bd7954a1\nReviewed-on: https://chromium-review.googlesource.com/811925\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/9d4d7f06facbe5db0f178be7b4126d6072d4ee69", "message": "Classify TSymbols using an enum\n\nSymbols can be either built-ins, user-defined, nameless, or for\nANGLE's internal use. In addition we currently use TFunction symbols\nthat are not yet resolved - they might later resolve to either a\nbuilt-in or a user-defined function. Record this information in each\nTSymbol so that TSymbol contains sufficient information for deciding\nhow to format symbol names in output.\n\nThe goal is to eventually replace current uses of TName with pointers\nto different TSymbol objects. So far only built-ins and user-defined\nsymbols have associated TSymbol objects, but that will be expanded to\ncover ANGLE's internal symbols as well.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I927ce023fe257cc236da82c127700f3bd72bfe96\nReviewed-on: https://chromium-review.googlesource.com/816952\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ebe13bb1b964f7085b25d3b4615568edf3e840e0", "message": "Remove SH_TRANSLATE_VIEWID_OVR_TO_UNIFORM\n\nInstanced multiview is fully implemented and performs much better than\nbroadcasting draw calls on the CPU. There's no need to maintain\ntranslating ViewID_OVR to a uniform.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: If3a8fa573f37b7926c052aecfcd4271f266751dc\nReviewed-on: https://chromium-review.googlesource.com/819417\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/87cc90dfaaf78e306eb4758bfdcb4c8977de4452", "message": "Set proper precision on loop index for variable init\n\nPreviously the index variable was missing a precision. This may have\nbeen behind loop-based init failing on some Android platforms.\n\nBUG=chromium:735497\nTEST=angle_unittests\n\nChange-Id: I0307891dfb2edf6c52efd5b495f602b380263d65\nReviewed-on: https://chromium-review.googlesource.com/822413\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/495162b9bab53029df884515247136a07e50dcf2", "message": "Don't create temporary ids ahead of time\n\nNow temporary ids are always only created for a specific temporary\nvariable.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Icbd369695abc166ef399bed9ae11a3669f1e7228\nReviewed-on: https://chromium-review.googlesource.com/816951\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/629a64498dde1898aa45e236f1a8cbb75eb5db10", "message": "Fix HLSL integer pow workaround\n\nThe exponent should be rounded prior to casting it to an integer.\n\nAlso if the exponent has a significant fractional part the expression\nshould not be turned into a multiplication. The previous code failed\nto check this correctly if the exponent's fractional part was greater\nthan 0.5.\n\nThe test case is expanded to cover the previously failing cases.\n\nBUG=chromium:793115\nTEST=angle_end2end_tests\n\nChange-Id: Ic72cd6ddc7f3d2495f7c87a3e3cfac5791445e72\nReviewed-on: https://chromium-review.googlesource.com/817299\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/d5f1afb5594ef5cddf9f2a7d2af73bc130cc4e2b", "message": "Make TSymbol immutable\n\nThere's still an exception for changing the names of structures, but\notherwise the data stored in the TSymbol base class is never changed.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I5b3f44cd365320ad09b46d2cfa3654a7d3f4bbc3\nReviewed-on: https://chromium-review.googlesource.com/806556\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/378c3a51d5f032268b4202cc11eed1a6d70e4f52", "message": "Clean up storing interface blocks in the symbol table\n\nMerge TInterfaceBlock with TInterfaceBlockName, so that there are no\nduplicate data structures for interface blocks. This is similar to the\nrefactoring that was already done to structs.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I67d2af6ccbe5344bddf9c99030d118fe532fbbd8\nReviewed-on: https://chromium-review.googlesource.com/805819\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/12a18ad357bc22bd8bafcc0bf1b90ac0930832d2", "message": "Simplify interface block instance recording\n\nInstead of storing instance names as part of TInterfaceBlock, store\ninstance names only in interface block instance symbols. Wherever the\ninstance name is needed it can be fetched from the instance symbol.\n\nBUG=angleproject:2267\nTEST=angle_end2end_tests\n\nChange-Id: Ia265e4db7901eebec57c9c3769d84c17651a35ba\nReviewed-on: https://chromium-review.googlesource.com/803221\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/fdb400d7c3d2361fc305577563ee85b9117774ff", "message": "Test multiview extension warning\n\nEnsure that a warning is generated if the shader tries to set a global\nlayout qualifier. Since a num_views layout qualifier is the only valid\nglobal layout qualifier in GLSL ES 1.00, it's sufficient that\ncheckCanUseExtension() that generates the warning is called for\n\"num_views\" specifically. Parsing \"layout\" or \"in\" storage qualifier\nmay use the simpler isExtensionEnabled() check that doesn't generate a\nwarning.\n\nBUG=angleproject:2238\nTEST=angle_unittests\n\nChange-Id: I19caff7be9cb4f53c581b5f5526b7cade08469d6\nReviewed-on: https://chromium-review.googlesource.com/803577\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/3de2703d83bf9f3747e6f80d98e3ab70ea1ba5e8", "message": "Fix handling matrix qualifiers on block members\n\nIndividual block member row_major/column_major layout qualifiers may\noverride the qualifiers set on the block. During parsing, this was\nalready being handled correctly, so that the qualifier is resolved for\neach block member and recorded for each TField / InterfaceBlockField.\n\nNow we always write the qualifiers on a per-member granularity to the\noutput GLSL shaders, so that the native driver gets the correct\nper-member qualifiers. This replaces earlier behavior where the matrix\nqualifiers were only written per-block.\n\nAlso only use qualifiers from individual members in block layout.\n\nSince the block-level qualifier information is no longer used after\nparsing, it is no longer kept in the AST. A dummy value is still set\nto the InterfaceBlock structs exposed through the ShaderVars\ninterface, since that has existing usage in Chromium that needs to be\nremoved before the field can be removed.\n\nSome AMD OpenGL drivers don't seem to handle matrix layout qualifiers\ncorrectly, so most of the added tests need to be skipped for AMD GL.\nOn NVIDIA and Intel the tests pass.\n\nBUG=angleproject:2271\nTEST=angle_unittests, angle_end2end_tests,\n     dEQP-GLES31.functional.program_interface_query.uniform.matrix*\n\nChange-Id: I1baa7a633bc2da548743c2190cb72db491b5227a\nReviewed-on: https://chromium-review.googlesource.com/800174\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/d5f44c986038fa80951834efa51123c7bf20d1d1", "message": "Simplify parsing struct field declarators\n\nThis removes the dummy type that was attached to struct declarators\nwhile parsing. This makes TParseContext::addStructDeclaratorList in\nparticular simpler to understand.\n\nThe new TDeclarator data type is the parsed representation of the\nstruct_declarator grammar rule. It is completely immutable. The name\nand location stored in TField can also be qualified as constant now.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I2834f87fc0eee0bdb7673ef495a55fb463023c55\nReviewed-on: https://chromium-review.googlesource.com/797033\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/035419fad06e257e18a16cd39eeb14afb63ffb0e", "message": "Clean up storing struct types in the symbol table\n\nInstead of storing struct symbols as TVariable objects, store them\nas TStructure objects. This way struct type symbols don't need to\nstore bogus data that's associated with arbitrary types, and on the\nother hand the name and unique id of struct types are only stored in\na single place. This change is a refactoring with no effect on\ngenerated output.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I173793e0cc77a890cdac6868d72d9f275ac9461a\nReviewed-on: https://chromium-review.googlesource.com/793814\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5d69db12d1944dc37b2c2a2039f6445073105934", "message": "Reset symbol unique id counter between compilations\n\nThis guarantees identical compilation results on different\ncompilations using the same compiler instance, guards against\noverflow, and is useful as a building block for tracking more symbol\ninformation in the symbol table.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: Ib5a7cec2fff6712ead969d935d238d28a87fd4a7\nReviewed-on: https://chromium-review.googlesource.com/796795\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/97fa85579f12c40f9e5b5d129ccca4e562f07302", "message": "Refactor TStructure\n\nMove methods and member variables that generalize to different types\nof field lists into TFieldListCollection and put implementations of\nmethods in cpp files.\n\nThis prepares for making TStructure inherit from TSymbol.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I63095242dd17aac2d2efd616b49be1143cfc1f92\nReviewed-on: https://chromium-review.googlesource.com/793813\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/18841310d80bce535e8f1a4b7776758c2d9100b4", "message": "Clean up MatchOutputCodeTest usage\n\nIt's cleaner to use a generic function to test that a sequence of\nstrings is found in a specific order rather than fetching and\ncomparing string locations in test case code.\n\nAlso make sure that string occurrences can't overlap when looking for\na specific number of occurrences of the same string.\n\nTEST=angle_unittests\n\nChange-Id: I8ca66c73c7aaa5be8469ded466f51d97a36c801b\nReviewed-on: https://chromium-review.googlesource.com/793041\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/54a29ffd82e7782c764b5257365e7f148f48ca4a", "message": "Refactor TSymbol to follow naming conventions\n\nThis will make it easier to make TStructure inherit from TSymbol.\n\nBUG=angleproject:2267\nTEST=angle_unittests\n\nChange-Id: I73a5a25234c7f965b6970891821ee9d6f0a23aca\nReviewed-on: https://chromium-review.googlesource.com/793812\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/ae04e1e4a6bf8584dc33d3a72cb943df8e554378", "message": "Fix scalarizing vec and mat constructor args\n\nScalarizing vec and mat constructor args can generate new statements\nin the parent block of the constructor. To preserve the correct\nexecution order of expressions, scalarized vector and matrix\nconstructors need to be first moved out from inside loop conditions\nand sequence operators. This is done whenever the compiler flag to\nscalarize args is on.\n\nBUG=chromium:772653\nTEST=angle_unittests\n\nChange-Id: Id40f8d848a9d087e186ef2e680c8e4cd440221d9\nReviewed-on: https://chromium-review.googlesource.com/790412\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f13cadd8bd5fa1f4f4ab78b594812117c26a4b95", "message": "Fix checking negative index when indexing matrix/vector\n\nIt's important that the test against the maximum of the valid range\nis only done if the index is positive, so the sanitized index value\nis guaranteed to end up in the valid range.\n\nThis fixes a regression from commit \"Add GLSL support for\nruntime-sized arrays in SSBOs\".\n\nBUG=chromium:789029\nTEST=angle_unittests\n\nChange-Id: Ic7125e383a64e46994b072df6d7e642432c521af\nReviewed-on: https://chromium-review.googlesource.com/792935\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/ebee5b3b7de574c434cd48679a6ab85c6b10b077", "message": "Add GLSL support for runtime-sized arrays in SSBOs\n\nThe GLSL parser now allows a runtime-sized array as the last member in\na shader storage block. Clamping indexing against the memory bounds is\ndone by determining the array length at runtime.\n\nRuntime-sized arrays are used in dEQP tests for many compute shader\ntests, so these now work on the OpenGL backend.\n\nBUG=angleproject:1951\nTEST=angle_unittests,\n     dEQP-GLES31.functional.shaders.linkage.shader_storage_block.*\n     dEQP-GLES31.functional.shaders.builtin_functions.*compute*\n\nChange-Id: Ibecca24623ca8e4723af6f0e0421fe9711ea828d\nReviewed-on: https://chromium-review.googlesource.com/787976\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/7881cfdfb58697a89bdc5447ebd7ee05a376ce52", "message": "Add parsing of arrays of arrays\n\nThis changes the grammar so that multiple array sizes can be chained\ntogether, and adds arrays of arrays support to TPublicType. In\nTPublicType the array sizes are stored using a pointer to a vector, a\nplain vector won't work due to bison restrictions.\n\nA larger subset of program interface query tests now pass. Some are\nstill failing due to unrelated bugs.\n\nBUG=angleproject:2125\nTEST=angle_unittests, angle_end2end_tests,\n     dEQP-GLES31.functional.shaders.arrays_of_arrays.*\n     dEQP-GLES31.functional.uniform_location.nested_array.*\n     dEQP-GLES31.functional.program_interface_query.*\n     dEQP-GLES31.functional.ubo.*level*array.*\n\nChange-Id: Iee16477a3752b953f5068c0473a2ed62fead8155\nReviewed-on: https://chromium-review.googlesource.com/633944\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1f73b7c6d4a0fc8f056d626597b3f4f3645a3e93", "message": "Add separate entries for inner arrays in block layout\n\nGenerating separate entries for array of array members in blocks is\nneeded so that block member queries work correctly.\n\nThis change will be tested more fully once support for parsing arrays\nof arrays lands in the compiler.\n\nBUG=angleproject:2125\n\nChange-Id: I052837ddd4ee44a5c2390d3af44c0f1d21fa5fc7\nReviewed-on: https://chromium-review.googlesource.com/787975\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/465835d61f394ba65b20b5951390c90ab55aec7b", "message": "Support arrays of arrays in the API\n\nThe ShaderVariable class that is used as an interface between the\ncompiler and the rest of the code gets arrays of arrays support.\n\nArray of array variables are passed from the compiler just like any\nother variables. However, when stored in Program state each innermost\narray constitutes a separate variable. This is done to make the\nimplementation match the GLES specification for program interface\nquery APIs.\n\nThis will be tested more fully once support for parsing arrays of\narrays lands in the compiler.\n\nTEST=angle_end2end_tests, angle_unittests\nBUG=angleproject:2125\n\nChange-Id: I0f7159000f039be92a87a52b3b68cd9a215a21cb\nReviewed-on: https://chromium-review.googlesource.com/684742\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/39f74df5f715e73f2e493961e8bca38f90061e17", "message": "Remove unreferenced struct types from the AST\n\nThis expands pruning unreferenced variables so that unreferenced named\nstruct types can also be removed from the AST.\n\nIncludes a small cleanup in GLSL output so that the output code\nmatching tests can test against clean output.\n\nBUG=chromium:786535\nTEST=angle_unittests\n\nChange-Id: I20974ac99a797e478d82f9203c179d2d58fac268\nReviewed-on: https://chromium-review.googlesource.com/779519\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/be0e2c0c748af976f74c9ecc55a141672657cc19", "message": "Fix type conversion warnings\n\nWarnings about implicit type conversions were showing up as errors on\nMSVS 2017.\n\nTEST=build with MSVS 2017\n\nChange-Id: I5f173a6838da16e96fad134756d31f56890c147b\nReviewed-on: https://chromium-review.googlesource.com/778841\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/3d70ca9cc194d2e946ca7baf0ed5dec30b2149c7", "message": "Remove unreferenced variables from the AST\n\nUnreferenced local and global variables are now pruned from the AST.\nThey will be removed unless their initializer has side effects.\n\nThe CollectVariables step needs to be run after the pruning, as the\npruning may affect which interface variables are statically used.\n\nIt's also good to gather built-ins that need to be emulated after the\npruning, so unnecessary built-in emulation functions are not added to\nthe translator output.\n\nThis will help handle some dEQP tests for arrays of arrays that have\nextremely large local arrays that are only used in an array length\nquery. By constant folding the length and pruning unused variables we\nwill avoid adding a large amount of array initialization code to the\ngenerated shaders.\n\nBUG=angleproject:2166\nTEST=angle_unittests, angle_end2end_tests\n\nChange-Id: Ic918bfe8f16460bcd6101d73a7a674145f5aeecd\nReviewed-on: https://chromium-review.googlesource.com/766434\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/2c7f34c833b4a9ca4d016dbc55f1755f40826e6e", "message": "Initialize uninitialized GLSL arrays in a for loop\n\nPreviously, creating nodes for initializing each single array element\ncould result in memory bloat during translation when dealing with\nlarge arrays. The resulting shader could also end up very long.\nInitialize most arrays using a simple for loop instead. The loop is\ncompatible with ESSL 1.00 Appendix A limitations.\n\nAn exception is made for fragment outputs, so that they are not\nindexed by non-constant values.\n\nOn some platforms using the a loop to initialize variables can cause\nproblems, so we also have a compiler flag for turning this behavior\noff. The flag was already added earlier for a staggered rollout of\nthis functionality.\n\nBUG=chromium:735497\nTEST=angle_unittests, angle_end2end_tests, WebGL conformance tests\n\nChange-Id: Iec727821d8137db56b440ddbe007879b1b55f61f\nReviewed-on: https://chromium-review.googlesource.com/707195\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/bb27c3a1483cf71e971ffafa8778df275b14f5cc", "message": "Fix VectorizeVectorScalarArithmetic statement insertion\n\nThe traverser must avoid inserting two statements to the same position\non a single traversal, so it doesn't trigger an assert.\n\nBUG=chromium:784078\nTEST=angle_unittests\n\nChange-Id: I855054e62cc1b1cf4e6bb02af527954151c7d0e7\nReviewed-on: https://chromium-review.googlesource.com/771611\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/b5601eb67596805dd1d98237915430ba733fa095", "message": "Only initialize globals if initialization flag is set\n\nThis avoids the possibility of initializing globals twice in Chromium.\nNow we also never initialize variables redundantly in case we're\nwriting HLSL output. This was already the intent of the code before,\nbut a mistake had slipped in and the code didn't actually check the\noutput type properly.\n\nThis also simplifies DeferGlobalInitializers by running it after\nSeparateDeclarations.\n\nBUG=chromium:735497\nTEST=WebGL conformance tests\n\nChange-Id: I95036a24ac8cf18113755510376a2fca286b3ee6\nReviewed-on: https://chromium-review.googlesource.com/771555\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/858ff481e500435844ef6876854c40665d8a42c5", "message": "Make isNamelessStruct a member of TType\n\nThis will be needed outside of InitializeVariables when removing\nunreferenced variables is added. Named struct type declarations\ncannot be pruned as easily as they might be referenced later.\n\nBUG=angleproject:2166\nTEST=angle_unittests\n\nChange-Id: If1462abe67e62ae19bde97de3c8f3d15e99ae9ea\nReviewed-on: https://chromium-review.googlesource.com/771790\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/10137d5981993affb2f8d761ea467e2ed61f4372", "message": "Remove crash expectation on dEQP tests after driver fix\n\nNVIDIA 387.* drivers do not reproduce the issue anymore, so the test\nexpectations for the previously failing indirect draw tests can be\nlifted.\n\nBUG=angleproject:1659\nTEST=dEQP-GLES31.functional.draw_indirect.random.*\n\nChange-Id: Iba69821d19bfad8d2f2e81045658f3ef08695c80\nReviewed-on: https://chromium-review.googlesource.com/744021\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/7caa80e7598930a8663f4bdcfe91285a9460c70a", "message": "Edit tests to reference temporary variables\n\nThe shader translator is intended to prune unreferenced variables in\nthe future. To maintain test coverage when this is done, most tests\nthat used to have unreferenced GLSL locals and globals are edited to\nuse built-ins or reference the necessary variables instead.\n\nBUG=angleproject:2166\nTEST=angle_unittests, angle_end2end_tests\n\nChange-Id: I3964e7a80d52fc04a95f57e73da6095e433095e8\nReviewed-on: https://chromium-review.googlesource.com/768740\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/7af63727f0582dd3a5d563c561dd86161e6105a9", "message": "Fix nullptr dereference on struct parameter error\n\nFunction parameter name string does not necessarily exist, so it's\nbetter to use the function name as the token in the error message.\n\nBUG=chromium:784158\nTEST=angle_unittests\n\nChange-Id: I8f3b8604fd702bdc9486b8d721a5f60de1ff3fa7\nReviewed-on: https://chromium-review.googlesource.com/765972\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/c4eca923de1f480a63a0aa1b41ee371258518fa1", "message": "Fix MSVS 2015 warnings\n\nFix warnings about implicit int to bool conversion and noexcept.\n\nTEST=build on MVSV 2015\n\nChange-Id: I437977ca01f62ce2df39872da5903a0338a73bba\nReviewed-on: https://chromium-review.googlesource.com/765371\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/703671e9fddc6047e01c5beef17e67b4eb6d5cd7", "message": "Unify extension behavior checks\n\nSome supportsExtension and isExtensionEnabled checks are now turned\ninto checkCanUseExtension checks. Using checkCanUseExtension is\npreferable so that warnings are generated correctly when an extension\nis used and a warn directive is present.\n\nisExtensionEnabled is still used in some places where an error message\nabout the extension could be confusing, particularly when a core spec\nversion adds support for something that is also present in an\nextension.\n\nAlso make it possible to disable ARB_texture_rectangle extension using\nan extension directive. ARB_texture_rectangle extension functionality\nis enabled by default in GLSL when the extension is supported.\n\nBUG=angleproject:2238\nTEST=angle_unittests\n\nChange-Id: I7455293412ff469f54bc7da79df146e7bc127379\nReviewed-on: https://chromium-review.googlesource.com/760737\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/bb0775da28e3305ef0466f3542a60e3559aaf79f", "message": "Add flag for turning off initializing variables with loops\n\nThis flag is needed to toggle upcoming variable initialization mode\nwhich uses for loops to optimize the compilation process. Initializing\nvariables using for loops will be turned on by default, but it needs\nto be turned off in Chromium in certain cases. Chromium will use the\nflag added in this patch and that code will need to go into Chromium\nbefore finishing the implementation in ANGLE.\n\nBUG=chromium:735497\n\nChange-Id: I3a0e7b7c6cebe60afa72964fbd0caf3b1eafccbc\nReviewed-on: https://chromium-review.googlesource.com/763451\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/661fc487dd556531367f89eb108ed850b8fbe59a", "message": "Work around NVIDIA GLSL vector-scalar op bug\n\nThis adds a new AST transform VectorizeVectorScalarArithmetic. The AST\ntransform works around incorrect handling of certain types of GLSL\narithmetic operations by NVIDIA's GL driver. It works around only the\nmost common cases where the bug reproduces, since detecting all the\ncases would take more sophisticated analysis of the code than what\nis currently easily implementable in ANGLE.\n\nWhen a float add operator has both vector and scalar operands, the AST\ntransform turns the scalar operand into a vector operand. Example:\n\nvec4 f;\nf += 1.0;\n\ngets turned into:\n\nvec4 f;\nf += vec4(1.0);\n\nWhen a vector constructor contains a binary scalar float\nmultiplication or division operation as its only argument, the AST\ntransform turns both operands of the binary operation into vector\noperands. Example:\n\nfloat f, g;\nvec4(f * g);\n\ngets turned into:\n\nfloat f, g;\nvec4(vec4(f) * vec4(g));\n\nAnother example with compound assignment:\n\nfloat f, g;\nvec4(f *= g);\n\ngets turned into:\n\nfloat f, g;\nvec4 s0 = vec4(f);\n(s0 *= g, f = s0.x), s0;\n\nThis latter transformation only works in case the compound assignment\nleft hand expression doesn't have side effects.\n\nBUG=chromium:772651\nTEST=angle_end2end_tests\n\nChange-Id: I84ec04287793c56a94845a725785439565debdaf\nReviewed-on: https://chromium-review.googlesource.com/721321\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ef7fb38861f980c6deb7a5ed37286305e9cbcb01", "message": "Size const unsized arrays without an initializer\n\nThe array size for unsized arrays needs to be sanitized in all cases,\nsince subsequent checks on array indexing depend on all arrays being\nsized.\n\nBUG=chromium:781729\nTEST=angle_unittests\n\nChange-Id: I3af6c08bb249a19f7c2ef169c877a2b863eb31d3\nReviewed-on: https://chromium-review.googlesource.com/757101\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1734e171109fd89d41aec792e138cab523981f18", "message": "Only store innermost array offset in VariableLocation\n\nSeparate entries will be generated for each innermost array of arrays\nof arrays in the variable tables. Because of this VariableLocation\nactually only needs to store the innermost array index.\n\nBUG=angleproject:2125\nTEST=angle_end2end_tests\n\nChange-Id: Id1ee35b3cecfc011d96b58e43cf0b1cccbfed408\nReviewed-on: https://chromium-review.googlesource.com/741742\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/d80f2944cf130684ab0f3d7179572494180e80f4", "message": "Struct definition not allowed as function parameter type\n\nStruct definitions are not allowed as a function parameter type now.\nThis is specified in ESSL 3.00.6 section 12.10. ESSL 3.00.6 section\n6.1.1 contradicts this, but that seems like a mistake, it's been fixed\nin subsequent spec versions.\n\nBUG=angleproject:2225\nTEST=angle_unittests\n\nChange-Id: I6b97d120c440f0c0a45d31bbfaf292fb497160ce\nReviewed-on: https://chromium-review.googlesource.com/754606\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/bd3cd506fed7e64ef2f7b46f2ceb2dd757c9b808", "message": "Clean up HLSL constructor output\n\nSplit generating HLSL struct constructors from generating built-in\ntype constructors, as these didn't have much in common. Struct\nconstructors are now only generated when they are needed, as opposed\nto before, when they were generated on any use of a struct.\n\nThis changes built-in constructor naming to include \"_ctor\" and gets\nrid of having special built-in type names just for constructors.\n\nThis will make it easier to do changes to constructor output, for\nexample to add constructors for structs in std140 layout. This might\nbe needed to implement SSBOs efficiently.\n\nThis includes one bug fix for writing out struct declarations for\nvaryings.\n\nAlso improves const-correctness of accessing structs through TType\nin general.\n\nBUG=angleproject:2218\nTEST=angle_unittests, angle_end2end_tests\n\nChange-Id: If865fb56f86486b9c4a2c31e016ea16427f4a5fa\nReviewed-on: https://chromium-review.googlesource.com/753883\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/2ef23e2d72e7811a607f53ea12e672c3287375bd", "message": "Fix writing uniform block maps to HLSL output\n\nHLSL output maps structs in std140 uniform blocks to a different\nlayout in order to eliminate padding. The padding may have been\ninserted to comply with std140 packing rules.\n\nThere used to be two issues in writing the maps: Sometimes the same\nmap could be written multiple times, and the maps were not being\nwritten for uniform blocks with instance names.\n\nRewrite how the uniform buffer struct maps get generated so that\nthe code works correctly. Instead of flagging accesses, structs inside\nuniform blocks are gathered from uniform block declarations. When\naccesses to structs in uniform blocks are written out in OutputHLSL,\nit's checked whether a mapped struct needs to be used instead of the\noriginal one.\n\nThis code could still be optimized further by limiting mapped structs\ngeneration to those ones that really need to be used. This is left to\nbe done later.\n\nBUG=angleproject:2084\nTEST=angle_end2end_tests\n\nChange-Id: Iee24b3ef15847d2af64554ac74b8e4be5060d18c\nReviewed-on: https://chromium-review.googlesource.com/751506\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/d255123c63c331bc32402eeeb3ecd18d6b18e97d", "message": "Store shader interface variables as per query spec\n\nGLES 3.1 section 7.3.1.1 specifies how active variable entries should\nbe generated and how active variables are named. The specs for program\ninterface variable queries are built on top of this section.\n\nANGLE has already followed this spec for the most part for generating\nvariable lists in ProgramState, but now we also follow the naming spec\nfor arrays and include [0] at the end of the stored name.\n\nThis will make implementing arrays of arrays more straightforward.\nMost logic for variable queries will just keep working as is when\narrays of arrays are added instead of needing more complex logic for\nhandling array indexing.\n\nBUG=angleproject:2125\nTEST=angle_end2end_tests\n\nChange-Id: I3acd14253153e10bc312114b0303065da2efb506\nReviewed-on: https://chromium-review.googlesource.com/739826\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "null77": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/3c424b489c25552878a52c0fcb5305618221708e", "message": "Vulkan: Add vk_cache_utils.h.\n\nThis file contains the Pipeline and RenderPass cache utils.\n\nAlso renames renderervk_utils.h to vk_utils.h and the format utils\nfile.\n\nRefactoring change only.\n\nBug: angleproject:2163\nChange-Id: I5113a9a2c6f0b0960d38e6c2d8e391fa2d9f5f6a\nReviewed-on: https://chromium-review.googlesource.com/876505\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f2f6d3799cf2f74706110bf73fbd90a659502fd3", "message": "Vulkan: Add PipelineDesc.\n\nThe PipelineDesc class is a 512-byte packed description of the entire\nVulkan pipeline state. It uses the alignas keyword and some static\nasserts to verify that the structures are packed. This ensures that\nwhen ANGLE uses MurmurHash to hash the entire struct, and memcmp to\ncheck for identity, that there are no garbage padding bits.\n\nThis CL does not implement the Pipeline cache, but it will help, since\nnow we have a packed type that can be used as the key to a hash map.\n\nBug: angleproject:2163\nChange-Id: I16efa927f08d30d89a9c4c8943edd211c6878ac8\nReviewed-on: https://chromium-review.googlesource.com/829893\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/2cc2a7273e4015a0cca93ac4c2b56557bd3bfa2a", "message": "common: Add aligned memory allocator.\n\nThis will be useful for the Vulkan pipeline state cache. This cache\nwants to pack the pipeline description very carefully into a specific\nnumber of bits, using the \"alignas\" keyword. Using this keyword\nrequires an aligned allocator, which we can lift from Chromium's\nbase/memory submodule.\n\nAlso includes a unittest copied from Chrome.\n\nBug: angleproject:2163\nChange-Id: I25976be4610636db3f43552bba23d823f5a49a24\nReviewed-on: https://chromium-review.googlesource.com/837944\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/949b4f07fd1ef5b208136fe38327c28c95f18928", "message": "Vulkan: Allow for no .git directory in build.\n\nThe SPIRV-Tools 'external revision generate' script is coded such that\nit assumes a .git folder is present. This causes a problem for the\ntarball build. We can fix this by using the same tooling we use for\nANGLE's commit id script to check if the .git directory is present\nbefore running the generator. If it is missing, we insert a hard-coded\ndummy header. Also use the 'DEPS' file as a placeholder for .git/HEAD\nto check if the current revision needs updating.\n\nBug: chromium:799620\nBug: angleproject:2237\nChange-Id: Icea8e9c66f1600df7dca2aaa45fe449f687f5b55\nReviewed-on: https://chromium-review.googlesource.com/854255\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/eeda03b624b9faa369d085dd3fe73bdf94fdc2c5", "message": "EGL: Remove internal enum for NULL driver.\n\nThis is now updated in Chrome, so we can remove the last uses.\n\nBug: angleproject:2159\nChange-Id: Ia31e42b8a685756ee70450be19a52248e3efa92f\nReviewed-on: https://chromium-review.googlesource.com/853119\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/97f39b3c912be36113252d19946354a525c6618f", "message": "Vulkan: Add missing command queue reset to flush.\n\nThis was causing a heavy performance regression in the Vulkan perf\ntest. Local testing shows it recovers most of the performance gap\nwith this fix.\n\nBug: angleproject:2264\nBug: chromium:799372\nChange-Id: Ia2bbf526b305e1b2e901d904574dbe5618e6e5ef\nReviewed-on: https://chromium-review.googlesource.com/852365\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f3e23295953090c56f50caf048519ae66c3baf89", "message": "EGL: Expose NULL driver device selection.\n\nThis makes the device type selection part of the ANGLE platform\nextension. We currently support NULL driver selection on all\navailable back-ends (although on the NULL back-end, it already\nhas no device type). Optionally we could expose certain features\nof this as separate extensions.\n\nThis currently also supports the old hidden enum, until we can\nupdate Chrome and consolidate to the new exposed official enum.\n\nBug: angleproject:2159\n\nChange-Id: I85d0811098e644e8192c207673af9e18ed7c1da2\nReviewed-on: https://chromium-review.googlesource.com/846021\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/fa920ebbca21441d923e6b7cddf6e01154c29f7f", "message": "Entry Points: Auto-generate extensions EPs.\n\nThis is partially complete - it is missing the auto-gen for custom\nANGLE and Chromium extensions that aren't present in gl.xml. We\ncan upstream some of these extensions, but will also need to make\ncustom handling for some extensions that are too volatile or under-\nspecced to upstream to Khronos.\n\nThis also tweaks some of the Context method names to match what the\nauto-generator expects. It also updates some TexStorage entry points.\n\nAlso includes a specialized error return value for glTestFenceNV.\n\nAlso removes the TexImage3DOES entry point which was neither used\nnor accessible to the application.\n\nBug: angleproject:2263\nChange-Id: I3667c22b1b15f84ab4c7dfecb5745aaf73d11e76\nReviewed-on: https://chromium-review.googlesource.com/846420\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/47c8ea3fb265682b6dd040bf04488747f0292da1", "message": "Vulkan: Fix looped clears.\n\nThese were broken by command re-ordering. The first problem was that\nthe Framebuffer RenderNode was not correctly being flagged as dirty.\nThis is fixed by keeping a serial instead of a bool to track the\nRenderNode's cleanliness. The second issue was that an image layout\ntransition was being set with incorrect bits. Fix this by using the\ncorrect access mask.\n\nThis fixes angle_perftests's Vulkan render test.\n\nBug: angleproject:2264\nBug: chromium:798866\nChange-Id: I268b0f7aeb2c5e22892f6ef59dec62391b30bfb4\nReviewed-on: https://chromium-review.googlesource.com/848539\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/fc3463da017a9e17e890363977ec29f90c82411b", "message": "HandleAllocator: Fix heap ordering using std::greater.\n\nThe default heap ordering is to return the greatest element in the\nheap. Since the handle allocator expects a minimal return value on\na new allocation, this caused a bug. The bug is triggered by reserving\nhandles, allocating new handles, then freeing the handles and\nallocating again with the same allocator. Fix the bug by using\nstd::greater instead of std::less, which will make the heap\nreturn the smallest value instead of largest.\n\nAlso adds some logging debugging code for the handle allocators.\n\nBug: angleproject:1458\nChange-Id: Ibef5dcbed0a664ccad0e0335f081e2355162584b\nReviewed-on: https://chromium-review.googlesource.com/848644\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/36937a64f438a2e0c166f99d90ced59c5dbbb1be", "message": "Revert \"Enable depth buffer to workaround driver bug on Intel windows\"\n\nThis reverts commit 63ba357c093954d2bc475867e1296fbf5afc1d37.\n\nReason for revert: May be causing Windows GPU.FYI bot failures.\n\nhttps://ci.chromium.org/buildbot/chromium.gpu.fyi/Win10%20Release%20%28Intel%20HD%20630%29/1443\n\nmaps_pixel_test on Intel GPU:\nUnexpected Failures:\n* gpu_tests.maps_integration_test.MapsIntegrationTest.Maps_maps\n\nwebgl2_conformance_tests on Intel GPU:\nUnexpected Failures:\n* gpu_tests.webgl_conformance_integration_test.WebGLConformanceIntegrationTest.WebglConformance_deqp_functional_gles3_fboinvalidate_default\n* gpu_tests.webgl_conformance_integration_test.WebGLConformanceIntegrationTest.WebglConformance_deqp_functional_gles3_fboinvalidate_sub\n\nBug: chromium:798757\n\nOriginal change's description:\n> Enable depth buffer to workaround driver bug on Intel windows\n>\n> Rendering with depth buffer disabled and stencil buffer enabled\n> leads to memory leak if we set viewport a large size on Intel\n> windows platforms. So we enable depth buffer if stencil buffer\n> is enabled to workaround this issue.\n>\n> TEST=gl_test.exe --gtest_filter=GLClearFramebufferTestWithParam/GLClearFramebufferTest.ClearDepthStencil/0\n> TEST=conformance/rendering/rendering-stencil-large-viewport.html\n> TEST=RenderStencilBufferTest.DrawWithLargeViewport/ES3_D3D11\n>\n> BUG=782317\n>\n> Change-Id: Idb185db296f13e3fa897534514e198651a56439f\n> Reviewed-on: https://chromium-review.googlesource.com/809574\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n> Reviewed-by: Jamie Madill <jmadill@chromium.org>\n\nTBR=zmo@chromium.org,geofflang@chromium.org,jmadill@chromium.org,kbr@chromium.org,cwallez@chromium.org,yunchao.he@intel.com,jiajia.qin@intel.com,xinghua.cao@intel.com,bryan.bernhart@intel.com,yizhou.jiang@intel.com,yang.gu@intel.com\n\n# Not skipping CQ checks because original CL landed > 1 day ago.\n\nBug: 782317\nChange-Id: I7e29da683b22fd4640c230598c7b220cfae6a177\nReviewed-on: https://chromium-review.googlesource.com/848133\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c8c9a24a117a4239342392e1ee730ab1a5a4a1df", "message": "Entry Points: Refactor generator script.\n\nThis cleans up some of the organization of the python generator. It\nwill make the extension entry point generation simpler.\n\nIt also changes the header guards to use more underscores, which\nproduces a small diff. Also updates the copyright year in a few\ngenerated files.\n\nBug: angleproject:2263\nChange-Id: I42f061c24a6cfcd8328c56c57eaed9ca6c7bb293\nReviewed-on: https://chromium-review.googlesource.com/846306\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/d078c68128f17a7bfe2030b1cdcc4cf2552f6548", "message": "VertexArray: Add enabled attribs bitmask.\n\nThis replaces the \"max enabled attrib\" integer with a bitmask of\nenabled attribs. Should have better worst-case performance (only\nattribute 15 is enabled) and similar best-case performance (when\nonly attribute 0 is enabled).\n\nThis might also help implementing validation optimizations.\n\nBug: angleproject:2202\nChange-Id: I5cbb533c3af23851a42c80a6dc409a0da84e87c3\nReviewed-on: https://chromium-review.googlesource.com/847284\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ffa2cd04b645da7d4bf4fe94fb2ba3f2fff8a5ed", "message": "Entry Points: Speed up auto-gen.\n\nThis refactors the auto-generation script to use a simpler XML\niteration. It will only query the Xpath once per script, instead\nof once per entry point. This speeds up execution significantly.\n\nAlso this change sorts the entry points alphabetically instead\nof having them appear in the order they appear in the XML. This\ngives a more consistent ordering.\n\nBug: angleproject:1309\nChange-Id: Ifa1110af786b91ad0e6ff1cd3707e17666d398a5\nReviewed-on: https://chromium-review.googlesource.com/846419\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/8c3988c59ebe97f03c376d30aa94fb6062f4ae48", "message": "Vulkan: Use one pipeline layout for all Programs.\n\nThis simplifies the pipeline state object caching. We will not need\nto use any extra bits to cache based on program properties - instead\nall programs will be compatible. The pipeline layout strucutre is\ndescribed in the design docs. It currently only has two bind groups:\nthe first for default uniforms, and the second for Textures. In the\nfuture we might re-organize this to handle driver uniforms, dynamic\npush constants, and/or program uniform buffers with ES 3.0.\n\nInstead of storing only the Textures that are required by a Program,\nwe reserve space for the maximum possible Texture units. We might have\nto revisit this very simple design in the future to support texture\narrays, which are handled specially in Vulkan.\n\nBug: angleproject:2163\nChange-Id: I3e1656c2c73045aed56838a5f1267b246a623362\nReviewed-on: https://chromium-review.googlesource.com/837943\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/49ac74bd4c96eb81b6928d58ac9aacaf6cb06b36", "message": "Vulkan: Implement command re-ordering.\n\nThis introduces a new CommandBufferNode class. Nodes are linked\ntogether to form a graph based on their dependencies. When the app\ntriggers a readback or swap, the graph is flushed entirely. This\nsends the queued ANGLE Vulkan work to the Vulkan queue which is\nthen processed on the GPU with the right dependencies.\n\nThis design allows us to save on some unnecessary RenderPass creation\nand also allows us to know what load/store ops to use. It also allows\nus to take advantage of the Vulkan automatic RenderPass transitions\nfor performance. Load/Store ops and automatic transitions will be\nimplemented in later patches.\n\nBug: angleproject:2264\nChange-Id: I0e729c719e38254202c6fedcede4e63125eb4810\nReviewed-on: https://chromium-review.googlesource.com/780849\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/8a57b468e254947236876d07c54cfa1f80d9de9d", "message": "Re-land \"Vulkan: Roll loader/validation layers SDK. (2/2)\"\n\nSecond re-land fixes git.bat access on developer machines.\n\nRe-landing with upstream fixes to the layers so they no longer\nneed to copy the parameter validation errors to the current\nworking directory of the layer generation. Also includes fixes\nfor the GCC build.\n\nThis hasn't been updated in a while, so there are many changes.\nIt should also include better validation for memory barriers.\n\nAlso includes updated builds for SPIRV Tools and glslang.\nA few pull requests need to land before landing this in ANGLE.\n\nThis second step re-enables Vulkan and includes the updated build.\n\nIncludes a workaround for parameter_validation.h no longer being\nauto-generated, and the stale file clobbering the build.\n\nAlso includes a fix for an incorrect memory barrier.\n\nBug: angleproject:2237\nChange-Id: Ic1a3ad7458bb743d7279a1af9334693ab6cb59d6\nReviewed-on: https://chromium-review.googlesource.com/845859\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/007530ea55ce02fd377b792024ec82af81760a3b", "message": "Entry Points: Refactor Extensions Part 2.\n\nThis moves the validation and entry point files to use a\nconsistent syntax. This will facilitate auto-generation.\n\nBug: angleproject:2263\nChange-Id: If5d06e97db66783d7b3d7fb1d6365f8218d956ae\nReviewed-on: https://chromium-review.googlesource.com/846022\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/2b7bbc2822805fc29d19ba93a365d8e02e84d045", "message": "Entry Points: Refactor Extensions Part 1.\n\nThis moves the validation and entry point files to use a\nconsistent syntax. This will facilitate auto-generation.\n\nBug: angleproject:2263\nChange-Id: Ica2dbffff3898103c6827ae7f6b1154a45d14a85\nReviewed-on: https://chromium-review.googlesource.com/841345\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/755a9317ff1ec983f2704fc9f4619cac49992960", "message": "Re-land \"Vulkan: Roll loader/validation layers SDK. (2/2)\"\n\nRe-landing with upstream fixes to the layers so they no longer\nneed to copy the parameter validation errors to the current\nworking directory of the layer generation. Also includes fixes\nfor the GCC build.\n\nThis hasn't been updated in a while, so there are many changes.\nIt should also include better validation for memory barriers.\n\nAlso includes updated builds for SPIRV Tools and glslang.\nA few pull requests need to land before landing this in ANGLE.\n\nThis second step re-enables Vulkan and includes the updated build.\n\nIncludes a workaround for parameter_validation.h no longer being\nauto-generated, and the stale file clobbering the build.\n\nAlso includes a fix for an incorrect memory barrier.\n\nBug: angleproject:2237\nChange-Id: I1ed87ecfa84f51ee1edf6a8581d9b3c8f9a6f26e\nReviewed-on: https://chromium-review.googlesource.com/834429\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/340b577196857c4403a9058f014a4075fc4cb239", "message": "Vulkan: Roll loader/validation layers SDK (1.75/2)\n\nThis hasn't been updated in a while, so there are many changes.\nIt should also include better validation for memory barriers.\n\nAlso includes updated builds for SPIRV Tools and glslang.\nA few pull requests need to land before landing this in ANGLE.\n\nThis intermediate step rolls Vulkan again to include upstream\nfixes to the layers so they no longer need to copy the parameter\nvalidation headers to the current working directory. The prior\nchanged missed a second generator script.\n\nBug: angleproject:2237\nChange-Id: Ia6767af538c50e340ea5a68c69a2863c9fd9061d\nReviewed-on: https://chromium-review.googlesource.com/840080\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ffd27d85371b27b6d7faf2aa675373537bf204b1", "message": "Vulkan: Roll loader and validation layers SDK (1.5/2)\n\nThis hasn't been updated in a while, so there are many changes.\nIt should also include better validation for memory barriers.\n\nAlso includes updated builds for SPIRV Tools and glslang.\nA few pull requests need to land before landing this in ANGLE.\n\nThis intermediate step rolls Vulkan again to include upstream\nfixes to the layers so they no longer need to copy the parameter\nvalidation headers to the current working directory also includes\nfixes for the GCC build.\n\nBug: angleproject:2237\nChange-Id: I50deb70e43be36f7470c9fc2262b6da5bab39c3a\nReviewed-on: https://chromium-review.googlesource.com/834230\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/647dca7672f709d2cc3896c5ffb2fd9b904a15e4", "message": "Revert \"Vulkan: Roll loader/validation layers SDK. (2/2)\"\n\nThis reverts commit f15f9cec318b5b0042cca7f819b1df9dbd1872ee.\n\nReason for revert:\nCausing a compile failure on the Fuchsia config, due to a path\ndifference. Will fix upstream and re-land, since it's breaking the\nauto-roller.\n\nhttps://chromium-review.googlesource.com/c/chromium/src/+/829878\n\nFAILED: clang_x64/gen/third_party/angle/src/vulkan_support/angle/vulkan/parameter_validation.cpp \npython ../../third_party/vulkan-validation-layers/src/scripts/lvl_genvk.py -o clang_x64/gen/third_party/angle/src/vulkan_support/angle/vulkan -registry ../../third_party/vulkan-validation-layers/src/scripts/vk.xml parameter_validation.cpp -quiet\nError: Could not find vk_validation_error_messages.h\n[906/1359] ACTION //third_party/angle/src/vulkan_support:vulkan_gen_object_tracker_cpp(//build/toolchain/linux:clang_x64)\nFAILED: clang_x64/gen/third_party/angle/src/vulkan_support/angle/vulkan/object_tracker.cpp \npython ../../third_party/vulkan-validation-layers/src/scripts/lvl_genvk.py -o clang_x64/gen/third_party/angle/src/vulkan_support/angle/vulkan -registry ../../third_party/vulkan-validation-layers/src/scripts/vk.xml object_tracker.cpp -quiet\nError: Could not find vk_validation_error_messages.h\n\nOriginal change's description:\n> Vulkan: Roll loader/validation layers SDK. (2/2)\n> \n> This hasn't been updated in a while, so there are many changes.\n> It should also include better validation for memory barriers.\n> \n> Also includes updated builds for SPIRV Tools and glslang.\n> A few pull requests need to land before landing this in ANGLE.\n> \n> This second step re-enables Vulkan and includes the updated build.\n> \n> Includes a workaround for parameter_validation.h no longer being\n> auto-generated, and the stale file clobbering the build.\n> \n> Also includes a fix for an incorrect memory barrier.\n> \n> Bug: angleproject:2237\n> Change-Id: Iae611764870281ed6aa7b187ec0c4e44226c722a\n> Reviewed-on: https://chromium-review.googlesource.com/759197\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n> Reviewed-by: Frank Henigman <fjhenigman@chromium.org>\n\nTBR=fjhenigman@chromium.org,jmadill@chromium.org,cwallez@chromium.org\n\n# Not skipping CQ checks because original CL landed > 1 day ago.\n\nBug: angleproject:2237\nChange-Id: I9bc60860668c1da773b6e2fdb83ecc20215e9125\nReviewed-on: https://chromium-review.googlesource.com/830926\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f414121d4971ec0c423441c84d9ccf195827803f", "message": "D3D11: Fix program uniform buffer dity bits.\n\nThere were actually three missing state synchronization points:\n\n1. When re-binding a uniform buffer, we had no dirty bits.\n2. When modifying the Program bindings, we also had no update.\n3. When triggering a dependent state update via BufferData.\n\nThis fixes all the missing syncs and adds tests for the cases.\n\nBug: angleproject:1390\nChange-Id: I2f05766545784248bcca8308ae34ac5720237ab1\nReviewed-on: https://chromium-review.googlesource.com/823150\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Kai Ninomiya <kainino@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f15f9cec318b5b0042cca7f819b1df9dbd1872ee", "message": "Vulkan: Roll loader/validation layers SDK. (2/2)\n\nThis hasn't been updated in a while, so there are many changes.\nIt should also include better validation for memory barriers.\n\nAlso includes updated builds for SPIRV Tools and glslang.\nA few pull requests need to land before landing this in ANGLE.\n\nThis second step re-enables Vulkan and includes the updated build.\n\nIncludes a workaround for parameter_validation.h no longer being\nauto-generated, and the stale file clobbering the build.\n\nAlso includes a fix for an incorrect memory barrier.\n\nBug: angleproject:2237\nChange-Id: Iae611764870281ed6aa7b187ec0c4e44226c722a\nReviewed-on: https://chromium-review.googlesource.com/759197\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/9af765dd2e4463242df8175f74d7a99af6f31cb1", "message": "Vulkan: Roll loader/validation layers SDK. (1/2)\n\nThis hasn't been updated in a while, so there are many changes.\nIt should also include better validation for memory barriers.\n\nAlso includes updated builds for SPIRV Tools and glslang.\nA few pull requests need to land before landing this in ANGLE.\n\nFirst part disables Vulkan and rolls the layers. The second part will\nre-enable Vulkan with the updated loader/layers build.\n\nBug: angleproject:2237\n\nChange-Id: I112521541ea66b26eadeb959852418dc91be2e18\nReviewed-on: https://chromium-review.googlesource.com/805417\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/21f67ae06684909234b8896de7d181a729ce34f4", "message": "Vulkan: Remove loader/layers from GYP build.\n\nThis simplifies the rolling process since the build configuration was\nfairly complex. It allows us to save on maintaining the two sets of\nbuild files. The back-end is also disabled in GYP.\n\nThe back-end sources are kept in libGLES.gypi for now to keep all\nlibANGLE sources in the same place.\n\nBug: angleproject:2237, angleproject:1569\nChange-Id: Ie73b40ef125cfc20da6f4ed3b33339256f1c5172\nReviewed-on: https://chromium-review.googlesource.com/805416\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/bef918cb541a53429a6dc66dbce53dcbd9341001", "message": "Vulkan: Add packed RenderPass descriptions.\n\nThis change is two-fold: it splits the compatible parts from the\nRenderPass description, which allows for correct caching. It also\nwill allow the pipeline state cache to cache the compatible RenderPass\nbits.\n\nIn order to do this we introduce a packed version of the RenderPass\ndescription, which uses carefully aligned bit representations so we\ncan hash the descriptions easily using MurmurHash, and compare them\nwith memcmp.\n\nBug: angleproject:2163\nChange-Id: I4179c0ff8762df81f29082168bd6e3056ceb1318\nReviewed-on: https://chromium-review.googlesource.com/815816\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5b18f487c2f043dde642f3618ad479b60b463707", "message": "Vulkan: Implement basic TexSubImage2D.\n\nThis also adds a test for updating a Texture that is in-use. This will\nensure our Texture updates occur at the right time when we're\nimplementing command re-ordering.\n\nBug: angleproject:2264\nBug: angleproject:2200\nChange-Id: Id6040d7238eca031e3cc7b27564d8ea815bf3d73\nReviewed-on: https://chromium-review.googlesource.com/801031\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/da854a272832f486a9dc491ac24b6069d22eefd9", "message": "Vulkan: Clean up VAO cached resources.\n\nWe can actually store a pointer to the base ResourceVk instead of\nBufferVk for updating serials. This will work a little nicer with\nstreaming vertex data, which won't have a BufferVk but will have an\naccessible ResourceVk pointer.\n\nAlso add an element array resource pointer for serial update. This was\nmissing and could lead to incorrect behaviour. Also change the types\nof the caches from std::vector to gl::AttribArray, which is a\nstd::array.\n\nBug: angleproject:2264\nChange-Id: Ibd79b7676b5dbc3875ae9d110be477d228e01c5c\nReviewed-on: https://chromium-review.googlesource.com/798170\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/9f2a861342019878301e2dc776ea6787f9625c57", "message": "Vulkan: Implement a RenderPass cache.\n\nThis cache replaces the RenderPass-per-Framebuffer approach. Although\nthe concepts of a RenderPass are closely associated with rendering to\na Framebuffer, there can be multiple RenderPasses used with a single\nFBO, especially considering the nature of Load and Store operations.\n\nThis code will then lend itself to the implementation of the deferred\nRenderPasses, which are created on flush. These RenderPasses won't\nbe owned by a Framebuffer.\n\nBug: angleproject:2264\nChange-Id: I4dce07c302118f7e05f5225e2a3b0569ad1e52bf\nReviewed-on: https://chromium-review.googlesource.com/789534\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/e218f15fcc19af43a34d24fa9895784b380450ff", "message": "Vulkan: Remove std::vector arg from beginRenderPass.\n\nWe don't want to force the RenderPass code to use std::vector when we\nare working with static data. Change it to take a pointer.\n\nBug: angleproject:2264\nChange-Id: I07a077719fb9b4abc33a0cfcccc178d0544b7f06\nReviewed-on: https://chromium-review.googlesource.com/789535\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/d3e213bc80021087b67ba3d7b7b0aaa785fa079a", "message": "Add a gl::AttribArray helper type.\n\nThis is a generic std::array sized to gl::MAX_VERTEX_ATTRIBS.\n\nBug: angleproject:2264\nChange-Id: I788659ad25be5708dbab422ac4a16dff60abf154\nReviewed-on: https://chromium-review.googlesource.com/790750\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/3c1da04e0becfdd2cd37fe3db9bb435b6f8f3491", "message": "Isolate GlslangWrapper header from most of ANGLE.\n\nSince we might want to use the ANGLE PoolAlloc in the Vulkan back-end,\nwe want to make completely sure that it doesn't show up in any header\nthat might be included with the Glslang headers, since this could\ncause a conflict.\n\nThis change moves as much as possible to forward-declaring instead of\nincluding headers directly in ProgramLinkedResources.h. This means\nmaking several internal Program helper classes external. I.E. instead\nof Program::Bindings, we have ProgramBindings.\n\nIt also redeclares a \"using\" in two places, since it isn't possible to\nforward declare these, and it seemed overdesigned to put the using in\na separate header.\n\nBug: angleproject:2264\nChange-Id: Idd08706580c927327dddf46e86acbcd2c4e3286f\nReviewed-on: https://chromium-review.googlesource.com/792270\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/0b684ce3c9f59fe9ba2e7adb19086e72f73e8605", "message": "Vulkan: Move RenderPass init into a helper function.\n\nHere it can be more easily accessed for command re-ordering, which\nwill use a RenderPass cache instead of having RenderPasses be owned\nby the Framebuffer.\n\nBug: angleproject:2264\nChange-Id: I9b06cff43e536a526d44e7e0c04027bc450051cf\nReviewed-on: https://chromium-review.googlesource.com/789533\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/afa02a2f9e240d2e0f5de8e9b6acc5bed596bfe0", "message": "ContextImpl: Make flush/finish take a gl::Context.\n\nThis will more easily allow us to call gl::BindingPointer methods.\nThe binding pointer will be used temporarily in the command graph.\nThis is only temporary since we will likely not be using\nBindingPointer in the end result code, but it could be necessary\nfor future work.\n\nBug: angleproject:2264\nChange-Id: I33cf40ec2a1e334c4abfdcff2ad20bbcda3c9d78\nReviewed-on: https://chromium-review.googlesource.com/789532\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/8e4bb4b1103741ef0b6fc3a2456afc54734a2e44", "message": "D3D11: Cache element array buffer updates.\n\nThis attempts to reduce the amount of redundant validation done\nbetween indexed draw calls. It keeps the cached info in the\nVertexArray11 class.\n\nIt also includes a fix to a missing direct buffer invalidation in\nCopyBufferSubData which was turning up with the new caching.\n\nReduces overhead in the D3D11 indexed rendering perf test such that it\nleads to an increased score of about 20%.\n\nBUG=angleproject:2229\n\nChange-Id: I63121bea19a9c8198e1925ed6a1460838e8f8955\nReviewed-on: https://chromium-review.googlesource.com/765262\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c7b0cf2a28f7a433368442fb9350d083a6feae96", "message": "D3D11: Remove \"fast path\" check in DrawElements.\n\nThis was a bit of an anti-pattern. Many draw calls were being handled\nin the \"slow\" path, so the repeated checks were slowing the draw calls\ndown more than the fast path was speeding things up.\n\nThe new code tries to do all the checking for index ranges and restart\nindex once only, and lazily when possible. The 'start' vertex is a bit\nof a special case - we known when the primitive restart index is\nnot enabled, this will be always the same as the 'base' vertex (zero\nif the base vertex is not enabled - only currently available through\ndraw indirect commands).\n\nIn future work we can look at implementing a lazy evaluation for draw\nindirect commands so we don't need to do a check there either.\n\nReduces overhead in the D3D11 indexed rendering perf test such that it\nleads to an increased score of about 5%.\n\nBUG=angleproject:2229\n\nChange-Id: I6330f30b66d1810624d03f4e7a012bf2391a3bf3\nReviewed-on: https://chromium-review.googlesource.com/764677\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/acf2f3adbac07ff91d280e9e2358d4bead0f0e67", "message": "Apply Chromium style fixes.\n\nThis addresses several minor code quality issues that are validated\nin Chromium, but not yet applied to ANGLE:\n\n* constructors and destructors must be defined out-of-line\n* auto is not allowed for simple pointer types\n* use override everywhere instead of virtual\n* virtual functions must also be defined out-of-line\n\nSlightly reduces binary size for me (~2k on Win, 150k on Linux).\n\nBug: angleproject:1569\nChange-Id: I073ca3365188caf5f29fb28d9eb207903c1843e6\nReviewed-on: https://chromium-review.googlesource.com/779959\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f1b47e89631848b074ae0892126e0d675aaa26e4", "message": "Fix ComputeGenericHash.\n\nANGLE's internal hash maps would run MurmurHash on c++ structs to\ncome up with hash values. Since the hash ran on 4 byte words only,\nit would have no understanding that sometimes our structs would only\nhave meaninful data in the first N bytes, and would include the\ngarbage at the end in the hash calculation. This fixes the problem by\nforcing our structs to be aligned at compile-time.\n\nIt also adds custom copy operators for a few classes to ensure that\nall bits are copied when the struct is initialized, including the\npadding.\n\nBug: angleproject:1569\nBug: chromium:721648\nChange-Id: I4d11f6e12d9a067b36e1416c7ed15586eff99aab\nReviewed-on: https://chromium-review.googlesource.com/783990\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/6e94c455c0589dd822bce754b7400adafc27bcb0", "message": "Reland \"Update cq.cfg for new compile-only builders.\"\n\nThis is a reland of cc93cebf275a37e2f271f4856d7f13fc7eb3c1ad\n\nRe-landing after mb_config.pyl fix.\n\nOriginal change's description:\n> Update cq.cfg for new compile-only builders.\n>\n> This removes the x64 versions of the Windows tests from the ANGLE CQ.\n> They are still available to run as optional try jobs, if we suspect\n> a failure. This should reduce the amount of test duplication while\n> still keeping complete coverage.\n>\n> It also updates the Clang builder to the MSVC builder, since Chrome\n> has switched to Clang by default on Windows, and the clang builder\n> was a deprecated version of the MSVC builder anyway.\n>\n> Bug: chromium:786044\n> Change-Id: I786fe85dcdaa57b55b0b44244797c9285c577ea2\n> Reviewed-on: https://chromium-review.googlesource.com/782402\n> Reviewed-by: Geoff Lang <geofflang@chromium.org>\n> Reviewed-by: Andrii Shyshkalov <tandrii@chromium.org>\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n\nBug: chromium:786044\nChange-Id: I85d1fe95d12a29e91755303423dd151450bb6a3b\nReviewed-on: https://chromium-review.googlesource.com/784232\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/cce013c9b61466dd6571901aee44c7a04d5ab613", "message": "Revert \"Update cq.cfg for new compile-only builders.\"\n\nThis reverts commit cc93cebf275a37e2f271f4856d7f13fc7eb3c1ad.\n\nReason for revert: There was a typo in mb_config.py.\n\nhttps://build.chromium.org/deprecated/tryserver.chromium.angle/builders/win_angle_compile_x64_dbg_ng/builds/0/steps/analyze/logs/stdio\n\nMBErr: Builder name \"win_angle_compile_x64_dbg_ng\"  not found under masters[tryserver.chromium.angle] in \"E:\\b\\c\\b\\win\\src\\tools\\mb\\mb_config.pyl\"\n\nOriginal change's description:\n> Update cq.cfg for new compile-only builders.\n> \n> This removes the x64 versions of the Windows tests from the ANGLE CQ.\n> They are still available to run as optional try jobs, if we suspect\n> a failure. This should reduce the amount of test duplication while\n> still keeping complete coverage.\n> \n> It also updates the Clang builder to the MSVC builder, since Chrome\n> has switched to Clang by default on Windows, and the clang builder\n> was a deprecated version of the MSVC builder anyway.\n> \n> Bug: chromium:786044\n> Change-Id: I786fe85dcdaa57b55b0b44244797c9285c577ea2\n> Reviewed-on: https://chromium-review.googlesource.com/782402\n> Reviewed-by: Geoff Lang <geofflang@chromium.org>\n> Reviewed-by: Andrii Shyshkalov <tandrii@chromium.org>\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n\nTBR=geofflang@chromium.org,jmadill@chromium.org,tandrii@chromium.org\n\nChange-Id: If13d3d69f0a1facd3876858afdaf0577f6ab1cb7\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBug: chromium:786044\nReviewed-on: https://chromium-review.googlesource.com/784070\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/cc93cebf275a37e2f271f4856d7f13fc7eb3c1ad", "message": "Update cq.cfg for new compile-only builders.\n\nThis removes the x64 versions of the Windows tests from the ANGLE CQ.\nThey are still available to run as optional try jobs, if we suspect\na failure. This should reduce the amount of test duplication while\nstill keeping complete coverage.\n\nIt also updates the Clang builder to the MSVC builder, since Chrome\nhas switched to Clang by default on Windows, and the clang builder\nwas a deprecated version of the MSVC builder anyway.\n\nBug: chromium:786044\nChange-Id: I786fe85dcdaa57b55b0b44244797c9285c577ea2\nReviewed-on: https://chromium-review.googlesource.com/782402\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Andrii Shyshkalov <tandrii@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/902e8c18432118f592a41e06ab8374ee4d984739", "message": "Reland \"Make TType store a const char * for mangled name.\"\n\nThis is a reland of dc7bffd06b526bbffd3d1c1ddbd6c763a2cc7287\n\nReland fixes the memory regression by not calling new, instead\ncalling the pool allocator directly.\n\nOriginal change's description:\n> Make TType store a const char * for mangled name.\n>\n> We would only ever use the c_str value from the mangled name. This\n> makes it easier to make constexpr TTypes.\n>\n> Bug: angleproject:1432\n> Change-Id: I147b3a85f9b8b2453e2d7f4a713d767b22036cc9\n> Reviewed-on: https://chromium-review.googlesource.com/776277\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n> Reviewed-by: Kai Ninomiya <kainino@chromium.org>\n\nBug: angleproject:1432\nChange-Id: I1aaeea883186b9061955d55f2fa77d27f5d9b725\nReviewed-on: https://chromium-review.googlesource.com/782406\nReviewed-by: Kai Ninomiya <kainino@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/7f738d4e8766549304e83a8f7b7708fbd9242cf8", "message": "Vulkan: Refactor CommandBuffer helper class.\n\nThis makes the base vk::CommandBuffer class as close to the Vulkan\nAPI as possible. It moves the extra functionality and state tracking\nto a CommandBufferAndState helper class.\n\nAlso no longer stores a reference to a CommandPool in a CommandBuffer.\nEventually we won't need to free CommandBuffers explicitly, since they\ncan be freed en-masse by deallocating the CommandPool on a flush.\n\nBug: angleproject:2200\nChange-Id: I5095fe89e8da935ff8273b1a402ccfd6a3ffe0df\nReviewed-on: https://chromium-review.googlesource.com/778184\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/4f407ce208e2ff978bdcaced06d70a274fb9216b", "message": "Fix Clang dEQP build on Win.\n\nRolls the build/ repos from Chromium to include the fixed config.\nAlso includes incidental improvements to platform-specific hooks.\n\nBug: chromium:727437\nChange-Id: Ia42a30acac1e800e593e304bfc59d86eb0a1e57c\nReviewed-on: https://chromium-review.googlesource.com/782340\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/378734c51221c694f3b0bba56a5bfb4e2789ecfc", "message": "D3D11: Lazy evaluation for draw call vertex params.\n\nThe vertex params are the 'start' vertex index and the number of\nvertices in the draw call. For indexed draws, they sometimes mean we\nneed to compute the index range. In other cases, we don't. Defer\ncomputing the index range as long as possible so we don't end up\ncomputing the index range when we don't have to.\n\nBUG=angleproject:2229\n\nChange-Id: I8e125416ef6767787a14509b322efa8dcd8e4a34\nReviewed-on: https://chromium-review.googlesource.com/764676\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/03fd0356b4c938a72a7148e2ac9cbe87c513603f", "message": "D3D11: Push index range computation deeper.\n\nIf we can make the index range computation happen as late as possible,\nwe won't have to check it during the fastest draw call paths.\n\nThis change makes it easier to skip re-computing some index range\nchecks by only checking it in one place in IndexDataManager, and by\nmaking it a lazy check; the check is never evaluated if the primitive\nrestart workaround is not enabled.\n\nFuture work can also push the index range computation for vertex info\nlater, so we only evaluate it in the cases where we need it.\n\nBUG=angleproject:2229\n\nChange-Id: Ic55fac9e23fd35a119ddff475355a43095d2e3e9\nReviewed-on: https://chromium-review.googlesource.com/764675\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c7965001b32fbd7c03a5ddd908af603ee29f0601", "message": "Revert \"Make TType store a const char * for mangled name.\"\n\nThis reverts commit dc7bffd06b526bbffd3d1c1ddbd6c763a2cc7287.\n\nReason for revert: Causes a memory leak, detected by ASAN bot:\n\nhttps://build.chromium.org/p/tryserver.chromium.linux/builders/linux_chromium_asan_rel_ng/builds/494713\n\nDirect leak of 24 byte(s) in 1 object(s) allocated from:\n    #0 0x847aa2 in operator new(unsigned long) /b/build/slave/linux_upload_clang/build/src/third_party/llvm/compiler-rt/lib/asan/asan_new_delete.cc:92:3\n    #1 0x193a833 in sh::TType::buildMangledName() const third_party/angle/src/compiler/translator/Types.cpp:545:21\n    #2 0x193d2e8 in getMangledName third_party/angle/src/compiler/translator/Types.cpp:751:24\n    #3 0x193d2e8 in sh::TType::realize() third_party/angle/src/compiler/translator/Types.cpp:759\n    #4 0x1834474 in sh::TCache::getType(sh::TBasicType, sh::TPrecision, sh::TQualifier, unsigned char, unsigned char) third_party/angle/src/compiler/translator/Cache.cpp:89:11\n    #5 0x1859ac7 in getType third_party/angle/src/compiler/translator/Cache.h:36:16\n    #6 0x1859ac7 in sh::InsertBuiltInFunctions(unsigned int, ShShaderSpec, ShBuiltInResources const&, sh::TSymbolTable&) third_party/angle/src/compiler/translator/Initialize.cpp:28\n\nBug: angleproject:1432\n\nOriginal change's description:\n> Make TType store a const char * for mangled name.\n> \n> We would only ever use the c_str value from the mangled name. This\n> makes it easier to make constexpr TTypes.\n> \n> Bug: angleproject:1432\n> Change-Id: I147b3a85f9b8b2453e2d7f4a713d767b22036cc9\n> Reviewed-on: https://chromium-review.googlesource.com/776277\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n> Reviewed-by: Kai Ninomiya <kainino@chromium.org>\n\nTBR=jmadill@chromium.org,kainino@chromium.org\n\n# Not skipping CQ checks because original CL landed > 1 day ago.\n\nBug: angleproject:1432\nChange-Id: Ib112a2ce9871a4f4afc53101ac1a3ddd166008cf\nReviewed-on: https://chromium-review.googlesource.com/780420\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/578b51fd95ed3a676125a6612aa6c6ffadc0d1a3", "message": "D3D: Add helper for index translation type.\n\nThis makes it a bit simpler to work with the prepareIndexData method.\nAlso removes the mRendererClass member of the index data manager\nsince it was no longer necessary.\n\nBUG=angleproject:2229\n\nChange-Id: I03768b104da21f57c499239bbbb5f716efb0fd48\nReviewed-on: https://chromium-review.googlesource.com/765261\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/2f294c9abbd17c2d049541aded11beb1dd7dccfa", "message": "Add constructors for TMemoryQualifier and TLayoutQualifier.\n\nThese replace the ::create methods, to facilitate constexpr versions.\nAlso adds a constructor of WorkGroupSize that can be made to be\nconstexpr.\n\nBug: angleproject:1432\nChange-Id: I413d1a56102c94d6a383775110a2b850a7532ea0\nReviewed-on: https://chromium-review.googlesource.com/776279\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Kai Ninomiya <kainino@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/4dd167fbac9eed7988407b36b1f05043d1e34d11", "message": "Vulkan: Assign locations to varyings.\n\nThese were actually always required, but only was caught by the newer\nversions of the SPIR-V toolchain.\n\nBUG=angleproject:2237\n\nChange-Id: I43fef179e8792e46a602b39a6decafcab03b19df\nReviewed-on: https://chromium-review.googlesource.com/760638\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/dc7bffd06b526bbffd3d1c1ddbd6c763a2cc7287", "message": "Make TType store a const char * for mangled name.\n\nWe would only ever use the c_str value from the mangled name. This\nmakes it easier to make constexpr TTypes.\n\nBug: angleproject:1432\nChange-Id: I147b3a85f9b8b2453e2d7f4a713d767b22036cc9\nReviewed-on: https://chromium-review.googlesource.com/776277\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Kai Ninomiya <kainino@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/90ed1e4971ae274d125654a0508d60a75a4be252", "message": "Reland \"Clean up the TType class.\"\n\nThis is a reland of 3f286cd1b6e29605a159ee0bd20c76929d4d5a9f\nOriginal change's description:\n> Clean up the TType class.\n>\n> Move more methods into the cpp file, and rename member variables to\n> start with the \"m\" prefix.\n>\n> Also move most of the TPublicType methods into the cpp.\n>\n> Bug: angleproject:1432\n> Change-Id: Ib11a3c8c6ace654fd52077a317814665f81a7261\n> Reviewed-on: https://chromium-review.googlesource.com/776276\n> Reviewed-by: Kai Ninomiya <kainino@chromium.org>\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n\nBug: angleproject:1432\nBug: chromium:786603\nChange-Id: I7f91557d9f9065f4aa90130ce30dc27e9f796065\nReviewed-on: https://chromium-review.googlesource.com/777715\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/3f286cd1b6e29605a159ee0bd20c76929d4d5a9f", "message": "Clean up the TType class.\n\nMove more methods into the cpp file, and rename member variables to\nstart with the \"m\" prefix.\n\nAlso move most of the TPublicType methods into the cpp.\n\nBug: angleproject:1432\nChange-Id: Ib11a3c8c6ace654fd52077a317814665f81a7261\nReviewed-on: https://chromium-review.googlesource.com/776276\nReviewed-by: Kai Ninomiya <kainino@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1eda27a6548972c673fa0b45f9414ef94fe02d68", "message": "Buffer11: Allow CopySubData from uninitialized.\n\nThis fixes a very odd use case where an app would try to copy from an\nuninitialized buffer. I didn't search the spec too closely, but it's\nlikely a valid operation that produces undefined buffer contents.\nPreviously to this change we would genearte an OOM error.\n\nAlso includes an unrelated fix to ensure the latest buffer storage is\nnever nullptr when we have any data.\n\nBug: angleproject:1155\nChange-Id: I4292bd302cc2b84d125a7d3e8d28e4d2b0210e53\nReviewed-on: https://chromium-review.googlesource.com/774991\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/8957b6c07125432a3d2bfc98ff275f4d0f159c77", "message": "Add perf test for ushort DrawElements.\n\nThe code path in the D3D11 back-end is sigificantly different for\nunsigned short indices vs unsigned int. Because of the workaround we\nhave for the primitive restart index in D3D11, ushort rendering can\nbe slower.\n\nBUG=angleproject:2229\n\nChange-Id: I303dcc55b0314ec45508044995ba47b250cbb87d\nReviewed-on: https://chromium-review.googlesource.com/767149\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/39644feebaf4a305b0d93f3f9af86bdc0ac9cee3", "message": "Fix Clang build with dEQP.\n\nThis will require a Chrome-side patch to the build/ folder to enable\nthe new path, with appropriate Chrome-side changes.\n\nBug: chromium:727437\nChange-Id: Iae8d8f4caeead703b322abce75c97c7c9d9e1619\nReviewed-on: https://chromium-review.googlesource.com/773021\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/4d1469315c99e81a8dbda5a226883dddf3cec4b1", "message": "Roll all ANGLE internal DEPS.\n\nNone of these deps are used in the Chromium builds, so this only\naffects the standalone version.\n\nIncludes a change in the build repo necessary to enable fixing the\nClang build with dEQP.\n\nBug: chromium:727437\nChange-Id: Iea5f6299e9f17555891c812229a54a850776f117\nReviewed-on: https://chromium-review.googlesource.com/773020\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/0acb268c99f6b90ff5016000b39ca2fd59562b1c", "message": "TextureD3D: Only update storage if images dirty.\n\nThis uses the existing dirty bit mDirtyImages to early return in the\nTextureD3D::updateStorage methods.\n\nAlso fixes a couple missing cases for setting dirty images. The code\ncould be improved in the future by using a bitset of dirty images per\nmip level instead of a single bit.\n\nBUG=angleproject:1392\n\nChange-Id: I58df2be455b6ee51c3e3f76a6fa44ad585d1480d\nReviewed-on: https://chromium-review.googlesource.com/761243\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/192199a76defd7bb4fd82504ca34542566d9b53d", "message": "ResourceManager11: Store resource sizes 64-bit.\n\nThis prevents possible size count overflow when in 32-bit mode with\na lot of very large resources.\n\nIssue originally reported via Mozilla:\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1412554\n\nBUG=angleproject:2234\n\nChange-Id: Idacfda98356c13bf22bc493ef7aa2bff1a287f97\nReviewed-on: https://chromium-review.googlesource.com/769749\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/6226b8dfa03a5d88e8d036046ad87fcf156b9927", "message": "Vulkan: Fix missing index buffer usage.\n\nThe newer validation layers picked up this missing bit.\n\nBUG=angleproject:2237\n\nChange-Id: I5bb2f1db3a4e284c003de0f5b23f7f613056af3a\nReviewed-on: https://chromium-review.googlesource.com/760637\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/d33c77c02aa343707765235b510e70f450ee549f", "message": "Vulkan: Use correct transfer access mask in layout change.\n\nWhen using a transfer destination, we should be using the transfer\naccess mask, not bottom of pipe or other bits.\n\nUncovered by using a newer version of the layers SDK.\n\nBUG=angleproject:2237\n\nChange-Id: I3ebcca707ac8889d2ece099e3765f5b0ca3dfdbc\nReviewed-on: https://chromium-review.googlesource.com/760636\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/fea1e7541f445d64293a868f103541636f721be4", "message": "Buffer11: Cleanup onCopyStorage.\n\nBUG=angleproject:1155\n\nChange-Id: I7bc5c196d10ae040487ecd1137d9b18c3000775a\nReviewed-on: https://chromium-review.googlesource.com/769730\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/08943afdb79f0ca5bdcdc91137ac76829db9c371", "message": "Remove huge buffer data test.\n\nThis is too difficult to implement without mocking new/delete.\n\nBUG=angleproject:875\n\nChange-Id: I7cdafe11d26939f14a43bc515454dd5cf70c4a2a\nReviewed-on: https://chromium-review.googlesource.com/769849\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5ad52994ba18937eae281c735d240fa193fa395a", "message": "Add generator for EGL proc table.\n\nThis should improve ANGLE startup time by avoiding creating a large\nstd::map filled with the entry points.\n\nBUG=chromium:781460\n\nChange-Id: I20cfdb10b99844d0f60759dda73b729991dc60fe\nReviewed-on: https://chromium-review.googlesource.com/768209\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Antoine Labour <piman@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/740aa41ddf59082ea7d92be12b6ae335bf7d5efa", "message": "Fix angle::Platform export definitions.\n\nThis was only showing up in the GYP build on Windows.\n\nBUG=chromium:778918\n\nChange-Id: Ib9db0c928474be887ec1f46d7e99c0a3dedfb9e0\nReviewed-on: https://chromium-review.googlesource.com/768947\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ff7aac5e4f5dfc86b820f135818d62e1962ab40d", "message": "Re-land \"Export angle::PlatformMethods.\"\n\nThis should fix undefined function call sanitizer warnings.\n\nRe-land fixes the build and uses proper export annotation. Also fixes\nthe missing source includes in BUILD.gn for libANGLE so future\nchanges to Platform.h (and other includes) will get picked up by the\ndependency analyzer step.\n\nBUG=chromium:778918\n\nChange-Id: I92cc8a43bbbdc70de50a67f73b223d8f903cd6cd\nReviewed-on: https://chromium-review.googlesource.com/767111\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Antoine Labour <piman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/36f34243334fa84507bebce5a3e9724c0a1bbc1d", "message": "Buffer11: Cache latest buffer storage.\n\nThis saves needing to scan the list of buffers every time we query\nthe latest buffer storage. Should slightly improve speed.\n\nBUG=angleproject:1155\n\nChange-Id: I6be8457aca1ee5aa871090241e6f67ae16b094a5\nReviewed-on: https://chromium-review.googlesource.com/761242\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c2eb32bad8de1c2033846db3f9e29d6a0af45095", "message": "Revert \"Export angle::PlatformMethods.\"\n\nThis reverts commit 8b920b211d7363daef0d5fb8d2bd69f3253ab033.\n\nReason for revert: This had a syntax error and skipped the compile step, so went undetected.\n\nBUG=chromium:778918\n\nOriginal change's description:\n> Export angle::PlatformMethods.\n> \n> This should fix undefined function call sanitizer warnings.\n> \n> BUG=chromium:778918\n> \n> Change-Id: I718d58edd7b75a3fca1089edc4df7f3251d85153\n> Reviewed-on: https://chromium-review.googlesource.com/767152\n> Reviewed-by: Jamie Madill <jmadill@chromium.org>\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n\nTBR=jmadill@chromium.org,piman@chromium.org\n\nChange-Id: I1825ce88bc82867a983bb08cd6732caff54f061c\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBug: chromium:778918\nReviewed-on: https://chromium-review.googlesource.com/767128\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/87718a8759ee9880c1237d1f89dd1629cf79b8f6", "message": "Use more gl::Error in IndexDataManager.\n\nBUG=angleproject:2229\n\nChange-Id: I19f7c1600300298e7bc2a1f7dc4215a67053767c\nReviewed-on: https://chromium-review.googlesource.com/764674\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/8b920b211d7363daef0d5fb8d2bd69f3253ab033", "message": "Export angle::PlatformMethods.\n\nThis should fix undefined function call sanitizer warnings.\n\nBUG=chromium:778918\n\nChange-Id: I718d58edd7b75a3fca1089edc4df7f3251d85153\nReviewed-on: https://chromium-review.googlesource.com/767152\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/cac94a912493b1b7b0711700d03bbec3ffa894ad", "message": "Optimize ShaderVariable::isBuiltIn.\n\nThis makes the check a bit faster, by inlining the prefix check.\nAlso some cleanups to ValidateVertexShaderAttributeTypeMatch.\n\nBUG=angleproject:2202\n\nChange-Id: Ifeab4cd85a91a1639a461f44776a68ac98c5bd79\nReviewed-on: https://chromium-review.googlesource.com/761240\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/9776035d6ab04b60e6e72dcb8e1b9f05309b9193", "message": "Vulkan: Implement Buffer updates.\n\nThis allows the app to update Buffer data while the data is in use\nby the GPU. For instance, uploading new vertex attribute data after\na draw call.\n\nIt introduces a StagingBuffer helper class, similar to StagingImage.\nThese classes are somewhat temporary and could be redesigned.\n\nBUG=angleproject:2200\n\nChange-Id: If8634b1411779b16c2bd22cce18a5f37ed958d1c\nReviewed-on: https://chromium-review.googlesource.com/756959\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/3fb0ca02af4b7eb93b5cfc5b04f49fde6664a1d8", "message": "Move LazyResource::resolveImpl to the cpp.\n\nThis avoids a compile error where GCC is not compatible with MSVS\nand Clang, who can both handle calls to forward declared functions\nin templates. It explicitly specializes LazyResource for the used\ntemplate types.\n\nBUG=angleproject:2182\n\nChange-Id: Iedb1f157d0662b0ea4472c9b4e85828217be577e\nReviewed-on: https://chromium-review.googlesource.com/757758\nReviewed-by: Jeff Gilbert <jgilbert@mozilla.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/6db1c2e88a0b7871efbe41b189ce71c7f1ff5318", "message": "Link interface blocks in ProgramImpl::link.\n\nThis allows the back-end to have access to the interface block info\nin the link operation, and also allows the interface block info to\nhave direct access to the post-link Impl information.\n\nBUG=angleproject:2208\n\nChange-Id: Ib2bfb3c9155eee715bd3d29de1c3fdd67b16eed4\nReviewed-on: https://chromium-review.googlesource.com/753521\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/7af0de52d12f2e85b35883402708eed6203164c1", "message": "Rename UniformLinker.cpp/h to ProgramLinkedResources.\n\nA more general name for a file that will house a collection of pogram\nvariable related linking code.\n\nBUG=angleproject:2208\n\nChange-Id: I82710f6abadd2df58fb58a3c4179989fe956e7e4\nReviewed-on: https://chromium-review.googlesource.com/755858\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c9727f31b5093c381a423da8f0ffda85d929aaae", "message": "Pass InterfaceBlockLinker to ProgramImpl::link.\n\nThis change is in preparation for moving the linking logic to the\nImplementation.\n\nIntroduces a ProgramLinkedResources class that is passed into the Impl\nand holds linking-related info such as the UBOs, Varyings, etc.\n\nBUG=angleproject:2208\n\nChange-Id: I2ef0824b54bfb462c79d003bffe34e9cfad60d8a\nReviewed-on: https://chromium-review.googlesource.com/746204\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/977abce7a24c3b4a9809b58407c97a998439cc8a", "message": "Refactor interface block linking.\n\nThis moves the logic for interface block linking. The new design is\nintended to be flexible enough to be passed into a back-end call to\nProgramImpl::link. Then, the Impl object can be responsible for both\nfiltering out unreferenced interface blocks as well as having access\nto the linked interface block information.\n\nA future change will pass the InterfaceBlockLinker objects (or objects\nwhen dealing with ES 3.1 and Shader Storage Blocks) to the Impl. This\nwill help fix a D3D11 back-end bug where we would need acess to the\nShader objects to finish a deferred uniform block link.\n\nThis should also potentially make it easier for the back-ends to\ndetermine Shader Storage Block size and properties without defining\nnew Impl methods.\n\nBUG=angleproject:2208\n\nChange-Id: Ic5244a808dba44ba1a8c08d9ee701952034d2b18\nReviewed-on: https://chromium-review.googlesource.com/746203\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5b09d90d9cf70df2f357cc2df4bb8f61f243c131", "message": "Skip RedefineBufferInUse Vulkan test on Win/Intel.\n\nAlso cleans up GenerateWorkarounds a bit for D3D11.\n\nBUG=angleproject:2221\n\nChange-Id: I01667f850051045006d3439406aac3f4d094a374\nReviewed-on: https://chromium-review.googlesource.com/754915\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1f0b468c4b0303ff6fc0984092d3868490fe5e38", "message": "StateManagerGL: Fix reserved indexed buffer count.\n\nWe were reserving the count of shader resource limits instead of API-\nside binding limits. This fixes a broken dEQP test that was only\nshowing up in some device configs. Also add an ASSERT.\n\nSee:\ndEQP-GLES31.functional.layout_binding.ubo.fragment_binding_max_array\n\nBUG=angleproject:1920\n\nChange-Id: I993ebc7993cc3cc78e90f74e097c0bbab9d03909\nReviewed-on: https://chromium-review.googlesource.com/754721\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ebb1ea2ddccd055a536c5113c67a8e5c5f5df5d8", "message": "Fix dEQP test expectations.\n\nThese were broken in 1f4d68d because of a lack of test expectation.\nAlso narrow the expectations to the Quadro P400.\nAlso add a new GLES3 OpenGL expectation.\n\nNote that putting in a certain configs breaks the GPU test\nexpectations logic on Android:\n\nI   20.617s list_tests(01000be22172ac54)    Fail to identify GPU\nI   20.617s list_tests(01000be22172ac54)    [ CRASHED      ]\n\nBUG=angleproject:2222\n\nChange-Id: I783c5e36414a201df64b21c6b7cf8410b2260534\nReviewed-on: https://chromium-review.googlesource.com/754591\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c67323a9de6415d19344c69fc376c91288f2e124", "message": "Squash State dirty bits to below 64.\n\nThis will dramatically speed up performance on 64-bit systems due to\nthe efficiency of angle::BitSet64. Improves performance of the GL\nback-end on benchmarks quite a bit.\n\nSquashes the Pack and Unpack states together. Also moves the current\nvalue dirty bits to a single dirty bit, with a separate set for each\nattribute. Also squashes a multisample dirty bit.\n\nAlso fixes an incorrect dirty bit in StateManagerGL.\n\nWe may want to implement a semi-fast version of BitSet64 for 32-bit\nsystems if we find performance is not satisfactory.\n\nBUG=angleproject:2188\n\nChange-Id: I4616782bf75413252ede3e3ac752b9ccdb9aab49\nReviewed-on: https://chromium-review.googlesource.com/722423\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "y-novikov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/4e36db8c146172b54206eb0149107bc6bdca7524", "message": "Skip FindMSBAndFindLSBCornerCases on Android OpenGLES\n\nDue to a bug in Adreno N5X Oreo driver\n\nBUG=angleproject:2304\n\nChange-Id: I209d9b227557571f45a93aa68a003378e12402a1\nReviewed-on: https://chromium-review.googlesource.com/876995\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/b0accd45a92dd70932baf4eb6954114359caf9da", "message": "Flatten \"#pragma STDGL invariant(all)\" also for ESSL to ESSL translation\n\nAdreno's driver in Android Oreo follows the spec to the letter,\nand applies \"#pragma STDGL invariant(all)\" only to the outputs of\na fragment shader, causing InvariantAllBoth test to fail.\n\nSince the wording of the spec doesn't match the intended usage of this\npragma, ANGLE should flatten it to workaround spec conformant drivers.\n\nBUG=angleproject:1293\n\nChange-Id: I9f8ad44adc3b958204b88805dba8c5b7964b3d9f\nReviewed-on: https://chromium-review.googlesource.com/860920\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/47c9888c35cac5b2a3741d0ddcdac4234a857058", "message": "Skip SimpleOperationTest.DrawQuadAndSwap on Linux Intel Vulkan\n\nWas flaky.\n\nBUG=angleproject:2301\n\nChange-Id: Id71cf6c43e133810c64535bbde494d12546b0adc\nReviewed-on: https://chromium-review.googlesource.com/854978\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/d22cc5cbbbd1d8e9c801e7851c9a4378ed61bcfa", "message": "Vulkan: Use correct Linux link flags for layers.\n\nFrom third_party/vulkan-validation-layers/src/layers/CMakeLists.txt\nOtherwise, there is a conflict between global functions with same name\nfrom different layers and the loader.\nConflict is resolved by -Bsymbolic.\n\nBUG=angleproject:2296\n\nChange-Id: I40859326626c3865ba346c6e817b7c512735054e\nReviewed-on: https://chromium-review.googlesource.com/850727\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c6faa9745f889b838ec8a7c6ad255bbb1c51f48d", "message": "Skip UniformBufferTest.SimpleBindingChange on Mac NVIDIA GL\n\nUnskip UniformBufferTest.SimpleBufferChange,\nwhich was skipped by mistake instead of this test in\nhttps://chromium-review.googlesource.com/833287\n\nBUG=angleproject:2287\n\nChange-Id: Id79821b26ad38ed07d1193b717ad222df3bb58fe\nReviewed-on: https://chromium-review.googlesource.com/838262\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f2afccca7b27bf2a2415cbf066771295106500c5", "message": "Skip UniformBufferTest.SimpleBufferChange on Mac NVIDIA GL\n\nBUG=angleproject:2287\n\nChange-Id: I1a5895a9b5c173b221da6ac511c05d8b7d646a5d\nReviewed-on: https://chromium-review.googlesource.com/833287\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/994ee3f23ec5eaccaf8547ee497f30237bfd0a21", "message": "Remove static sNativeLib from FunctionsEGLDL\n\nIt should be safe to never dlclose native EGL,\nsince we want to do it only when process exits,\nin which case fd is closed and library destructor is called.\n\nBUG=angleproject:1459\n\nChange-Id: I8d3e5b323164d2f6473a083973f4d0adc9e655aa\nReviewed-on: https://chromium-review.googlesource.com/786051\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/784134994bd025f7d81f2c3ab193c86b539cd26a", "message": "Skip ShaderStorageBufferTest31.AtomicMemoryFunctions on Linux AMD GL\n\nBUG=angleproject:2255\n\nChange-Id: I986ee0e674d0f3fc2425c922ca92a3f8d86efb8c\nReviewed-on: https://chromium-review.googlesource.com/775816\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/98f9f537bb2a7717f6b21e4db5c62c0faa7b5a7f", "message": "Skip RenderingLimitToDefaultFBOSizeWithNoAttachments on Linux AMD GL\n\nBUG=anglebug:2253\n\nChange-Id: I4c2fc6904f88a6d61c5d847b812a4272a99c1906\nReviewed-on: https://chromium-review.googlesource.com/773063\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/e3bfefb410652d30658c112b862175d22ca75672", "message": "Align float access in InterleavedAttributeData perf test\n\nUsed to crash on arm because of unaligned float access in positionColorData\n\nBUG=chromium:675997\n\nChange-Id: Iadc705986700248ce3cff9bb33fcd72c94ad1c59\nReviewed-on: https://chromium-review.googlesource.com/764688\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "qjia7": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/a08d410d1b36aa31f700ed7da5ed90cf6a5c0969", "message": "Fixed ssbo end2end tests failure\n\nThe array stride is implementation-dependent if the storage layout is\nnot standard layout. So this change will use std140 as the layout to\nfix the bug.\n\nBUG=767240,angleproject:2255\n\nChange-Id: I21de52ebad6d27783eeade63d6fac81c0842085d\nReviewed-on: https://chromium-review.googlesource.com/861313\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/4747414edae74cb1f8221527275b857c628a130d", "message": "Use dirty bit for element array buffer\n\nBUG=angleproject:2188\n\nChange-Id: I2b2aced542032c7c263f911ef1516af1d42190cc\nReviewed-on: https://chromium-review.googlesource.com/846346\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/cd3acf67d1dcdd0446f01fd9fe484608b6792c87", "message": "ES31: Update block members static use\n\nBUG=angleproject:1920\nTEST=angle_end2end_tests\n\nChange-Id: I90bcd3bf5a078623b3a739615fbc7b157b6fb94c\nReviewed-on: https://chromium-review.googlesource.com/808144\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5b6b9c638d4642fd76895883b24102e123c53b6d", "message": "Use dirty bit for draw indirect buffer\n\nBug: angleproject:1595\n\nChange-Id: I031beab818daca8a20726d7bff564649feefc1f3\nReviewed-on: https://chromium-review.googlesource.com/844214\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/62fcf62aecc7dc23b73e1cfefb751191eafc39d3", "message": "ES31: Add DispatchComputeIndirect suport for OpenGL backend\n\nBUG=angleproject:2270\nTEST=dEQP-GLES31.functional.compute.indirect_dispatch.*\n\nChange-Id: Id062a80188b2a37f28833aaae8e6d31bac382276\nReviewed-on: https://chromium-review.googlesource.com/802763\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/e30edd6fcb9625e62985548917340360811e0d93", "message": "Update deqp31 test expectations\n\ndEQP-GLES31.functional.shaders.builtin_functions.precision*compute* cases were\nfixed by https://chromium-review.googlesource.com/c/angle/angle/+/792951\n\nBUG=angleproject:1951,angleproject:1663\nTEST=dEQP-GLES31.functional.shaders.builtin_functions.precision*compute*\n     dEQP-GLES31.functional.draw_indirect.compute_interop.*\n     dEQP-GLES31.functional.layout_binding.image*\n\nChange-Id: I25a9272df8c66e1e5279de54a091b3077cd59b22\nReviewed-on: https://chromium-review.googlesource.com/822606\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/a98a28112b0e915a511af9956ab92b3143338313", "message": "ES31: Add support for GL_DISPATCH_INDIRECT_BUFFER_BINDING binding point\n\nBUG=angleproject:2270\nTEST=dEQP-GLES31.functional.state_query.integer.dispatch_indirect_buffer_binding_*\n\nChange-Id: I2c286c219c5c849d7ba417069f53f2d0fae6abf1\nReviewed-on: https://chromium-review.googlesource.com/799990\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/feb2c63b7b055924ea83e0833d88490cab629464", "message": "ES31: Fixed the SSBO instance array error\n\nIn ESSL 3.10 spec, there are below descriptions:\n1. Any uniform or shader storage block declared without a binding qualifier\nis initially assigned to block binding point zero.\n2. If the binding qualifier is used with a uniform block or shader storage\nblock instanced as an array, the first element of the array takes the\nspecified block binding and each subsequent element takes the next\nconsecutive binding point.\n\nSo explicitly specifying the binding to zero is different with not declaring\na binding qualifier for a block instance array.\n\nFor example:\n1)    layout(shared, binding = 0) buffer blockName {\n          uint data;\n      } instanceName[3];\n\n2)    layout(shared) buffer blockName {\n          uint data;\n      } instanceName[3];\nIn 1), the binding point of each element instance is 0, 1, 2.\nIn 2), the binding point of each element instance is 0, 0, 0.\n\nBUG=angleproject:1951\nTEST=dEQP-GLES31.functional.ssbo.layout.*\n\nChange-Id: If770d6e1fd8e13d2cdc762bab289772076258e4c\nReviewed-on: https://chromium-review.googlesource.com/816340\nReviewed-by: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/94f1e89fc8bd87e3177cf130f0c99a48a7e1765f", "message": "ES31: Add atomic counter buffer data size\n\nBUG=angleproject:1729\nTEST=dEQP-GLES31.functional.ssbo.layout.*\n     dEQP-GLES31.functional.compute.basic.atomic_counter*\n\nChange-Id: Ic78c0f089fd539c0b1064e8405d63505456dbc01\nReviewed-on: https://chromium-review.googlesource.com/777958\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ed2e6aa5547c7099e0ecb54792c7ae806b3065f2", "message": "GLES31: Use more compact entry point style.\n\nThis migrates to the new generation style used in GLES2 and GLES3.\n\nBUG=angleproject:2254\n\nChange-Id: I10afa1f006ff68e8bafda2bd45dd9a048f8f7dff\nReviewed-on: https://chromium-review.googlesource.com/787172\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/cb59a9097aedefa055cd809f4fe9ff9b36bb19d4", "message": "GLES31: Auto-generate entry points source.\n\nBUG=angleproject:2254\n\nChange-Id: If9071066571f09902657528053e4af68b7dcdd2d\nReviewed-on: https://chromium-review.googlesource.com/781105\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5451d532aaf9b714bef7537bc2308143f5ca52ea", "message": "Refactor ES31 entry points\n\nBUG=angleproject:2254\n\nChange-Id: I4e837a831e0950330b243bd8aa01831af0a70cc4\nReviewed-on: https://chromium-review.googlesource.com/775604\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/a3106c585ae630bb4bf836a6e5ee6838a4b9bd16", "message": "ES31: Add atomic memory functions\n\nBUG=angleproject:1442\nTEST=angle_unittests, angle_end2end_tests\n     dEQP-GLES31.functional.compute.shared_var.atomic*\n     dEQP-GLES31.functional.compute.basic.shared_atomic_op*\n     dEQP-GLES31.functional.ssbo.atomic.*\n\nChange-Id: I82b54fde3a852d3bd917b1e19680baa1c28fce4d\nReviewed-on: https://chromium-review.googlesource.com/765061\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/3a9090fa0bfd9cb37daea250139dfe35db84435e", "message": "ES31: Add BUFFER_VARIABLE and SHADER_STORAGE_BLOCK program interfaces\n\nThis patch collects the shader storage block members information.\nIt implements getShaderStorageBlockMemberInfo and getShaderStorageBlockSize\nfor OpenGL backend. Meanwhile, it implements BUFFER_VARIABLE and SHADER_STORAGE_BLOCK\ninterfaces for program query.\n\nBUG=angleproject:1920\nTEST=angle_end2end_tests:ProgramInterfaceTest*\n     dEQP-GLES31.functional.layout_binding.ssbo*\n     dEQP-GLES31.functional.compute.basic.empty\n     dEQP-GLES31.functional.compute.basic.ssbo_rw*\n     dEQP-GLES31.functional.compute.basic.ssbo_local_barrier*\n     dEQP-GLES31.functional.compute.basic.copy_image_to_ssbo_small\n     dEQP-GLES31.functional.compute.basic.copy_ssbo_multiple_groups\n     dEQP-GLES31.functional.compute.basic.copy_ssbo_multiple_invocations\n     dEQP-GLES31.functional.compute.basic.copy_ssbo_single_invocation\n     dEQP-GLES31.functional.compute.basic.copy_ssbo_to_image_small\n     dEQP-GLES31.functional.compute.basic.shared_var*\n     dEQP-GLES31.functional.compute.basic.ubo_to_ssbo*\n     dEQP-GLES31.functional.compute.basic.write_multiple_arr*\n     dEQP-GLES31.functional.compute.shared_var.basic_type.*\n     dEQP-GLES31.functional.compute.shared_var.work_group_size.*\n     dEQP-GLES31.functional.atomic_counter.*\n\nChange-Id: Ie8b81fde5a2e919aab77adb3d137c9ff2f193409\nReviewed-on: https://chromium-review.googlesource.com/712235\nReviewed-by: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xhcao": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/b745f172dd6870736e3d2e2112a9e908fdc7a74b", "message": "Add more test cases for bindImageTexture\n\nAdd cases that bindImageTexture binds a single layer of a\ntwo-dimensional array, three-dimensional, or cube map texture.\n\nBUG=angleproject:1987\nTEST=angle_end2end_tests.ComputeShaderTest.*\n\nChange-Id: I75883ef05c509100e5164a5add69167a41203101\nReviewed-on: https://chromium-review.googlesource.com/856320\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/08a8ec8882eaff101ec6f2aacaa18d7d84a617fc", "message": "ES31: Support bindImageTexture on Texture3D/Texture2DArray/TextureCube\nfor compute shaders on D3D\n\nBUG=angleproject:1987\nTEST=angle_end2end_tests.ComputeShaderTest.*\n\nChange-Id: I075296ac3b6796a334929699c16f2399d7915e51\nReviewed-on: https://chromium-review.googlesource.com/844063\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/26143fdd0f82b7d2d25dbe548515b80547491a22", "message": "ES31: Support bindImageTexture on Texture2D for compute shaders on D3D\n\nBUG=angleproject:1987\nTEST=angle_end2end_tests\n\nChange-Id: I3b0afb441a41dbd7f204b1d1bba7884c8d203ce1\nReviewed-on: https://chromium-review.googlesource.com/749004\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/89c422adb41e5d4dc93c9e9d808c583737a84944", "message": "ES31: Support memoryBarrier and memoryBarrierRegion APIs\n\nBUG=angleproject:2280\nTEST=dEQP-GLES31.functional.compute.basic.image_barrier_single\n     dEQP-GLES31.functional.compute.basic.image_barrier_multiple\n     dEQP-GLES31.functional.compute.basic.ssbo_cmd_barrier_single\n     dEQP-GLES31.functional.compute.basic.ssbo_cmd_barrier_multiple\n     dEQP-GLES31.functional.synchronization.*\n\nChange-Id: If14debab21247dc4b446e86d1642fbc9376b6dd7\nReviewed-on: https://chromium-review.googlesource.com/798803\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/9c8e1a361562a722e1218210d76129a9f4de4499", "message": "ES31: Implement image state query\n\nBUG=angleproject:2278\nTEST=dEQP-GLES31.functional.state_query.indexed.image_binding*\n\nChange-Id: Ia624d55ccf1fdf92188d9e710265bdffe96a23c6\nReviewed-on: https://chromium-review.googlesource.com/810465\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/10a4d43462fa72c6b104a23a6958a0b82fd443be", "message": "ES31: Enable some dirty bits and dirty objects for compute pipeline\n\nBUG=angleproject:2265\nTEST=dEQP-GLES31.functional.shaders.builtin_var.compute.*\n     angle_end2end_test.ShaderStorageBufferTest31\n                       .MultiStorageBuffersForMultiPrograms\n\nChange-Id: Icc3df122602951a2328003c10a76696ab4c9f0d8\nReviewed-on: https://chromium-review.googlesource.com/792951\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/37584b36aaf5e7358341b440e7748131be6ee267", "message": "Refactor: replace SamplerType with ShaderType\n\nBUG=angleproject:1987\n\nChange-Id: I189e1606bd966eb369e8192a6866c8e90810e937\nReviewed-on: https://chromium-review.googlesource.com/802956\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Yunchao He <yunchao.he@intel.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vonture": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/2aaa7b4e1040d90d5ef2dbd2ba53761d88528b79", "message": "Add GLES1 targets and stub entry points.\n\n * Create a new libGLESv1_CM target.\n * Merge all autogenerated extension entry points into one file.\n * Allow creation of ES1 contexts.\n\nBUG=angleproject:2306\n\nChange-Id: I446258363a96a3c37d657089dd7c1cff0fa3cf78\nReviewed-on: https://chromium-review.googlesource.com/865718\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/e1aa9219314249dcb79515b3bea6595b76c2a446", "message": "Create a new DeviceImpl each time one is requested from a DisplayImpl.\n\nThis makes sure that the Device to DeviceImpl ratio is always 1:1 and\navoids any potential double-deletion or unexpected deletion of\nDeviceImpl objects.\n\nBUG=742034\n\nChange-Id: I778068ccd09b7478d3683123456062b94be242a1\nReviewed-on: https://chromium-review.googlesource.com/854627\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/540a1dfe131e9b8fe32ed2ff27d41d88d4cf0af4", "message": "Refactor DeviceImpl creation.\n\nAdd an initialize function to match other impl objects and simplify the\ncreation of DeviceImpls.\n\nBUG=742034\n\nChange-Id: I569c8252d5d23c8af98835f6c08e7a3b640fc3f3\nReviewed-on: https://chromium-review.googlesource.com/854626\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/28334a410255628ead97b959e2b4b6adf14a99e6", "message": "Remove the externallyForced method of DeviceImpl.\n\nIt can be inferred from the presence of an owning display.\n\nBUG=742034\n\nChange-Id: I6a33378f4256733da6d9658d47763153e431ad70\nReviewed-on: https://chromium-review.googlesource.com/854625\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/58ba6bf5ecedaadbbe4d469545dca5017cf53034", "message": "Enable debug layers by default whenever assertions are enabled.\n\nBUG=angleproject:2279\n\nChange-Id: I7e7ef359fa3021aa10585653b2fec169f5d4a51f\nReviewed-on: https://chromium-review.googlesource.com/794536\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/4fba4a97bc086665e0ea4a0366a34d6b538b0426", "message": "Include the D3D11 headers on Windows when OpenGL is enabled.\n\nThe OpenGL backend on Windows uses D3D11 to implement several interop\nextensions.  Without this change, there are compile failures when the\nD3D11 backend is disabled.\n\nBUG=angleproject:2276\n\nChange-Id: I69ad524ca84aa0aa399cfc0b601315f3ee65ed16\nReviewed-on: https://chromium-review.googlesource.com/809186\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ded7923b2553d825633c18cf092770a10be47a1f", "message": "GL backend: Only synchronize transform feedback state when it changes.\n\nBUG=angleproject:2188\n\nChange-Id: I5bfcc038c887dde0770564d103eb3cb234b248c9\nReviewed-on: https://chromium-review.googlesource.com/794100\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/bf0a40bbcd6ef80e77073f641d4d9f9817908eeb", "message": "Improve documentation about selecting intial CL reviewers.\n\nBUG=angleproject:2274\nBUG=769026\n\nChange-Id: I8128a438a0831ebc4d6693085a41c41182d259c7\nReviewed-on: https://chromium-review.googlesource.com/803854\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f5be5bafa6f6376f20131c5c03b23a21b2ff6f80", "message": "StateManagerGL: Use dirty bits for program binding.\n\nBUG=angleproject:2188\n\nChange-Id: I7456692e779107514ab87bfb1a0ab91178c9fc3a\nReviewed-on: https://chromium-review.googlesource.com/797356\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/b944053a0e083fd32b0de979e1698ea42b5772af", "message": "Add extra warnings for narrowing and bool conversion.\n\nBUG=angleproject:2258\n\nChange-Id: If571820fccca1daba0ea1ac5a204f95b1b3c59f9\nReviewed-on: https://chromium-review.googlesource.com/794093\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5201ce127afea0ef1d34e161ead085fe50e73da4", "message": "Fix MSVC 2015 warnings.\n\nBUG=angleproject:2258\n\nChange-Id: I280eb0e461fd749b01594bb1bb9a417f2cbc23fa\nReviewed-on: https://chromium-review.googlesource.com/793975\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/df68ca50b3105f2b70dca31b16ab41c1cb0e4cd9", "message": "Add missing break in StateManagerGL::syncState.\n\nBUG=angleproject:2188\n\nChange-Id: I4baae8b13f217769cd10f5e559452ab49350174f\nReviewed-on: https://chromium-review.googlesource.com/792173\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/0250fd4a78aeb7b6768d21b331a112c59316237d", "message": "Handle DIRTY_BIT_LABEL in TextureGL::syncState.\n\nBUG=angleproject:1993\n\nChange-Id: I495589e638443060ee8c140ee44a990e89f0ecdd\nReviewed-on: https://chromium-review.googlesource.com/789491\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c7c0d1c1b08b584a7b2a64bbf9ce1ca7016aa799", "message": "Expose OES_vertex_array_object on the GL backend.\n\nBUG=781164\n\nChange-Id: I92738c0f45efdf0efaecede509648fd5a4d00b8b\nReviewed-on: https://chromium-review.googlesource.com/786338\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5d5253a3360a90d47e3d24d4bf30997664fc7364", "message": "Clean up usage of EXT_debug_marker and KHR_debug in the backends.\n\nIn RendererGL, the EXT_debug_marker functions were calling the\nKHR_debug entry points, now they fall back only when EXT_debug_marker is\nmissing.\n\nSeparated the ContextImpl methods for the two extensions.\n\nBUG=781164\n\nChange-Id: I615b5965b705e55eb730ebefa6e27e0ee6d86c31\nReviewed-on: https://chromium-review.googlesource.com/786337\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5a654f5ff30f711c7e14ec278a56c5cfda2d52d5", "message": "Fix reinterpret_cast size missmatch warning on 64-bit Windows.\n\nChange-Id: I9c4b102c60abb90281f778833be9b1d5bfdcb8f1\nReviewed-on: https://chromium-review.googlesource.com/786110\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/e51ba63b31112458b25d46c2746547272f3a8164", "message": "Optimize Texture initialization tracking with extra caching.\n\nIn both Texture and State, track when all images/textures are\ninitailized so that State::clearUnclearedActiveTextures can early-exit.\n\nImproves performance on the WebGL Aquarium by 26% (23->29 FPS) with 30000\nfish.\n\nBUG=angleproject:2188\n\nChange-Id: Ie2860a81d7be19ee87262325d8cf27bde43f80b8\nReviewed-on: https://chromium-review.googlesource.com/782339\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c801e359a31cd410a344e783a7e8073ccb74b6cd", "message": "Add configurations of the TexturePerf benchmark that use robust init.\n\nBUG=angleproject:2188\n\nChange-Id: Ia23b54044a85435c761478bceeb9aac961fac0d1\nReviewed-on: https://chromium-review.googlesource.com/783230\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/92019431df4d28b222bdcb58f441a172e7d1409b", "message": "Make conversion from GL types to native bools consistant.\n\nSome places would compare with \"== GL_TRUE\" and others with \"!= GL_FALSE\".\nThis behaviour is not in the OpenGL spec but \"!= GL_FALSE\" is the most\nstandard and follows the same rules as C and C++.\n\nRemove un-necessary validation that params are either GL_TRUE or\nGL_FALSE.\n\nUpdate some internal storage from GLboolean to bool.\n\nBUG=angleproject:2258\n\nChange-Id: I12adbe2d24318a206521ca6ad1099ee7e2bf677e\nReviewed-on: https://chromium-review.googlesource.com/779799\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/416a23e855bc79ff82a81898ac475e8e40491f4b", "message": "ProgramGL: Make sure the binary vector does not read out of bounds.\n\nBy sizing the vector to at least one element, it is not possible to pass\ninvalid pointers to the driver or binary stream even if the binary is\nzero-sized.\n\nBUG=angleproject:2257\n\nChange-Id: Ie0e42bff1192207e0e069934b03dfd49e8d34824\nReviewed-on: https://chromium-review.googlesource.com/779739\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/05fd3860950eb29d1e4404e6d3250fb93963058b", "message": "Make sure non-multi-sampled EGL configs are always exposed.\n\nIt is possible for some hardware to not support multisampling on any\ntexture formats which results in an empty sample set for all formats.\n\nBUG=angleproject:2242\n\nChange-Id: I8148c781ec22ec02562b6a8b5d1b966c6f13915e\nReviewed-on: https://chromium-review.googlesource.com/766568\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/fb7685f4035e38494aedbb3cb05163427d0daacf", "message": "Validate texture parameters for >0 after rounding.\n\nFrom the spec (2.3.1 Data Conversion For State-Setting Commands):\n\"Validation of values performed by state-setting commands is performed\nafter conversion, unless specified otherwise for a specific command.\"\n\nBUG=783574\n\nChange-Id: I9edf585a17489ad284bc85a1c3c2236b53ee34d9\nReviewed-on: https://chromium-review.googlesource.com/766569\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/e8afa90250dd251381a343c773d77d104c1f0350", "message": "Make GL_ANGLE_framebuffer_blit enableable.\n\nBUG=angleproject:1523\n\nChange-Id: I5d6df35d2e65be6d73ec6100e3351ba5f9ff53a2\nReviewed-on: https://chromium-review.googlesource.com/688639\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/225bfa950a80f575e02347891565a056d756ee8e", "message": "Always update HALF_FLOAT_OES type to HALF_FLOAT on Desktop GL.\n\nTEST=webgl_conformance_gl_passthrough_tests on Linux/Windows\n\nBUG=angleproject:2231\n\nChange-Id: I17c7d693e2b75726e2478925e0f22963de6ab819\nReviewed-on: https://chromium-review.googlesource.com/763987\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ee6884e7be666efc9e06b77eab7f4ead2779f46b", "message": "Generate generic error messages for Error objects without messages.\n\nMakes sure that the debug output is fired for all generated errors.\n\nBUG=783054\n\nChange-Id: Ia30870cd950c53da892554e0862276d4be5360ac\nReviewed-on: https://chromium-review.googlesource.com/761760\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Antoine Labour <piman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/73dcc60c868fddb884d4c8e48aa45b0863930718", "message": "Support more always-available extensions in ContextNULL.\n\nAdd some extensions that are required by the passthrough command decoder\nand exposed on all other ANGLE backends.\n\nBUG=781164\n\nChange-Id: Ie83143effd2460122e7a093c658f217fb460d8b2\nReviewed-on: https://chromium-review.googlesource.com/759132\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/fa125c9e5cf3869459ab51d1c1858f5ab7169272", "message": "Validate GL_COLOR_ATTACHMENT0 separately from the draw buffers attachments.\n\nEXT_draw_buffers may not be enabled but the maxColorAttachments cap is\nalways initialized so make sure to validate for the extension instead of\njust checking that the attachment is in the valid range.\n\nBUG=angleproject:2058\n\nChange-Id: I5b48cb496bf96cbc0911295aa5bf87784ce9241b\nReviewed-on: https://chromium-review.googlesource.com/735749\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/fb05264b5b0c5fb3f63e6b2ceb30b2e5ee7425c5", "message": "Disallow null pixel data for TexSubImage that have non-zero size.\n\nBUG=angleproject:2055\n\nChange-Id: I4c338691776c6d807333c169ed876d686188a97c\nReviewed-on: https://chromium-review.googlesource.com/735786\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/a579ded1ef9bdbd7fdf67a7e4105bda8cb53b97e", "message": "Extend BGRA8 glGetInternalformativ workaround to ES drivers.\n\nSome ES drivers also generate INVALID_ENUM errors when querying this\nformat, particuarly on linux Mesa+nouveau.\n\nBUG=angleproject:2219\n\nChange-Id: I7b9cf9b003a0125fabdda63038b4c8941710e1db\nReviewed-on: https://chromium-review.googlesource.com/754329\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/2585816627e695b4ab20b1b83c7cb0ef546c5a1d", "message": "Skip several multiview tests on Windows NVIDIA after P400 upgrade.\n\nBUG=angleproject:2228\n\nChange-Id: If1ba74973e0c116e17de8ab77de712e281233d04\nReviewed-on: https://chromium-review.googlesource.com/753795\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/249559048", "body": "Hey, sorry I didn't notice this but the ANGLE project only accepts patches on our code review site.  Please follow the directions here: https://chromium.googlesource.com/angle/angle/+/master/doc/ContributingCode.md\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/249559048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/264998500", "body": "Hey, we don't do pull requests though GitHub for ANGLE.  see https://chromium.googlesource.com/angle/angle/+/master/doc/ContributingCode.md#Life-of-a-Change-List for the documentation on how to upload to our code review tool if you're interested.", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/264998500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/306806345", "body": "Hey, we don't accept merge requests through github.  You can read about how to upload a CL to gerrit here: https://github.com/google/angle/blob/master/doc/ContributingCode.md#getting-started-with-gerrit-for-angle .  Thanks for signing the CLA, it will skip a step later.", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/306806345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/307594650", "body": "Hey, we don't accept merge requests through github. You can read about how to upload a CL to gerrit here: https://github.com/google/angle/blob/master/doc/ContributingCode.md#getting-started-with-gerrit-for-angle ", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/307594650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343981204", "body": "Hey, the ANGLE project only accepts patches on our code review site. Please follow the directions here: https://github.com/google/angle/blob/master/doc/ContributingCode.md", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343981204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343981282", "body": "Hey, the ANGLE project only accepts patches on our code review site. Please follow the directions here: https://github.com/google/angle/blob/master/doc/ContributingCode.md", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343981282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343981650", "body": "Hey, the ANGLE project only accepts patches on our code review site. Please follow the directions here: https://github.com/google/angle/blob/master/doc/ContributingCode.md", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343981650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "fjhenigman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/f661686c1ace66e22925d82d770fa00078f84ddd", "message": "Fix gyp/gcc build.\n\nGcc complains about an unused variable.\nAdjust a #include to work with the gyp build.\n\nBUG=none\n\nChange-Id: Ia94abf70f3a9bb7952eb53d1f0a3cfcca5df0836\nReviewed-on: https://chromium-review.googlesource.com/867655\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/dda048cdc9a63089ce4590012ae44e8e4af2cddd", "message": "Make scripts executable by python2.\n\nAdd #!/usr/bin/python2 and the executable permission bit to all scripts\nwhere missing.\n\nBUG=angleproject:2209\n\nChange-Id: Ib33017c17e579c371b89bbfbdb7136b870027dc5\nReviewed-on: https://chromium-review.googlesource.com/862987\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1ea85a1316cf4a783bf1887b1ae67e7beff41e15", "message": "Add #! line to scripts/bootstrap.py.\n\nIndicate scripts/bootstrap.py should be run by python2.\n\nTBR=jmadill@chromium.org\nBUG=angleproject:2209\n\nChange-Id: I2ccfee1407cd4ce457aa28a374ac202b8281d40b\nReviewed-on: https://chromium-review.googlesource.com/862618\nReviewed-by: Frank Henigman <fjhenigman@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ed1390f808b0f72b684a9a9fa896512525bc703f", "message": "Doc fix and improvement.\n\nOnly exact version of Windows SDK works.\nClarify how to do a release build.\n\nBUG=angleproject:2297\n\nChange-Id: I2566b7e807a84c4edc3b457299036e67a64b5a36\nReviewed-on: https://chromium-review.googlesource.com/852553\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/66e2f8f25f95a720d57c48950d1472d4a786b148", "message": "Fix doc typo.\n\nAdded missing quotes.\n\nBUG=angleproject:2297\n\nChange-Id: Ieb6ca4ae37786f48ad3c6f5dccefef25afce23a2\nReviewed-on: https://chromium-review.googlesource.com/852636\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/6df487ef1e6164bbe3fd05d74396edcf0001d25c", "message": "Move angle_enable_* inside declare_args().\n\nThis allows enabling and disabling parts of the build via gn args,\nsimilar to what gyp allowed.\n\nBUG=angleproject:1569\n\nChange-Id: Ia95c134f98f8941408df96b1d4e2563e713a9ef2\nReviewed-on: https://chromium-review.googlesource.com/838260\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5b1180df6835e403e5a9636fe9f7c987e1e48e2c", "message": "Add gyp deprecation warning.\n\ngyp_angle now prints a warning every time it is run.\nAll targets print the same warning as one of their build steps.\nThe DEPS change updates gypi_to_gn so it doesn't choke on\nfiles with 'target_defaults' sections.\n\nBUG=angleproject:1569\n\nChange-Id: Ibdf277fcc14cf4ebc7b7db78270210752cd8ef9d\nReviewed-on: https://chromium-review.googlesource.com/711155\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/0e74e059621b5eee49e10381a704d13a5713480a", "message": "Fix gcc builds.\n\nRemove unused function and fix dangling else's that gcc complains about.\nIn the gyp build specify -std=c++14.\n\nBUG=none\n\nChange-Id: I552942ccc574104a5424a9add00e6e72d6efa28a\nReviewed-on: https://chromium-review.googlesource.com/830750\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1955640afd0a05882d230a71416436905de4362e", "message": "Support ozone/gbm back end in standalone gn build.\n\nThis makes it possible to do a standalone gn build of the ozone/gbm back\nend by using the following gn args.\n  use_ozone = true\n  ozone_platform_gbm = true\n\nBUG=angleproject:1569\n\nChange-Id: I70716b83943dae95df48b847ff8cca5e2c555c4a\nReviewed-on: https://chromium-review.googlesource.com/749867\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/e42ec189cc9d416456ad85a0d194e426ac8977c7", "message": "Add angle_link_glx arg to standalone gn build.\n\nPort the angle_link_glx setting of the gyp build to the standalone gn build.\nWhen set to true, libGL will be linked into libANGLE, instead of dlopen-ed.\nThis is useful when using apitrace.\n\nBUG=angleproject:1569\n\nChange-Id: I16a91504960169efdcde3b2c50b944de148d9ba6\nReviewed-on: https://chromium-review.googlesource.com/821691\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/3c613c0d79fa4501b154828ff853d007265ab082", "message": "Update docs for GN standalone and GYP deprecation.\n\nExplain how to use GN and say not to use GYP.\n\nBUG=angleproject:1569\n\nChange-Id: I972126dced28fa7a70eb301b500f172376a569c1\nReviewed-on: https://chromium-review.googlesource.com/775858\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c677795f9f7d27fbaf6d36da8201f8f09025d92c", "message": "docs: fix links and typos\n\nUpdate stale/broken links.  Use consistent link style:\n - links between our files should relative\n - omit filename for links within same file\n - don't specify heading id\nDon't use same heading twice in one file because the markdown compilers\non googlesource.com and github have different ways of disambiguating them,\nso this is the easiest way to have links work on both sites.\n\nBUG=angleproject:1569\n\nChange-Id: Iefd5ab8014d582a017f64e383f301ea0b8e60433\nReviewed-on: https://chromium-review.googlesource.com/789445\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Frank Henigman <fjhenigman@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kvark": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/57f4b73ebe08bef3697086746d0e7a16ec7c94f0", "message": "Fix the format check in TextureD3D_2DArray::redefineImage\n\nNote: by the time the old code used to call `getBaseLevelInternalFormat`, the base level image has already been updated with `redefine()` call above, thus the check `internalformat != storageFormat` wasn't correct.\n\nChange-Id: I3da6df54490d6e72e5094388ed7e39a4c7d920d2\nReviewed-on: https://chromium-review.googlesource.com/862256\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Dzmitry Malyshau <dmalyshau@mozilla.com>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JiangYizhou": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/0e1224c82c67aa9a85b571aa41af20ec16dc3911", "message": "fix bug for querying sample positions on D3D\n\nBUG=angleproject:2290\nTEST=dEQP-GLES31.functional.texture.multisample.samples_*.sample_position\nTEST=TextureMultisampleTestES31.CheckSamplePositions*\n\nChange-Id: If8b74c16d5c104215456e35b8922279be972cee3\nReviewed-on: https://chromium-review.googlesource.com/844062\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/63ba357c093954d2bc475867e1296fbf5afc1d37", "message": "Enable depth buffer to workaround driver bug on Intel windows\n\nRendering with depth buffer disabled and stencil buffer enabled\nleads to memory leak if we set viewport a large size on Intel\nwindows platforms. So we enable depth buffer if stencil buffer\nis enabled to workaround this issue.\n\nTEST=gl_test.exe --gtest_filter=GLClearFramebufferTestWithParam/GLClearFramebufferTest.ClearDepthStencil/0\nTEST=conformance/rendering/rendering-stencil-large-viewport.html\nTEST=RenderStencilBufferTest.DrawWithLargeViewport/ES3_D3D11\n\nBUG=782317\n\nChange-Id: Idb185db296f13e3fa897534514e198651a56439f\nReviewed-on: https://chromium-review.googlesource.com/809574\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/10d41397f144a9705995d690bf73c4c3c357d8c9", "message": "Fix addDummyTextureNoRenderTarget workaround memory leak\n\nAdd dummy attachment in FramebufferD3D as a private member and release\nthe dummy attchment in destory of FramebufferD3D.\n\nBUG=angleproject:2282\n\nTEST=FramebufferTest_ES31.RenderingLimitToDefaultFBOSizeWithNoAttachments/ES3_1_D3D11\nTEST=dEQP-GLES31.functional.fbo.no_attachments.*\n\nChange-Id: I3a17282ef132185fbc25f4076f624e53661d4b20\nReviewed-on: https://chromium-review.googlesource.com/831847\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/bcbe8e1acca9c486012951cf1a0c4481dc0bade7", "message": "Update extension queries on OpenGL part\n\nFix some incorrect extension queries on OpenGL part.\nGL_MAX_FRAMEBUFFER_WIDTH should be checked by\nGL_ARB_framebuffer_no_attachments.\nGL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS should be checked by\nGL_ARB_shader_storage_buffer_object and GL_ARB_compute_shader.\nAlso do code refactoring for query GL_MAX_FRAGMENT_UNIFORM_VECTORS,\nGL_MAX_VERTEX_UNIFORM_BLOCKS and GL_MAX_FRAGMENT_UNIFORM_BLOCKS.\n\nBUG=angleproject:2256\n\nChange-Id: Iea2471363551019dfeb97f224eea808de19914ab\nReviewed-on: https://chromium-review.googlesource.com/781239\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1974452966bb05cc471f03864274af5c631f6370", "message": "Clear up deqp cases for multisampled texture\n\nBUG=angleproject:1590\nTEST=dEQP-GLES31.functional.state_query.texture_level.texture_2d_multisample.*\nTEST=dEQP-GLES31.functional.state_query.internal_format.texture_2d_multisample.*\nTEST=dEQP-GLES31.functional.debug.negative_coverage.get_error.buffer.renderbuffer_storage_multisample\n\nChange-Id: Ic5b9867f3588dae4c930e844b1ee2b99467a60ff\nReviewed-on: https://chromium-review.googlesource.com/711975\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/38d92b59c4b74c5c31dfaad4d23d04517ea2c570", "message": "Workaround Intel driver bug on D3D when renderering with no render target\n\nWhen rendering with no render target on D3D, two bugs lead to\nincorrect behavior on Intel drivers < 4815. The rendering samples\nalways pass neglecting discard statement in pixel shader.\n\nTwo bugs are listed bellow,\n1. When a framebuffer has no attachments, the pixel shader will be\nrecompiled to drop 'SV_TARGET'. On Intel drivers, when using a pixel\nshader with no 'SV_TARGET' in a draw, pixels are always generated even\nif they should be discard by 'discard' statements.\n\n2. When a framebuffer has no attachments, ID3D11BlendState.RenderTarget\n[].RenderTargetWriteMask were set to 0 in angle. If RenderTargetWriteMask\nis 0 and rendertarget is not set, then rendering samples also pass\nneglecting discard statement in pixel shader on Intel.\n\nSo we add a dummy texture as render target to workaround this issue.\n\nBUG=angleproject:2152\n\nTEST=FramebufferTest_ES31.RenderingLimitToDefaultFBOSizeWithNoAttachments/ES3_1_D3D11\nTEST=dEQP-GLES31.functional.fbo.no_attachments.*\nTEST=dEQP-GLES31.functional.state_query.integer.max_framebuffer*\nTEST=dEQP-GLES31.functional.state_query.integer.max_color_texture_samples_*\nTEST=dEQP-GLES31.functional.state_query.integer.max_depth_texture_samples_*\nTEST=dEQP-GLES31.functional.state_query.integer.max_integer_samples_*\n\nChange-Id: I1cb974703b6c05c39b731d147f7c8c4fb7b5fe68\nReviewed-on: https://chromium-review.googlesource.com/741544\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kangz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/4a66ef3d8263d980111c74e502244083c53e4d83", "message": "Add a test for gl_FragDepth clamping with float depth\n\nThe clamping doesn't happen on NVIDIA so this is a test that will\nconfirm a follow-up compiler workaround patch works properly.\n\nBUG=angleproject:2299\n\nChange-Id: I006b522d014e29d2a5e634dfb9cf827ee3bc0536\nReviewed-on: https://chromium-review.googlesource.com/852252\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Olli Etuaho <oetuaho@nvidia.com>"}, {"url": "https://api.github.com/repos/google/angle/commits/9db70de8ecb6bf744c759fc8cd25b1cde717142c", "message": "Reland: Implement EGL_ANGLE_iosurface_client_buffer\n\nIncludes a fix for creating pbuffers with <buftype> EGL_D3D_TEXTURE\nwith EGL_WIDTH and EGL_HEIGHT attributes.\n\nBUG=angleproject:1649\nTBR=geofflang@chromium.org\n\nChange-Id: Id2974b8fab02c3218febfac708b9b034e65cbc53\nReviewed-on: https://chromium-review.googlesource.com/823248\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/3acfc6255c56069ffa9373d03f6215e3bddd8084", "message": "Add test for Chromium's EGL_D3D_TEXTURE pbuffer creation\n\nWhen creating the pbuffer, Chromium specifies EGL_WIDTH and EGL_HEIGHT\nattributes that are unnecessary because they are extracted from the\nD3D11 texture passed as <buffer> to eglCreatePbufferFromClientBuffer.\n\nThis is a regression test for crbug.com/794086 where a change to\nValidateCreatePbufferFromClientBuffer made EGL_WIDTH and EGL_HEIGHT\ninvalid for <buftype> EGL_D3D_TEXTURE and caused Chromium to fail\ncreating the pbuffer, causing all black rendering.\n\nBUG=chromium:794086\n\nChange-Id: I262fd0991e0f46f255aeac25528ddb4a62fa1309\nReviewed-on: https://chromium-review.googlesource.com/822296\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/7f5c3eb76834b4eb71c05dfc9cf22b3c45ae8978", "message": "Revert \"Implement EGL_ANGLE_iosurface_client_buffer\"\n\nThis reverts commit c7abc08034a30a41748eefc5b628a76d4e2daa8a.\n\nReason for revert: Might have broken Chromium Win10 composition due to validation changes.\n\nOriginal change's description:\n> Implement EGL_ANGLE_iosurface_client_buffer\n> \n> BUG=angleproject:1649\n> \n> Change-Id: I1e72c31d7c9497ad14039a8d3fb97317ab193cb2\n> Reviewed-on: https://chromium-review.googlesource.com/559107\n> Reviewed-by: Corentin Wallez <cwallez@chromium.org>\n> Reviewed-by: Geoff Lang <geofflang@chromium.org>\n> Commit-Queue: Corentin Wallez <cwallez@chromium.org>\n\nTBR=geofflang@chromium.org,cwallez@chromium.org\n\nChange-Id: I605b710b6d76056d6276b09822cd6ddca277bfd0\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBug: angleproject:1649\nReviewed-on: https://chromium-review.googlesource.com/822172\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c7abc08034a30a41748eefc5b628a76d4e2daa8a", "message": "Implement EGL_ANGLE_iosurface_client_buffer\n\nBUG=angleproject:1649\n\nChange-Id: I1e72c31d7c9497ad14039a8d3fb97317ab193cb2\nReviewed-on: https://chromium-review.googlesource.com/559107\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/43fd0d44d2a641bc74333550891f21bd597773ee", "message": "Add the EGL_ANGLE_iosurface_client_buffer extension text\n\nBUG=angleproject:1649\n\nChange-Id: Ie613ae835ea3e7c590f74429bdd36f7a42045131\nReviewed-on: https://chromium-review.googlesource.com/811905\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/e44770010a360f85f21a89bbb2dad211d86885ee", "message": "Add PackedEnumBitSet, use it for buffer binding validation\n\nIncludes angle::BitSetT changes from jmadill@chromium.org\n\nBUG=angleproject:2169\n\nChange-Id: I9f896613f5c6cdc91281cb9a00134f67291870d9\nReviewed-on: https://chromium-review.googlesource.com/804177\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1d33c219630c138019317f2d7a0ae84bd9c1335a", "message": "Fix standalone mac compilation\n\nBUG=\n\nChange-Id: I225bd1693f595a64179b8e500cb1e7101fd2e197\nReviewed-on: https://chromium-review.googlesource.com/766472\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/d5d3099e3cb78aeb9af115056c1bc1d929e0be52", "message": "Avoid redundant BindingPointer::set in setBufferBinding\n\nBUG=angleproject:2169\n\nChange-Id: I91f099a53b456fc96988839e34733ce09fe38336\nReviewed-on: https://chromium-review.googlesource.com/766473\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/336129f66f63938212ca0f7069d1a5e483f02042", "message": "Use a packed enum for buffer targets.\n\nBUG=angleproject:2169\n\nChange-Id: I4e08973d0e16404b7b8ee2f119e29ac502e28669\nReviewed-on: https://chromium-review.googlesource.com/723865\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/cda6af1960bbe7e5e180bd3af8f61fdfbad839fb", "message": "Split pixelBuffer from pack/unpack state\n\nThis will refactor will help use packed enums for buffer targets.\n\nBUG=angleproject:2169\n\nChange-Id: Ie7ed3e105f89457c67027e6598d7e29503ad355c\nReviewed-on: https://chromium-review.googlesource.com/745181\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/29a20992de5a5a35280c43e476b2252caf84d058", "message": "Add back dirty bits for pack / unpack buffer binding\n\nBUG=angleproject:2169\n\nChange-Id: I8cee9e1c7565d90022216d62b45f0eec5bc51f14\nReviewed-on: https://chromium-review.googlesource.com/755461\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jiawei-Shao": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/e9d7f2d1b5a984968b79f94cc9ef70a7187942b9", "message": "ES31: Skip dEQP tests geometry_shading.vertex_transform_feedback.*\n\nThis patch labels geometry_shading.vertex_transform_feedback.* as\n\"SKIP\" instead of \"FAIL\" to fix some failures in dEQP tests.\n\nOpenGL ES 3.1 extension GL_EXT_geometry_shader requires additional\nvalidations on transform feedback, which hasn't been implemented\nin ANGLE, so geometry_shading.vertex_transform_feedback.* fail just\nafter beginTransformfeedback(). As endTransformfeedback() isn't\ncalled in dEQP function resetStateES():\n1. An error occurs in this function when trying to clear transform\n   feedback.\n2. Some of the tests afterwards also fail because it isn't allowed\n   to change active program by useProgram() when transform feedback\n   is on.\n\nSo it is better to skip these tests before ANGLE supports these new\nfeatures.\n\nBUG=angleproject:1941\n\nChange-Id: I8834f71e6a655f18118ee4ecf26f4118da6de2f1\nReviewed-on: https://chromium-review.googlesource.com/843955\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Jiajia Qin <jiajia.qin@intel.com>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/02f152399db07ab3cc66ac45e0fd1a755b869e72", "message": "Clear error logs when starting a new link process\n\nThis patch intends to fix a bug in logging link errors.\n\nOpenGL ES requires glGetProgramInfoLog return a string\nthat contains information about last link or validation\nattempt on a program object (GLES 2.0 Chapter 6.1.8,\nGLES 3.0 Chapter 6.1.12). So all the link error logs\nshould be cleared when a new link process is begun.\n\nThis patch also removes several redundant allocations\nof mLazyStream in ProgramD3D::compileProgramExecutables.\nCalling \"<<\" on InfoLog objects will initialize its\nmember mLazyStream from heap, so we will skip using \"<<\"\nif there is actually nothing to output.\n\nBUG=angleproject:2295\nTEST=angle_end2end_tests\nChange-Id: Ib81fffd3d05919a8ebccd9145ff780548ca86a70\nReviewed-on: https://chromium-review.googlesource.com/848324\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/7361860113460a7b16673462cb040064b3bb6064", "message": "ES31: Clean up Program::link\n\nThis patch intends to solve some structure and coding style issues\nin Program::link to make it easier to support linking program with\ngeometry shader.\n\n1. Move all the shader specific validations to linkValidateShaders.\n   Geometry shader related link validations can also be added here.\n2. Rename functions with \"VertexAndFragment\" to \"Graphics\" because\n   these functions will also be responsible for the validations on\n   geometry shader.\n3. Refer uniforms by pointer when validating uniforms.\n4. Re-declare functions to 'static' if we can and capitialize the\n   first letter of all static functions in Program.h.\n\nBUG=angleproject:1941\n\nChange-Id: I46608e86bddc12d95cbbbf9a85803d07ccf843d8\nReviewed-on: https://chromium-review.googlesource.com/836149\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/492b5f51ec82d67670c24908b77d57d1b02fb7c2", "message": "ES31: Support struct arrays as Geometry Shader inputs\n\nThis patch adds the support of struct arrays as valid\ngeometry shader user-defined inputs.\n\nStruct arrays are accepted as geometry shader inputs to\nmatch the vertex shader outputs that are also declared\nas structs.\n\nBUG=angleproject:1941\nTEST=angle_unittests\n\nChange-Id: I0b5d545b10e9dda576a1c96d7c93ec2450611e9e\nReviewed-on: https://chromium-review.googlesource.com/823622\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/bd924af17363fda7e0e76e1ab4f07c9e45893e59", "message": "ES31: Remove support of GL_OES_geometry_shader in compiler\n\nThis patch intends to remove the support of GL_OES_geometry_shader\nin ANGLE compiler.\n\nTo make the implementation simpler, currently we decide to only\nsupport \"GL_EXT_geometry_shader\" as the extension string of geometry\nshader in ANGLE.\n\nThis patch also updates all the related shaders in angle_unittests\ninto R\"()\" format.\n\nBUG=angleproject:1941\nTEST=angle_unittests\n\nChange-Id: Ife9858abeedfb46b02c5c2fb1cda16fa27198511\nReviewed-on: https://chromium-review.googlesource.com/773451\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/361df070323f430aa0614c6eb04fb595dec3daa9", "message": "ES31: Implement Geometry Shader resource queries on OpenGL\n\nThis patch intends to implement all geometry shader related\nresource queries on OpenGL back-ends.\n\nThis patch also fixes a memory leak by releasing the geometry\nshader compiler handle in the destructor of the Compiler.\n\nBUG=angleproject:1941, angleproject:2261\nTEST=angle_end2end_tests\n\nChange-Id: Ieb69c162d2fc6c6550e145d1ec7948c3d36d4d15\nReviewed-on: https://chromium-review.googlesource.com/784552\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/89be29a5cdff6fc8ece7fa1284553f64a05048b7", "message": "ES31: Implement creation and attaching geometry shader on OpenGL\n\nThis patch intends to implement the creation of a geometry shader\nand attaching a geometry shader to a program on OpenGL back-ends.\n\nThis patch also adds all geometry shader related dEQP-GLES31 test\nfailures to deqp_gles31_test_expectations.txt.\n\nBUG=angleproject:1941\nTEST=angle_end2end_tests\n\nChange-Id: Ib0b497030255b15dacd967e48bc59eef0009af46\nReviewed-on: https://chromium-review.googlesource.com/757979\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c622833c5a010675af61882c9036dc9b16c05a88", "message": "Re-enable SimpleStateChangeTest.RedefineBufferInUse on Win/Intel\n\nNow SimpleStateChangeTest.RedefineBufferInUse can pass on Win/Intel\nwith https://chromium-review.googlesource.com/756959\n\nBUG=angleproject:2221\nTEST=angle_end2end_test\n\nChange-Id: Ibdb619a61fcaa35c72ff5a22dc6905edf9f0ec7b\nReviewed-on: https://chromium-review.googlesource.com/774679\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/3ef06a9f8644bacd0ffdf17c8cdb3721b719396c", "message": "Skip hasMappedBuffer check in draw validations in WebGL contexts\n\nMapBufferRange, FlushMappedBufferRange, and UnmapBuffer entry points\nare removed from the WebGL 2.0 API[1], so we don't need to validate\nif a vertex array buffer or an index buffer is mapped or not in draw\nvalidations (ValidateDrawBase and ValidateDrawElementsCommon) in a\nWebGL context.\n\nAccording to profiling data, hasMappedBuffer weights over 1% (1.12%)\nCPU times in WebGL Acquarium benchmark (10K fishes, Intel HD630).\nWith this patch, this hot spot has disappeared and no new hot spots\nare introduced.\n\nThis optimization can also slightly improve FPS on WebGL benchmarks,\nor keep the same at least.\n\n[1] https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.14\n\nBUG=angleproject:1671\n\nChange-Id: I96e770b19b691e81774cc8e0c1b66b65dcc3cc83\nReviewed-on: https://chromium-review.googlesource.com/753281\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/0e88313412226e7c33c550a1a1c33b94bababbf5", "message": "ES31: Support EXT_geometry_shader in GLSL compiler\n\nThis patch intends to support \"EXT_geometry_shader\" as a valid\nextension string in ANGLE GLSL compiler.\n\nWe decide to support it because in dEQP-GLES31 all geometry\nshader related tests are using \"EXT_geometry_shader\" instead of\n\"OES_geometry_shader\".\n\n1. Support new extension string \"EXT_geometry_shader\"\n2. Enable geometry shader layout qualifiers with EXT_geometry_shader\n3. Enable geometry shader builtins with EXT_geometry_shader\n\nBUG=angleproject:1941\nTEST=angle_unittests\n\nChange-Id: Iaedd01a9100ccf56243c957db36ff0c983d17060\nReviewed-on: https://chromium-review.googlesource.com/737933\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nReviewed-by: Olli Etuaho <oetuaho@nvidia.com>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bjjones": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/c405ae717f5a138246b8aaf23331bed1a29196cb", "message": "Optimize Vertex Shader Attribute Type Validition\n\nImproves ValidateVertexShaderAttributeTypeMatch by storing vertex\nattributes types into masks for quick comparisons when needed. This shows\n2% improvement to glDrawElements for the aquarium workload.\n\nBUG=angleproject:2202\n\nChange-Id: I87fa3d30c3d8cdba6dfd936cd1a41fd27b1c6b77\nReviewed-on: https://chromium-review.googlesource.com/814795\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/9fc8733187c02470a9eadb6d295348b6d37a2004", "message": "Fix Bug in Intel Workaround\n\nFixes an incorrect assert that is hit when trying to find a program\noutput when none are present. It is valid to not have an output, so we\nshould not check for an output when there are none.\n\nBug:angleproject:2283\nChange-Id: Ia640482870c6ee589a933b989272177760237e3b\nReviewed-on: https://chromium-review.googlesource.com/825957\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/76746f9bc29d23a00a56eaa5941209976e3301bc", "message": "Optimize Fragment Shader Type Match Validation\n\nImproves ValidateFragmentShaderColorBufferTypeMatch by storing input and\noutput types into a bitmask for quick comparison when validation is\nneeded. This shows a 2% improvement to glDrawElements for the aquarium\nworkload.\n\nBUG=angleproject:2203\nChange-Id: Iade2ecf28383164e370b48442f01fba6c0962fba\nReviewed-on: https://chromium-review.googlesource.com/775019\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/92a1459fb9d31d8180309f1a3ff7659d9617cc00", "message": "Add Regression Test for D3D11 Alpha Passthrough\n\nAs a follow up to commit \"8d6af08 Use dedicated ALPHA passthrough shader\",\nthis change adds a regression test that verifies RGB channels are set to\nzero when performing an ALPHA copy.\n\nBUG=angleproject:2239\nChange-Id: Icc08deb523c388a0f2cbdcadd1eec69a97fbe136\nReviewed-on: https://chromium-review.googlesource.com/774579\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/8d6af086d478544b802b2cdbfb7e8df1de066088", "message": "Use dedicated ALPHA passthrough shader\n\nANGLE previously used the RGBA passthrough shader for ALPHA copies. This\ncommit adds a dedicated ALPHA shader that will not pass RGB components\nwhen doing an ALPHA copy.\n\nBUG=angleproject:2239\nTEST=angle_end2end_tests\nChange-Id: I52d1f18a8f968db005cd887803123c17e16df938\nReviewed-on: https://chromium-review.googlesource.com/758717\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bbernhar": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/91586494675e96468254f21acf05f6ad27d0d22b", "message": "Allow MapResource to return context loss GL error\n\nReturns an OOM error to avoid\nquery the context for status should Map fail.\n\nBUG=angleproject:2284\n\nChange-Id: I4d35ef05c76fcc69bdab19f88c39a415d13ee116\nReviewed-on: https://chromium-review.googlesource.com/837519\nCommit-Queue: Yuly Novikov <ynovikov@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Yuly Novikov <ynovikov@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/ca71c75dce600b2a0fde5a72c15c2b437cb961db", "message": "Fix error handling of ID3D11DeviceContext::Map\n\nRefactors error handling should map() fail to avoid crashing\nduring a device error event.\n\nBUG=angleproject:2284\n\nChange-Id: Ib1eb676860fa5c3a81e523f49aab82b7e6700f73\nReviewed-on: https://chromium-review.googlesource.com/826485\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5f19810d5d1cfafdfd72323c707220f26dcfd080", "message": "WebGLCompat: Fix depth & stencil query results.\n\ngetFramebufferAttachmentParameter returns incorrect\nresult for framebuffers in an inconsistent state.\n\nBUG=angleproject:2281\n\nChange-Id: Ifb83ecaf16c95bf1237b2c4f2684de6aa2d55c46\nReviewed-on: https://chromium-review.googlesource.com/823224\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/2eeb1b34ec59ecf701eb8fc31162b95d660cb90a", "message": "WebGLCompat: Fix depthstencil query results.\n\ngetFramebufferAttachmentParameter returns incorrect\nresult for framebuffers in an inconsistent state.\n\nBUG=angleproject:2259\n\nChange-Id: I76fa99f1b8847c30469d344bd93dedd9cf6657bf\nReviewed-on: https://chromium-review.googlesource.com/798318\nReviewed-by: Bryan Bernhart <bryan.bernhart@intel.com>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/491b0d604b18e7b238b0b4c9f9a2e4ffa6971649", "message": "WebGLCompatibility: Allow GL_DEPTH_STENCIL_ATTACHMENT.\n\nPermits depth-stencil attachment points for WebGL.\n\nBUG=angleproject:2090\n\nChange-Id: I7f5a7c63f2a4a76116ce5639833e5fd8d7f50ffb\nReviewed-on: https://chromium-review.googlesource.com/764591\nReviewed-by: Bryan Bernhart <bryan.bernhart@intel.com>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f4f293effbc6ccba0b6462743d3f5bd9c794d75d", "message": "Harden uniform array index parsing.\n\nAdd overflow handling when parsing uniform variables.\n\nBUG=angleproject:2191\nTEST=angle_unittests\n\nChange-Id: Ib2a69be1cc11a94420bc923a2aaaef8dc664d562\nReviewed-on: https://chromium-review.googlesource.com/756209\nReviewed-by: Bryan Bernhart <bryan.bernhart@intel.com>\nReviewed-by: Olli Etuaho <oetuaho@nvidia.com>\nCommit-Queue: Olli Etuaho <oetuaho@nvidia.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jchen10": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/910a3dafda474284a29d278abf7b2051d55281cb", "message": "ES31 program query: support TRANSFORM_FEEDBACK_VARYING\n\nTRANSFORM_FEEDBACK_VARYING corresponds to the set of output variables\nin the last non-fragment stage of program that would be captured when\ntransform feedback is active. The resources enumerated by this query\nare listed as specified by the most recent call to\nTransformFeedbackVaryings before the last call to LinkProgram.\nThis mainly collects these resources for query.\n\nBUG=angleproject:1920\nTEST=angle_end2end_tests:ProgramInterfaceTest*\n     dEQP-GLES31.functional.program_interface_query.transform_feedback_varying.*\n\nChange-Id: I0655b12c6d82cef1b44d4ca57ea55bb60d1f78fb\nReviewed-on: https://chromium-review.googlesource.com/770450\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/8225e73bb30f39848616d98ae837b12502861c71", "message": "Support struct varying for transform feedback\n\nCapturing struct members is vague In ES 3.00. But the ES 3.10\nexplicitly says that base-level members of struct are feasible for\ntransform feedback capture. This implementation fills the gap.\n\nTEST=angle_end2end_tests:TrasnformFeedbackTest*\nBUG=angleproject:2241\nChange-Id: Ibdf3ae6c2b8b28952e2f7fef1363545cbccad389\nReviewed-on: https://chromium-review.googlesource.com/768613\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/85c93c41e95cb046b85a979b408c4da4bd60248a", "message": "Refactor VaryingPacking\n\nMove all packing related logic from Program to VaryingPacking.\nDo linkValidateTransformFeedback check first to simplify packing.\nMake getPackedVaryings collect all required VaryingPackings in one\nrun pass, so that packUserVaryings can focus on packing merely.\n\nBUG=angleproject:2241\nChange-Id: I5e84e6e4688c80ba7a77a265b8ffaf79f4ddbb87\nReviewed-on: https://chromium-review.googlesource.com/764821\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhenyao": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/06f8637740116fa3bc4c30b513fc3ae4a0534521", "message": "Revert \"Re-land \"Vulkan: Roll loader/validation layers SDK. (2/2)\"\"\n\nThis reverts commit 755a9317ff1ec983f2704fc9f4619cac49992960.\n\nReason for revert: Broke local win build. crbug.com/797253\n\nOriginal change's description:\n> Re-land \"Vulkan: Roll loader/validation layers SDK. (2/2)\"\n> \n> Re-landing with upstream fixes to the layers so they no longer\n> need to copy the parameter validation errors to the current\n> working directory of the layer generation. Also includes fixes\n> for the GCC build.\n> \n> This hasn't been updated in a while, so there are many changes.\n> It should also include better validation for memory barriers.\n> \n> Also includes updated builds for SPIRV Tools and glslang.\n> A few pull requests need to land before landing this in ANGLE.\n> \n> This second step re-enables Vulkan and includes the updated build.\n> \n> Includes a workaround for parameter_validation.h no longer being\n> auto-generated, and the stale file clobbering the build.\n> \n> Also includes a fix for an incorrect memory barrier.\n> \n> Bug: angleproject:2237\n> Change-Id: I1ed87ecfa84f51ee1edf6a8581d9b3c8f9a6f26e\n> Reviewed-on: https://chromium-review.googlesource.com/834429\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n> Reviewed-by: Jamie Madill <jmadill@chromium.org>\n\nTBR=fjhenigman@chromium.org,jmadill@chromium.org\n\nChange-Id: I605d72207d64c7d0853678595e255b74ad69d887\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBug: angleproject:2237\nReviewed-on: https://chromium-review.googlesource.com/842918\nReviewed-by: Zhenyao Mo <zmo@chromium.org>\nCommit-Queue: Zhenyao Mo <zmo@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/758bc6a90b673690f0c17672d38064e49ff6ac66", "message": "Revert \"Clean up the TType class.\"\n\nThis reverts commit 3f286cd1b6e29605a159ee0bd20c76929d4d5a9f.\n\nReason for revert: crbug.com/786603\n\nOriginal change's description:\n> Clean up the TType class.\n> \n> Move more methods into the cpp file, and rename member variables to\n> start with the \"m\" prefix.\n> \n> Also move most of the TPublicType methods into the cpp.\n> \n> Bug: angleproject:1432\n> Change-Id: Ib11a3c8c6ace654fd52077a317814665f81a7261\n> Reviewed-on: https://chromium-review.googlesource.com/776276\n> Reviewed-by: Kai Ninomiya <kainino@chromium.org>\n> Commit-Queue: Jamie Madill <jmadill@chromium.org>\n\nTBR=jmadill@chromium.org,oetuaho@nvidia.com,kainino@chromium.org\n\nChange-Id: Ib3062a71118095a3e58e75bfee2474c2e4ae9431\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBug: angleproject:1432\nReviewed-on: https://chromium-review.googlesource.com/777801\nReviewed-by: Zhenyao Mo <zmo@chromium.org>\nCommit-Queue: Zhenyao Mo <zmo@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Richard-Yunchao": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/ece125358ba245436769c56805edebc484a12ec5", "message": "ES31: Fix the issue for relink rendering/compute program.\n\nWhen link or relink fails, if we try to install the unsuccessfully linked\nprogram (via UseProgram) and start rendering or dispatch compute, We can\nnot always report INVALID_OPERATION for rendering/compute pipeline.\nThe result depends on the previous state: Whether a valid program has been\ninstalled in pipeline before. If a valid program has been installed, it\nshould be OK to use the old executable residing in the GL state to start\nrendering or dispatch compute. No error should be reported.\n\nThis change also add unit tests for unsuccessfully linked/relinked program\nfor rendering pipeline to avoid potential error.\n\nIf a program successfully relinks when it is in use, the program might\nchange from a rendering program to a compute program in theory,\nor vice versa.\n\nBUG=angleproject:2266\n\nChange-Id: I4726112af2bc74f5beef25e35d2fcaa9f31e0768\nReviewed-on: https://chromium-review.googlesource.com/784273\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/1f679cc60c52ce77cc4a77f00288e6da73a47683", "message": "Code refactoring for angle::BitSet and EXPECT_GL_TRUE/FALSE.\n\nThis change refactors two style issues to make it be consistent.\n1) This CL uses \"using\" to replace \"typedef\" for all angle::BitSet<...>.\n2) This CL uses EXPECT_GL_TRUE/FALSE to replace EXPECT_EQ for bool comparison.\n\nBUG=angleproject:2005\n\nChange-Id: I4afad92313ea2457bbfedf80f917a5873d7f29ee\nReviewed-on: https://chromium-review.googlesource.com/795871\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/cddcb59e8d697ad303ee1cf132bb4eeb539962e9", "message": "ES31: Fix the issue when rendering against compute program.\n\nIt is a undefined behavior in gles spec, but we should generate an error.\n\nThis change also refactored the coding style for shader in the test.\n\nBUG=angleproject:2260\n\nChange-Id: I7b480e8b66486d9954f7c7f6e8683298e94b6ad7\nReviewed-on: https://chromium-review.googlesource.com/764797\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Corentin Wallez <cwallez@chromium.org>\nCommit-Queue: Corentin Wallez <cwallez@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/85072e8f4a22b7cdd56ae893c68895f7bee59164", "message": "ES31: Fix detaching/deleting compute shader after LinkProgram.\n\nThis change also moves the ShaderType enum from D3D renderer to angletype.h.\nAnd it uses a bit mask to track the linked shader stages.\n\nBUG=angleproject:2247\n\nChange-Id: I5c7ee1445d353a02e24549ffcf6b0ac694dd1069\nReviewed-on: https://chromium-review.googlesource.com/768629\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/70b715c9b8bcb1f0ec02d55b6688484286e7e45a", "message": "ES31: Add test for DispatchCompute with rendering program\n\nBUG=angleproject:1955\n\nChange-Id: Ib3ee1ead76c83c8dceafba30a1c7526dd0891f8c\nReviewed-on: https://chromium-review.googlesource.com/756654\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kainino0x": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/9b88991c7211fdc9144c793b66f429ee01fce032", "message": "Disable DIRTY_BIT_PROGRAM_UNIFORM_BUFFERS\n\nThis dirty bit isn't getting set somewhere where it should be, so work around this by\njust enabling the dirty bit always. The bit was added here:\nhttps://chromium-review.googlesource.com/c/angle/angle/+/659228\nThere will be a followup to re-enable this dirty bit once the correctness has been fixed.\n\nTest: https://github.com/KhronosGroup/WebGL/pull/2559\nBug: chromium:792966\nChange-Id: I473a60b39eff70e59ab55ff7b74f06fdb0db1305\nReviewed-on: https://chromium-review.googlesource.com/818178\nCommit-Queue: Kai Ninomiya <kainino@chromium.org>\nReviewed-by: Kenneth Russell <kbr@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/030017a4855c7b6e7f2ff8d9566c146f31eb301b", "message": "Mark StaticType related functions as constexpr\n\nFixes compilation on some versions of GCC and probably Clang.\n\nFollow-up to http://crrev.com/c/786317\n\nBug: angleproject:1432\nChange-Id: I3fc3ad0f65492f9543eb27fcdce6ca29a9ad06e5\nReviewed-on: https://chromium-review.googlesource.com/812220\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Kai Ninomiya <kainino@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/614dd0f537d4cc1d0390e7cfa0691c3f0c698399", "message": "Replace TCache with static TType instances\n\nReplaces TCache with (static generation + static/dynamic lookups) of\nTType instances, using compile-time template and constexpr magic.\n\nWork started by jmadill here: https://crrev.com/c/776280\nWith more contributions from jmadill here: https://crrev.com/c/801494\n\nBug: angleproject:1432\nChange-Id: I07181543f8fee4b2606cdd2d0738351e83d4ce57\nReviewed-on: https://chromium-review.googlesource.com/786317\nCommit-Queue: Kai Ninomiya <kainino@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/57ea533f79a7a30224ea641785cbd7a9485d33ed", "message": "TType: Store array sizes vector as a pointer.\n\nThis makes TType a literal type, and thus is something that could be\nconstexpr.\n\nWork started by jmadill here: https://crrev.com/c/776278\n\nBug: angleproject:1432\nChange-Id: I707ddf81eaf029f49d62d2836b7166d265cbdfa1\nReviewed-on: https://chromium-review.googlesource.com/786316\nCommit-Queue: Kai Ninomiya <kainino@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jdashg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/3dddccff31be90fe090a65568e1da61bd8b05402", "message": "Support RGB gl-tex-external stream consumers for StreamProducerNV12.\n\nThis makes it relatively simple to sample from a D3D11Texture of\narbitrary format.\n\nFrom: https://bugzilla.mozilla.org/show_bug.cgi?id=1322746\n\nBUG=angleproject:2233\nTEST=angle_end2end_tests\n\nChange-Id: I10cd3043b5cb0c5d36dd613467ba6c0ceadf41af\nReviewed-on: https://chromium-review.googlesource.com/758042\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/0a05df48f52d4ac8007126f01d77434891d23bf9", "message": "Add TextureUploadFormatTest for texture unpack/upload behavior checks.\n\nAlso force ANGLE_SKIP_TEST_IF() to require a semicolon.\n\nBUG=angleproject:2220\nTEST=angle_end2end_tests\n\nChange-Id: I2dc777ec75babb8fbb1a2dd8949636c5c05c5767\nReviewed-on: https://chromium-review.googlesource.com/754337\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/485903582c252daf31173d871763654e67c46f41", "message": "Remove formatType arg from computeCompressedImageSize.\n\nBUG=angleproject:2230\n\nChange-Id: Ie291ba05efa89bc4ea52966e975d5a21431a461f\nReviewed-on: https://chromium-review.googlesource.com/757877\nCommit-Queue: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/9e888a46f04dad0f40539ce5f0c241f6e6d6080a", "message": "Fix HALF_FLOAT/HALF_FLOAT_OES selection with the ES3 backend.\n\nFound via TextureUploadFormatTest.\n\nBUG=angleproject:2231\nChange-Id: I8f214c4cfe3d8fead9226db20e57f6e6039b5b44\nReviewed-on: https://chromium-review.googlesource.com/756642\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/f5b8ba6b26b4fd3f554c54774cf654771375eac9", "message": "Set TextureGL dirty bits when workaround usage of levels changes.\n\nPreviously, we wouldn't update the dirty bits when switching from a\nworkarounded alpha/alpha/uint8 (r8/red/uint8) to something else.\n\nFound via TextureUploadFormatTest.\n\nBUG=angleproject:2232\nChange-Id: Idba63282f8a65daec5675798d3516345ca941447\nReviewed-on: https://chromium-review.googlesource.com/756641\nCommit-Queue: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/c5de4d29ce16699ad8befdf9d6da12e113806d2d", "message": "KHR_create_context with GLES forbids _KHR reset notification enum.\n\nEGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT from\nEXT_create_context_robustness must be used with GLES instead.\n\nBUG=angleproject:2213\n\nChange-Id: Icaf3c7550c4eb7cb61c6d4ed37adba7824ca4bc8\nReviewed-on: https://chromium-review.googlesource.com/759122\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/8f8edd6eac1af12b7cdb2f69f2f00055bc4b5b31", "message": "attachmentsHaveSameDimensions should not compare depths.\n\nFrom: https://bugzilla.mozilla.org/show_bug.cgi?id=1372083\n\nBUG=angleproject:2210\nTEST=angle_end2end_tests\nChange-Id: I00539fb7e0bc9a21f90f5c87d7082c2a6b1ed907\nReviewed-on: https://chromium-review.googlesource.com/747814\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/5e5438fe1c506f48b4c50d8a2f8d64f1a99097d6", "message": "Make operator bool() explicit, and remove explicit from move ctors.\n\nGecko bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1371190\n\nBUG=angleproject:2211\n\nChange-Id: I10b866728a844668de6373c3a0968ea4e8256ff7\nReviewed-on: https://chromium-review.googlesource.com/747841\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}, {"url": "https://api.github.com/repos/google/angle/commits/20c285ecd76f1bc20d83db64ae9dfb16b880de0a", "message": "callClearTwiceOnSmallTarget is needed for all sizes.\n\nGecko bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1325733\n\nBUG=angleproject:2214\n\nChange-Id: I6837a0fbf0bbbd0877f333f0625729445a5999aa\nReviewed-on: https://chromium-review.googlesource.com/748320\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tanderson-google": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/23cd4addeadbac12613f156d4c3c97bbaba33874", "message": "Add missing include to stddef.h on arm\n\nChange-Id: I28771a550a3188993635f55803093fc49590ceb1\nReviewed-on: https://chromium-review.googlesource.com/764887\nReviewed-by: Jamie Madill <jmadill@chromium.org>\nCommit-Queue: Jamie Madill <jmadill@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "svaisanen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/935cb7c580f448827fc482bd5cb1693ef44c7b47", "message": "Support B8G8R8A8_UNORM_SRGB as D3D11 texture format\n\nSupport B8G8R8A8_UNORM_SRGB as D3D11 texture format.\n\nBUG=angleproject:2172\n\nChange-Id: I2f15a55123601735d7fc6caa40bb056243a91b44\nReviewed-on: https://chromium-review.googlesource.com/758600\nReviewed-by: Geoff Lang <geofflang@chromium.org>\nCommit-Queue: Geoff Lang <geofflang@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kenrussell": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/angle/commits/1f4d68dbe474a4a060e9c5a669215c9fc4fc94b2", "message": "Suppress dEQP test failures on Quadro P400.\n\nBUG=angleproject:2222\nTBR=jmadill@chromium.org\nNOTRY=true\n\nChange-Id: Iec2a6b63920e026e78a3f8db58dcf84bb8f5040d\nReviewed-on: https://chromium-review.googlesource.com/754344\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nCommit-Queue: Kenneth Russell <kbr@chromium.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "googlebot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/246376198", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/246376198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/246377120", "body": "CLAs look good, thanks!\n\n<!-- ok -->\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/246377120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/264680603", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/264680603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/306695841", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/306695841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/306699405", "body": "CLAs look good, thanks!\n\n<!-- ok -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/306699405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/307584276", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/307584276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/320682509", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/320682509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343966759", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343966759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343968118", "body": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_author_cla -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343968118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/angle/issues/comments/343968932", "body": "CLAs look good, thanks!\n\n<!-- ok -->", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343968932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "abpostelnicu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/246377114", "body": "I signed it!\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/246377114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "daoshengmu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/306699395", "body": "I signed it!\n\nBest regards,\nDaosheng Mu\ndaoshengmu@gmail.com\n\nOn Wed, Jun 7, 2017 at 2:05 PM, googlebot <notifications@github.com> wrote:\n\n> Thanks for your pull request. It looks like this may be your first\n> contribution to a Google open source project. Before we can look at your\n> pull request, you'll need to sign a Contributor License Agreement (CLA).\n>\n> \ud83d\udcdd *Please visit https://cla.developers.google.com/\n> <https://cla.developers.google.com/> to sign.*\n>\n> Once you've signed, please reply here (e.g. I signed it!) and we'll\n> verify. Thanks.\n> ------------------------------\n>\n>    - If you've already signed a CLA, it's possible we don't have your\n>    GitHub username or you're using a different email address. Check your\n>    existing CLA data <https://cla.developers.google.com/clas> and verify\n>    that your email is set on your git commits\n>    <https://help.github.com/articles/setting-your-email-in-git/>.\n>    - If your company signed a CLA, they designated a Point of Contact who\n>    decides which employees are authorized to participate. You may need to\n>    contact the Point of Contact for your company and ask to be added to the\n>    group of authorized contributors. If you don't know who your Point of\n>    Contact is, direct the project maintainer to go/cla#troubleshoot.\n>    - In order to pass this check, please resolve this problem and have\n>    the pull request author add another comment and the bot will run again.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/google/angle/pull/6#issuecomment-306695841>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ABNGSVvOy3V_B0okFGzQ-Q1_kcuuBYfzks5sBj21gaJpZM4NyPqF>\n> .\n>\n", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/306699395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "MortimerGoro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/322289517", "body": "Ups, will follow the contribution guide https://chromium.googlesource.com/angle/angle/+/master/doc/ContributingCode.md", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/322289517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "shaforostoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/angle/issues/comments/343968104", "body": "I signed it!", "reactions": {"url": "https://api.github.com/repos/google/angle/issues/comments/343968104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}