{"_default": {"1": {"kevthanewversi": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/75", "title": "High Sierra update fails", "body": "Pushing the High Sierra update to my client Macs fails even after setting a force install by date in Simian admin . I get the below log when I attempt to fetch updates. This is only started happening recently as I've been able to do prior Sierra updates. Just FYI, I have disabled automatic updates on the client Macs if it matters.\r\n\r\nCommand run on client Mac is > sudo `managedsoftwareupdate --applesuspkgsonly -vvv `                                                                                                    \r\n\r\n```\r\n: managedsoftwareupdate is configured to process Apple Software Updates only.\r\n\r\nChecking Apple Software Update catalog...\r\n\r\n    Caching CatalogURL https://cxxxxx.appspot.com/applesus/eyJoZWFkZXIiOiAib3NfdmVyc2lvbj0xMC4xMi42fHRyYWNrPXN0YWJsZSIsICJjb29raWVzIjogIkF1dGgxVG9rZW49TVRRMk1UY3pOVFEwTmpVNU5UQTFPRFk1TURnM056TXlOVGsyTlRFME5UazROalk0TlRVMDsgc2VjdXJlOyBodHRwb25seTsifQ==\r\n\r\n    Options: {'logging_function': <function display_debug2 at 0x10bbc4d70>, 'ignore_system_proxy': None, 'additional_headers': {'User-Agent': u'managedsoftwareupdate/2.8.2.2855 Darwin/16.7.0 (x86_64) (MacBookPro12,1)'}, 'file': '/tmp/munki_swupd_cache/mirror/apple.sucatalog.download', 'cache_data': {\r\n\r\n    \"last-modified\" = \"Wed, 01 Nov 2017 07:21:18 GMT\";\r\n\r\n}, 'url': u'https://cxxxxx.appspot.com/applesus/eyJoZWFkZXIiOiAib3NfdmVyc2lvbj0xMC4xMi42fHRyYWNrPXN0YWJsZSIsICJjb29raWVzIjogIkF1dGgxVG9rZW49TVRRMk1UY3pOVFEwTmpVNU5UQTFPRFk1TURnM056TXlOVGsyTlRFME5UazROalk0TlRVMDsgc2VjdXJlOyBodHRwb25seTsifQ==', 'follow_redirects': True, 'download_only_if_changed': True, 'can_resume': True}\r\n\r\n    URLSession_task_didReceiveChallenge_completionHandler_\r\n\r\n    Authentication challenge for Host: csquared-staging.appspot.com Realm: None AuthMethod: NSURLAuthenticationMethodServerTrust\r\n\r\n    Allowing OS to handle authentication request\r\n\r\n    Status: 304\r\n\r\n    Headers: {u'Cache-Control': u'no-cache', u'Server': u'Google Frontend', u'x-cloud-trace-context': u'49a03e3e67afbced7d428b59b24242ef', u'Date': u'Mon, 27 Nov 2017 09:09:39 GMT', u'alt-svc': u'hq=\":443\"; ma=2592000; quic=51303431; quic=51303339; quic=51303338; quic=51303337; quic=51303335,quic=\":443\"; ma=2592000; v=\"41,39,38,37,35\"', u'Content-Type': u'text/html; charset=utf-8'}\r\n\r\n    Item is unchanged on the server.\r\n\r\n    /tmp/munki_swupd_cache/mirror/apple.sucatalog already exists and is up-to-date.\r\n\r\nDownloading available Apple Software Updates...\r\n\r\n    softwareupdate cmd: ['/usr/local/munki/ptyexec', '/usr/sbin/softwareupdate', '--verbose', '-d', '-a']\r\n\r\n    Finding available software...\r\n\r\nERROR: softwareupdate error: 100\r\n\r\nERROR: Could not download all available Apple updates.\r\n\r\n    CheckForSoftwareUpdates result: False\r\n\r\nFinishing...\r\n\r\n    Getting info on currently installed applications...\r\n\r\n    Performing postflight tasks...\r\n\r\n    postflight stderr: WARNING:root:facter hostname empty; fetching from sys_config\r\n\r\nWARNING:root:Root CA Cert Chain was EMPTY!\r\n\r\nWARNING:root:facter hostname empty; fetching from sys_config\r\n\r\nDone.\r\n```", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/75/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arubdesu": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/66", "title": "UpdateAppleSUSCatalog-related failures", "body": "This error is cropping up on a good number of machines running a relatively recent simian version:\r\n```py\r\nWARNING:root:Root CA Cert Chain was EMPTY!\r\nERROR:root:Failed to harvest Puppet SSL cert facter specified.\r\nWARNING:root:Root CA Cert Chain was EMPTY!\r\nTraceback (most recent call last):\r\n  File \"/usr/local/munki/simian_client.py\", line 87, in <module>\r\n    sys.exit(main(sys.argv[1:]))\r\n  File \"/usr/local/munki/simian_client.py\", line 73, in main\r\n    preflight.RunPreflight(runtype, server_url=server_url)\r\n  File \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.5-py2.7.egg/simian/mac/client/preflight.py\", line 429, in RunPreflight\r\n    flight_common.UpdateAppleSUSCatalog(client)\r\n  File \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.5-py2.7.egg/simian/mac/client/flight_common.py\", line 560, in UpdateAppleSUSCatalog\r\n    raise base_client.HTTPError\r\nsimian.client.client.HTTPError\r\n```\r\nAny hints as to why this http response is only failing for a handful of clients? I'm trying to correlate OS versions or other discrepancies, since it seems to be in a routine that is supposed to fetch the applicable SUS catalog. ", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/66/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/61", "title": "simianfacter/Facter 4 issue", "body": "Immediate traceback with cfacter and simianfacter the moment it hits the new structured fact output:\r\n```py\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/simianfacter\", line 102, in <module>\r\n    main()\r\n  File \"/usr/local/bin/simianfacter\", line 87, in main\r\n    facts = GetFacterFacts()\r\n  File \"/usr/local/bin/simianfacter\", line 69, in GetFacterFacts\r\n    (key, unused_sep, value) = line.split(' ', 2)\r\n```\r\nI'm working on a PR, just submitting this in case someone beats me to it with how y'all solved this internally... \ud83d\ude09 ", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/61/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/275449121", "body": "Thanks! Silly of me not to look in the GUI on the config page, as well!\r\n<img width=\"420\" alt=\"screenshot 2017-01-26 12 15 22\" src=\"https://cloud.githubusercontent.com/assets/388808/22342097/2a014ef8-e3c1-11e6-96a7-4dc8755c6b23.png\">\r\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/275449121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/282413357", "body": "Updated to reflect requested change", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/282413357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/283989152", "body": "Wait, I have an errant `elif`, don't I...\r\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/283989152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/288582072", "body": "Since this is currently dormant and I screwed up my git author (which screwed up the CLA) in the middle I'll pull this down, squash my commits and re-submit", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/288582072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/295719258", "body": "Closing, more recent commits could have resolved this.", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/295719258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/327287692", "body": "As per 4c39c775d4b0ba5f6d54ef6faec95ded12db9a31, this is addressed. Thanks @maximermilov !", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/327287692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/359337598", "body": "Recent commits have not fixed this, and the existing code fails with an error (that gets swallowed and therefore isn't visible on stdout...) related to argparse. This cannot be what you're using internally... anyway, my version is [here](https://gist.github.com/arubdesu/2b21b9722035d00359e4ad491cf87b0d). Would a PR be good? ", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/359337598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/101343494", "body": "pardon, it's confusing because you're highlighting the code that handles the _previous_ version of facter, which is the same... I took another look just now, and any custom facts (as site and all of the ones Simian cares about are flat, un='structured' facts,) are resolved on facter3/puppet4 with the dictionary lookup on what `json.loads()` returns...", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/101343494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/103030169", "body": "old facter's `--json` doesn't include the site custom fact in our env. Updating now to loosely validate it's at least a string.  ", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/103030169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "groob": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/65", "title": "simian client does not support SNI ", "body": "I have a SNI certificate bundle on the appengine side. This requires connecting with the -servername param. \r\n\r\nI tried to see if I could make a change with M2Crypto in the client.py code, but it looks like SNI is not a supported M2Crypto option, at least not in the version of the bundled library. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/65/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/63", "title": "Install documentation/makefile out of date", "body": "I completed a simian install to AppEngine today and ran into several issues that require updates or fixes: \r\n\r\n- The AppEngine instructions are not matching the documentation for installing python apps with `gcloud`. \r\nThe steps described [here](https://github.com/google/simian/wiki/Admin-Setup) require downloading a legacy launcher. AppEngine now is part of the `gcloud app` subcommand.\r\n\r\n- custom domains\r\nIf you're using a custom domain with app-engine, the project ID is _not_ the subdomain. \r\nI had to modify `src/simian/util/appid_generator.py` because it was combining the project ID with a domain part, but the app.yml should match the following:\r\n```\r\napplication: your-gcp-project-id\r\n```\r\n\r\nFor reference, I use `acme-corp` as the Project ID, but my simian install is served from `munki.corp.acme.co`.", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/63/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/285806580", "body": "I have the value set in settings.cfg before deploying to app-engine. \r\n\r\nIs there a step in the deployment that I skipped? ", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/285806580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/285824319", "body": "The https://github.com/google/simian/wiki/Admin-Setup page only mentions editing the settings.cfg file. Can the documentation be updated?", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/285824319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nathanperkins": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/54", "title": "\"make test\" results in error \"ValueError: jpeg is required unless explicitly disabled using --disable-jpeg, aborting\"", "body": "I had this problem and saw it in a [thread on Simian-discuss](https://groups.google.com/forum/#!searchin/simian-discuss/jpeg/simian-discuss/C6rv0DYgQGI/BTFeZjhjAgAJ).\n\n**Issue**\nPillow added a dependency on a \"jpeg\" package that has to be installed with brew. This dependency should be integrated into the install or appropriate instructions should be added to the setup instructions.\n\n**How to replicate**\n1. Follow the install instructions on a fresh copy of El Capitan up to the `make test` portion.\n2. Attempt to run `make test`, it will fail with error `ValueError: jpeg is required unless explicitly disabled using --disable-jpeg, aborting`\n3. Install the `jpeg` package using brew.\n4. Rerun `make test`, it will work.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/54/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/53", "title": "Internal Server Error (500) when accessing a manifest with no packages", "body": "**Issue**\nWhen an admin accesses a manifest with no packages, they get an internal server error (500), instead of a page.\n\n**How to replicate**\nAttempt to access the \"view stable\" page on an instance that does not have packages yet. You will receive an internal server error.\n\nI wouldn't consider this a high-priority because the problem goes away once you have packages :)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/53/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/52", "title": "ACL groups are case-sensitive", "body": "**Issue**\n\nGoogle users are allowed to specify capitalization of the email login for their accounts (e.g, Nathan.Perkins@gmail.com). The usernames for Simian's ACL groups are case-sensitive. This can be a confusing bug if an admin enters users in lowercase, but Google expects capitalization.\n\n**How to replicate**\n1. Log in to Simian as admin and open the ACL groups config page.\n2. If you have a user whose email login is stored on Google as `First.Last@gmail.com`, enter it as `first.last@gmail.com`.\n3. Log out and log back in as First.Last@gmail.com\n4. You will not have access.\n5. Change the ACL entry to `First.Last@gmail.com` and log back in.\n6. You will have access.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/52/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/51", "title": "Add option to logout", "body": "**Issue**\nI don't see an option to log out of Simian Admin. I have to clear my browser history to logout or change users.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/51/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/50", "title": "Better handling for access issues", "body": "**Issue**\nWhen logged in as a restricted user, trying to open some restricted pages will give a generic error or Internal Server Error (500). Messaging could be improved by returning a page that states the current user is in a group that does not have access to the resource.\n\n**How to replicate**\n1. Attempt to login as a user that has no access.\nor\n1. Create a support user in the ACLs and login as that user.\n2. Attempt to access the ACL page.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/50/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/231562539", "body": "Is using something like Let's Encrypt possible? I'm attempting to make the modifications myself, but I'm not the best at this.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/231562539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/231570166", "body": "Sometimes, I see an access denied message, so it's not consistent.\n\nFor an example, I'm logged in as a user that no longer has access and I'm getting an internal server error (500), with no option to logout. I have to clear my browser cookies to get back in.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/231570166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/231575851", "body": "Sorry, I misunderstood this issue. Let's Encrypt is mostly designed for adding SSL to public HTTPS hosts and probably won't even work if the clients aren't publicly accessible on a domain name.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/231575851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/231584389", "body": "Am I missing something? I only see \"No clients were found.\" on the summary page, even though I have one client. I don't see any \"Active client reports\"\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/231584389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "selfcommit": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/47", "title": "CA authority as part of Simian", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nA major hurtle to small shops using Simian is establishment of a common CA to sign client certificates.   While many shops simply use puppet, it would be better to include a CA option on the simian server. \n\nSolution:\nCreate a solution to perform X509 signing requests.\n\nConstraints:\n- Must run entirely in python (No local openssl lib available on appengine)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/47/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/46", "title": "Apple Updates URL cannot be local file", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nApple SoftwareUpdateServerURL can not be a local file, as of OSX 10.11\nThis leaves only a public, or otherwise unauthenticated URL as the only working option. \nIt is [NOT recommended](https://github.com/munki/munki/wiki/Apple-Software-Updates-With-Munki) to use a public URL, as this provides an attack surface.\n\nSolution:\nUse Simian's token system to generate a client specific, and short lived url for apple updates.  \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/46/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/45", "title": "Key Management for package encryption", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nCrypto signing manifests, catalogs and packages is a desirable but not currently implemented feature.\n\nOn a static munki server,  the admin has access to their own server and likely trusts the hardware, and it likely may be on customer premises.\n\nSimian is auto generating manifests, auto concat'ing catalogs, etc, there becomes a question of not only where to store both public and private keys, but also how to design the {client,cloud,admin} workflow such that an org running Simian can earn _real_ increased certainty that their fleet only runs legit pkgs.\n\nSolution:\nDevelop a method of key management that is effective in a  cloud computing environment (such as Appengine)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/45/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/44", "title": "Filter Packages Admin by Catalog and/or Manifest", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nFor instances where many (>100) packages are present, identifying packages targeted at a particular track of devices requires a lot of scrolling.\n\nSolution:\nAdd filtering functionality to the UI to only display packages which are targeted to a set of catalogs and/or manifest.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/44/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/43", "title": "Orphan File Checker", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nNo clear indication if changes in the XML of of Munki Package will also clear a previously uploaded file. \n\nSolution:\nCreate an \u201corphan file check\u201d That compares expected package files to existing bucket files and removes any orphans.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/43/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/42", "title": "Support Payload-less Packages", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nhttps://groups.google.com/forum/?fromgroups#!topic/simian-discuss/hT8IJjGtUmk\nNot only does plist.PackageInfo enforce installer_item_(location|hash), but the admin UI also doesn't allow packages without associated DMGs to be placed into catalogs/manifests, etc.  \n\nWorkaround:\nUpload a dummy DMG.\n\nSolution:\nFirst, we need to make installer_item_\\* optional, and next we need to create a way for admins to opt to not upload a package DMG and still make the package deployable.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/42/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/41", "title": "Report package download failures, supervisor kills, re-installs & low disk space", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nCurrently, when there is insufficient space to download or install a package, it\u2019s not very noticable by the end user.\n\nThe munki client can fail to download a package for a wide number of reasons.  Some of these are intermittent, but sometimes particular packages, computers, or networks are problematic.  \n\nPackages may be misconfigured (i.e. missing pkginfo installs key) or unexpected machine state may cause packages to repeatedly and perpetually redownload and reinstall, regardless of success.\n\nThe simian client does not report all installed .plists in an easy to search way. \n\nSolution:\nupdate the simian client to collect more data about installs / state of a client. \nThat data should also be made easily available in the web UI\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/41/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/40", "title": "Tag organization & tagging constraints", "body": "This issue is being presented as an opportunity for the Github community to make any further suggestions about implementation before an attempt is made to implement a solution.  \n\n**Work will start on or about July 13**\n\nDetails from the [Simian feature request doc](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.h870jkmhvsw7) are below:\n\nProblem:\nTags are currently a bit difficult to manage.\n\nTagging currently does not respect database constraints (Generating a tagged computer can happen multiple times in a single tag)\n\nSolution:\nCreate a better hierarchy for tag management.  \nRevise the tagging data model\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/40/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/8e1699c7b2a912e11b9a414f5aa8ce43c09918ec", "message": "update regex for admin js and css directories to work with local dev"}, {"url": "https://api.github.com/repos/google/simian/commits/43042e0845ad24e7e155d5a3a83e1fabe63be9e0", "message": "resolves #15 by adding .gitignore of common dev files"}, {"url": "https://api.github.com/repos/google/simian/commits/ea9261c89459d0c746629b33f74bfc1de90f446a", "message": "preinstall is now less agressive, targets MSC.app only"}, {"url": "https://api.github.com/repos/google/simian/commits/189b26e409db87d1286d15c647b855f51a554fad", "message": "include preinstall script closes issue #18"}, {"url": "https://api.github.com/repos/google/simian/commits/68324d7ed21d837061ae58f2612cd7074929b034", "message": "Fixed symlinks generated in create_gae_bundle for icons/client_resources"}, {"url": "https://api.github.com/repos/google/simian/commits/85ec26fd3f7d2edcf3a97753449192d8763fbd24", "message": "Grammar and warns - see #19"}, {"url": "https://api.github.com/repos/google/simian/commits/813f11578b3e69d16b33fdb0d368a65c5f7667c2", "message": "Add admin responsibility to client_resources.  see #19"}, {"url": "https://api.github.com/repos/google/simian/commits/e8f46e560bb03b3f19f28c50f697eb5a09a4b7fb", "message": "change directory structure - see #19"}, {"url": "https://api.github.com/repos/google/simian/commits/5a7af4eee49a3fde25ed8fc816b66c434ae21922", "message": "Include clinet_resource and icon directorys in source.  Add example client zip"}, {"url": "https://api.github.com/repos/google/simian/commits/d540562a2b212720b3f6f2b427eddcd4fe56aef5", "message": "symlink instead of folder creation"}, {"url": "https://api.github.com/repos/google/simian/commits/7d364e18c2bd426cba2983a712409fd011e7cbdd", "message": "Add support for Client Customization and app icons for GAE"}], "pull_requests": [{"url": "https://api.github.com/repos/google/simian/pulls/55", "title": "Add example on_corp_cmp script with comments", "body": "I missed creating an issue for this from the [Simian requests document](https://docs.google.com/document/d/1NgxxvQ6yY53ns-tuPAj-9qAAkpUrINpGu8qYoxO6hY4/edit#heading=h.qrolf4z3urpd)\n\nThis was quick and easy, more PR's coming this week for other issues.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/115936857", "body": "Details on finding the issue:\nhttps://groups.google.com/d/msg/simian-discuss/uecj2-djmZ4/JyTLbNNu-YIJ\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/115936857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/120186362", "body": "After thinking more about this, it might be better to symlink the client_resources and icons folders only if they exists in PWD/src.  \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/120186362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/120512539", "body": "I'm happy with this now.  Correct me if the /src/ folder is the wrong place for housing install specific files.  ping @juofmgoblue \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/120512539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/121432813", "body": "Thanks for your reply Justin, hoped you enjoyed vacation.  I'm interested in contributing back to the project regularly and thought this would be a good \"get to know each other\" pull request.\n\n1) You raise a valid point about the static content.  I don't know if, out of the box, GAE has any kind of rate limiting to prevent abuse.  Icons are small, but the example zip file would be ripe for abuse.\n  Maybe remove the example .zip but leave enough breadcrumbs for those that want to set it up?\n\n2) gae_resource seems like a good choice.  I'll update the pull request to match that.\n\nMaybe down the line a useful feature would be to have the simian_client (or another script) call Munki's makepkginfo and then pass icons / relevant package info directly the GAE instance in a way that allowed for Datastore retrieval.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/121432813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/121436817", "body": "Agreed and Done.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/121436817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/121439758", "body": "Should be all set now.  Thanks for your review time.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/121439758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/139559956", "body": "Not sure what's changed, but I'm no longer able to repeat this problem in current release.  This issue can likely be closed.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/139559956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/155282191", "body": "@juofmgoblue  the preinstall now targets only msc.app.  I cleaned up the script a bit as well.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/155282191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/224372494", "body": "I signed it!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/224372494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/228566524", "body": "After looking a bit, I've found [cryptography.io](https://cryptography.io/en/latest/x509/tutorial/#creating-a-self-signed-certificate)\n\nThis looks like a promising library.  I'll take a swing at implementing with this.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/228566524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/229358005", "body": "@maximermilov  Would a custom runtime be an option? \n\nhttps://github.com/googlearchive/appengine-vm-fortunespeak-python\n\nI might be able to break it into a separate module for this project, or as a stand alone project.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/229358005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/231564143", "body": "Hi Nathan,\nThat's an interesting thought.  It might be easy enough to optionally collect the information needed for admins that want to use Let's Encrypt.  I'll add it to the list of ideas when I start looking at this next week. \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/231564143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/243138836", "body": "This seems to be resolved in /cron/maintenance/verify_packages\n\nhttps://github.com/google/simian/blob/master/src/simian/mac/cron/maintenance.py#L102\n\nShould be good to close\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/243138836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Rumbles": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/36", "title": "Loading Apple Updates > Catalogue Admin stalls and returns an error", "body": "I installed Simian last week to test it, today I was writing up documentation on how I set it up and the Apple Updates page wouldn't load. In the browser I get:\n\n```\nTraceback (most recent call last):\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 267, in Handle\n    result = handler(dict(self._environ), self._StartResponse)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\n    rv = self.router.dispatch(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\n    return route.handler_adapter(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\n    return handler.dispatch()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\n    return method(*args, **kwargs)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/admin/applesus.py\", line 186, in get\n    self._DisplayMain()\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/admin/applesus.py\", line 204, in _DisplayMain\n    p.testing_promote_date = applesus.GetAutoPromoteDate(common.TESTING, p)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/common/applesus.py\", line 306, in GetAutoPromoteDate\n    if not settings.APPLE_AUTO_PROMOTE_ENABLED:\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/settings.py\", line 382, in __getattr__\n    return self._Get(str(k).lower())\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/settings.py\", line 805, in _Get\n    item, unused_mtime = self._module.models.Settings.GetItem(k)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/settings.py\", line 274, in GetItem\n    value, mtime = cls.GetSerializedItem(name)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/base.py\", line 734, in GetSerializedItem\n    entity = cls.MemcacheWrappedGet(key)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/base.py\", line 141, in MemcacheWrappedGet\n    cached = memcache.get(memcache_key)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 560, in get\n    results = rpc.get_result()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 613, in get_result\n    return self.__get_result_hook(self)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 616, in __get_hook\n    rpc.check_success()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 584, in check_success\n    self.__stubmap.GetPostCallHooks().Call(self.__service, self.__method,\nDeadlineExceededError: The overall deadline for responding to the HTTP request was exceeded.\n```\n\nLooking at this in the AppEngine console, I get the following:\n\n```\nTraceback (most recent call last):\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 267, in Handle\n    result = handler(dict(self._environ), self._StartResponse)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\n    rv = self.router.dispatch(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\n    return route.handler_adapter(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\n    return handler.dispatch()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\n    return method(*args, **kwargs)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/admin/applesus.py\", line 186, in get\n    self._DisplayMain()\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/admin/applesus.py\", line 204, in _DisplayMain\n    p.testing_promote_date = applesus.GetAutoPromoteDate(common.TESTING, p)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/common/applesus.py\", line 306, in GetAutoPromoteDate\n    if not settings.APPLE_AUTO_PROMOTE_ENABLED:\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/settings.py\", line 382, in __getattr__\n    return self._Get(str(k).lower())\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/settings.py\", line 805, in _Get\n    item, unused_mtime = self._module.models.Settings.GetItem(k)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/settings.py\", line 274, in GetItem\n    value, mtime = cls.GetSerializedItem(name)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/base.py\", line 734, in GetSerializedItem\n    entity = cls.MemcacheWrappedGet(key)\n  File \"/base/data/home/apps/e~thefloow-simian/f8bfa254267e.393014033104675667/simian/mac/models/base.py\", line 141, in MemcacheWrappedGet\n    cached = memcache.get(memcache_key)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 560, in get\n    results = rpc.get_result()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 613, in get_result\n    return self.__get_result_hook(self)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 616, in __get_hook\n    rpc.check_success()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 577, in check_success\n    self.wait()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 556, in wait\n    assert self.__rpc.state == apiproxy_rpc.RPC.FINISHING, repr(self.state)\nDeadlineExceededError: The overall deadline for responding to the HTTP request was exceeded.\n```\n\nOn one of the errors I've managed to generate in AppEngine I got the following (none of the others I have seen reported this):\n\n```\nThis request caused a new process to be started for your application, and thus caused your application code to be loaded for the first time. This request may thus take longer and use more CPU than a typical request for your application.\n```\n\nI've waited over an hour for this code to finish running, but it still loads the same/similar error.\n\nWhen I first ran in to this issue, I did try running `make release` again just in case something was wrong with my deployment, but I get the same issue. I checked I was on the latest branch at the time.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/36/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/35", "title": "preflight barfs if hostname has '", "body": "As per:\n\nhttps://groups.google.com/d/msg/simian-discuss/cm6SDsBM3dA/HRLpAjyeFgAJ\n\nIf the client hostname contains a ' symbol (which is Mac default), preflight barfs:\n\nadmin$ sudo /usr/local/munki/preflight --debug\nWARNING:root:facter hostname empty; fetching from sys_config\nTraceback (most recent call last):\nFile \"/usr/local/munki/simian_client.py\", line 87, in\nsys.exit(main(sys.argv[1:]))\nFile \"/usr/local/munki/simian_client.py\", line 73, in main\npreflight.RunPreflight(runtype, server_url=server_url)\nFile \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.4-py2.7.egg/simian/mac/client/preflight.py\", line 371, in RunPreflight\nsecure_config, client_id, user_settings, client_exit)\nFile \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.4-py2.7.egg/simian/mac/client/preflight.py\", line 114, in LoginToServer\nclient_id_str = flight_common.DictToStr(client_id)\nFile \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.4-py2.7.egg/simian/mac/client/flight_common.py\", line 530, in DictToStr\nvalue = value.decode('utf-8')\nFile \"/usr/local/munki/simian/lib/python2.7/encodings/utf_8.py\", line 16, in decode\nreturn codecs.utf_8_decode(input, errors, True)\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\u2019' in position 5: ordinal not in range(128)\n\nRunning current clone, on OS X 10.11\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/35/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/222721054", "body": "I checked this page a few times since I raised this bug - each time the page failed to load, today I checked and the page loaded after a long delay, it would be good if there was some more information as to why the page didn't load when the backend times out\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/222721054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "YehudaBialik": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/32", "title": "Document or script steps for uninstalling Simian", "body": "How does one who had munki installed and running, and then added simian, go back to just munki?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/32/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/190487246", "body": "I actually gave up at that time, but thank you very much for following up.\nI'm just getting Reposado going, but I'm hoping to go back to simian before\nthe summer.  It will definitely be a good thing for students and teachers\nto use during summer vacation!\n\nThanks,\n\nYehuda\n\nOn Mon, Jan 4, 2016 at 3:15 PM, Justin McWilliams notifications@github.com\nwrote:\n\n> Yehuda, did you figure this out? It should essentially be \"rm -rf\n> /usr/local/munki\" and the install Munki. There may be a couple of other\n> harmless remnants, depending on how you installed Simian. We can throw\n> together a doc if you still need help (and would happily accept one if you\n> have notes).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/simian/issues/32#issuecomment-168791466.[image:\n> Web Bug from\n> https://github.com/notifications/beacon/AJfTf9ZQAQabMDvHOHc2CAUeAbKN0yC9ks5pWspHgaJpZM4GRaJw.gif]\n\n## \n\n_Yehuda Alexandroff_\nSenior IT Support Technician, Bialik Hebrew Day School\np: 416.783.3346 ext 292 | e: yalexandroff@bialik.ca | w: www.bialik.ca a: 2760\nBathurst St., Toronto, ON, M6B 3A1\nhttp://www.facebook.com/Bialik.Hebrew.Day.School [image:\nhttp://bialik.ca/school-life/video-gallery/]\nhttp://bialik.ca/school-life/video-gallery/\nhttps://itunes.apple.com/ca/app/bialik-hebrew-day-school/id554463933?mt=8\nhttps://play.google.com/store/apps/details?id=com.bialik.bialikapp&hl=en\n\n## \n\n---\n\nTo unsubscribe from future mailings, please click here \nhttp://unsubscribe.bialik.ca.\nNote that we will still be able to send you certain communications without \nyour express consent where CASL does not apply, CASL exemptions apply, or \nyour consent is implied.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/190487246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mholttech": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/31", "title": "Unicode characters in pkginfo description may cause package modification notification emails to fail", "body": "I'm getting an error 500 when I copy/paste a pkginfo file.  Uploading the file works perfectly\n\nHere is the log:\n\n```\n2015-10-15 20:34:48.592 /admin/package 500 261ms 0kb instance=0 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36 module=default version=a56a3dc98d87\n100.43.220.122 - mholt [15/Oct/2015:20:34:48 -0700] \"POST /admin/package HTTP/1.1\" 500 225 - \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36\" \"rlc-simian.appspot.com\" ms=261 cpu_ms=53 cpm_usd=0.000025 instance=0 app_engine_release=1.9.27 \nW 2015-10-15 20:34:48.418\nNo admins defined! Configure admins in Admin Tools -> ACL Groups.\nW 2015-10-15 20:34:48.446\nNo admins defined! Configure admins in Admin Tools -> ACL Groups.\nE 2015-10-15 20:34:48.590\n'ascii' codec can't encode character u'\\xae' in position 726: ordinal not in range(128)\nTraceback (most recent call last):\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1535, in __call__\n    rv = self.handle_exception(request, response, e)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\n    rv = self.router.dispatch(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\n    return route.handler_adapter(request, response)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\n    return handler.dispatch()\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 572, in dispatch\n    return self.handle_exception(e, self.app.debug)\n  File \"/base/data/home/apps/s~rlc-simian/a56a3dc98d87.387476931731189739/simian/mac/admin/__init__.py\", line 153, in handle_exception\n    super(AdminHandler, self).handle_exception(exception, debug_mode)\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\n    return method(*args, **kwargs)\n  File \"/base/data/home/apps/s~rlc-simian/a56a3dc98d87.387476931731189739/simian/mac/admin/package.py\", line 170, in post\n    self.UpdatePackageInfoFromPlist(create_new=True)\n  File \"/base/data/home/apps/s~rlc-simian/a56a3dc98d87.387476931731189739/simian/mac/admin/package.py\", line 380, in UpdatePackageInfoFromPlist\n    self.NotifyAdminsOfPackageChangeFromPlist(plist_xml)\n  File \"/base/data/home/apps/s~rlc-simian/a56a3dc98d87.387476931731189739/simian/mac/admin/package.py\", line 283, in NotifyAdminsOfPackageChangeFromPlist\n    main_body = str(plist.GetXml(indent_num=2))\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xae' in position 726: ordinal not in range(128)\n```\n\nHere is the plist:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>_metadata</key>\n    <dict>\n        <key>created_by</key>\n        <string>admin</string>\n        <key>creation_date</key>\n        <date>2015-10-16T02:58:46Z</date>\n        <key>munki_version</key>\n        <string>2.3.1.2535</string>\n        <key>os_version</key>\n        <string>10.10.3</string>\n    </dict>\n    <key>autoremove</key>\n    <false/>\n    <key>catalogs</key>\n    <array>\n        <string>unstable</string>\n    </array>\n    <key>description</key>\n    <string>Adobe\u00ae Flash\u00ae Player is a cross-platform browser-based application runtime that delivers uncompromised viewing of expressive applications, content, and videos across screens and browsers.</string>\n    <key>display_name</key>\n    <string>Adobe Flash Player</string>\n    <key>installed_size</key>\n    <integer>17140</integer>\n    <key>installer_item_hash</key>\n    <string>b5eca33f72b1b419a7f9754b53cc8780b03e351520f189a43986a9e1f2aa22fa</string>\n    <key>installer_item_location</key>\n    <string>AdobeFlashPlayer-19.0.0.207.dmg</string>\n    <key>installer_item_size</key>\n    <integer>16364</integer>\n    <key>minimum_os_version</key>\n    <string>10.5.0</string>\n    <key>name</key>\n    <string>AdobeFlashPlayer</string>\n    <key>package_path</key>\n    <string>Install Adobe Flash Player.app/Contents/Resources/Adobe Flash Player.pkg</string>\n    <key>receipts</key>\n    <array>\n        <dict>\n            <key>installed_size</key>\n            <integer>17140</integer>\n            <key>packageid</key>\n            <string>com.adobe.pkg.FlashPlayer</string>\n            <key>version</key>\n            <string>19.0.0.207</string>\n        </dict>\n    </array>\n    <key>unattended_install</key>\n    <true/>\n    <key>uninstall_method</key>\n    <string>removepackages</string>\n    <key>uninstallable</key>\n    <true/>\n    <key>version</key>\n    <string>19.0.0.207</string>\n</dict>\n</plist>\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/31/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/21", "title": "Facter Issue", "body": "RE: https://groups.google.com/forum/#!topic/simian-discuss/MPgc47amP2o\n\nI figured I should move this conversation over to here since it seems to be a problem in the code.\n\nI've narrowed it down to CacheFacterContents not liking the output of /usr/local/bin/simianfacter\n\nI changed Line 331/332 to:\n\n```\n  return_code, stdout, unused_stderr = Exec(\n      ['facter', '-p'], timeout=300, waitfor=0.5)\n```\n\nand we are now pulling in facter facts, however I realize that this bypasses the failsafe of pulling in unspecified settings from simina/settings.cfg\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/21/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/128423576", "body": "just tested this and still no dice.  I added some debugging to display configtrack, simiantrack, site, and location and am getting\n\n```\nINFO:root:Config Track: BROKEN\nINFO:root:Simian Track:\nINFO:root:Site: None\nINFO:root:Location: None\n```\n\nI don't fully understand python but what i'm seeing is https://github.com/google/simian/blob/b925614a60e1e1beedf33f4a80cf4f98dae1a032/src/simian/util/simianfacter does not actually return any values so there's nothing for stdout to process\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/128423576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/129558324", "body": "When I run 'sudo /usr/local/bin/simianfacter' I get\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/bin/simianfacter\", line 9, in <module>\n    from simian import settings\nImportError: No module named simian\n```\n\nI removed the calls for pulling information from the settings config and got this output\n\n```\n{'kernelrelease': '14.4.0', 'swapfree': '1019.00 MB', 'sp_number_processors': '2', 'is_pe': 'false', 'network_lo0': '127.0.0.0', 'macosx_productversion_major': '10.10', 'operatingsystem': 'Darwin', 'memoryfree_mb': '101.08', 'macaddress_en1': '72:00:04:d8:6d:80', 'macosx_productversion': '10.10.4', 'mac_java_version': '1.8.51.16', 'macaddress_bridge0': '82:e6:50:b0:16:00', 'facterversion': '2.2.0', 'configtrack': 'staff', 'location': 'default', 'printers': 'Office_Canon_Printer', 'mac_has_wireless': 'true', 'mac_flash_version': '', 'sp_platform_uuid': '327A3752-151E-5CF5-9F82-80F9917150A7', 'sp_boot_mode': 'normal_boot', 'sp_kernel_version': 'Darwin 14.4.0', 'mac_laptop': 'mac_laptop', 'macaddress': '0c:4d:e9:c7:51:87', 'mac_munki_version': '2.3.0.2517', 'productname': 'MacBookPro11,1', 'architecture': 'x86_64', 'mtu_lo0': '16384', 'kernel': 'Darwin', 'domain': 'local', 'clean_certname': 'c02n5heug3qj', 'sp_l2_cache_core': '256 KB', 'mtu_stf0': '1280', 'uptime_hours': '69', 'sp_smc_version_system': '2.16f68', 'sp_os_version': 'OS X 10.10.4 (14E46)', 'system_uptime': '{\"seconds\"=>251933, \"hours\"=>69, \"days\"=>2, \"uptime\"=>\"2 days\"}', 'hardwareisa': 'i386', 'sp_user_name': 'System Administrator (root)', 'mac_battery_charging': 'No', 'swapencrypted': 'true', 'hardwaremodel': 'x86_64', 'interfaces': 'lo0,gif0,stf0,en0,en1,en2,en3,bridge0,p2p0,awdl0', 'macosx_buildversion': '14E46', 'sp_secure_vm': 'secure_vm_enabled', 'osfamily': 'Darwin', 'ps': 'ps auxwww', 'macaddress_awdl0': '7a:b5:fe:a8:f5:8f', 'certname': 'c02n5heug3qj', 'sp_serial_number': 'C02N5HEUG3QJ', 'path': 'bin:/opt/boxen/rbenv/shims:/opt/boxen/rbenv/bin:/opt/boxen/ruby-build/bin:node_modules/.bin:/opt/boxen/nodenv/shims:/opt/boxen/nodenv/bin:/opt/boxen/homebrew/bin:/opt/boxen/homebrew/sbin:/opt/boxen/bin:/Users/mholt/.rbenv/bin:/opt/boxen/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/munki:/Users/mholt/gocode/bin:.:/Users/mholt/bin:/Users/mholt/.dotfiles/scripts:/opt/local/bin:/opt/local/sbin:/bin:/Users/mholt/.rvm/bin', 'kernelversion': '14.4.0', 'mac_admin_users': 'root, rlcadmin, mholt', 'mtu_awdl0': '1452', 'sp_local_host_name': 'staff 3', 'mac_vm_serial': 'C02N5HEUG3QJ', 'rubyversion': '2.0.0', 'fqdn': 'staff-3.local', 'macosx_productname': 'Mac OS X', 'memorysize_mb': '8192.00', 'network_en3': '10.20.20.0', 'network_en0': '10.20.20.0', 'os': '{\"name\"=>\"Darwin\", \"family\"=>\"Darwin\", \"release\"=>{\"major\"=>\"14\", \"minor\"=>\"4\", \"full\"=>\"14.4.0\"}}', 'mac_current_user': 'mholt', 'macaddress_en3': '0c:4d:e9:c7:51:87', 'macaddress_en2': '72:00:04:d8:6d:81', 'mac_battery_charge_percent': '98', 'macaddress_en0': '80:e6:50:0b:66:70', 'memoryfree': '101.08 MB', 'processorcount': '4', 'puppetversion': '3.7.1', 'simiantrack': 'stable', 'mtu_en1': '1500', 'mtu_en0': '1500', 'mtu_en3': '1500', 'mtu_en2': '1500', 'swapfree_mb': '1019.00', 'ipaddress_lo0': '127.0.0.1', 'is_virtual': 'false', 'sp_uptime': 'up 2:21:59:22', 'gid': 'wheel', 'sp_cpu_type': 'Intel Core i5', 'uptime_seconds': '251933', 'rubysitedir': '/Library/Ruby/Site/2.0.0', 'memorysize': '8.00 GB', 'mtu_bridge0': '1500', 'puppet_vardir': '/var/lib/puppet', 'netmask': '255.255.255.0', 'filevault_active': 'true', 'netmask_en0': '255.255.255.0', 'netmask_lo0': '255.0.0.0', 'netmask_en3': '255.255.255.0', 'kernelmajversion': '14.4', 'sp_machine_model': 'MacBookPro11,1', 'sp_boot_rom_version': 'MBP111.0138.B14', 'sp_packages': '1', 'profiles': 'managedmac.loginwindow.alacarte,com.grahamgilbert.icloud_assistant,managedmac.security.alacarte,com.grahamgilbert.login_window_hostname,managedmac.energysaver.alacarte,com.grahamgilbert.macnamer,managedmac.activedirectory.alacarte,com.grahamgilbert.crypt,com.apple.mdm.prometheus.reallifechurch.org.cb89ebe0-1c8b-0133-cf3c-0c4de99bf58d.alacarte,com.grahamgilbert.disablegamecenter', 'sp_physical_memory': '8 GB', 'sp_machine_name': 'MacBook Pro', 'uptime_days': '2', 'sp_l3_cache': '3 MB', 'site': 'default', 'mac_battery_cycles': '127', 'timezone': 'PDT', 'id': 'root', 'sp_boot_volume': 'Macintosh HD', 'macosx_productversion_minor': '4', 'computer_role': 'staff', 'operatingsystemmajrelease': '14', 'processors': '{\"count\"=>4, \"speed\"=>\"2.6 GHz\"}', 'hostname': 'staff-3', 'virtual': 'physical', 'mac_encryption_enabled': 'true', 'mtu_p2p0': '2304', 'mac_timezone': 'US/Pacific', 'macaddress_p2p0': '02:e6:50:0b:66:70', 'macaddress_primary': '80:e6:50:0b:66:70', 'mac_java_vendor': 'Oracle', 'uptime': '2 days', 'mac_memory_in_gb': '8.0', 'swapsize': '1024.00 MB', 'sp_current_processor_speed': '2.6 GHz', 'ipaddress': '10.20.20.84', 'ipaddress_en3': '10.20.20.88', 'ipaddress_en0': '10.20.20.84', 'operatingsystemrelease': '14.4.0', 'mtu_gif0': '1280', 'root_home': '/var/root', 'swapsize_mb': '1024.00'}\n```\n\nhowever, even with that i'm still not getting anything inside of flight_common.\n\nMy debugging shows:\n\n```\nINFO:root:Primary User: mholt\nINFO:root:Hostname: staff 3\nINFO:root:Config Track: BROKEN\nINFO:root:Simian Track:\nINFO:root:Site: None\nINFO:root:Location: None\n```\n\nI'm expecting (and receive it when I call facter -p instead of simianfacter inside flight_common):\n\n```\nINFO:root:Cert Name: c02n5heug3qj\nINFO:root:Primary User: mholt\nINFO:root:Hostname: staff 3\nINFO:root:Config Track: staff\nINFO:root:Simian Track: stable\nINFO:root:Site: default\nINFO:root:Location: default\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/129558324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/129563869", "body": "ok that made some progress then.... only two things of note:\n\n1) every variable is required in settings.cfg regardless of if it exists in puppet\n2) it's only returning the settings.cfg variables when I run `sudo /usr/local/munki/simian/bin/python /usr/local/bin/simianfacter`\n\n```\ncertname => c02n5heug3qj\nprimary_user => foouser\nsp_local_host_name => staff 3\nconfigtrack => staff\nsimiantrack => stable\nsite => default\nlocation => default\napplesus => True\n```\n\nif I replace lines 90-97 in simianfacter with `print facts` I get:\n\n```\n{'kernelrelease': '14.4.0', 'swapfree': '1019.00 MB', 'sp_number_processors': '2', 'is_pe': 'false', 'network_lo0': '127.0.0.0', 'macosx_productversion_major': '10.10', 'operatingsystem': 'Darwin', 'memoryfree_mb': '39.14', 'macaddress_en1': '72:00:04:d8:6d:80', 'macosx_productversion': '10.10.4', 'mac_java_version': '1.8.51.16', 'macaddress_bridge0': '82:e6:50:b0:16:00', 'facterversion': '2.2.0', 'configtrack': 'staff', 'location': 'default', 'printers': 'Office_Canon_Printer', 'mac_has_wireless': 'true', 'mac_flash_version': '', 'sp_platform_uuid': '327A3752-151E-5CF5-9F82-80F9917150A7', 'sp_boot_mode': 'normal_boot', 'sp_kernel_version': 'Darwin 14.4.0', 'mac_laptop': 'mac_laptop', 'macaddress': '0c:4d:e9:c7:51:87', 'mac_munki_version': '2.3.0.2517', 'productname': 'MacBookPro11,1', 'architecture': 'x86_64', 'mtu_lo0': '16384', 'kernel': 'Darwin', 'domain': 'local', 'clean_certname': 'c02n5heug3qj', 'sp_l2_cache_core': '256 KB', 'mtu_stf0': '1280', 'uptime_hours': '70', 'sp_smc_version_system': '2.16f68', 'sp_os_version': 'OS X 10.10.4 (14E46)', 'system_uptime': '{\"seconds\"=>253178, \"hours\"=>70, \"days\"=>2, \"uptime\"=>\"2 days\"}', 'hardwareisa': 'i386', 'sp_user_name': 'System Administrator (root)', 'mac_battery_charging': 'No', 'swapencrypted': 'true', 'hardwaremodel': 'x86_64', 'primary_user': 'foouser', 'interfaces': 'lo0,gif0,stf0,en0,en1,en2,en3,bridge0,p2p0,awdl0', 'macosx_buildversion': '14E46', 'sp_secure_vm': 'secure_vm_enabled', 'osfamily': 'Darwin', 'ps': 'ps auxwww', 'macaddress_awdl0': '7a:b5:fe:a8:f5:8f', 'certname': 'c02n5heug3qj', 'sp_serial_number': 'C02N5HEUG3QJ', 'path': 'bin:/opt/boxen/rbenv/shims:/opt/boxen/rbenv/bin:/opt/boxen/ruby-build/bin:node_modules/.bin:/opt/boxen/nodenv/shims:/opt/boxen/nodenv/bin:/opt/boxen/homebrew/bin:/opt/boxen/homebrew/sbin:/opt/boxen/bin:/Users/mholt/.rbenv/bin:/opt/boxen/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/munki:/Users/mholt/gocode/bin:.:/Users/mholt/bin:/Users/mholt/.dotfiles/scripts:/opt/local/bin:/opt/local/sbin:/bin:/Users/mholt/.rvm/bin', 'kernelversion': '14.4.0', 'mac_admin_users': 'root, rlcadmin, mholt', 'mtu_awdl0': '1452', 'sp_local_host_name': 'staff 3', 'mac_vm_serial': 'C02N5HEUG3QJ', 'rubyversion': '2.0.0', 'fqdn': 'staff-3.local', 'macosx_productname': 'Mac OS X', 'memorysize_mb': '8192.00', 'network_en3': '10.20.20.0', 'network_en0': '10.20.20.0', 'os': '{\"name\"=>\"Darwin\", \"family\"=>\"Darwin\", \"release\"=>{\"major\"=>\"14\", \"minor\"=>\"4\", \"full\"=>\"14.4.0\"}}', 'mac_current_user': 'mholt', 'macaddress_en3': '0c:4d:e9:c7:51:87', 'macaddress_en2': '72:00:04:d8:6d:81', 'mac_battery_charge_percent': '98', 'macaddress_en0': '80:e6:50:0b:66:70', 'memoryfree': '39.14 MB', 'processorcount': '4', 'puppetversion': '3.7.1', 'simiantrack': 'stable', 'mtu_en1': '1500', 'mtu_en0': '1500', 'mtu_en3': '1500', 'mtu_en2': '1500', 'swapfree_mb': '1019.00', 'ipaddress_lo0': '127.0.0.1', 'is_virtual': 'false', 'sp_uptime': 'up 2:22:20:7', 'gid': 'wheel', 'sp_cpu_type': 'Intel Core i5', 'uptime_seconds': '253178', 'rubysitedir': '/Library/Ruby/Site/2.0.0', 'applesus': True, 'memorysize': '8.00 GB', 'mtu_bridge0': '1500', 'puppet_vardir': '/var/lib/puppet', 'netmask': '255.255.255.0', 'filevault_active': 'true', 'netmask_en0': '255.255.255.0', 'netmask_lo0': '255.0.0.0', 'netmask_en3': '255.255.255.0', 'kernelmajversion': '14.4', 'sp_machine_model': 'MacBookPro11,1', 'sp_boot_rom_version': 'MBP111.0138.B14', 'sp_packages': '1', 'profiles': 'com.grahamgilbert.disablegamecenter,com.grahamgilbert.icloud_assistant,managedmac.energysaver.alacarte,managedmac.security.alacarte,com.grahamgilbert.crypt,managedmac.loginwindow.alacarte,com.grahamgilbert.macnamer,com.apple.mdm.prometheus.reallifechurch.org.cb89ebe0-1c8b-0133-cf3c-0c4de99bf58d.alacarte,com.grahamgilbert.login_window_hostname,managedmac.activedirectory.alacarte', 'sp_physical_memory': '8 GB', 'sp_machine_name': 'MacBook Pro', 'uptime_days': '2', 'sp_l3_cache': '3 MB', 'site': 'default', 'mac_battery_cycles': '127', 'timezone': 'PDT', 'id': 'root', 'sp_boot_volume': 'Macintosh HD', 'macosx_productversion_minor': '4', 'computer_role': 'staff', 'operatingsystemmajrelease': '14', 'processors': '{\"count\"=>4, \"speed\"=>\"2.6 GHz\"}', 'hostname': 'staff-3', 'virtual': 'physical', 'mac_encryption_enabled': 'true', 'mtu_p2p0': '2304', 'mac_timezone': 'US/Pacific', 'macaddress_p2p0': '02:e6:50:0b:66:70', 'macaddress_primary': '80:e6:50:0b:66:70', 'mac_java_vendor': 'Oracle', 'uptime': '2 days', 'mac_memory_in_gb': '8.0', 'swapsize': '1024.00 MB', 'sp_current_processor_speed': '2.6 GHz', 'ipaddress': '10.20.20.84', 'ipaddress_en3': '10.20.20.88', 'ipaddress_en0': '10.20.20.84', 'operatingsystemrelease': '14.4.0', 'mtu_gif0': '1280', 'root_home': '/var/root', 'swapsize_mb': '1024.00'}\n```\n\nso i'm thinking the output types being different is what's still holding it up\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/129563869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/129576435", "body": "so here's what I have now.... apparently Lines 90-97 was old code, I did see applesus being injected in (as I don't have a fact for that) in the array.  However it still appears to not be parsing correctly in flight_common.\n\nI had to change /usr/bin/python to the simian python path in simianfacter\n\nI added `logging.debug('Facts: %s', stdout)` at line 321 just after the executing of simianfacter and got: \n\n```\n{'kernelrelease': '14.4.0', 'swapfree': '1019.00 MB', 'sp_number_processors': '2', 'is_pe': 'false', 'network_lo0': '127.0.0.0', 'macosx_productversion_major': '10.10', 'operatingsystem': 'Darwin', 'memoryfree_mb': '44.80', 'macaddress_en1': '72:00:04:d8:6d:80', 'macosx_productversion': '10.10.4', 'mac_java_version': '1.8.51.16', 'macaddress_bridge0': '82:e6:50:b0:16:00', 'facterversion': '2.2.0', 'configtrack': 'staff', 'location': 'default', 'printers': 'Office_Canon_Printer', 'mac_has_wireless': 'true', 'mac_flash_version': '', 'sp_platform_uuid': '327A3752-151E-5CF5-9F82-80F9917150A7', 'sp_boot_mode': 'normal_boot', 'sp_kernel_version': 'Darwin 14.4.0', 'mac_laptop': 'mac_laptop', 'macaddress': '0c:4d:e9:c7:51:87', 'mac_munki_version': '2.3.0.2517', 'productname': 'MacBookPro11,1', 'architecture': 'x86_64', 'mtu_lo0': '16384', 'kernel': 'Darwin', 'domain': 'local', 'clean_certname': 'c02n5heug3qj', 'sp_l2_cache_core': '256 KB', 'mtu_stf0': '1280', 'uptime_hours': '70', 'sp_smc_version_system': '2.16f68', 'sp_os_version': 'OS X 10.10.4 (14E46)', 'system_uptime': '{\"seconds\"=>255167, \"hours\"=>70, \"days\"=>2, \"uptime\"=>\"2 days\"}', 'hardwareisa': 'i386', 'sp_user_name': 'System Administrator (root)', 'mac_battery_charging': 'No', 'swapencrypted': 'true', 'hardwaremodel': 'x86_64', 'primary_user': 'foouser', 'interfaces': 'lo0,gif0,stf0,en0,en1,en2,en3,bridge0,p2p0,awdl0', 'macosx_buildversion': '14E46', 'sp_secure_vm': 'secure_vm_enabled', 'osfamily': 'Darwin', 'ps': 'ps auxwww', 'macaddress_awdl0': '7a:b5:fe:a8:f5:8f', 'certname': 'c02n5heug3qj', 'sp_serial_number': 'C02N5HEUG3QJ', 'path': 'bin:/opt/boxen/rbenv/shims:/opt/boxen/rbenv/bin:/opt/boxen/ruby-build/bin:node_modules/.bin:/opt/boxen/nodenv/shims:/opt/boxen/nodenv/bin:/opt/boxen/homebrew/bin:/opt/boxen/homebrew/sbin:/opt/boxen/bin:/Users/mholt/.rbenv/bin:/opt/boxen/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/munki:/Users/mholt/gocode/bin:.:/Users/mholt/bin:/Users/mholt/.dotfiles/scripts:/opt/local/bin:/opt/local/sbin:/bin:/Users/mholt/.rvm/bin', 'kernelversion': '14.4.0', 'mac_admin_users': 'root, rlcadmin, mholt', 'mtu_awdl0': '1452', 'sp_local_host_name': 'staff 3', 'mac_vm_serial': 'C02N5HEUG3QJ', 'rubyversion': '2.0.0', 'fqdn': 'staff-3.local', 'macosx_productname': 'Mac OS X', 'memorysize_mb': '8192.00', 'network_en3': '10.20.20.0', 'network_en0': '10.20.20.0', 'os': '{\"name\"=>\"Darwin\", \"family\"=>\"Darwin\", \"release\"=>{\"major\"=>\"14\", \"minor\"=>\"4\", \"full\"=>\"14.4.0\"}}', 'mac_current_user': 'mholt', 'macaddress_en3': '0c:4d:e9:c7:51:87', 'macaddress_en2': '72:00:04:d8:6d:81', 'mac_battery_charge_percent': '98', 'macaddress_en0': '80:e6:50:0b:66:70', 'memoryfree': '44.80 MB', 'processorcount': '4', 'puppetversion': '3.7.1', 'simiantrack': 'stable', 'mtu_en1': '1500', 'mtu_en0': '1500', 'mtu_en3': '1500', 'mtu_en2': '1500', 'swapfree_mb': '1019.00', 'ipaddress_lo0': '127.0.0.1', 'is_virtual': 'false', 'sp_uptime': 'up 2:22:53:16', 'gid': 'wheel', 'sp_cpu_type': 'Intel Core i5', 'uptime_seconds': '255167', 'rubysitedir': '/Library/Ruby/Site/2.0.0', 'applesus': True, 'memorysize': '8.00 GB', 'mtu_bridge0': '1500', 'puppet_vardir': '/var/lib/puppet', 'netmask': '255.255.255.0', 'filevault_active': 'true', 'netmask_en0': '255.255.255.0', 'netmask_lo0': '255.0.0.0', 'netmask_en3': '255.255.255.0', 'kernelmajversion': '14.4', 'sp_machine_model': 'MacBookPro11,1', 'sp_boot_rom_version': 'MBP111.0138.B14', 'sp_packages': '1', 'profiles': 'com.grahamgilbert.icloud_assistant,com.apple.mdm.prometheus.reallifechurch.org.cb89ebe0-1c8b-0133-cf3c-0c4de99bf58d.alacarte,managedmac.security.alacarte,com.grahamgilbert.login_window_hostname,managedmac.loginwindow.alacarte,com.grahamgilbert.macnamer,com.grahamgilbert.crypt,managedmac.activedirectory.alacarte,managedmac.energysaver.alacarte,com.grahamgilbert.disablegamecenter', 'sp_physical_memory': '8 GB', 'sp_machine_name': 'MacBook Pro', 'uptime_days': '2', 'sp_l3_cache': '3 MB', 'site': 'default', 'mac_battery_cycles': '127', 'timezone': 'PDT', 'id': 'root', 'sp_boot_volume': 'Macintosh HD', 'macosx_productversion_minor': '4', 'computer_role': 'staff', 'operatingsystemmajrelease': '14', 'processors': '{\"count\"=>4, \"speed\"=>\"2.6 GHz\"}', 'hostname': 'staff-3', 'virtual': 'physical', 'mac_encryption_enabled': 'true', 'mtu_p2p0': '2304', 'mac_timezone': 'US/Pacific', 'macaddress_p2p0': '02:e6:50:0b:66:70', 'macaddress_primary': '80:e6:50:0b:66:70', 'mac_java_vendor': 'Oracle', 'uptime': '2 days', 'mac_memory_in_gb': '8.0', 'swapsize': '1024.00 MB', 'sp_current_processor_speed': '2.6 GHz', 'ipaddress': '10.20.20.84', 'ipaddress_en3': '10.20.20.88', 'ipaddress_en0': '10.20.20.84', 'operatingsystemrelease': '14.4.0', 'mtu_gif0': '1280', 'root_home': '/var/root', 'swapsize_mb': '1024.00'}\n```\n\nit still wasn't working so I added `logging.debug('New Facts: %s', facts)` at line 342 to see what was being returned and it came back with:\n\n```\n{\"{'kernelrelease'\": '\\'1019.00 MB\\', \\'sp_number_processors\\': \\'2\\', \\'is_pe\\': \\'false\\', \\'network_lo0\\': \\'127.0.0.0\\', \\'macosx_productversion_major\\': \\'10.10\\', \\'operatingsystem\\': \\'Darwin\\', \\'memoryfree_mb\\': \\'44.80\\', \\'macaddress_en1\\': \\'72:00:04:d8:6d:80\\', \\'macosx_productversion\\': \\'10.10.4\\', \\'mac_java_version\\': \\'1.8.51.16\\', \\'macaddress_bridge0\\': \\'82:e6:50:b0:16:00\\', \\'facterversion\\': \\'2.2.0\\', \\'configtrack\\': \\'staff\\', \\'location\\': \\'default\\', \\'printers\\': \\'Office_Canon_Printer\\', \\'mac_has_wireless\\': \\'true\\', \\'mac_flash_version\\': \\'\\', \\'sp_platform_uuid\\': \\'327A3752-151E-5CF5-9F82-80F9917150A7\\', \\'sp_boot_mode\\': \\'normal_boot\\', \\'sp_kernel_version\\': \\'Darwin 14.4.0\\', \\'mac_laptop\\': \\'mac_laptop\\', \\'macaddress\\': \\'0c:4d:e9:c7:51:87\\', \\'mac_munki_version\\': \\'2.3.0.2517\\', \\'productname\\': \\'MacBookPro11,1\\', \\'architecture\\': \\'x86_64\\', \\'mtu_lo0\\': \\'16384\\', \\'kernel\\': \\'Darwin\\', \\'domain\\': \\'local\\', \\'clean_certname\\': \\'c02n5heug3qj\\', \\'sp_l2_cache_core\\': \\'256 KB\\', \\'mtu_stf0\\': \\'1280\\', \\'uptime_hours\\': \\'70\\', \\'sp_smc_version_system\\': \\'2.16f68\\', \\'sp_os_version\\': \\'OS X 10.10.4 (14E46)\\', \\'system_uptime\\': \\'{\"seconds\"=>255167, \"hours\"=>70, \"days\"=>2, \"uptime\"=>\"2 days\"}\\', \\'hardwareisa\\': \\'i386\\', \\'sp_user_name\\': \\'System Administrator (root)\\', \\'mac_battery_charging\\': \\'No\\', \\'swapencrypted\\': \\'true\\', \\'hardwaremodel\\': \\'x86_64\\', \\'primary_user\\': \\'foouser\\', \\'interfaces\\': \\'lo0,gif0,stf0,en0,en1,en2,en3,bridge0,p2p0,awdl0\\', \\'macosx_buildversion\\': \\'14E46\\', \\'sp_secure_vm\\': \\'secure_vm_enabled\\', \\'osfamily\\': \\'Darwin\\', \\'ps\\': \\'ps auxwww\\', \\'macaddress_awdl0\\': \\'7a:b5:fe:a8:f5:8f\\', \\'certname\\': \\'c02n5heug3qj\\', \\'sp_serial_number\\': \\'C02N5HEUG3QJ\\', \\'path\\': \\'bin:/opt/boxen/rbenv/shims:/opt/boxen/rbenv/bin:/opt/boxen/ruby-build/bin:node_modules/.bin:/opt/boxen/nodenv/shims:/opt/boxen/nodenv/bin:/opt/boxen/homebrew/bin:/opt/boxen/homebrew/sbin:/opt/boxen/bin:/Users/mholt/.rbenv/bin:/opt/boxen/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/munki:/Users/mholt/gocode/bin:.:/Users/mholt/bin:/Users/mholt/.dotfiles/scripts:/opt/local/bin:/opt/local/sbin:/bin:/Users/mholt/.rvm/bin\\', \\'kernelversion\\': \\'14.4.0\\', \\'mac_admin_users\\': \\'root, rlcadmin, mholt\\', \\'mtu_awdl0\\': \\'1452\\', \\'sp_local_host_name\\': \\'staff 3\\', \\'mac_vm_serial\\': \\'C02N5HEUG3QJ\\', \\'rubyversion\\': \\'2.0.0\\', \\'fqdn\\': \\'staff-3.local\\', \\'macosx_productname\\': \\'Mac OS X\\', \\'memorysize_mb\\': \\'8192.00\\', \\'network_en3\\': \\'10.20.20.0\\', \\'network_en0\\': \\'10.20.20.0\\', \\'os\\': \\'{\"name\"=>\"Darwin\", \"family\"=>\"Darwin\", \"release\"=>{\"major\"=>\"14\", \"minor\"=>\"4\", \"full\"=>\"14.4.0\"}}\\', \\'mac_current_user\\': \\'mholt\\', \\'macaddress_en3\\': \\'0c:4d:e9:c7:51:87\\', \\'macaddress_en2\\': \\'72:00:04:d8:6d:81\\', \\'mac_battery_charge_percent\\': \\'98\\', \\'macaddress_en0\\': \\'80:e6:50:0b:66:70\\', \\'memoryfree\\': \\'44.80 MB\\', \\'processorcount\\': \\'4\\', \\'puppetversion\\': \\'3.7.1\\', \\'simiantrack\\': \\'stable\\', \\'mtu_en1\\': \\'1500\\', \\'mtu_en0\\': \\'1500\\', \\'mtu_en3\\': \\'1500\\', \\'mtu_en2\\': \\'1500\\', \\'swapfree_mb\\': \\'1019.00\\', \\'ipaddress_lo0\\': \\'127.0.0.1\\', \\'is_virtual\\': \\'false\\', \\'sp_uptime\\': \\'up 2:22:53:16\\', \\'gid\\': \\'wheel\\', \\'sp_cpu_type\\': \\'Intel Core i5\\', \\'uptime_seconds\\': \\'255167\\', \\'rubysitedir\\': \\'/Library/Ruby/Site/2.0.0\\', \\'applesus\\': True, \\'memorysize\\': \\'8.00 GB\\', \\'mtu_bridge0\\': \\'1500\\', \\'puppet_vardir\\': \\'/var/lib/puppet\\', \\'netmask\\': \\'255.255.255.0\\', \\'filevault_active\\': \\'true\\', \\'netmask_en0\\': \\'255.255.255.0\\', \\'netmask_lo0\\': \\'255.0.0.0\\', \\'netmask_en3\\': \\'255.255.255.0\\', \\'kernelmajversion\\': \\'14.4\\', \\'sp_machine_model\\': \\'MacBookPro11,1\\', \\'sp_boot_rom_version\\': \\'MBP111.0138.B14\\', \\'sp_packages\\': \\'1\\', \\'profiles\\': \\'com.grahamgilbert.icloud_assistant,com.apple.mdm.prometheus.reallifechurch.org.cb89ebe0-1c8b-0133-cf3c-0c4de99bf58d.alacarte,managedmac.security.alacarte,com.grahamgilbert.login_window_hostname,managedmac.loginwindow.alacarte,com.grahamgilbert.macnamer,com.grahamgilbert.crypt,managedmac.activedirectory.alacarte,managedmac.energysaver.alacarte,com.grahamgilbert.disablegamecenter\\', \\'sp_physical_memory\\': \\'8 GB\\', \\'sp_machine_name\\': \\'MacBook Pro\\', \\'uptime_days\\': \\'2\\', \\'sp_l3_cache\\': \\'3 MB\\', \\'site\\': \\'default\\', \\'mac_battery_cycles\\': \\'127\\', \\'timezone\\': \\'PDT\\', \\'id\\': \\'root\\', \\'sp_boot_volume\\': \\'Macintosh HD\\', \\'macosx_productversion_minor\\': \\'4\\', \\'computer_role\\': \\'staff\\', \\'operatingsystemmajrelease\\': \\'14\\', \\'processors\\': \\'{\"count\"=>4, \"speed\"=>\"2.6 GHz\"}\\', \\'hostname\\': \\'staff-3\\', \\'virtual\\': \\'physical\\', \\'mac_encryption_enabled\\': \\'true\\', \\'mtu_p2p0\\': \\'2304\\', \\'mac_timezone\\': \\'US/Pacific\\', \\'macaddress_p2p0\\': \\'02:e6:50:0b:66:70\\', \\'macaddress_primary\\': \\'80:e6:50:0b:66:70\\', \\'mac_java_vendor\\': \\'Oracle\\', \\'uptime\\': \\'2 days\\', \\'mac_memory_in_gb\\': \\'8.0\\', \\'swapsize\\': \\'1024.00 MB\\', \\'sp_current_processor_speed\\': \\'2.6 GHz\\', \\'ipaddress\\': \\'10.20.20.84\\', \\'ipaddress_en3\\': \\'10.20.20.88\\', \\'ipaddress_en0\\': \\'10.20.20.84\\', \\'operatingsystemrelease\\': \\'14.4.0\\', \\'mtu_gif0\\': \\'1280\\', \\'root_home\\': \\'/var/root\\', \\'swapsize_mb\\': \\'1024.00\\'}'}\n```\n\nI know that output isn't right so I went ahead and just changed facts=stdout instead of using lines 335-341 but that resulted in:\n\n```\nAttributeError: 'str' object has no attribute 'get'\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/129576435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/129605511", "body": "how are things looking on this? I'm in the process of populating our simian instance and uploading seems really slow despite my 40Mbps upload speed.... 75 minutes to upload 1GB of data\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/129605511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/129957298", "body": "ok so then at this point we're back to square one of it still isn't pulling my facter facts with the current code base.\n\nThis is my simian_facts.rb that gets deployed to every machine via one of my puppet modules\n\n```\nFacter.add('certname') do\n  setcode do\n    certname = Facter.value(:clean_certname) #I've got another fact that defines this vaule so I pull it instead of duplicating code\n    certname\n  end\nend\n\nFacter.add('configtrack') do\n    setcode do\n      configtrack = Facter.value(:computer_role) #I've got another fact that defines this vaule so I pull it instead of duplicating code\n      configtrack\n    end\nend\n```\n\nand then I have a Puppet class that contains:\n\n```\n  file { simian_facts:\n      path    => \"/etc/facter/facts.d/simian.txt\",\n      owner   => root,\n      group   => wheel,\n      mode    => 644,\n      ensure  => present,\n      content => template(\"profile/simian/facts.erb\"),\n  }\n```\n\nthe ERB contains:\n\n```\nsimiantrack=<%= @simiantrack %>\nsite=<%= @site %>\nlocation=<%= @location %>\n```\n\nthose are pulled from variables set in hiera.\n\nso as far as I can tell I'm setting all of the facts properly and they show up when I run `facter -p` but simian still doesn't recognize them.   My only other option is to configure puppet to write out the facts directly to the simian settings.cfg file\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/129957298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/130059071", "body": "Here's where i'm at:\n\nI've reverted simainfacter & flight_common to the current commit in the repository at commit b6b816355a\n\nI've added this right after line 428 of flight_common for display the variables in the console:\n\n```\n\n  logging.info('Cert Name: %s', uuid)\n  logging.info('Primary User: %s', owner)\n  logging.info('Hostname: %s', hostname)\n  logging.info('Config Track: %s', config_track)\n  logging.info('Simian Track: %s', simian_track)\n  logging.info('Site: %s', site)\n  logging.info('Location: %s', office)\n```\n\nI've reverted my settings.cfg to\n\n```\n# Variables to supplement Puppet's facter.\n# Any variables not returned by facter will be populated from the values here.\n# For deployments lacking Puppet/facter, these will be used exhaustively.\ncertname = foo-cert-name\nprimary_user = foouser\nhostname = foohost\nconfigtrack = stable\nsimiantrack = stable\nsite = MTV\nlocation = US-MTV-FOO\n```\n\nwhen I run `sudo /usr/local/munki/simian/bin/python /usr/local/bin/simianfacter` I receive:\n\n```\n$ sudo /usr/local/munki/simian/bin/python /usr/local/bin/simianfacter\n/usr/local/munki/simian/lib/python2.6/site-packages/tlslite-0.3.8-py2.6.egg/tlslite/utils/cryptomath.py:9: DeprecationWarning: the sha module is deprecated; use the hashlib module instead\ncertname => c02n5heug3qj\nprimary_user => foouser\nsp_local_host_name => staff 3\nconfigtrack => staff\nsimiantrack => stable\nsite => default\nlocation => default\napplesus => True\n```\n\nWhen I run `preflight --debug` my log shows:\n\n```\n$ sudo /usr/local/munki/preflight --debug\n/usr/local/munki/simian/lib/python2.6/site-packages/simian-2.4-py2.6.egg/simian/client/gae_client.zip/google/appengine/tools/dev_appserver_login.py:33: DeprecationWarning: the md5 module is deprecated; use hashlib instead\n/usr/local/munki/simian/lib/python2.6/site-packages/tlslite-0.3.8-py2.6.egg/tlslite/utils/cryptomath.py:9: DeprecationWarning: the sha module is deprecated; use the hashlib module instead\nWARNING:root:facter hostname empty; fetching from sys_config\nINFO:root:Cert Name: 327a3752-151e-5cf5-9f82-80f9917150a7\nINFO:root:Primary User: mholt\nINFO:root:Hostname: staff 3\nINFO:root:Config Track: BROKEN\nINFO:root:Simian Track:\nINFO:root:Site: None\nINFO:root:Location: None\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/130059071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/130180768", "body": "I've decided for now instead of hacking flight_common to run facter -p in place of simianfacter i'm going to use puppet to define the variables inside settings.cfg.  I need to move on in testing the overall system i'm implementing but hope to come back to this issue down the road if it still exists as settings.cfg isn't as flexible/dynamic as pulling the information from facter.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/130180768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/143364191", "body": "I tried facter --show-legacy and it returns invalid option: --show-legacy\n\nRunning Facter v2.4.4\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/143364191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148591693", "body": "forgot to mention as well that even though I get the error 500, the new package is created in Simian\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148591693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148774746", "body": "I just tested without the \u00ae and it did resolve the 500 error.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148774746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "thedavidmeister": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/16", "title": "Ability to see a list of all clients in the Simian web UI without needing to provide search parameters", "body": "The summary page should list all clients (paginated of course) in the same way that clients are listed after using the search functionality (but not filtered).\n\nCurrently, it's a pain to browse through all clients - which might be less useful for large organisations but would be very useful for small-medium businesses and also new users finding their way around the UI for the first time.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/16/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "juofmgoblue": {"issues": [{"url": "https://api.github.com/repos/google/simian/issues/3", "title": "Validate MD5 of Munki downloads from munkibuilds.org", "body": "From Google Code:\n\nReported by tim@synthist.net, Feb 24, 2014\nJust a couple security-related notices for fetching from munkibuilds.org:\n\nhttps://code.google.com/p/simian/source/browse/trunk/Makefile#116\n\nmunkibuilds.org now has a valid SSL cert and can be accessed over HTTPS.\n\nAlso, the MD5's of all download DMGs are published at the 'MD5' URL for each build, so you could verify them, for example using 'md5 -q'.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/3/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/75a4bbe8afd37ecec2af5fec6442010d8ad98148", "message": "Unset default config values for variables which are dynamically populated when unset."}, {"url": "https://api.github.com/repos/google/simian/commits/9d25c8d00e9c4cce3f631acd2868abbae503c895", "message": "Update setup.py\n\nPin gflags to 2.0 to fix build, while adding Python2.7 support is in progress."}, {"url": "https://api.github.com/repos/google/simian/commits/4505da20a8db9b12544455fc6df297fe92444c7d", "message": "Update to latest stable Munki release, 2.5.1.2630"}, {"url": "https://api.github.com/repos/google/simian/commits/3b10bfbef259b076fba946620181fd19e8c9e925", "message": "Fix \"Last On Corp Preflight\" column header in \"Longest Off Corp\" report\n\nPreviously, it was \"Last Off Corp Preflight\", which is inaccurate."}, {"url": "https://api.github.com/repos/google/simian/commits/d987b8c44e01cb5f170f214aee8314a51ea4dd03", "message": "Delete downloaded Munki pkg files after extracting\n\nPreviously, pkg files remained in the tmpcontents folder which is extracted to disk on destination clients, needlessly copying pkg files to the root dir.  https://groups.google.com/forum/#!topic/simian-discuss/rE-2XT3Hie0"}, {"url": "https://api.github.com/repos/google/simian/commits/0059bbe29321d64abc3811fcb7b74ded6afbdc59", "message": "Scale back default cron execution frequency.\n\nAssociated documentation and suggested min/max ranges included.\n\nThis change aims to help with smaller and free quota deployments.\n\nNOTE: larger deployments may wish to revert to original frequencies."}, {"url": "https://api.github.com/repos/google/simian/commits/74cda838214fc9acf44dafd8a827ee577c7f3ac0", "message": "Add requests egg to Makefile for pkg/dmg build"}, {"url": "https://api.github.com/repos/google/simian/commits/23634ef499059f93e07b91a81082ad8e342a7e87", "message": "Remove installation of swig, as precompiled M2Crypto is now used for tests.\n\nAlso, fix easy_install of M2Crypto if $PWD contains a space."}, {"url": "https://api.github.com/repos/google/simian/commits/580269e948576aed2337d73db55e5bef00a08189", "message": "Merge pull request #33 from selfcommit/master\n\ninclude preinstall script closes issue #18"}, {"url": "https://api.github.com/repos/google/simian/commits/8edde4280f431f7096ce341533d136c13ba052fe", "message": "Display \"Admins\" group on Admin Tools->ACL Groups"}, {"url": "https://api.github.com/repos/google/simian/commits/2d86326b045a412fc4cae7984392d3bf8d04b26c", "message": "Merge pull request #30 from ramitsurana/patch-1\n\nAdded License Column,small typo errors resolved"}, {"url": "https://api.github.com/repos/google/simian/commits/f51895cf5f3738a20a6df90f7e3afe93e1af1d8e", "message": "Cover more cases where unset or invalid email config breaks admin\nfunctionality.\n\nSimilar to\nhttps://github.com/google/simian/commit/25749932c0aeb82ec0edef11682d3a91dd001378"}, {"url": "https://api.github.com/repos/google/simian/commits/909bd22a254a62ebe7aea9cbc121203ede957151", "message": "Fix issue where catalogs and manifests are not rebuilt when the last\nremaining package is removed"}, {"url": "https://api.github.com/repos/google/simian/commits/708c99042b564628b64b669e87334e46c917292b", "message": "Merge pull request #28 from puppetlabs/ios_fix\n\nremoved MAC address checking, added check for port (62078) on iPhone"}, {"url": "https://api.github.com/repos/google/simian/commits/7070f2dbd6636c8ef1d9354178ec2562d540f8c3", "message": "Invalid emails should not send and also not be deferred."}, {"url": "https://api.github.com/repos/google/simian/commits/997c408eacafe7a7c4e0120dcbed5f879ffeceee", "message": "network_detect lint cleanup"}, {"url": "https://api.github.com/repos/google/simian/commits/e6ccef4eaf7bc5c1dfc45a4e0f9db557e8f09526", "message": "Merge pull request #26 from callbrian/add_jetpack\n\nAdded Jetpack keyword for hotspots"}, {"url": "https://api.github.com/repos/google/simian/commits/8e024ee977df509d84c8d2736694a23fe62b0420", "message": "Add 'requests' setuptools dependency, needed for recent network_detect addition\n\nAdd 'requests' setuptools dependency, needed for recent network_detect addition"}, {"url": "https://api.github.com/repos/google/simian/commits/716b02d61d7ad5417b3c54d49926d48fcfea7ff0", "message": "Add support for iOS and MiFi tethering detection and execution abortion (preflight)."}, {"url": "https://api.github.com/repos/google/simian/commits/d931432103b934e71a51d795fe06f6e3e42e07a1", "message": "Add support for iOS and MiFi tethering detection and execution abortion."}, {"url": "https://api.github.com/repos/google/simian/commits/eb20a72815d561791a2e496571d0f4a68f771659", "message": "Build defaults to pkgbuild, falls back to packagemaker for <= OS X\n10.6\n\nhttps://groups.google.com/d/msg/simian-discuss/XGh4Z15ipfQ/5jwpRLzQCgAJ"}, {"url": "https://api.github.com/repos/google/simian/commits/630235024b8a343cac116f2e8d19c0694487b2fb", "message": "Merge pull request #23 from frlen/master\n\nSorting tags alphabetically in drop down menu on host page"}, {"url": "https://api.github.com/repos/google/simian/commits/2b1e9638fd398b75397650f6300e777b07c50531", "message": "Updating to the latest supported Munki 2.3 release\n\nUpdating to the latest supported Munki release, 2.3.0.2519"}, {"url": "https://api.github.com/repos/google/simian/commits/25749932c0aeb82ec0edef11682d3a91dd001378", "message": "Only attempt to send emails if requisite email configurations are set, regardless of email_on_every_change being enabled.  Logs a warning message instead of crashing."}, {"url": "https://api.github.com/repos/google/simian/commits/b6b816355ae80944a0bfe4629d15f1efe1245fdb", "message": "Harden simianfacter's GetFacterFacts function to ignore invalid Facter output\n\nHarden simianfacter's GetFacterFacts function to ignore invalid Facter output"}, {"url": "https://api.github.com/repos/google/simian/commits/b925614a60e1e1beedf33f4a80cf4f98dae1a032", "message": "Remove Facter caching\n\nRemove Facter caching, given Facter now runs quite quickly*, and this tends to cause delay of configuration changes being realized and resulting confusion.\r\n\r\n* in part due to it's own built-in caching which was added after Simian was originally built."}, {"url": "https://api.github.com/repos/google/simian/commits/141846d3993d54116ec0846855852eae9cc96b14", "message": "make EMAIL_ADMIN_LIST optional\n\nwhen EMAIL_ADMIN_LIST is unset, instead of crashing with AttributeError, just log an entry stating notification was skipped"}, {"url": "https://api.github.com/repos/google/simian/commits/4bbd283205b6e52bf5141bf6a83a25a45f9d9799", "message": "Fix email validation regex for email_admin_list, email_sender, and email_reply_to\n\nIn a previous change mail_regex (string) was changed to a compiled re match object, which broke client side (JavaScript) validation of these config options."}, {"url": "https://api.github.com/repos/google/simian/commits/95722b1e34194235ac924abf53ebd35217766e16", "message": "Merge pull request #20 from selfcommit/master\n\nFixed symlinks generated in create_gae_bundle for icons/client_resources"}, {"url": "https://api.github.com/repos/google/simian/commits/53d4ba285986e5d40ee9c6fdbf9d2adc8b4a6f77", "message": "Merge pull request #19 from selfcommit/master\n\nAdd support for Client Customization and app icons for GAE"}, {"url": "https://api.github.com/repos/google/simian/commits/aa827d18d6a2850bf7a5a819a0bfac7e365d89be", "message": "VerifyPackageIsEligibleForNewCatalogs should not fail when a target catalog does not exist.\n\nFixes reported issue where manually deleting a catalog from Datastore prevents subsequent additions to the (now non-existent) catalog\r\n\r\nAs reported in https://groups.google.com/forum/#!topic/simian-discuss/kqsRqF5beRw"}, {"url": "https://api.github.com/repos/google/simian/commits/da68bdcc01390f78f3338ccb2c93c6a18abeb9d1", "message": "Fix PYTHON_VERSION detection, as sometimes sys.version_info is a tuple, not a NamedTuple\n\nFix PYTHON_VERSION detection, as sometimes sys.version_info is a tuple, not a NamedTuple (i.e. lacks \"major\" and \"minor\" names)"}, {"url": "https://api.github.com/repos/google/simian/commits/3a981739e21da9b365a0f672a80be513f693b854", "message": "Fix PYTHON_VERSION in simian_client.py"}, {"url": "https://api.github.com/repos/google/simian/commits/fd50692aedf3651aa3ae494d97eb143126ee49d5", "message": "Simian 2.4 Release Candidate 1\n\nClient:\n- Add support for OS X 10.11 El Capitan\n- Remove unused client Machine UUID generation/reporting.\n- Support multiple feedback instructions from server, including new instructions such as Munki log level and forcefully killing of installd, when clients are detected as \"broken\" (likely due to installd being hung).\n- Move preflight, postflight, flight_common, and report_broken_client functionality into Simian package, rather than Munki; add unit tests.\n\nPackages (server):\n- Package Proposals: optionally require a second admin to approve changes before they go live to clients; or, .\n- Email notifications: optionally notify an email address of ~all package, Apple Update, etc. changes.\n- Munki 2.x package \"Categories\" support in UI.\n\nApple Updates Catalog Admin (server):\n- Add support for OS X 10.11 El Capitan.\n- Drop support for 10.5 and 10.6 clients for Apple Updates catalog admin; TODO: make this configurable.\n- ~Immediately regenerate Apple Update catalogs when track changes are made; previously, admins had to manually regenerate catalogs, or wait for the next catalog sync cron.\n- Validate force_install_after_date format in Apple Updates UI.\n- New install and failure counts, with links to relevant logs.\n- Visual indicator if an update requires a restart.\n- Configurable start and stop hours for Apple Update auto-promote.\n- Run update auto-promote every 3 hours, instead of every 12.\n\nServer Misc:\n- Release Reports: enable admins to optionally generate emails overviewing package releases.\n- Manifest Modifications UI includes a \"Block\" button, which will dynamically remove a package from relevant clients manifest(s).\n- Support sending more than one feedback instruction to clients.\n- Scalability improvement with session expiration.\n- Add explanation strings to NotAuthenticated exceptions.\n- Adjust some logging levels.\n- Remove lost/stolen functionality.\n- Remove unused pickle code, in favor of default/enabled JSON.\n\nMisc:\n- Comment cleanups/additions\n- Updated references from Google Code to GitHub, Admin Console to Cloud Console, etc.\n- Remove simianauth/simianadmin CLIs, and some associated server handlers (i.e. allowing manual uploading of Apple Update catalogs)."}, {"url": "https://api.github.com/repos/google/simian/commits/0a9d92b5d159e7df6447cd96ea761f7104c06daa", "message": "Update M2Crypto dependency from 0.21.1 to 0.22.3 to fix build/tests\n\nDue to https://groups.google.com/forum/#!topic/simian-discuss/MLCsLpdbrt8"}, {"url": "https://api.github.com/repos/google/simian/commits/e92a0addc246db2bfa49b5a9f15eab7701d85cf0", "message": "Fix support for 10.10.3 by updating to Munki 2.2.4.2431\n\nFix support for 10.10.3 by updating to Munki 2.2.4.2431"}, {"url": "https://api.github.com/repos/google/simian/commits/6b3e1f1cf6937eccd1f7e7d6592a24ff29e5d0bb", "message": "Update README.md"}, {"url": "https://api.github.com/repos/google/simian/commits/10dfae30072573a6fa428a2bfeeeb9e119653831", "message": "Update README.md"}, {"url": "https://api.github.com/repos/google/simian/commits/74c4c31860a0c813777fdc7b99d67a6109270f2e", "message": "Deprecate Apple Software Update items when a given OS VERSION is removed from Simian config, not when the catalog is removed.\n\nWhen 10.5-10.8 are removed from OS_VERSIONS, ~1/2 of the updates (~400) are archived, which drastically speeds up AppleSUS Catalog Admin page load."}, {"url": "https://api.github.com/repos/google/simian/commits/c4e717c2899b19b4f9c45e1e59785a9a73fb9a0a", "message": "Update MAIL_REGEX in acl_groups.py, fixing Admin UI JS validation\n\nUpdate MAIL_REGEX in acl_groups.py, supporting uppercase/etc. in Admin UI JS validation"}, {"url": "https://api.github.com/repos/google/simian/commits/18be4640ea8285f370dcec36e9dae719dd8b8531", "message": "mail_regex should be case insensitive\n\nmail_regex should be case insensitive"}, {"url": "https://api.github.com/repos/google/simian/commits/3e0eb0b2d5057711a4c63d147ba69eba3d171c93", "message": "Revert erroneous changes in c549fd454281e31a910bcd2f098d1f1e3218dace\n\nNote to self, don't edit code, especially using find/replace, from you phone."}, {"url": "https://api.github.com/repos/google/simian/commits/c549fd454281e31a910bcd2f098d1f1e3218dace", "message": "Update email validation regex to support upper case and periods.\n\nUpdate email validation regex to support upper case and periods."}, {"url": "https://api.github.com/repos/google/simian/commits/b19f15bc2996c9878802d26ca02722176b3cb029", "message": "Add \"make release_with_oauth\" to aid 2-factor auth users\n\nAdd new release command, \"make release_with_oauth\", to avoid the need for Application Specific Passswords for Google Accounts with 2-factor auth enabled."}, {"url": "https://api.github.com/repos/google/simian/commits/bcfc590c1ec70a2a45b3ecb65913f934b669fce7", "message": "Update README.md"}, {"url": "https://api.github.com/repos/google/simian/commits/85e3015b0f7d0b4bc592a492ec6ede0c4eea03c0", "message": "Merge pull request #6 from arthurthefourth/patch-1\n\nUpdate links in INSTALL"}, {"url": "https://api.github.com/repos/google/simian/commits/a8b03c654cfe81d0a191f23eae36f429ea816814", "message": "Merge pull request #5 from bruienne/master\n\nUpdate tgz2dmg to use pkgbuild if packagemaker is unavailable."}, {"url": "https://api.github.com/repos/google/simian/commits/f613661be38caa178d095f4a78e4d7fa67cef95a", "message": "JavaScript Updates:\n- Add missing goog.require for all use of goog.dom.classes.\n- compile_js.py should pull source from GitHub, not Google Code."}, {"url": "https://api.github.com/repos/google/simian/commits/92b59c0f1f2ab6f7dc5e7b1e026fa547d9dbf369", "message": "Update Simian to support OS X 10.10 Yosemite (with new M2Crypto egg)"}, {"url": "https://api.github.com/repos/google/simian/commits/729e16beeaaf5078921df8c7d096b291076fb852", "message": "Update URL for Munki, which has also moved to GitHub."}, {"url": "https://api.github.com/repos/google/simian/commits/cebdb2f5da238711680b71abc61e3019d934a289", "message": "Update Makefile to release to App Engine version based on Git rev, not SVN rev."}, {"url": "https://api.github.com/repos/google/simian/commits/9643649fc204ec17ac0a527a4353c3a8f2b65d88", "message": "Upgrade Munki2 version to latest stable release, and update next office hours date."}, {"url": "https://api.github.com/repos/google/simian/commits/741cc39a49d7b4c25fe3109aaabde4af5858b1e9", "message": "Porting Simian Google Code to GitHub, with Markdown README"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/59738775", "body": "Is there anything relevant in /var/log/install.log ?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59738775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59741923", "body": "In that case, there should also be a log named something like /tmp/_postflight_ (apologies, I forget the exact name scheme).  If it's not an obvious and quick fix, I'll re-enable the Google Code SVN repo for you.  But I can't see any postflight changes recently that could be a culprit...\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59741923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59742939", "body": "Ah, yes, we haven't build an M2Crypto egg for 10.10 yet.  I'll do that in\n30 min or so.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59742939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59751705", "body": "Bah!  10.10's openssl is lacking headers, so building M2Crypto-0.22.3 fails:\n\n```\n$ python2.6 setup.py bdist_egg\nrunning bdist_egg\nrunning egg_info\nwriting M2Crypto.egg-info/PKG-INFO\nwriting top-level names to M2Crypto.egg-info/top_level.txt\nwriting dependency_links to M2Crypto.egg-info/dependency_links.txt\nreading manifest file 'M2Crypto.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'M2Crypto.egg-info/SOURCES.txt'\ninstalling library code to build/bdist.macosx-10.10-intel/egg\nrunning install_lib\nrunning build_py\nrunning build_ext\nbuilding 'M2Crypto.__m2crypto' extension\nswigging SWIG/_m2crypto.i to SWIG/_m2crypto_wrap.c\nswig -python -I/System/Library/Frameworks/Python.framework/Versions/2.6/include/python2.6 -I/usr/include -I/usr/include/openssl -includeall -modern -o SWIG/_m2crypto_wrap.c SWIG/_m2crypto.i\nSWIG/_m2crypto.i:30: Error: Unable to find 'openssl/opensslv.h'\nSWIG/_m2crypto.i:33: Error: Unable to find 'openssl/safestack.h'\nSWIG/_evp.i:12: Error: Unable to find 'openssl/opensslconf.h'\nSWIG/_ec.i:7: Error: Unable to find 'openssl/opensslconf.h'\nerror: command 'swig' failed with exit status 1\n```\n\nI can probably still get this done today, but I have to head into the office now.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59751705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59770790", "body": "Here's what I get when disabling obfuscation during JS compilation:\n\n```\ngoog.require could not find: simian.menu simian.js:9\nUncaught Error: goog.require could not find: simian.menu simian.js:10\nGET https://simiandemohr.appspot.com/deps.js  simian.js:19\nUncaught TypeError: Cannot read property 'updateMenu' of undefined admin:14\nUncaught TypeError: undefined is not a function \n```\n\nSo it's related to simian.menu not being provided for some reason (menu.js)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59770790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59783084", "body": "You'll need to rebuild the client dmg/pkg, but this revision should fix support for installations on 10.10: https://github.com/google/simian/commit/92b59c0f1f2ab6f7dc5e7b1e026fa547d9dbf369\n\nPlease let me know :)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59783084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59787822", "body": "Great!  Thanks for the quick confirmation.   Working on the JavaScript issue now...\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59787822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59794177", "body": "Can you try this again please?  I made some small (and I think unrelated) changes in https://github.com/google/simian/commit/f613661be38caa178d095f4a78e4d7fa67cef95a and this appears to be working for me.  I have one other change in my Git client, but reverting that doesn't resurface the issue. These files haven't changed in ages, but the Google Code URL to fetch the raw files still seems to work. \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59794177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59929575", "body": "Great! \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59929575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59932159", "body": "SSL validation was added on Feb 26th.  MD5 validation is still pending.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59932159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/60604778", "body": "We have this functionality in our internal build and hope to release it soon.  It's a little rough around the edges, so we want to ensure it's finalized first.\n\nIn the interim, you can hand-edit the plists (\"Edit Pkginfo XML\" button), and add something like this:\n\n```\n    <key>category</key>\n    <string>Productivity</string>\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/60604778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/68883179", "body": "Added support here: b19f15bc2996c9878802d26ca02722176b3cb029\n\nThanks for the report!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/68883179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69929578", "body": "Yes.  There used to be common.cfg, client.cfg and server.cfg, but we combined them into settings.cfg: https://github.com/google/simian/blob/master/etc/simian/settings.cfg\n\nFixed: https://github.com/google/simian/wiki/SimianAndCertificates\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69929578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69933668", "body": "For the required_issuer field, instead of:\n   /C=AU/ST=Some-State/O=Internet Widgits Pty Ltd\nYou'd need:\n  C=AU,ST=Some-State,O=Internet Widgits Pty Ltd\n\nSimply omit any leading slash, and swap the rest of them for commas.  Does that help? \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69933668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69935574", "body": "Yes, that's right!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69935574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69935592", "body": "Yep, that's right.\n\nOn Wed, Jan 14, 2015 at 10:42 AM, maryniewskij notifications@github.com\nwrote:\n\n> The full DN of the CA that Simian certificates are signed by.\n> \n> required_issuer = CN=ca-server.tapestryschool.org\n> \n> Thats what I had in the settings.cfg file. Do I change \"CN=\n> ca-server.tapestryschool.org\" to C=AU,ST=SOME STATE...ETC.....?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/simian/issues/8#issuecomment-69935261.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69935592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70104023", "body": "Things to look at:\n1) ensure the updates are enabled for the track(s) matching the clients.\n2) regenerate the associated Software Update catalogs, or wait for that to happen automatically (based on any auto-promote schedule noted in the UI).\n3) ensure that Munki is running regularly, and you've waited over 70 minutes since the change on the server.\n\nClient logs should be telling.  And you should be able to inspect catalogs within /System/Library/Managed Installs/  (both the Software Update catalog and apple_update_metadata) to see if the updates and force install instructions are making their way to the client.   Let us know what you find...\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70104023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70292795", "body": "https://github.com/google/simian/blob/master/src/simian/settings.py#L39\n\nI think (for now at least) you want to toggle ALLOW_ALL_DOMAIN_USERS_READ_ACCESS to False, then add members you wish to grant access to groups in the admin UI, Admin Tools -> ACL Groups page.  This is, of course, assuming you've already restricted the app to your domain: https://github.com/google/simian/wiki/AdminSetup#obtain-an-app-engine-instance\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70292795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70667380", "body": "It looks like if you set ALLOW_ALL_DOMAIN_USERS_READ_ACCOUNT = False, then\nit will have the same effect on appspot.com; that is, it appears then no\nusers will be able to login unless explicitly added to one of the ACL\ngroups.\n\nhttps://github.com/google/simian/blob/e298a94d79e242737a5022259e1b829eb1462db3/src/simian/mac/common/auth.py#L95\n\nPlease test and let me know what you find...\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70667380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70678898", "body": "The link to auth.py:95 was simply evidence that I believe it will work as\nyour intend on appspot as well.  Set the value to False in settings.py,\nthen have someone with another @gmail.com account who is not an app owner\nand not a member of ACL Groups give it a try.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70678898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70693334", "body": "I'm struggling to figure this out.  Are you positive you've toggled the\nvarious to False, and redeployed to App Engine?\n\nhttps://github.com/google/simian/blob/e298a94d79e242737a5022259e1b829eb1462db3/src/simian/settings.py#L39\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70693334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/72961801", "body": "TL;DR:  supporting multiple certificate authorities in Simian is not straightforward, and not documented, and can only be done if you have significant experience with Python and some App Engine development chops.  \n\nWe have functionality to support multiple certificate authorities, and we've used it internally to migrate from one CA to another, but we've never tested it in our open source app, and thus never documented it.  It may or may not work.  Unfortunately we cannot support it at this time, as it would take a lot of effort to streamline for non-developers.  But I'll provide pointers in case you have the requisite experience to proceed.\n\nGetCaId() loads CA_ID from the settings/config file, and defaults to None if that (undocumented) variable doesn't exist: https://github.com/google/simian/blob/master/src/simian/auth/util.py#L65\n\nThe client will use this value (if present) to instruct the server which CA it's using, which effects which private_key/public_cert pair is loaded from App Engine Datastore's \"Settings\" model.  You should be able to use Datastore Viewer to see the server_private_key_pem and other keys in that model today, as uploaded in the admin web UI.  You'd have to write some Python code to use the Datastore API to write additional entities to the settings table, similar to the existing ones but with a prefix matching CA_ID in the clients using the new CA: https://github.com/google/simian/blob/master/src/simian/auth/util.py#L124\n\nIf that all makes sense and you need a little more guidance, I'm happy to answer questions.  If it seems too difficult, it's because it is, and it would take many, many hours to make easier, unfortunately.  We can leave this issue open to use as a feature request for making this process easier.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/72961801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/109054389", "body": "Updated \"Download and Install PackageMaker\" instructions just now.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/109054389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/110486063", "body": "Apologies for the delay; I've been working on this incrementally over the past 3 days, and I'm getting really close.  It's taking an extra long time since it's been nearly 2 years since we last did a major open source dump, so a lot has changed and thus a lot has broken (https://github.com/google/simian/commit/a24c7cee1b87c0eac46e133648a275273a3326db).\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/110486063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/110922816", "body": "Quick update.  Our open-source scrubbing scripts are all updated and working as expected.  I have Simian source building, passing tests, and passing real-world use.  This has resulted in thousands of line changes, most of which have been reviewed and committed internally; there's one last change list (~500 lines) pending review, then I should be able to sync this to GitHub.  Best case tomorrow, worst case next week.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/110922816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/112585648", "body": "Just committed a massive update (178 changed files with 4,778 additions and 6,743 deletions), which includes support for setting Munki Package Categories in the Simian web UI: https://github.com/google/simian/commit/fd50692aedf3651aa3ae494d97eb143126ee49d5\n\nTests pass, and I did some limited testing in our open-source environment.  Please test (ideally in a non-default App Engine environment) and reopen if there is still more to do here.  Apologies again for the delay.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/112585648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/121412552", "body": "Dan, thanks for the pull request.  Apologies for the delayed response; you caught me while on vacation and now I'm busy catching up. \n\nIn general I have two concerns:\n\n1) given these are \"static_dir\" lacking \"login: required\" in app.yaml, the resources within can be fetched by anyone that knows how to address them, without any auth.  Ideally we'd use Simian's auth protocol to protect them, but I don't know of a way to do that with static_dir.   Thus, the secure way of hosting these would be via a custom handler which enforces the custom auth dance (or a Simian Auth1Token), and serves the resource only if authenticated.  However, that's non-trivial, as then the resources probably shouldn't be stored on disk as static content, but rather stored in Datastore or Blobstore.  This is the reason we haven't built such support yet.\n\nI think I'm OK with this until we get around to a more elegant approach, so long as we have clear documentation that the resources placed in this dirs are not secured/private, and are publicly available to anyone that can guess their names.   Would you still want to use this as is, knowing these details?\n\n2) /src/ is probably not a great location for this, given that should typically always match the Git repo, unmodified.  the only other path users have to edit is etc/, which also doesn't fit.  maybe we should create a new top-level \"gae_resources\" dir, or something similar?  I don't feel strongly here; open to suggestions or pushback.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/121412552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/121435516", "body": "Proposal:\n  client_resources: How about leave it there, but comment out the app.yaml handler so it's \"inactive\", then clarify how it's not safe for security and privacy of your site customizations, and anyone, even without auth, can download the file very easily since the address is widely known.  Then we can leave it up to the individual to keep their customizations non-confidential if they still choose to use the feature for minor adjustments.  All they'd have to do is uncomment a few lines, after making a conscious decision.\n\n  icons:  probably OK exposed to the public, but still add a comment to the icons handler with a similar but more lax warning.  Still warn against exposing confidential data.  The filename would need to be known, etc.  But leave it enabled by default.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/121435516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/121437578", "body": "A few quick nits/comments, then I'll merge.  I just really want to explicitly call out the concern wherever possible, as most admins are not likely to notice the lack of \"login: admin|required\", let alone understand the implications.  Thanks again for the pull request!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/121437578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/128314941", "body": "https://github.com/google/simian/commit/b925614a60e1e1beedf33f4a80cf4f98dae1a032\n\nDoes that help?  I don't understand what you mean about CacheFacterContents \"not liking the output of ... simianfacter\"; if the problem still persists after the above change, can you elaborate?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/128314941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/129480713", "body": "You're saying \"sudo /usr/local/bin/simianfacter\" produces no output, or produces output with no values?\n\ni.e. \ncertname =>\nprimary_user =>\n...\n\nOr does it produce any stderr?  I did find one gap between simianfacter and flight_common implementations, which has been improved here: https://github.com/google/simian/commit/b6b816355ae80944a0bfe4629d15f1efe1245fdb  Does this help by chance?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/129480713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/129558980", "body": "You'll have to run it with the Simian VE python (we should probably fix simianfacter's shebang):\n  sudo /usr/local/munki/simian/bin/python /usr/local/bin/simianfacter\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/129558980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/129606538", "body": "Sorry, no news here.  I doubt we'll be able to work on this anytime soon.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/129606538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/129938319", "body": "1) \"every variable is required in settings.cfg regardless of if it exists in puppet\" .... you have to specify every variable, but you don't have to specify a value for every variable.\n\n2) \"if I replace lines 90-97 in simianfacter with print facts I get\" ... no, you don't want to do that.  \n\nflight_common is expecting the output of simianfacter to look exactly like facter's '=>' and newline delimited set of facts, not a string representation of the Python dictionary (which happens to be ~JSON).  We could migrate both simianfacter and flight_common over to JSON (facter -j will provide this output), which would allow for simianfacter to pass-through all facter output, but that'd require changes to both files.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/129938319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/130015022", "body": "I'm a bit confused, but partially due to the modifications you've made to simianfacter and and flight_common and reports of issues in each.  At this point, I'm uncertain if you're running unmodified code, matching head, and if so exactly where problems are reproducible.\n\nAbove you mentioned that running \"sudo /usr/local/munki/simian/bin/python /usr/local/bin/simianfacter\" outputs what you would expect, right?  Or at least some values are as you would expect (i.e. match settings.cfg) and some do not?  I see the certname matches your expectations, but I'd imagine primary_user does not (i.e. foouser).  Can you confirm if simianfacter is outputting what you'd expect or not now, with code running from head?\n\nFWIW, using Puppet to configure settings.cfg is not a terrible idea, but I don't see how that would solve your problem.  settings.cfg values are only used if the same key names aren't seen in facter output: https://github.com/google/simian/blob/master/src/simian/util/simianfacter#L88\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/130015022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/133006727", "body": "This isn't a feature we use much in the web UI, so I guess we didn't notice.  Thanks for the change!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/133006727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148367530", "body": "Thanks for the patch!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148367530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148377969", "body": "We have test coverage on this file internally too; I'll try to get that open sourced soon...\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148377969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148399043", "body": "I'm not necessarily against the original proposal, I just hadn't yet fully considered the potential downsides to heading this direction so. \n\nGiven we only care about surfacing particular facts (and can safely ignore the numerous others), and Facter 1.x supports the \"facter fact_name1 fact_name2\" convention, perhaps we should just move to that by default to support all Facter versions?\n\nFinally, isn't simianfacter always run with as root or with sudo?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148399043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148478839", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148478839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148708688", "body": "Thanks for the report, stacktrace, and offending plist!\n\nThe package is still uploaded because all that is failing is the method call to email admins about the new upload: https://github.com/google/simian/blob/master/src/simian/mac/admin/package.py#L380\n\nIf I had to quickly guess, I'd say the issue is the unicode registered trademark symbols in: Adobe\u00ae Flash\u00ae\n\nCan you try removing those to see if that uploads as expected?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148708688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148774972", "body": "Thanks for the confirmation, this seems like a relatively straightforward\nfix then.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148774972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/168791179", "body": "Replaced with \"make client_config\" here: https://github.com/google/simian/wiki/Configuration/530dbbb7136b2af30963bf4132c463a61fe3e064\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/168791179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/168791466", "body": "Yehuda, did you figure this out?  It should essentially be \"rm -rf /usr/local/munki\" and the install Munki.  There may be a couple of other harmless remnants, depending on how you installed Simian.  We can throw together a doc if you still need help (and would happily accept one if you have notes).\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/168791466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/168805847", "body": "I believe this was related to Blobstore _backups_, which (unaltered) Simian does not use. \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/168805847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/168806135", "body": "David, I believe you can (almost) accomplish this by clicking \"Stable Clients\", \"Testing Clients\" or \"Unstable Clients\" under the \"Active Client Reports\" table at the top-right of the main/summary page.  Does this work sufficiently for you?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/168806135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/231592617", "body": "https://github.com/google/simian/blob/master/src/simian/mac/cron.yaml#L48\n\nThe main summary page (which including the Active Clients Reports table) is only updated as often as that cron is set to execute (default: every 4 hours).  If you've recently setup a new instance (which it sounds like is the case given your other emails/etc.), this will list no results for the interim.  We could probably smooth this out a bit; for example, if no clients are found in the cache, simply query datastore on demand, or kick off a background task to start the cron immediately so it's ready shortly afterward.  And of course updating the wording to reflect all of this. \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/231592617/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/34636709", "body": "Add warnings here.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/34636709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/34636719", "body": "Add warnings here.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/34636719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "maximermilov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/8675db57c78abf7cbbd254e3ff0aa47a1d8134ea", "message": "specify fs type for hdiutil. Fixes #74"}, {"url": "https://api.github.com/repos/google/simian/commits/3c766f6f620bdf21297e27728b202e93f372fe01", "message": "munki 3.0.3 compatibility. Fixes #69"}, {"url": "https://api.github.com/repos/google/simian/commits/d9a009770084cce2a688c86691a4f70ac75a2fc7", "message": "Update to latest stable Munki release"}, {"url": "https://api.github.com/repos/google/simian/commits/4c39c775d4b0ba5f6d54ef6faec95ded12db9a31", "message": "OSX 10.13 support"}, {"url": "https://api.github.com/repos/google/simian/commits/f7b18a73bd3d4c011c053b1048dbc923c404b757", "message": "POST request without body causes errors on 10.9\n\nhttps://groups.google.com/forum/#!topic/simian-discuss/VGDhRFjv0k8"}, {"url": "https://api.github.com/repos/google/simian/commits/51de6726e0660caca5ad6fe6358c6b788715ec2c", "message": "don't bundle pyyaml with client"}, {"url": "https://api.github.com/repos/google/simian/commits/e7aeda0a40155a1aa2bff2b525c4911668c5a72f", "message": "pin python-requests version.\n\nNewer version no longer bundle urllib3."}, {"url": "https://api.github.com/repos/google/simian/commits/7c4b91a6b1a283402cbb44cbc9a279178979e057", "message": "fix regression"}, {"url": "https://api.github.com/repos/google/simian/commits/2a72fb84468e4d4addbc5918fd6f2f447e5474ee", "message": "create gae_server.zip during test"}, {"url": "https://api.github.com/repos/google/simian/commits/59678d1740a3256e2cc81cc1f5b61962df404a65", "message": "fix test"}, {"url": "https://api.github.com/repos/google/simian/commits/1ea7c2b2587ab063a0e146f9ad5bc144cbb0565d", "message": "extra required field for config #64"}, {"url": "https://api.github.com/repos/google/simian/commits/370a5153e77f00c7036a6ad9bade264690419cee", "message": "Merge commit for internal changes"}, {"url": "https://api.github.com/repos/google/simian/commits/27ff0fde1ab4eccff7e6283bc6998d25ff05fca3", "message": "fix tests"}, {"url": "https://api.github.com/repos/google/simian/commits/ce05164fcb4b9f11a7e3b886ab4db6a6892f2d2e", "message": "change default instance type and remove 10.7, 10.8 from applesus"}, {"url": "https://api.github.com/repos/google/simian/commits/c97bde76aac24981204f81df3cf41d0480662fbf", "message": "Merge commit for internal changes"}, {"url": "https://api.github.com/repos/google/simian/commits/3517a00030ea3bd081d32b075850e02bbbc13483", "message": "2.5"}, {"url": "https://api.github.com/repos/google/simian/commits/badd495cd57f3074b6680b23c71521f814ec122d", "message": "remove packagemaker support"}, {"url": "https://api.github.com/repos/google/simian/commits/107798482d400dd05d37ab9c25a23694d781f6c0", "message": "always use system python"}, {"url": "https://api.github.com/repos/google/simian/commits/02001486af51cc5917a2ee2ba1def1d58e297d1d", "message": "remove tests django dependency"}, {"url": "https://api.github.com/repos/google/simian/commits/2a3f021f9c17b8cf11c29b8d32324a76be37dac1", "message": "Merge commit for internal changes"}, {"url": "https://api.github.com/repos/google/simian/commits/05dfd6e86555eb2892889bdb3d41911b6fc7b755", "message": "OSX 10.12 support"}, {"url": "https://api.github.com/repos/google/simian/commits/73f28e0d8bfae0ea56b3cdce85f275093433095d", "message": "2.5.0 Beta 4"}, {"url": "https://api.github.com/repos/google/simian/commits/90f2534da661ffe376c4237584f4ac324e823fbf", "message": "Merge pull request #48 from sillywilly42/groups\n\nAdd missing groups.js to closure compiler list."}, {"url": "https://api.github.com/repos/google/simian/commits/69df23e48d3325bd0155a14f7d061a348d63c558", "message": "port panic_test from mox"}, {"url": "https://api.github.com/repos/google/simian/commits/ac54209f0e5e416794a283503bf2eead76207588", "message": "remove unused office field"}, {"url": "https://api.github.com/repos/google/simian/commits/2a8207c0e5c30cc5fc04f140e43d47db90f71d52", "message": "Fixing broken test"}, {"url": "https://api.github.com/repos/google/simian/commits/fe4a578e9f4b5f68dddb78b878e0a4f08bf78cf6", "message": "open source more tests"}, {"url": "https://api.github.com/repos/google/simian/commits/4db053cca3f9a5546a03762685ec59bb47fae8c8", "message": "misc fixes"}, {"url": "https://api.github.com/repos/google/simian/commits/d4d00e0f92272d5698214ed27b273c511bb3f30e", "message": "Merge pull request #39 from selfcommit/master\n\nresolves #15 by adding .gitignore of common dev files\r\nupdate regex for admin js and css directories to work with local dev"}, {"url": "https://api.github.com/repos/google/simian/commits/3e4f6951fdacf0991a9a8270d4020f51dc490dd2", "message": "2.5.0 Beta 3"}, {"url": "https://api.github.com/repos/google/simian/commits/a71f73896fb15b4fe441de24c67287d01824c296", "message": "fix local dev env"}, {"url": "https://api.github.com/repos/google/simian/commits/f8bfa254267e09ac1e71776d9ad9d7765016ba09", "message": "fix client_test"}, {"url": "https://api.github.com/repos/google/simian/commits/4f96700d2d6eb4e244a2cbf2e86d2d757a171770", "message": "use default ssl settings"}, {"url": "https://api.github.com/repos/google/simian/commits/d80e5eca6a38d1b9de7facf5a956e8b64ddb88f3", "message": "downgrade _ssl_version\n\napple include old openssl version 0.9.8 which does not support tlsv1.2"}, {"url": "https://api.github.com/repos/google/simian/commits/4dd310dd004bf8da962198cd028900f9ad5ec1f0", "message": "fix typo"}, {"url": "https://api.github.com/repos/google/simian/commits/6a525d908d1d84952341c7987853dac377ac38e4", "message": "fix tlslite 0.4.9 incompatibility\n\n- hashAndSign from 0.4.9 returns bytearray instead of array"}, {"url": "https://api.github.com/repos/google/simian/commits/3615fcdf295d46af0205dd9afe9a02a5e711523a", "message": "remove dead code"}, {"url": "https://api.github.com/repos/google/simian/commits/44d23b407c1d42351ef8a8fb0a268353d5d2d6c1", "message": "2.5.0 Beta 2"}, {"url": "https://api.github.com/repos/google/simian/commits/5e404c1b5271abf0e7a833ebaa4acc795519550e", "message": "fix tlslite import problem on appengine"}, {"url": "https://api.github.com/repos/google/simian/commits/7902e6c0e596bf3400e417df701acc02def7cc82", "message": "misc fixes"}, {"url": "https://api.github.com/repos/google/simian/commits/bdf7a326d158089031e35dccbd3bb3b4321ff7e9", "message": "Travis Continuous Integration for Simian"}, {"url": "https://api.github.com/repos/google/simian/commits/70409ec60b6ead258e24579f32ba0de84a3ec13c", "message": "2.5.0 Beta 1"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/221076980", "body": "GCS bucket can be specified with BLOBSTORE_GS_BUCKET env variable in app.yaml\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/221076980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/224163533", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/224163533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/227876959", "body": "working on this right now.\n\nSimian will include an auth token in the CatalogURL, and update it during it's hourly execution.  This token could be client-specific, or organization-wide, with any expiration timeline >~1 hour.  It could be a query parameter, or part of the path, and the filtered catalogs could be computed and served by App Engine on-demand.  This seems like the cleanest approach, as it puts full control into our hands again, requires no client-side working around the new OS X restriction, and doesn't run another daemon which consumes memory/CPU/etc., must be monitored/etc.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/227876959/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/227881525", "body": "Thank you.\nmerged with minor fixes.\n( https://github.com/google/simian/commit/7a67c521280ef81ee0fcf689b7566df02639b4fb )\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/227881525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/229492253", "body": "> I might be able to break it into a separate module for this project\n> It's better to have this feature as optional module or separate standalone appengine project.\n> \n> Would a custom runtime be an option?\n> yes for separate module.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/229492253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/230855396", "body": "simian supports multiple version of tlslite, so extra workaround required.\n\nbug fixed as part of https://github.com/google/simian/commit/73f28e0d8bfae0ea56b3cdce85f275093433095d\n\nThank you for taking the time to report this bug.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/230855396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/247050504", "body": "> I am having the same problem and I experience what Rumbles is saying.\n\nLong delays and occasional timeouts are due to F1 instance class by default.\nYou can change it in app.yaml.\nRecommended instance class is F4, but it will cost more.\n\n>  I also get the following stack trace during preflight --debug run:\n\nSeems, Client is misconfigured.\nDid you follow https://github.com/google/simian/wiki/Configuration ?\n\nThanks,\nMaxim\n\nOn Tue, Sep 13, 2016 at 8:48 PM, Arya Goudarzi notifications@github.com\nwrote:\n\n> I am having the same problem and I experience what Rumbles is saying. I\n> also get the following stack trace during preflight --debug run:\n> \n> DEBUG:root:MunkiDownloadError getting Apple SUS catalog: HTTP result 404:\n> not found\n> Traceback (most recent call last):\n> File \"/usr/local/munki/simian/lib/python2.7/site-packages/\n> simian-2.4-py2.7.egg/simian/mac/client/flight_common.py\", line 538, in\n> GetAppleSUSCatalog\n> '%s/applesus/' % url, APPLE_SUS_CATALOG)\n> File \"/usr/local/munki/munkilib/updatecheck.py\", line 3519, in\n> getResourceIfChangedAtomically\n> verify=verify)\n> File \"/usr/local/munki/munkilib/fetch.py\", line 300, in\n> getResourceIfChangedAtomically\n> message=message, resume=resume, follow_redirects=follow_redirects)\n> File \"/usr/local/munki/munkilib/fetch.py\", line 413, in\n> getHTTPfileIfChangedAtomically\n> raise GurlDownloadError(err)\n> GurlDownloadError: HTTP result 404: not found\n> \n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/google/simian/issues/36#issuecomment-246872607, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AOn0htUuge0G75_HLaXkQhtyViSe4X0xks5qp0R4gaJpZM4IleJP\n> .\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/247050504/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/248997404", "body": "Does changing datetime.datetime.now() to datetime.datetime.utcnow() helps?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/248997404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/249321720", "body": "Fixed in https://github.com/google/simian/commit/2a3f021f9c17b8cf11c29b8d32324a76be37dac1\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/249321720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/252940321", "body": "preinstall fail during package installation with this patch.\n\n> The failed checks don't appear to be related to my commit:\n\nYes, travis-ci switched to use homebrew's python by default. Which break tests.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/252940321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/254942098", "body": "fixed in badd495cd57f3074b6680b23c71521f814ec122d\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/254942098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/275444726", "body": "Hi,\n\n> ICONS_GCS_BUCKET setting in the code, but not sure how to utilize it\n\nyou can set it in simian/src/simian/settings.py or in datastore \"Settings\"\ntable.\n\n>  I tried putting an 'icons' directory in the GCS bucket\n\nThere is new \"upload icon\" button in package admin.\n\n_____\nMaxim\n\nOn Wed, Jan 25, 2017 at 6:35 PM, Allister Banks <notifications@github.com>\nwrote:\n\n> Hey, I notice the more recent commits add icons handling, I tried putting\n> an 'icons' directory in the GCS bucket that my ENV points to with\n> BLOBSTORE_GS_BUCKET, but it's still error'ing. I see something about an\n> ICONS_GCS_BUCKET setting in the code, but not sure how to utilize it.\n> Thanks!\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/google/simian/issues/60>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AOn0htwVKRwtKXKx7fAWdWt4ZDUG0vRSks5rV9wxgaJpZM4LuIoo>\n> .\n>\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/275444726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/285716494", "body": ">  500 for authentication issues.\r\n\r\nThis error caused by missing AUTH_DOMAIN setting in settings.py.", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/285716494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/285812965", "body": "> I have the value set in settings.cfg\r\n\r\nIt have to be set in src/simian/settings.py", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/285812965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/295846403", "body": "> File \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.5-py2.7.egg/simian/mac/client/flight_common.py\", line 560, in UpdateAppleSUSCatalog\n>    raise base_client.HTTPError\n> simian.client.client.HTTPError\n\nSeems like regular network error.\n\n> Any hints as to why this http response is only failing for a handful of clients?\n\nis it persistent?\n\nif it's not an network error, logs from server side for failed request\ncan be helpful.\n\n\n_____\nMaxim\n\nOn Thu, Apr 20, 2017 at 8:34 AM, Allister Banks <notifications@github.com>\nwrote:\n\n> This error is cropping up on a good number of machines running a\n> relatively recent version:\n>\n> WARNING:root:Root CA Cert Chain was EMPTY!ERROR:root:Failed to harvest Puppet SSL cert facter specified.WARNING:root:Root CA Cert Chain was EMPTY!\n> Traceback (most recent call last):\n>   File \"/usr/local/munki/simian_client.py\", line 87, in <module>\n>     sys.exit(main(sys.argv[1:]))\n>   File \"/usr/local/munki/simian_client.py\", line 73, in main\n>     preflight.RunPreflight(runtype, server_url=server_url)\n>   File \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.5-py2.7.egg/simian/mac/client/preflight.py\", line 429, in RunPreflight\n>     flight_common.UpdateAppleSUSCatalog(client)\n>   File \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.5-py2.7.egg/simian/mac/client/flight_common.py\", line 560, in UpdateAppleSUSCatalog\n>     raise base_client.HTTPError\n> simian.client.client.HTTPError\n>\n> Any hints as to why this http response is only failing for a handful of\n> clients? I'm trying to correlate OS versions or other discrepancies, since\n> it seems to be in a routine that is supposed to fetch the applicable SUS\n> catalog.\n>\n> \u2014\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/google/simian/issues/66>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AOn0hvSOVRvnqL6U7SfOLpWY3IMqxljbks5rx1DjgaJpZM4NC9zS>\n> .\n>\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/295846403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/344141307", "body": "Thank you for sending pull request.\r\n\r\n> I signed it!\r\n\r\nFor some reason bot failed to verify that.\r\nDid you used different email address? ", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/344141307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/google/simian/comments/17496003", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/comments/17496003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/66627635", "body": "Please write tests for new feature.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627665", "body": "tests ;)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627919", "body": "Please revert unrelated changes.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66627919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66628806", "body": "> otherwise the logs are filled with this warning.\n\nwhich logs?\n\nI think, it will be easier to have unrelated small changes as separate pull request.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66628806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66629184", "body": "why?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66629184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66629326", "body": "tests ;)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66629326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67194574", "body": "mox is deprecated and should not be used in new tests.\n\nNew tests should use testbed and mock.\ngood example acl_groups_test.py\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67194574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67194873", "body": "hmm, ok\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67194873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67448003", "body": "vulnerable to xsrf attack.\nSeems, this class duplicate functionality from admin/groups.py\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67448003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67516814", "body": "Why there is auth check for all other methods but not this one?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67516814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/100928879", "body": "New format is hierarchical.\r\ni.e. instead of facts[\"a.b\"]=\"something\", there is facts[\"a\"] = {b:\"something\"}.\r\n\r\nCode does not handle that.", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/100928879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/101382372", "body": "> all of the ones Simian cares about are flat\r\n\r\nI took another look into existing code, it handle non-flat facts incorrectly.\r\nSimian does not use non-flat facts right not, but to eliminate future problems\r\nit's better to handle them in same way for different puppet versions.\r\n\r\nold facter support --json parameter.\r\nPlease, filter out non-string values.", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/101382372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/141956610", "body": "seems unrelated.", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/141956610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "wholtz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/46fec3c1946efe77df67385c7f4eeb3fc25660ea", "message": "Use https to access closure compiler\n\nThe closure compiler now responds with status 302 when unencrypted\naccess is attempted. This results in an error when running `make release`.\nhttps://github.com/google/closure-compiler/issues/2693"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/344005804", "body": "I signed it!", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/344005804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "frlen": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/9bb47955b7141027d96d35541c05c4f00a57d169", "message": "Add support for 10.13 High Sierra Apple updates"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/142088734", "body": "I get this error without it during catalog generation:\r\nFile \"/base/data/home/apps/.../.../simian/mac/munki/plist.py\", line 1590, in GetXmlStr \r\nraise PlistError('Value type %s not supported: %s', value_type, value) \r\nPlistError: ('Value type %s not supported: %s', <type 'long'>, 4668317536L)", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/142088734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "hardlydavis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/189a044a8230e0a9e80ecd973f48b9d74802540f", "message": "Update create_gae_bundle.sh to fix broken symlink (#67)\n\nSymlink for client_resources was being created with .. before the full path from / causing it to look for a root level directory starting one folder up.  Removing the ../ makes $SIMIAN_ROOT an accurate path"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/296130775", "body": "I signed it!", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/296130775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "sillywilly42": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/9ad65dec6062700b11799306bb8a18c8f0b750d3", "message": "Fix executable check in postinstall (#58)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/230798530", "body": "Thanks googlebot, I have signed my life away to Google multiple times ;)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/230798530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/231057382", "body": "@maximermilov Thanks Maxim, I really appreciate you taking the time to fix this properly :)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/231057382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/249013195", "body": "@maximermilov: Yes - that works\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/249013195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/66830020", "body": "With this conditional in place, the dev_appserver doesn't seem to serve up CSS etc. If I remove the conditional everything is fine.\nI'm not the only one: https://groups.google.com/d/msg/simian-discuss/hRE2ieA_a14/9YoPqy6qeXAJ\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830044", "body": "Done!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830307", "body": "There aren't existing tests for this module, perhaps we could forgo this one?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830350", "body": "Done!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830516", "body": "Reverted.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830618", "body": "In the AppEngine console logs - I like to monitor at warning level...\nReverted for now.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/66830618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67340176", "body": "I've rewritten tests not to use mox.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67340176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67484862", "body": "This class is for the stateless API - which is the motivation behind this PR. I added the web interface bits exposing the groups feature as a courtesy to other Simian users.\n\nI can't add a CSRF token because then this wouldn't be stateless. Instead I pass the existing API_INFO_KEY as a header (X-Simian-API-Info-Key) for all HTTP methods.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67484862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/pulls/comments/67525942", "body": "I originally thought the get handler would work the same way it does for the packages API.\nI have now added the oauth check to bring it inline with the others.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/67525942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ramitsurana": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/711fadff82e0b0f66bb5bb968805c07e8a9715ed", "message": "Added License Column,small typo errors resolved\n\nI hope it is built correctly this time :)"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/148474695", "body": "Thanks for your valuable suggestions,let me send you a repatch as soon as possible. \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148474695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "call": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/a51e92d0c3e7ad48a6c63f24a3d62b7da9c11e42", "message": "removed MAC address checking, added check for unique open port (62078) on iPhone gateway\n\nlinted and added missing space"}, {"url": "https://api.github.com/repos/google/simian/commits/d7f164027afe2261125b3008672019c336178dab", "message": "Added Jetpack keyword for hotspots\n\nupdated MiFi check to improve readability"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/143330886", "body": "I've run into this same issue, and it's due to changes in newer versions of Facter. Since the introduction of native Facter, 'facter -p' will run without sudo, but it will not execute the -p option to gather puppet facts w/o sudo, thus you are essentially getting the output of just running 'facter'. One way you can test this is by replacing the default Facter command in the Exec function within simianfacter's GetFacterFacts(). The default is ['facter', '-p']. If you change this to ['facter', '--show-legacy'], then you should get the output of legacy mac facts, one of which is sp_local_host_name, which will then be reported to the simian console as Hostname.\n\nExternal facts and custom facts will be needed to populate other simian facts like site, location, etc. These will need to exist in non-default directories to be accessed via facter running as non-root (via options '--custom-dir' and '--external-dir'). I'm planning to submit a PR with the following changes:\nfacter_command as a setting in settings.cfg\nfacer_command is used instead of ['facter', '-p'] in simianfacter's GetFacterFacts()\nexternal and custom facts directories in /etc/simian/\n\nPlease let me know if you have any thoughts.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/143330886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/143374867", "body": "So --show-legacy only appears to be included in the newest version of Facter (v3.0.2). Sorry, not a good test example :P Older versions of Facter behave differently, and I'm trying to get a better picture of these differences so we can all run our correct Facter commands via simianfacter.\n\nI'd imagine you can call that fact explicitly, e.g. ['facter', 'sp_local_host_name'] (if this works, you could even just call your all your facts from facter explicitly: e.g. ['facter, 'sp_local_host_name', 'primary_user', 'location', etc...]\n\nI think your actual problem, mentioned above, is that simianfacter cannot handle structured facts (facts containing arrays of facts) and your mac facts are buried in a structured fact. This should be switched to JSON. I've been playing with code to support this, so will try to submit a PR for this as well. Can you verify for me that if you run 'facter --json' at the terminal and grep for 'sp_' do you get the output of all the mac specific facts that begin with sp_ ?\n\nBottom line here is that different versions of facter behave differently and I think admins want/need to specify which facter command to run via settings.cfg\n\nPlease give this a try and let me know your results. I'm looking forward to working with you to try to get this working properly.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/143374867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/143499975", "body": "The problem is that simianfacter won't run the command as root, so whatever\ncommand you craft for facter it can't require sudo. If your custom/external\nfacts are being pluginsynced to your nodes through puppet modules and\nstored in the default directories, those will not run w/o root. For our\nsetup we're managing a single directory, /etc/simian/facts.d, placing our\ncustom ruby facts in there, and using facter's '--custom-dir' option, e.g.\n'facter --custom-dir=/etc/simian/facts.d' This will output those facts w/o\nroot.\nWe also plan to use external facts for getting access to location data from\nCoreLocation; I'm not yet sure if those can live in the same directory or\nnot. If not we'll manage another directory of external facts, accessed via\na different option, '--external-dir'.\n\nOn Fri, Sep 25, 2015 at 4:36 PM Michael Holt notifications@github.com\nwrote:\n\n> oops ran it as sudo and got the expected.\n> \n> sudo facter sp_local_host_name primary_user location\n> location => default\n> primary_user => mholt\n> sp_local_host_name => staff 04\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/simian/issues/21#issuecomment-143376309.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/143499975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148217282", "body": "Justin\u2013 I force pushed to my fork so it looks like I lost your previous comment. I've tested this new code while connected to an older MiFi, a newer Jetpack, and a wired connection. Everything appears to work as expected.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148217282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148254976", "body": "After further thought I think it makes more sense to document how to customize this in simianfacter rather than move the command to settings.cfg. I will create an issue for myself to contribute these docs.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148254976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148257263", "body": "Filing this issue against my own fork rather than clutter up existing issues because I intend to write these docs myself.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148257263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "arthurthefourth": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/783d162302d88bcfb6b2827fe94f9b4f863c3653", "message": "Update links in INSTALL\n\nReplace Google code links with Github links"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bruienne": {"issues": [], "commits": [{"url": "https://api.github.com/repos/google/simian/commits/0632992a42f81ff4b41a4ee1cf3f6f7fb001a41f", "message": "Remove extraneous PKGBUILD definition."}, {"url": "https://api.github.com/repos/google/simian/commits/6e408722bf76a32ffdd30d29ad3766cf8e3db846", "message": "Fix postinstall execute bit"}, {"url": "https://api.github.com/repos/google/simian/commits/f7094c21e1df0019f59533db8f7b7ba34acfabd2", "message": "Modified tgz2dmg and postinstall to work with pkgbuild."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "popsikle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/google/simian/pulls/34", "title": "add a gitignore and settings sample, to make for easier forking", "body": "Im not sure if you are interested, but this .gitignore and renaming of the settings file makes it easier to submit pulls ;)\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/220396559", "body": "I signed it!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/220396559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/google/simian/comments/17495245", "body": "This is missing a \" after the SERVER_HOSTNAME. kills deployment of the packages.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/comments/17495245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "seryl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/google/simian/pulls/12", "title": "Add extra link module search paths", "body": "- Adds .eggs\n- Adds recursive pathing for all user paths\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Luzifer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/59737014", "body": "Also tried the `make pkg`:\n\n```\nluzifer@knut-workstation01 ~/g/simian (master \u2022\u2022)>\nsudo installer -pkg tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg -target / -verboseR\nPassword:\ninstaller: Package name is contents\ninstaller: Upgrading at base path /\ninstaller:PHASE:Preparing for installation\u2026\ninstaller:PHASE:Preparing the disk\u2026\ninstaller:PHASE:Preparing contents\u2026\ninstaller:PHASE:Waiting for other installations to complete\u2026\ninstaller:PHASE:Configuring the installation\u2026\ninstaller:STATUS:\ninstaller:%85.027547\ninstaller:PHASE:Running package scripts\u2026\ninstaller:%85.886943\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Validating packages\u2026\ninstaller:PHASE:Validating packages\u2026\ninstaller:%97.750000\ninstaller: The upgrade failed (The Installer encountered an error that caused the installation to fail. Contact the software manufacturer for assistance.)\nluzifer@knut-workstation01 ~/g/simian (master \u2022\u2022) [1]>\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59737014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59741339", "body": "Looks like it fails in postflight but I don't see the reason now\u2026\n\nIf you want to you can take a look too: http://pastebin.com/EYvpyGVx (Line 54 is the error line)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59741339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59742320", "body": "The tmp-file is a really good catch! \n\n```\nInstalled /usr/local/munki/simian/lib/python2.6/site-packages/tlslite-0.3.8-py2.6.egg\n+ set '/Users/luzifer/git/simian/tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg/Contents/Resources/simian_M2Crypto-*-py2.6-macosx-10.10-*.egg'\n+ egg='/Users/luzifer/git/simian/tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg/Contents/Resources/simian_M2Crypto-*-py2.6-macosx-10.10-*.egg'\n+ [[ -z /Users/luzifer/git/simian/tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg/Contents/Resources/simian_M2Crypto-*-py2.6-macosx-10.10-*.egg ]]\n+ [[ *.egg = \\*\\.\\e\\g\\g ]]\n+ die 'Cannot find M2Crypto egg for 2.6'\n+ echo ERROR 'Cannot find M2Crypto egg for 2.6'\nERROR Cannot find M2Crypto egg for 2.6\n+ exit 1\n+ rm -rf //tmp//postflightnH8jMR\n(END)\n```\n\n(Btw: No need for the SVN repo, I have the source and did not do a full roll-out\u2026 Currently two testing devices are affected, nothing to worry about\u2026)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59742320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59784438", "body": "```\nluzifer@knut-workstation01 ~/g/simian (master \u2022\u2022)> sudo installer -pkg tmppkgs/simian-2.3-and-munkitools-2.0.1.2253.pkg -target / -verboseR\ninstaller: Package name is contents\ninstaller: Upgrading at base path /\ninstaller:PHASE:Preparing for installation\u2026\ninstaller:PHASE:Preparing the disk\u2026\ninstaller:PHASE:Preparing contents\u2026\ninstaller:PHASE:Waiting for other installations to complete\u2026\ninstaller:PHASE:Configuring the installation\u2026\ninstaller:STATUS:\ninstaller:%84.923924\ninstaller:PHASE:Running package scripts\u2026\ninstaller:%85.886943\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Running package scripts\u2026\ninstaller:PHASE:Validating packages\u2026\ninstaller:%97.750000\ninstaller:STATUS:\ninstaller:PHASE:Finishing the Installation\u2026\ninstaller:STATUS:\ninstaller:%100.000000\ninstaller:PHASE:The software was successfully installed.\ninstaller: The upgrade was successful.\nluzifer@knut-workstation01 ~/g/simian (master \u2022\u2022)>\n```\n\nOn my computer it worked really fine! I'll let a coworker do the same and report the result to you\u2026\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59784438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59786612", "body": "On his Mac it worked fine too. :)\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59786612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/59928223", "body": "Looks like its working now with f613661be38c.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/59928223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/68864457", "body": "My patch to work around this issue temporarily:\n\n``` diff\ndiff --git a/Makefile b/Makefile\nindex 8828d9f..5603adc 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -266,5 +266,5 @@ pkg: ${SIMIAN}-and-${MUNKI}.pkg\n dmg: ${SIMIAN}-and-${MUNKI}.dmg\n\n release: server_config\n-       appcfg.py --version=${BUILD_VERSION} update gae_bundle/\n-       appcfg.py --version=${BUILD_VERSION} set_default_version gae_bundle/\n+       appcfg.py --version=${BUILD_VERSION} --oauth2 update gae_bundle/\n+       appcfg.py --version=${BUILD_VERSION} --oauth2 set_default_version gae_bundle/\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/68864457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/106788056", "body": "Any news on this?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/106788056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "maryniewskij": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/69933067", "body": "Wow, that was a quick response! I\u2019m still a little confused.  I see you removed the reference to common.cfg on the wiki, but how do I change Simian to accept the /\u2019s?\n\nOn Jan 14, 2015, at 10:09 AM, Justin McWilliams notifications@github.com wrote:\n\n> https://github.com/google/simian/blob/master/etc/simian/settings.cfg\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69933067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69935261", "body": "# The full DN of the CA that Simian certificates are signed by.\n\nrequired_issuer = CN=ca-server.tapestryschool.org\n\nThats what I had in the settings.cfg file.  Do I change \"CN=ca-server.tapestryschool.org\" to C=AU,ST=SOME STATE...ETC.....?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69935261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/69948258", "body": "I got it working! Thanks for your help.  I pasted the whole cn= text into the settings.cfg.\n\nNow I'm going to figure out how to restrict users to only certain people to see the simian website. I'm currently looking into OAuth 2.0\n\nThanks again!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69948258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70287955", "body": "It was number 3, I didn't wait long enough for the updates to install.  Thanks!\n\nPS: I'm also trying to restrict what users can log into my simian appspot site.  How can I restrict it to specified users? The only info I could find was from 2012 and before you guys moved to github.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70287955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "johnrandolph": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/69940597", "body": "Are you building a CA from scratch or using an existing CA? \n\nIf you are building from scratch it is sufficient to say CN=ca-server.tapestryschool.org is the DN for the CA and thus is the required_issuer. If you are reusing a CA then you need to take into account whatever the DN actually is. \n\nYou don't need to add all the other fields like city C, state ST, etc unless if you actually need to or want to.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/69940597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73053292", "body": "Hi mjosh20\n\ncan you verify that all of the files like private/ca.key openssl.cnf etc still exist and that you are in the right portion of the directory tree? cd to the top of the path that contains all of those subdirectories like newcerts/ private/ etc and verify what you see in there. perhaps paste it here.\n\nalso prior to running the openssl commands, are you sure you entered:\n\nexport CAPASS=\"your passsword\"\n\nand not just\n\nCAPASS=\"your password\" \n\n?\n\nthe first one (export...) is what you need.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73053292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73099621", "body": "you need to verify that newcerts/ca_public_cert.pem and private/ca.key still exist.\n\nyou should perform these new client cert generations from the top level directory in which those newcerts/ and private/ directories descend from.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73099621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73894873", "body": "Hi mjosh20\nthere should be no problem running the client private key and create cert with client private key + signed w/ca private key commands in more than one iteration.\n\nThe paste you have supplied is fine, CA:FALSE, if it is from openssl x509 -in clientcert.pem -text . The client certs should not have CA:TRUE because they are not CA certs and should not be used for signing. \n\nThe CA cert will show CA:TRUE, example:\n:/tmp/CA$ openssl x509 -in newcerts/ca_public_cert.pem  -text \n...\n\n```\n            X509v3 Basic Constraints: \n                CA:TRUE\n```\n\nAfter your initial pass of 10 client certs did you populate serials.txt with more serial numbers, assuming that you are using our wiki cli cut/paste directly?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73894873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73910783", "body": "Ok, so by your wording \"I added more of them to the end of it\" it sounds like you are probably instructing openssl to re-create private keys and signed certs for each client, including the ones you already generated this for. You don't want to do this.\n\nPart of this confusion may be because we suggested that you could name the subject of your host after the Apple serial number of the hardware and refer to serials.txt etc. However each x509 cert also has a serial number field which is a x509 cert property and has no relation to the hardware. \n\nSo if you start with this list\nserial1\nserial2\nserial3\n\nAnd generate keys/certs, but then append\n\nserial4\nserial5\n\nYou will re-create serial1,2,3 again (or possibly it will produce errors) and also generate new serial4,5.\n\nThe way that shell loop is written is such that you really only want serials.txt to contain the new items to work on, not all the prior items too. We could make our shell snippet smarter about repeats, but then you're starting to get more complicated...\n\ncan you try just making serials.txt contain new items to create and see if it works? \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73910783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73912957", "body": "I revised our wiki documentation to try to make it more clear that by throwing names into a text file and iterating over them with shell we are choosing commonName values for each certificate, and to remove any confusion that it's related to the x509 serial number. \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73912957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73947291", "body": "Yes, all I did was go into the text and change serials.txt to cns.txt\nanywhere I saw it, and also renamed the variable serial to cn. I also added\nsome extra wording to clarify that while we are suggesting that perhaps you\ncould name each certificate with the CN=machineserialnumber, this is only a\nsuggestion and is not related to the x509 certificate serial number, which\nis maintained by openssl. You seed it at \"1\" with the \"echo 000001 >\nserial\" line earlier in the instructions.\n\nOn Wed, Feb 11, 2015 at 1:59 PM, mjosh20 notifications@github.com wrote:\n\n> That worked. I noticed the changes when I copied them and it said the file\n> didn't exist, then I got your message. :)\n> \n> The new code will work just like before, except I need to change the name\n> of my serials.txt correct?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/simian/issues/11#issuecomment-73941261.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73947291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/148738165", "body": "yeah, I think we'll need a bug fix there to either handle unicode properly\nwhen sending the email, or do a str.encode('ascii', 'ignore') from the\ninput package to drop the unicode.\n\nobviously the latter is a bad solution to varying degrees, losing unicode\n(R) is one thing, losing an entire non-latin alphabet description or\nsomething isn't really an option.\n\nOn Fri, Oct 16, 2015 at 8:53 AM, Justin McWilliams <notifications@github.com\n\n> wrote:\n> \n> Thanks for the report, stacktrace, and offending plist!\n> \n> The package is still uploaded because all that is failing is the method\n> call to email admins about the new upload:\n> https://github.com/google/simian/blob/master/src/simian/mac/admin/package.py#L380\n> \n> If I had to quickly guess, I'd say the issue is the unicode registered\n> trademark symbols in: Adobe\u00ae Flash\u00ae\n> \n> Can you try removing those to see if that uploads as expected?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/simian/issues/31#issuecomment-148708688.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/148738165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/google/simian/pulls/comments/31811331", "body": "instead of two find blocks you could just add '.eggs' as a second argument to the find execution above\n\nfind . .eggs -type f ....\n", "reactions": {"url": "https://api.github.com/repos/google/simian/pulls/comments/31811331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "mjosh20": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/70676446", "body": "Line 95 in auth.py doesn't have that as an option.  The only place I saw ALLOW_ALL_DOMAIN_USERS_READ_ACCESS is in settings.py.  Is that something I need to completely change line 95? Also, I don't have a google apps account.  So I'm need to be able to authorize though normal gmail emails but still only let certain emails see the Simian page.   \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70676446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70679945", "body": "Oh, I've done that w/ multiple emails.  Both mine and friends emails.  They can't see the Admin in the menu but they can still see the page and even open stuff about Munki packages as well.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70679945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/70697467", "body": "Wow, I was editing the one in the Build folder.  Thank you so much!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/70697467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73045768", "body": "Sorry, thats not what I was trying to ask. My fault.   \n\nI want to be able to make my own certificates in an on-demand manner.  I followed the wiki about openssl and I made certificates for all my test machines and everything worked.  Now I want to deploy to more clients, but I can't seem to get the process to run w/o starting over with the whole how-to.  \n\nThat would require me to delete all my current clients and the keys from the data store and start re-adding the clients that are working.  \n\nThis is the part I need to be able to do w/o remaking the CA identity, server identity, etc:\n\nfor serial in $(cat serials.txt) ; do \n\n  rm -f client.csr\n\n  openssl req -config openssl.cnf -sha1 -new -nodes \\\n  -out client.csr \\\n  -keyout private/${serial}.pem \\\n  -subj \"/CN=${serial}\"\n\n  openssl ca -config openssl.cnf -in client.csr \\\n  -md sha1 -days 3650 -notext \\\n  -cert newcerts/ca_public_cert.pem -keyfile private/ca.key \\\n  -out newcerts/${serial}.pem \\\n  -policy policy_anything \\\n  -passin env:CAPASS -batch\n\ndone\n\nDoes that make more sense? \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73045768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73069331", "body": "....................++++++\n\n## writing new private key to 'private/00000000001.pem'\n\nUsing configuration from openssl.cnf\nunable to load CA private key\n59460:error:0906A065:PEM routines:PEM_do_header:bad decrypt:/SourceCache/OpenSSL098/OpenSSL098-52.8.1/src/crypto/pem/pem_lib.c:428:\nGenerating a 1024 bit RSA private key\n..++++++\n..........++++++\n\nI think it has something to do w/ the fact that I don't remake the server identity in the process.  I go from the export CAPASS to running the script to make the client certs.  \n\nThoughts?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73069331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73103059", "body": "They still exist in the correct folders.\n![ca key and ca public cert](https://cloud.githubusercontent.com/assets/10607571/6066744/81119be2-ad3d-11e4-8ba7-ed27bfc71dd1.png)\n\nI still get the error no matter what I try.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73103059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73876772", "body": "I deleted CA and all the certificates from the appengine and started fresh.  I made ~10 client certs w/o any issue.  I then try to make a few additional ones.  I run the export CAPASS='MY PASSWORD HERE', then I run the the script that generates the certs.  I no longer get the error I was getting but I get the following:\n\n```\n        X509v3 Basic Constraints: \n            CA:FALSE\n        Netscape Comment: \n            OpenSSL Generated Certificate\n```\n\nThe private key appears to have generated but the other one is blank.  I assume its due to the CA: False part in the output.  I'm positive its still in the CA/private.  Is there a way to make a 2nd round of keys w/o remaking the CA.key?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73876772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73907128", "body": "Yes, I added more of them to the end of it.  Your assumption is correct.\n\nAdditional note: The one client cert is coming out completely blank.  And the other one is similar to the first run but not exactly the same.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73907128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/73941261", "body": "That worked.  I noticed the changes when I copied them and it said the file didn't exist, then I got your message. :)\n\nThe new code will work just like before, except I need to change the name of my serials.txt correct?\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/73941261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "sebnash": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/105807817", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/105807817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/105807839", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/105807839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Lockcuff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/116850434", "body": "This would be a great feature, I am running into these same issues. Thanks\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/116850434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mholttech-old": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/143375707", "body": "This is what I got:\n\nTest 1\n\n```\nfacter sp_local_host_name primary_user location\nlocation => nil\nprimary_user => nil\nsp_local_host_name => staff 04\n```\n\nTest 2\n\n```\nfacter -p sp_local_host_name primary_user location\nlocation => nil\nprimary_user => nil\nsp_local_host_name => staff 04\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/143375707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/143376309", "body": "oops ran it as sudo and got the expected.\n\n```\nsudo facter sp_local_host_name primary_user location\nlocation => default\nprimary_user => mholt\nsp_local_host_name => staff 04\n```\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/143376309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "googlebot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/220396216", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/220396216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/220396568", "body": "CLAs look good, thanks!\n\n<!-- ok -->\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/220396568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/224372009", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/224372009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/224372507", "body": "CLAs look good, thanks!\n\n<!-- ok -->\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/224372507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/230792658", "body": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\n\n<!-- need_author_cla -->\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/230792658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/230798544", "body": "CLAs look good, thanks!\n\n<!-- ok -->\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/230798544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/252927708", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/252927708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/252937977", "body": "CLAs look good, thanks!\n\n<!-- ok -->\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/252937977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/256167924", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit https://cla.developers.google.com/ to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/256167924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/283990414", "body": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for the commit author(s).  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA ([login here](https://cla.developers.google.com/) to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\n\n<!-- need_author_cla -->", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/283990414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/296129784", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If you signed the CLA as a corporation, please let us know the company's name.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/296129784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/296130785", "body": "CLAs look good, thanks!\n\n<!-- ok -->", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/296130785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/332830002", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/332830002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/343344517", "body": "Thanks for your pull request.  It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\n:memo: **Please visit <https://cla.developers.google.com/> to sign.**\n\nOnce you've signed, please reply here (e.g. `I signed it!`) and we'll verify.  Thanks.\n\n---\n\n- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).\n- If your company signed a CLA, they designated a Point of Contact who decides which employees are authorized to participate. You may need to contact the Point of Contact for your company and ask to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the project maintainer to go/cla#troubleshoot.\n- In order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again.\n\n<!-- need_sender_cla -->", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/343344517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mhedhliGVIT": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/234149486", "body": "Same issue, thanks Nathan for the assist.\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/234149486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "aryanet": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/246872607", "body": "I am having the same problem and I experience what Rumbles is saying. I also get the following stack trace during preflight --debug run:\n\nDEBUG:root:MunkiDownloadError getting Apple SUS catalog: HTTP result 404: not found\nTraceback (most recent call last):\n  File \"/usr/local/munki/simian/lib/python2.7/site-packages/simian-2.4-py2.7.egg/simian/mac/client/flight_common.py\", line 538, in GetAppleSUSCatalog\n    '%s/applesus/' % url, APPLE_SUS_CATALOG)\n  File \"/usr/local/munki/munkilib/updatecheck.py\", line 3519, in getResourceIfChangedAtomically\n    verify=verify)\n  File \"/usr/local/munki/munkilib/fetch.py\", line 300, in getResourceIfChangedAtomically\n    message=message, resume=resume, follow_redirects=follow_redirects)\n  File \"/usr/local/munki/munkilib/fetch.py\", line 413, in getHTTPfileIfChangedAtomically\n    raise GurlDownloadError(err)\nGurlDownloadError: HTTP result 404: not found\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/246872607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "timhberry": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/252937967", "body": "I signed it!\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/252937967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/252938612", "body": "The failed checks don't appear to be related to my commit:\n\nNo local packages or download links found for simian-M2Crypto==0.22.3\nerror: Could not find suitable distribution for Requirement.parse('simian-M2Crypto==0.22.3')\nmake: **\\* [test] Error 1\n", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/252938612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "eelco": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/google/simian/issues/comments/345481712", "body": "I\u2019ve made a new setup and are also experiencing this problem. Possibly because the backlog of the catalog has to be processed all at once (there are a lot of Voice Updates in there)? I quickly hit the free limit of datastore read operations, but even with everything paid it\u2019s still hanging. It seems to go through memcache, but nothing gets cached (only 5 items are in there, my current hit ratio is 0,02%)\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/runtime/wsgi.py\", line 267, in Handle\r\n    result = handler(dict(self._environ), self._StartResponse)\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1529, in __call__\r\n    rv = self.router.dispatch(request, response)\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1278, in default_dispatcher\r\n    return route.handler_adapter(request, response)\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 1102, in __call__\r\n    return handler.dispatch()\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/third_party/webapp2-2.5.2/webapp2.py\", line 570, in dispatch\r\n    return method(*args, **kwargs)\r\n  File \"/base/data/home/apps/e~motif-simian/46fec3c1946e.405618737280548051/simian/mac/admin/applesus.py\", line 180, in get\r\n    self._DisplayMain()\r\n  File \"/base/data/home/apps/e~motif-simian/46fec3c1946e.405618737280548051/simian/mac/admin/applesus.py\", line 198, in _DisplayMain\r\n    p.testing_promote_date = applesus.GetAutoPromoteDate(common.TESTING, p)\r\n  File \"/base/data/home/apps/e~motif-simian/46fec3c1946e.405618737280548051/simian/mac/common/applesus.py\", line 322, in GetAutoPromoteDate\r\n    if not settings.APPLE_AUTO_PROMOTE_ENABLED:\r\n  File \"/base/data/home/apps/e~motif-simian/46fec3c1946e.405618737280548051/simian/settings.py\", line 372, in __getattr__\r\n    return self._Get(str(k).lower())\r\n  File \"/base/data/home/apps/e~motif-simian/46fec3c1946e.405618737280548051/simian/settings.py\", line 800, in _Get\r\n    item, unused_mtime = self._module.models.Settings.GetItem(k)\r\n  File \"/base/data/home/apps/e~motif-simian/46fec3c1946e.405618737280548051/simian/mac/models/settings.py\", line 282, in GetItem\r\n    value, mtime = cls.GetSerializedItem(name)\r\n  File \"/base/data/home/apps/e~motif-simian/46fec3c1946e.405618737280548051/simian/mac/models/base.py\", line 685, in GetSerializedItem\r\n    entity = cls.MemcacheWrappedGet(key)\r\n  File \"/base/data/home/apps/e~motif-simian/46fec3c1946e.405618737280548051/simian/mac/models/base.py\", line 106, in MemcacheWrappedGet\r\n    cached = memcache.get(memcache_key)\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 563, in get\r\n    results = rpc.get_result()\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 613, in get_result\r\n    return self.__get_result_hook(self)\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/memcache/__init__.py\", line 623, in __get_hook\r\n    rpc.check_success()\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 585, in check_success\r\n    self.request, self.response,\r\n  File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/api/apiproxy_stub_map.py\", line 471, in request\r\n    return self.__rpc.request\r\nDeadlineExceededError: The overall deadline for responding to the HTTP request was exceeded.\r\n```", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/345481712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/345483761", "body": "Pretty sure it\u2019s this (6 year old) code: https://github.com/google/simian/blob/46fec3c1946efe77df67385c7f4eeb3fc25660ea/src/simian/mac/admin/applesus.py#L192-L199\r\n\r\nYou\u2019ll only run into this on new installs, otherwise all the products would already have moved to \u201cstable\u201d and the (expensive) check is skipped. \r\n\r\nThis also means that new installs are completely broken for AppleSUS until more than a week has passed and all packages have been promoted?", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/345483761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/google/simian/issues/comments/345780515", "body": "If anybody else runs into this: I\u2019ve now worked around this issue by temporarily making `_ReadyToAutoPromote` in `src/simian/mac/cron/applesus.py` always return `True`, deploying that, manually triggering the auto promote cron job and then deploying back the original version.", "reactions": {"url": "https://api.github.com/repos/google/simian/issues/comments/345780515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}