{"_default": {"1": {"davidt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/djblets/djblets/commits/043fe768440432bcf1331641bb060fe687e06226", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/0a989cdba51683ee31bd97508225c1cb2df13b28", "message": "Prevent gravatars from exploding if users don't have an email address.\n\nThe recent changes to the gravatar backend were causing uncaught\nValueErrors to percolate upwards for users with empty email addresses,\nbreaking a variety of things. Not having an avatar shouldn't be a fatal\ncondition, so I've changed it to return an empty dict instead.\n\nTesting done:\n- Ran unit tests.\n- Tested in conjunction with some other stuff that was previously\n  breaking.\n\nReviewed at https://reviews.reviewboard.org/r/9491/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2cc6ac68c75f797d1162f047867987c85aa6b57f", "message": "Remove some debug output.\n\nThis slipped into my commit accidentally. Trivial change."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/320eaab21776f735911ab2e228644d3157bba3fd", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/7ebdd75355c702dc788607a9e20ba8fa4dc20af9", "message": "Add a line-height to .avatar-missing.\n\nThe missing avatar display didn't define the line height, which meant we\nwere at the mercy of the element's inherted vertical alignment. This\nchange fixes that so that the size of the question mark element is\nalways the same height as its container.\n\nTesting done:\nSaw the correct alignment in both Review Board and elsewhere.\n\nReviewed at https://reviews.reviewboard.org/r/9465/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/476a3d635c6551b8cd53385525befdb679e00450", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f603dca6c273270d94a996b85fe50afdf73c06d6", "message": "Sort the items in the integration list view by name.\n\nIt was a little annoying to have the various integrations appear in a\nrandom order every time. This change fixes it up to sort them by name.\n\nTesting done:\nLoaded /admin/integrations/ and saw that the various integrations were\nnow sorted by their display name.\n\nReviewed at https://reviews.reviewboard.org/r/9311/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2a28c19eaa2d027b21066b57f31b881e352e805f", "message": "Fix up an API rate limit test.\n\nThe first iteration of the change to implement API ratelimiting returned HTTP\n403. I later discovered HTTP 429, which is more appropriate, but the update to\nthe unit test didn't get committed before I pushed the branch.\n\nTrivial change."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/7bface1ac56fb712808760c49db61452550569ff", "message": "Fix form field row IDs and missing classes.\n\nThis change restores some missing items from the admin form templates.\n\nTesting done:\nVerified that the new repository form was no longer broken.\n\nReviewed at https://reviews.reviewboard.org/r/9215/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/df9d77f3244471034cf7a1e2e0ebacf6519b26f9", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d265d9f0679ad4061fb508f7f363abbb967d817e", "message": "Add optional rate limiting for all API requests.\n\nThis change generalizes the rate limiting infrastructure a bit and adds support\nfor rate limiting API requests. I've changed it so that there are three\nsettings keys, `LOGIN_LIMIT_RATE`, `API_ANONYMOUS_LIMIT_RATE`, and\n`API_AUTHENTICATED_LIMIT_RATE`. These can be set to `None`, which will disable\nrate limiting for that type, or to a rate limit string as before.\n\nIf an API request is rate limited, the response will have the error and include\na couple special headers that show what the limit is and how long the user has\nto wait before retrying the request.\n\nAs part of this, I've also fixed up a couple small issues with the logic\nbetween the different cases depending on the value of `increment`. In the case\nwhere it's `False`, we expect to get results *as if* we were incrementing, but\nwithout actually storing the value to the cache. Once this was fixed, I was\nable to fix `is_ratelimited` to actually check if the limit was exceeded,\nrather than at or above.\n\nBased on work by Raman Dhatt.\n\nTesting done:\n- Manually made some authenticated and anonymous API requests with this\n  configured and saw the expected results.\n- Ran unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/9114/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6f79259d8b1de76c920495f5e2e9757cc2b5c70e", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/215bbc2c5f61e218009142b6c831f3384e79f3b2", "message": "Allow ConfigForms to use fieldsets.\n\nThis change updates things so that if a ConfigForm has fieldsets, they'll be\nrendered correctly (as opposed to just having all the fields rendered together\nas if the fieldsets didn't exist).\n\nThis has one small niggle in that if a person defines their own fieldsets, one\nof those fieldsets must contain the `form_target` field. I've added a log\nstatement to help people figure out what went wrong if they didn't include\nthis.\n\nTesting done:\n- Ran unit tests.\n- Used this in conjunction with a Review Board change.\n\nReviewed at https://reviews.reviewboard.org/r/9045/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/da52711778f446c21dbda5051eb866f307630abe", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/798b573799327b0785672b61a652691d2931d36f", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/cd54e75119700d4a9b124d31fc67baf901148a2a", "message": "Fix @webapi_request_fields to properly check inherited fields.\n\nThe decorator for defining fields for webapi requests,\n`@webapi_request_fields`, was written to combine properly with\n`@augment_method_from`, allowing fields to be inherited. This can be seen in\nthe documentation for various resources, where the new fields are properly\ncombined with old ones. Unfortunately, the code that actually checks the fields\nat runtime was using the wrong variable, causing it to only look at fields\ndefined in the most top-level method. We didn't notice this until now because\nmost places that use this also pass `allow_unknown=True`. This change fixes up\nthe decorator to check the combined fields lists.\n\nThere's one complication added by the fact that if this decorator is applied\nmultiple times, the \"inner\" decorator doesn't know about the outer fields. I've\nsolved this by adding an assumption that if a field is present in kwargs, that\nwe've already parsed and validated its contents.\n\nTesting done:\n- Reproduced a regression in Review Board 2.5.10 which was caused by the\n  addition of a fields decorator in a subclass that shadowed parameters from\n  the superclass. After this change, I was once again able to use the\n  `max-results` and `start` parameters that had been hidden.\n- Ran unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/8981/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/a45860eb5101e88f1f7812819794627de90767b2", "message": "Add a backport of Django 1.8's URLValidator.\n\nThe URLValidator that ships with Django 1.6 is pretty basic, and doesn't\nunderstand URLs that include credentials. This change adds a backport of the\nDjango 1.8 version, which does that plus more.\n\nTesting done:\nUsed this in conjunction with a change in Review Board.\n\nReviewed at https://reviews.reviewboard.org/r/8978/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/28ee18a57e80f9d48d894bfbc7fd1abf99340ab1", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/7bb1b56ee9e68797335b10f097180facc31e20e4", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/1f91c09c16809b4033249bdd4242e527b57e808e", "message": "Get rid of old legacy text/plain mimetype hack from WebAPIResponse.\n\nOnce upon a time, for uploading file attachments and diffs to Review Board, we\nwould make a request to the API by sticking a form into an iframe and\nsubmitting it. This required an ugly hack on the API side to return the\nresulting response with a text/plain mimetype, so that the browser wouldn't\nsuggest downloading the response. This was extra confusing because the comment\nwith this code was incorrect, leading one to believe that XMLHttpRequest was\nthe problem rather than submitting HTML forms.\n\nHaving this fallback isn't too much of a problem for most cases, but it was\nbreaking the response parsing in the RBTools Python API. We've long since\nreplaced this with code that uses XMLHttpRequest, and so we can get rid of this\nkludge and return the correct mimetype.\n\nTesting done:\n- Sent a file using the RBTools Python API and saw that the response was parsed\n  correctly as an `ItemResource`.\n- Uploaded file attachments via the \"Update > Add File\" form, drag-and-drop,\n  and `rbt attach`.\n- Uploaded diffs via \"Update > Update Diff\" and `rbt post`.\n\nReviewed at https://reviews.reviewboard.org/r/8807/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/58fe6610e0f702b65e07b3868f9609a0c8af569f", "message": "Add circle.yml"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/fc1282f48a5d9e30fd688b6a97abb8ac169ad78c", "message": "Only include real models_modules.\n\nThe new implementation to get a list of all the models modules wasn't filtering\nout apps that didn't have any models, which meant that some of the entries were\n`None`. This then failed when trying to get fixture directories for each of the\ntests.\n\nTesting done:\nRan reviewboard unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/8719/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c67c585c11f25c4e2edf3bb0024b878dbb1a84f6", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/3fccd1ed6ebd8401acad4791ab3b428cdc7b29dd", "message": "Fix handling of TestCase.fixtures for broader compatibility.\n\nIn Django 1.8, they've added a `fixtures` attribute to `TestCase` which\ndefaults to `None`. This messes up our existing code that expects test cases\nthat don't have fixtures to just not have this attribute defined.\n\nWe can't just change it to default to an empty list, because django's\n`TestCase` then gets grumpy. Instead, I've changed it so we handle a `None`\nvalue appropriately.\n\nTesting done:\n- Ran djblets unit tests on 1.6 and 1.8.\n- Ran Review Board unit tests on 1.6 and 1.8.\n\nReviewed at https://reviews.reviewboard.org/r/8694/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/7f8d80599bf1637c2f58158a86cb5f3b9c4ca1eb", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/7dee7a54831245535874bb72e593816f1bcc1740", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d930425df9a33daae79afaaaf1acc94d747020cb", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/3084088d961c40bf6c74bb094322b8086418041c", "message": "Merge branch 'release-0.9.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2a2917f1cbe9f181478eae939df188daf700d7da", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/276c481af80473f1305f7fcc0d2c12ecb5ded7a3", "message": "Add babel-plugin-dedent to Djblets.\n\nThe way we do a lot of multi-line templates in JavaScript code is pretty ugly,\nbuilding a big list of strings and then joining them. ES6 template strings are\na potential solution, but they introduce a lot of ugly whitespace if there's\nany indentation in them.\n\nThis change adds babel-plugin-dedent to our build, which adds a preprocessing\nstep that removes leading indentation from template strings which are marked\nwith the `dedent` tag. This looks like an ordinary tag, but it's processed\nduring the compilation step instead of at runtime.\n\nTesting done:\n- Ran `setup.py develop` and saw babel-plugin-dedent get installed correctly.\n- Used the dedent tag in extension code.\n\nReviewed at https://reviews.reviewboard.org/r/8535/"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/djblets/djblets/issues/comments/21842122", "body": "Pushed to master (1484100)\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/21842122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/76278928", "body": "I'm going to apply this patch manually since it's pretty tiny, but in the future, for any contributions to djblets/reviewboard, please post them on https://reviews.reviewboard.org -- we generally don't use pull requests.\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/76278928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/92520566", "body": "I'm scared about doing this for very old versions (like 0.6.x) because old releases of Review Board and other users of djblets are definitely not tested against Pillow. That said, I think 0.7.x and newer is fine.\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/92520566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/93118305", "body": "If you already have PIL installed, then yes, it won't use Pillow, but if you have neither installed, it will prefer Pillow, and therefore break. \n\nI just took a look at the https://github.com/haiwen/seahub/ repository, and it looks like it requires Django 1.5. Given that djblets 0.6 requires Django < 1.4, I'd suggest bumping the djblets dependency there to something more modern.\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/93118305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/227503888", "body": "Manually merged. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/227503888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "chipx86": {"issues": [], "commits": [{"url": "https://api.github.com/repos/djblets/djblets/commits/623c59414a1e5fca951c5c9f34df2ab2c2f28ab5", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/1b79cb380e9b6647101d1b94316651ff4459da22", "message": "Add a signal for detecting reloaded SiteConfigurations.\n\nThis introduces a `siteconfig_reloaded` signal, which consumers can\nlisten to in order to update their state when a `SiteConfiguration` has\nexpired and has been reloaded. The signal contains the new instance,\nalong with the old instance for settings comparison purposes.\n\nA couple of changes were made to enable use of this signal.\n\nFirst, the behavior of `SiteConfigurationManager.check_expired` has\nslightly changed. Previously, expiration just meant clearing the value\nfrom cache, causing the next `get_current()` to re-fetch. Now, if there\nare any listeners for the signal, the new instance is fetched\nimmediately, so that it can be passed to the signal handler. This\nshouldn't impact any consumers. If no listeners are present, the new\ninstance is not fetched.\n\nA new method `get_for_site_id()` method was also added for use in\n`check_expired()`. This works like `get_current()`, but takes the ID of\na Django `Site`, handling caching. `get_current()` wraps this.\n\nThe docs throughout the file have been modernized, helping to keep this\nmaintainable going forward.\n\nTesting Done:\nAll unit tests for Djblets and Review Board pass.\n\nReviewed at https://reviews.reviewboard.org/r/9481/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/cf2185395f68ae2a20cef7aa6a5c230fb68a0117", "message": "Include additional files in the package.\n\nDjblets 1.0 introduced SVG icons, which was used for higher DPIs. This\nnever made it into the resulting package, though, since these files were\nleft out of the manifest. While working to fix this, I noticed several\nother files that were missing, such as `*.map` files and the\n`*-requirements.txt` files.\n\nThis change carefully reworks our `MANIFEST.in` to better control what\nfiles are included in the package. We now start by including the\nentirety of the `contrib`, `djblets`, and `docs` directories, along with\nsome other specific files, and then selectively remove content from the\npackage. This gives us the various files like `*.map` and `*.svg`, while\nkeeping out files like `*.py` and vim swap files.\n\nSome other files, like `INSTALL` and `README`, are now specifically\nincluded. These were included before by default by setuptools, but\nthey've been added so that we can be more explicit about our coverage.\n\nFiles needed for building docs are also now present, allowing us to\nbuild docs without needing a Git source tree.\n\nTesting Done:\nBuilt packages before and after this change. Verified that the SVGs,\nMap files, and requirements.txt files were included, and nothing was\nmissing.\n\nCarefully inspected the file listings between what we've previously\nshipped and now, and against the source tree.\n\nBuilt all the docs from a source tree.\n\nReviewed at https://reviews.reviewboard.org/r/9477/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c3174c4092a55f6135324c8f8c89fa4b9b61e785", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/7baa29f7a723cf5f6a3bf5eca4418c9e7aba30c3", "message": "Bump to 1.0.3 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/a47e2cf21b93ec5a4225f47a330ebf6c2ddf6957", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/8f742c85994ed0ee435e4be06db2caf68085c46f", "message": "Release Djblets 1.0.2."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/be7686aa931c6dff4a88697ae7aaea740301f428", "message": "Added release notes for Djblets 1.0.2.\n\nThis is a small bug fix and feature enhancement release focusing on\nDjango compatibility issues and better support for editing JSON content\nin the database and more easily providing multi-DPI image srcsets.\n\nTesting Done:\nBuilt the docs and looked through them. Checked for build and spelling\nerrors.\n\nReviewed at https://reviews.reviewboard.org/r/9462/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/9b34d016b4aefd09c737900ef1dc5784f584761a", "message": "Fix some version references in deprecation notices.\n\nWe have a few deprecation notices that reference the 0.11 release, which\nis now no longer a thing that will happen. This change fixes those\nnotices to specify 2.0 as the target release for the deprecations.\n\nTesting Done:\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9456/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/3cdc9c103e208a115f455d8701ec27d60163f472", "message": "Add and refine template tags for working with image srcsets.\n\nThe existing `{% srcset %}` template tag has been made more robust,\nsanity-checking the sources passed in and sorting the resulting list, in\norder to guarantee that the data being passed into the template is\nvalid. It also no longer trusts that the values provided are HTML-safe,\ninstead using `format_html_join` to more intelligently handle safe vs.\nnon-safe values.\n\nA new template tag was also added, `{% image_source_attrs %}`, which\ntakes a multi-line source definition list with items in the form of\n`<descriptor> <URL>` and builds a `src=\"...\" srcset=\"...\"` string for\nadding to an `<img>` tag. This is a convenient way of building these\nvalues in HTML templates without worrying about long lines, duplicate\ninformation, and redundant calls to `{% static %}`.\n\nUnit tests were added for both functions.\n\nTesting Done:\nUnit tests pass.\n\nMade use of this in some upcoming work in RBCommons.\n\nReviewed at https://reviews.reviewboard.org/r/9440/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2a355aeef3faf397b61ca0d2293576eba8a64508", "message": "Fix unit tests on Internet Explorer and Edge.\n\nThe unit tests for `ListEditView` added new ES6 syntactic sugar into a\ntemplate string, which bypasses Babel. This ended up breaking tests on\nIE and Edge (and anything else that doesn't understand the syntax being\nused). This change fixes this to use more traditional syntax.\n\nTesting Done:\nRan unit tests on Chrome, Firefox, Edge, and IE.\n\nReviewed at https://reviews.reviewboard.org/r/9451/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/56686c0e87e019149ebf1b380733f82e1bfbca0f", "message": "Fix Django 1.7+ compatibility issues with RelationCounterField tests.\n\nThe unit tests for `RelationCounterField` didn't work properly on newer\nversions of Django. The field itself was fine, but the tests needed some\nwork.\n\nA big part of this was due to a difference in how signals worked on\nnewer versions of Django. When a weak reference disappeared under Django\n1.6, the connections would immediately be cleaned up, but on newer\nversions, they'd just be flagged for cleanup the next time `connect()`,\n`disconnect()`, or `_live_receivers()` was called, making our\n`Signal.receivers` check fail. The fix for this is to just call\n`_live_receivers()` instead in the tests, which will give us the correct\nresults and even let us specify the model we care about (simplifying a\nlot of test code).\n\nThe other problem was that one of the tests no longer made sense in\nnewer versions of Django. It was testing to make sure that a reused ID\nfrom a `Model.delete()` call wouldn't cause the wrong state to be looked\nup. This could happen due to `delete()` working within the same\ntransaction as the caller, but in newer versions of Django, deletions\nhave their own transaction, preventing this problem.\n\nTesting Done:\nUnit tests pass on Django 1.6, 1.9, 1.10, and 1.11. For other reasons,\n1.7 and 1.8 are not tested.\n\nReviewed at https://reviews.reviewboard.org/r/9419/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f6287593012bc256a0af9aeeac7af7517ff52e4b", "message": "Fix the webapi tests on newer versions of Django.\n\nSome recent unit tests for API token signals introduced a second\n`WebAPIToken` model registered within the `djblets.webapi.tests` app.\nWhile this didn't outright break on Django 1.6, it did on newer\nversions.\n\nThese new tests now import the old model, allowing for a single\nregistered model. This works when running the entire Djblets test suite\nor the individual test modules.\n\nIt also fixes a typo in the name of the class for the signal tests.\n\nTesting Done:\nRan webapi unit tests on Django 1.6, 1.9, 1.10, and 1.11 without\nproblems.\n\nReviewed at https://reviews.reviewboard.org/r/9417/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/95f9cfc0d6cdd63f1f4580063b08af64d46e5f3a", "message": "Make never_cache_patterns() compatible with newer versions of Django.\n\n`never_cache_patterns()` is an old function of ours that applies\nDjango's `@never_cache` decorator to a list of URLs. It was built to\nwork like `patterns()`, which doesn't exist in modern versions of\nDjango, and assumed older URL semantics like the ability to associate\nURLs with view lookup strings, which also doesn't exist anymore.\n\nThis updates the function to be more future-proof. It no longer requires\na prefix string as the first parameter, and in fact warns if a string\nthat is non-empty is provided, outright failing if provided on Django\n1.10 or higher (which doesn't include prefix support).\n\nUnit tests were added to test the function with and without prefix\nstrings, in a way that ensures things work properly on whatever version\nof Django is being tested against.\n\nTesting Done:\nUnit tests pass on Django 1.6, 1.9, 1.10, 1.11. Opting not to bother\nwith older versions at this stage.\n\nReviewed at https://reviews.reviewboard.org/r/9416/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4522ab3e4ffbdf266df8cc0958fd7c36236faa07", "message": "Improve documentation and clean up code for JSONField.\n\n`JSONField` is one of the older classes in Djblets, and had very little\ndocumentation available, despite all the work done on it over the years.\nThis change fixes that up by adding documentation for all methods and\nattributes using our standard doc format.\n\nSome of the code in the class was also cleaned up a bit, helping remove\nsome redundant code and bad/stale comments.\n\nTesting Done:\nUnit tests passed.\n\nTested manually manipulating a JSON field through the admin UI to make\nsure nothing broke anywhere.\n\nReviewed at https://reviews.reviewboard.org/r/9406/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/a8fc9f9d40f286092799ca7d55efe94874c94202", "message": "Improve the editing experience for JSONFields.\n\n`JSONFormField` (through `JSONField`) had a pretty underwhelming editing\nexperience when used in forms. The text field would just contain a big\nblob of serialized JSON content, which was pretty hard to read and\nmodify.\n\nNow, the text field shows a pretty-printed representation of the JSON\ndata, with all keys sorted to make it easier to find the key you want.\nWhen saved, the resulting data is once again condensed, but with the\nkeys remaining sorted in the database.\n\nIn order to do this, the old `encoder` argument for these classes has\nbeen deprecated, with new `encoder_cls` and `encoder_kwargs` replacing\nthem. This allows the classes to decide when the encoder is constructed\nand to provide additional arguments to control the behavior. Any\nconsumers providing a custom encoder today will not see the new editing\nbehavior, falling back on the legacy behavior instead.\n\nTesting Done:\nManually tested loading a JSON structure and editing it in the Admin UI.\nSaw that the data was nicely indented and sorted. Saved it and saw that\nthe data was condensed in the database, but still sorted.\n\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9405/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f7b742a2bb87e761f22b1f41762bde02265fb838", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5202a451bf8402c59281234c3be8515737af6eb2", "message": "Bump to 1.0.2 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d826955e42c81271521baeef995033a754f66606", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/a9b9e2c08dd3c093ac7171443b78e552afc31205", "message": "Release Djblets 1.0.1."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2b26974a2600f0de387115cee0a9fbd8f86a95c4", "message": "Add release notes for Djblets 1.0.1.\n\nThis is a small release focusing only on the fix for the disappearance\nof avatar backends. Other fixes that are in progress will be pushed to\nfuture patch releases.\n\nTesting Done:\nBuild the docs and read through them. Checked for spelling and build\nerrors.\n\nReviewed at https://reviews.reviewboard.org/r/9422/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/bdd128ce2c67568891388a12ec87d41c545ba776", "message": "Fix the disappearance of avatar backends provided by extensions.\n\nAvatar backends provided by extensions had a tendency to disappear\nperiodically from the enabled list, with the default backend being unset\nas well. This was the result of the `AvatarServiceRegistry` attempting\nto self-manage the settings a bit too closely, checking during\npopulation and attribute accessors for whether stored IDs make sense\nwith regards to the currently-populated backends and erasing IDs that\ndon't currently map.\n\nThis meant that any IDs pertaining to backends owned by an extension\nthat hadn't yet initialized hooks could be lost when certain operations\nwere performed, with the data being erased from settings. Along with\nthis, shutting down an extension (such as during extension manager\nreload or when shutting down an Apache thread) would unregister the\nbackend, which would also remove the enabled/default backend IDs.\n\nThe fix is to simplify the accessors, population, and unregistration,\nremoving these side effects. IDs stored in settings are no longer\nremoved unless explicitly requested by disabling a matching backend\n(which can now be done based on the ID instead of the class) or changing\nthe default backend. Otherwise, they're preserved and loading takes into\naccount that these just might not be available yet.\n\nThis means that code can attempt to look up the default backend class or\nthe list of enabled backend classes before an extension registers a\nbackend, and then after registration, and the former information will\nexclude the registered class but the latter will include it, without\nhaving to repopulate. It also means that the former will be returned\nafter disabling the extension, but that the latter will once again be\nreturned after re-enabling.\n\nIf an administrator re-saves the list of enabled avatar backends and the\ndefault backend from the administration UI, the new settings will no\nlonger include any unregistered backends, which will keep settings from\nforever including backends from every extension ever loaded.\n\nUnit tests have been updated to test for this and to make some parts\nmore clear. There's also some improvements to documentation with the\nregistry that was noted while documenting new methods and building docs.\n\nTesting Done:\nAdded a custom backend, verified it was available in Avatar Settings.\nMade it the default and enabled it. Then I removed that custom backend\nand accessed pages, including Avatar Settings. Saw that I got log\nmessages about this not being available, but no crash. The backend wans't\nbeing shown in the list of available backends anymore. However, it was\nstill listed in the siteconfig settings payload.\n\nRe-enabled the backend and saw that it was once again working and\navailable in Avatar Settings.\n\nRe-disabled and saved Avatar Settings. Saw that the IDs were removed\nfrom siteconfig.\n\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9403/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/dad4133923871f7640f76c692d8b277281a8baa8", "message": "Specify a repository type of Git for RBTools.\n\nThis will help speed up operations against the repository."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/0325f02e2c98362e85397cee1144987d32a32f96", "message": "Bump to 1.0.1 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/1e69d994c50dc9f33202d770bee73441efd4253b", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/efdfb88fa82cc972b3858cbe60d2a5349aee3f26", "message": "Release Djblets 1.0."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/051686404de69cbc78ccddc405b296ad39dd329b", "message": "Add release notes for Djblets 1.0.\n\nThis covers the entire set of changes introduced in 1.0, including the\naddition of avatars, feature checks, integrations, conditions,\nregistries, JSON patching, and more. The features containing guides have\n\"Learn more\" links, and each new module is tagged with a \"(new)\" in the\nheader.\n\nTesting Done:\nBuilt the docs and read through them. Checked for bad links, build errors,\nspelling errors, and formatting errors.\n\nReviewed at https://reviews.reviewboard.org/r/9394/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/437dc47d02053ed8b7488eca20be91df6dc4f21e", "message": "Fix collision issues with the Djblets 0.10 and 1.0 intersphinx entries.\n\nIntersphinx entries are keyed off by URL, not by name. The recent\nversion bump resulted in us having two entries pointing to the same URL,\npreventing intersphinx lookups based on prefixes from working correctly.\nInstead of maintaining an older 0.10 docset, the intersphinx entries and\nreferences in the 0.10 beta docs have been updated to point to the 1.0\ndocs instead.\n\nThe 0.10 beta 1 docs have also been updated to use\n`default-intersphinx`, allowing us to remove unwanted prefixes.\n\nThe non-existent Djblets 0.9 intersphinx inventory has also been\nremoved.\n\nTesting Done:\nBuilt the docs. Intersphinx references worked, and there were no build\nerrors.\n\nReviewed at https://reviews.reviewboard.org/r/9389/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/fc8aa0fc4babd57a8e44ae614d4f953dd07c88f6", "message": "Require beanbag-docutils 1.6 or higher.\n\nThis includes new HTTP role support and improved Retina image support."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/dc45286a370a69e365a43ca664fb42e9fe7bf098", "message": "Update reference to 0.10 to 1.0 in the code and docs.\n\nWe still had code and documentation that references Djblets 0.10. These\nhave all been updated to reference 1.0 instead.\n\nTesting Done:\nBuilt the docs and checked versions.\n\nReviewed at https://reviews.reviewboard.org/r/9390/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6789049e67e2770faf5fcdcab8f49754be3855c3", "message": "Fix a regression with an attribute in SettingsForm for extensions.\n\nExtensions used to have access to a `siteconfig` attribute on\n`SettingsForm`, which was were the settings for the extension lived. The\nname was there for historical reasons, due to the form originally being\nmade for `SiteConfiguration`. The move to using the new `KeyValueForm`\nin Djblets 1.0 resulted in this attribute being removed, breaking\nextensions.\n\nThis change restores the attribute, emitting a `DeprecationWarning` when\naccessed. The warning is only emitted once per access per form\ninstance, in order to avoid spamming the logs.\n\nTesting Done:\nTested an extension with Review Board that made use of this. Verified that\nit no longer broke.\n\nReviewed at https://reviews.reviewboard.org/r/9391/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/df6279e49f543258e41c67ac1070faec5596fe17", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/ea433a67aa51080a77e6e1fc119cce8b7a21d37d", "message": "Bump to 1.0 RC 2 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/bd47b47af6cecc3884ad14f6d5ee3d1193aeb74f", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/68cf1104299c365ca6ec6f853e8f654bc9f289d2", "message": "Add Barret to the 1.0 RC 1 release notes.\n\nWhen originally written, the release notes only mentioned myself, as\nall changes were mine, but since then Barret posted commits. This adds\nhim to the release notes."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/188c477ddb8640f08a466176e2ad2c373ccb07d7", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/699b545184ed56d1d8b97d8e3e41435da1ed99ac", "message": "Release Djblets 1.0 RC 1."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/8036c5d206f53b4fff5430945f8aebc7e632b7f4", "message": "Add release notes for Djblets 1.0 RC 1.\n\nThis covers the new improvements for high-DPI support, JSON document\npatching and resolving, auto-enabled extensions, new extension hooks,\nand bug fixes.\n\nTesting Done:\nBuilt the docs. Checked for build errors and spelling errors.\n\nReviewed at https://reviews.reviewboard.org/r/9339/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c0b8d0f94ed4f7aaf788f1d3436a9568e351a24e", "message": "Update doc building to reference the new Djblets 1.0 doc location.\n\nBoth the old 0.10 and new 1.0 Djblets doc references in the release\nnotes will reference the new 1.0 codebase docs."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c0f6969fa3a49741b281538b7f67ab904c4f0de6", "message": "Merge branch 'release-1.0.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f13b84b17b2b107eabbf0bb864795ff0452b1f5f", "message": "Change the version of Djblets from 0.10 to 1.0.\n\nWe're releasing this new version of Djblets as 1.0. Formerly, it was\nknown as 0.10. This bumps the version and updates .reviewboardrc for the\nbranching changes.\n\nAt this point, the release-0.10.x branch is considered dead and should\nno longer be used for development."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2651a3404aacf72f52c20a4643a584e34743091f", "message": "Bump the kgb development requirement to 1.0.0.\n\nThis is needed to support using getargspec() and Python 3 in unit tests."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/80ea3b3de2e03b8b0d65e5f4c93dc2f5864fc1d1", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/ceca8cacbfd32b8f0d719953c40948169a9d1359", "message": "Add a function for performing a JSON Patch.\n\nThis introduces `djblets.util.json_utils.json_patch`, an implementation\nof JSON Patch (RFC 6902). This is another, more advanced method of\npatching JSON-serializable data, sort of like with JSON Merge Patch but\nwith the ability to order operations, copy or move data, sanity-check\nvalues before applying a patch, set values to `null`, and manipulate\nspecific indices of arrays. It's a good substitute for JSON Merge\nPatches when more specific modifications and sanity-checking is needed.\n\nJSON Patches consist of a list of operations to perform. These are\n`add`, `remove`, `replace`, `copy`, `move`, and `test`. All operations\nmust pass in order for a patch to apply.\n\nThis implementation goes beyond most implementations by providing read\nand write access control for keys. This allows callers to prevent\nreading certain keys or writing to others, limiting the damage that, for\ninstance, an API call can do.\n\nMore information on JSON Patch can be found at http://jsonpatch.com/ or\nhttps://tools.ietf.org/html/rfc6902.\n\nTesting Done:\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9264/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/9ef1fbe2b9d230beda3ea68465a5c5b6f414ce6e", "message": "Add utility functions for working with JSON Pointer paths.\n\nThis introduces two new JSON utility functions, `json_get_pointer_info`\nand `json_resolve_pointer`, which are used to return information from a\nJSON-compatible object based on a JSON Pointer path. These paths are a\nstandard way of specifying a location within an object, supporting\ndictionary keys, array indices, and even an \"end of array\" marker (for\ninsertion purposes in other functions).\n\n`json_get_pointer_info` attempts to resolve as much of the specified\npath as possible, returning information on what was able to be resolved,\nwhat remains, and what error should be shown if expecting a\nfully-resolvable path. It's useful for cases where the path being used\nmay not necessarily have to represent an existing location in an object.\n\n`json_resolve_pointer` takes a fully-resolvable Pointer path and returns\nthe value from the object that it matches. If the path cannot be\nresolved, an exception is thrown. This is intended for use in the more\ncommon cases of simply needing to access data from an object.\n\nTesting Done:\nUnit tests passed.\n\nReviewed at https://reviews.reviewboard.org/r/9263/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/defeb3941a3232d66adfce338482351bbeb5afcd", "message": "Add a function for performing a JSON Merge Patch.\n\nThis introduces `djblets.util.json_utils.json_merge_patch`, an\nimplementation of JSON Merge Patch (RFC 7396), which is used to apply a\nset of changes to a JSON-compatible data structure. Merge Patches allow\nfor adding new values (which may be complex JSON objects) to\ndictionaries or arrays, remove keys from dictionaries or arrays, or\nreplace existing values.\n\nThis has additional support for access control around keys, preventing\ncertain keys from being replaced or added, optionally aborting the\npatching process if encountered.\n\nTesting Done:\nUnit tests pass.\n\nTested manually with several targets and dictionaries.\n\nReviewed at https://reviews.reviewboard.org/r/9262/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/0136b590a6836caaf42690100a2c2ec88169ee75", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/305e3467dade727b08f765a9479105622f469da8", "message": "Simplify OAuth2 scope generation and run it on demand instead of startup.\n\nThis change attempts to reduce startup time by generating OAuth2 tokens\nonly when first needed by the application, instead of when the scope\ndictionary is first being set up. A few changes were made in order to\nhelp reduce the overhead.\n\nFirst, `WebAPIScopeDictionary` is no longer a `dict` that self-populates\nwhen constructed, and its contents are no longer manually added/removed\nas extensions are enabled/disabled. Instead, `WebAPIScopeDictionary` is\na standard object that wraps and manages a `dict`, implementing a few\ndictionary functions (`__getitem__()`, `__contains__()`, `keys()`, and\n`iterkeys()`) needed by `oauth2_provider`. Instead of populating on\nconstruction, it populates whenever something needs to access the\ninternal dictionary, and only if it's empty.\n\nPopulation walks every resource tree it's tracking (the root resource\nand, when using `ExtensionEnabledWebAPIScopeDictionary`, each enabled\nextension's list of top-level resources). It now does this recursively,\npreventing the need to modify another data structure on each iteration,\nallowing it to only worry about populating the scope dictionary.\n\nThis simplifies things quite a lot, as the extension management now only\nhas to add/remove the list of resources for the extension and clear the\ndictionary. The scopes won't regenerate until needed. It's also now\nthread-safe, preventing several concurrent scope generations from\noccurring at the same time.\n\nThe scope list is now computed on demand from the dictionary, just like\nwith the standard version. This reduces how much memory we're using to\nkeep the list of scopes, since looking up the scope list from the\ndictionary is a pretty infrequent operation. Because of this, we no\nlonger need to override `OAuth2ProviderSettings.__getattr__`.\n\nThe overall result is a smaller, simpler class for handling scope\ngeneration that reduces startup time, reduces bookkeeping, is\nthread-safe, and more easily extensible.\n\nTesting Done:\nUnit tests pass.\n\nTested manually that the scopes weren't populated on startup, but that\nI could get the list when needed (triggering a generation).\n\nAlso tested that enabling/disabling an extension properly cleared the\nscopes, and requesting scopes again caused the new extension resources\nto be included in the scope dictionary.\n\nReviewed at https://reviews.reviewboard.org/r/9269/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/ae9282658d651eb55ef04e620f91d2f5b47dbf50", "message": "Clean up dead space and clipped icons in the datagrid's Edit Columns menu.\n\nThe styling for the Edit Columns menu for datagrids resulted in a lot of\nunclickable dead space around icons and text, requiring more precise\nclicking in order to add or remove columns. Along with this, the\ncheckmark icons weren't properly aligned and were actually clipped a\nbit, based on their position in the spritesheet.\n\nThis change tightens up the spacing, removing all the dead space so any\nclick anywhere on a row will add or remove the column. It also removes\nunwanted whitespace before the labels, fixes the referenced position of\nthe checkmark icon in the spritesheet, and fixes alignment of the icon.\n\nTo improve accessibility and to better inform users just a bit, a title\nhas been given to the row indicating if a click will add or remove the\ncolumn.\n\nTesting Done:\nChecked that there was no longer any dead space within a row.\n\nChecked the title on the cells, icons, and text.\n\nChecked the alignment of the checkmarks and the in-label icons to make\nsure things were consistent.\n\nTested clicking on the checkmark area and the label to make sure\ncolumns were added and removed.\n\nReviewed at https://reviews.reviewboard.org/r/9300/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/195d209ce16d3a984fc98a52c9703f53626c4f87", "message": "Add a base extension hook for managing multiple items in a registry.\n\nThis introduces `BaseRegistryMultiItemHook`, which is similar to\n`BaseRegistryHook` but handles registering/unregistering a list of items\nat once. It's useful for extension hooks that otherwise need to manage\nmultiple items, helping to consolidate that logic.\n\nUnlike existing hooks in Review Board that manage multiple items, this\nis also careful to unregister any items that were registered upon\nencountering an error, so that some items don't remain permanently\nregistered even if the extension is shut down.\n\nUnit tests were added for this hook.\n\nTesting Done:\nUnit tests pass.\n\nMoved some extension hooks to this in Review Board and ran tests. Those\nalso pass.\n\nReviewed at https://reviews.reviewboard.org/r/9283/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/771621c3f60c020dd6a6c65a34a4fb38e58e481f", "message": "Add an \"id\" property for integration instances.\n\nThis adds an `id` property on integrations that works as an alias for\nthe `integration_id` property. While the latter is preferred, this alias\nis necessary for some hooks to retain compatibiliy with both extensions\n(which use `id`) and integrations (which did not).\n\nTesting Done:\nMade use of this with an integration and a hook that needed the ID. It\ndidn't crash.\n\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9284/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/498d104fbf396eb646a71ddb56ef0b74116a6027", "message": "Switch the uglifyjs dependency to uglify-js.\n\nWe've been using the old dependency name for a while, and this has been\ncausing warnings when building packages. This change updates our\ndependency and both the Djblets and extensions build support to use the\nnew package name.\n\nTesting Done:\nSuccessfully built packages with this change.\n\nReviewed at https://reviews.reviewboard.org/r/9282/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/38a2d70c6854126045188d713bd77bf4d88864c3", "message": "Improve high-DPI support across Djblets.\n\nThis introduces a series of improvements and fixes for high-DPI (Retina)\nsupport across Djblets, focusing primarily on support for `srcset`\nattributes and the usage of `@3x` (or higher) and SVG image files in\nCSS.\n\nThe Avatar `srcset` support has been made more general. Instead of\nfocusing entirely on avatars, the new support works on all image\nelements. There's a few key differences in the new method:\n\n1. The `srcset` capability check has been fixed. The old check attempted\n   to call `get()` on the test element, which is actually intended to\n   perform an HTTP request. The result was that `srcset` was never\n   marked as supported. The intent was to look up the DOM element from\n   the list, which has been fixed.\n\n2. The new method no longer attempts to parse an empty `srcset` or\n   change the image URL if the pixel ratio hasn't changed, reducing the\n   workload for images without `srcset` or when repeatedly called.\n\n3. The new method is also a standalone method, rather than a jQuery\n   method, lazily performing the DOM query only if needed, improving\n   performance on modern browsers that natively handle `srcset`.\n\nThe old avatar method, introduced within the 0.10 release cycle, has\nbeen removed. The only effective difference it had with the new support\nwas the addition of a CSS class, which wasn't used anywhere.\n\nThe old `.at2x` CSS mixin has been replaced with a new `.retina` mixin.\nThis one is based on the latest mixin from retinajs.com, but heavily\nmodified to allow usage of SVG files. When enabled, screen pixel ratios\nhigher than the highest ratio level (2x, 3x, etc.) specified will use\nthe SVG file instead, ensuring quality on all screen resolutions. The\nmixin for this has moved to a new file (`css/mixins/retina.less`), and a\na compatibility file and compatibility macro have been added.\n\nThe integrations list has also been updated to use ``srcset``.\n\nTesting Done:\nTested that the `srcset` support capability was reporting the correct\nvalue.\n\nTested that `.at2x()` continued to work as it did before.\n\nTested the new `.retina()` with multiple density levels and with SVG\nsupport.\n\nTested that integrations were setting `srcset` correctly.\n\nTested that datagrids were using SVGs when limiting the max density\nlevel to 1 (forcing SVGs for Retina displays).\n\nReviewed at https://reviews.reviewboard.org/r/9260/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c11534ffd2ec01d51908eb61e3bf7f77a288cd5a", "message": "Add support for enabling certain extensions by default.\n\nThis adds a new setting, `settings.EXTENSIONS_ENABLED_BY_DEFAULT`, which\nis a list of extension IDs that will be automatically enabled when first\nregistered in the database through `ExtensionManager.load()`. This\nallows a project to automatically enable specific extensions, such as\nfirst-party ones considered a part of the application.\n\nOnce an extension is later disabled, it will not be automatically\nre-enabled unless the registration is removed from the database.\nExtensions also cannot opt into being enabled by default.\n\nTesting Done:\nUnit tests pass.\n\nTested this manually with an extension that was set to be auto-enabled.\n\nReviewed at https://reviews.reviewboard.org/r/9273/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/bfad90560096b7ab1b144fde8e79fd12ea636374", "message": "Document and clean up the ExtensionManager code.\n\nThis change is primarily concerned with documenting `ExtensionManager`,\nfleshing out some details of some of the methods, in preparation for\nsome new work.\n\nSome of the code has been cleaned up a bit just to better conform with\ncoding standards. Double quotes have been turned into single quotes,\nline lengths are more consistent, and some dictionary key checks have\nbeen turned into `try/except` blocks. The logic changes are minimal.\n\nTesting Done:\nUnit tests pass.\n\nChecked to make sure all common extension operations (loading, enabling,\ndisabling, configuring) worked.\n\nChecked that docs built without errors.\n\nReviewed at https://reviews.reviewboard.org/r/9272/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/741b77c8d1024bab3262e04b02373289c076b532", "message": "Fix deserializing data from a JSONFormField.\n\n`JSONFormField`, used by `JSONField`, knew how to take JSON data and\nserialize it for use in the field, but it didn't then deserialize that\ndata back after cleaning the field. This didn't always matter in all\ncases, but depending on how the form was constructed and validated, it\ncould result in validation errors or incorrect data being made available\nto callers.\n\nThis change implements the `to_python` method, which handles the\ndeserialization side. This should ensure that the resulting object is\nalways going to be valid JSON data (or will result in a\n`ValidationError`).\n\nTesting Done:\nUnit tests pass, including new ones in Review Board that broke prior to\nthis fix.\n\nReviewed at https://reviews.reviewboard.org/r/9270/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/ac0a9d098c2ddacca1531a0030a29d38672741af", "message": "Redo RelationCounterField unsaved state tracking to avoid deadlocks.\n\nWe were hitting a very peculiar deadlock bug that was reproduceable but\ndepended on the operations being performed and the state of the garbage\ncollector. The deadlock occurred due to Django's `Signal.connect()`\ntriggering a `RelationCounterField` weak reference to drop while\niterating through signal handlers, which resulted in a callback in\n`RelationCounterField` that then attempted to disconnect signals. Since\n`Signal.connect()` already grabbed a lock, `Signal.disconnect()` was\nblocked waiting on that lock, causing the process (whether unit tests or\nweb server) to hang.\n\nIn order to get around this, the state tracking has been changed a bit,\nin a way that actually cleans up the code and brings some consistency\nand order to how unsaved instances work. Previously, unsaved model\ninstances (those with a primary key of None) required listening both for\na save (to begin tracking state) and a weak reference drop (to clean up\nsignal handlers), which required the use of non-weak signal callbacks,\npreventing `Signal` from doing its own cleanup.\n\nIn the new design, `InstanceState` has been updated to be used for both\nsaved and unsaved instances. It now owns the signal handlers, and\nconnects to them using weak references, so that `Signal` can handle\ndisconnecting (in a way that avoids deadlocks) when the state is\nno longer referenced. An `InstanceState` that represents an unsaved\ninstance will listen for when the instance is saved, remove the existing\nreferences to itself, and register new `InstanceStates` for the saved\nreference.\n\n`InstanceState` also listens for when the weak reference is cleared for\nboth saved and unsaved instances, so that the resets always happen when\nneeded. It also no longer listens to `pre_delete` for unsaved instances,\nreducing the number of signal connections.\n\nThis all avoids the problem of nested locks in `Signal`, creates\nconsistency in how all instances are tracked, and further reduces the\nchances of state or signal connection leaks.\n\nTesting Done:\nSet up a reproduceable unit test run in Review Board that consistently\neventually ended up in a deadlock (due to the garbage collector deciding\nto run at some point). After this change, I could not reproduce any\ndeadlocks in the test runs.\n\nAll unit tests for Djblets and Review Board pass.\n\nReviewed at https://reviews.reviewboard.org/r/9268/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/cdb7c636126bd8483ecae3f52f265e3a106378bf", "message": "Split the djblets.util.tests suites into per-suite files.\n\ndjblets.util.tests was getting a bit large, and was only about to grow\nlarger with some upcoming changes. In order to keep things more sane,\nthis change splits the old tests file into a series of new files, and\nmoves the tests inside djblets.util.templatetags.tests into this\nnamespace.\n\nAs many of these are from the early days of Djblets, most of these tests\nwere also using very outdated naming and styles. They've all been\nupdated for the modern style guidelines and to take advantage of modern\nunit testing functions.\n\nTesting Done:\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9237/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4b61557f2828252095678b720b3432e28cac1015", "message": "Fix the new Djblets version number.\n\nDjblets was being set for 1.0 RC 1, but we're holding off on moving from\n0.10 to 1.0 until we're ready to ship the final release. This brings it\nback down to 0.10 RC 1."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2596f7d7c550cced4145ba327579e45aa40f1637", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4f755d57e26420e6b9bf3c31276936f52eee097d", "message": "Bump to 0.10 RC 1 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4f72faf1e8edf7717cf4842ccbd7c52db076932c", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/b362231f43e9dfca717f91a367ca9501764ae7bd", "message": "Fix code linking in docs to account for alpha/beta/rc designations.\n\nThe code linking for the Djblets documentation wasn't considering any\nalpha/beta/rc types, causing failures looking up a branch. This fixes it\nto use the same logic we use for tagging branches."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/ea5d6a377d74a3245988d8d30de3b692f5f22084", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d6fef48ec28ce9a9a79cf466a8b2f5e207603e6c", "message": "Release Djblets 0.10 beta 2."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d8fc786bafd7d0ca380f48b55c4812567b7d7a4e", "message": "Add release notes for 0.10 beta 2.\n\nThis covers all the new features and cleanups in beta 2, of which there\nare many. Highlights include OAuth2 support in the API, new form widgets\nand improvements, log blacklisting, Python-Markdown 2.6 compatibility,\nnew class-based view mixins, login and API rate limiting, and a\nmultitude of new options and fixes.\n\nTesting Done:\nBuilt the docs and tested all links (along with an upcoming change to fix\nissues in the coderef docs).\n\nChecked for spelling errors.\n\nReviewed at https://reviews.reviewboard.org/r/9224/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/783ab4a543f990559ec2a65fa110629df3b48556", "message": "Bump the beanbag-docutils dependency to 1.4.1.\n\nThis version contains additional HTTP status codes needed for the rate\nlimiting documentation."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/e53a711bab856afa401e3d49f27f82c1ed4f1711", "message": "Add missing coderef docs and fix syntax issues.\n\nSeveral modules have been introduced that haven't yet been added to the\ncode reference part of the documentation, preventing those modules from\nbeing cross-referenced. This moves those modules and fixes a handful of\nerrors found in the codebase (including an obscure highlighting issue\nwith \"whitespace\" followed by a period).\n\nTesting Done:\nBuilt the docs. No longer saw the errors. Verified that all the new\ncross-references from the release notes worked.\n\nReviewed at https://reviews.reviewboard.org/r/9226/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c082c60d2dece86ea648a9d4ba44208221fda632", "message": "Don't save CounterField values by default when saving models.\n\nWe had a long-standing, hard-to-catch bug where counters would sometimes\nend up with incorrect values, requiring a reset of the counters in order\nto recompute. This turned out to be due to code\nincrementing/decrementing a counter and then another instance somewhere\nsaving the old counter values back to the database.\n\nThe only time a counter's value should be included as part of a standard\nsave operation is if the value is being reset (saving `None`) or if it's\nexplicitly requested in `update_fields`.\n\nWhile Django does allow for some control over which fields are saved to\nthe database, there's no way for fields themselves to opt out of saving\na value, which is what we'd prefer. So instead, `CounterField` now adds\na new version of `_do_update()` (the model's function that actually\nkicks off computing the SQL to update a set of values) that filters out\nthe values first. This ensures that we never accidentally save a\n`CounterField` or any of its subclasses.\n\nUnit tests were added to check on this new behavior.\n\nTesting Done:\nAll Djblets and Review Board unit tests pass.\n\nManually tested with a solid repro case and saw that the old stale values\nwere no longer being stored during `save()`.\n\nReviewed at https://reviews.reviewboard.org/r/9234/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/27411478af1ea0b0360e747616655c5b2783470b", "message": "Fix stale state issues in RelationCounterField when deleting models.\n\n`RelationCounterField` keeps track of each model instance that contain\nreferences to other models, in order to bump their counter fields, and\nit tries to notice when a new instance of a model has claimed the same\nID as an old one (for use in test suites). However, it only worked when\nthe old instances fell out of scope, and not when they were deleted\n(which resets the ID to None and prevents a later lookup from\noccurring).\n\nThe field now tracks the `pre_delete` signal for the instance, taking\ncare to reset state and untrack the instance. It also clears up signal\nhandlers, ensuring we don't have any stale ones sitting around.\n\nUnit tests have been added for these fixes.\n\nTesting Done:\nVerified that the new unit tests failed before this fix, and pass\nafter.\n\nRan the Review Board test suite (with an upcoming change), which was\nfailing. It now passes after this.\n\nReviewed at https://reviews.reviewboard.org/r/9231/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/018e4a930e001fc6b7b81c0a62de7b90e6cea077", "message": "Always call parent setUp/tearDown methods in test suites.\n\nWe had a number of test suites that weren't calling their parent class's\n`setUp()` or `tearDown()` methods. Strictly speaking, it's not necessary\nto call these in these cases, but it will be important down the road if\nthere are any changes in the inheritance. To keep things consistent and\nsafe going forward, the parent methods are now called in every suite.\n\nTesting Done:\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9230/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/96c5e8270451470f0db68ea8aee866c82819eea2", "message": "Fix a model contamination issue with TestModelsLoaderMixin.\n\nA recent unit test was affected by a bug in `TestModelsLoaderMixin`\ncausing a models module to remain in Django's cache after the test suite\nconcluded. This only happened if a subclass defined a tests app that\nalready contained a `models.py` file. If it didn't define a specific\ntests app or didn't include a `models.py`, then the cleanup would work\ncorrectly, but if both were present then it would fail.\n\nThe reason for this inconsistency is that if a valid `models.py` didn't\nexist, we'd create one and store a reference to it, which allowed us to\nlater remove it from the module cache. If one already existed, then\nthere wouldn't be a reference, so it never got removed.\n\nThe logic for this is now a bit more careful to explicitly check for a\n`models` module and to store it. If we can't import, we then proceed to\ncreate a module and store that. This ensures we always have a module to\nwork with and to clean up at the end, fixing all tests.\n\nTesting Done:\nAll unit tests pass. Before this change, some failed with unknown app\nerrors involving models from prior test suites.\n\nReviewed at https://reviews.reviewboard.org/r/9229/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/46d856cc81fb772edb4e5bf180dea5678da6c714", "message": "Enforce stricter file-level closures in JavaScript code.\n\nWith the move to ES6, we've been using `{ ... }` around files that need\nto define local variables and assuming Babel would do the right thing.\n\nIt doesn't.\n\nEach resulting variable defined on a file level ran the risk of being\nredefined by another file, and this would break all sorts of things in\nconfusing ways when that variable is accessed by any other code. The fix\nto this is to go back to wrapping files with `(function() { ... })()`,\nwhich is the only way to guarantee safety.\n\nAll files using simple braces around the file contents to enforce scope\nhave been updated. All future files will need to use the old form to\nensure safe scoping rules.\n\nTesting Done:\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9188/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/a25e8de7de0bb416b898fcabc8d38812bb418dff", "message": "Add a class-based view mixin for checking if HTTP methods are allowed.\n\nDjango's base View class for class-based views performs a check before\ndispatching to make sure that the HTTP method in question is allowed,\nreturning a HTTP 405 if not. While useful, this is too late for more\ncomplex views that are performing other (potentially method-specific)\nlogic before reaching `View.dispatch`.\n\nThis change introduces `CheckRequestMethodViewMixin`, which can be\nplaced at the beginning of the inheritance list to handle the checking\nearly. It will perform the same checks that `View.dispatch` performs,\nbut can be done before any other mixin dispatch methods are invoked.\n\nTesting Done:\nUnit tests pass.\n\nMade use of this in another change and verified the dispatch handlers\nnever got called for unsupported HTTP methods.\n\nReviewed at https://reviews.reviewboard.org/r/9127/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/e66edfa29623d3b527da25f71496a5387e62dbb6", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/517d9598bdc1958c0e174fdae7374d500a7ec6b2", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/627ef56d80b10fd427765a68d6548c91603265d8", "message": "Bump to 0.9.10 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/29f2d6c3e1c1196fbebcf3e5510135d4f8227138", "message": "Release Djblets 0.9.9."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f6ca186494e4a4fe50179760c59e463732fac538", "message": "Add release notes for Djblets 0.9.9.\n\nThis covers the new styles for Markdown tables, fixes for extension\nbuilding, and fixes for multiple uses of @webapi_request_fields when\naugmenting functions."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/bde99f2d4b2e23494f997ea9eea065e948267932", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/06741b9006d4fa3c590394d714e4edbfa8a8f203", "message": "Fix and improve styling for links in the datagrids.\n\nOur datagrids were rendering with extra, unwanted `<a>` tags for some\ncolumns. Part of this was due to an old change that regressed the\n`link=False` semantics, causing this flag to just result in `link_func`\nbeing ignored rather than disabling linking. Another part was due to the\nusage of `<div>` within `<a>`, which isn't legal and caused the browser\nto do odd things that easily resulted in duplicate tags. Still another\nwas the need for rendering custom `<a>` tags as part of the cell data\nwhen in need of a custom CSS class (which often resulted in extra tags\ngiven the `link=False` breakage).\n\nNow, `link=False` is respected. When provided, links will not be\ngenerated for the row's object in the data automatically. Similarly, if\n`link_func` fails, the URL won't fall back to the URL for the row's\nobject.\n\nThe `<a>` tags no longer contain a `<div>`. Instead, we just assign\n`display: block` to the `<a>`. The cell also gained a `has-link` CSS\nclass to help with styling, so that there's no impact on custom `<a>`\ntags within the cell.\n\nColumns can now accept a `link_css_class` attribute, which specifies the\nCSS class names (or a function returning them) to apply to the `<a>`,\nreducing the work that a column has to do and reducing the amount of\ndata that must be cached.\n\nThis shouldn't outright break any consumers unless they're using\n`link=False` and still expecting links to show up (which wasn't really\never the intended behavior). However, they can now take advantage of\n`link_css_class` to reduce the data they must render.\n\nTesting Done:\nTested with Review Board, both the current upstream and with a change\nthat takes advantage of the new `link_css_class`.\n\nReviewed at https://reviews.reviewboard.org/r/9080/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f011f452e5c89665cc412f6882b7e6a751022625", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5d26a4a0c858c18696aef32a0823ee1d995fb91d", "message": "Add/rework the options for {% attr %} and {% definevar %}.\n\nMy recent change added some control over stripping to `{% definevar %}`\nand made stripping mandatory for `{% attr %}`. This change builds upon\nthat by refining the behavior and adding more options.\n\n`{% attr %}` now condenses the whitespace within the value by default\n(turning sequences of spaces, tabs, and newlines into a single space).\nAll the new behavior can be turned off with the \"nocondense\" option.\n\nIt also now marks the value as unsafe, instead of making that the\ncaller's responsibility.\n\n`{% definevar %}` now has a `strip` option for stripping\nleading/trailing whitespace (replacing the new `stripped`), a\n`spaceless` option for making the text spaceless (equivalent to wrapping\nthe value within as `{% spaceless %}`), and an `unsafe` option for\nmarking the value as unsafe.\n\nAlong with this (and to support these options), `@blocktag` now works with\ntemplate tags taking `*args`. When found, the check for the maximum number\nof arguments will be turned off.\n\nTesting Done:\nUnit tests passed.\n\nReviewed at https://reviews.reviewboard.org/r/9055/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2474d8a0cbd42689dc57dfebbdb87a2f5c9bf586", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/422435e8d2ba34993022fa434fd04f6f71bdcdcb", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4a1723c4734b05f0c9228b1f52a8afcfc6f55357", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/127d0ce3072bb9c32909d52244eee3fa22121547", "message": "Add generic view mixins for ETags and finer-grained dispatching.\n\nThere are two new mixins added for generic views: One for working with\nETags, and one for more complex views that need to alter dispatch logic.\n\n`ETagViewMixin` is a mixin that allows for computing an ETag for a generic\nview, checking if the client already has a copy of the content based on\nthat ETag, and setting appropriate headers in the response. This supports\nHTTP GET and HTTP HEAD (but currently no other methods).\n\n`PrePostDispatchViewMixin` is useful for views that want to run logic\nin the dispatch phase but also make use of mixin that add decorators to\n`dispatch()`. Since the view's `dispatch()` would run before the ones\ndecoratored in the mixins, there wasn't a good way to override dispatch\nbehavior (calculating state, checking access permissions, or augmenting\nresponses).\n\nThis mixin solves this by splitting the `dispatch()` method into a\n`pre_dispatch()` and `post_dispatch()`. When placed after mixins adding\ndecorators and before mixins altering `dispatch()` logic, views will be\nable to get custom logic into the dispatch phase.\n\n`pre_dispatch()` can calculate state and optionally return a response to\nsend directly to the client (useful for access checks).\n\n`post_dispatch()` can take a response from the HTTP handler and alter\nit. It can even return a custom response, if needed.\n\nTesting Done:\nUnit tests pass.\n\nTested manually with some new views I'm writing.\n\nReviewed at https://reviews.reviewboard.org/r/8998/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4b4aa8c825eef38f40f3b8219515115ee1b0bbae", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/9a69da50373fc16351c14fc07e94c053a26cbdc9", "message": "Add whitespace stripping to the {% attr %} template tag.\n\nThe `{% attr %}` template tag now strips whitespace at the beginning and\nend of the value. It used to do this when considering the contents, but\nthen preserved the whitespace when injecting it into the value. Since\nit's unlikely callers (which tend to use this for CSS class names) want\nto retain leading/trailing whitespace for rendered values, the\nwhitespace is no longer preserved.\n\nTesting Done:\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9051/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/77280e4faf5d78d26edd3c2b211f9f37fb4411b2", "message": "Add a \"stripped\" argument to {% definevar %}.\n\nThe new \"stripped\" argument allows for more expressive multi-line values\npassed to `{% definevar %}` without worrying about the leading or\ntrailing whitespace that would occur. The argument will strip away the\nwhitespace before storing the value in the context.\n\nThis required a new `resolve_vars` option to the `@blocktag` decorator,\nwhich controls whether the arguments passed to the template tag function\nwill be automatically resolved as variables. By default, they continue\nto be resolved, but this behavior can now be turned off.\n\nTesting Done:\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/9050/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d69271c96bfe202fe295e67be0462db959c7db2b", "message": "Fix the location for the Djblets defs.less file.\n\nThis file was added in a recent change that implemented Markdown tables,\nbut it didn't place the file in the right path, causing static media to\nbreak. This is a trivial change that moves defs.less to the right\nlocation."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6a9e5d93ce0d5dc1d46c9018fb48f7c7619ffed9", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f39f80c0790ca53e2669067412d1808e686636cf", "message": "Add new side anchor options for $.fn.positionToSide().\n\nThis enhances `$.fn.positionToSide()` to accept new side codes: `T`,\n`B`, `L`, and `R`. These are similar to the original codes, but rather\nthan positioning such that the element is fully outside the anchor\nelement (with distances extending the element outward), these codes\nposition so that the positions are anchored within the element (with\ndistances extending the element further inward). This allows for easily\npositioning (for instance) the left edge of an element 20 pixels to the\nright of the left edge of another, or the bottom of an element 20 pixels\nabove the bottom of another.\n\nAlong with this, distances can now be set per-side, instead of only\nallowing for setting X/Y distances.\n\nThese changes together allow for a lot more control over where elements\nwill appear in relation to other elements.\n\nDocs have been updated to document all the options and defaults.\n\nI've also fixed some redundant jQuery wrapping and a bug preventing this\nfrom being used in multiple elements at once.\n\nTesting Done:\nVerified this works with our existing calls, and tested all the new options.\n\nReviewed at https://reviews.reviewboard.org/r/9022/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/b5d0b8fa69f3bafdb76db16b1a2a5714bce1b995", "message": "Fix building extension packages using LessCSS or UglifyJS.\n\nExtension package building hit a regression when building against\ninstalled versions of a product utilizing Djblets. Pipeline was looking\nfor LessCSS and UglifyJS relative to the product's node_modules\ndirectory, rather than the one generated for the extension.\n\nThe reason this was happening was that the Pipeline settings being set\nwere for Pipeline 1.6.x, which is used on Djblets 0.10, and not Pipeline\n1.3.x, which is used on Djblets 0.9. This meant that the defaults for\nthe product were being used instead.\n\nThose defaults could also be overridden. We had code designed to\nre-populate Pipeline's versions of the settings based on what was in the\nproduct's settings, but these were overriding the newly-set values. We\nnow re-populate before computing new values.\n\nThe latter part applies to Djblets 0.9 and higher. The settings names\nare specific to Djblets 0.9 and will not be merged up to 0.10.\n\nTesting Done:\nReproduced the failure with an extension. Verified it was fixed with\nthis patch.\n\nReviewed at https://reviews.reviewboard.org/r/9014/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c7cc75f023591162d16e309d31340e0767b3c0cf", "message": "Bump to 0.9.9 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/3742ffb9b03a80983aa0f2d61d1b61a9cd8dfcfa", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/0fb86db2b015738b6d2cb592440820d8f1b206d7", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/1b37ab06ecbc507f8275ac8d560eeec2494274b8", "message": "Release Djblets 0.9.8."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/8d8e1656410cc6a324a69126a1a293e858bc5c36", "message": "Add release notes for Djblets 0.9.8.\n\nThis is a small release that contains only a couple internal\npackaging-related changes (which don't affect consumers) and a backport\nof Django 1.8's URLValidator.\n\nTesting Done:\nBuilt the docs and tested that the URLValidator link went to the right\nplace.\n\nReviewed at https://reviews.reviewboard.org/r/9023/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/7d308010b5fa50e900a40e5b4a609f534ef853b5", "message": "Add a logging config option to blacklist specific loggers from logging.\n\nThis adds a new `LOGGING_BLACKLIST` setting that can be set to a list of\nlogger names that you want to prevent from logging to any handlers. Any\nloggers listed, or any descendants of those loggers, will be ignored.\n\nThe blacklist defaults to the `django.db.backends` logger, which will log\na large amount of SQL query output. Projects or users can override the\nlist to include other logger names.\n\nTesting Done:\nTested that SQL output was no longer being logged, but everything else\nwas. Tested adding custom loggers as well.\n\nReviewed at https://reviews.reviewboard.org/r/8994/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/554782123d097738097b3c25baccc0845b2b5da0", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4d28588412865d37d1c5997869c64501f6895833", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/464a93f7ae5e833cbc254b868a0fd7fe53eacee9", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/9290d3a537bb2b006cb0992b5e2a81bea0cb3f5c", "message": "Don't attempt to ship the less-imports.js file in setup.py.\n\nThis was intended to be part of my original change. Now that the file is\nbundled in the package, setup.py no longer needs to try to ship the\ncontrib version (which didn't work with wheels anyway).\n\nThis is a trivial change."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5a444366cc98461af7548cc6afaf7d4e069e088d", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/abf057290bf62757224da64d6256aabed52a8e91", "message": "Allow less-imports.js to be used in installed Djblets builds.\n\nThe less-imports.js was being shipped in the contrib/ directory. While\nfine for development builds and eggs, it didn't work at all for wheels.\nTo fix this, less-imports.js has been moved into the package alongside\nthe custom LessCSS compiler, and the path has been updated to point to\nthis.\n\nTesting Done:\nTested this on the build server. Before this, the build was failing\nsince the script could not be found. After, it successfully found the\nscript and executed it.\n\nReviewed at https://reviews.reviewboard.org/r/9011/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/325e14403109dfe1c2707d181e7a0b5c36271dcb", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/50676d0811ebf4094f85ba425b5abb5036a9ca7f", "message": "Develop against Markdown 2.6.x.\n\nThis is a trivial change that bumps the Markdown dependency version to\n2.6.x, which is now supported by Djblets. This prevents a version\nconflict with Review Board, and ensures we're testing the new Markdown\ncode properly against the latest releases."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/735ca98f3e24c716dbe974ced2e576723effa820", "message": "Add compatibility with Python-Markdown 2.5 and 2.6.\n\nOur Markdown extensions and rendering logic made use of features or\nimplemented functions that have been deprecated in Python-Markdown 2.5\nand 2.6. There were also behavioral changes since 2.4 that impacted our\nWYSIWYG rendering.\n\nThe signature for `makeExtension` has changed, and the `safe_mode`\nargument is scheduled for removal. To handle these changes, our\n`makeExtension` functions now accept variable and keyword arguments,\nwhich will work across all versions. To replace the `safe_mode`\nargument, we now have a new `EscapeHTMLExtension`, which makes use of\nPython-Markdown's recommended way of enabling escape mode (with some\nsmall changes to prevent problems when using both the extension and\n`safe_mode` in code that still needs to be migrated).\n\nThe WYSIWYG extension was seeing regressions in newline handling. The\nextension overrides Python-Markdown's postprocessor for replacing\ninternal HTML placeholder markers with stashed HTML (needed by\nextensions and certain Markdown directives) and attempts to prevent\ntrailing newlines from being injected. The implementation of\nPython-Markdown's version changed, breaking the method we used to\noverride the behavior. We now have a re-implementation of this processor\nthat does an even better job of working around the newline issues, and\nis actually faster than the original version.\n\n`Markdown.ESCAPE_CHARS` was also no longer available. It's defined only\nwhen an instance is created, which is a fairly heavy-weight operation\n(for these purposes). Since the list has not changed since it was\nintroduced, it should be safe for us to define this ourselves.\n\n2.7 will also need to now specify the full module path for all\nextensions, including Python-Markdown's built-in extensions. Djblets\nonly specifies extension names in the tests, so this is a simple fix.\n\nWith these changes, clients will be able to use any version of Python\nMarkdown from 2.4 through 2.7, and likely future versions as well.\n\nTesting Done:\nUnit tests ran against Python-Markdown 2.4 (our currently supported\nversion) and 2.6.\n\nTested with my real-world and crazy Markdown tests on Review Board with\nboth versions of Python-Markdown.\n\nReviewed at https://reviews.reviewboard.org/r/8988/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/14198c5993620b5cf5434dd34d6f4d38c2fc3b42", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/254b250a3339b9c8e11de23a4e6484e11dd49b29", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/b31da4a3b864f9ede3d87932c33ce144cb8b6d53", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/30c21ff1ec9a23373e5edd930c7a4b063e223d0f", "message": "Split the docs-specific dev dependencies into doc-requirements.txt.\n\nSome versions of our modules still support Python 2.6, but Sphinx 1.6+\nhas a dependency on the typing module, which does not. In order to\nprevent development environments (such as from CI) from failing, and to\nreduce the requirements for contributors, the docs-specific requirements\nhave been moved into doc-requirements.txt. These are completely\noptional, and only needed when building the documentation.\n\nThese dependencies can be installed either by manually running\n`pip install -r doc-requirements.txt`, or by passing `--with-doc-deps`\nto `setup.py develop`.\n\nTesting Done:\nTested `setup.py develop` with and without `--with-doc-deps`, verifying\nthat `Sphinx` and `beanbag-docutils` were only installed when using\n`--with-doc-deps`.\n\nReviewed at https://reviews.reviewboard.org/r/8977/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/09d958c9328b61e94c1bade6fce91516ddae4d28", "message": "Bump to 0.9.8 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/cdb807a0cbb2c51fb3e9c051142c163e592ef736", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/3dd5c4ced4b27a56598290a32aa0cbf89cde4bbc", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5a42a45731e30b8594c3174e3aaab079947f03cb", "message": "Release Djblets 0.9.7."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/0013fb1b64dbe9b133b8e2b14bd995085474663a", "message": "Added release notes for Djblets 0.9.7.\n\nThis covers the extension static media fixes, performance improvements,\nimproved multi-touch proxying, and packaging improvements.\n\nIt also updates our doc building to use beanbag-docutils, proper\nintersphinx prefixes, and more.\n\nTesting Done:\nBuilt the docs. Checked for errors and checked links.\n\nReviewed at https://reviews.reviewboard.org/r/8973/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/cffa33eec7c6e2b235843ff7d065fae2551ce040", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c61d9c33b15280be8f53c51d3b43bac0ea2fef5f", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2a212426ac73af4b83b82594f0ef4748bada78be", "message": "Update the touch event proxying code to better represent mouse events.\n\n`$.fn.proxyTouchEvents()` now simulates mouseover/mouseout events, better\nhelping to make touch events compatible with more pieces of UI (in\nparticular, for the purposes of this change, jQuery-UI's `resizable`\nwidget). It now keeps track of what elements the user has moved their\nfinger over in the calculation of the events.\n\nTouch events are only proxied if using one finger. Gestures are left\nalone so that the page or browser can handle them.\n\nThis does not yet implement the mouseenter/mouseleave events, though,\nwhich are a bit more complicated to get right.\n\nTesting Done:\nTested with Review Board's comment dialog, which utilizes the `resizable`\nwidget. Saw that I was able to drag the handle around, verifying that the\nmouseover/mouseout events were working.\n\nReviewed at https://reviews.reviewboard.org/r/8932/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/56b2b4e2c63b81fd0daaa321163a18a76b082f73", "message": "Capture and report errors when extension media installation fails.\n\nIt's possible (and not very hard) to get into situations where extension\nmedia installation fails. For instance, if there are\npermission/ownership issues, we can fail to remove existing extension\nmedia and crash when installing new media. This results in HTTP 500\nerror pages as each access then tries to repeat the media installation,\nunsuccessfully.\n\nWe now look for these failure cases, catching the errors and reporting\nthem in a more helpful way. The pages no longer crash (but may not work\nas expected), and admins can get a hint as to what's wrong in the error\nlogs.\n\nTesting Done:\nTested against a failure case on our server.\n\nReviewed at https://reviews.reviewboard.org/r/8926/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/530ab4ed7359c3d59ad4ac5e81d291ec38edd6f9", "message": "Fix a regression in clearing the app cache on extension initialization.\n\nThe work done to improve extension management, loading, and Django\ncompatibility in Djblets 0.10 regressed clearing the app cache state for\nDjango 1.6. We were only resetting the app cache's loaded flag if\nattempting to update the database, which wasn't enough. Amongst other\npossible regressions, this prevented evolutions from being able to be\nupdated.\n\nThe clearing has now been moved out of the database upgrade code and\ninto the methods for manipulating the list of installed apps.\n\nTesting Done:\nVerified in a shell that the extensions were listed as part of a\n`get_apps()` call, which wasn't the case before.\n\nDeployed this to reviews.reviewboard.org, and verified that it was\nincluding our extensions when considering database upgrades.\n\nReviewed at https://reviews.reviewboard.org/r/8927/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/9948996d50b81c5814083acd1bfd2c25a6866624", "message": "Capture and report errors when extension media installation fails.\n\nIt's possible (and not very hard) to get into situations where extension\nmedia installation fails. For instance, if there are\npermission/ownership issues, we can fail to remove existing extension\nmedia and crash when installing new media. This results in HTTP 500\nerror pages as each access then tries to repeat the media installation,\nunsuccessfully.\n\nWe now look for these failure cases, catching the errors and reporting\nthem in a more helpful way. The pages no longer crash (but may not work\nas expected), and admins can get a hint as to what's wrong in the error\nlogs.\n\nThere's also a fix for an exception handler's error reporting where the\nerror attempted to use the exception instance, which wasn't defined\nduring the capture.\n\nTesting Done:\nTested against a failure case on our server.\n\nReviewed at https://reviews.reviewboard.org/r/8926/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/9841078771e79736ec617deec1f7f9d083745b45", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4071d5cf190c4982046aef3d7d1f2b90cbdaf32e", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/20895e035692b1947c0e9b6684f341c64a3b190b", "message": "Use logger names for all logging statements.\n\nEach module that logs content now uses a module-level logger. This adds\nsome context to log messages and makes it easier to scan for log\nmessages related to a given module. It also would allow for filtering of\nlogs, if the consuming application wanted.\n\nThe default log message format in djblets.log includes the logger name\nfor each log message.\n\nTesting Done:\nUnit tests and pyflakes pass.\n\nTested various log messages to see that the names were appearing in the\nlog output.\n\nReviewed at https://reviews.reviewboard.org/r/8898/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/ced0c1b50d45479861505b84d0a70b177502e206", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/398b502731ccbe0f9245b08a6c981fcf46a4b518", "message": "Fix overzealous saving/clearing of the siteconfig cache for avatar settings.\n\nWhen populating the avatars registry, the list of enabled backends and\nthe default backend are saved into the siteconfig, which then results in\nthe siteconfig being dirty. This can cause the siteconfig cache to be\nemptied too often, as it's being cleared on all threads every time a new\nthread spins up, along with a couple times during initial setup of the\navatar support.\n\nNow the settings are conditionally written to the siteconfig only if\nthey've changed, ensuring we don't save unless we have something useful\nto save\n\nTesting Done:\nUnit tests pass.\n\nNo longer saw my debug info showing the siteconfig cache was being\ncleared, or the extra siteconfig database queries.\n\nReviewed at https://reviews.reviewboard.org/r/8874/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5ec2912cd1cad96a3a20ea5857e9ed2d1de0d465", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/08976bdf623b5305fad33f00c2c9fd3d4798b85a", "message": "Fix a performance issue with datagrids using chained select_related calls.\n\nDatagrids allow columns to augment the queryset, pulling in additional\nfields if needed. While we've generally gotten away with this, it\ndoesn't really work well in practice on Django 1.6, because calls to\n`select_related()` do not chain. They've fixed this on newer versions of\nDjango, but we can't depend on those for this.\n\nThe good news is that they can be made to be chainable by merging the\nselect_related dictionaries on querysets. This format is standard on all\nversions of Django 1.6 and higher.\n\nThis change introduces a `chainable_select_related_queryset` function that\ntakes in a `QuerySet` and returns a version supporting chaining. On Django\n1.6, this returns a special subclass that handles merging. On newer\nversions, this simply returns the provided `QuerySet`.\n\nDatagrids make use of this to ensure that all `select_related()` calls\nfrom queryset augmentation will stay performant and won't\nunintentionally drop `select_related()` fields.\n\nTesting Done:\nUnit tests pass.\n\nManually verified that different `select_related()` calls were being\nfactored in for the datagrid.\n\nReviewed at https://reviews.reviewboard.org/r/8877/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f9b1244c74939b72cf3f1b8630a320fd2dc5665b", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d3478d8ae4ded221bd63b3754d4cb6ffc8f65edb", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/22580f8e4cf7a24462411366d77c3f414f038585", "message": "Fix the date for the 0.10 beta 1 release notes.\n\nThis was still marked as TBD."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/11cecc4a1ca084a08b96c1f1e925628f56b71dbe", "message": "Bump to 0.10 beta 2 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d26d902223fafbed0d6c584da94ccd3833f97a93", "message": "Release Djblets 0.10 beta 1."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4173c67d11b1a8b2907700c7e8e347c3dea44978", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/e7ae9f274958dd04779242dac4d6f871b54a6aa8", "message": "Fix the date for the 0.10 beta 1 release notes.\n\nThis was still marked as TBD."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2376044a72bc88ef008070bea90d70192fcc13a8", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/a5031c22f42bb213c8cbe2fc96f96e1431636c69", "message": "Bump to 0.10 beta 2 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/de9cdb418b1ee448a62dbd9cb612b4cc7a58668b", "message": "Release Djblets 0.10 beta 1."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/1bc22715abcd66b275e3f4fb2e099a781b3ceb22", "message": "Add release notes for Djblets 0.10 beta 1.\n\nThis covers all the new features going into 0.10 beta 1, including\nintegrations, conditions, avatars, feature checks, registries, form\nimprovements, and much more.\n\nThe documentation also references the upcoming 0.9.7 release, which is\nnot out yet but should be by the time we release 0.10 beta 1.\n\nThere are also fixes for reference linking, both in the Djblets guides\nand the code base documentation.\n\nTesting Done:\nBuilt the release notes and read through them.\n\nChecked for spelling errors and doc build warnings.\n\nReviewed at https://reviews.reviewboard.org/r/8848/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/ed2e19437222d836c97a5fffc225ffd353206af5", "message": "Fix the integration and extension pages on default Django setups.\n\nThe integration and extension pages weren't styled in a way that worked\nin the default Django administration UI. There are CSS classes we should\nhave been working with that would handle some of the important styling\nfor us, but we were ignoring those and doing the work ourselves, which\nonly ended up looking correct in Review Board.\n\nThe integration listings template in particular was very wrong,\ninheriting from the admin change page template, which brought with it\nsome unwanted static media, elements, and class names.\n\nThe extension management scripts were also assuming the presence of a\nSITE_ROOT variable, which is defined in Review Board. It also assumed\nthe API would be in a certain location. Now the API URL is looked up in\nthe template and passed to the JavaScript, which handles it through\nnormal Backbone means.\n\nThis ends up fixing these pages on Review Board and on default Django\ninstalls, and will help with future administration UI styling work.\n\nTesting Done:\nTested the extension and integration pages on Review Board and on a\nplain Django administration UI.\n\nReviewed at https://reviews.reviewboard.org/r/8791/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/ca522af5015a3fbb68cbeab72c71482bcdbffc14", "message": "Make our administration templates/scripts work on default Django setups.\n\nMuch of Djblets's administration widgets and template code was based on\ncode we had in Review Board. For many many years, Review Board had a\nheavily customized administration interface, and we've been testing\nagainst this. Unfortunately, the code we had in Djblets didn't quite\nwork right in a default Django install. There were style problems,\nscript problems, and blocks that had to be specially defined in a base\ntemplate in order for pages to work.\n\nThis change is the first step to addressing that and making our code\nwork in both Review Board and standard Django setups.\n\nA new base template, djblets_forms/admin/base_site.html, has been added.\nThis is now used in our templates instead of admin/base_site.html, and\nis built to give us a few new blocks to work with: `admin_css`,\n`admin_scripts`, and `admin_scripts_post`. These replace the old `css`,\n`scripts`, and `scripts-post` blocks that were defined in Review Board.\nThese new blocks are guaranteed to be available to any child templates\non a standard Django install. Applications like Review Board will get\nthem for free as long as they don't override the parent blocks or if\nthey specially declare the new blocks themselves in a base template.\n\nThe template for custom change forms now has support for a top-level\n\"media\" variable, like the standard template. It doesn't require a\nversion on the form anymore. Some other changes are coming soon to this\ntemplate.\n\nThe scripts we inject into the page that for integration operations and\nthe conditions field are now compatible with the version of jQuery that\nDjango supplies in the administration page. If a custom version of\njQuery is injected into the page, that will take precedence.\n\nThe djblets-forms JavaScript package no longer requires other Djblets\nJavaScript packages to be loaded. It was previously depending on a\npre-existing `window.Djblets` variable, but it now defines this if not\nfound, like other packages do.\n\nWith these changes, most of our code working with the administration UI\nis now compatible out of the box on any new Django project. Some work is\nstill required to fix up assumptions and bad styling in the extension\nand integration pages, which will be coming in an upcoming change.\n\nTesting Done:\nTested that the settings forms, integration list, integration\nconfiguration, extension list, extension configuration, and log\nviewer pages loaded and worked on Review Board, and mostly worked on\na plain Django admin UI (some work is needed here, which will be done\nseparately).\n\nReviewed at https://reviews.reviewboard.org/r/8790/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f1f54e79db599024777a232585da0955e3e5a347", "message": "Don't attempt to unregister integrations after shutting down.\n\nWhen a process terminates, both the extension managers and integration\nmanagers are shut down, clearing all state. The order in which this\nhappens is not guaranteed, and it's very possible (and likely) for the\nintegration managers to shut down before the extension managers. When\nthis happens, any integrations registered by an extension through\n`BaseIntegrationHook` will fail to unregister, leaving a handful of errors\nin the console or logs.\n\nWe now have an enabled state on `IntegrationManager` that indicates\nwhether operations can be performed on the manager. This is set when\ninitialized, and cleared after calling `shutdown()`. `BaseIntegrationHook`\nnow checks this before attempting to unregister, keeping logs clean.\n\nTesting Done:\nRan some management commands and stopped seeing errors during shutdown.\n\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/8781/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/636c0f244c2a6806ff436358ea9f325320f59bcb", "message": "Rework tracking of extension versioning for media and database updates.\n\nWe previously used a database-stored setting for determining whether\ndatabase upgrades and static media installation was needed. This worked\nokay for databases, but made media installation across multiple servers\ntricky (since the first install would store the version and the next\nwould think it had the latest version). The recent Djblets work for\nfixing some bad code ordering for extension initialization also ended up\nregressing the versioning checks, causing database syncs to happen many\ntimes during load.\n\nThis change reworks how version information is stored and accessed. The\ndatabase-stored setting still exists, but is now used to determine\nwhether we should synchronize/upgrade the database tables. It's no\nlonger used for static media at all. We can now be fine-grained with\nsetting this, fixing the problem of too many database syncs.\n\nWe're also careful to check for downgrades, in which case we don't want\nto attempt a database sync that would surely fail (in this case, it's up\nto the author to have a schema that works across the newer version and\nolder version that they may still have in production on another server,\nor needed to revert down to).\n\nThe version information for static media now lives in a file in the\nextension's static media directory. If it doesn't exist, or doesn't\nmatch the current version (it's older or even newer), we re-install\nstatic media. Since that file is local, the installation of the media\nhas no effect on other servers.\n\nWe also no longer install htdocs media. That's been deprecated for a\nlong while now. We do still look for htdocs media and log a warning so\nthat authors will hopefully notice it and migrate to shipping a static\ndirectory.\n\nUnit tests have been updated to test the various conditions for both\ndatabase synchronization and media installation.\n\nTesting Done:\nUnit tests pass.\n\nTested that extensions weren't repeatedly triggering a syncdb during\nthe loading of the extension manager (most noticeable with management\ncommands).\n\nTested media installation and manipulation of the version file.\n\nTested database synchronization and manipulation of the version setting.\n\nReviewed at https://reviews.reviewboard.org/r/8782/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d56d48e22d61d243b11a82c21c4d5613653c3a08", "message": "Fix constant recalculation of integration configurations.\n\nWe have code that attempts to check if the local configurations state is\nstale, due to new integrations being registered or another\nthread/process changing configuration. We have a flag that determines\nwhether we need to perform a recalculation due to local configuration\nchanges, which we happily set to True when registering an integration\nbut fail to ever set back to False, meaning that once expired, always\nexpired. This leads to a recalculation happening per-request, which is\nnot at all efficient. Unfortunately, unit tests failed to check for\nthis.\n\nWe now simply clear the flag after recalculating, as intended. Unit\ntests have been updated to check that the resulting state is correct.\n\nTesting Done:\nUnit tests pass.\n\nNo longer saw a SQL query for configurations for every HTTP request.\n\nReviewed at https://reviews.reviewboard.org/r/8780/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5b50b843a36fb44504f7fb22c8ccd85ce684e333", "message": "Fix looking up static media needed for Condition value fields.\n\n`ConditionsWidget.media` attempted to look up media files needed for all\nwidgets that comprised the input for the conditions. This didn't\nactually work in practice, and failed silently on template load. There\nwere a couple of problems, including the assumption that the default\nvalue field for a choice was not dynamic, and that all value fields had\nform widgets.\n\nThis fixes up that code, allowing media to be properly loaded for all\nfields in the widget.\n\nTesting Done:\nTested along with some other changes that made use of widget media.\nVerified that this was no longer crashing and that the media was able\nto be returned for the page.\n\nReviewed at https://reviews.reviewboard.org/r/8788/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/99caba0c2e9268ecd3ff28bff38a7bc858eaf56f", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/017e364de00c4a213aa9fa49f57fffd295047ba0", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/439c98e690fe21df5303aa26f5e1c51bff25cde7", "message": "Bump to 0.9.7 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/8981540532ab83622d3f96935f2ef0bef8e3262a", "message": "Release Djblets 0.9.6."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4140c651fe89614d57f4477d3eac50fc1234bced", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6df87f2e000df36237cf88c687e6dd0d0d5caaeb", "message": "Bump to 0.8.30 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/bcedb6e4335752f4cb62f99abe9d58c3d0258917", "message": "Release Djblets 0.8.29."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c1a87b3ed8fb33ba899a9ff496844fc201a35bf3", "message": "Add release notes for Djblets 0.8.29.\n\nThis is a small release that fixes a bug in djblets.configforms, a\nregression in djblets.testing.testrunners.TestRunner, and works\naround `logging.exception` bugs in older versions of Python.\n\nTesting Done:\nBuilt and read the release notes.\n\nReviewed at https://reviews.reviewboard.org/r/8753/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6d5af48da592711947784f636ba9d37ad808eec7", "message": "Add release notes for Djblets 0.9.6.\n\nThis is a small release that fixes a bug in `djblets.configforms`,\na regression in `djblets.testing.testrunners.TestRunner`, and works\naround `logging.exception` bugs in older versions of Python.\n\nTesting Done:\nBuilt and viewed the release notes.\n\nReviewed at https://reviews.reviewboard.org/r/8754/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/651eae9a5a176ee961629f8538136f247821d414", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/128b19fac8474da84665eb1364ff4c52d07de5d8", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/926cc21d17b5e2e277a245d3cead57c08b3c4cbe", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6c2e1c1ae558d6fd041a64ef4ff85e45db37a707", "message": "Fix support for request= keyword arguments for logging statements.\n\nFor a long time now, Djblets has provided support for providing a Django\nHTTP request to logging statements through a `request=` keyword argument.\nThis has generally worked, but some users have encountered somewhat\nsporadic problems with this. This turns out to be related to our move to\nusing `logging.exception()` instead of `logging.error(..., exc_info=True)`\nin places.\n\n`logging.exception()` was missing support for keyword arguments on\nPython 2.6.x, 2.7.0-2.7.5, 3.0.x, and 3.1.x. 2.7.6+ and 3.2.x+ fixed\nthis, but anyone running an older version would not be able to use\n`request=` or even `extra=`.\n\nAlong with this, any custom loggers from `logging.getLogger('...')`\nwould fail to support `request=`, because we only patched up the root\nlogger.\n\nThis change fixes these issues by patching any versions of\n`logging.exception()` that are missing keyword argument support, and\nwrapping `logging.Logger` so all loggers will benefit from `request=`.\n\nTesting Done:\nUnit tests passed on Python 2.6 and 2.7. Previously, these new tests\nfailed on 2.6.\n\nSanity-checked that exception logs (and others) worked with `request=`.\n\nBugs closed: 4523\n\nReviewed at https://reviews.reviewboard.org/r/8750/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/152a0f2ee35dc4fecb94f7ce427017d6ce097c4a", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5461b440c43b2957c37e638ac5151f00979714c7", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/1e176984e011382fb02a9d0162fde48b23211461", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/480053b227b7a28caa737316848086e4c6d5dbc6", "message": "Fix a regression in the test runner causing all tests to run.\n\nMy previous fix for the test runner fixed the case where the specific\ntests to be run were appearing in the test_labels argument, preventing\nall tests from being run. However, it broke the case where test_labels\nwas empty but specific tests were provided in argv.\n\nThis change fixes both cases by appending any non-option values from\ntest_labels that don't exist in argv already and then checking the\nresulting argv for specific tests to run. If none are found, we default\nto running all tests from the configured test packages.\n\nTesting Done:\nTested running all tests and specific tests from Djblets, Review Board,\nand RBCommons, with and without using `--`, ensuring all the cases I've\nran into were fixed.\n\nReviewed at https://reviews.reviewboard.org/r/8745/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/7c45b67b259105e277d8126bcc90d712f29333dc", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c418fdce85c91ce52a493bcc682240dd36942231", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d0034c8d4b785a87513193429e5489aecc627df5", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/38a1a57077bf5f5a93584ecf9371bd0aecf5d270", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/83f76b0921accede1d210261ff194da15a6ce20f", "message": "Bump to 0.9.6 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/60958e6a50a04edf7a2d633dd22349293ecb8927", "message": "Release Djblets 0.9.5."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c8a16db59ed7c55a0e03c92465d8ff0b776b9abc", "message": "Add release notes for Djblets 0.9.5.\n\nThis primarily covers the updates to the packaging for both Djblets and\nfor extensions utilizing the Djblets extension framework, along with\nimprovements for JavaScript extensions, the improved @cached_property\ndecorator, new MySQL database backend, and other bug fixes.\n\nTesting Done:\nChecked all commits (including merged commits) for inclusion.\n\nChecked for spelling errors.\n\nBuilt the docs.\n\nReviewed at https://reviews.reviewboard.org/r/8612/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d62de365a31fea224bcac1b58aa55b041884ba41", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/895be2f6ee294807d19144a102fb81a48acf57c6", "message": "Bump to 0.8.29 dev."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6378bb4c53b3a79b1975a9a1a70cddc33ee25f3e", "message": "Release Djblets 0.8.28."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/694cfd65ac333fce2bd009865e88d39bce28d907", "message": "Add release notes for Djblets 0.8.28.\n\nThis covers the updates to the development mode packaging for Djblets,\nthe introduction of the new @cached_property decorator, log filtering,\nand some bug fixes.\n\nTesting Done:\nChecked for spelling errors.\n\nBuilt the docs.\n\nReviewed at https://reviews.reviewboard.org/r/8613/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c061964eea381f46aba7300304e5c0d116bc90f6", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/91fbfdfc2a3f06f23a330c8624ca4572aa374896", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/94a5793562ca29d0fa2201bf6c47e017e196fef0", "message": "Update the extensions code to be compatible with Django 1.6 and higher.\n\nThe extensions code, for many reasons, was not compatible with newer\nversions of Django. We have to do a lot of manipulation of Django state\n(template-related caches, model caches, installed apps, etc.) for\nextensions, and this has all changed since Django 1.6.\n\nThis change adds support for manipulating all this in newer versions of\nDjango, and retains support for Django 1.6.\n\nAlong the way, some problems with how we were doing things were found.\nDue probably to a bad merge at some point, much of the extension\ninitialization code was living in the media installation code and was\nbeing called too late in the cycle. This didn't manifest as an obvious\nproblem on Django 1.6 (though it likely did result in apps not being\nproperly removed when an extension was disabled), but it was a major\nproblem on newer versions (which track apps and state more closely).\nThis code has been cleaned up and ordering has been fixed.\n\nModels weren't being properly cleared from caches before, which wasn't a\nbig problem in practice but could in theory lead to\nintrospection-related problems. These caches are now properly cleared,\nwhere possible.\n\nWe also now call the evolve command from Django Evolution more\ncorrectly, ensuring compatibility not just with various versions of\nDjango but also with changes to the evolve command and its argument\nlist.\n\nUnit tests have been added to check for all the cache-related changes,\nmodel synchronization, and evolution operations.\n\nTesting Done:\nUnit tests pass on Django 1.6 and 1.8 through 1.10.\n\nReviewed at https://reviews.reviewboard.org/r/8707/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/fdb325c9468a8cf91ae94e2d55285dcf3f28f893", "message": "Add utility functions for clearing template-related caches.\n\nThis adds some useful functions for clearing the template caches in the\nloaders and the template tag library caches. This supports the various\ncaching methods used in Django 1.6 and higher.\n\nWe'll be able to use this in the extension manager to safely handle\ncache clearing for all supported versions of Django.\n\nUnit tests were added that ensure this functionality works for all\nversions.\n\nTesting Done:\nUnit tests pass for Django 1.6, 1.7, 1.8, 1.9, and 1.10.\n\nReviewed at https://reviews.reviewboard.org/r/8703/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/72c8f05dcef6267cb8a0debe5d0d33638580bd1f", "message": "Update templates and related config/logic for Django 1.6+ compatibility.\n\nThis makes some changes to our configuration, templates, template tags,\nand imports to be compatible with Django 1.6 and higher. Some of the\nimports and code we were using was already deprecated in Django 1.6, but\nworked anyway.\n\nTemplate tags using `@simple_tag` no longer return content the same way.\nThey're set to conditionally escape, which impacts some of our tags. A\ncouple now explicitly use `mark_safe()`, and another (which is used to\nbuild query strings) that used to not escape now escapes (since the\nampersands should technically be escaped for URLs in HTML).\n\nTemplate configuration has changed. All new template-related\nconfiguration lives in a `TEMPLATES` setting, which encompasses the\ndirectories, context processors, and loaders. Our test suite's settings\nnow retains compatibility with the old style and the new style by\nsetting the old variables and using it to build the new one.\n\nTesting Done:\nUnit tests pass on Django 1.6, 1.7, 1.8, 1.9, and 1.10.\n\nVerified that the template and template tag changes producted the\ncorrect output in real use.\n\nReviewed at https://reviews.reviewboard.org/r/8687/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/787f1b15f193b4e9e99506f9975ffe949eb1588f", "message": "Clean up the extension unit tests and prevent state leakage.\n\nThe extension unit test suite is pretty old at this point and a bit hard\nto work with, due to the hacks that were in place to register\nextensions. Since these were pretty ugly, we often reused the same\nobjects and classes across many tests, and then just bolted things onto\nthe instances. This may have led to some state leaks, and overall wasn't\nnice to work with for new tests.\n\nThis change updates the test suites to construct their own extensions\nwithin the test bodies and to utilize a new mixin class for setting up\nthe extension and extension manager. This means we have a fresh class\nand instance for each test, and makes it easier to create more\nspecialized versions of the classes.\n\nThis is a precursor to a new set of unit tests coming in for extensions.\n\nTesting Done:\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/8706/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/b22fecbb8e1d56990ae99eb9c3f891b0ef895e6e", "message": "Fix bad state assumptions in the DynamicURLResolver tests.\n\nThe DynamicURLResolver tests had an order dependency issue. They assumed\nthat no prior test would populate the URL resolution caches. This was a\nterrible assumption, and the recent extension work broke this.\n\nWe now make sure to clear the URL caches before and after the test,\nfixing this particular problem. Some of the inner workings of the test\nhave also been cleaned up, making the test more self-contained.\n\nTesting Done:\nAll unit tests pass on Django 1.6 and 1.8 through 1.10.\n\nReviewed at https://reviews.reviewboard.org/r/8708/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/18dbeaf253a9351115bd57fa0d31ff4929cdd1e4", "message": "Fix a few issues in running the test suite in Django 1.7+.\n\nThis takes care of a few different breakages in the test suite when\nrunning on more modern versions of Django. These have to do with a\ncouple of individual unit tests, rather than implementation issues in\nDjblets.\n\nIt also fixes up the Djblets test suite runner to use the migrate\ncommand instead of syncdb when populating the database before the test\nruns.\n\nTesting Done:\nAlong with all the other changes going up, the unit tests pass on\nDjango 1.6 through 1.10.\n\nReviewed at https://reviews.reviewboard.org/r/8688/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/3ebacf762f979dd804a60000ae93d71bd82c5174", "message": "Update the custom models tests mixin to support Django 1.6, 1.8+.\n\nOur TestModelsLoaderMixin, while working fine on Django 1.6, had some\nproblems on modern versions of Django. Models weren't gaining their\ncorrect app labels and were appearing in two apps at once. We also were\nattempting to register models that were imported from other modules\n(like User, Site, etc.). Along with this, not all state was properly\ncleared.\n\nThis change fixes the mixin for Django 1.8 and higher. This gives us\ncompatibility with Django 1.6 and 1.8 through 1.10. It does not support\nDjango 1.7 (which Djblets will not officially support anyway), due to\nissues in Django 1.7 that were fixed in 1.8 involving ManyToManyFields\nnot being properly created in the database under these conditions.\n\nTesting Done:\nUnit tests pass on 1.6, 1.8, 1.9, 1.10.\n\nReviewed at https://reviews.reviewboard.org/r/8682/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/646f4acb7997220e4ec4aceaaca50feecba8a9a9", "message": "Update the management commands to be compatible with Django 1.6+.\n\nNewer versions of Django switched to using ArgumentParser instead of\nOptionParser for arguments to management commands, and got rid of\nNoArgsCommand. While ArgumentParser and OptionParser are fairly\ncompatible for most things, the changes to how options are registered in\nDjango management commands were fairly extensive, making it harder to\nkeep compatibility with both.\n\nThis change introduces a compatibility class for management commands\nthat allows the commands to code for the new style of argument\nregistration, while providing compatibility with the OptionParsers used\nin Django 1.6. This can be used by projects that need to keep\ncompatibility between the two.\n\nThe management commands that ship with Djblets have been updated to use\nthe new class and new style of argument registration.\n\nTesting Done:\nTested each command on Django 1.6, 1.8, and 1.10.\n\nReviewed at https://reviews.reviewboard.org/r/8680/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/0f64631d813d03452d7ac3ebd6ae27dae19b1faa", "message": "Improve compatibility and usage of CursorDebugWrapper.\n\nThis improves `CursorDebugWrapper` to be compatible with modern versions\nof Django, and to implement missing functionality.\n\nOur `CursorDebugWrapper` was re-implementing logic from Django's, instead\nof just using the base logic, which didn't make sense and wasn't\nfuture-proof. We now heavily rely on the base functionality.\n\nWe register `CursorDebugWrapper` in a better way. The old way of\noverriding the version on the module wasn't safe, and caused infinite\nloop issues on newer versions of Django. We now instead override the\nmethod on `BaseDatabaseWrapper` that creates and returns an instance of\nthe `CursorDebugWrapper`, which is safer.\n\nLast but not least, we weren't adding stack traces for `executemany()`\ncalls. While Django itself doesn't make use of this method, applications\nmight. We now store the stack trace for these calls as well.\n\nUnit tests were added for both methods.\n\nTesting Done:\nUnit tests pass on Django 1.6, 1.7, 1.8, 1.9, and 1.10.\n\nReviewed at https://reviews.reviewboard.org/r/8685/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/e46ea5ba20f3828362346ec72fc013e4e2fcf341", "message": "Update some database-related logic to support Django 1.6 and higher.\n\nDifferent versions of Django have different accessors and classes for\nparts of the ORM. This change adds compatibility for these accessors and\nclasses in a way that's compatible with Django 1.6 and higher.\n\nWe also have to re-implement cloning of `Q()` objects, since this was\nremoved in a recent version of Django.\n\nTesting Done:\nUnit tests pass for Django 1.6, 1.7, 1.8, 1.9, and 1.10.\n\nReviewed at https://reviews.reviewboard.org/r/8686/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/e8df6fcb826aac0b2cba3e28f47d6b7d0244da5b", "message": "Update ConditionsWidget to support Django 1.6 and higher.\n\nConditionsWidget was previously passing in choices to the render method\nfor the choice widgets, which is no longer supported on modern versions\nof Django. To provide the same behavior, we need to temporarily update\nthe widget's list of choices to be those that we want to render on the\npage.\n\nThis introduces a new internal context manager and some small logic\nchanges to temporarily append new choices to the widgets for rendering\npurposes, reverting them after render is complete. This should be safe,\nas we should be working off of a local copy of the widget and its state\nand not the global version.\n\nTesting Done:\nUnit tests pass on Django 1.6, 1.7, 1.8, 1.9, and 1.10.\n\nTested manually against 1.6 that the widgets were still rendering and\nperforming validation correctly.\n\nReviewed at https://reviews.reviewboard.org/r/8681/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/00d2d6b757bcaefd60ea94b69d5720561cfce87e", "message": "Add anchors, intersphinx mappings, and error fixes for Djblets docs.\n\nThis introduces a couple of anchors needed to easily reference the\nDjblets guides and code reference pages. These are used by Review Board\ntoday, but these corresponding changes never made it into Djblets.\n\nThere's also an intersphinx mapping for setuptools that's used to link\nto code and documentation.\n\nAnd finally, some fixes for errors reported when building the docs. We\nhad some docstrings that were not ReST-friendly, due to indentation or\nbad syntax for references. This fixes up those docs to be error-free.\n\nTesting Done:\nBuilt the docs successfully. No errors reported.\n\nVerified that the Review Board docs could link to the correct pages in\nthe Djblets docs.\n\nReviewed at https://reviews.reviewboard.org/r/8668/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6fee6d9631994c7a597f6e5eb8c8e7b3efe44223", "message": "Add a new MySQL backend for safely working with BinaryFields.\n\nDjango 1.6 introduced a BinaryField type for storing binary content.\nThis is useful, except that, depending on database settings, MySQL will\nperform a UTF8 validation check on the binary content being saved to the\ndatabase. This is clearly not what we want. Newer versions of Django\n(1.10.5+) fix this by declaring the content to be binary, using the\n\"_binary\" identifier when inserting/updating, but older versions are out\nof luck.\n\nThis change introduces a new MySQL database backend that adds this\nsupport for older versions of Django. When activated (by setting the\nbackend in settings.py), binary content will safely get the _binary\nprefix.\n\nThis backend will also allow us to eventually tweak things in the\ndatabase so that we can add better defaults (encodings and otherwise)\nfor databases.\n\nTesting Done:\nSwitched Review Board to use this backend for MySQL. Verified that\nI was able to import all the binary data that was in my old database\nwithout getting an error (which I was receiving before).\n\nReviewed at https://reviews.reviewboard.org/r/8636/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/fe0599f378819d739e1fefd9a778ac73a9610480", "message": "Update all urlpatterns to be compatible with modern Django.\n\nOlder versions of Django (including 1.6) provided a `patterns()` method\nto normalize a list of URL patterns, which included `url()` entries\nand tuples. Modern versions simplify all this, requiring the use of\n`url()`, and removed `patterns()`.\n\nThis change updates all URL patterns in Djblets to use `url()` and lists,\nproviding compatibility with Django 1.6 and higher.\n\nTesting Done:\nUnit tests pass under Django 1.6. URL-related operations are no longer\nfailing under Django 1.10 (at least with the tests I've been able to run\nso far).\n\nReviewed at https://reviews.reviewboard.org/r/8679/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/e5d831c9d5d67dda6a33a8316e983e77a1aee52d", "message": "Update importlib imports to use Python's version instead of Django's.\n\nModern versions of Django no longer ship a backwards-compatibility\nmodule for importlib, since Python 2.7 provides this, and is the minimum\nversion required by Django. Djblets 0.10 also requires Python 2.7, so we\ncan safely rely on Python's version of this module, getting us a step\ncloser to compatibility with modern versions of Django.\n\nTesting Done:\nUnit tests pass against Django 1.6.\n\nThese failures no longer show up on unit tests against Django 1.10.\n\nReviewed at https://reviews.reviewboard.org/r/8678/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4b3142c36691bcfeff8ae66e4d49014f513255c2", "message": "Fix using the preconfigured test_packages in the test runner.\n\nThe test runner tries to respect the `test_packages` variable defined on\nthe test runner, to allow only a subset of tests to run by default.\nHowever, this was broken, as we trusted the `test_labels` variable\nprovided to us, but this could easily support options masquerading as\ntest labels.\n\nWe now filter those test labels, removing anything that looks like an\noption or is already specified in the nose arguments. Since those nose\narguments are built based on command line arguments, this should safely\nremove everything but the test labels we want to run, and fall back on\nthe configured `test_packages` if empty.\n\nTesting Done:\nTested with RBCommons, which separates out the rbcommons tests from\nthe reviewboard tests using `test_packages`. When passing command\nline arguments (like `-x`), `test_packages` was being ignored, but\nnow it's working fine and correctly using `-x`.\n\nTested standard test runs of Djblets and Review Board.\n\nReviewed at https://reviews.reviewboard.org/r/8658/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/42992a2c60333d948400eed5f7d0968318fbb5ff", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/43cc45f0439ee19b50d9462cdcb2420923dd9d90", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/0611a8791314b40697cb3c7746d134a42a50091f", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/65a23194574fe8a793215c5f61c86e0988893f9f", "message": "Ignore errors when closing an old caching backend.\n\nWhen enabling new cache backend configuration, it was possible to hit an\nerror closing the old backend, breaking the entire loading process. This\nmeant that some bad default configuration would prevent a new good\nconfiguration from being used.\n\nWe now ignore any errors encountered from closing the old backend.\n\nTesting Done:\nTested with a bad configuration being swapped out. I was still able to\nload in the new configuration and continue on.\n\nReviewed at https://reviews.reviewboard.org/r/8625/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/55d70b1961c97d88a34fd4be440b2891e643dec6", "message": "Don't log exceptions that are handled by Django's HTTP layer.\n\nOur logging middleware listens for exceptions raised during a page view\nand logs them, but this isn't always ideal. There are some exceptions\n(`Http404`, `PermissionDenied`, and `SuspiciousOperation`) that Django\nitself handles and logs (though in a log handler we currently don't use).\nIn the case of Http404, we really don't want to see the exception, as it's\nnot truly an error and just clutters up the log files.\n\nThis adds a list of exceptions to ignore, and also improves the current\nexception logging to log additional information about the request.\n\nTesting Done:\nTested actual exceptions raised on a page and verified I could see the\nlogging information.\n\nTested `Http404`, `PermissionDenied`, and `SuspiciousOperation`\nexceptions. Verified they did not invoke our logging.\n\nReviewed at https://reviews.reviewboard.org/r/8622/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d180b8e67bfc644e2d7b92729097884cbbf51ccc", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/519d41872dacba3c5fa8d5c398e891ca7e3768ef", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/43447eb0d13f59d8fa3259c0008de80ca3b8e8ff", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/a8ac028185105ba180eb96ad486d737da8740247", "message": "Backport the extension templatetags unit tests to 0.8.\n\nThe master branch introduced unit tests for the extension templatetags,\nalong with a series of files and settings needed to run them. These are\nuseful on older branches. This change backports those features to\nrelease-0.8.x and newer branches."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/8f6c2204e8ed6f98ad21f6fd1c663f8b99f15f58", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/cdee60f8102aac4c8b9c5d2c186d6338a4cd48c7", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2da6f2f4365d7f58f31a59142aa9178c789cdc65", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/005b142bdddcc2fc8b1843cbcabf3606bd6e365f", "message": "Specify the path to the uglifyjs binary for package building.\n\nWe previously had the node_modules paths for lessc and babel listed for\nthe Pipeline media building, but uglifyjs was absent. On systems that\ndon't have uglifyjs installed globally, this was causing problems with\nbuilding a package. This adds the path."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5974bca4408682c3743c49097a8e77ac8cdef827", "message": "Require django-pipeline 1.6.9.\n\nThe latest version of django-pipline is 1.6.10, but this version has a\nbug that causes every single static media file to be rebuilt on every\npage load. 1.6.11 should contain the fix, but for now we want to avoid\nthis version.\n\nThis is a trivial change that hard-codes 1.6.9 as the required version\n(updating from a minimum version of 1.6.8) and adds a note as to why\nwe've pinned this to 1.6.9."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2ca9123083a7019b1ecc9b19cc909a3a4bf504d0", "message": "Fix installing dependencies on Python 2.6.\n\nPython 2.6 doesn't provide `subprocess.check_output`, which we use to\ndetermine whether we can call certain looks (like npm) during package\ndependency installation. An alternative is `subprocess.check_call`, which\nworks but outputs results to stdout, and isn't as nice as check_output\nfor our purposes.\n\nThis change conditionally chooses which call to make, based on the\nversion of Python. On 2.7, we use the nicer `check_output`, whereas on\n2.7, we use the less-nice-but-still-suitable `check_call`.\n\nTesting Done:\nInstalled dependencies on both Python 2.6 and 2.7.\n\nReviewed at https://reviews.reviewboard.org/r/8544/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5ac6df8d4fb08c4c933b76517ac535b61dc1ca47", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/da0bb3745ce5518e2acac8cccdd20077601926da", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/dbd6e19d19afa67190fd7ab6643993f7c5522317", "message": "Fix a regression in the test suite from the extension doc changes.\n\nThe extension documentation changes removed an old internal method that\nwas used for a property, in favor of using the property decorators\ninstead. One of our unit tests was accessing the internal method instead\nof the property, though, which caused tests to break. This changes the\ntest to use the property instead."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6090ce8f1ba63aa81a07541d2581fb12c81c922f", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/fbe003737b8f7ce5e04c24314338a9c20275c934", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d8b500eb11d3fbc037c31b87592f10034b02c70b", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/aca66dcfaa39eca2de74651e1a28c5430af18f03", "message": "Check for node and nodejs when running setup.py develop.\n\nIf node isn't installed, `setup.py develop` will fail part-way through\nthe installation process. However, if it's installed but as `nodejs`\n(such as on Ubuntu), it will all work correctly until you go to run\nReview Board, at which point it will fail confusingly when it fails to\nfind `node` in the path.\n\nWe now check for both `node` and `nodejs`, and provide appropriate error\nmessages depending on what we find or don't find.\n\nTesting Done:\nTested with `node` in the path and without.\n\nTested without `node` in the path but with and without `nodejs` in the\npath.\n\nSaw the expected behavior in all cases.\n\nReviewed at https://reviews.reviewboard.org/r/8511/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6823215c4e872dc518de4ab2040384479464ea0e", "message": "Add documentation for the Extension and JSExtension classes.\n\nThese classes are pretty important, but we didn't have any real class\nreference documentation for the attributes. This change introduces\ndocumentation for these, fleshes out some of the docs for methods, and\nupdates one of the attributes to be a documentable `@cached_property`\n(using Djblets's new, smarter version).\n\nSomething worth noting is that Sphinx does not provide documentation\ninheritance for attribute docs, so the Review Board documentation still\nwon't have those documented, but at least we have a good reference now\nin Djblets.\n\nTesting Done:\nBuilt the docs and looked through them. Everything was documented.\n\nReviewed at https://reviews.reviewboard.org/r/8513/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2f4f3be69555bed8b2926288206bce5868a82025", "message": "Install the Djblets-specified npm dependencies for extension packaging.\n\nThis updates the new npm installation code using during extension\npackaging to instead make use of the npm dependency lists used for\nDjblets itself. This ensures compatibility/consistency between Djblets\nmedia and extension media.\n\nThe dependencies are now specified in a package.json file, which is\nstored in the build/ directory. This allows for a quicker\ninstallation/checking of npm dependencies. The resulting node_modules/\nalso goes in build/, in order to keep the root of the extension tree\nclean.\n\nThis will allow for better maintenance of extensions and dependencies\ngoing forward, and allow us to more easily provide the same types of\nless/babel plugins we depend on ourselves with minimal maintenance.\n\nTesting Done:\nTested with an extension containing `.less` files, `.js`, and `.es6.js`.\nBuilt the package, saw it install the modules and then compile the files.\nChecked the build output and saw all the correct file contents.\n\nReviewed at https://reviews.reviewboard.org/r/8507/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5779aaca6e686b9162bcb900af6990275af73bce", "message": "Install the Djblets-specified npm dependencies for extension packaging.\n\nThis updates the new npm installation code using during extension\npackaging to instead make use of the npm dependency lists used for\nDjblets itself. This ensures compatibility/consistency between Djblets\nmedia and extension media.\n\nThe dependencies are now specified in a package.json file, which is\nstored in the build/ directory. This allows for a quicker\ninstallation/checking of npm dependencies. The resulting node_modules/\nalso goes in build/, in order to keep the root of the extension tree\nclean.\n\nThis will allow for better maintenance of extensions and dependencies\ngoing forward, and allow us to more easily provide the same types of\nless/babel plugins we depend on ourselves with minimal maintenance.\n\nTesting Done:\nTested with an extension containing `.less` files, `.js`, and `.es6.js`.\nBuilt the package, saw it install the modules and then compile the files.\nChecked the build output and saw all the correct file contents.\n\nReviewed at https://reviews.reviewboard.org/r/8507/"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/djblets/djblets/issues/comments/11144042", "body": "Hi,\n\nWe don't accept pull requests. All changes must go up for review at http://reviews.reviewboard.org. Can you post this change and your others there?\n\nThanks,\n\nChristian\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/11144042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/21133539", "body": "Hi Andrew,\n\nPlease submit patches to http://reviews.reviewboard.org/. We don't use pull requests.\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/21133539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/40876996", "body": "Thanks, but we don't accept pull requests. Can you post this to https://reviews.reviewboard.org/ ?\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/40876996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/46154195", "body": "Thanks. We don't accept pull requests. Can you post this for review at https://reviews.reviewboard.org/ ?\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/46154195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/93520710", "body": "It's really not that simple in reality.\n\nPillow supports Python 2.6 and higher. Djblets 0.6 and the equivalent versions of Review Board (our product that is in production use at small businesses and enterprises world-wide) support Python 2.4 and higher. We have company that run these older versions of Review Board on very specific software stacks, and occasionally need to migrate to bigger systems, performing a new install.\n\nIf we were to change the dependency from PIL to pillowfight for Djblets 0.6.x, we would be breaking these production installs the second they went to do this. pillowfight would install, and it would favor Pillow on the replacement server (as it's unlikely PIL would be installed there yet). That would then fail, due to the Python version compatibility difference.\n\nThere are also subtle differences between PIL and Python compatibility for some modules made back in the day, which would be running on these systems. PIL could have been installed in two ways. One way introduces a top-level Image namespace, and the other way does not. Modules sometimes chose one way or the other for importing (we've hit this issue before on some systems). That means that, once again, we'd be introducing a possible breakage to production installations.\n\nWe have an obligation to keep older production versions of Review Board and Djblets from breaking, as our users are used to a level of stability there. We will not be changing dependencies on the 0.6.x branch. That's considered frozen.\n\nAs David mentioned, 0.7.x and 0.8.x is intended to be used with newer versions of Django. We'd recommend upgrading.\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/93520710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/djblets/djblets/comments/4843348", "body": "Thanks. This is fixed in 0.7.27.\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/comments/4843348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "brennie": {"issues": [], "commits": [{"url": "https://api.github.com/repos/djblets/djblets/commits/78ced0d37c5dca2fc5d1c856f6b9f2fda02392c1", "message": "Always lowercase and strip e-mail addresses for gravatar URL computation\n\nWe now always strip whitespace and lowercase e-mails inside\n`get_gravatar_url_for_email`, instead of having the logic inside of\n`get_gravatar_url`. This will ensure that e-mail hashes are always\ngenerated correctly.\n\nTesting Done:\nRan unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/9445/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/e9547bd253cc59690c5aa4af79f07ff274a0760d", "message": "Add signals for token creation and update\n\nWe now emit a signal (`djblets.webapi.signals.webapi_token_created`)\nwhen we generate a token via `WebAPITokens.objects.generate_token()`\nmethod. In addition, this method now takes an `auto_generated` parameter\nto indicate whether or not the created token is being automatically\ngenerated by some process (such as an integration). This can be used by\nsignal consumers to determine, e.g., whether or not an e-mail should be\nsent upon token generation.\n\nTesting Done:\nRan /r/9285/ unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/9275/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/16fb9cb8df4c11161b40a72d0e60f14c638c38e3", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/35118aa4c7ab2a728238fee2f1df1a5bc434a4d5", "message": "Downgrade ResourceOAuth2TokenMixin error to warning\n\nThe OAuth2 scopes code logs an error if a resource does not inherit fom\nthe OAuth2 token mixin. We are downgrading this to a warning to seem\nless scary (and because its not actually an error).\n\nTesting Done:\nConfirmed the error no longer appears and a warning appears instead.\n\nReviewed at https://reviews.reviewboard.org/r/9124/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/5d29895103d1fe903f98b991042b382a81935d0f", "message": "Refactor config forms LESS to use variables, support empty item lists\n\nThis patch refactors the config forms LESS to use defined variables for\ncolours. These colours were being used in Review Board's account pages\nand this change will allow the colours to be imported (instead of the\ncurrent hardcoding that occurs).\n\nThe CSS for config forms lists has been slightly tweaked so that they\nhave the same top and bottom border. Previously, there was no bottom\nborder on the list -- it was just the `border-bottom` from the last\nelement in the list, which uses a different colour from the `border-top`\nof the entire list.\n\nAdditionally, support has been added for a new\n`.config-forms-list-empty` element that is intended to be a sibling of\nthe `.config-forms-list`. It will only be shown when the list has n\nchildren. This is a generally useful pattern for supporting\nplaceholders that don't have to be dynamically added and removed from\nthe page. This is a refactor from a pattern I was using in Review\nBoard.\n\nTesting Done:\nTested with an upcoming change for Review Board.\n\nReviewed at https://reviews.reviewboard.org/r/9074/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4f3a958091c01ebc832e205c1c14ef8311c6f6bc", "message": "Add support for OAuth2 in the web API\n\nDjblets now supports OAuth2 authentication in the Web API. Documentation\nhas been added, in the form of a guide, showing how to enable OAuth2\ntoken access in applications.\n\nThis support is added via the `django_oauth_toolkit` package, which is a\ndevelopment dependnecy but not a deployment dependency. The OAuth2\nfeatures will simply be non-functional if the dependency is not\ninstalled.\n\nSome minor cleanup has been done in the `ResourceAPITokenMixin` to\nhelp ensure methods from mixins don't override eachother. Additionally,\nThe `WebAPITestCaseMixin` was fixed so that additional arguments can be\npassed to the underlying client request.\n\nBased on work by: Minh Le Hoang (https://reviews.reviewboard.org/r/7997/)\n\nTesting Done:\n- Ran unit tests.\n- Tested this with an upcoming change for adding OAuth2 token access to\n  Review Board.\n- Built the docs and read through them.\n\nReviewed at https://reviews.reviewboard.org/r/9030/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f23379d8c131fbdd202b8ba9d861bdcdfa641329", "message": "Support rendering with additional context in Config.ListItemView\n\n`Djblets.Config.ListItemView` now supports an additional method,\n`getRenderContext` that will be used with the associated model's\nattributes to generate the full render context for the template. This\nallows subclasses to inject things into the template that are not\nnecessarily model attributes (but my be derived from them).\n\nTesting Done:\nTested this with an upcoming patch for Review Board.\n\nReviewed at https://reviews.reviewboard.org/r/9075/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2cce5389416b3928dfe62911b18344dbbb2f7f11", "message": "Refactor Djblets.Config into ES6\n\nThis patch updates the `Djblets.Config` js to ES6 and updates and adds\ndocumentation where missing.\n\nTesting Done:\nRan JS tests.\n\nReviewed at https://reviews.reviewboard.org/r/9073/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6c8424fefb05e1826fc7adade9942970db64e95c", "message": "Allow filter_fieldsets to take either ModelAdmin or fieldsets directly\n\nPreviously, you had to specify the actual `ModelAdmin` class to retrieve\nfieldsets from. This is no longer the case and the fieldsets themselves\ncan be passed instead.\n\nThe documentation for what the function does has also been improved.\n\nTesting Done:\nTested with /r/9056/.\n\nReviewed at https://reviews.reviewboard.org/r/9053/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/d159b97d62eedf279f095f665e38b18324da70f2", "message": "Improve the UpdateFormMixin to handle the case of creating vs updating\n\nThe mixin now accepts a `add_form_class` attribute which will be used to\ndetermine the form class for creating a model instance.\n\nTesting Done:\nTested with /r/9056/.\n\nReviewed at https://reviews.reviewboard.org/r/9054/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c209c2c5f72403f882e9757b296d73aea2800ea6", "message": "Render ModelAdmin fieldsets outside admin sites\n\nThe `filer_fieldsets` utility function filters a list of fieldsets\nfrom a `django.contrib.admin.ModelAdmin` so callers rendering forms\ncan control which fieldsets (such as internal state) are rendered.\n\nThis change also refactors the core fieldset rendering of\n`form_fieldsets.html` into its own template so a single fieldset can\nbe rendered.\n\nTesting Done:\nTested with /r/9013/\n\nReviewed at https://reviews.reviewboard.org/r/9040/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/b6d275730ed75bcc45613cc5ea6faf34d29f0a51", "message": "Fix some documentation issues in the URLAvatarService\n\nThe URLAvatarService docs had some typos that prevented them from\ngenerating correctly.\n\nWhile I was here I renamed its `avatar_service_id` to `url`, since it\nwas left as `integration` from when it was the\n`IntegrationAvatarService` (i.e., while going through review).\n\nTesting Done:\nBuilt the docs.\n\nReviewed at https://reviews.reviewboard.org/r/9027/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/99c14b4d4220b648c1a0e2162d652c7590a6dead", "message": "Ensure initial value of list edit widget is a string\n\nThe list edit widget, when rendering an empty value (`None`), would set\nthe hidden input element to the string `None`. Now we ensure that we\ncoerce to an empty string when we have a falsy value, which avoids that\nsituation.\n\nTesting Done:\nRan into this issue (list edit submitting \"None\" when there were no\nvalues) while editing OAuth applications in RB. With this patch applied,\nthe issue no longer occurred.\n\nReviewed at https://reviews.reviewboard.org/r/9018/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/ad6f4d8bd2b2003e8f8c5f845ec103892e482649", "message": "Improve table styling in rendered Markdown\n\nThis patch adds some better styling to our rendered Markdown. We now\nrender vertical borders and emphasize the border that separates headers\nfrom content.\n\nTesting Done:\nTested this with /r/8969/\n\nReviewed at https://reviews.reviewboard.org/r/8970/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/22df1412d58f5ae00fd59207d48e0cc5b43f3c59", "message": "Improve rendering of list edit widget\n\nThe add item link is now a button with text to make it more\nuser-friendly. In addition, the remove item links now are all valid\nlinks and render with a cursor pointer, as well has having the title\nattribute even when being added from JS.\n\nTesting Done:\nTested with Review Board.\n\nReviewed at https://reviews.reviewboard.org/r/9008/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/e6511ad2cb19056e0ded75ff157e73a30fe08273", "message": "Add a decorator that makes a view require a feature\n\nThe `@feature_required(f)` decorator makes the decorated view require\nthe `f` feature to be enabled to be executed. Otherwise a backup view\nwill be called, which by default returns a 404 Not Found error. This\nview may be customized by the caller to return any sort of response.\n\nTesting Done:\n* Tested this with an upcoming patch for RB.\n* Ran unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/9007/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/24c5043c036fdddfa604112210bb3ed03712912d", "message": "Wrap form field contents in a <div>\n\nThis change makes form fields rendered by\n`djblets_forms/admin/form_field.html` and Django's own\n`admin/includes/fieldset.html` render closer together by wrapping the\ncontents of the field inside a `<div>`. This allows us to render\nadmin-styled forms (e.g., `.aligned.module` fieldsets) without being too\nhacky.\n\nTesting Done:\n- Tested this with an upcoming patch for Review Board.\n- Did not notice changes in fields that are rendered with this template.\n\nReviewed at https://reviews.reviewboard.org/r/9006/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f10b5acc8cda77e26d836a293478074cfefa2bc3", "message": "Add the ListEditWidget\n\nThe ``ListEditWidget`` provides an interface for editing a delimited\nlist of values as a list of input fields.\n\nTesting Done:\nUsed this with an upcoming change for Review Board.\n\nReviewed at https://reviews.reviewboard.org/r/8982/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/6d1c40443083a6bbe47f02a28d401955bb5f179d", "message": "Add an input widget with a copy text link\n\nSometimes it makes sense to have a text widget that the user will want\nto easily copy data from, such as with generated authentication tokens,\netc. The `CopyableTextInput` is a specialized `TextInput` widget that\nrenders a link to copy the text from the associated field.\n\nTesting Done:\nUsing this with an upcoming change for OAuth forms.\n\nReviewed at https://reviews.reviewboard.org/r/8980/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/1845ed5677848fcc943eee4a6169bb8d24625e10", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/7141b3ad36420f047d789229b8902dd28aafafcf", "message": "Ensure mocked User.get_profile is removed by @ensure_user_profile\n\nThe `@ensure_user_profile` decorator ensures that `User.get_profile`\nexists because it has been removed in Django 1.7+. For compatability,\nsome unit tests require it to exist (i.e., be on Django 1.6 or have it\nadded by a third party).\n\nOne issue is that when using this in conjunction with KGB to replace the\ndefinition of `get_profile` that the profile will not be deleted, as\n`SpyAgency.tear_down` will execute after `require_user_profile` has\nfinished, which results in the original method not being deleted.\nFurthermore, the mock method we add will stick around as\n`SpyAgency.tear_down` restores it.\n\nTo combat this issue, we now check to see if the function has been\nreplaced by a `FunctionSpy` and unspy on it if that is the case. That\nwill result in `SpyAgency` not modifying the `User` object during\n`tear_down`.\n\nAdditionally, we were comparing `User.get_profile` to our mock method,\nwhich will never be equal because `User.get_profile` will be an unbound\nmethod and not the original function. We now compare to the underlying\nfunction instead.\n\nTesting done:\nRan unit tests on Django 1.6 and 1.8.\n\nReviewed at https://reviews.reviewboard.org/r/8869/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/0d3a2379e31428785503b64958449e0c3e053e39", "message": "Fix argument order in avatar unit tests\n\nTrivial change."}, {"url": "https://api.github.com/repos/djblets/djblets/commits/982e921036013e290a3a15c6f33c229596be7a87", "message": "Always compute absolute URL of uploaded avatars\n\nPreviously we were caching the location of uploaded avatars. However, if\na consumer switched storage backends (e.g., local host to S3), the\nabsolute URL would not update. Now we always compute the absolute URL of\navatars.\n\nTesting Done:\nTested with /r/8858/.\n\nReviewed at https://reviews.reviewboard.org/r/8843/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/bd627acedb64d12c29ff4b30ceba14fb8c0814b3", "message": "Make the upload location of avatars configurable\n\nThe upload location of avatars via the `FileUploadService` is now\nconfigurable through the `UPLOADED_AVATARS_PATH` Django setting and the\n`get_unique_filename` method. If the `UPLOADED_AVATARS_PATH` setting is\nnot set, a default of `uploaded/avatars` will be used.\n\nTo enable this customizability, `AvatarServiceConfigForm`s are now\npassed the instance of the service that instantiated them as a keyword\nargument. This allows the forms to look up static settings on the\nservices.\n\nTesting done:\nRan unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/8841/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/907a8eb067d32abaa29ef908b3b09baea10b9264", "message": "Ensure avatar service configuration forms are valid\n\nIt was previously possible to save the `AvatarSettingsForm` with invalid\nform data for a avatar service configuration form. This was because we\nonly cleaned the form, but we did not do anything with the result. We\nnow ensure that the avatar service's configuration is valid, otherwise\nwe will make the `AvatarSettingsForm` invalid.\n\nTesting Done:\nRan unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/8859/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/b1f9e75f4b3b8e3353df2f05ff334c809a2f8c3f", "message": "Correctly compute uploaded avatar hash\n\nThe file upload avatar service was incorrectly computing the file hash\nfor use in ETag computations, but only if the `file_hash` was not\nalready cached in the user's settings. This issue has been fixed.\n\nTesting Done:\nUploaded an avatar and deleted the `file_cache` key. It caused an\n`AttributeError`. After applying this patch, the error would not\nreproduce.\n\nReviewed at https://reviews.reviewboard.org/r/8840/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4e7397cc1fe31affb23b25551124effff025813f", "message": "Fix avatar unit tests on django 1.8+\n\n`ConfigForm`s require `User.get_profile` to exist, but Django has\nremoved this method in modern versions, causing some test failures.\nThis patch adds a testcase decorator to re-implement the missing\nmethod when it is not present.\n\nTesting Done:\nRan unit tests on Django 1.8 and 1.6: they passed!\n\nReviewed at https://reviews.reviewboard.org/r/8809/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/a15e7890a24a229ca09a71a6428d1d4968672910", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2a93d496120887daf94e486e88af462a1838cad2", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/3caa6b9e6ed080533e0de41cd41aafd4cd9c1529", "message": "Add a setup command to generate package.json\n\nRunning `setup.py list_node_deps` will now generate a package.json that\nlists all the node.js dependencies of the project.\n\nTesting Done:\n- Ran `setup.py list_node_deps` and saw expected output.\n- Ran `setup.py install_node_deps` and it succeeded.\n\nReviewed at https://reviews.reviewboard.org/r/8786/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/cc52bb07677d1b696ea64d008cdc9c18a000fd10", "message": "Instantiate avatar services form when there is no default service\n\nPreviously, when the avatar service form was instantiated, it assumed\nthat there was a default avatar service. If there was not, the form\nwould fail in instantiation. This patch addresses this.\n\nTesting Done:\nRan unit tests. The provided test fails without the fix applied.\n\nReviewed at https://reviews.reviewboard.org/r/8728/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/4898c9fcbd06abd3a9f8ace28b45835ed0e0ebd4", "message": "Ensure form registry is populated when adding or removing forms to pages\n\nThe `ConfigPageRegistry` was not populating the `ConfigPageFormRegistry`\nwhen calling `add_form_to_page` or `remove_form_from_page`, which would\nlead to issues when removing pages in tbe case that the method\nwas called before the registry was populated. We now specifically\npopulate the form registry to avoid this.\n\nTesting Done:\nRan unit tests. The new unit tests fail without this fix applied.\n\nReviewed at https://reviews.reviewboard.org/r/8725/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/2c816abc207b3bb4a646069981ca9dc773aef79e", "message": "Add MySQL-Python as a dev dependency\n\nDjblets now contains tests for its custom Django MySQL backend. However,\nthose tests fail, e.g. on Travis CI, because we do not indicate it as a\ndependency anywhere. This patch addresses that.\n\nTesting Done:\nTesting done:\nRan unit tests on Travis CI. See the [Travis CI build][1].\n\n[1]: https://travis-ci.org/brennie/djblets/builds/200188344\n\nReviewed at https://reviews.reviewboard.org/r/8731/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/525285721d4a4f21cfd48fecd2930941c385b25f", "message": "Merge branch 'release-0.9.x' into release-0.10.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/427f5f03cf4092f8fc8f590ecdc0ec74a384e75e", "message": "Merge branch 'release-0.8.x' into release-0.9.x"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/c013e92775167cf81e0d5fdd7a2b538e0af0b7fa", "message": "Only render visible forms\n\nWhen rending a `ConfigPagesView`, we check for page visibility but we\nnever check for form visibility. This would lead to supposedly not\nvisible forms being rendered, but only if there was another form on the\npage was visible. Presumably this wasn't caught earlier due to Review\nBoard only having one form per page.\n\nTesting Done:\nRan unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/8726/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/93e432566c4f7236fa1e46f28792b047364a8604", "message": "Add ETag data generation to the avatar service API\n\nAvatar services can now generate ETag (Entity Tag) data to be used in\ngenerating caching information for the avatars. This will allow pages\nthat use the avatar to be cached and only retrieved if the avatar\nchanges.\n\nTesting Done:\nTested this with Review Board in /r/8567. Saw that it worked correctly.\n\nReviewed at https://reviews.reviewboard.org/r/8566/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/9419d267a1fd704169820de52268db44485fe314", "message": "Merge branch 'release-0.10.x'"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/75e5630ae778f5b6a272381edd3f269de1124b6f", "message": "Add a RegistryHook base class\n\nThe `RegistryHook` is a base class that handles registration and\nunregistration of items from registries. Subclasses can set the\nspecific registry to use.\n\nTests have been added to ensure that the hook correctly registers\nitems.\n\nTesting Done:\n- Ran unit tests.\n- Used this in /r/8531.\n\nReviewed at https://reviews.reviewboard.org/r/8530/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/0342dde960288d3c24894116d0cd92440de77fa0", "message": "Refactor the DummyAvatarService into two services\n\nThe `DummyAvatarService` no longer does magic to set whether or not it\nshould provide high DPI avatars. Instead, we now have the\n`DummyHighDPIAvatarService` to provide that (and the\n`DummyAvatarService` will not provide high DPI avatars).\n\nTesting Done:\nRan unit tests.\n\nReviewed at https://reviews.reviewboard.org/r/8526/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/b0f48177b172fbcc6652f7878e157bbc3fa83068", "message": "Add styles for a warning icon in integrations\n\nSince integrations can now render their own statuses, it is possible\nthey may want to use a \"warning\" icon, since there are already \"enabled\"\nand \"disabled\" icons. This adds the necessary LESS to use\n`.fa.fa-exclamation-circle` as a warning icon.\n\nTesting Done:\nTested with rbintegrations.\n\nReviewed at https://reviews.reviewboard.org/r/8496/"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/djblets/djblets/issues/comments/189475179", "body": "We do not accept pull requests. Thanks for posting this on https://reviews.reviewboard.org\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/189475179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "erijo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/djblets/djblets/commits/8525f39433aef9e82bf6516e386eceb76503f361", "message": "Accept input attributes in any order in unit tests.\n\nThe condition set view tests verified that input tags had the expected type and\nname attributes by comparing the generated HTML. But in some browsers the name\nattribute appears before the type which failed the test.\n\nCheck the tag name and attributes individually instead.\n\nTesting Done:\nUnit tests now pass.\n\nBugs closed: 4594\n\nReviewed at https://reviews.reviewboard.org/r/9344/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/996092aab7155dd043e1e7f91b662e78b0b2052d", "message": "Pass the current HttpRequest to JSExtension.get_model_data().\n\nIt's useful for a JSExtension to be able to serve up user-specific\ncontent, such as profile data, settings, group membership, etc. However,\nbefore, it had no way of accessing anything about the current HTTP\nrequest or user.\n\nThis change introduces request and kwargs arguments to\nJSExtension.get_model_data(). At minimum, kwargs should now be required,\nand deprecation warnings will be presented if missing (though the old\nfunction signatures will continue to work).\n\nExtensions wishing to provide compatibility with older versions of\nDjblets must be sure to conditionally retrieve data from kwargs, and\nfall back on other behavior if the request is not present.\n\nTesting Done:\nTested that getting a user's groups as discussed in [this mail\nthread](https://groups.google.com/forum/#!topic/reviewboard-dev/6zaOSIG4xd4)\nworks.\n\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/8595/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/f4baa4e033128a689ab903fd10d2efb702d79557", "message": "Make request object available to JSExtension instances\n\nBy making the request object available, the extension subclass can e.g. get\nhold of the current user which can be useful.\n\nTesting Done:\nTested that getting a user's groups as discussed in [this mail thread](https://groups.google.com/forum/#!topic/reviewboard-dev/6zaOSIG4xd4) works.\n\nUnit tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/8595/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/97f6bad4f455ff7a15cf387f02ea0a3a48dea261", "message": "Pass all runtests args to nose\n\nIt was confusing at first to have to supply a dummy argument to runtests.py to\nhave e.g. -x take effect.\n\nTesting Done:\nTested running tests both with and without arguments.\n\nruntests.py 1 now does the expected thing.\n\nReviewed at https://reviews.reviewboard.org/r/8602/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/819cf4fbbdc8f1534ce029c066d9b372901bb156", "message": "Report the correct error in case nodejs is found, but not node\n\nThe exception handling logic incorrectly suppressed the exception raised when\nnodejs was found but not node.\n\nTesting Done:\nRunning `python setup.py develop` on a Ubuntu system with nodejs installed now\nreports the correct error.\n\nReviewed at https://reviews.reviewboard.org/r/8582/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/26f95b046d3179f0b7080ad8cc93d028cc4b0856", "message": "Properly handle npm not being installed\n\nIf subprocess can't find the file to execute, an OSError exception will be\nraised. Handle that and report the proper error, which is a bit more\ninformative than \"error: [Errno 2] No such file or directory\".\n\nTesting Done:\nIt works now when npm isn't installed.\n\nReviewed at https://reviews.reviewboard.org/r/8583/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mudaltsov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/djblets/djblets/commits/c0902d7d8b3ddc2def0f73b993720366ef9a5155", "message": "Fix 'errors' and 'collapse' styles for admin and integration config forms.\n\nIf admin form fields contain an error, the template adds an 'error' CSS class\nto the field div. The correct style is actually 'errors', which has styles\nspecified in admin.less, and prevents hiding in collapse.js.\n\nThe Integration config form template also needs to include collapse.js so that\nthe 'collapse' style actually has the Show/Hide behavior.\n\nTesting Done:\nUsed 'collapse' as a style for an integration config form.\nSaw correctly working behavior with and without errors.\n\nReviewed at https://reviews.reviewboard.org/r/8962/"}, {"url": "https://api.github.com/repos/djblets/djblets/commits/e606887b7719ff0a4b13806a205b9d425d1f2efb", "message": "Avoid raising TypeError for missing *_last_id value in condition fields.\n\nThe value_from_datadict() method would raise a TypeError if the *_last_id\nvalue was missing from data. The code was expecting to catch KeyError,\nbut was using data.get() instead of data[] and passing None to int().\n\nTesting Done:\nAdded test cases for empty data dictionary and missing *_last_id value.\nThe new test cases fail before the change and all tests succeed after.\n\nReviewed at https://reviews.reviewboard.org/r/8917/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rkdhatt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/djblets/djblets/commits/682751216c71528a58dcf6371163c102683bdb45", "message": "Add login rate limiting for API requests and web UI.\n\nThis change adds a rate limiting option for failed login attempts that come\nthrough either the API or web UI. The djblets side of this contains the\nframework for rate limiting (based loosely on django-ratelimit) and adds rate\nlimiting to the API authentication backend. Rate limiting for logins through\nthe UI will be a separate change in Review Board.\n\nTesting Done:\nCreated several unit tests for the login rate limiting feature that test the\nrate limits as either custom or default values. They are found in\ndjblets/auth/tests/test_ratelimit.py and in\nwebapi/tests/test_api_auth_backend.py.\n\nReviewed at https://reviews.reviewboard.org/r/8698/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Stensby": {"issues": [], "commits": [{"url": "https://api.github.com/repos/djblets/djblets/commits/9b44865455f69679483f1c885b2b0c7f7b58af0f", "message": "Add unit tests for Djblets web API backend auth.\n\nAdded unit tests for WebAPITokenAuthBackend and WebAPIBasicAuthBackend.\n\nThis patch is based on previous work by Minh Le Hoang at\nhttps://reviews.reviewboard.org/r/7997/.\n\nTesting Done:\nAll tests pass.\n\nReviewed at https://reviews.reviewboard.org/r/8440/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "andreiavram": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/djblets/djblets/pulls/9", "title": "Added missing staticfiles template loader", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "idella": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/djblets/djblets/pulls/6", "title": "Add sample.rss", "body": "Files is missing; yields\n\nERROR: Testing view_feed with the feed-page.html template\n\nThis is for Djblets-0.6.22\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ledmonster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/djblets/djblets/issues/comments/1863174", "body": "sorry, we don't nee get_internal_type here.\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/1863174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "svetlyak40wt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/djblets/djblets/issues/comments/11285068", "body": "Added to http://reviews.reviewboard.org/r/\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/11285068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/11285072", "body": "Added to http://reviews.reviewboard.org/r/\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/11285072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/11285077", "body": "Added to http://reviews.reviewboard.org/r/\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/11285077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/21813466", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/21813466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kiorky": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/djblets/djblets/issues/comments/93315026", "body": "So, the right solution is to remove PIL from all of your maintainance branches (like 0.6) to let the consumer use the right implementation of Image for them, including reviewboard.\nBecause if you hardcode it there, you break all other packages that use pillow and that would work without...\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/issues/comments/93315026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "pzwara": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/djblets/djblets/comments/4842862", "body": "NameError: global name 'username' is not defined\n", "reactions": {"url": "https://api.github.com/repos/djblets/djblets/comments/4842862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}}}}