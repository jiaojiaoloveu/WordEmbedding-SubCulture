{"_default": {"1": {"PBarnard": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6159", "title": "Keyboard State Stuck in Fullscreen", "body": "I'm having the same issue as that outlined in this thread:\r\n\r\nhttp://community.monogame.net/t/when-starting-in-fullscreen-mode-the-keyboard-state-gets-stuck/10114\r\n\r\nThe pressed keys are getting \"stuck\" according to the IsKeyDown() when the application is running in fullscreen using \"graphics.ToggleFullScreen();\"\r\n\r\nOne of the answers says it is fixed in 3.7.0.1206-develop but I've tried that version and 3.7.0.1232-develop and it's still happening.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tomspilman": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6157", "title": "Improve OpenAssetImporter", "body": "Currently the `OpenAssetImporter` is crippled to only expose features that the old XNA `FbxImporter` and `XImporter` supported.  So for example we only expose 4 different texture types in `MaterialContent`:\r\n\r\n  - Texture (aka Diffuse)\r\n  - Transparency\r\n  - Specular\r\n  - Bump\r\n\r\nHowever AssImp supports like 12 different types of defined texture maps and even custom ones.\r\n\r\nSame sort of thing exists for material properties where we only expose a few... but some useful ones like 'IsTwoSided` is not exposed.\r\n\r\nI think we have two paths:\r\n\r\n A) Just add the extra stuff as `OpaqueData` and not worry.\r\n B) Set a `XnaCompatible` flag to `OpenAssetImporter` when called from the `FbxImporter`.\r\n\r\nIf you use the `OpenAssetImporter` or `FbxImporter` let me know what you think.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6001", "title": "Fix Texture2D.FromStream support for 1bit PNGs", "body": "Ran across a 1bpp PNG image that our existing `Texture2D.FromStream` would not load.\r\n\r\nWe should add this format to the unit tests and ensure it works.\r\n\r\nYou can download this white 1bpp texture here:  \r\n\r\n  https://user-images.githubusercontent.com/103522/31480817-aafc0bde-aee5-11e7-9cb5-77491b4d3ae2.png\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5746", "title": "Default Language Proposal", "body": "In localizing games for multiple languages you often need to figure out what the current language setting is for the phone/tablet/console you're running on.  This way the default localized content you show the player is based on the settings they chose for their device.\r\n\r\nYou can sort of do this in plain C# using:\r\n\r\n `System.Globalization.CultureInfo.InstalledUICulture.TwoLetterISOLanguageName`\r\n\r\nThis however just returns the 2 letter language code which can tell you the language is Portuguese...  but to know the difference between Brazilian Portuguese and Portugal Portuguese you have to start messing with:\r\n\r\n `System.Globalization.CultureInfo.InstalledUICulture.InstalledUICulture.LCID` \r\n\r\n... which returns numerical codes you have to hard code into your game.\r\n\r\nWhile this might be good for traditional apps that have complex language needs... it is overly complicated for games and a waste of time seeing so many games have to reinvent how to do this.\r\n\r\nInstead maybe we can do something like this:\r\n```\r\nenum GameLanguage\r\n{\r\n   EnglishUS,\r\n   EnglishUK,\r\n   EnglishAustralia,\r\n   EnglishCanada,\r\n   SpanishSpain,\r\n   SpanishMexico,\r\n   // etc!\r\n}\r\n\r\nclass Game\r\n{\r\n    public GameLanguage DefaultLanguage { get; }\r\n}\r\n```\r\n\r\nWe would populate the `GameLanguage` enum using the combined supported languages from Xbox One, PS4, Vita, Switch, iOS, Android, and Steam.  This should ensure we support all the languages that matter for game localization.\r\n\r\nUnder the hood each platform would provide its own implementation to fetch the active OS language.\r\n\r\nWe could even go beyond just a single enum and instead return a immutable `GameLanguage` type that has additional helpers methods.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5669", "title": "Filter GraphicsDevice by GraphicsProfile", "body": "Somewhere in here:\r\n\r\nhttps://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/GraphicsDeviceManager.cs#L291\r\n\r\nWe should be enumerating the `GraphicsAdapter`s in the system and picking the ones available based on requirements including `GraphicsAdapter.IsProfileSupported(GraphicsProfile)`.  You can see sort of how this works in the XNA docs:\r\n\r\nhttps://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphicsdevicemanager.findbestdevice.aspx\r\n\r\nIf no supported device is found XNA seems to throw a `NoSuitableGraphicsDeviceException`:\r\n\r\nhttps://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphics.nosuitablegraphicsdeviceexception.aspx\r\n\r\nYou can see it in use from `GraphicsDeviceManager.ApplyChanges()` which does the work of \r\n\r\nhttps://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphicsdevicemanager.applychanges.aspx\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5559", "title": "Evaluate DocFX to replace SharpDoc", "body": "I recently came across a new-ish documentation generation system called DocFX:\r\n\r\n http://dotnet.github.io/docfx/\r\n\r\nWe should consider if we should switch over to DocFX over our existing SharpDoc system.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5504", "title": "Add support for disabling the content pipeline unit tests", "body": "We need to fix the unit tests project to be able to optionally not include the content pipeline tests.  This is critical to getting the unit tests running on mobile and console platforms.\r\n\r\nThe simple fix would be to edit the Protobuild definition here:\r\n\r\nhttps://github.com/MonoGame/MonoGame/blob/develop/Build/Projects/MonoGame.Tests.definition\r\n\r\nTo gather all the pipeline test source files into a Protobuild \"service\" as defined here:\r\n\r\n https://protobuild.readthedocs.io/en/latest/service_dependencies.html#declaring-services\r\n\r\nThis way we can easily disable these tests for all non-desktop platforms.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5504/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5503", "title": "Disable unit test that don't run on Mac", "body": "We need to add some conditional \"ignore\" attributes on unit tests that don't run on Mac.\r\n\r\nThis will be a temporary hack to let us get the unit tests into the automated build process sooner.\r\n\r\nOnce the unit tests are running on Mac during the automated build we can pick off fixing unit tests on Mac one at a time.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5503/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5499", "title": "Missing error on using Disposed Textures", "body": "It seems like MonoGame will let you try to render with a disposed texture.\r\n\r\nWe need to setup a unit test and match XNA behavior as it helps alert users to a bug when this occurs.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5499/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5455", "title": "PInvokeStackImbalance in GL.ClearDepth", "body": "So we had two developers using the DesktopGL build of MG run into the `PInvokeStackImbalance` debug assist warning when testing their game in the debugger.   \r\n\r\nFor one it happened on the first call to render a scene.   The other developer was able to render 1000s of frames in the game's UI before getting into gameplay where suddenly `PInvokeStackImbalance` errors started occurring.\r\n\r\nFor both the error only occurred on `GL.ClearDepth` and for both disabling the `PInvokeStackImbalance` debug assistant feature allows the game to run seemingly like normal.\r\n\r\nStill I see information out there that this is a real bug that needs fixing:\r\n\r\n http://codenition.blogspot.com/2010/05/pinvokestackimbalance-in-net-40i-beg.html\r\n\r\nBut it seems curious that it didn't occur on the first calls to `GL.ClearDepth` for one of the developers.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5c00ca87fea8c7e853364e32ff0f989177fdd5af", "message": "OpenAssetImporter Improvements and FbxImporter Unit Tests (#6158)\n\n* Added flag to support XNA compatible model content.\r\nAdded full AssImp material support to OpenAssetImporter.\r\n\r\n* New unit tests for FbxImporter.\r\n\r\n* Test fix for older AssImp.\r\n\r\n* Adjust property names to be more XNA like, some cleanup, and notes."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/68758e55c4970240739a050a3dc51110badab5ce", "message": "Merge pull request #6151 from cra0zy/restoredebug\n\n[Pipeline Tool] Restore old debug mode behavior"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/45c607a505af114289c82be73310e108ac525bff", "message": "Fixed VertexContent.RemoveRange (#6139)\n\n* Fixed bug in VertexContent.RemoveRange() and added unit tests.\r\n\r\n* Fixed broken XNA Test project."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/86125e50027f088f58f75cf6295334aad07477b4", "message": "Merge pull request #6117 from jkotas/centralize-cast\n\nChange OpenGL.LoadEntryPoint to return T"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ed77ff8681a96c0a90f8344960c980b44e217a69", "message": "Merge pull request #6108 from nkast/MGFXShaderInfo\n\n[2MGFX] Split ShaderInfo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ef2f30082ff570bd5ff52c4bb9b7a6f2af8474fe", "message": "Merge pull request #6060 from Jjagg/centerdx\n\n[DX] Center window on startup (fix)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/31df2d8a8ce8f1092094d8aad67aba7d3f4c4393", "message": "Merge pull request #6071 from cra0zy/fixflags\n\n[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/223b240e552bed4cee5f6c5ebd9adeaae73479ec", "message": "XACT WaveBank/SoundBank Loading Optimizations (#6050)\n\n* Sound effect pooling fixes for XACT.\r\n\r\n* Fix to SoundBank and refactor of WaveBank to avoid violating the file read rules on Switch.\r\n\r\n* Fix for Windows 10."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/fe6300d67773e79dc80b2405eedda3154052870a", "message": "Merge pull request #5613 from nkast/tnc_FixCoreApplicationGameLoop\n\nRevert \"added event handing when window nor active to allow runtime to suspend app\""}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/7f383f2313e956e8dee8a9a5708b860523e08c65", "message": "Merge pull request #5965 from MichaelDePiazzi/dxVibrationFix\n\nFixed GamePad.SetVibration crash"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b52c639285563445c403b907c79788f8c04949f0", "message": "Merge pull request #5987 from cra0zy/mgcbman\n\nAdded MGCB man page for Linux"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/26f21eff1da5c7840f414f583afa1378f74a3e3b", "message": "Merge pull request #6006 from nkast/MatrixCreateReflectionBug\n\nMatrix.CreateReflection() normalizes/alters the *input* value"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bbcfe2928e3f301f61452bb651e8b3fa2d3f338a", "message": "Merge pull request #5989 from Jjagg/xaudio-desktop\n\nUse desktop assembly of XAudio for DX projects"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f3e8230b8d85b422b6db3e066b1a20b55126145e", "message": "Merge pull request #5976 from dellis1972/Bug5967\n\nFixed the Pipeline tool to handle Importers without a DisplayName"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/920114c1faac0a0d7ce80d68ba0f150ac278c950", "message": "Merge pull request #5962 from mrhelmut/androidFix\n\nFix ambiguity between System.Drawing.Size and Android.Util.Size"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/cb582d0863342fe5ea6f277ef1d73f71cb05dd3f", "message": "Merge pull request #5961 from Ragath/develop\n\nMultidimensional array content pipeline fix."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6435fac5448712d028bb14d90027bf15108e03aa", "message": "Merge pull request #5931 from dellis1972/updateuwp\n\nUpdate the UWP Template to use the Latest SDK"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/728464226df02213972035bff67b4efa8bf92ab5", "message": "Merge pull request #5957 from KonajuGames/dds-cubemap\n\nSupport DDS cubemaps that don't follow the rules"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/61268a31d2e55a4d27bd11e84ba0dfbfe2709c9c", "message": "Merge pull request #5934 from dellis1972/updatenuget\n\nFix up the MacOS nuget package to deploy the SDL dependencies."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/59b8c82c9da9ad07b2a86672a6d2edb75d3a286d", "message": "Merge pull request #5945 from dellis1972/endlessbuild\n\nDont run the BuildContent target if we do not have any Content."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/1533573339fe6dc377b824410855618160ee1826", "message": "Merge pull request #5942 from dellis1972/macvideo\n\nAdd AVPlayer Video Support for MacOS."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d7cbbe9631eecb4a07f3cf6b66afe33f56f450ff", "message": "Merge pull request #5940 from dellis1972/fixinstaller2\n\nFix #5939. Install MonoGame.Build.Tasks in the right folder"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f88837ee1c5ca5fee8005476f524d206026672f3", "message": "Merge pull request #5938 from Jjagg/builttask-ignore\n\nAdd new build task projects to .gitignore"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/141f3f8e2d3adad381b0f63ecaca8ae3d3f04440", "message": "Merge pull request #5932 from Ragath/develop\n\nResolves unused test parameters (#5906)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a3e45d44a4535bb1e7840ef2fcb675ff50cadff5", "message": "Sort content when saving MGCB files (#5930)\n\n* Sound effect pooling fixes for XACT.\r\n\r\n* Sort items before saving which is better for source control and merging."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f7e20cb186837bae93c6818ff759423b972912e4", "message": "Merge pull request #5927 from KonajuGames/internal-opengl-openal\n\nTypes in OpenGL and OpenAL namespaces now internal"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/73944f683e229779827405f83611250c92764707", "message": "Merge pull request #5907 from dellis1972/sharpfont2\n\nRevert recent SharpFont Changes"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/3c4f54435da0879f0812a30698f940dd318d74e9", "message": "Merge pull request #5873 from cra0zy/cleanupif\n\nCleanup GraphicsDevice"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/3ce6460d3268d34b06f753d27fbe579fd6744463", "message": "Merge pull request #5904 from dellis1972/sharpfont2\n\nFix the previous commit of SharpFont which broke windows"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/862bcce1fc483d72d0a23b7ef82e194e9c98b30a", "message": "Merge pull request #5881 from cra0zy/rider\n\nRemoved deprecated Rider settings from Linux installer"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/27cc3cb5df4e4132fa7d3112d1457fc698da34bc", "message": "Merge pull request #5886 from KonajuGames/targets-no-mgcb-fix\n\nFix for build hang with no mgcb file in project"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/71985118e24564f2dc676ce429487f83b2dd4c31", "message": "Merge pull request #5868 from Jjagg/test-readme\n\nFix casing for readme include in tests"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6d8b4b8b43c5a128c80e0a3d3586b39b9b5333ee", "message": "Merge pull request #5869 from Jjagg/gl-pixel-alignment\n\nFix OpenGL pixel alignment"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4536f2aeefa6b07a9f363f9bd9ce3937f7343344", "message": "Made Game class partial to allow for per-platform extensions (#5864)\n\n* Sound effect pooling fixes for XACT.\r\n\r\n* Made Game class partial to allow for per-platform extensions."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b8e87ac5e3185a4674f3bb02125e628d97c58b03", "message": "Sound effect pooling fixes for XACT. (#5832)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/2c50e04e27b105c4499525b335ee37e5db1cefcf", "message": "Merge pull request #5859 from cra0zy/asd\n\nFix crash on multi-editing bool values in Pipeline Tool"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8b06c61c3c2a336b5d28c2af3f2b1d42c173a428", "message": "Merge pull request #5844 from cra0zy/cleanupfont\n\nSimplify FontDescriptionProcessor code"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/05828e42e11091a55d30ac605f8ed34d26ff12d2", "message": "Merge pull request #5812 from nkast/tnc_LegacyXNA_XNBIdentifier\n\nAdd back the 'm' Legacy XNA content identifier"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e2c2b1a082ac308eb6d07a53010e3ff90275f7a0", "message": "Merge pull request #5816 from nkast/tnc_MouseWindowHandle\n\nImplement Mouse.WindowHandle under Windows DirectX"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d3266f26acc16455089428676fc7d4c8aef815aa", "message": "Merge pull request #5841 from cra0zy/fixenum\n\n[DesktopGL] Fix Joystick enum (fixes #5729)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/277faf5b906a60c50c02181ce864c89d2485fbc8", "message": "Merge pull request #5819 from atomgott/vs2017uwptemplate\n\nUWP Templates use target version selected in wizard"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/31bfd430fd1bfcd6ce80b4651ffc61366d2f9975", "message": "Merge pull request #5821 from KonajuGames/oggstream-song-finish\n\nFix pre-emptive song finish in OggStreamer"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/afe56a7461c600e7fceebc8f99882da09f32d4af", "message": "Merge pull request #5831 from KonajuGames/dx-mouse-setcursor\n\nImplement Mouse.SetCursor() for Windows"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5554162730b44b93074d427926308b89a923b88a", "message": "Merge pull request #5848 from D3vilK4i/patch-1\n\nUpdated copyright to 2017"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4cb79a3f6e873d593b56f1d019a03e3ccaba657b", "message": "Merge pull request #5829 from KonajuGames/gl-mouse-setcursor\n\nOpenGL Mouse.SetCursor now works with alpha correctly"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/7d9ff325eb25c234d73ed20bdca9e86174faeaf8", "message": "Merge pull request #5820 from KonajuGames/pipeline-delete\n\nDo not allow the Pipeline tool to delete files outside the content folder"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/16e2dc79f59455766fb074f06a91b8df6063fee3", "message": "Merge pull request #5797 from mrhelmut/gamepadlinux\n\nAdds Xbox One S controller support to Linux"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/3eb38edd25efbd8f3aa7a1878ac754f0018a8f58", "message": "Merge pull request #5791 from hach-que/remove-env\n\nReplace environment variable with UseDebugLayers static property"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/35fae79f43483bf8bdfd37f80704df1f457543e9", "message": "Merge pull request #5795 from mrhelmut/glthreadfix\n\nFix for OpenGL texture construction not working from a thread"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/da682c7421c3dfa79426cefe462170a539e9a136", "message": "Merge pull request #5705 from ablanchard17/VertexStagingBufferCaching\n\nImplemented cached staging buffer for D3D vertex buffer."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/aac7d6ffd0acdb05fe6d9699e791a59fe7638110", "message": "Merge pull request #5727 from darfink/pipeline-prefix\n\nUse Mono properties for pipeline platform prefix"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5969c814c86e4f7acfb44145ad00f814485c8c3f", "message": "Merge pull request #5771 from KonajuGames/state-platformdispose\n\nAdd PlatformDispose partial methods to States"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/777518324264747bd6e80c9b4088f2f317d2ce8e", "message": "Merge pull request #5776 from DDReaper/WindowsDXNuGetfix\n\nUpdating the Windows DX NuGet package"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4763dd0e423322ec8d7465026ab730f00c4014db", "message": "Merge pull request #5772 from KonajuGames/pvrtc-rgb-2bpp\n\nFix PvrtcRgb2BitmapContent.TryGetFormat()"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0e1bc042a19ca3a4368a2316f585c86db558b717", "message": "Misc Console Stuff (#5766)\n\n* Match the other readers and make the file format clearer.\r\n\r\n* Some prep work for supporting MSAA on render targets."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/174bab616ad3d58232a316c72e6b1680628243c1", "message": "Merge pull request #5764 from Jjagg/entryassembly\n\nIgnore null EntryAssembly for tests"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/db7d9614faa8b1196ec7727e8eafab8dcf7e48fa", "message": "Merge pull request #5630 from rds1983/sysdraw\n\n#5567: Replacing System.Drawing for DesktopGL"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9961e67f12a8861c425cb079eb3b0f5822366ad3", "message": "Merge pull request #5748 from DDReaper/SharpDXNuGetUpdate\n\nUse SharpDX NuGet packages from our NuGet packages"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f0416deb712cc57a07a17f21fde7c878bc6bd7d3", "message": "Merge pull request #5611 from nkast/tnc_projectTemplatesSharpDXref\n\nRemove reference to SharpDX from project templates"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6c27cd869fa76249068ba0f5c463767bd1aa1021", "message": "Merge pull request #5714 from cra0zy/nu3\n\nUpdate NuGet packages"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/aadf867f795020136b3d582091a2721fb3e06dac", "message": "Merge pull request #5725 from nkast/tnc_GlyphHashCode\n\nsimplify CharComparer.GetHashCode(char b)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0195e67935442498452506c7a068dbefa8372754", "message": "Merge pull request #5733 from mrhelmut/NVorbisFix\n\nUpdating NVorbis fork"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/eb9f728072ef5bfcbd96e22ce4c85e75b2eac97b", "message": "Merge pull request #5734 from mrhelmut/GLEntryPoints\n\nglGetQueryObjectiv compatibility fix"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4006a241d8694fe4f0e3ef43da9cf16ff56d346e", "message": "Fixed bugs in Texture2D.FromStream() including unit tests. (#5712)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/acc969bb5c7f59391b5e9de767a721863c43ccf3", "message": "Ensure that the RPC curves are updated before the Cue is played. (#5709)\n\nFixed incorrect volume on simple sounds with RPC curves."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/77859748cdfd0ecb9d11a5a1731e64f18dfe3031", "message": "Merge pull request #5710 from SickheadGames/fixes3\n\nMac build fix"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/7773d88c46cbd02aba94c12d4f0d87360f51b6dc", "message": "Fix typo in docs."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/74e1e4c714d7491da36f658c3c89ae763dd31ac1", "message": "MacOS needs to use ReflectionHelpers.Legacy.cs."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8e5a65e8737200b158e3c9d58709cfd5268a25b2", "message": "Remove unnessasary absolute uri check. (#5683)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/52e15f969f15b2374999686a51320d2477b0de84", "message": "Initial plumbing for streaming sounds in XACT. (#5682)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4989e765f3d630b29585dd9e012817b272e9066b", "message": "Add support for changing bitrate and sample rate in WritePcmFile. (#5681)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bf727057130a21a48ae862edd5ada34dffd2de9c", "message": "Merge pull request #5700 from cra0zy/PipelineFixes\n\n[Pipeline Tool] General Fixes + Cleanup"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0f456111dbb30cfe5bbcb093be68612ee9444696", "message": "Merge pull request #5686 from cra0zy/dg\n\n[Pipeline Tool] Use built-in Eto dialog stuff"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/44cd62f15a114df73bc354523f55a709f3d2eae3", "message": "Merge pull request #5693 from cra0zy/opcon\n\n[Joystick] Implement operators and equals methods"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e2296cdad2c4fd6a0b3b8523aed3edda0dd7d2e8", "message": "Merge pull request #5601 from cra0zy/isgamepad\n\nImplement Joystick IsGamepad property"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/1a7d0abf70b09449f507e474a5f87cc7a83ee37a", "message": "Merge pull request #5606 from cra0zy/gcl\n\nImproved GameController database loading for DesktopGL"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b6f12419a3a79a03b33ccb6f500dff34c1289ca2", "message": "Merge pull request #5625 from cra0zy/excap\n\n[Gamepad] Add Id and DisplayName properties"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/764787fb9db48e34e7a250ea5da59c51f3d4b0b1", "message": "Merge pull request #5692 from cra0zy/addminsize\n\nAdded minimum size to the Pipeline Tool window"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/7f649faf7aee7528b92162381401d0d2fb7d5853", "message": "Merge pull request #5691 from cra0zy/gcon\n\n[Android] Set GamePad.IsConnected to false if no gamepad is connected"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c20719b1c5add58868396b025197ee4065d891a2", "message": "Merge pull request #5687 from cra0zy/fixheaderbar\n\nRename Exit to Quit on Pipeline Tool Linux Headerbar"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/def292885e28a4bc1606209a59b628ede22e1410", "message": "Merge pull request #5690 from cra0zy/mah\n\nAdd Open Output Directory option to Pipeline Tool"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bde0c9889420d7ae3283860f6e451f349ec22abd", "message": "Merge pull request #5689 from Jjagg/sbend\n\nMake SpriteBatch.End throw when Begin not called"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9f17773db0ef030d361603bfc4949d07e1f3ddb2", "message": "Merge pull request #5676 from nkast/tnc_MaxAnisotropy\n\nUse GraphicsCapabilities.MaxTextureAnisotropy on SamplerState"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9f3a8356f326d4380d022ca30cd6b16afe14d520", "message": "Merge pull request #5685 from cra0zy/gpd\n\nImprove GamePadThumbSticks code"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c040f8f61142a2082b8a1717f7fd2fd91ecc93fd", "message": "Merge pull request #5684 from cra0zy/etd\n\nEto Forms Update"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a7310bf639ab15023a17832086df3024b98b324c", "message": "Merge pull request #5678 from cra0zy/joye\n\nAdded Joystick.IsSupported property"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/171c78768161ae48ae9995503e0e7d38d8e3ffbc", "message": "Merge pull request #5671 from cra0zy/hmths\n\nCleanup gamepad stuff"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0d2b51729bc8445118cd0e943ebb3f16108dc655", "message": "Merge pull request #5673 from cra0zy/andpad\n\nFixed Gamepad DPad on Android"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5fa0c0c7f78a31fab416be84cd90bdedb49c2f9e", "message": "Merge pull request #5670 from cra0zy/jstostring\n\nImplement GetHashCode and ToString methods for Joystick"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b9faf64f3a06f5b43f4336f55c84005d90739325", "message": "Merge pull request #5665 from nkast/tnc_RemoveGetHighestSupportedGraphicsProfile\n\nRemove GraphicsDevice.GetHighestSupportedGraphicsProfile()"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/756ac5a24b74bc1163b653929bfcde6739677204", "message": "Merge pull request #5631 from jakepoz/scrollwheelfix\n\nFix scroll wheel events on Windows Universal"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/144c6cc8268bca24f48c97c25bc4a72afbae3b86", "message": "Merge pull request #5635 from cra0zy/fixmdtool\n\n[Linux Installer] Fix getting username that should run mdtool"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0a37856f38aa5873e62bb0987e0cbd3265c493b6", "message": "Merge pull request #5632 from siudeks/develop\n\nIncrease code coverage in Model* family"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c8933c1fe160242644e86ae88d5de234b09f2205", "message": "Merge pull request #5637 from dellis1972/opaquedictonary\n\nAdd Missing method to OpaqueDataDictionary"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a97f706c675766af73c64e89040951d53538f202", "message": "Merge pull request #5636 from dellis1972/android-n\n\nFix the paths so they work on android-n+."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6b9c9ef8523e2b757b43ee7f943ee4e8f0c8b51e", "message": "Merge pull request #5624 from dellis1972/fixtexturecube\n\nInverted the Platform(s) for TextureCubeReader, Texture3DReader and TextureReader to use ExcludePlatforms"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e38e323e5ddf080627582bc6f4c16589df5ac8b2", "message": "Merge pull request #5623 from tinfoilbroker/setting-up-mac-fix\n\nFixed link to Mono downloads page"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c45ebeec99efab50170e7d4687dc48d037a4e47b", "message": "Added Switch as a platform. (#5596)\n\n* Added Switch to supported platforms.\r\n\r\n* Added Switch platform to pipeline.\r\n\r\n* Fixed up platform references in docs.\r\nRemoved references to old PS Mobile platform."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5952", "title": "Support Mac Unit Tests", "body": "This PR is a fix to support running Mac unit tests.", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4931", "title": "TextEvent Fix for Windows/UWP", "body": "This is the Windows DX and Windows UWP support for the change in https://github.com/mono/MonoGame/pull/4878.\n", "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/3550", "title": "Run XNA Unit Tests", "body": "This PR enables building and running the XNA unit tests on Windows.\n", "author_association": "OWNER"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/41177432", "body": "Well the original issue was about missing APIs and a failure compiling the code.  It compiles now, so this issue can be considered fixed from that perspective.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/41177432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602019", "body": "Ah... i'll move to the develop branch and resubmit.\n\nAs far as Windows 8... that was exactly our plan.  We figure it might be several years before we see XNA5 (around the next Xbox maybe) if it ever happens at all.   So if we want to get our game to Win8 we would have to port it ourselves and it seems like making a WinRT+DX11 backend for the Windows port of MonoGame might be the best path.\n\nI'd love to head this up... we have several guys in our studio that would be contributing.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602273", "body": "Hi Dean.\n\nYea from what i'm seeing in the develop branch the windows port is sort of broken at the moment.  So i'm sorting thru that now while i fight git.\n\nARMED! is a turn based game and we do great with a simple http protocol to an Azure service, so UDP networking isn't really nessasary for our game.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602357", "body": "@dellis1972 \n\nYea i just noticed that a bit ago... i'll keep that in mind as i get things back up and running.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3605528", "body": "@CartBlanche - Our twitter account is....\n\n http://twitter.com/sickhead\n\n... git is giving me some trouble so its taking a little longer to get clean pull request.  I'll fix that tonight or tomorrow and submit it. I'll be sure to jump into IRC as well.\n\nThanks Dominique!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3605528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3620771", "body": "My email is tom@sickheadgames.com.  Feel free to contact me on email or gchat via that address.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3620771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3666735", "body": "Added bunch of new ContentReader<>s in my effort to get our game to load our models.\n\nAlso note a fixed a bug on windows in ContentReder.ReadExternalReference() and while i'm sure it didn't hurt Android... it may or may not hurt the other platforms.  Someone will need to double check it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3666735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3674268", "body": "@slygamer \n\nThe issue was that ContentManager.ReadAsset<T>() was incorrectly following the XNA standard.  In MS XNA ContentManager.ReadAsset<T>() returns a new object each time it is called with the same asset name.  Instead MonoGame was incorrectly caching assets within ReadAsset.  I simply moved the caching into Load<T> where it belongs.\n\nAs far as the line endings... it seems like someone had commited it with bad line endings before as it was the only file in all my changes with this issue.\n\nTo identify the changes... look for the + in the left column.  Github knows what changed, but doesn't display it well... it seems to focus on colorizing whitespace changes when it should focus on actual code changes.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3674268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3699858", "body": "Added a few small fixes and improvements from the FDS codebase.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3699858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13468635", "body": "If it works for any SharpDX platform it works for all of them most likely.  So WP8, Win8, and WinDesktop should all work.  @raistlinthewiz just had the orientation of the wp8 emulator wrong.\n\nThe question is if this is a bug on any of the GL platforms.  If it fails on WinDesktop GL then most likely it is broken for the others as well.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13468635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/41838088", "body": "This is most likely working from all our tests.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/41838088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3666735", "body": "Added bunch of new ContentReader<>s in my effort to get our game to load our models.\n\nAlso note a fixed a bug on windows in ContentReder.ReadExternalReference() and while i'm sure it didn't hurt Android... it may or may not hurt the other platforms.  Someone will need to double check it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3666735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3674268", "body": "@slygamer \n\nThe issue was that ContentManager.ReadAsset<T>() was incorrectly following the XNA standard.  In MS XNA ContentManager.ReadAsset<T>() returns a new object each time it is called with the same asset name.  Instead MonoGame was incorrectly caching assets within ReadAsset.  I simply moved the caching into Load<T> where it belongs.\n\nAs far as the line endings... it seems like someone had commited it with bad line endings before as it was the only file in all my changes with this issue.\n\nTo identify the changes... look for the + in the left column.  Github knows what changed, but doesn't display it well... it seems to focus on colorizing whitespace changes when it should focus on actual code changes.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3674268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3699858", "body": "Added a few small fixes and improvements from the FDS codebase.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3699858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940", "body": "@slygamer \n\nDo you think it would be better if we restored the ScissorRect to its previous state after the Clear()?\n\nNote that we have a patch coming that will remove all redundant GL state settings... so you don't need to worry about that issue.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141", "body": "I agree with what you're saying... you shouldn't assume these things and XNA is designed with that in mind.  Still MonoGame is not just following XNA theory... we're replicating its behavior.\n\nIf XNA doesn't reset the ScissorRect after the clear then we shouldn't be either.  Especially since in this case it is easy for us to make it work like XNA does.\n\nI'll double check the XNA behavior...  if you're good with this being fixed then i'll submit it as part of my next pull.\n- Tom\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542", "body": "Done... \n\nhttps://github.com/mono/MonoGame/pull/722\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969349", "body": "You are referencing the old SharpDX assemblies.\n\nThey were updated 11 days ago....\n\nhttps://github.com/kungfubanana/MonoGame-Dependencies/commits/\n\n... they did change the bytecode APIs and 2MGFX compiles correctly with the updated assemblies.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969401", "body": "No problem...  Git can be a real pain in the ass when it comes to those submodule references.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2552868", "body": "Looks like Android and Linux.\n\nI forgot we have multiple Song class implementations in separate folders.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2552868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677587", "body": "I don't use MRT myself on OGL yet.\n\n@et1337 can you give us some details on how you are using RTs?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2852800", "body": "Did this get fixed?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2852800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2867645", "body": "> code causes a rendering glitch on Mac, Linux and iOS\n\nWhat sort of glitch?  I will look out for it as i'm just getting into some deferred rendering and might spot it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2867645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2960018", "body": "Bump!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2960018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3055125", "body": "Yes.  My changes were already merged... so @slygamer 's PR #1662 covers the issue of checking the correct GL extensions for support.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3055125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3298654", "body": "@xanather - Can you look at this?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3298654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3463125", "body": "It happens from time to time.\n\nIt really makes things harder that we cannot visualize TABs vs SPACEs in the github diff view.  That would make things easy to tell if this was a merge that fixed things or not.\n\nNote you can still [see the diff if you want](https://github.com/mono/MonoGame/commit/b90a30f77cc5f0ceec844b504c98b3dcda9662dc?w=0)...\n\n```\nhttps://github.com/mono/MonoGame/commit/b90a30f77cc5f0ceec844b504c98b3dcda9662dc?w=0\n```\n\n... `w=0` is a hidden github feature that so far they refuse to add to the interface.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3463125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3463166", "body": "> Every line really is conflicted\n\nReally it is not....  whitespace should never be a conflict when it comes to code.  It is just dumb tools that make things difficult.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3463166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3711074", "body": "> I'd expect something like FreeType on Linux would need the full path to the\n> TTF / OTF file; it won't be like Windows where you can just get the kerning by font name.\n\nIMO this would be an improvement.\n\nWho wants to install a TTF on a system before they can build their game content?  I don't.\n\nIMO we should ditch System.Drawing on all platforms, including Windows, for FreeType.  Extend the .spritefont format to support an optional path to a .ttf/otf file.  When there is no path to a font file then look up the font file on the system if possible on that platform.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3711074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3866308", "body": "@dellis1972 @KonajuGames This looks to be a bug...  the Keys enum in stock XNA 4.0 isn't marked with a FlagsAttribute.\n\nIs there a platform specific reason for this or is it just an old bug?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3866308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3976986", "body": "How can I recreate this?  Just generating a sprite font with the MonoGame pipeline?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3976986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977036", "body": "What `typeWriter` is it passing into here?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977699", "body": "That is odd... i'll have to investigate further.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3978010", "body": "> I suspect a new instance of the typewriter was being created so it couldn't look it up.\n\nThat could be very well possible.  I don't see any reason why it couldn't look it up by Type instead of by instance.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3978010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1419278", "body": "This one line does bother me...  not sure if Environment.CurrentDirectory is the correct thing to do here.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1419278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560786", "body": "Seems like this should be internal and not public.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560791", "body": "Seems like this whole block above of platform specific #ifs can go away.  There should be no platform specific code left in SpriteBatcher now as it fully depends on GraphicsDevice objects.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560796", "body": "You should be able to use the DX path here...  just assign the texture to the GraphicsDevice.  No GL code needed.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560906", "body": "Weird... well that could be investigated and fixed later if need be.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1562405", "body": "Someone should investigate this and submit a separate fix if need be.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1562405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1559951", "body": "@Nezz - This look right to you?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1559951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560290", "body": "Fixed it.  Repull.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560295", "body": "Let me commit a fix.\n\nBasically...  if I get an unknown platform touch id... i'll ignore the touch.  2 minutes.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560297", "body": "Fixed... repull it and let me know if it works.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1600717", "body": "This fixed your problem because it forces the TextureCollection to reapply all textures.  Which tells us we're changing the bound texture incorrectly.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1600717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1600718", "body": "Maybe...  if the Shader is Dispose()d it is dead... so no one should be trying to use it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1600718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1600739", "body": "@slygamer\n\nThis seems like it was unnecessary as Threading.BlockOnUIThread() does GL.Flush() internally.\n\nRight?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1600739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602435", "body": "Unfortunately I have to deal with both Android and other platforms.  I just went with the store/restore method which works in all cases even if it can generate a little more wasted state changes.\n\nStill....  does GL.Finish() need to go back in here or not?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602715", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1674568", "body": "This will not work.\n\nThe iOS and Android builds #define both OPENGL and GLES....   you have to test GLES first then OPENGL.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1674568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1754502", "body": "Go ahead and change the #elif DIRECTX to #elif WINRT to remove that nesting of #ifs.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1754502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1754509", "body": "The reason is that we plan on a DirectX implementation for Win32 in the future which means it will be DirectX with SharpDX, but it won't use the WinRT API.\n\nSo when you write code you should think...  is this for all DX systems?  or is it only for WinRT systems?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1754509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1932895", "body": "I think you really mean \"unmanaged resources\" and not \"managed objects\" right?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1932895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2214261", "body": "Can you fix the include there...  should be DXGI not DXGL.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2214261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2214262", "body": "Can you fix the include there...  should be DXGI not DXGL.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2214262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2214270", "body": "The period is missing.... should be *.xml right?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2214270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2214272", "body": "The period is missing.... should be *.xml right?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2214272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2296103", "body": "This was internal on purpose.  It was only here so that the MonoGame platform code for Android could clear all touch locations on orientation changes.  Calling this on other platforms at the wrong time can lead to crashes and missed events.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2296103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2342700", "body": "If you are going to unroll this loop...  might as well remove the call Matrix.Transpose() and do the transpose during assignment.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2342700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2519215", "body": "Shouldn't this pass thru the parameter `vertexStride` and not `VertexDeclaration.VertexStride`.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2519215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2558472", "body": "This should be $guid1/2/3 to get a fresh Guid on creation.  See https://github.com/mono/MonoGame/blob/develop3d/ProjectTemplates/VisualStudio2010/Linux/MonoGameLinuxApplication.csproj\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2558472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2558476", "body": "If you use $guid1$ here then make sure you use $guid2$ in the project.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2558476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2761518", "body": "Can we make that static or move it to a static utility class?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2761518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2761063", "body": "Lets get a proper XML doc comment here describing what IsBorderless does and where it works.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2761063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2855893", "body": "Yea... maybe Dean can get to it first before Ray is back in the office.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2855893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956220", "body": "I wonder if it is MonoDevelop that is doing 'True' where VisualStudio does 'true'.  Maybe we can get the MonoDevelop team to fix that.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956223", "body": "This is referencing Windows here?  Is that correct?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956235", "body": "> The assembly should be cross platform\n\nOh... that is fantastic.  We should eventually move it up one folder if so.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956296", "body": "This says it is the opposite...\n\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=2612\n\nBut if I create a new C# project in VS2012 or VS2010 I see lower case bools.   Even tried changing the bools and resaving the files... it is always lower case bools.\n\nSo someone is wrong here...  I think that was an incorrect bug report.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956796", "body": "A patch to fix this appeared just now...\n\n  https://bugzilla.xamarin.com/show_bug.cgi?id=7914\n\nSo lets hope it makes it down to MonoDevelop soon.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2983334", "body": "Yea... for another PR.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2983334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2949008", "body": "This is based on what XNA says it does...\n\nhttp://msdn.microsoft.com/en-us/library/bb198902.aspx\n\nI still need to do some actual testing of behavior on XNA to get the details right, but they do throw exceptions at runtime here.\n\nI have the same gut reaction as Aranda.  I really do not like using exceptions to indicate incorrect use of the API.  In our case it is especially concerning as most of MonoGame is low level high performance code and we are trading runtime performance for a debugging feature.\n\nFrom [Code Complete](http://flylib.com/books/en/2.823.1.73/1/):\n\n> Exceptions should be reserved for conditions that are truly \n> exceptional\u2014in other words, for conditions that cannot be \n> addressed by other coding practices.\n\nThis does not seem \"exceptional\" (at least from the perspective of a shipped game) or something that cannot be addressed by docs, asserts, etc.\n\nYet XNA and other C# libraries seem to use exceptions for argument validation all the time.\n\nThe problem is that the user often only links against the release version of an assembly.  For example when you use MS XNA you don't link against a release version and a debug version like you would if it was a C++ library.  You only link against the release version...  this I guess is why validation of parameters is done via exceptions.\n\nI don't really know how to best resolve this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2949008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2963647", "body": "> I'd still prefer not to check incorrect parameters in RELEASE builds\n\nI would prefer that as well...  I just don't see a better solution right now.\n\nFor now we should commit this and move forward.\n\nWe should then open up an issue to discuss this problem and find a better solution.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2963647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3005717", "body": "I'm fine with fixes breaking work arounds.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3005717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3005777", "body": "If you work out of the develop3d branch you have to expect surprises like this.\n\nWhere we really need to signal this is part of release notes or change logs with the installer.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3005777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2937718", "body": "Can't this be internal?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2937718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2937754", "body": "What units is FrameInterval in?  Is it the number of 60hz frames between ticks?\n\nIs the math here correct?  If you are targeting 30fps...  the math works out to like 1.9999999999.  Integer cast always truncates the decimal so FrameInterval  will be assigned a value of 1.  Is this what this should be to target 30fps?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2937754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2938346", "body": "I suggest keep the code simple... use comments to describe exactly what you are doing.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2938346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3020929", "body": "Can you put a comment above this line explaining what the -2 is for?  This will help anyone in the future trying to figure out your code.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3020929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3020880", "body": "Can you put this in the audio namespace?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3020880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3020896", "body": "So what about platforms that can play MS ADPCM natively?  These are Windows DX, Windows 8, Windows Phone 8, etc?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3020896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3040424", "body": "Was this a bug?  Looks like the current code was creating 2 render buffers?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3040424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3155834", "body": "This is most likely wrong.\n\nIt would cause 2MGFX to always write sampler state to the effect and always overwrite the sampler set from code.  This is not the normal behavior of XNA Effect.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3155834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3155963", "body": "The be specific it means that when using BasicEffect....\n\n```\ndevice.SamplerStates[0] = SamplerState.PointClamp;\nbasicEffect.CurrentTechnique.Passes[0].Apply();\nDebug.Assert(device.SamplerStates[0] == SamplerState.PointClamp); // FAILS!\n```\n\nThis why by default the SamplerStateInfo is not dirty and instead only creates sampler state if the effect actually contains changed sampler state.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3155963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213752", "body": "`Application.Current.Terminate()` is a valid API for WP8 from what I can tell.\n\nThe only issue is if this is skipping the normal Game.OnExiting event or not.  Is it?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3214487", "body": "Sure... fixing that now.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3214487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201118", "body": "Using Min/Max here seems dangerous to me.  Can we not use the known orientation like you do below to get the right width and height?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201134", "body": "Could you maybe share this code with the same block above?  Maybe add a method to get the oriented viewport?\n\nOr maybe use the same technique as Effect and maybe keep _viewport and _orientedViewport?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201145", "body": "Again... maybe safer to use the known orientation and not min/max here.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201146", "body": "Reminder... prefer var over types.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201150", "body": "This seems crazy to me...  if you know it is landscape doesn't that mean width is always _preferredBackBufferHeight and height is always_preferredBackBufferWidth?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201154", "body": "Another thing to fix.  ScissorRectangle needs rotation too!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3201154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3253276", "body": "From what I can tell MonoGame itself does not call Game.OnExiting() from Game.Exit() on any existing platform.  The question is does MS XNA do this?  If so we can deal with it on all the platforms in another PR.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3253276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3253361", "body": "I created an issue for this #1499.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3253361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3267089", "body": "This is the old content processor code (MonoGame.ContentPipeline) which we probably should not mix with the new code (MonoGame.Framework.Content.Pipeline) to avoid further confusion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3267089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3306690", "body": "Can you call this something more accurate?  Like `EnsureArrayCapacity()` as it changes both the index and vertex arrays.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3306690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3311867", "body": "@totallyeviljake  The commend was for @nickdarnell as this is his PR.\n\n> GraphicsUtil.GetNextPowerOfTwo(int) should get pulled into MathHelper \n\nThat would be a good separate PR.\n\nSince this code is meant for the old content processing code which is very soon to be removed it is ok to leave this as is.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3311867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3402117", "body": "@nickdarnell - Can you fix this one please.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3402117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3406666", "body": "I think this may be a bug.  This is not an Android application...  it is simply a class library.  It could be what is causing these issues.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3406666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3406670", "body": "If you can revert these changes it would be nice.... it sucks that this code shuffled around for no reason.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3406670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3468812", "body": "Can you replace this license notice with the correct one from here:  \n\nhttps://github.com/mono/MonoGame/wiki/Coding-Guidelines#copyrightlicense-notice\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3468812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3402109", "body": "Can you change this to either `_enabledGestures` or `enabledGestures`.  We never use a 'm_` wart in the code.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3402109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3403728", "body": "Just make the change to the branch and push it.  PRs are always open and anything you push to it will update it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3403728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3406516", "body": "I think for now we should allow this for now so we can clear this PR...  it doesn't hurt anything really.\n\nStill i would like to see this class completely re-written sometime soon.  It should inherit from GameWindow....  we should not re-implement it for Mac.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3406516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3590470", "body": "Really this is fine... this isn't runtime code.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3590470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3502008", "body": "This should stay probably stay internal.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3502008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3502021", "body": "I suspect this breaks things when using the content pipeline for Song.\n\nSongReader will prepend `ContentManager.RootDirectoryFullPath` which includes the `TitleContainer.Location`.  Since this constructor is called from the other one you will end up with the directory added twice or some sort of exception I guess.\n\nThe right fix should be to move this to ContentManager.ReadRawAsset<T>() where this constructor is called.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3502021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3383901", "body": "Can you add a comment here as to why this is necessary?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3383901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3685207", "body": "In what case does this occur?  Is it a PSM thing?  If so could we add the reason for it into the comment instead of just \"hack\".  This will help us in the future when someone wonders what this was for.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3685207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3686764", "body": "It must be that the `cloneSource.CurrentTechnique` is null itself.  \n\nI just did a quick test and it seems that the behavior here is incorrect anyway.  In MS XNA CurrentTechnique always equals Techniques[0] after a Clone()... it does not matter what the current technique is on the original effect.\n\nSo if you remove the loop above which searches for the correct technique and replace your hack with simply:\n\n```\nCurrentTechnique = Techniques[0]; \n```\n\nWe should be good.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3686764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3686769", "body": "Also found that calling:\n\n```\neffect.CurrentTechnique = null;\n```\n\nShould throw an ArgumentNullException as this is never allowed, but we can leave that for some other time.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3686769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "KakCAT": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156", "title": "MGCB crash loading FIT_UINT16 image", "body": "ConvertAndSwapChannels is called to convert this image but FreeImage.ConvertTo32Bits fails to convert it , and it fails later. Type is FreeImageAPI.FREE_IMAGE_TYPE.FIT_UINT16\r\n\r\nsample image failing (from DigitalRune):  https://raw.githubusercontent.com/DigitalRune/DigitalRune/master/Samples/Content/Terrain/Terrain001-Height-0-1.png", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6089", "title": "UWP GamePage.xaml question/proposal", "body": "Hi,\r\n\r\neach time I have to make an UWP app that has to navigate to another XAML page, when going back to the 'monogame' GamePage.xaml, it is created again (meaning that everything is initialized again, loaded again, ...) because the system 'kills' GamePage.xaml the moment it is navigated away.\r\n\r\nWouldn't it be better to keep the MonoGame page intact as default, so that when people navigate back, everything is as it was before?\r\n\r\nAccording to https://docs.microsoft.com/en-us/windows/uwp/porting/getting-started-navigation , this would be achieved adding to the constructor of GamePage.xaml.cs ' template\r\n\r\n````\r\nNavigationCacheMode = Windows.UI.Xaml.Navigation.NavigationCacheMode.Enabled;\r\n````\r\n\r\nFor people that wants the old behaviour, it's easier to delete a line than having to browse internet to find a solution.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6054", "title": "[UWP]OnActivated bug?", "body": "Hi,\r\n\r\nwith the latest build where UWP is working (900), I create a new Monogame UWP project and add the following functions to Game1.cs:\r\n\r\n```\r\n\t\tprotected override void OnActivated(object sender, EventArgs args)\r\n\t\t{\r\n\t\t\tSystem.Diagnostics.Debug.WriteLine (\"--->OnActivated\");\r\n\t\t\tbase.OnActivated(sender, args);\r\n\t\t}\r\n\r\n\t\tprotected override void OnDeactivated(object sender, EventArgs args)\r\n\t\t{\r\n\t\t\tSystem.Diagnostics.Debug.WriteLine (\"--->OnDeactivated\");\r\n\t\t\tbase.OnDeactivated(sender, args);\r\n\t\t}\r\n\r\n\t\tprotected override void OnExiting(object sender, EventArgs args)\r\n\t\t{\r\n\t\t\tSystem.Diagnostics.Debug.WriteLine (\"--->OnExiting\");\r\n\t\t\tbase.OnExiting(sender, args);\r\n\t\t}\r\n```\r\n\r\n\r\nRun the project with F5, wait until the window is opened, and then close it. The debug output shows this:\r\n\r\n--->OnActivated\r\n--->OnDeactivated\r\n--->OnActivated\r\n\r\n(not only OnActivated is called after deactivation and closing, but OnExiting is not being called)\r\n\r\nedit: I'm aware OnExiting is complex in the UWP, but what is really killing me is the extra activation, as I'm deleting some tombstone files and then the 'game continue' is lost because there's never another deactivation.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5703", "title": "InvalidEnum on android 4.1.2", "body": "The line \r\n\r\n`GL.GetInteger((GetPName) GetParamName.MaxSamplesExt, out _maxMultiSampleCount);`\r\n\r\ncrashes my Xperia S 4.1.2 with InvalidEnum. Commenting it makes my game playable on 4.1 despite some sound issues.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5658", "title": "Pipeline Tool file linking", "body": "Hello,\r\n\r\nI've been patching the Pipeline tool to accept linked files. \r\n\r\n\r\nSome notes:\r\n\r\n* The patch includes @vchelaru 's PR to support links in MGCB  https://github.com/MonoGame/MonoGame/pull/5574 with the addition of links to 'copied' files, which were missing (I'm so lame at git that I had to copy them manually to my repository)\r\n* When deleting linked files, \"LINKED TO\" appears in the delete list to show they're linked files. There is surely a better way.\r\n* To mimic Visual Studio links, when using \"Alt\" key to drag/drop files, no confirmation is required and \"Link\" is selected, as well as applyToAll.\r\n* To mimic VS, when adding links that are not included in the project (because they already are included) a message box is shown. (In VS it appears in the log, but I didn't find a log to include it, and it was very confusing when files were not added without apparent reason). The message does not appear when copying (unless I messed up)\r\n\r\n\r\nUnfortunately using git when other human users are around is too much for an old git like me (pun intended) and I've set up a project and uploaded all the changes there (that's the most I can do in git without spending an hour looking at documentation).\r\nHere it is:  https://github.com/MonoGame/MonoGame/compare/develop...KakCAT:pipeline_tool_link_patch   (I don't even know if this is the link I should be posting XD ) \r\n\r\nIt also mixes several different features in a single PR, which shouldn't be done, and some variable names might not be congruent with the coding style of the project. Not even mentioning tabs and spaces and formatting :)\r\n\r\nFinally, I have no idea at all of the Pipeline tool, so some pieces of code are more a dirty hack than a nice piece for a PR. I just hope the repository is useful to somebody with more Pipeline tool knowledge to integrate it. On the bright side I've overcommented some parts to give the 'integrator' a clue of what I'm doing :)\r\n\r\n\r\n\r\n\r\nMissing features I haven't been able to figure out:\r\n* When deleting a linked file, the tree is not updated (I spent hours trying to figure why, so I left it blank). When deleting folders it is OK.  It is very annoying (do you have any clue, @cra0zy ? )\r\n* Icons should have a \"link\" icon when linking.\r\n* To mimic Visual Studio links, deleting a bunch of linked files should show no delete confirmation.\r\n* The linking system is a bit sensitive when it founds '\\\\' instead of '/', which shouldn't appear unless you edit the mgcb manually. I suppose the fix to this problem should be when loading the file from disk, so I decided not to touch that.\r\n* Renaming linked assets do not work (it's easily doable but I don't know if it should be done. VS won't let you)\r\n* Some bits will only work in windows (no idea of xwt, sorry)\r\n\r\nI've been testing this for a few days with 2 of my projects without problems, but maybe my workflow doesn't show them. At least I think it's a good starting port to support file linking referred in #5109 \r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5490", "title": "Android mipmapping not working?", "body": "I've had a very confusing issue with Android and mipmapped textures. First I thought that it was a bug in the game I was porting, until I tested it in a minimal MG project.\r\n\r\nThere's not much to explain, textures without mipmapping work and with mipmap won't, even using a SpriteBatch.\r\n\r\n[androidTest2.zip](https://github.com/MonoGame/MonoGame/files/789981/androidTest2.zip)\r\n\r\nThe texture seems to fail to be loaded, but it's not throwing an exception. Previous versions work with the same textures (I had a build from august 2016 which correctly loads the textures).", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5482", "title": "[DANGEROUS] MGCB wiping out folders", "body": "Hello,\r\n\r\nI know MGCB does not support linked files yet and that linked files are problematic, but I'm porting to Android and it seems the \"new\" android MG versions does not support textures with mipmapping compiled from old XNA XNBs, so I'm in need to use MGCB, and file linking is a must due to my folder structure.\r\n\r\nBut even with that in mind, I think this is an issue that should be urgently fixed \r\n\r\nI'm attaching a zip file with an structure of folders.\r\n\r\n[folder1.zip](https://github.com/MonoGame/MonoGame/files/784454/folder1.zip)\r\n\r\nGo through the folders to \"project\" and open the project with MGCB.\r\n\r\nThe project only has a file: assets/x.png . Unfortunately linking files does not work, so it's putting it in ../assets/x.png.\r\n\r\nThe problem is that if you try to delete the .. folder (as I did a few minutes ago), not only x.png appears to be deleted, but the WHOLE .. folder... and subfolders. It asks for confirmation, but one supposes that it should be only deleting the x.png file, so I skipped checking.\r\n\r\nLuckily when I did that, all that deleted were my other platform project I had in that folder (which had been commited a moment ago into mercurial) but if I had had that folder in the root on my HD, it'd have wiped out the entire hard disk!\r\n\r\n(in fact it even wipes out the very same mgcb file)\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexandervrs": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155", "title": "Streaming for XACT sounds", "body": "SoundEffects seem to be more rich in features than MediaPlayer Songs with the exception that **they cannot be streamed**, as such large tracks have to be loaded in memory and also **are not seekable**.\r\n\r\nIt would be great if there was an option to have a SoundEffect streamable that would also allow us to create instances of it, apply volume, pan, pitch and also seek (get/set) the track position. I understand this would also possibly need a **_AudioStream_** type in the Pipeline tool, which would need the sound converted to the correct audio format per-platform)\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154", "title": "Seeking track position for MediaPlayer Songs", "body": "There should be the ability to be able to **seek MediaPlayer Songs** and get/set their track position while a Song is playing/paused/stopped. \r\n\r\nThat would allow cases like skipping parts of a song, syncing the song to the action or creating custom loop points. Following the [reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4), it is stated that seeking works only for a few platforms.\r\n\r\n[Forum reference topic](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200/4)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153", "title": "Ability for playback of multiple MediaPlayer songs", "body": "There should be the ability to **be able to use more than one Song at a time.** \r\n\r\nCommon use cases would be to be able to **crossfade between 2 songs** or **use other songs as background ambience** (like sea, birds, rain) and **play together** along with the background music.\r\n\r\n[Reference forum topic\r\n](http://community.monogame.net/t/audio-features-problem-more-than-1-song-at-a-time-streaming-seeking-sound-effects/10200)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wldevries": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150", "title": "Custom name for Content project in msbuild pipeline is not configurable", "body": "In XNA it is possible to rename a content project. This would place the resulting binaries in a directory with the name of your choosing. In MonoGame you can rename the .mgcb file or rename the directory it resides in, but the msbuild system will always copy it to a directory named Content in the target directory.\r\n\r\nFirstly this is a problem because it differs from XNA. Secondly this is a problem because you have no way to separate the target directory of multiple content projects in a single project. This can very easily lead to file name collisions.\r\n\r\nhttp://community.monogame.net/t/changing-contentroot-directory-monogame-still-builds-into-content-folder/2527\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronfranke": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149", "title": "Support for double-precision floats", "body": "For games that deal with large scales, double-precision (64-bit) float support is very nice to have. \r\n\r\n* Many large-scale games on custom engines use `double`, such as Minecraft, Star Citizen, Elite: Dangerous, Space Engineers, Grand Theft Auto, the Unigine game engine, and likely many many more. \r\n\r\n* Few game engines currently support `double` for legacy reasons back when CPUs weren't able to calculate `double` quickly, however, modern FPUs and SIMDs can handle double-precision without issues. Some can even use quadruple-precision at high speeds. \r\n\r\n* Some large scale games, like Kerbal Space Program, use `double` for math and convert back to `float` for local positioning of objects, because it uses the Unity game engine which uses single-precision floats. This isn't efficient or ideal, is difficult to program, and ends up being buggy in the end.\r\n\r\nOne way of doing this is by creating an abstract type `real_t` instead of `float` which can be `typedef` to either `float` or `double`. This is ideal because it would allow MonoGame to compile with either `float` or `double` support with minimal effort. This is how Godot is implementing it: https://github.com/godotengine/godot/issues/288\r\n\r\nIt may also be worthwhile to create structs like `Vector3f` and `Vector3d` which are always `float` or `double` respectively, so that creators of games can choose a fixed type to use with their scripting.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dmanning23": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148", "title": "Render Targets ignore RenderTargetUsage parameter", "body": "I recently started updating to MonoGame 3.6 (boo technical debt!) but I've noticed that none of my \"games\" that use rendertargets are rendering correctly... It seems that between MonoGame 3.5.1 -> 3.6 the RenderTargetUsage parameter is being ignored.\r\n\r\nThis is a DesktopGL tool that worked perfectly in 3.5.1, but after updating to 3.6 clears the screen contents to black. I specifically have the following code in the app:\r\n\r\n\r\n//When using render targets, don't clear the screen!!!\r\nGraphicsDevice.PresentationParameters.RenderTargetUsage = RenderTargetUsage.PreserveContents;\r\n\r\nwhich is being ignored.\r\n\r\nSomewhere in the guts of the GL code the RenderTargetUsage is being reset to DiscardContents.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6148/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aaronbolyard": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147", "title": "Wrong assumption about Renderbuffer/Texture names when creating Framebuffers in OpenGL", "body": "Hello,\r\n\r\nIt appears there's a small bug when a texture and a renderbuffer belonging to a framebuffer share the same resource name. When I create a MSAA RenderTarget2D in an otherwise empty game, the texture name is 1 and the renderbuffer name is 1 (Windows 10, Nvidia 1050 Ti, driver version 388.43). It appears there is an assumption renderbuffer and textures can never share a name in GraphicsDevice.OpenGL.cs:844:\r\n\r\n```cs\r\nif (renderTarget.GLColorBuffer != renderTarget.GLTexture)\r\n    this.framebufferHelper.FramebufferRenderbuffer(attachement, renderTarget.GLColorBuffer, 0);\r\nelse\r\n    this.framebufferHelper.FramebufferTexture2D(attachement, (int)renderTarget.GetFramebufferTarget(renderTargetBinding), renderTarget.GLTexture, 0, renderTarget.MultiSampleCount);\r\n```\r\n\r\nI'm not sure how to fix it. I changed the condition to `if (renderTarget.MultiSampleCount > 0)` and it fixed my issue, but I'm not sure if that logic is inherently correct. (Can MultiSampleCount > 0 and a texture is still be used as the attachment?)\r\n\r\nOpenGL generates an error about an incomplete buffer binding, and apitrace shows that a texture is attached as the color attachment instead of the renderbuffer.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6147/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rbaarda": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145", "title": "System.DllNotFoundException: nvtt on MacOS 10.13", "body": "Downloaded MonoGame 3.6 from the site.\r\nDownloaded MonoGame 3.6 PipeLine GUI tool for MacOS.\r\n\r\nWhenever trying to build, MGCB.exe fails with DllNotFoundException: nvtt.\r\n\r\nSee full output of build:\r\n```\r\nProject \"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/GameTest.Desktop.csproj\" (Build target(s)):\r\n\r\nTarget RunContentBuilder:\r\n    /Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x\r\n    EXEC : warning : Asset metal.jpg built multiple times with different settings.\r\n    \t/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \t\tCould not compress texture. Required shared lib is missing. System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttCreateCompressor ()\r\n      at Nvidia.TextureTools.Compressor..ctor () [0x00006] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.TryCopyFrom (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x00140] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Rectangle sourceRegion, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap, Microsoft.Xna.Framework.Rectangle destinationRegion) [0x0011f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy (Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent sourceBitmap, Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent destinationBitmap) [0x0004c] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.Compress (System.Type targetType, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps) [0x0007f] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.GraphicsUtil.CompressDxt (Microsoft.Xna.Framework.Graphics.GraphicsProfile profile, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, System.Boolean generateMipMaps, System.Boolean isSpriteFont) [0x00063] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.DefaultTextureProfile.PlatformCompressTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00067] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x0003d] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/ship2.x : error : Processor 'TextureProcessor' had unexpected failure!\r\n    System.DllNotFoundException: nvtt\r\n      at Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture (Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context, Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent content, Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessorOutputFormat format, System.Boolean generateMipmaps, System.Boolean isSpriteFont) [0x00095] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.Processors.TextureProcessor.Process (Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x002bb] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2[TInput,TOutput].Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process (System.Object input, Microsoft.Xna.Framework.Content.Pipeline.ContentProcessorContext context) [0x00038] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n      at MonoGame.Framework.Content.Pipeline.Builder.PipelineManager.ProcessContent (MonoGame.Framework.Content.Pipeline.Builder.PipelineBuildEvent pipelineEvent) [0x00163] in <a08ce79bc40d4146bf2ee59422c41dea>:0 \r\n    /Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/metal.jpg\r\n    \r\n    Unhandled Exception:\r\n    System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    [ERROR] FATAL UNHANDLED EXCEPTION: System.DllNotFoundException: nvtt\r\n      at (wrapper managed-to-native) Nvidia.TextureTools.Compressor:nvttDestroyCompressor (intptr)\r\n      at Nvidia.TextureTools.Compressor.Finalize () [0x00000] in <3f660b47cee74ab78456ee600c3e6d62>:0 \r\n    /Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets(90,5): error MSB3073: The command \"/Library/Frameworks/Mono.framework/Versions/Current/bin/mono \"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools/MGCB.exe\" /@:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/GameContent.mgcb\" /platform:DesktopGL /outputDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/bin/DesktopGL\" /intermediateDir:\"/Users/CrazyLegz/Projects/GameTest/GameTest.Desktop/Content/obj/DesktopGL\" /quiet\" exited with code 255.\r\nDone building target \"RunContentBuilder\" in project \"GameTest.Desktop.csproj\" -- FAILED.\r\n```\r\nWhen running from terminal with $MONO_LOG_LEVEL=debug there are some interesting entries, see the last item:\r\n```\r\nMono: DllImport error loading library 'libnvtt.so': 'dlopen(libnvtt.so, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt.bundle': 'dlopen(libnvtt.bundle, 9): image not found'.\r\nMono: DllImport error loading library 'libnvtt': 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport unable to load library 'dlopen(libnvtt, 9): image not found'.\r\nMono: DllImport attempting to load: 'nvtt'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt, 9): image not found'.\r\nMono: DllImport error loading library '/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib': 'dlopen(/Library/Frameworks/MonoGame.framework/v3.6.0.1625/Tools/libnvtt.dylib, 9): no suitable image found.  Did find:\r\n\t/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/Tools//libnvtt.dylib: mach-o, but wrong architecture\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vpenades": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144", "title": "Proposal to switch from local dependency references to NuGet packages.", "body": "Right now, all third party dependencies required to build MonoGame SDK are located in a [Dependencies Repository](https://github.com/MonoGame/MonoGame.Dependencies) and so far, this architecture has worked well.\r\n\r\nBut right now, developers are moving towards NuGet packages as the preferred mechanism to reference third party dependencies. We will have different feelings whether this is a right or wrong approach, but certainly, it's a train that cannot be stopped anymore.\r\n\r\nMore and more developers expect MonoGame to be available as NuGet packages. But in order to offer proper nuget packages, MonoGame also needs to be part of the ecosystem, which means that MonoGame should consume nuget packages when applicable.\r\n\r\nThere's already a number of third party dependencies that are available as NuGet packages, in fact, some dependencies are ONLY available as NuGet packages, SharpDX being the most notorious case, as more projects in which we depend move to NuGet, this problem will only get worse.\r\n\r\nIn the early days, a lot of work was done to provide a specific cross platform solution for MonoGame, when nothing else was available, but IDEs and NET itself have finally catched up to provide better and more powerful cross platform solutions. I understand some developers might want to work the traditional way, everything with local dependencies, etc, but not supporting NuGets is not an option anymore, and trying to keep MonoGame SDK being able to build \"the old fashioned way\" and \"with nugets\" is consuming a lot of time from the lead developers.\r\n\r\nSo my proposal is to write here some sort of roadmap for a progressive transition from local dependencies to nuget packages:\r\n\r\n1. Identify the current problems that prevent referencing nuget packages in monogame SDK.\r\n2. Identify which local third party dependencies can be switched to nuget packages.\r\n3. progressively replace these dependencies, one by one.\r\n\r\nOther issues already mentioning the Nuget package issue: #5724 #5565 #5262\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6144/reactions", "total_count": 7, "+1": 7, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6113", "title": "ModelProcessor's SwapWindingOrder does nothing", "body": "\r\nI've tried to reverse the winding order of a model in MGCB, but after compiling the assets I didn't notice any effect.\r\n\r\nThe expected behavior is that when SwapWindingOrder is true, it should flip all the faces.\r\n\r\nI've checked the source code, and [SwapWindingOrder](https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework.Content.Pipeline/Processors/ModelProcessor.cs#L84) is not being referenced anywhere in the code. It's like an unused property.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6093", "title": "MGCB - NVidia.TextureTools Exception when processing a texture", "body": "Monogame `3.7.0.966`, then tried with `3.7.0.1126` and still the same problem.\r\n\r\nI am randomly getting this exception when processing assets with MGCB:\r\n\r\n```\r\nSystem.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   in Nvidia.TextureTools.Compressor.nvttCompress(IntPtr compressor, IntPtr inputOptions, IntPtr compressionOptions, IntPtr outputOptions)\r\n   in Microsoft.Xna.Framework.Content.Pipeline.Graphics.DxtBitmapContent.TryCopyFrom(BitmapContent sourceBitmap, Rectangle sourceRegion, Rectangle destinationRegion)\r\n   in Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy(BitmapContent sourceBitmap, Rectangle sourceRegion, BitmapContent destinationBitmap, Rectangle destinationRegion)\r\n   in Microsoft.Xna.Framework.Content.Pipeline.Graphics.BitmapContent.Copy(BitmapContent sourceBitmap, BitmapContent destinationBitmap)\r\n   in Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureContent.ConvertBitmapType(Type newBitmapType)\r\n   in Microsoft.Xna.Framework.Content.Pipeline.Graphics.TextureProfile.ConvertTexture(ContentProcessorContext context, TextureContent content, TextureProcessorOutputFormat format, Boolean isSpriteFont)\r\n```\r\n\r\nIt happens when processing textures of 3D models. what's worse is that it doesn't happens always.... for now the only solution is to try to recompile until it works. But it's a nightmare because we have our project in TeamCity, so we have to manually queue new rebuilds until it compiles.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5807", "title": "Remove Windows Phone 8 / WinRT support", "body": "I've did a fork [here](https://github.com/vpenades/MonoGame) to upgrade monogame to SharpDX 4.0.1 #3794 , but it's failing to compile on Windows 8 project because SharpDX has removed support for it. So I pulled back my PR.\r\n\r\nPrior trying to upgrade to SharpDX 4.0.1 , Windows 8 platform support needs to be removed. I guess this is a hairy issue, so I leave it here for people to decide what to do with this platform.\r\n\r\nNotice that keeping Windows8 support implies not being able to upgrade to newer versions of SharpDX.\r\n\r\n@tomspilman I think I would need assistence with this...", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5726", "title": "Monogame.Framework.WindowsUniversal should not include SharpDX assembly binaries", "body": "I am having conflicts trying to use Monogame.Framework.WindowsUniversal, I'm getting this error:\r\n```\r\nPayload contains two or more files with the same destination path 'SharpDX.Direct3D11.dll'. Source files:\r\n....MonoGame.Framework.WindowsUniversal\\3.6.0.1625\\lib\\netcore\\SharpDX.Direct3D11.dll\r\n....SharpDX.Direct3D11\\3.0.0\\lib\\portable-net45+netcore45+wpa81+MonoAndroid1+MonoTouch1\\SharpDX.Direct3D11.dll\r\n```\r\nWhat I noticed is that `Monogame.Framework.WindowsUniversal` is including SharpDX binary assemblies directly!?\r\n\r\n\r\n```\r\n<files>\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\Themes\\generic.xbf\" target=\"lib\\netcore\\MonoGame.Framework\\Themes\\generic.xbf\" />\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\MonoGame.Framework.dll\" target=\"lib\\netcore\\MonoGame.Framework.dll\" />\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\MonoGame.Framework.xml\" target=\"lib\\netcore\\MonoGame.Framework.xml\" />\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\MonoGame.Framework.pri\" target=\"lib\\netcore\\MonoGame.Framework.pri\" />\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\MonoGame.Framework.xr.xml\" target=\"lib\\netcore\\MonoGame.Framework\\MonoGame.Framework.xr.xml\" />\r\n\r\n        <!-- should remove these references -->\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\SharpDX.Direct2D1.dll\" target=\"lib\\netcore\\SharpDX.Direct2D1.dll\" />\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\SharpDX.Direct3D11.dll\" target=\"lib\\netcore\\SharpDX.Direct3D11.dll\" />\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\SharpDX.dll\" target=\"lib\\netcore\\SharpDX.dll\" />\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\SharpDX.DXGI.dll\" target=\"lib\\netcore\\SharpDX.DXGI.dll\" />\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\SharpDX.MediaFoundation.dll\" target=\"lib\\netcore\\SharpDX.MediaFoundation.dll\" />\r\n        <file src=\"WindowsUniversal\\AnyCPU\\Release\\SharpDX.XAudio2.dll\" target=\"lib\\netcore\\SharpDX.XAudio2.dll\" />\r\n\r\n        <file src=\"..\\..\\NuGetPackages\\readme\\MonoGame.Framework\\readme.txt\" target=\"readme.txt\" />\r\n    </files>\r\n```\r\n\r\n\r\nThis is wrong, when a nuget package has references to assemblies also available as NuGet packages, it should not include the assembly binaries. Instead, it should let NuGet resolve the references.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6102", "title": "c# Replacement for Nvidia Texture Tool (fixes #6093)", "body": "This is a fix for https://github.com/MonoGame/MonoGame/issues/6093 , since the NVidia Texture Tool is already 10 years old, I was told that it was due to be replaced by a c# implementation.\r\n\r\nSo I've just rolled in a c# implementation of [LibSquish](https://github.com/svn2github/libsquish) the original C++ library also used by NVidia Texture Tool.\r\n\r\nMy C# library can also be found at [TextureSquish](https://github.com/vpenades/TextureSquish) , where you can also find unit tests.\r\n\r\nThe implementation code used by MonoGame is located in Graphics\\DtxTexture , and it has been modified to use Microsoft.XNA.Framework.VectorX  instead of System.Numeric.Vectors, which are faster since they're SIMD accelerated, but I didn't wanted (nor I know how to) add a nuget package reference to the project.\r\n\r\nCompression quality is set to maximum by default, this is the same behaviour as NVTT\r\n\r\nAfter trying this version with our project, all the content assets compile again.\r\n\r\nI've left the NVidia Texture Tool dependency, since I don't know if it's being used by other projects.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "esengine": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140", "title": "I want to make a gui framework for monogame, but encountered a problem, please help me", "body": "I recently wanted to make a gui framework for monogame but encountered a difficulty when doing Textbox and then on windows I did not know how to make my textbox allow IME pops up and what should i do with textbox to pop IME and support multi-character enter? Can you help me solve this problem?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "persn": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137", "title": "Support for \"dotnet build\"", "body": "Please note that this is not a request for MonoGame itself to build with .NET Core or .NET Standard.\r\n\r\nI would simply like to be able to run the command ``dotnet build MySolution.sln`` and make it work. I have a solution with some MonoGame projects, and several library projects, I wanted to convert the library projects to .NET Standard 2.0, and then build on TeamCity by using the dotnet tools. However, when I try to build even a basic MonoGame project it aborts with errors. From what I can gather, it's looking for the .targets script in a place where it isn't installed.\r\n\r\nTested on MonoGame v.3.5.1 and Dev Build v3.7.0.1156\r\n\r\n````\r\n$ dotnet build TestMonoGameDotnet.sln\r\nMicrosoft (R) Build Engine version 15.5.179.9764 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\nBuild FAILED.\r\n\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj : warning NU1503: Skipping restore for project 'E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj'. The project file may be invalid or missing targets required for restore. [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.2\\NuGet.targets(103,5): warning : Unable to find a project to restore! [E:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet.sln]\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\nE:\\Programming\\TestMonoGameDotnet\\TestMonoGameDotnet\\TestMonoGameDotnet.csproj(109,3): error MSB4019: The imported project \"C:\\Program Files\\dotnet\\sdk\\2.1.2\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    2 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:00.20", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eSPiYa": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136", "title": "How to use MG Shared Project to create a cross-platform app?", "body": "I'm trying to follow this [instruction](https://stackoverflow.com/questions/37869610/setup-project-cross-platform-with-monogame/38508441#38508441) but the Game1 class cannot found from the platform project.\r\n\r\nThis is how I created the projects(Xamarin Studio):\r\n1. Created a MonoGame Shared Project and named it as \"MainGame\"\r\n2. Created a MonoGame Cross Platform Desktop Project and named it as \"MainGame.DesktopGl\"\r\n3. Deleted \"Game1.cs\" and \"Content Folder\" from \"MainGame.DesktopGl\"\r\n4. From the \"MainGame.DesktopGl\", I added reference to \"MainGame\"\r\n5. Set the Output Assembly Name of \"MainGame.DesktopGl\" as \"MainGame\"\r\n\r\nI'm still fairly new to Xamarin Studio and never used Shared Projects before because it is not natively installed on Visual Studio and can't find any use for it in my previous projects because all of it are web applications.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Sizaar": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134", "title": "[SharpDX] SamplerComparisonState doesn't work with SurfaceFormat.HalfSingle", "body": "SamplerComparisonState doesn't work as intended with SurfaceFormat.HalfSingle.\r\nWhen I use SurfaceFormat.HalfSingle with Cascaded Shadow Maps I get this as a result:\r\n![cmp_wrong](https://user-images.githubusercontent.com/10170250/34663539-a3f56c10-f457-11e7-8bc3-5065c4ed72ff.jpg)\r\n\r\nChanging DXGI_FORMAT in this line:\r\nhttps://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Windows/SharpDXHelper.cs#L96\r\n from **R16_Float** to **R16_UNorm** results in correct sampling:\r\n![cmp_good](https://user-images.githubusercontent.com/10170250/34663544-a8f032ae-f457-11e7-93c9-40b2cfc64953.jpg)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6036", "title": "[SharpDX] Problems with DXT render targets", "body": "Creating a render target with SurfaceFormat.Dxt1/3/5 or SurfaceFormat.Dxt1/3/5SRgb results in an SharpDX exception \"The parameter is incorrect\", here is the stack trace:\r\n```\r\n   at SharpDX.Result.CheckError()\r\n   at SharpDX.Direct3D11.Device.CreateTexture2D(Texture2DDescription& descRef, DataBox[] initialDataRef, Texture2D texture2DOut)\r\n   at Microsoft.Xna.Framework.Graphics.TextureCube.CreateTexture()\r\n   at Microsoft.Xna.Framework.Graphics.TextureCube..ctor(GraphicsDevice graphicsDevice, Int32 size, \r\nBoolean mipMap, SurfaceFormat format, Boolean renderTarget)\r\n   at Microsoft.Xna.Framework.Graphics.RenderTargetCube..ctor(GraphicsDevice graphicsDevice, Int32 size, \r\nBoolean mipMap, SurfaceFormat preferredFormat, DepthFormat preferredDepthFormat, Int32 preferredMultiSampleCount, RenderTargetUsage usage)\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5588", "title": "Content Pipeline doesn't have all build actions", "body": "The Content Pipeline does not have the \"None\" build action. XNA had this option and it was very useful with .fxh files (effect header files). In MonoGame I have to set the build action to \"Copy\" and then manually remove these files from my built content.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mgambrell": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133", "title": "ffprobe misdetects wave files during content building", "body": "We get this error \"Calcualted block align does not match RIFF\"\r\n\r\n![sfx-error](https://user-images.githubusercontent.com/13956755/34644960-54d60622-f307-11e7-91b9-d44ae5d75876.JPG)\r\n\r\nWhen trying to build wav files. Seems to be caused by ffprobe heuristics misdetecting it as mp4. \r\n\r\n[swoosh1 - Copy.zip](https://github.com/MonoGame/MonoGame/files/1609362/swoosh1.-.Copy.zip)\r\n\r\nWe worked around it by munging the file a bit (resampling to 48k then back to 44.1k) which made the mp4 magic word no longer appear. The problem definitely wasn't in the plentiful metadata; first thing i tried was deleting that and it didn't help.\r\n\r\nThis method for identifying content is not good.\r\n\r\nI don't really expect anyone to fix this, I'm just putting it here for findability, in case anyone else hits the same issue\r\n  ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6141", "title": "add SingleReader and EffectReader to auto-spidered reader list", "body": "Why don't we incorporate EffectReader by default? I know a lot of games don't need effects, but every single one that doesnt not need effects, does.\r\nSingleReader is tiny, and an obvious counterpart to ArrayReader<float> (I needed it for loading movie files)\r\n\r\nNOTE: I made this edit on github. So I don't know whyfor the huge amount of noise. But it should be safe.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "demonixis": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130", "title": "[DesktopGL] Pixel Shader compilation failed in runtime", "body": "Hello,\r\n\r\nI'm working on an engine called C3DE, it supports Windows and DesktopGL. Recently I've a serious issue with all my shader for DesktopGL. The compilation from HLSL to GLSL is fine with the Pipeline tool. My code is well generated into XNB. However, when I try to use some of my shaders, it fails with a this message:  `An unhandled exception of type 'System.AccessViolationException' occurred in Unknown Module.`\r\n\r\nAfter some debugging, I found a part of the problem\r\n\r\nThe `DrawIndexedPrimitives` function will call many functions.\r\n- `Link(Shader vs, Shader ps)` in ShaderProgramCache.cs\r\n- `GetShaderInfoLog` in OpenGL.cs\r\n- And finally `GetShaderInfoLogInternal`\r\n\r\nThis is the last one which causes the crash. The Vertex Program is fine, it's hashkey is normal. However almost **all** my pixel shader have a negative hashkey and those ones failed to compile.\r\n\r\nThis is the pixel shader generated by Pipeline\r\n\r\n```glsl\r\n#ifdef GL_ES\r\nprecision mediump float;\r\nprecision mediump int;\r\n#endif\r\n\r\nuniform vec4 ps_uniforms_vec4[4];\r\nconst vec4 ps_c4 = vec4(-1.0, 0.0, 1.0, 0.0);\r\nconst vec4 ps_c5 = vec4(-1.0, -2.0, -3.0, 0.0);\r\nvec4 ps_r0;\r\nvec4 ps_r1;\r\nvec4 ps_r2;\r\nvec4 ps_r3;\r\nvec4 ps_r4;\r\n#define ps_c0 ps_uniforms_vec4[0]\r\n#define ps_c1 ps_uniforms_vec4[1]\r\n#define ps_c2 ps_uniforms_vec4[2]\r\n#define ps_c3 ps_uniforms_vec4[3]\r\nuniform samplerCube ps_s0;\r\nvarying vec4 vTexCoord0;\r\n#define ps_v0 vTexCoord0\r\n#define ps_oC0 gl_FragColor\r\n\r\nvoid main()\r\n{\r\n\tps_r0.xy = ps_c4.xy;\r\n\tps_r0.x = ps_r0.x + ps_c3.x;\r\n\tps_r1.xyz = normalize(ps_v0.xyz);\r\n\tps_r1 = textureCube(ps_s0, ps_r1.xyz);\r\n\tif (-ps_r0.x != ps_r0.x) {\r\n\t\tps_r2 = ps_c4.yyyy;\r\n\t} else {\r\n\t\tif (-ps_c1.x < ps_r0.y) {\r\n\t\t\tps_r0.z = ps_v1.x * ps_v1.x;\r\n\t\t\tps_r0.w = ps_c1.y * ps_c1.y;\r\n\t\t\tps_r0.z = ps_r0.z * ps_r0.w;\r\n\t\t\tps_r0.w = log2(ps_c0.x);\r\n\t\t\tps_r0.z = ps_r0.w * ps_r0.z;\r\n\t\t\tps_r0.z = exp2(ps_r0.z);\r\n\t\t\tps_r0.z = 1.0 / ps_r0.z;\r\n\t\t\tps_r3.x = fract(ps_c1.x);\r\n\t\t\tps_r3.y = ((-ps_r3.x >= 0.0) ? ps_c4.y : ps_c4.z);\r\n\t\t\tps_r0.y = ((ps_c1.x >= 0.0) ? ps_r0.y : ps_r3.y);\r\n\t\t\tps_r3.x = -ps_r3.x + ps_c1.x;\r\n\t\t\tps_r0.y = ps_r0.y + ps_r3.x;\r\n\t\t\tps_r3.x = ps_c1.y * ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.x;\r\n\t\t\tps_r0.w = exp2(ps_r0.w);\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.xyz = ps_r0.yyy + ps_c5.xyz;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.z) >= 0.0) ? ps_r0.z : ps_c4.z);\r\n\t\t\tps_r0.z = ((-abs(ps_r3.y) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = -ps_c1.z + ps_c1.w;\r\n\t\t\tps_r0.w = 1.0 / ps_r0.w;\r\n\t\t\tps_r3.y = ps_c1.w + -ps_v1.x;\r\n\t\t\tps_r0.w = ps_r0.w * ps_r3.y;\r\n\t\t\tps_r0.z = ((-abs(ps_r3.x) >= 0.0) ? ps_r0.w : ps_r0.z);\r\n\t\t\tps_r0.w = clamp(ps_r0.z, 0.0, 1.0);\r\n\t\t\tps_r0.y = ((-ps_r0.y >= 0.0) ? ps_r0.z : ps_r0.w);\r\n\t\t\tps_r0.z = -ps_r0.y + ps_c4.z;\r\n\t\t\tps_r0.yzw = (ps_r0.yyy * ps_r1.xyz) + ps_r0.zzz;\r\n\t\t\tps_r3.xyz = ps_r0.yzw * ps_c2.xyz;\r\n\t\t\tps_r3.w = ps_c4.z;\r\n\t\t} else {\r\n\t\t\tps_r3 = ps_c4.yyyy;\r\n\t\t}\r\n\t\tps_r4 = (ps_r1.xyzx * ps_c4.zzzy) + ps_c4.yyyz;\r\n\t\tps_r2 = ((-ps_c1.x >= 0.0) ? ps_r4 : ps_r3);\r\n\t}\r\n\tps_oC0 = ((ps_r0.x >= 0.0) ? ps_r2 : ps_r1);\r\n}\r\n```\r\n\r\nThe original HLSL shader can [be found here](https://github.com/demonixis/C3DE/blob/6552355276bd3f034a355a0c9643590f63051c88/C3DE.Demo/Content/Shaders/SkyboxEffect.fx). I tried to [change few things] and now it works (https://github.com/demonixis/C3DE/blob/develop/C3DE.Demo/Content/Shaders/SkyboxEffect.fx).\r\n\r\n### How to reproduce\r\n- Clone the [develop branch of C3DE](https://github.com/demonixis/C3DE) from github\r\n- Open the C3DE.Desktop solution\r\n- Open C3DE.Demos/Content/Shaders/SkyboxEffect.fx and force FOG_ENABLED to `True`\r\n- Start the samples and launch the VR demo (don't worry VR is disabled if you don't have a connected compatible headset).\r\n- I recommand you to change references to use the sources of MonoGame.\r\n\r\nThank you.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jure-BB": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129", "title": "[UWP] Wrong BackBuffer size", "body": "BackBufferWidth & BackBufferHeight don't always match real Window size in UWP. \r\n\r\nI think #5615 broke setting backbuffer sizes at startup (there is white are around rendered content). \r\n\r\nEDIT: Setting new preferred backbuffer sizes while in windowed mode wasn't working even before #5615 (windows size isn't changed, but backbuffer size is changed, resulting in white area around rendered content because of mismatch between window viewbounds size and backbuffer size). Also described here #5914", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6020", "title": "[UWP] Disabling V-Sync crashes MG", "body": "Setting graphics.SynchronizeWithVerticalRetrace to false causes MG to crash. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5789", "title": "[DirectX] Reach profile can crash on DX10+ GPUs that don't support intermediate feature levels", "body": "Some GPUs support DirectX 10_0 feature level, but don't support all 9_x feature levels.\r\n\r\nIn my case, a laptop GPU supports only 10_0 & 9_1 (no 9_2 & 9_3).\r\nShaders that use ps_4_0_level_9_3 will crash on that laptop when using _Reach_ GraphicsProfile. \r\nThey work with other GPUs under Reach and they work on this laptop when using HiDef profile.\r\n\r\nProblem is that MG tries to make a device with feature level 9_3 first when GraphicsProfile is set to Reach. When that fails 9_1 device is created, although 10_0 is supported. This results in crash when trying to use 9_3 shaders.\r\n\r\nProposed solution by @Jjagg is that MonoGame should always try to create a device with the highest possible feature level to prevent this issue. Even under Reach.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5789/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5639", "title": "[Windows] Mouse.SetPosition doesn't update MouseState correctly", "body": "Right after a call to `Mouse.SetPosition` mouse coordinates are different, from mouse coordinates when mouse state is updated next frame. Without mouse being moved. \r\n\r\nThis seems to be caused by some kind of rounding when setting cursor position. Adding this line at the end of the method [here ](https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Input/Mouse.Windows.cs#L35)updates the state correctly. \r\n`((MonoGame.Framework.WinFormsGameWindow) PrimaryWindow).UpdateWindows();`\r\n\r\nI haven't made PR because this hack is probably not the best solution. If anyone has any idea how to correctly update the state inside `Mouse.SetPosition`, I'll gladly make an PR for this issue.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5639/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6024", "title": "[UWP] Force enable V-Sync to prevent crashes", "body": "Fixes #6020\r\n\r\nUnfortunately I wasn't able to add proper support for disabling V-Sync in UWP. This PR just forces V-Sync to be always on in order to prevent crashing.\r\n\r\nHere is some info on how to properly add this feature, if anyone has time:\r\nhttps://stackoverflow.com/questions/45071415/how-can-i-disable-vsync-in-uwp\r\nhttps://blogs.msdn.microsoft.com/directx/2016/05/10/unlocked-frame-rate-and-more-now-enabled-for-uwp/", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6021", "title": "Generate portable dll powershell script", "body": "There isn't a lot of info available on how can we generate a portable MG dll from source ourselves. \r\n\r\nThis Powershell script calls Piranha.exe with necessary command to generate portable MG dll.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6019", "title": "Added buffered KeyDown & KeyUp events", "body": "I know this is not par of XNA's API, but since we already have TextInput I also added KeyDown & KeyUp events. Like TextInput they are buffered (no missed keys if framerate is low). This two events can be for example used to move cursor inside text box with arrow keys or with 'Home' and 'End' keys.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5880", "title": "Fix for WinForms null reference exception on startup", "body": "Single null check that prevents null reference exception on startup", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roy-t": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124", "title": "Enabling MSAA on RenderTargets on Windows breaks rendering after #5538", "body": "I know the official NuGet package does not yet support MSAA for render targets. But I found the following merged PR (https://github.com/MonoGame/MonoGame/pull/5538). So I decided to check it out.\r\n\r\nI've checked out the latest develop of MonoGame, build a release version for Windows and referenced it from my project (that previously used the latest NuGet package). \r\n\r\nWhen creating a render target and setting preferredMultiSampleCount to 0 everything worked as before. However when I set preferredMultiSampleCount to 2 or higher everything goes wrong. Even separate render targets that do not use any data from the render target that has enabled multi-sampling seem to break down. \r\n\r\n**Reproduction:**\r\n\r\n1. Clone and build the latest version of MonoGame/develop\r\n2. Clone https://github.com/roy-t/MiniRTS/tree/feature/MSAA_RenderTargets\r\n3. Open MiniRTS.sln\r\n4. Fix the reference to MonoGame.Framework to the location you have it on your machine\r\n5. Build and run MiniRTS\r\n\r\n**Result:**\r\n![capture](https://user-images.githubusercontent.com/623634/34409060-a7cf41dc-ebc7-11e7-9c23-2d86cc2c67c5.PNG)\r\n\r\n**Expected:**\r\n![capture2](https://user-images.githubusercontent.com/623634/34409078-bd3bc31a-ebc7-11e7-9270-8bf58e4e211b.PNG)\r\n\r\nYou can see how it should look by opening `RenderSystem.cs` and in the constructor change the `preferredMultiSampleCount` parameter of `this.ColorTarget` to 0.\r\n\r\n**Tested on:**\r\nWindows 10 1709, 64 bit\r\nNVIDIA GeForce GTX 970 4GB\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kurtcz": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123", "title": "Guid.BeginShowKeyboardInput does not persist its state object", "body": "`BeginShowKeyboardInput` function does not persist the state object. If you pass a value in that is not null it will be overwritten by the internal `ShowKeyboardInputDelegate`. This means that the callback function cannot use its `IAsyncResult.AsyncState` object - it contains rubbish.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122", "title": "GamerServices missing from nuget package", "body": "The GamerServices have been missing from the nuget package for several years now. Someone should mention this in the README.md and explain WHY it is no longer a part of the package and HOW TO get the functionality should you want it. Right now the only option is to not use the nuget packages at all and compile everything from github sources.\r\n\r\nIMO the lack of information is very infortunate, the community forum was not helpful when I was digging around trying to piece information together. ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6025", "title": "OpenAL: SIGSEGV in alcDeviceResumeSOFT", "body": "MonoGame 3.6 on Android throws a lot of errors related to libopenal32.so\r\nMy Google Play Console is showing me lots of these Crash reports (2.8% of players suffer from this isue). Seems like MonoGame does not correctly handle the resume event:\r\n\r\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR)\r\nlibopenal32.so\r\n\r\n```\r\nbacktrace: \r\nnative: pc 0000000000037748 /data/app/com.xxx/lib/arm/libopenal32.so \r\nnative: pc 00000000000363e8 /data/app/com.xxx/lib/arm/libopenal32.so \r\nnative: pc 0000000000025208 /data/app/com.xxx/lib/arm/libopenal32.so (alcDeviceResumeSOFT+136) \r\nnative: pc 000000000000ba14 \r\n```\r\nThis is my handler of the resume event:\r\n```\r\n        private void GameResumed()\r\n        {\r\n            if (AmbientSound == null || AmbientSound.IsDisposed)\r\n            {\r\n                AmbientSound = Content.Load<SoundEffect>(\"ambience\").CreateInstance();\r\n                AmbientSound.IsLooped = true;\r\n            }\r\n            if (BgSong == null || BgSong.IsDisposed)\r\n            {\r\n                BgSong = Content.Load<Song>(\"bgsong\");\r\n            }\r\n            if (Settings == null)\r\n            {\r\n                LoadGameSettings(true);\r\n            }\r\n            SoundEffect.MasterVolume = Settings.SoundEnabled ? 1f : 0f;\r\n            if (AmbientSound != null && !AmbientSound.IsDisposed)\r\n            {\r\n                AmbientSound.Volume = Settings.BgSoundEnabled ? 0.2f : 0f;\r\n                AmbientSound.PlaySafely();\r\n            }\r\n            if (BgSong != null && !BgSong.IsDisposed)\r\n            {\r\n                Microsoft.Xna.Framework.Media.MediaPlayer.Volume = Settings.BgSoundEnabled ? 0.1f : 0f;\r\n                Microsoft.Xna.Framework.Media.MediaPlayer.Play(BgSong);\r\n                Microsoft.Xna.Framework.Media.MediaPlayer.IsRepeating = true;\r\n            }\r\n        }\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6128", "title": "Issue-6123: Guide functions were not preserving state", "body": "Documentation for XNA 4.0 mentions that the `BeginShowKeyboardInput` and `BeginShowMessageBox` functions take a state variable that is passed to `EndShowKeyboardInput` and `EndShowMessageBox` respectively.\r\n\r\nMonoGame implementation violated this as it used the state variable internally, thus preventing the user from using the state variable if he wanted to do so. This PR fixes the iOS and Android implementations (ie. the ones that I was able to test on my phones).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jackmott": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121", "title": "SoundEffectInstance Stop() behavior differens bewteen Windows and DesktopGL builds", "body": "Using monogame 3.6\r\n\r\nIf you create a SoundEffectInstance and set IsLooped to true like so:\r\n\r\n```c#\r\n tireSqueal= content.Load<SoundEffect>(\"tire-squeal\").CreateInstance();\r\n tireSqueal.IsLooped = true;\r\n```\r\n\r\nUnder DesktopGL, a call to `tireSqueal.Stop(false)` will stop the sound after completion of the current loop.  In a Windows build it will never stop playing.  You have to call Stop(true), which stops it immediately, does not let the current loop finish.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6120", "title": "Effect parameter keys differ between directx and opengl builds", "body": "using Monogame 3.6 a shader with the following form:\r\n```\r\n#if OPENGL\r\n\t#define SV_POSITION POSITION\r\n\t#define VS_SHADERMODEL vs_3_0\r\n\t#define PS_SHADERMODEL ps_3_0\r\n#else\r\n\t#define VS_SHADERMODEL vs_4_0_level_9_1\r\n\t#define PS_SHADERMODEL ps_4_0_level_9_1\r\n#endif\r\n\r\nTexture2D RoadTexture;\r\nTexture2D TerrainTexture;\r\nTexture2D MaskTexture;\r\n\r\nSamplerState Sampler;\r\n```\r\nWith a DESKTOPGL build the effect.Parameters key ends up being \"Sampler+TerrainTexture\" etc.\r\nWith a windows/directx build it ends up being \"TerrainTexture\"\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5535", "title": "Changes in how text input is processed or DrawString in 3.6?", "body": "When I upgraded I started getting errors due to calling DrawString with tab, or backspace characters.  I'm not sure if this is a result of text input being handled differently, or DrawString maybe used to elide those characters on it's own, and now it is up to us?\r\n\r\nNot sure if this is bug or feature, anyone have insight?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Dancpaz": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6119", "title": "EffectParameter Get/Set methods missing for several data types", "body": "Based on the following:\r\nhttps://msdn.microsoft.com/en-us/library/microsoft.xna.framework.graphics.effectparameter_methods(v=xnagamestudio.40).aspx\r\n\r\nMissing these methods and their SetValue overload counterparts:\r\nGetValueInt32Array\r\nGetValueBooleanArray\r\nGetValueMatrixTranspose           // this one does have a set method\r\nGetValueMatrixArrayTranspose\r\nGetValueQuaternionArray", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rafaelalmeidatk": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6115", "title": "Game not running/launching when using 3.6+", "body": "I deployed a game and sent to a couple of people so they could test. All of them was able to play the game with one exception. The game window wasn't opening, no error was being thrown. The process just starts then close. So I told him to send me the Error Viewer exception:\r\n\r\n![](https://cdn.discordapp.com/attachments/285851488625098752/392458141348134912/unknown.png)\r\n\r\nThen I utilized this code to generate a log file to know more about the problem:\r\n\r\n    static void CatchUnhandledException\r\n        (object sender, UnhandledExceptionEventArgs e)\r\n    {\r\n        StreamWriter sw;\r\n        Exception ex;\r\n\r\n        try\r\n        {\r\n            sw = new StreamWriter(\"crash.txt\");\r\n            ex = (Exception)e.ExceptionObject;\r\n\r\n            sw.WriteLine(\"### Crash ###\");\r\n            sw.WriteLine(ex.Message + ex.StackTrace);\r\n            sw.WriteLine(\"### Inner ###\");\r\n            sw.WriteLine(ex.InnerException);\r\n            sw.WriteLine(\"### Source ###\");\r\n            sw.WriteLine(ex.Source);\r\n            sw.WriteLine(\"### Data ###\");\r\n            sw.WriteLine(ex.Data);\r\n            sw.Close();\r\n        }\r\n        finally\r\n        {\r\n        }\r\n    }\r\n\r\nAnd his results:\r\n\r\n    ### Crash ###\r\n    Failed to create graphics device!   em Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice()\r\n       em Microsoft.Xna.Framework.Game.DoInitialize()\r\n       em Microsoft.Xna.Framework.Game.Run(GameRunBehavior runBehavior)\r\n       em GraphicsTest3._7.Program.Main() na c:\\users\\rafael\\documents\\visual studio 2017\\Projects\\GraphicsTest3.7\\GraphicsTest3.7\\Program.cs:linha 21\r\n    ### Inner ###\r\n    System.PlatformNotSupportedException: MonoGame requires either ARB_framebuffer_object or EXT_framebuffer_object.Try updating your graphics drivers.\r\n       em Microsoft.Xna.Framework.Graphics.GraphicsDevice.FramebufferHelper.Create(GraphicsDevice gd)\r\n       em Microsoft.Xna.Framework.Graphics.GraphicsDevice.PlatformInitialize()\r\n       em Microsoft.Xna.Framework.Graphics.GraphicsDevice.Initialize()\r\n       em Microsoft.Xna.Framework.Graphics.GraphicsDevice..ctor(GraphicsAdapter adapter, GraphicsProfile graphicsProfile, PresentationParameters presentationParameters)\r\n       em Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice(GraphicsDeviceInformation gdi)\r\n       em Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice()\r\n    ### Source ###\r\n    MonoGame.Framework\r\n    ### Data ###\r\n    System.Collections.ListDictionaryInternal\r\n\r\nI've tested with several versions:\r\n\r\n* Using MonoGame 3.6: Exception says MonoGame requires OpenGL 3.0+, but [he has 3.1](https://cdn.discordapp.com/attachments/285851488625098752/392448908384665601/unknown.png).\r\n* Using MonoGame 3.7: Exception says MonoGame requires `EXT_framebuffer_object`, but [he has it](https://cdn.discordapp.com/attachments/285851488625098752/392486594474541076/unknown.png).\r\n* Using MonoGame 3.5: **The game works**.\r\n\r\nAll the tests were done using the plain Class Platform Desktop Project, no changes, it still crashes.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nkast": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6112", "title": "Game.ResetElapsedTime() throws NullReferenceException", "body": "I was trying to port an old XNA sample project where `ResetElapsedTime()` was called from LoadContent().\r\nThe cause is `Game._gameTimer` which in MonoGame isn't initialized until the first Tick/Update.\r\n\r\nMonoGame 3.7.1041.\r\nThe tested platform was Desktop/DX but the bug is in Game class and should affect all platforms.\r\n \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6112/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6027", "title": "GamePadState miss a public constructor. Breaks compatibility with XNA.", "body": "The API was broken in PR #4970. \r\n\r\n`public GamePadState(Vector2, Vector2 , float , float , params Buttons[])`\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5882", "title": "Optimize Vector2/3/4.Transform(Vector3[] sourceArray, ...)", "body": "All those use the same pattern where we copy the struct from sourceArray and then copy the result back to destinationArray.\r\n \r\nhttps://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Vector3.cs#L1075-L1083\r\n```\r\nfor (var i = 0; i < length; i++)\r\n            {\r\n                var position = sourceArray[sourceIndex + i];\r\n                destinationArray[destinationIndex + i] =\r\n                    new Vector3(\r\n                        (position.X * matrix.M11) + (position.Y * matrix.M21) + (position.Z * matrix.M31) + matrix.M41,\r\n                        (position.X * matrix.M12) + (position.Y * matrix.M22) + (position.Z * matrix.M32) + matrix.M42,\r\n                        (position.X * matrix.M13) + (position.Y * matrix.M23) + (position.Z * matrix.M33) + matrix.M43);\r\n            }\r\n```\r\n\r\nOne thing we can do here is to use the ref version of transform()\r\n```\r\nfor (var i = 0; i < length; i++)\r\n        Transform(ref sourceArray[sourceIndex + i], ref matrix, out destinationArray[destinationIndex +i]);\r\n```\r\n\r\nWe can also use fixed pointers in order to get rid of the two array bound checks.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5570", "title": "Mouse/Touch input with scaled BackBuffer", "body": "Touch input is incorrect when used with a scaled back buffer.\r\n\r\nThe following code will offset the mouse/touch by four times.\r\n```\r\ngraphics.PreferredBackBufferWidth /= 4;\r\n            graphics.PreferredBackBufferHeight /= 4;\r\n            this.Window.ClientSizeChanged += (s, e) =>\r\n            {\r\n                graphics.PreferredBackBufferWidth /= 4;\r\n                graphics.PreferredBackBufferHeight /= 4;\r\n                graphics.ApplyChanges();\r\n            };\r\n```\r\n\r\nSo far Tested on W8.1 & WP8.1.\r\n\r\nThe string \"Mouse\" is supposed to be drawn below the mouse cursor.\r\n(Mouse Cursor not shown, it's on the upper-left corner of F-rame))\r\n![touchwithscaledbackbuffer](https://cloud.githubusercontent.com/assets/3018589/23781860/ca7efdb8-0558-11e7-89da-a2deddd5d433.png)\r\n\r\n![touchwithscaledbackbufferwp](https://cloud.githubusercontent.com/assets/3018589/23781863/cce39f14-0558-11e7-8f7f-ee185e7209cd.png)\r\n\r\nHere are some related debug values\r\n```\r\nthis.Window.ClientBounds\r\n0  0  500  768\r\nthis.GraphicsDevice.PresentationParameters.BackBufferWidth\r\n125\r\nthis.GraphicsDevice.PresentationParameters.BackBufferHeight\r\n192\r\nTouchPanel.DisplayWidth\r\n125\r\nTouchPanel.DisplayHeight\r\n192\r\n```\r\n\r\n ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e93691fe15cfba938cf4314d7f9ac0fc78d2bcb5", "message": "[2MGFX] Split ShaderInfo.\n\nShaderInfo keeps only the data that are related to the parsed node.\nEverything else -including ShaderInfo- are moved to ShaderResult.\n\nThe idea is to seperate the parser from everything else in order to swap\nit with the HLSL parser by @TGJones.\nAs a next step we can move everything related to the parser and tree\nnodes to another folder and namespace (TwoMGFX.TPGParser)."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a02b4f874b7a1f842122e9bb91375750ea06ba9e", "message": "[W10] CoreApplication project template (VS2015) & fixes (#5615)\n\n* W10 CoreApplication project Template\r\n\r\n* Support for W10 CoreApplication"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9359576f0c4b7aadcc3fa33595873c03f4f957c2", "message": "Merge remote-tracking branch 'refs/remotes/MonoGame/develop' into tnc_FixCoreApplicationGameLoop"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/abfb6527f34f48cadcf656ac4d8b2f71b7b91066", "message": "Remove the use of  DistanceSquared(this, zero) in Vector3 and Vector4 (#6004)\n\nOptimizations to Length and Normalize in Vector3 and Vector4"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4150ab2c22fc571f60fb5f2eb994125b8b61a235", "message": " Simplified Plane.Normalize() (#6005)\n\n* Simplified Plane.Normalize()\r\n\r\n* use ref version of Vector3.Normalize() in Plane(Vector3, Vector3, Vector3)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4c17760b704122922be2131a61bcf91324854992", "message": "Matrix.CreateReflection() normalizes/alters the *input* value\n\nThe normalized value is not used in the Method after that.\nIn the beginning it creates a normalized copy of the plane."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/1690295df11cd94b45da5b992f4c069c051cb1f8", "message": "fix CoreApplication gameloop for UAP"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/81277e417602cd871e67197c4204326d7578564f", "message": "Get the default glyph index once in DefaultCharacter {get} (#5902)\n\n* Get the default glyph index once in DefaultCharacter { get }\r\n\r\n* Test DefaultCharacter\r\n\r\n* Throw ArgumentException on unresolvable DefaultCharacter"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a345b71073f1c8dd6b222e521fe2a8324797c81a", "message": "Improve performance of SpriteFont.MeasureString() & SpriteBatch.DrawString() (#5874)\n\nImproved performance of SpriteFont.MeasureString() & SpriteBatch.DrawString()"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c94c8f9243127b9bc2a3f70714a36c179bdc1bb0", "message": "Parse shader error/warning with ColumnBegin-ColumnEnd (#5849)\n\nImprove shader error/warning parsing in Pipeline Tool"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/2b2175810ca231e17c0bbf98a5fd5a8e01449848", "message": "Resolve conflict with #5831 (#5852)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f1a41483a37f81c1d9f6df1d19179f599cbd8302", "message": "Implement Mouse.WindowHandle"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/950a0309704bcd66226b38c1bed11b40b58054a2", "message": "Legacy XNA content identifiers"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5ac70c1dd8ad557be73c46cd8d65825f0144e9d5", "message": "Fixed mouse touch event to release when mouse moves outside the client area or we loses focus (#5641)\n\n* Release mouse TouchLocation when mouse moves outside the Client or loses loses focus\r\n\r\n* Limit Released TouchPosition within the bounds of ClientRectangle"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/07ebe3c616e22fb276196ca1f791fc477b32d374", "message": "Remove SharpDX.RawInput.dll reference from DirectXGraphics projects and from NuGet package. (#5723)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/aedef43ff3d32064bc2d9bdaeb62df7617bf5363", "message": "simplify CharComparer.GetHashCode(char b)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/422d05827d7bce68ce8e7c44c5e873a6c5293d2e", "message": "[DX] Use GraphicsCapabilities.MaxTextureAnisotropy on SamplerState\n\n-Move property MaxTextureAnisotropy from GraphicsCapabilities.OpenGL.cs\nto GraphicsCapabilities.cs\n-Enforce MaxAnisotropy limit when we create SamplerState [DX].\nGL already doing something similar\nhttps://github.com/MonoGame/MonoGame/blob/7c3d6870a38f8a5e479e64d935d692f2610e1cda/MonoGame.Framework/Graphics/States/SamplerState.OpenGL.cs#L72\n\nFeature level 9.1 Max Anisotropy = 2.\n9.2 and up is 16.\n\nFixes: #5674"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/36b222f7e132dd691815bf1c5aa938c4e14067b6", "message": "[ContentManager] Free scratchBuffer managed memory on Dispose() (#5655)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/512750cd090264e6111d2473b57a9eafffe47fae", "message": "Remove GraphicsDevice.GetHighestSupportedGraphicsProfile()\n\nPlatforms that use the `GraphicsDeviceManager.Legacy.cs` (GL?) will\ndefault to Reach profile. Just like the DX platforms since 3.6. Although\nthe profile is not enforced in any way on GL platforms."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/164be9bd38bb9ffad20bec86f9b0a5fb02b16af5", "message": "Remove reference to SharpDX from project templates"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6160", "title": "Implement GraphicsAdapter.QueryRenderTargetFormat()", "body": "Fallback of unsuported and profile depended SurfaceFormat. (Dxt, Single, drBlendable, ...)\r\n\r\nNot implemeneted: \r\nOptional/Device depended formats. (566, 4444, ...)\r\nDepth Formats.\r\nMultiSampleCount.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6125", "title": "Check for  Invalid SpriteFonts", "body": null, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6110", "title": "[2MGFX] Move Parser to new namespace and folder.", "body": "Related to  #6109", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6109", "title": "[2MGFX] Split ShaderInfo.", "body": "I missed this one.\r\nRelated to #6108\r\n\r\nAlso Move WhitespaceNodes from ParseTreeTools to ShaderResult.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6081", "title": "[DesktopDX] Handle Mouse input/state inside Mouse class", "body": "fixes #6009 \r\n\r\nBreaking change:\r\nMouse.Position will be updated on every call of GetState(). \r\nPreviously on DesktopDX the mouse state was updated once per Update().\r\nThe new behavior is similar to XNA and some other MG platforms (WindowsUniversal & OpenGL I think).\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6068", "title": "[WindowsDX] fix NullReferenceException in Mouse..WindowHandle", "body": "When WindowHandle/_window is not set it should return `IntPtr.Zero`.\r\nCurrently  it throws a NullReferenceException.\r\n\r\nRelated to #5816", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5954", "title": "Lower the requirements of HiDef Profile to FeatureLevel 9_3", "body": null, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5953", "title": "[ANDROID] Implement GraphicsAdapter.IsProfileSupported()", "body": "I test this on a device (maxTextureSize = 4096) and the emulator (maxTextureSize = 16384).\r\n\r\nIt would be nice if someone can test this on an older Android to verify that maxTextureSize = 2048 and also on iOS.\r\n\r\nWith a compination of MaxTextureSize & MaxTextureImageUnits we should be able to identify the entire range of Feature Levels if we choose to expand the set of graphic profiles.\r\n\r\nThis works because android allready has an active Context. Usually  the method is called before the graphicsdevice is initialize. \r\n\r\nOn DesktopGL we need to check if there is an active context and create a temp context for the adapter. (is this possible? I think you can have only one default adapter under openGL).\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5914", "title": "[UWP] Allow BackBuffer Scaling", "body": "This scales the SwapChain to fill the window. \r\nCurrently the backbuffer stays at the top/left corner and the rest is white. \r\n\r\n\r\nActualWidth/ActualHeight is allready scaled to the system DPI.\r\n\r\ncode to test:\r\n```\r\n            if (keyboardState.IsKeyDown(Keys.R))\r\n            {\r\n                graphics.PreferredBackBufferWidth = 800;\r\n                graphics.PreferredBackBufferHeight = 600;\r\n                graphics.ApplyChanges();\r\n            }\r\n```\r\n\r\n![backbufferscaling](https://user-images.githubusercontent.com/3018589/29953894-684ad172-8edc-11e7-9838-720a7b28b869.png)\r\n#\r\n![screenshot 35](https://user-images.githubusercontent.com/3018589/29954072-c35a50aa-8edd-11e7-8a4d-af50674eca1d.png)\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5872", "title": "Cleanup SpriteFont", "body": null, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5815", "title": "MouseState race condition", "body": "On platforms where gameloop run on a seperate thread, it's possible to read a corrupted MouseState if an event is updating it while devCode is reading it.\r\n\r\nThis PR isolates & locks reading/writing to GameWindow. MouseState.\r\n\r\n\r\nOn terms of performs this is worst than before. \r\nI am open to suggestions. \r\n\r\nWe need some internal methods like SetXY(), IncreaseScrollWheel(), to isolate/lock internal state instead of getting and reassigning MouseState (8 ints/enums) like this PR does. \r\nIMO those methods and the internal state (_x,_y, ...) belong to the Mouse class.\r\n\r\nLocks can be `#if`ed for platforms that don'd need locking or have partial Mouse.Async.cs , if there's significant perf gains.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5521", "title": "Support SwapChainPanel on W8.1 / WP8.1 and update templates to use SwapChainPanel", "body": "I found SwapChainBackgroundPanel behaving very unpredictable as I was testing #5520. That makes sense since it comes from W8.0, It wasn't supposed to run in window mode (W10).\r\n(I found a workaround for #5520 out of nowhere , but that was after I had this PR ready! 8-) )\r\n\r\n- `SwapChainBackgroundPanel` & `SwapChainPanel` are wrapped into `GenericSwapChainPanel`.\r\n- `SwapChainBackgroundPanel` is still supported on W8.1 to allow easier upgrade from 3.5, the constructor is marked as [Obsolete].\r\n- W8.1 templates are updated to use `SwapChainPanel`.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5451", "title": "Enforce GraphicsProfile.Reach + tests", "body": " related: #1941\r\n\r\nCheck:\r\nTexture2D size maximum\r\nTextureCube size maximum\r\nTexture3D size maximum\r\nNonpower of two Texture2D (mipmap,Compressed)\r\nNonpower of two TextureCube\r\nMaximum primitives per draw call\r\nDrawInstancedPrimitives()*\r\nIndexBuffer format\r\nMultiple render targets\r\nOcclusionQuery\r\nTexture formats\r\n\r\nnot tested:\r\nNonpower of two Texture2D ( TextureAddressMode of Wrap)\r\nShader Model,\r\nVertex element formats,\r\nVertex texture formats,\r\nRender target formats,\r\nalpha blend,\r\nVertex streams maximum,\r\nStream stride maximum\r\n\r\nhttps://blogs.msdn.microsoft.com/shawnhar/2010/03/12/reach-vs-hidef/\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5163", "title": "[MGCB] changes to output for Visual Studio", "body": "Formatting the Output of a Custom Build Step or Build Event\nhttps://msdn.microsoft.com/en-us/library/yxkt8b26.aspx\n\n_Before_\n![mgerrorlist0](https://cloud.githubusercontent.com/assets/3018589/18378922/7948567a-7678-11e6-8b04-4f9ee9f123b4.png)\n\n```\n3>  P:/TestContentBuildLogger/MG/Content/test.fbx\n3>      LogMessage\n3>  LogWarning0\n3>  P:/TestContentBuildLogger/MG/Content/test.fbx: LogWarning\n3>  P:/TestContentBuildLogger/MG/Content/test.fbx(64,4): LogWarningWithLineNum\n3>  P:/TestContentBuildLogger/MG/Content/test.fbx(64,4): LogWarningWithLink\n3>  P:/TestContentBuildLogger/MG/Content/test.fbx(64,4): LogWarningWithNewLine\n3>  WinNewLine\n3>      LogImportantMessage\n3>      LogImportantMessageWithNewLine\n3>  WinNewLine\n3>  Console.WriteLine\n3>  Error.WriteLine\n3>  P:/TestContentBuildLogger/MG/Content/test.fbx(42,8): TestInvalidContentException\n3>  Newline1\n3>  Newline2\n3>  Return1\n3>  Return2\n3>  NewlineAgain\n3>  WinNewLine\n3>  P:/TestContentBuildLogger/MG/Content/test1.fbx\n3>P:/TestContentBuildLogger/MG/Content/test1.fbx : error : Processor 'GpuSkinnedModelProcessor' had unexpected failure!\n3>  System.NullReferenceException: test1_NullReferenceException\n3>     at tainicom.ProtonType.Content.Pipeline.GpuSkinnedModelProcessor.Process(NodeContent input, ContentProcessorContext context) in p:\\tainicom\\Pinball_League\\EspressoRub\\trunk\\Skinning\\SkinnedModelImporter\\GpuSkinnedModelProcessor.cs:line 43\n3>     at Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2.Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process(Object input, ContentProcessorContext context) in P:\\MonoGame\\MonoGame.Framework.Content.Pipeline\\ContentProcessor.cs:line 60\n3>     at MonoGame.Framework.Content.Pipeline.Builder.PipelineManager.ProcessContent(PipelineBuildEvent pipelineEvent) in P:\\MonoGame\\MonoGame.Framework.Content.Pipeline\\Builder\\PipelineManager.cs:line 696\n3>C:\\Program Files (x86)\\MSBuild\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets(91,5): error MSB3073: The command \"\"C:\\Program Files (x86)\\MSBuild\\MonoGame\\v3.0\\Tools\\MGCB.exe\" /@:\"P:\\TestContentBuildLogger\\MG\\Content\\Content.mgcb\" /platform:Windows /outputDir:\"P:\\TestContentBuildLogger\\MG\\Content\\bin\\Windows\" /intermediateDir:\"P:\\TestContentBuildLogger\\MG\\Content\\obj\\Windows\" /quiet\" exited with code 2.\n```\n\n_after_\n![mgerrorlist1](https://cloud.githubusercontent.com/assets/3018589/18378951/9c474ef6-7678-11e6-9f83-10f796dab200.png)\n\n```\n3>P:/TestContentBuildLogger/MG/Content/test.fbx\n3>      LogMessage\n3>P:/TestContentBuildLogger/MG/Content/test.fbx : warning : LogWarning0\n3>P:/TestContentBuildLogger/MG/Content/test.fbx : warning : LogWarning\n3>P:/TestContentBuildLogger/MG/Content/test.fbx(64,4): warning : LogWarningWithLineNum\n3>P:/TestContentBuildLogger/MG/Content/test.fbx(64,4): warning : LogWarningWithLink\n3>P:/TestContentBuildLogger/MG/Content/test.fbx(64,4): warning : LogWarningWithNewLine\n3>  WinNewLine\n3>      LogImportantMessage\n3>      LogImportantMessageWithNewLine\n3>  WinNewLine\n3>  Console.WriteLine\n3>  Error.WriteLine\n3>P:/TestContentBuildLogger/MG/Content/test.fbx : error : TestInvalidContentException\n3>  Newline1\n3>  Newline2\n3>  Return1\n3>  Return2\n3>  NewlineAgain\n3>  WinNewLine\n3>  P:/TestContentBuildLogger/MG/Content/test1.fbx\n3>P:/TestContentBuildLogger/MG/Content/test1.fbx : error : Processor 'GpuSkinnedModelProcessor' had unexpected failure!\n3>  System.NullReferenceException: test1_NullReferenceException\n3>     at tainicom.ProtonType.Content.Pipeline.GpuSkinnedModelProcessor.Process(NodeContent input, ContentProcessorContext context) in p:\\tainicom\\Pinball_League\\EspressoRub\\trunk\\Skinning\\SkinnedModelImporter\\GpuSkinnedModelProcessor.cs:line 39\n3>     at Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2.Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process(Object input, ContentProcessorContext context) in P:\\MonoGame\\MonoGame.Framework.Content.Pipeline\\ContentProcessor.cs:line 60\n3>     at MonoGame.Framework.Content.Pipeline.Builder.PipelineManager.ProcessContent(PipelineBuildEvent pipelineEvent) in P:\\MonoGame\\MonoGame.Framework.Content.Pipeline\\Builder\\PipelineManager.cs:line 696\n3>C:\\Program Files (x86)\\MSBuild\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets(91,5): error MSB3073: The command \"\"C:\\Program Files (x86)\\MSBuild\\MonoGame\\v3.0\\Tools\\MGCB.exe\" /@:\"P:\\TestContentBuildLogger\\MG\\Content\\Content.mgcb\" /platform:Windows /outputDir:\"P:\\TestContentBuildLogger\\MG\\Content\\bin\\Windows\" /intermediateDir:\"P:\\TestContentBuildLogger\\MG\\Content\\obj\\Windows\" /quiet\" exited with code 2.\n```\n\n_XNA output_\n![xnaerrorlist](https://cloud.githubusercontent.com/assets/3018589/18379006/db8a0522-7678-11e6-8439-376f305ee48c.png)\n\n```\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx : warning : The skeleton root, \"PIVOT\", has been pulled out of the scene hierarchy and made into a child of the root node. One of the skeleton root's old parents, \"PersonSupervisor\", has an animation named \"Base Stack\" which will not be reflected on the skeleton root.\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx : warning : Fragment identifier \"PersonSupervisor\".\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx : warning : LogWarning0\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx : warning : LogWarning\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx(64,4): warning : LogWarningWithLineNum\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx(64,4): warning : LogWarningWithLink\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx(64,4): warning : LogWarningWithNewLine\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx(64,4): warning : WinNewLine\n  LogImportantMessage\n  LogImportantMessageWithNewLine\n  WinNewLine\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx : error : TestInvalidContentException\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx : error : Newline1\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx : error : Newline2\nReturn1\nReturn2\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx : error : NewlineAgain\nP:\\TestContentBuildLogger\\XNA\\ContentTest\\ContentTestContent\\test.fbx : error : WinNewLine\n```\n\n_test code_\n\n```\n            if(input.Identity.SourceFilename.Contains(\"test1\"))\n                throw new System.NullReferenceException(\"test1_NullReferenceException\");\n            context.Logger.LogMessage(\"LogMessage\");\n            context.Logger.LogWarning(null, null, \"LogWarning0\");\n            context.Logger.LogWarning(null, input.Identity, \"LogWarning\");\n            input.Identity.FragmentIdentifier = \"64,4\";\n            context.Logger.LogWarning(null, input.Identity, \"LogWarningWithLineNum\");\n            context.Logger.LogWarning(\"http://www.monogame.net/\", input.Identity, \"LogWarningWithLink\");\n            context.Logger.LogWarning(\"http://www.monogame.net/\", input.Identity, \"LogWarningWithNewLine\\r\\nWinNewLine\");\n            context.Logger.LogImportantMessage(\"LogImportantMessage\");\n            context.Logger.LogImportantMessage(\"LogImportantMessageWithNewLine\\r\\nWinNewLine\");\n            System.Console.WriteLine(\"Console.WriteLine\");            \n            System.Console.Error.WriteLine(\"Error.WriteLine\");\n\n            input.Identity.FragmentIdentifier = \"42,8\";\n            input.Identity.SourceTool = \"customTool v 0.45a\";\n            if (input.Identity.SourceFilename.Contains(\"test\"))\n                throw new InvalidContentException(\"TestInvalidContentException\\nNewline1\\nNewline2\\rReturn1\\rReturn2\\nNewlineAgain\\r\\nWinNewLine\", input.Identity);\n```\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4450", "title": "[Pipeline] Multithreaded build", "body": "I had some time today to work on it, anyone welcome to test, review, etc\n\nTested mostly with soundEffects. Textures and related assets (models, fonts) will fail at the moment  because of PVRTexture. \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "moritzuehling": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6111", "title": "SdlGameWindow.Handle returns SDL Handle, instead of Win32 Handle as expected", "body": "In XNA as well as in the [`WinFormsGameForm`](https://github.com/MonoGame/MonoGame/blob/ed77ff8681a96c0a90f8344960c980b44e217a69/MonoGame.Framework/Windows/WinFormsGameForm.cs) [`GameWindow.Handle`](https://github.com/MonoGame/MonoGame/blob/ed77ff8681a96c0a90f8344960c980b44e217a69/MonoGame.Framework/GameWindow.cs#L36) returns the Win32-Handle of the window.\r\n\r\nThat can be cast to a `System.Windows.Forms.Control` (of course, that's impossible as we don't use WinForms), but also passed to Win32-APIs such as `ShowWindow(IntPtr hWnd, int nCmdShow)` in `user32.dll`, or the linux equivalents.\r\n\r\nHowever, at the moment it [returns the SDL-Handle](https://github.com/MonoGame/MonoGame/blob/ed77ff8681a96c0a90f8344960c980b44e217a69/MonoGame.Framework/SDL/SDLGameWindow.cs#L155) which is quite useless at first glance, since one can only pass it to SDL-functions. \r\n\r\nThose SDL-Functions can't be used, since the [SDL Interface is not exposed](https://github.com/MonoGame/MonoGame/blob/ed77ff8681a96c0a90f8344960c980b44e217a69/MonoGame.Framework/SDL/SDL2.cs#L10). \r\n\r\nProposal:\r\n\r\n- Change `SdlGameWindow.Handle` to return a Win32-Handle by expected. This can be retrieved using [`SDL_GetWindowWMInfo`](https://wiki.libsdl.org/SDL_GetWindowWMInfo?highlight=%28%5CbCategoryAPI%5Cb%29%7C%28SDLFunctionTemplate%29), and create an explicit Property `SdlGameWindow.SdlHandle` where the old `_handle` will be returned. Problem: `SdlGameWindow` is (of course) marked internal, so a user wouldn't be able to access it without reflection.\r\n\r\n- Give users a way to call SDL-functions such as [Sdl.Show()](https://github.com/MonoGame/MonoGame/blob/ed77ff8681a96c0a90f8344960c980b44e217a69/MonoGame.Framework/SDL/SDL2.cs#L381) so we one can use this property with copying the SDL2.cs to the game-project.\r\n\r\nIn my opionion, a mix of these approaches would be best (expose the Sdl2-Interface somehow, *and* add the extra `SdlHandle`-Property).\r\n\r\nJust for reference:\r\n\r\n```csharp\r\nvar win32Handle = Process.GetCurrentProcess().MainWindowHandle;  // 0x0000000000b50646\r\nvar sdlHandle = this.Window.Handle;                              // 0x0000025f1ba0ccc0\r\nvar windowType = this.Window.GetType().FullName;                 // \"Microsoft.Xna.Framework.SdlGameWindow\"\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "s-m-k": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6107", "title": "Lack of OpenAL DLLs shouldn't be fatal.", "body": "I don't want to use OpenAL audio at all, so I don't think I should be required to distribute the libraries related to it.\r\n\r\nIt would be better to make me choose whether I want to initialize the MonoGame audio (and load the libs) or not. It's done in the runtime anyway, so this functionality should be easy to add (e.g. static `Game.InitializeAudio = false;` before creating the Game instance), especially that my use case isn't really isolated. I believe that many gamedevs choose FMOD or Wwise over solutions native to engines/frameworks simply because their sound designers are used to these tools.\r\n\r\nI get that it might be a minor issue to most people, but there's no need to be forced to distribute two audio frameworks simultaneously (which is one of many reasons I don't really like Unity) and it seems to be easy to avoid in case of MonoGame. Give us more freedom :)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6107/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5870", "title": "Idea: DrawSprite function that takes an unit vector instead of rotation as an argument.", "body": "SpriteBatch.DrawSprite should be overloaded to take an unit vector instead of the rotation angle.\r\n\r\nYou don't always need to represent a rotation with an angle, but an unit vector instead, which is, in fact, [cos, sin] of the angle. By passing it to DrawSprite directly instead of that angle, you don't need to use Math.Atan2, Math.Cos and Math.Sin each sprite like you do now (to retrieve the angle from [cos, sin] then convert it back to [cos, sin] to perform the rotation).\r\n\r\nIt should be a huge performance boost when you have lots of moving sprites and unit vectors instead of rotation angles. Now I have to create my own little sprite batch that features it to achieve better performance.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5870/reactions", "total_count": 5, "+1": 5, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jangsky215": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6106", "title": "SurfaceFormat.Color is Unsigned 32-bit RGBA pixel format for store 8 bits per channel? ", "body": "SurfaceFormat.Color is Unsigned 32-bit RGBA pixel format for store 8 bits per channel? ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Cephel": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6105", "title": "2MGFX compilation error when compiling simple shader", "body": "I've reached the end of my google-fu about this problem, nothing is coming up. The error comes up when any instructions are put inside the branch, I've also tested this with completely redundant statements such as `if(true)`, the error still persists.\r\n\r\nThe error: \r\n![](https://i.imgur.com/Ew0Rk7s.png)\r\n\r\nShader code:\r\n```hlsl\r\nmatrix xWorld;\r\nmatrix xView;\r\nmatrix xProjection;\r\n\r\nfloat3 spheres[3];\r\nuint sphereCount;\r\n\r\n\r\nstruct VertexShaderInput\r\n{\r\n\tfloat3 Position : POSITION0;\r\n};\r\n\r\nstruct VertexShaderOutput\r\n{\r\n\tfloat4 Position : SV_POSITION;\r\n\tfloat2 PixelPosition : TEXCOORD0;\r\n};\r\n\r\nfloat4 RayCaster(float2 position)\r\n{\r\n\tfloat4 returnCol = float4(position, 0, 1);\r\n\tfloat3 ray = float3(position, 1) - float3(position, 0);\r\n\r\n\tfor (uint i = 0; i < sphereCount; i++)\r\n\t{\r\n\t\t//float4 worldPos = mul(float4(spheres[i], 1.0), xWorld);\r\n\t\t//float4 viewPos = mul(worldPos, xView);\r\n\t\t//float4 projPos = mul(viewPos, xProjection);\r\n\r\n\t\tif (position.x == 25)\r\n\t\t{\r\n\t\t\treturnCol = float4(1, 1, 1, 1);\r\n\t\t}\r\n\t}\r\n\r\n\treturn returnCol;\r\n}\r\n\r\nVertexShaderOutput MainVS(in VertexShaderInput input)\r\n{\r\n\tVertexShaderOutput output = (VertexShaderOutput)0;\r\n\r\n\toutput.Position = float4(input.Position, 1.0);\r\n\toutput.PixelPosition = input.Position.xy;\r\n\treturn output;\r\n}\r\n\r\nfloat4 MainPS(VertexShaderOutput input) : COLOR\r\n{\r\n\tfloat4 finalColor = RayCaster(input.PixelPosition);\r\n\treturn finalColor;\r\n}\r\n\r\ntechnique BasicColorDrawing\r\n{\r\n\tpass P0\r\n\t{\r\n\t\tVertexShader = compile vs_4_0 MainVS();\r\n\t\tPixelShader = compile ps_4_0 MainPS();\r\n\t}\r\n};\r\n```\r\n\r\nPlease excuse my horrible in-between state of the code.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "EReeves": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6103", "title": "Documentation for useful external libraries.", "body": "The documentation should include a page with a list of useful external libraries.\r\nStuff like [Nez](https://github.com/prime31/Nez) and[ Monogame.Extended](https://github.com/craftworkgames/MonoGame.Extended)\r\n\r\nThere's a fantastic list here:\r\nhttps://github.com/aloisdeniel/awesome-monogame\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6103/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "portal-chan": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6094", "title": "Tuple deconstruction for common types?", "body": "Apologies if this was already brought up/discussed already but I couldn't find anything relevant.\r\n\r\nCould the `Deconstruct` method be implemented for common types in the framework to allow code like this?\r\n\r\n```csharp\r\nvar (x, y) = vec2;\r\nvar (r, g, b) = color;\r\n// etc.\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "monobeginner": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6090", "title": "Pixel Shader - blank texture on some Android devices", "body": "Hey,\r\n\r\nI'm facing issues with pixel shaders on Android. Works as expected on various devices (verified on 5+ devices) but on Samsung Galaxy S8 with Android 7.0 I have blank textures when applying shaders. I would also mention that shader works fine on Windows Phone. Shader is very simple, so here I place a piece of code. This is critical for me, because this device is quite new .. Any clues how to fix or workaround this ? Tried various stuff but this is strange that shader works fine on most of devices. I think this is common issue, this one looks like related one: \r\nhttp://community.monogame.net/t/result-of-pixel-shader-invisible-on-some-android-devices/9547\r\n\r\n```\r\nfloat Shift;\r\nfloat MaxShift;\r\nfloat ExtraShiftScaleFactor;\r\n\r\nstruct VertexShaderOutput\r\n{\r\n\tfloat4 position : SV_POSITION;\r\n\tfloat4 color : COLOR;\r\n\tfloat2 texCoords : TEXCOORD;\r\n};\r\n\r\nsampler TextureSampler;\r\n\t\r\n\r\n// Input color (which comes from vertex shader output) - color specified in SpriteBatch.Draw() method.\r\nfloat4 PixelShaderFunction(VertexShaderOutput input) : COLOR\r\n{\r\n    const float4 originalColor = tex2D(TextureSampler, input.texCoords) * input.color;\r\n\r\n\tif(originalColor.a == 0)\r\n\t{\r\n\t\treturn originalColor;\r\n\t}\r\n\r\n\tfloat4 newColor = tex2D(TextureSampler, float2(input.texCoords.x + sin(input.texCoords.x * Shift * ExtraShiftScaleFactor)*0.01, \r\n\t                        input.texCoords.y + sin(input.texCoords.y * Shift * ExtraShiftScaleFactor)*0.01)) * input.color;\r\n\t\r\n\tnewColor.r = lerp(newColor.r, newColor.r * 1.6, Shift / MaxShift);\r\n\tnewColor.g = lerp(newColor.g, newColor.g * 0.1, Shift / MaxShift);\r\n\tnewColor.b = lerp(newColor.b, newColor.b * 1.6, Shift / MaxShift);\r\n\tnewColor.a = originalColor.a;\r\n\r\n\treturn newColor;\r\n}\r\n\r\n// Windows Phone requires SM 4_0_level_9_1 or higher\r\n// Android requires SM 3_0\r\n#ifdef SM4\r\n#define TECHNIQUE(name, vsname, psname ) \\ \r\ntechnique Technique1\r\n{\r\n    pass Pass1\r\n    {\r\n        PixelShader = compile ps_4_0_level_9_1 PixelShaderFunction();\r\n    }\r\n}\r\n\r\n#else\r\n#define TECHNIQUE(name, vsname, psname ) \\ \r\ntechnique Technique1\r\n{\r\n\tpass Pass1\r\n\t{\r\n\t\tPixelShader = compile ps_3_0 PixelShaderFunction();\r\n\t}\r\n}\r\n#endif\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5922", "title": "Dispose singleton when \"Do not keep activities\" option is selected", "body": "Hello,\r\n\r\nMy Android game crashes when \"Do not keep activites\" option is selected in developer options. Steps to reproduce:\r\n\r\n1. Select \"Do not keep activities\" in developer options\r\n2. Launch game\r\n3. Press home button\r\n4. Resume game\r\n\r\nNotice that activity is recreated and so on MonoGame framework will be reinitialized. Game.Intiialize() will be called for the second time, I have some singletons initialization there which were initialized on first Game.Intialize() call. Where should I dispose singletons in such case ? I think UnloadContent(..) callback is not called in this scenario.\r\n\r\nPiece of code:\r\n```\r\npublic static void Initialize()\r\n        {\r\n            if (INSTANCE != null)\r\n            {\r\n                throw new Exception(\"AppSettings instance is already initialized\");\r\n            }\r\n            INSTANCE = new AppSettings();\r\n        }\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5899", "title": "Black screen instead of splash screen", "body": "Hello,\r\n\r\nOn Android, during startup, I have black screen instead of my splash graphic (reproduce rate about 80%). \r\nI set up my splash screen \"regular\" way, just with style:\r\n```\r\n<style name=\"Theme.Splash\" parent=\"android:Theme\">\r\n    <item name=\"android:windowBackground\">@drawable/splash_background</item>\r\n    <item name=\"android:windowNoTitle\">true</item>\r\n    <item name=\"android:windowFullscreen\">true</item>\r\n  </style>\r\n```\r\n\r\nI load all assets in Game.LoadContent() method synchronous way. A piece of code:\r\n```\r\nprotected override void LoadContent()\r\n{\r\n            spriteBatch = new SpriteBatch(GraphicsDevice);\r\n            AudioManager.LoadContent(Content);\r\n            SceneManager.LoadScenesContent(Content);\r\n}\r\n```\r\nSo, usually, just for a moment (like a half second) I can see my splash graphic, then black screen (for about 4 seconds), and then my main menu. \r\n\r\nI'm fighting with this issue really long time, started digging in Monogame source code but could not help myself. This is critical issue for me. What could lead to such a behavior ? Can I expect cool Monogame team to fix this ?\r\n\r\nVerified on Nexus 5 with Android 6\r\n\r\n**EDIT:**\r\nIn logcat I can see: Skipped 127 frames ! The application may be doing too much work on its main thread.\r\n\r\nEven when I cutted off loading almost of all the assets - left only loading for main menu (some background, buttons, sounds and fonts) .. ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5895", "title": "MG Content Builder targets - Path's format is not supported", "body": "Hello,\r\n\r\nActually I got MG 3.7.0.759 and I have problem during build of Android project. Output from build:\r\n`C:\\Program Files (x86)\\MSBuild\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets(73,5): error MSB3191: Unable to create directory \"D:\\Projects\\Game\\Game.Android\\D:\\Projects\\Game\\GameShared\\Content\\bin\\Android\\Content\". The given path's format is not supported.`\r\n\r\nIt seems that path is constructed not properly.  I tried also build 756 - doesn't help. Issue does not exist on Monogame 3.5 - it builds without errors.\r\n\r\nThis is how looks my MGCB file's global properties section:\r\n```\r\n#----------------------------- Global Properties ----------------------------#\r\n/outputDir:bin/$(Platform)\r\n/intermediateDir:obj/$(Platform)\r\n/platform:NativeClient\r\n/config:\r\n/profile:Reach\r\n/compress:False\r\n```\r\n\r\nWhat kind of data can I give you to help localize of problem ? Maybe can I turn on some extra diagnostics debugger (verbose output log file ? ) ? Any workaround for this ?\r\n\r\nMonoGame.Content.Builder.targets file can be found on github here: \r\nhttps://github.com/labnation/MonoGame/blob/master/MonoGame.Framework.Content.Pipeline/MonoGame.Content.Builder.targets", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5894", "title": "Content Processor - SoundEffectProcessor failure", "body": "Hey,\r\n\r\nI'm facing issue with processing of sound effect (only one wav file from many). Thrown exception:\r\n```\r\n/buttonClick.wav: error: Processor 'SoundEffectProcessor' had unexpected failure!\r\nSystem.DivideByZeroException: Nast\u0104pi\u0088a pr\u02d8ba podzielenia przez zero.\r\n   w Microsoft.Xna.Framework.Content.Pipeline.Audio.AudioContent.ConvertFormat(ConversionFormat formatType, ConversionQuality quality, String saveToFile)\r\n   w Microsoft.Xna.Framework.Content.Pipeline.Processors.SoundEffectProcessor.Process(AudioContent input, ContentProcessorContext context)\r\n   w Microsoft.Xna.Framework.Content.Pipeline.ContentProcessor`2.Microsoft.Xna.Framework.Content.Pipeline.IContentProcessor.Process(Object input, ContentProcessorContext context)\r\n   w MonoGame.Framework.Content.Pipeline.Builder.PipelineManager.ProcessContent(PipelineBuildEvent pipelineEvent)\r\n```\r\n\r\nVerified with MonoGame Pipeline tool 3.5.0.826\r\n\r\nIn attachment you can find this wav file (zipped archive). I would like to mention that it was working some time ago (on the same MG Pipeline version), before I reinstalled system (Windows 8.1). Any workaround for this issue ? I would like to keep this version of MonoGame because I have bigger issues with 3.7 version (please follow http://community.monogame.net/t/bug-paths-format-is-not-supported/9589)\r\n\r\n[buttonClick.zip](https://github.com/MonoGame/MonoGame/files/1246436/buttonClick.zip)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cra0zy": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6088", "title": "New MG.COntent.Builder.targets does not work with the new .csproj format", "body": "The newer MonoGame.Content.Builder.targets file does not work with the new .csproj format, the old one did work (and still works quite fine).", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6088/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5804", "title": "Improve MGCB", "body": "I've been thinking that MGCB could really use some care to make it more easy to deal with, this includes the following list of changes that I would like to make:\r\n - Make the docs for each command argument actually give you useful information on it\r\n - ~~Implement man page for Unix platforms #5987~~\r\n - ~~Implement bash autocomplete for Unix platforms #5985~~\r\n - ~~Implement better command line argument handling for Unix platforms #5980~~\r\n - Change the output structure and make it more easy to parse", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5708", "title": "Lets talk about DesktopGL ", "body": "I was gonna talk about this in #3831 but that become too crowded.... anyway, right now DesktopGL is still split into WindowsGL and Linux projects, while we only use binaries from one of those and package it into DesktopGL stuff. Right now there are 4 possibilities, either we:\r\n 1. Merge the projects into one, tho that might create a bit of problem for the Pipeline Tool since it resides in main platform projects\r\n 2. Keep stuff as they are\r\n 3. Add a DesktopGL platform, use it for NuGet and keep the rest as is\r\n 4. Add a DesktopGL and MacGL platforms to source, add WindowsGL, MacGL, LinuxGL nuget packages and make sure that each platforms package only provides the needed native libs for that platform (bonus we can hardcode libs so there is no config file, solves 1 of the problems we have for .net core support)\r\n\r\nCC. @tomspilman @hach-que ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5565", "title": "Use NuGet packages for project templates", "body": "We should switch to using NuGet package for local project templates so we can update native libraries in the background.\r\n\r\nAlso the idea is to use local NuGet packages as the base for the templates, like what @dellis1972 did before for MonoDevelop addin.\r\n\r\nCC. @dellis1972 @tomspilman ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5384", "title": "Idea on how to determine if the requested feature should be added to MonoGame", "body": "I've been playing around with audio visualization and I started questioning why XNA even had it in the first place, which made me come to an idea on the questions we need to ask in case someone requests a new feature:\r\n\r\n1) How many different ways are there to implement it?\r\n2) Does it require a per platform implementation?\r\n3) Is the feature useful enough for inclusion?\r\n\r\nIf the answer to 1. is only one way, or the answer to 2. is yes than we should probably implement it.\r\n\r\nFew things I tried with questions above:\r\n\r\n**Audio visualization:**\r\n1) Only 1 way, you always get the same numbers\r\n2) No\r\n\r\nConclusion: **Yes**\r\n\r\n**Mouse input:**\r\n1) Only 1 way, you always read the same input stuff\r\n2) Yes\r\n\r\nConclusion: **Yes**\r\n\r\n**Font processor/importer**\r\n1) Only 1 way to read/process/display the data\r\n2) Yes\r\n\r\nConclusion: **Yes**\r\n\r\n**Random function:**\r\n1) There are multiple random algorithms\r\n2) No\r\n\r\nConclusion: **No**\r\n\r\n**Custom GUI controls:**\r\n1) There are multiple ways of implementation\r\n2) No\r\n\r\nConclusion: **No**\r\n\r\n**Tiled Map content pipeline**\r\n1) There is only 1 way to read the tiled map data, but multiple ways to process/display it\r\n2) No\r\n\r\nConclusion: **No** \r\n\r\n@tomspilman @KonajuGames @dellis1972 Thoughts?\r\n\r\nEDIT1: Added the 3rd question", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5d2b396997c7cffc08d2c2fab5be1f5fe76b3418", "message": "[Pipeline Tool] Restore old debug mode behavior"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9d11375a7db946b6412881dc1ee8ad823a4f7abd", "message": "[SDL] Optimize mouse position tracking (fixes #6045) (#6099)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bd7ef5f2c4d52603a1ed8d5f08323f14b45d339d", "message": "Cherry-pick stuff from #6100 (#6104)\n\n* fix crash in build output when toggling between fancy and text view, if any items in fancy view were opened. Also fix a typo in a scrollable member name.\r\n\r\n* fix style bugs, combine two handlers for the same event (my mistake for adding a new handler, for some reason)\r\n\r\n* Add `private` modifier"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c2ee3ec58aa117028864708d87d76cf6421bead5", "message": "[MGCB] Update man pages with more information (#6073)\n\n* [MGCB] Update man pages with more information\r\n\r\n* Typos"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/063d7cac062ff760c892e9e468e49cc0cc1f835e", "message": "[MGCB] Set working dir for all the commands under response file (#6056)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/44826e69f05b3560c68f28540a8a3663765e274b", "message": "[MGCB] Parse filenames as arguments (#6055)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/520c67629bff7ec26b2dfead9586a8d08cf2777a", "message": "[Content.Pipeline] Remove few #ifs (#6057)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/255e375a5608e72fdea27895a831908e05f4a2a8", "message": "[MGCB] Fix flags not beeing processed"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/035b4026e2206bf8eb137e4ce96445e6037b961a", "message": "[Documentation] Fixup some stuff with Getting Started (#6065)\n\n* [Documentation] Fixup some stuff with Getting Started\r\n\r\n* Fix typo"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/15498d703b454b00e16d00aaba26ab918434bf22", "message": "[Documentation] Getting Started (#4559)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a6c709a4579fde9071865a07e363800e58be18b5", "message": "Fix Pipeline Tool compilation with msbuild (#6011)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bd59328676004e6183b415dad98d91ae0b06e66a", "message": "[Pipeline Tool] Linux Headerbar improvements (#5969)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/52b4a748f3f768d57b98be16a4acb91395ab92f6", "message": "[Linux Installer] Include mgcb autocomplete for bash (#5985)\n\nIncluded mgcb autocomplete for bash"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/14f716b088195e9ecf1d74e9522a55cbc9955c3a", "message": "[Linux installer] Add MGCB man page"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/2db2d46faf2ccb6e9027ddfd4e780b1c98443a9b", "message": "MGCB Improvements (#5980)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/2d34664e38269c32bd3c7e270c15e54e1e17e1e3", "message": "Cleanup GraphicsDevice"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f3ca7f3c9751ce04cb71216aee660cc2a762c41f", "message": "Enable Android stuff for Linux"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/182db99af63462ed37abc4b4d802152bfd6de07e", "message": "Remove deprecated Rider installation stuff"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e55ab511e0e182979a721a304e2e68d2425deead", "message": "[Pipeline Tool] Make launchdebugger a per project property (fixes #5768) (#5853)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b10b67c221f392347654632dc72c43fe9178eb1e", "message": "[Pipeline Tool] Fix bool cell when editing multiple values (fixes #5858)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/52e38b6de55594c6bb160a9a05480830435fc882", "message": "[Linux Installer] Hide uneeded output when adding new icon (#5854)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f65b62168494ed6626ef8a09183b0190a45b947e", "message": "[Pipeline Tool] Fix double clicking not opening the file (#5842)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6e302558fa49a60a49e966afac23d78cf7c09a1a", "message": "[Pipeline Tool] Fix project opening not properly stopping in case of an error (#5843)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a255792083540dcb892d27d25f19f5903815ea2f", "message": "Simplify FontDescriptionProcessor code (resolves #5790)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/58b02ccc61a3af55070e0bf9dd711184a18e31c9", "message": "[DesktopGL] Fix Joystick enum (fixes #5729)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0c0a1a0f3bec596fc933f7b634036c96858904ae", "message": "[Pipeline Tool] Fix crash when canceling build (#5803)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6ce3e9638b5b902bd3580c631d0dc7a725521023", "message": "[SDL] Fix window positioning (#5818)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/af7ffcac75bd423fe9545d05a8ecc3c6c0283d3d", "message": "Update NuGet packages"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f12c117007189efa47c748cb66664bfd4b86ca68", "message": "[Pipeline Tool] General Fixes + Cleanup"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9d6f80a62cb51e30043a1cc12ab4b5ffaf7794bd", "message": "[Joystick] Implement operators and equals methods"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/fbb0507e4e035b0529eb0547437a31e5ee12f659", "message": "Implement Joystick IsGamepad property"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/610a3e2e116324f98d49ef0264625f997e7325ae", "message": "[Pipeline Tool] Add minimum size to the MainWindow, fixes #5337"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6b3b5fbb88b5f7dd105c5b04aedb04bd9d73b797", "message": "[Android] Set GamePad.IsConnected to false if no gamepad is connected, fixes #1170"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/61b409fca8d89fa7881bd938a361513119fcda9d", "message": "[SDL] Improve gamepad capabilities"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/21c45ec1860bca525b34e18f8b7b69bb9f59f640", "message": "[Pipeline Tool] Add Open Output Directory option"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/3f255a620a7569653f9eb722e818123c18f08f0a", "message": "[Pipeline Tool] Rename Exit to Quit on Linux Headerbar"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5626b1cbf8569ae13770599d3c36afbe81094bc4", "message": "[Pipeline Tool] Use built-in Eto dialogs"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/cbc17bcf4077cc6ad6e7389caccd6ada03e73b87", "message": "Improve GamePadThumbSticks code"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/1061cec3e0733ab1b89603cd6d589066722aef40", "message": "Eto Forms Update"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/581e188af7e82938f3bfc0b96dbe1e7670a5fd67", "message": "[Joystick] Add IsSupported property"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8cf050640912feb96fa331d0fed659460ce99b05", "message": "Cleanup gamepad stuff"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ca88ca232284836b5b9b818551b7e22a37d2134f", "message": "[Android] Fix Gamepad DPad not working"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0678a4d3ee30f371e85c114abf5a59832e56865d", "message": "Implement GetHashCode and ToString methods for Joystick"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/79d3a4471952687e4d124439872c175bd1eda468", "message": "[Linux Installer] Fix getting username that should run mdtool"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f01b908a9e72dd47646ee5ba154f72c7f5ad621a", "message": "[SDL] Use existing variable for pointing to SDL in OpenGL.SDL.cs (#5608)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/650cbc09d3baaf97f69954e446810749622e6d16", "message": "Make README bullets consistent (#5603)\n\n* Make README bullets consistent\r\n\r\n* Update supported platforms"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e3261f71c780c7b8294a42a9e3f36efd447f439d", "message": "[SDL] Better GameController database loading"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6077", "title": "Redo working dir", "body": "cc. @KonajuGames ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6070", "title": "[MGCB] Allow build command to build directories and add exclue command", "body": "Stuff done:\r\n- build command now accepts directories\r\n- exclude command - extra regex rules for excluding files from build command in case of a directory\r\n\r\nPS. Have separate PRs incoming for updating man page and unit testing.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5694", "title": "[Pipeline Tool] Optimize output filtering", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5068", "title": "[DO NOT MERGE] Idea for Pipeline Tool Tests", "body": "@tomspilman This was my idea on how to handle Pipeline Tool Tests, what do you think?\n\nPS. \"FileTests\" is as in \"File Menu Tests\"\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Eversor": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6087", "title": "[WIN OPENGL] Some PCM wave file won't load correctly after audioloader update ", "body": "Here's the problematic file:\r\nhttps://drive.google.com/open?id=1SP4qr-zLglM9c0IvbZU0D2X5oa3MryYu\r\n\r\nI was building a 6 month \"developer\" branch and the file did play correctly. After the recent changes the file doesn't load anymore via the SoundEffect.FromStream(...) method.\r\n\r\nIt seems something wrong is happening in the branch\r\n    if (chunkSize > 16)\r\naround line 142 of AudioLoader.cs\r\n\r\nthe old code : \r\n         // reads residual bytes\r\n        reader.ReadBytes(chunkSize - 16);\r\nseems to work fine.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "geejayz": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6082", "title": "The project file 'D:\\C# Projects\\Game1\\Game1\\Game1.csproj' cannot be opened. There is a missing project subtype.", "body": "I have VS2017 Community installed.\r\nI just installed MonoGame 3.6 and was going to try one of the tutorials.\r\nWhen I try to create a new project with template \"MonoGame Windows Store (XAML) Project\" I get an error of;\r\n\r\nThe project file 'D:\\C# Projects\\Game1\\Game1\\Game1.csproj' cannot be opened. There is a missing project subtype....\r\n\r\nI note on the website that it doesn't mention support for VS2017 and wonder is this the issue?\r\n\r\nI also note that in the error message there would appear to be a reference to a Game1 subfolder inside another Game1 folder which seems incorrect.\r\n\r\nAre there other dependencies that I need to install or do I need to work with an earlier version of VS?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MyEyes": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6080", "title": "MRTs with unsupported surface format failing silently in DesktopGL.", "body": "This example causes draws to the rendertargets to fail if FAIL is set.\r\nI ran this on a Win7 machine with the current nightly as a DesktopGL project and a GeForce GTX 960.\r\nWhen using the default constructor everything works as expected, when picking Rg32 for the depthTarget the color target is not drawn to.\r\n\r\nI think this is either a bug or unsupported by OGL. The GraphicsDevice will still show that 2 Rendertargets are bound.\r\n\r\nIt would make sense for me to at least not fail silently under those circumstances.\r\n\r\n```\r\nusing Microsoft.Xna.Framework;\r\nusing Microsoft.Xna.Framework.Graphics;\r\nusing Microsoft.Xna.Framework.Input;\r\n\r\nnamespace MRTIssue\r\n{\r\n    public class SomeFail : Game\r\n    {\r\n        GraphicsDeviceManager graphics;\r\n        SpriteBatch spriteBatch;\r\n        RenderTarget2D colorTarget;\r\n        RenderTarget2D depthTarget;\r\n\r\n        public SomeFail()\r\n            : base()\r\n        {\r\n            graphics = new GraphicsDeviceManager(this);\r\n            Content.RootDirectory = \"Content\";\r\n        }\r\n        protected override void Initialize()\r\n        {\r\n#if FAIL\r\n            colorTarget = new RenderTarget2D(GraphicsDevice, GraphicsDevice.Viewport.Width, GraphicsDevice.Viewport.Height, false, SurfaceFormat.Color, DepthFormat.None);\r\n            depthTarget = new RenderTarget2D(GraphicsDevice, GraphicsDevice.Viewport.Width, GraphicsDevice.Viewport.Height, false, SurfaceFormat.Rg32, DepthFormat.None);\r\n#else\r\n            colorTarget = new RenderTarget2D(GraphicsDevice, GraphicsDevice.Viewport.Width, GraphicsDevice.Viewport.Height);\r\n            depthTarget = new RenderTarget2D(GraphicsDevice, GraphicsDevice.Viewport.Width, GraphicsDevice.Viewport.Height);\r\n#endif\r\n            base.Initialize();\r\n        }\r\n\r\n        protected override void LoadContent()\r\n        {\r\n            spriteBatch = new SpriteBatch(GraphicsDevice);\r\n        }\r\n\r\n        protected override void UnloadContent()\r\n        {\r\n        }\r\n\r\n        protected override void Update(GameTime gameTime)\r\n        {\r\n            if (GamePad.GetState(PlayerIndex.One).Buttons.Back == ButtonState.Pressed || Keyboard.GetState().IsKeyDown(Keys.Escape))\r\n                Exit();\r\n\r\n            base.Update(gameTime);\r\n        }\r\n\r\n        protected override void Draw(GameTime gameTime)\r\n        {\r\n            GraphicsDevice.SetRenderTargets(new RenderTargetBinding(colorTarget), new RenderTargetBinding(depthTarget));\r\n            GraphicsDevice.Clear(Color.CornflowerBlue);\r\n            GraphicsDevice.SetRenderTargets(null);\r\n\r\n            spriteBatch.Begin();\r\n            spriteBatch.Draw(colorTarget, Vector2.Zero, Color.White);\r\n            spriteBatch.End();\r\n\r\n            base.Draw(gameTime);\r\n        }\r\n    }\r\n}\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "StealthKill": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6079", "title": "Tom Spilmans beard function is not working", "body": "\r\n```\r\npublic Beard\r\n{\r\n\tfloat timer;\r\n\tfloat beardLength;\r\n\r\n\tpublic Beard()\r\n\t{\r\n\t\tbeardLength = 0;\r\n\t\ttimer = 1000f; //ms\r\n\t}\r\n\r\n\tpublic void SetBeardLength(float value)\r\n\t{\r\n\t\tbeardLength = value;\r\n\t}\r\n\t\r\n\tpublic void Update(GameTime gameTime)\r\n\t{\r\n\t\ttimer -= (float)gameTime.ElapsedGameTime.MilliSeconds;\r\n\t\tif(timer <= 0)\r\n\t\t{\r\n\t\t\tbeardLength += 0.01f;\r\n\t\t\ttimer = 1000f;\r\n\t\t}\r\n\t\t\r\n\t\tif(beardLength > 9000)\r\n\t\t{\r\n\t\t\tbeardLength = 0; // NOT WORKING\r\n\t\t}\r\n\t}\r\n}\r\n\r\n```\r\nPlease shave, makes you look like a 80 year old Kung Fu Master.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6079/reactions", "total_count": 10, "+1": 0, "-1": 0, "laugh": 10, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Vega-KH": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6074", "title": "Unknown argument \"workingDir\" when loading mgcb with Pipeline Tool", "body": "On Windows 10, the pipeline tool can no longer open any mgcb files. When attempting to open, an error occurs stating that there was an unknown argument \"workingDir.\"\r\n\r\nThis happens even when the pipeline tool is run with no command line arguments, and even when workingDir is not set in the mgcb file.\r\n\r\n #6056 appears to be the cause of the error. It did not appear in builds before this.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fogbank": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6067", "title": "Game.Draw is never called when tracing the code with a debugger", "body": "[The official XNA documentation](https://msdn.microsoft.com/en-us/library/bb203873.aspx#ID4E5B) says that Game.Update should not be called again when the code is running under a debugger.\r\nWhat happens now is that, when the code is traced with a debugger, MonoGame calls Game.Update repeatedly and never calls Game.Draw.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6047", "title": "The Visual Studio installer has issues if the user is a \"standard user\" (not in the Administrators group)", "body": "I tried to install MonoGame for Visual Studio on Windows 10 from a \"standard user\", which means that, after asking for the Administrator's password, Windows runs it as the Administrator user.\r\n\r\nWhen this happens, of course the start menu entries get saved into the Administrator's start menu and the VS templates are not saved anywhere because the installer looks for the VS directory in the user's Documents folder, and Administrator does not have that directory, so the VS installation is not detected. I've tried with VS 2017 (and yes, with the latest 3.7.0 dev package), don't know if it's the same with older versions.\r\n\r\nSo, it seems that the MonoGame installer requires to be run by a user who is in the Administrators group.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bricelam": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6066", "title": "Join the .NET Foundation", "body": "The .NET community [adored XNA](https://visualstudio.uservoice.com/forums/121579-visual-studio-ide/suggestions/3725445-xna-5), and I'm sure MonoGame will be welcomed with open arms into the [.NET Foundation](http://dotnetfoundation.org/about). I believe you're an important part of the .NET open source community and hope you'll consider joining.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6066/reactions", "total_count": 9, "+1": 0, "-1": 0, "laugh": 0, "hooray": 9, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "headhunter45": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6063", "title": "Content Pipeline unable to write type with abstract/interface field/property", "body": "I'm using 3.6 and trying to port an old XNA game that uses a lot of custom type writers/readers.\r\n\r\nThe actual example is a lot more complicated than this.\r\n```\r\npublic class LogicalExpression {...}\r\npublic TrueLogicalExpression : LogicalExpression {...}\r\npublic FalseLogicalExpression : LogicalExpression {...}\r\npublic class Episode {\r\n    public LogicalExpression Criteria;\r\n}\r\n```\r\n\r\nAssuming our xml is setup properly and each of the concrete implementations of LogicalExpression have writers and readers this works fine in XNA.  MonoGame is trying to get a type writer for the LogicalExpression abstract type which for us redirects to the appropriate concrete implementation's writer, but in the process MonoGame tries to get a reader for the LogicalExpression type which doesn't exist.  I think the problem is in ReflectiveWriter<T> it uses the declared type of the property or field instead of the object's actual type.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dsaf": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6062", "title": "Leveraging C# 7.2 'reference semantics with value types' in future?", "body": "Based on my shallow understanding it should be a good little performance booster? I was wondering if it's worth tracking this for some 4.x+ release. Obviously it would limit code to C# 7.2+ compilers.\r\n\r\nhttps://docs.microsoft.com/en-gb/dotnet/csharp/reference-semantics-with-value-types\r\n\r\n> An advantage to using value types is that they often avoid heap allocations. The corresponding disadvantage is that they are copied by value. This tradeoff makes it harder to optimize algorithms that operate on large amounts of data. New language features in C# 7.2 provide mechanisms that enable pass-by-reference semantics with value types. If you use these features wisely you can minimize both allocations and copy operations. This article explores those new features.\r\n\r\n> These enhancements to the C# language are designed for performance critical algorithms where memory allocations can be critical to achieving the necessary performance. You may find that you don't often use these features in the code you write. ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Jjagg": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6061", "title": "[DesktopGL] Suggestion: use FBO as back buffer render target", "body": "Long wall of text incoming, tl;dr at the bottom.\r\n\r\nCurrently there are some issues in the DesktopGL implementation with respect to pixel format of the window. In OpenGL you can either use an FBO for MSAA and depth support or create the Default Framebuffer with support for MSAA and depth.\r\n\r\nTo create the Default FrameBuffer with MSAA and a depth/stencil buffer, you need to indicate this in the pixel format of the window that the context will be created for (e.g. on Windows by using [wglChoosePixelFormatArb](https://www.khronos.org/registry/OpenGL/extensions/ARB/WGL_ARB_pixel_format.txt)). Because of this you need to recreate the whole window whenever you want to change the surface format, depth bits, stencil bits or multisampling as there is no way to change the pixel format of an existing window [[1]](#setpixelformat). Because you recreate the window, you also need to recreate the GL context [[2]](#so-context). That in turn will mess up all graphics resources, and since recreating them isn't properly implemented yet this is a big issue. It's also annoying that you can actually see that the window is being recreated. \r\n\r\nIf we use an FBO for MSAA and depth instead, the Default Framebuffer only needs a color buffer. We would render everything to the FBO instead of the Default Framebuffer and in `Present` blit the FBO color buffer to the Default Framebuffers color buffer. That way we can bypass the recreation of the window in most cases. The only case where we can't is if the backbuffer format is changed by the user because we need to change the color buffer of the Default Framebuffer [[3]](#bb-format). Using an FBO will allow changing multisample count, depth and stencil buffer size at runtime for DesktopGL. \r\nWe'd still need to implement recreating the window in case the user changes the surface format, but using an FBO lowers priority for supporting window recreation IMO because changing the surface format at runtime is not something most users will do, while changing multisample count is more common.\r\n\r\nCurrently we create the Default Framebuffer with depth and MSAA support as required, however we do not support changing these settings at runtime because of the issues described in the second paragraph. \r\nSo I suggest using an FBO instead. MG already requires FBO support for RenderTargets, but we would need require the [ARB_texture_multisample](https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_texture_multisample.txt) extension to have a multisampled FBO, so GL requirements if you want a multisampled back buffer would go up slightly [[4]](#requirements). I don't know how well supported ARB_texture_multisample is. The most significant benefit IMO is that we can let MG users change MSAA at runtime without any issues and without the player noticing (i.e. without recreating the window). We'd just need to switch out the FBO attachments, quick and simple.\r\n\r\nWe could optionally only use the FBO if ARB_texture_multisample is supported and fall back to creating the Default FrameBuffer with MSAA and depth buffer support, but that increases complexity and makes maintenance harder. (I think that's what FNA does, flibit calls the FBO 'faux-backbuffer' IIRC)\r\n\r\n____________________\r\n\r\n<a name=\"setpixelformat\">[1]</a>: e.g. from [wgl docs](https://msdn.microsoft.com/en-us/library/dd369049(v=vs.85).aspx):\r\n> Setting the pixel format of a window more than once can lead to significant complications for the Window Manager and for multithread applications, so it is not allowed. An application can only set the pixel format of a window one time. Once a window's pixel format is set, it cannot be changed.\r\n\r\n<a name=\"so-context\">[2]</a>: A GL context can apparently be used with the new window if the same pixel format is used, however that functionality is not exposed in SDL, see [this SO post](https://stackoverflow.com/a/12881231). And either way it's not really useful here, because we need to recreate the window *because* the pixel format needs to be changed.\r\n\r\n<a name=\"bb-format\">[3]</a>: Blitting does not require the formats of both involved color buffers to be the same, but it is limited in that not all combinations work and I think it's driver-dependent, so we should probably just ensure they're the same.\r\n\r\n<a name=\"requirements\">[4]</a>: If we decide to make RenderTargets optional to lower GL requirements (see #5580) this will make it a lot harder to do so.\r\n\r\n______________________\r\n\r\n**tl;dr**\r\n\r\nPros of FBO approach:\r\n\r\n- Runtime switching of multisample count, depth and stencil buffer size without recreating the window.\r\n\r\nCons of FBO approach:\r\n\r\n- Higher requirements if you want a multisampled back buffer (ARB_texture_multisample required)\r\n- Harder to support older OpenGL versions if we ever decide we want that.\r\n\r\ncc @cra0zy @mrhelmut ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6058", "title": "GameWindow.Position is inconsistent", "body": "For DX GameWindow.Position is the WinForms Form location, meaning the top left of the window.\r\nFor DesktopGL it's the top left of the client rectangle, so there will be a slight offset when the window is not borderless. \r\n\r\nWindow position seems the obvious solution, so I'll fix the DesktopGL implementation.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5994", "title": "HLSL array size limited to 255", "body": "MG uses a byte in the binary effect format to store the number of parameters in an effect (written out [here](https://github.com/MonoGame/MonoGame/blob/78e193e/Tools/2MGFX/EffectObject.writer.cs#L143)). In the effect writer, the function to write parameters is called recursively for an array, treating each element as a parameter. Because of this the number of elements in that array is also written out as a byte. The number of elements is internally stored as an integer and only casted to byte (without checking for overflow) when the effect is written out. So when users have arrays of > 255 elements, the build will succeed, but things will go wrong when the effect is read back in at runtime.\r\n\r\nI locally patched this to write out and read in the parameter count as an integer and that fixed this. If that's alright I'll set up a PR. I know I have to upgrade the version in [2MGFX](https://github.com/MonoGame/MonoGame/blob/78e193e/Tools/2MGFX/EffectObject.writer.cs#L15) and the [runtime](https://github.com/MonoGame/MonoGame/blob/78e193e288672361260d82136ef2622a590c8e55/MonoGame.Framework/Graphics/Effect/Effect.cs#L28), and rebuild stock effects afterwards.\r\n\r\nEDIT: It seems parameter/element count is limited to 2^16, so using a short would be better.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5867", "title": "PVRTexLibNET.PVRTexture.Transcode crashes with SIGFPE on Linux", "body": "Running the tests on Linux causes a crash with a SIGFPE (arithmetic error, usually caused by division by 0 or overflow) when running [PVRTexLibNET.PVRTexture.Transcode](https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework.Content.Pipeline/Graphics/PvrtcBitmapContent.cs#L120).\r\n\r\nAs far as I can tell PVRTexLib is proprietary, so we can't really debug this.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5866", "title": "Missing libpng12 for texture compression on Linux", "body": "Running tests on Linux I got DLLNotFoundException for nvtt (NVidia Texture Tools) because it depends on libpng 1.2. I had libpng installed, but not 1.2. Installing it on Arch Linux from the official repositories was easy and fixed the issue. We should probably include libpng 1.2 as a dependency.\r\n\r\ncc @cra0zy ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5740", "title": "AudioEmitter.DopplerScale is not used", "body": "There is a global DopplerScale (`SoundEffect.DopplerScale`) that is implemented in MG, but `AudioEmitter.DopplerScale` is unused for both XAudio and OpenAL. We need to investigate exactly how XNA applies this scale (most likely just multiply it with the global scale) and fix both paths.\r\n\r\nThe XAudio fix is straightforward because XAudio emitters have their own DopplerScale. Assuming XNA multiplies the Doppler scales, we just need to remove [this line](https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Audio/SoundEffectInstance.XAudio.cs#L42) and multiply the emitter DopplerScale with SoundEffect.DopplerScale [here](https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Audio/SoundEffectInstance.XAudio.cs#L116). It looks like assigning the DopplerScale was accidentally put inside that #if block. It should be moved out so it is applied for UWP too. \r\n\r\nFor OpenAL we need to do some more experimenting. There is only a global Doppler scale in OpenAL, no emitter-specific setting. We need to test if sound effects keep the doppler scale they get when they start playing or if changing the scale affects playing sounds too (that's not in the docs). If playing sounds are affected when changing the global Doppler scale, we can't replicate XAudio behaviour and we should just use `SoundEffect.DopplerScale`, ignoring the emitter settings.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5739", "title": "[OpenAL] SoundEffectInstance settings not applied when not playing", "body": "Under OpenAL SoundEffectInstance instances only get a source assigned when they are playing (a source is the native resource for playing a sound in OpenAL). A source is reserved in the PlatformPlay method [here](https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Audio/SoundEffectInstance.OpenAL.cs#L115).\r\nThe platform specific methods for setting pitch, volume, etc. check if the instance has a source id and do not apply the setting if there is no source linked to the SFX instance. That means settings are only applied when the sound is playing or paused. An example of what intuitively should work, but does not is the following:\r\n```\r\nvar instance = sfx.CreateInstance();\r\ninstance.Pitch = pitch;\r\ninstance.Play();\r\n```\r\n\r\nThere's some comments about OpenAL [limiting the number of sources](https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Audio/OpenALSoundController.cs#L78), but I don't think that's still relevant with OpenAL soft. My best guess is that the source limit was the reason sound effect instances did not get a source on creation. So I think we can just change that to reserve a source when creating a sound effect instance to fix this issue.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5590", "title": "Resize back buffer while window is being resized", "body": "In XNA when the window is being resized by the user the back buffer is not resized. The changes are only pushed through when the resizing ends. MonoGame currently also does that for DX for XNA conformance. We don't do that for DesktopGL because SDL does not have an event for user resizing ending. For DesktopGL the back buffer is resized every frame while the user is resizing. I don't have a clue what UWP does honestly.\r\n\r\nI opened this issue to propose the alternative to what XNA does. I.e. on all desktop platforms resize the back buffer every frame while the window is being resized. With current hardware this is really not an issue performance wise (which is maybe why XNA didn't do this). It looks neater (if handled correctly by the game dev, but they obviously should if they support resizing) and is easier to get working cross-platform in MonoGame itself. Thoughts?\r\n\r\ncc @cra0zy ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5590/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5487", "title": "Decoupling GraphicsDeviceManager from Game/GamePlatform/GameWindow", "body": "The suggested changes here are probably a bit controversial and should go into a later MG 4.0 if accepted because of some breaking changes. This depends on #5486 and assumes the proposed changes there get merged.\r\n  \r\nIf you look at GDM it could be completely decoupled from Game with relatively minor changes. The only thing really stopping this is the XNA API. The GDM constructor takes a Game as an argument so it can check that there's no GDM registered for the game yet and register itself in the games service container (1) and keep a reference for setting window handle in the PresentationParameters (2) and for handling display orientation (3). Let's try to handle these three things without requiring a Game!\r\n\r\n1. I think we should let users manually register the GraphicsDeviceManager. I.e. instead of doing `graphics = new GraphicsDeviceManager(this)` in the Game1 ctor you'd do \r\n```\r\ngraphics = new GraphicsDeviceManager();\r\nServices.AddService(typeof(IGraphicsDeviceManager), graphics);\r\nServices.AddService(typeof(IGraphicsDeviceService), graphics);\r\n```\r\nand maybe shorthands for convenience:\r\n```\r\ngraphics = new GraphicsDeviceManager();\r\nthis.RegisterGraphicsDeviceManager(graphics);\r\n```\r\nand\r\n```\r\ngraphics = this.RegisterNewGraphicsDeviceManager();\r\n```\r\nAdditionally this makes it more transparent to the user what actually happens. This would be the breaking part of the changes involved in this suggestion. We can however smooth the transition by marking the `new GraphicsDeviceManager(Game)` constructor as obsolete and change it so it calls the new parameterless constructor and makes a call to `game.RegisterGraphicsDeviceManager(graphics)`. This way it won't be a breaking change and we can implement it before MG 4.0.\r\n\r\n2. XNA allows users to override the window handle in the PreparingPresentationParameters event, so it can be easily changed. Similar to what we do for other PresentationParameter stuff (like PreferredBackBufferWidth, PreferredBackBufferFormat, PreferredDepthStencilFormat...) I think it would be nice to have a WindowHandle property (public get and set) in GDM. That's more consistent and allows Game to set the initial window handle during initialization (only if the user has not set it yet , so they can do custom windowing stuff). I'd like to do some more research/thinking for this one though.\r\n\r\n3. I haven't looked into MG code for mobile platforms a lot so I'm not entirely sure if the following is the best path, but I do have a suggestion. I think GDM should have a field for DisplayOrientation like it does for other stuff in presentation parameters (I already mentioned some in (2)). DisplayOrientation changes because of auto rotation on a device should change the value in GDM and apply changes. When DisplayMode is changed and `ApplyChanges` is called in code rotating the screen should be handled in `GamePlatform.OnPresentationChanged`.\r\n\r\nThe goal of these changes would be overall a lot more flexibility in using GraphicsDeviceManager. GDM would no longer depend on either Game, GameWindow or GamePlatform.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5486", "title": "[DesktopGL] Window not updated when presentation changed", "body": "In #5429 the DesktopGL platform switched from using GraphicsDeviceManager.Legacy to the newer (and more XNA-compatible) GraphicsDeviceManager (GDM). The way the window should get updated and how it works in the DX path is by overriding GamePlatform.OnPresentationChanged in the platform specific GamePlatform implementation ([WinFormsGamePlatform](https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Windows/WinFormsGamePlatform.cs#L121) for DX). That function is called in GraphicsDeviceManager.ApplyChanges (which is not the best place for the call, but more on that later). \r\n\r\nFor DX we update the window size in WinFormsGamePlatform.OnPresentationChanged. For SDLGamePlatform the function is not overriden at all so the window is not made aware of any changes. Looking at the UWP implementation it seems like it only handles full screen switches and not the window size, I'm not sure how the actual window resizing is handled for that path atm. So the fix is pretty straightforward, we just need to set the window client bounds to reflect the new backbuffer size in the OnPresentationChanged overrides for SDL (and possibly move some code around to do the same for UWP). This is a pretty big bug so it should get fixed ASAP.\r\n\r\nSo after applying that fix, GDM will be responsible for notifying the GamePlatform that the presentation changed which in turn notifies the GameWindow and updates its bounds. There's still two issues here. Well, one actual issue and one thing that's not so much an issue as an annoyance. \r\n\r\nThe actual issue is that you can change presentation parameters without touching the GDM by calling `GraphicsDevice.Reset(PresentationParameters)`, so the GamePlatform/GameWindow will not be notified in that case. IMO we should create a new internal event called PresentationChanged that the GDM subscribes to on its GraphicsDevice and responds to by notifying the GamePlatform of the presentation changes by calling OnPresentationChanged. This event would be triggered right before the `GraphicsDevice.Reset` event, but note that we can't omit the PresentationChanged event and just respond to the Reset event for this purpose because Reset is public (so users can subscribe) and delegate invocation order is not specified in the docs so it's best not to make assumptions.\r\n\r\nThe annoyance is that GDM calling `_game.Platform.OnPresentationChanged` makes GDM depend on a Game, GamePlatform and GameWindow being present. That's crap when users want to provide their own windowing solution, embed MG or even run MG headless[1]. So I suggest we use an event called PresentationChanged - like in GraphicsDevice - in GDM too. Game or GamePlatform would register for the event and respond by calling `GamePlatform.OnPresentationChanged`. It would invoke the event after creating a GraphicsDevice and when its GrapicsDevice invokes its PresentationChanged event (which we're subscribed to). It may be interesting to make this one public so users can easily implement their own windowing solutions without changing MG itself. Of course there's still some other coupling between GDM and Game/Window, but I'll address that in another issue because the changes are more controversial and for a more distant MG release because of breaking changes.\r\n\r\n[1]: There's some additional complications here because some code depends on a window handle being present. We can probably work around it with some effort, but I haven't really looked into this.\r\n\r\ncc @james0x0A", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5397", "title": "Update assimp", "body": "Assimp should be updated to get some bugfixes in. This will most likely fix #5395 and will fix #4769. The maintainers haven't released binaries for the last few version so we need to build from source.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b25a3049936f6e160653d004e6e2f90fcd82d176", "message": "Use desktop and UWP specific assemblies where necessary (#6010)\n\n* Use desktop and UWP specific assemblies where necessary\r\n\r\n* .NET 4.0 and desktop assembly for XInput\r\n\r\n* Fix SharpDX reference"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f6683a703045ce8dd4c3f9b5d7926bbfaec67b82", "message": "Fix GL PInvoke calling convention (#6086)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bdc7e1e476351465e04dda85c591847526b8122c", "message": "[DX] Center window on startup (fix)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0bae4361253d0c8f5a2225b2e2748057a67e603a", "message": "Remove WINDOWS_PHONE and WINDOWS_STOREAPP directives (#5991)\n\n* Remove leftover WINDOWS_PHONE stuff\r\n\r\n* Remove leftover WINDOWS_STOREAPP stuff"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/aa4690c9f07aa8d6741f6210986c79604e5036ad", "message": "Implement GraphicsDevice.GetBackBufferData (#5114)\n\n* GetBackBufferData implementation for OpenGL (Others are just stubs currently).\r\n\r\nDocs:\r\nhttp://msdn.microsoft.com/en-us/library/ff434115.aspx\r\nhttp://stackoverflow.com/questions/1352864/how-to-get-uiimage-from-eaglview/1945733\r\n\r\nrefs #1885\r\n\r\n* DirectX implementation of PlatformGetBackBufferData\r\n\r\n* Tidy up OpenGL implementation of PlatformGetBackBufferData to match and comment the public function\r\n\r\n* Fix GL.ReadPixels call for IOS\r\n\r\n* More comments on pixel formats by platform\r\n\r\n* Support non byte[] for GL GetBackBufferData (Thanks @thefiddler)\r\n\r\n* GetBackBufferData Windows Phone support\r\n\r\n* Add GL binding for ReadPixels\r\n\r\n* Wait for writer so it always completes\r\n\r\n* Implement and test GetBackBufferData\r\n\r\n* Re-remove GraphicsDevice.PSM (wrong merge)\r\n\r\n* Improve OpenGL implementation\r\n\r\n* Fix doc about format\r\n\r\n* Typo in Protobuild definition\r\n\r\n* Improve argument checks\r\n\r\n* Revert changes for less garbage in GL impl\r\n\r\n* Fix Web\r\n\r\n* Fix Windows Phone build\r\n\r\n* Fix Windows Universal build\r\n\r\n* Flip y coordinate for OpenGL implementation\r\n\r\n* Use PresentationParameters.BackBufferFormat\r\n\r\nI though the actual BackBufferFormat wasn't stored anywhere, only the\r\npreferred value, but the stuff in PresentationParams are the actual values\r\nso this removes the extra field I added and just uses\r\nPresentationParameters.BackBufferFormat.\r\n\r\n* Improve argument checking\r\n\r\n* Fix GetBackBufferData for DX\r\n\r\nPreviously when the Color format was specified (R8G8B8A8) it was changed\r\nto BGRA before creating the swapchain. I think the reason for it is that\r\nflipping the buffer is slightly faster when using BGRA because the native\r\nformat is BGRA, so no swizzling is needed when flipping the buffers.\r\nIn any case, this is not a breaking change and it makes more sense to use the\r\nrequested buffer format. People that want to optimize this far can\r\njust request a BGRA backbuffer to get the fast flipping benefits.\r\n\r\n* Remove wrong comment\r\n\r\n* Remove GetHighestSupportedGraphicsProfile (wrong merge)\r\n\r\n* Let MG MSAA test use GetBackBufferData\r\n\r\n* MultiSampleCount was clamped twice for DX\r\n\r\n* Improvements to DX GetBackBufferData\r\n\r\nThis commit essentially does 3 things:\r\n- If a null rect is passed to GetBackBufferData it is passed through to\r\n  PlatformGetBackBufferData so we can use functions that copy the whole\r\n  backbuffer instead of part of it. This is likely more efficient.\r\n  (only DX is handled in this commit, I'll do GL in the next)\r\n- Fix copying MSAA'd backbuffer. In DX you can't copy a texture with MSAA\r\n  to a staging resource directly, you need to copy it to a\r\n  non-multisampled (non-staging) texture first.\r\n- There were some weird duplicate operations happening in\r\n  PlatformGetBackBufferData for DX, so I simplified it.\r\n\r\n* Fix Web and GL\r\n\r\n* Fix DX11 using\r\n\r\n* Use ReflectionHelpers.SizeOf\r\n\r\n* Clean up imports and WP preprocessor directive"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/be75f308cb980cdb6d9aaaaa5ab38da5355615ef", "message": "Use desktop assembly of XAudio for DX projects"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4f65829cf71b30c1942b3b971b9dae14a9d63cb0", "message": "Upgrade to SharpDX 4.0.1 (#5949)\n\n* Upgrade SharpDX dependencies\r\n\r\n* Upgrade references"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b301dc276260e1c97013908902d14f3eca9282ba", "message": "Remove Windows 8.1 and Windows Phone 8.1 support (#5809)\n\n* Remove Windows 8.1 and Windows Phone 8.1 support\r\n\r\n* Remove Win8.1 and WP preprocessor directives\r\n\r\n* Replace WINRT with WINDOWS_UAP and remove the define\r\n\r\n* Re-add removed method stub needed for compilation\r\n\r\n* Remove Windows 8 Store from docs\r\n\r\n* Remove build VS2012 templates in NAnt script\r\n\r\n* Remove WP8.1 in Windows nsi installer\r\n\r\n* Remove some leftover files\r\n\r\n* Re-add build targets\r\n\r\n* Remove duplicate file include\r\n\r\n* Re-add SignedInGamer for UWP"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/76a5ad71d675360f865dec90783bf8270936e746", "message": "Git ignore the generated new build task projects"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/7a93cc4281edc3d813a880c372fe02cd00e8ab31", "message": "[GL] Check vbo in BufferBindingInfo (#5912)\n\n* [GL] Check vbo in BufferBindingInfo\r\n\r\n* Add test to verify fix"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/1a9466ef46b98d9b4ea5818190eaa33df1c5a6df", "message": "[DX] Improve window handling (#5585)\n\n* [DX] Improve window handling\r\n\r\n* Update back buffer size when switching to full screen\r\n\r\n* Fix dirty flag on early exit in GDM.ApplyChanges\r\n\r\n* Restore full screen after minimizing the window\r\n\r\n* Allow mode switching from the start\r\n\r\n* Fix DesktopGL build\r\n\r\n* Fix ClientSize raised before back buffer resize\r\n\r\n* Ignore resize events after switching soft full screen\r\n\r\n* VS done too much renamin'\r\n\r\n* Fix UWP build\r\n\r\n* Fix intializing in soft full screen mode\r\n\r\n* Resizing in hw full screen and cleanup things a bit\r\n\r\n* Fix hard full screen on startup and disposal\r\n\r\nHardware full screen failed when set in the game constructor because there\r\nwas no swapchain yet to get the output from. If there is no swapchain yet,\r\nthe current method gets the primary output by enumerating adapters and\r\ngetting the first, then getting the first output from that adapter.\r\n\r\nWhen exiting a game while in full screen I sometimes got stuck with a\r\nblack screen. That was fixed by making sure we exit full screen when\r\ndisposing a GraphicsDevice.\r\n\r\n* Remove unused event\r\n\r\n* Clamp backbuffer size to display size\r\n\r\n* Make OnPresentationChanged for WinForms internal\r\n\r\n* Fix DesktopGL build\r\n\r\n* Fix Web build\r\n\r\n* Fix mobile build\r\n\r\n* Only correct back buffer size for desktop platforms\r\n\r\n* Don't change DesktopGL to make this more mergeable\r\n\r\n* Don't limit back buffer size\r\n\r\n* Update Adapter when display changes\r\n\r\nAdded a check after a window is moved (or resized) that updates the\r\nGraphicsAdapter of the GraphicsDevice to the adapter that is rendering the\r\ndisplay that the window is on (because that might have changed).\r\n\r\n* Detect window size change through Win10 hotkeys\r\n\r\n* Catch ContainingOutput exception on headless devices\r\n\r\n* Don't center window after move with hotkeys\r\n\r\n* Fix resize through code raising ClientSizeChanged"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6b96b5e3edadfc18ce65347016eb951626b458de", "message": "Fix OpenGL pixel alignment"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/faa83a9dade2ad4fe3a2cc8385d5aa5cd5b419be", "message": "Fix casing for readme include in tests"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c45ba34dac201ca19d5a4270b4e4ab47b899dacd", "message": "Allow switching vsync at runtime in DesktopGL (#5862)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5dd434665e5c5e53a3d135a60602465f45cb9fc1", "message": "Fix broken XNA tests because of horizontal scroll wheel (#5863)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c9111e9f84929984acf14dd8f871dcda9a95caf1", "message": "Dispose cached texture in VideoPlayer (#5837)\n\nTexture was not disposed when a new one was created. \r\nAlso a minor code style edit."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0a418fbe64bfd7a1745efd1b9c8ed8e4f025ae4e", "message": "Check if master voice exists for XAudio SFXI's (#5827)\n\nUsing the SourceVoice after disposing of the MasteringVoice throws\r\nAccessViolationExceptions, so we need to check if its MasteringVoice is\r\ndisposed when using a SourceVoice to prevent this."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/19a617345044ed87b6568f7676dc8e1242a10ac7", "message": "Upgrade SharpDX to 3.1.1 (#5825)\n\n* Update SharpDX to 4.0.1\r\n\r\n* Move SharpDXHelper to Windows folder\r\n\r\n* Clean up imports and #ifs\r\n\r\n* Downgrade to SharpDX 3.1.1\r\n\r\n* Missing import in GraphicsDevice.DirectX\r\n\r\n* Fix EffectProcessor not throwing on compilation error\r\n\r\n* Upgrade deps\r\n\r\n* Use RawRectangle instead of Rectangle for Win8 too"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b0a730ce7be144c0c6b95c62e2d14e23ea7aa38c", "message": "Ignore null EntryAssembly for tests"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b221e63785c155fdc0e9638fb0a8924cdad66492", "message": "Instanced drawing for OpenGL (#4920)\n\nAdded support DrawInstancedPrimitives on OpenGL platforms"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/25cc28518d9c49c8ecef07c82b4e41e2a9fdf428", "message": "[OAL] DistanceScale and DopplerFactor (#5718)\n\nSupport DistanceScale and DopplerFactor under OpenAL"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/25eaf186c084f6af90f3df771a3616cde730bf94", "message": "Make SpriteBatch.End throw when Begin not called"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5995", "title": "Use short for parameter count in effect binary", "body": "A byte was used for the parameter count previously, this limited arrays to 255 elements. Fixes #5994.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5955", "title": "Clean up .definition and remove unused files", "body": "Makes the Protobuild .definition files make more use of services rather than specific platforms. Also removes the native MacOS files no longer used since #5410 because Mac is now DesktopGL. \r\n\r\nI'm not sure how to handle the SDL and OpenAL dll's. I would like to include them for all platforms when the DesktopGL service is enabled (so builds are x-platform), but only for their respective platform if only SDLWindowing or OpenALAudio is enabled. I don't think that's possible, right? @hach-que \r\nIt doesn't really matter anyway I suppose since MG isn't designed to let users mix 'n match different backends (e.g. SDL windowing with MG's XAudio audio implementation on Windows), but it would be pretty cool if that was possible.\r\n\r\nProbably a good idea to remove al MONOMAC stuff after this.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5921", "title": "Pool ContentManager scratch buffers", "body": "As discussed in #5341. (edit for autoclose: fixes #5341)\r\n\r\nI don't think this is right as is. Consider the case where a user loads incrementally larger assets. For each asset a new scratch buffer will be created and returned to the pool, staying in memory until game exit.\r\n\r\nMaybe it would be better to use a slightly modified version of ByteBufferPool that deletes the smallest buffer from the pool whenever Get is called and there are no buffers that are large enough. That way the pool size won't grow beyond the number of threads that use a buffer from it simultaneously (most often 1).\r\n\r\ncc @nkast ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5838", "title": "[DX] MSAA RenderTarget GetData and SetData", "body": "With these changes GetData works on MSAA rendertargets.\r\nFixes #5834.\r\n\r\nI made it so the resolved texture is stored in the `_texture` field and the MSAA texture is stored in the `_msTexture` field. That made more sense, since code interacting with the texture usually requires the resolved texture. Because of that change I could clean up the code some more, to make it easier to understand and more maintainable. I hope that's fine.\r\n\r\nI also added a test that calls SetData and GetData. Note that SetData is done on the resolved texture as explained in https://github.com/MonoGame/MonoGame/issues/5834#issuecomment-317408529.\r\n\r\nMinor other stuff (mostly related):\r\n- Fixed visibility of protected members (made them internal)\r\n- Improved initialization of `_sampleDescription` (it was all over the place)\r\n- Made it so `MultiSampleCount` is the actual MS count on the texture, not what's passed as the preferred MS count (we should probably also do that for GL)\r\n- Fixed XNA test compilation", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5814", "title": "[SDL] Fixes for initial window title and bounds", "body": "Setting window title or position before the window was created had no\r\neffect on DesktopGL. This fixes that issue. I was reminded of this by a forum post: http://community.monogame.net/t/cant-set-window-title-in-game1-constructor/9465\r\n\r\nThis is a small subset of the fixes from #5522 (which was closed to split up the changes). Some of the other changes made in that PR depend on #5585.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5514", "title": "Add missing xml doc to framework classes", "body": "This was a relaxing experience up to some point, but then it got tedious and I decided to stop.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5354", "title": "Add GLFX format support to 2MGFX", "body": "This needs GLSLOptimizerSharp to be added to the dependencies repo before it can build.\r\nI haven't added the new stuff for Mac yet in the Protobuild definitions. I did add Linux and tested both the Windows and Linux build on Windows. I have only tested a single shader at this point, the translated version of SpriteEffect:\r\n\r\n```\r\nuniform mat4 MatrixTransform;\r\nuniform sampler2D Texture;\r\n\r\n\r\nattribute vec4 position: POSITION0;\r\nattribute vec4 color    : COLOR0;\r\nattribute vec2 texCoord : TEXCOORD0;\r\n\r\nvarying vec4 vColor;\r\nvarying vec2 vTexCoord;\r\n\r\nvoid SpriteVertexShader()\r\n{\r\n    gl_Position = MatrixTransform * position;\r\n    vColor = color;\r\n    vTexCoord = texCoord;\r\n}\r\n\r\nvoid SpritePixelShader()\r\n{\r\n    gl_FragColor = texture2D(Texture, vTexCoord) * vColor;\r\n}\r\n\r\ntechnique SpriteBatch \r\n{\r\n    pass \r\n    {\r\n#if GLES\r\n        VertexShader = compile glsl_100 SpriteVertexShader();\r\n        PixelShader  = compile glsl_100 SpritePixelShader();\r\n#else\r\n        VertexShader = compile glsl_110 SpriteVertexShader();\r\n        PixelShader  = compile glsl_110 SpritePixelShader();\r\n#endif\r\n    }\r\n};\r\n```\r\nThe build system can only handle old GLSL (attribute, varying), some more effort will be needed to support in/out/inout.\r\n\r\nDiscussion in #2167.\r\nSorry for all the whitespace changes :/\r\n\r\nPing @tomspilman ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5144", "title": "Test for BasicEffect", "body": "First steps in resolving #4698. Right now the MG test is failing :/ Here's the diff:\n\n![diff-drawtest](https://cloud.githubusercontent.com/assets/14875382/18103780/61067dd0-6ef8-11e6-8449-326cba9af524.png)\n\n`Required similarity: 0.99\nSimilarity: 0.9742`\n\nLooks like a minor offset, may be something related to the half pixel offset thingy but I don't really know what that's all about.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AgisisTheCoder": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6046", "title": "Mouse.SetCursor() - Boom.....GDS+ unhandled exception after many iterations.", "body": "Hey,\r\n  We had a report that one of our playtesters downloaded our game and no cursors showed up. I currently have been setting the OS cursor myself, not realizing that monoGame had the Mouse.SetCursor functionality. However, when I moved to use Monogames SetCursor, I get a GDI+ exception after a period of time..\r\n\r\n**I had this previously, which worked perfectly for dozens of playtesters except the guy that just reported it....**\r\nForm.FromHandle(Game.Window.Handle).Cursor = (System.Windows.Forms.Cursor)(MyCursorBitmap);\r\n\r\n**I moved that to instead use**\r\nMouse.SetCursor(m_MyTexture2DCursor, 65, 65));  //130x130 image\r\n\r\nThat worked great as well....at least for the first 20-30 seconds of sitting there at the menu. It would then blow up with a \"An unhandled exception of type 'System.Runtime.InteropServices.ExternalException' occurred in System.Drawing.dll\".\r\n\r\nMouse.SetCursor gets called over and over in our render loop because game state changes will change the texture used on the fly. It might be that Mouse.SetCursor is doing something under the hood and is not freeing some resource it should. I have no idea.  I'm also not 100% confident that Mouse.SetCursor will fix his problem. I looked at your code, and it basically does what I am doing as far as image assignment goes.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5959", "title": "Incorrect resolution values being returned on my new 4K monitor", "body": "OK, so this is a fun mysterious one. I bought a new 4K monitor and am having very weird results as far as what XNA says my resolution is.\r\n\r\n**In Windowed Mode:**\r\nWindows OS says my display resolution is 3840 x 2160\r\nOur game, however, says my OS resolution is 2560x1440!\r\nThe game says the client window is 2560x1377\r\nA screenshot taken of the windowed mode game comes out at 3840x2160\r\n\r\n**I am using these two values to get the information from in the code:**\r\ngame.Window.ClientBounds.Height\r\nGraphicsAdapter.DefaultAdapter.CurrentDisplayMode.Height\r\n\r\nI've shared a screenshot containing all of the windows in question and the resolutions. The interesting thing is my co-developer has a 4K monitor as well, same resolution, but does not have this issue in windowed mode. It all comes out correct. To top it off, if you go into full screen mode, the values are all exactly right.\r\n\r\n![screenresolutionhell](https://user-images.githubusercontent.com/31192691/30791405-c9f04940-a177-11e7-98d7-d3c6ba10df53.jpg)\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Paphos": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6034", "title": "Unable to add dependency in a custom pipeline importer", "body": "When we create a custom **importer** in a pipeline extension project, we override this method :\r\n`public abstract TOutput Process(TInput input, ContentProcessorContext context);`\r\n\r\nHowever, we can't add a dependency to an external file by using `context.AddDependency(filepath)` because this method is empty :\r\nhttps://github.com/MonoGame/MonoGame/blob/1c09add4a7407cf14690614d5ec36666d6c2a8ea/MonoGame.Framework.Content.Pipeline/Builder/PipelineImporterContext.cs#L22-L24\r\n\r\nThe type `ContentProcessorContext`  is abstract but the concrete type is `PipelineImporterContext` which has this empty method, and this method is not overriden anywhere else.\r\n\r\nYou may note that adding a dependency does work with a custom **processor** as the `PipelineProcessorContext` has an implementation for the method `AddDependency` :\r\nhttps://github.com/MonoGame/MonoGame/blob/1c09add4a7407cf14690614d5ec36666d6c2a8ea/MonoGame.Framework.Content.Pipeline/Builder/PipelineProcessorContext.cs#L37-L40", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6085", "title": "Add new Plane constructor", "body": "I'm quite new to GitHub, so I don't really know if I can add a constructor to the Plane struct as it will change the API. Though I think it can be useful to define a plane that way, which is more straightforward than the a,b,c,d values and doesn't require to have three points.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SeriousMartin": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6031", "title": "InvalidContentException doesn't show as error when building in visual studio", "body": "https://github.com/MonoGame/MonoGame/blob/2db2d46faf2ccb6e9027ddfd4e780b1c98443a9b/Tools/MGCB/BuildContent.cs#L331-L351\r\n\r\nIn contrast to the PipelineException an InvalidContentException is not logged as an error which makes it very difficult to find the problem in the output console. ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "perneky": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6030", "title": "ClientSizeChanged not called on maximizing the window.", "body": "On Windows DirectX, when the game window gets maximized, ClientSizeChanged not called, even if AllowUserResizing set to true. Interesting that it called when you move the window to the top of the screen and maximize that way, but not when you click the maximize button of the window, or the restore button when maximized.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Ragath": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6029", "title": "[Pipeline Tool]Double-clicking or pressing enter on a treeview item does nothing.", "body": "Double-clicking or pressing enter on a treeview item does nothing.\r\nWould expect the open command to activate.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5997", "title": "[Android] Wrong backbuffer size after lockscreen", "body": "MonoGame gets confused about the backbuffer size when the viewport changes and the screen locks/unlocks. This can be seen by the background still being cleared to cornflower blue across the edges, while drawing a texture at 0,0 does not make it go all the way into the topleft corner.\r\n\r\n1.  bring up the navbar\r\n2. lock the screen\r\n3. unlock the screen\r\n\r\nNow MonoGame thinks the backbuffer is the size of the viewport, but in reality it never changed size.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ca7072a81dd6e3fb9cf1a56e66750d11cfc5296f", "message": "Adds ContentIdentity of the imported asset to reduce the need for special types in importers. (#6013)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ba31ccc2c1374606146e5602d854429223653b7b", "message": "Prevents issues when arrays of different ranks all map to System.Array"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/91782259e3fcb6e6d1b534dd125b19ecdfcb53d0", "message": "Test for arrays contained in types."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/68d286a182fff6f4d6044c48ab02a5b2e2b2b30f", "message": "Fixes #5906"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/156f4f861e5257bec9db4ade01927b7a3f79448f", "message": "Adding support for multi-dimensional arrays to the content pipeline. (#5826)\n\n* Added support for multi-dimensional arrays.\r\n\r\n* Special casing System.Array to avoid writer mixups.\r\n\r\n* Unit tests for Array handling in the content pipeline."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3615043", "body": "Could you explain in detail the steps you took to get this error? Cause I cant seem to replicate it and everyone else that have tried it had no problems afaik.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3615043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "qntf": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6023", "title": "Support PNG image for window icon", "body": "Using a BMP for window icon is very limiting, as it does not support transparency, commonly used in icons.\r\nLooks like there is already some PNG loading code: https://github.com/MonoGame/MonoGame/tree/develop/MonoGame.Framework/Utilities/Png\r\n\r\nCould we possibly have PNG support in taskbar/window icon, cross platform?\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6022", "title": "Release 3.6.1?", "body": "Looks like 3.6.1 milestone is finished, and already great work on 3.7! Happy to see!\r\nCan 3.6.1 tag be released, and new packages for important patch on NuGet?\r\nThanks!\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6022/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mrhelmut": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6018", "title": "APK expansion support", "body": "On Google Play, Android APKs are limited to 100MB. If an application has to be bigger, one has to implement a support for side loading APK expansions (OBB files): https://developer.android.com/google/play/expansion-files.html\r\n\r\nAn OBB file a zip archive with the same internal structure as the APK and has to be located in a specific system folder.\r\n\r\nI recently had to support this for loading assets through the content pipeline. Thanks to the help of @dellis1972 I ended up simply modifying the ```TitleContainer```: https://github.com/mrhelmut/MonoGame/commit/29f96cc6ef76ac9cab2c8687c07883ec1335a58f\r\n\r\nWould it be worth to upstream this change? Is there any better way to handle this?\r\n\r\n@KonajuGames ?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6018/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5984", "title": "[Android] Can't load any ETC1 textures", "body": "On latest develop, I can't get any ETC1 compressed textures to load.\r\n\r\nIf there is no mipmap, it fails here: https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Content/ContentReaders/Texture2DReader.cs#L74\r\n\r\n... with a \"can't read behind end of stream\" error (levelCount, height and width are read correctly).\r\n\r\nIf there are mipmaps, it fails here: https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Graphics/Texture2D.cs#L377\r\n\r\nI think it's related to #5983 (or possibly its cause/consequence).\r\n\r\n@dellis1972 @KonajuGames  would you have any suggestion on where to look? (I believe it happened on late OpenTK versions too.)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5968", "title": "Corrupted textures on iOS", "body": "Hello there,\r\n\r\nI'm running into texture corruption issues.\r\n\r\nFor reference: https://gitlab.com/paulloz/EMMA/uploads/7601b49dbd9cac9ceb2856107ca50013/IMG_0321.PNG\r\n\r\nA few facts:\r\n- it's random, it can happen on all iOS devices, but sometimes it doesn't (90% repro chance)\r\n- the first few rows of the texture are corrupted\r\n- it's not happening on other platforms\r\n- it's not happening when using texture compression\r\n- it's not related to the pipeline processing of the assets, it's a runtime problem\r\n- it may be related to loading textures from a thread\r\n- it's urgent ^^'\r\n\r\nDoes anyone have a clue about this?\r\n\r\n@KonajuGames @dellis1972 @roponator ?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5964", "title": "[Android] Crash with Samsung S8 \"entire screen\" mode", "body": "This is a feedback from an independent QA team.\r\n\r\nIt appears that MonoGame doesn't support the \"full entire screen\" mode present on Samsung Galaxy S8 phones.\r\n\r\nGames are crashing as soon as a touch input is registered. Here's a stack trace I got from the QA team.\r\n\r\n```\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime:   at Microsoft.Xna.Framework.Input.Touch.TouchPanel.AddEvent (System.Int32 id, Microsoft.Xna.Framework.Input.Touch.TouchLocationState state, Microsoft.Xna.Framework.Vector2 position, System.Boolean isMouse) [0x00000] in <3fb3607028544688a94cdff6dbac64fc>:0 \r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime:   at Microsoft.Xna.Framework.Input.Touch.TouchPanel.AddEvent (System.Int32 id, Microsoft.Xna.Framework.Input.Touch.TouchLocationState state, Microsoft.Xna.Framework.Vector2 position) [0x00000] in <3fb3607028544688a94cdff6dbac64fc>:0 \r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime:   at Microsoft.Xna.Framework.Input.Touch.AndroidTouchEventManager.OnTouchEvent (Android.Views.MotionEvent e) [0x00074] in <3fb3607028544688a94cdff6dbac64fc>:0 \r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime:   at Microsoft.Xna.Framework.MonoGameAndroidGameView.Android.Views.View.IOnTouchListener.OnTouch (Android.Views.View v, Android.Views.MotionEvent e) [0x00000] in <3fb3607028544688a94cdff6dbac64fc>:0 \r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime:   at Android.Views.View+IOnTouchListenerInvoker.n_OnTouch_Landroid_view_View_Landroid_view_MotionEvent_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_v, System.IntPtr native_e) [0x00017] in <0a759b3d693640d3855fc15f27718bdd>:0 \r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime:   at (wrapper dynamic-method) System.Object:51bb64d3-9f69-4269-84e6-9f5681e9293c (intptr,intptr,intptr,intptr)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat md5cedead65730cfb9c4b33fbfd5914d87f.MonoGameAndroidGameView.n_onTouch(Native Method)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat md5cedead65730cfb9c4b33fbfd5914d87f.MonoGameAndroidGameView.onTouch(MonoGameAndroidGameView.java:77)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.View.dispatchTouchEvent(View.java:10775)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.SurfaceView.dispatchTouchEvent(SurfaceView.java:333)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2865)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2492)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2865)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2492)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2865)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2492)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat com.android.internal.policy.DecorView.superDispatchTouchEvent(DecorView.java:607)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat com.android.internal.policy.PhoneWindow.superDispatchTouchEvent(PhoneWindow.java:1890)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.app.Activity.dispatchTouchEvent(Activity.java:3240)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat com.android.internal.policy.DecorView.dispatchTouchEvent(DecorView.java:569)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.View.dispatchPointerEvent(View.java:11008)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:5162)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:5014)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4539)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4592)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4558)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:4691)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4566)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:4748)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4539)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4592)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4558)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4566)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4539)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:7098)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:7030)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:6991)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:7208)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:185)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.os.MessageQueue.nativePollOnce(Native Method)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.os.MessageQueue.next(MessageQueue.java:323)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.os.Looper.loop(Looper.java:136)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat android.app.ActivityThread.main(ActivityThread.java:6776)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat java.lang.reflect.Method.invoke(Native Method)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1520)\r\n09-26 11:42:55.102  5945  5945 E AndroidRuntime: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1410)\r\n```\r\n\r\nWe don't have a Galaxy S8 in house to give this a spin.\r\n\r\nDisabling \"full entire screen\" mode on the phone works (but games have black borders).", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5936", "title": "[Android] Black screen after splash screen and before game", "body": "Another one since #5410 :)\r\n\r\nThere is a black screen appearing after the splash screen and before the game runs.\r\n\r\nI haven't looked into this one yet.\r\n\r\n@dellis1972 @roponator ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5580", "title": "Lowering DesktopGL OpenGL requirements for SpriteBatch games?", "body": "Hello there,\r\n\r\nI haven't checked if this is really possible, but we would have a relevant benefit from trying to lower the OpenGL requirements for DesktopGL games running on Windows.\r\n\r\nWe have a lot of players unable to run our games because of the bad OpenGL support of the Intel drivers. While Intel GPU, even 10 years old, mostly all supports Direct3D 10, they hardly have drivers for OpenGL 1.5 while they should be 3.0 capable, or at worst 2.1 (except on Linux where 2.1 is common place, because reasons). Intel never really cared about it and discontinued hardware are doomed to stick to this support. That's a problem because on the same hardware, a Direct3D game could work while it's DesktopGL version wouldn't.\r\n\r\nI know that we can't support all hardware, but there's a relevant number of players to be miss for games which run only on SpriteBatch (particularly when considering emerging countries).\r\n\r\nHence, I'm wondering if we could think of a way to manage the loading of the OpenGL entry points differently, by ordering them by feature sets or GL versions, and trying to load their extensions equivalent if not found (like what's done for ARB_framebuffer_object), as well as not blocking the initialization on non-SpriteBatch critical functions.\r\n\r\n@Jjagg @cra0zy @dellis1972 ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/1c9904822fff35612a4e51fe12375249129dc7cb", "message": "Fix ambiguity between System.Drawing.Size and Android.Util.Size"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/dd31a8df8af3ca8c57bc4ee7c7972e0e47a241ee", "message": "Set default window position to system primary display (#5817)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c76b5a2bff4dc21b7e28fe1fdf13113f7fa18f3e", "message": "Adds Xbox One S controller support to Linux"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5877c82af1be4ca40d06399aa0016cb624fe1da7", "message": "Fix for OpenGL texture construction not working from a thread"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/afb68d8508242f482867f8bc07dcb67448397370", "message": "Updated reflection to be backward compatible with .Net 4.0 (#5732)\n\n* Updated reflection to be backward compatible with .Net 4.0\r\n\r\n* Fixed .Net 4.0 detection rule\r\n\r\n* Define NET45+ constant insteand of NET4-only\r\n\r\n* Fix compatibility with XBuild"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/2f3b8304311ac481444563fcb1bc29db04d93f50", "message": "Implementing Microphone for OpenAL platforms (#5651)\n\nImplemented Microphone for OpenAL platforms"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/163cf3a659cfbb706bfbf431e71cf28d8ebb8292", "message": "glGetQueryObjectiv compatibility fix"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4fa9257b0ac8906267f39c7670fdce5ead110623", "message": "Updating NVorbis fork"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8d85868ac8c15e2bb636c146f9f886b2576efa4b", "message": "SDL Gamepad DB update (#5605)\n\n* SDL game controller DB update\r\n\r\n* Added Rock Candy X360 Controller to Mac OS"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4430", "title": "Documentation for packaging and distributing projects", "body": "I started working on some documentation regarding how to package desktop projects for market distribution.\n\nThis is a very early work, mostly a draft, therefore not ready to be merged.\n\nTopics planned:\n- referencing all runtime requirements for both Windows & DesktopGL projects\n- using MonoKickstart\n- creating OS X bundles & dmg's\n- creating Linux packages\n- highlighting specific requirements for Steam and most popular distribution platforms\n\nNot planned (I lack the knowledge):\n- creating an installer for Windows or DesktopGL projects\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4162", "title": "Sound instance pool optimization to look for matching format in the pool", "body": "This is a follow up to #4155 where @tomspilman suggested this optimization.\n\nIt checks if there is any `SoundEffectInstance` with the same format of the given `SoundEffect` in the pool to efficiently re-use instances.\nThis only impacts XAudio for now.\n\nIt would be cool to document this in the documentation to warn that using too many different `SoundEffect` formats may impact performance (or the opposite, that using the same format for all sounds is best).\n\nIn our project, all sounds have the same format, hence it would be nice to test this PR against more varied projects.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jellythedoge": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6017", "title": "Cannot load SDL2.dll when changing folder path!", "body": "I have my project setup so all my dlls go like this\r\n\r\n    MainClass\r\n        API - x86 & x64 folders\r\n        Game - All code not including MainClass\r\n        Content - All assets\r\n\r\nNow the problem is with the API path the exe doesnt see the DLLS, Could you please add support for custom dll paths?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "prollin": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6016", "title": "Miss touch event during slow frames", "body": "https://github.com/MonoGame/MonoGame/blob/bd59328676004e6183b415dad98d91ae0b06e66a/MonoGame.Framework/Input/Touch/TouchPanelState.cs#L137\r\n\r\nWe noticed some touch event that were missing during slow frames for ppl with older devices. It seems that MonoGame discard events a bit too aggressively. Removing this block *seem* to solve our issues.\r\n\r\nAre there specific cases this is supposed to solve that we are missing? Asking for a friend :)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2940768", "body": "@kjpou1 Is there any purpose to this change that I am not seeing ? We should simply set the current framebuffer to the default (the main framebuffer). \nThe changes I made to enable rendertarget support allow to have only one framebuffer for all rendertargets; to swap rendertargets, we simply change the attachments (which is the recommended way). If we delete renderbuffers here, it will cause the RenderTarget2D to be invalid next time they are used. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2940768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3010632", "body": "All Tegra (NVIDIA) devices support DXT format (and a lot of them are shipping) ... we might want to check for the proper opengl extension here\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3010632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3002730", "body": "Good catch, that one slipped through the cracks ... come to think of it, I am not sure anisotropic filtering is supported for 3D targets (we only tested with 2D ones)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3002730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3040431", "body": "Yes; _colorbuffer would need to be a int[2] in order to be useful ... I doubt that was the intent therefore I am pretty sure this was a bug.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3040431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "FrostFlame64": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6015", "title": "Request to make the Sdl class public, instead of internal", "body": "Hello,\r\nI'm a hobbyist developer using the MonoGame framework, and the recent change to abandon OpenTK caused me some issues that took me a while to work out.\r\n\r\nBasically, while developing in a \"sandbox\" type setup, I create some additional WinForm windows that position themselves around the Main game window. These additional windows display some debugging information for me in a way that keeps the main screen uncluttered.\r\n\r\nIn order to keep the additional windows \"maintenance free\", they were set up listen to some events from the main window (EX: Move, Resize, FocusedChanged, etc) to auto position themselves. When MonoGame still used OpenTK, I simply used some reflection to get the wrapping OpenTK.GameWindow, and setup delegates on its events.\r\n\r\nBut since MonoGame now uses SDL2 for this, I basically had to roll my own \"Window\" wrapper, that basically polls for the SDL events to detect for movement/resize/focus and raise custom event handlers.\r\n\r\nDoing that works fine for me, but in order for me to do this, **I basically had to copy/replicate everything from MonoGame's \"Sdl\" class into my own \"SDL\" class. They are nearly identical, which why I'm requesting that MonoGame just makes its Sdl class public.** Being able to just use that directly would be much easier.\r\n\r\nAs the title suggests: this is just a request. I got it to work fine by replicating it almost entirely (so I'm able to move on, even if this request is denied). I just felt that giving my use case might convince you to make it public (or if someone would suggest a different way for me to do this without polling SDL events).\r\n\r\nThanks for your time!", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vchelaru": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6012", "title": "GamePad.GetState().IsConnected is always false on Game.Initialize even if controller is connected", "body": "**Summary**\r\n\r\nThe following code returns `false` on MonoGame UWP when a controller is connected in `Game.Initialize`, but returns `true` in Microsoft XNA:\r\n\r\n```\r\nMicrosoft.Xna.Framework.Input.GamePad.GetState(PlayerIndex.One, GamePadDeadZone.Circular).IsConnected\r\n```\r\n\r\n**Code Example**\r\n\r\nTo reproduce:\r\n\r\n1. Connect an Xbox One wired controller (this will allow the same code and hardware to be used on both a MonoGame UWP project as well as Microsoft XNA project)\r\n1. Replace the Game1 contents with the code that follows\r\n1. Run the code in Microsoft XNA and notice that an exception is not thrown.\r\n1. Run the code in MonoGame UWP and notice that an exception is thrown.\r\n\r\n```\r\npublic class Game1 : Microsoft.Xna.Framework.Game\r\n{\r\n    GraphicsDeviceManager graphics;\r\n\r\n    public Game1() : base()\r\n    {\r\n        graphics = new GraphicsDeviceManager(this);\r\n    }\r\n\r\n    protected override void Initialize()\r\n    {\r\n        var gamepadState = Microsoft.Xna.Framework.Input.GamePad.GetState(PlayerIndex.One, GamePadDeadZone.Circular);\r\n\r\n        if (gamepadState.IsConnected == false)\r\n        {\r\n            throw new Exception(\"Not connected!\");\r\n        }\r\n\r\n        base.Initialize();\r\n    }\r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/729631/31616348-b64b5b68-b249-11e7-9092-0701305e4f01.png)\r\n\r\nNote that some functions (such as Draw) have been removed for brevity. They are not necessary to reproduce the bug.\r\n\r\n**Additional Information and Workarounds**\r\n\r\nThe `IsConnected` property will accurately reflect the connected state of a game pad in a game's Update method (after Initialize has finished). The issue is isolated specifically to the Initialize method. Changing the code to call `base.Initialize()` before getting the GamePad state does not fix the bug.\r\n\r\n**Why does this matter?**\r\n\r\nTutorials and simple games may query the connected state of the GamePad to identify whether to use gamepad controls or keyboard controls. This behavior may lead programmers to believe that controller support is broken in UWP, when it in fact is not.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6012/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5745", "title": "GamePad.GetState always returns IsConnected == false on Android", "body": "Android does not seem to detect game pads in MonoGame even though a game controller is connected through bluetooth.\r\n\r\nMore information (including screenshot) here:\r\n\r\nhttp://community.monogame.net/t/gamepad-support-in-android-not-ouya/2180/4", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5574", "title": "Added support for \"link\" property in the .mgcb file (although not cal\u2026", "body": "\u2026led that in the .mgcb file).\r\n\r\nBuild tool now sets output according to link if it exists.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ToolmakerSteve": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6009", "title": "setting Input.Mouse.WindowHandle should make Mouse events work WITHOUT needing Game class.", "body": "Looking at old XNA-using code, under Windows, the way to make Microsoft.Xna.Framework.Input.Mouse provide mouse events relative to a given window, was to do this:\r\n\r\n    Mouse.WindowHandle = ..the window's IntPtr...\r\n\r\nThen calling `FrameworkDispatcher.Update()` each game loop should be sufficient to update internal information, that is retrieved via `Mouse.GetState()`.\r\nIn MonoGame, this has no effect - a default mouse state of 0's is always returned,\r\nunless one is using a Game class (which creates a MonoGame GameWindow).\r\n\r\nAs a result, any MonoGame client that is using custom game loop that does not create a Game class, has to replace their XNA Mouse code with some non-XNA solution.\r\n\r\nA fix (at least on Windows) would be to add another case to the code that checks for a GameWindow. If there is no Primary GameWindow, then look at Mouse.WindowHandle, and create a MouseState relative to that.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "torbonde": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6007", "title": "NullReferenceException in Game.get_IsActive on iOS with F#", "body": "This was first raised as a question on StackOverflow, but it was suggested that I created an issue here instead.\r\n\r\nI'm trying to build a simple MonoGame app for iOS using F#. I have done this by manually cooking up a fsproj file, on the basis of project files for\r\n\r\nF# iOS Single Page Application (template),\r\nF# console application (template) and\r\nC# iOS MonoGame (template).\r\nMy code looks like this:\r\n\r\n```\r\nnamespace MonoGameFSharpTemplate\r\n\r\nmodule Game =\r\n    open Microsoft.Xna.Framework\r\n    open Microsoft.Xna.Framework.Graphics\r\n    open Microsoft.Xna.Framework.Input\r\n    open Microsoft.Devices.Sensors\r\n\r\n    type Game1 () as x =\r\n        inherit Game()\r\n\r\n        do x.Content.RootDirectory <- \"Content\"\r\n        member val graphics = new GraphicsDeviceManager(x) with get, set\r\n\r\n        override x.Initialize() =\r\n            do base.Initialize()\r\n\r\n        override x.LoadContent() = ()\r\n\r\n        override x.Update (gameTime) =\r\n            do base.Update(gameTime)\r\n\r\n        override x.Draw (gameTime) =\r\n            do base.Draw(gameTime)\r\n\r\nmodule App =\r\n    open UIKit\r\n    open Foundation\r\n    open Game\r\n\r\n    [<Register(\"AppDelegate\")>]\r\n    type AppDelegate() =\r\n        inherit UIApplicationDelegate()\r\n\r\n        override val Window = null with get, set\r\n\r\n        override this.FinishedLaunching(app, options) =\r\n            use game = new Game1()\r\n            game.Run()\r\n            true\r\n\r\nmodule Main =\r\n    open UIKit\r\n\r\n    [<EntryPoint>]\r\n    let main argv = \r\n        UIApplication.Main(argv, null, \"AppDelegate\")\r\n        0\r\n```\r\n\r\nIt should be pretty much equivalent to the code provided in the C# template (which runs just fine, by the way).\r\n\r\nWhen running this code in the iOS simulator, I get a `NullReferenceException` with the following stack trace\r\n```\r\n  at Microsoft.Xna.Framework.Game.get_IsActive () [0x00000] in <d3066bb8224f42c4ab3ae66d66329856>:0 \r\n  at Microsoft.Xna.Framework.iOSGamePlatform.Tick () [0x00006] in <d3066bb8224f42c4ab3ae66d66329856>:0 \r\n  at Microsoft.Xna.Framework.iOSGameView.DoTick () [0x00000] in <d3066bb8224f42c4ab3ae66d66329856>:0 \r\n  at (wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Users/builder/data/lanes/5024/152b654a/source/xamarin-macios/src/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Users/builder/data/lanes/5024/152b654a/source/xamarin-macios/src/UIKit/UIApplication.cs:63 \r\n  at MonoGameFSharpTemplate.Main.main (System.String[] argv) [0x00000] in /Users/torbonde/Projects/MonoGameFSharpTemplate/MonoGameFSharpTemplate/Program.fs:47 \r\n```\r\n\r\nI'm running MonoGame build, v3.7.0.937, but I had the same issue using v3.6.\r\n\r\nIs this a known issue, and is there a fix/workaround? I have had a look at the code here in this repo, where the exception seems to occur, but I can't seem to locate the issue.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5898", "title": "Can't build iPhone app on Mac after installing v3.7.0.768", "body": "I just downloaded the newest development build (v3.7.0.768) for mac, using the link on monogame.net/downloads. I can now no longer build any MonoGame iPhone/iPad app.\r\n\r\nWhen trying to build, I get the following error message in the output window (using Diagnostic log verbosity):\r\n```\r\nBuilding Solution: FooBarGame (Debug|iPhoneSimulator)\r\n\r\nBuild started 27-08-2017 18:53:34.\r\n__________________________________________________\r\nProject \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" (Build target(s)):\r\n\r\nInitial Properties:\r\n__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x9\r\nApple_PubSub_Socket_Render = /private/tmp/com.apple.launchd.uXA77SsSWu/Render\r\nBuildingInsideVisualStudio = true\r\nConfiguration = Debug\r\nCurrentSolutionConfigurationContents = <SolutionConfiguration>\r\n<ProjectConfiguration Project=\"{471536E7-9696-45FC-B93D-34773DB20D4C}\" AbsolutePath=\"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" BuildProjectInSolution=\"True\">Debug|iPhoneSimulator</ProjectConfiguration>\r\n</SolutionConfiguration>\r\nDeviceSpecificBuild = true\r\nDISPLAY = /private/tmp/com.apple.launchd.xGUI2tcDdB/org.macosforge.xquartz:0\r\nDYLD_FALLBACK_LIBRARY_PATH = /Applications/Xamarin Studio.app/Contents/Resources/lib:/Applications/Xamarin Studio.app/Contents/Resources/lib/monodevelop/bin:/Applications/Xcode.app/Contents/Developer/usr/lib:/Library/Frameworks/Mono.framework/Libraries:/lib:/usr/lib:/usr/local/lib\r\nHOME = /Users/torbonde\r\nLANGUAGE = da\r\nLC_NUMERIC = C\r\nLOGNAME = torbonde\r\nMONO_GAC_PREFIX = /Applications/Xamarin Studio.app/Contents/Resources\r\nMONO_GC_PARAMS = major=marksweep-conc\r\nMONODEVELOP_64BIT_SAFE = yes\r\nMONODEVELOP_STUB_LANGUAGE = da\r\nMSBuildBinPath = /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin\r\nMSBuildExtensionsPath = /Library/Frameworks/Mono.framework/External/xbuild\r\nMSBuildExtensionsPath32 = /Library/Frameworks/Mono.framework/External/xbuild\r\nMSBuildExtensionsPath64 = /Library/Frameworks/Mono.framework/External/xbuild\r\nMSBuildFrameworkToolsPath = /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/4.5\r\nMSBuildFrameworkToolsPath32 = /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/4.5\r\nMSBuildProjectDefaultTargets = Build\r\nMSBuildProjectDirectory = /Users/torbonde/Projects/FooBarGame/FooBarGame\r\nMSBuildProjectExtension = .csproj\r\nMSBuildProjectFile = FooBarGame.csproj\r\nMSBuildProjectFullPath = /Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\r\nMSBuildProjectName = FooBarGame\r\nMSBuildThisFile = FooBarGame.csproj\r\nMSBuildThisFileDirectory = /Users/torbonde/Projects/FooBarGame/FooBarGame/\r\nMSBuildThisFileDirectoryNoRoot = Users/torbonde/Projects/FooBarGame/FooBarGame/\r\nMSBuildThisFileExtension = .csproj\r\nMSBuildThisFileFullPath = /Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\r\nMSBuildThisFileName = FooBarGame\r\nMSBuildToolsPath = /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin\r\nMSBuildToolsPath32 = /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin\r\nMSBuildToolsRoot = /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0\r\nMSBuildToolsVersion = 14.0\r\nMtouchVerbosity = 4\r\nNuGetAuthoringPath = /Applications/Xamarin Studio.app/Contents/Resources/lib/monodevelop/AddIns/MonoDevelop.Packaging/Targets\r\nOS = Unix\r\nPATH = /Library/Frameworks/Mono.framework/Commands:/Applications/Xamarin Studio.app/Contents/Resources:/Applications/Xamarin Studio.app/Contents/MacOS:/usr/bin:/bin:/usr/sbin:/sbin\r\nPKG_CONFIG_LIBDIR = \r\nPKG_CONFIG_PATH = /Applications/Xamarin Studio.app/Contents/Resources/lib/pkgconfig:/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/pkgconfig\r\nPlatform = iPhoneSimulator\r\nSHELL = /bin/bash\r\nSolutionDir = /Users/torbonde/Projects/FooBarGame/\r\nSolutionFilename = FooBarGame.sln\r\nSolutionName = FooBarGame\r\nSolutionPath = /Users/torbonde/Projects/FooBarGame/FooBarGame.sln\r\nSSH_AUTH_SOCK = /private/tmp/com.apple.launchd.KLIOsEgpAO/Listeners\r\nTargetiOSDevice = <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\r\n<plist version=\"1.0\">\r\n<dict>\r\n\t<key>device</key>\r\n\t<dict>\r\n\t\t<key>architecture</key>\r\n\t\t<string>i386, x86_64</string>\r\n\t\t<key>model</key>\r\n\t\t<string>iPhone9,1</string>\r\n\t\t<key>os</key>\r\n\t\t<string>iOS</string>\r\n\t\t<key>os-version</key>\r\n\t\t<string>10.3.1</string>\r\n\t</dict>\r\n</dict>\r\n</plist>\r\n\r\nTMPDIR = /var/folders/_w/cmbzjv6d1d36zx93mp35xvdh0000gn/T/\r\nUseHostCompilerIfAvailable = false\r\nUSER = torbonde\r\nXCODE_DEVELOPER_DIR_PATH = /Applications/Xcode.app/Contents/Developer\r\nXPC_FLAGS = 0x0\r\nXPC_SERVICE_NAME = com.xamarin.xamarinstudio.16684\r\n\r\nInitial Items:\r\n/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj: Importing project /Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Common.props from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\n/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj: Importing project /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.CSharp.targets from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.CSharp.targets: Importing project /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin/Microsoft.CSharp.targets from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\n/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin/Microsoft.CSharp.targets: Importing project /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin/Microsoft.Common.targets \r\n/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin/Microsoft.Common.targets: Importing project /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/Microsoft.Common.props from extension path /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild\r\n/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/Microsoft.Common.props: Importing project /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/Imports/Microsoft.Common.props/ImportBefore/Microsoft.NuGet.ImportBefore.props from extension path /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild\r\n/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/Imports/Microsoft.Common.props/ImportBefore/Microsoft.NuGet.ImportBefore.props: Importing project /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.props from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\n/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin/Microsoft.Common.targets: Importing project /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/Microsoft.Common.targets/ImportAfter/Microsoft.NuGet.ImportAfter.targets from extension path /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild\r\n/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/Microsoft.Common.targets/ImportAfter/Microsoft.NuGet.ImportAfter.targets: Importing project /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/Microsoft/NuGet/Microsoft.NuGet.targets from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\n/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/Microsoft.Common.targets/ImportAfter/Microsoft.NuGet.ImportAfter.targets: Importing project /Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/NuGet.targets from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.CSharp.targets: Importing project /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets: Importing project /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.props from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets: Importing project /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.Analysis.targets from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.Analysis.targets: Importing project /Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.Analysis.Compatibility.targets from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\n/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj: Importing project /Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets from extension path /Library/Frameworks/Mono.framework/External/xbuild\r\nBuilding target \"_CheckForInvalidConfigurationAndPlatform\" in project \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" (\"/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin/Microsoft.Common.targets\").\r\nDone building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" (\"/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin/Microsoft.Common.targets\").\r\nBuilding target \"Build\" in project \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" (\"/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin/Microsoft.Common.targets\").\r\nBuilding target \"BuildContent\" in project \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" (\"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets\"); \"Build\" depends on it.\r\nBuilding target \"Prepare\" in project \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" (\"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets\"); \"BuildContent\" depends on it.\r\n: error : Error building target Prepare: Object reference not set to an instance of an object\r\nError building target Prepare: System.NullReferenceException: Object reference not set to an instance of an object\r\n  at Microsoft.Build.BuildEngine.Project.GetMetadataBatched (System.String itemName, System.String metadataName) [0x00005] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/Project.cs:1389 \r\n  at Microsoft.Build.BuildEngine.MetadataReference.ConvertToString (Microsoft.Build.BuildEngine.Project project, Microsoft.Build.BuildEngine.ExpressionOptions options) [0x00000] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/MetadataReference.cs:74 \r\n  at Microsoft.Build.BuildEngine.ExpressionCollection.ConvertToString (Microsoft.Build.BuildEngine.Project project, Microsoft.Build.BuildEngine.ExpressionOptions options) [0x0003b] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/ExpressionCollection.cs:147 \r\n  at Microsoft.Build.BuildEngine.ExpressionCollection.ConvertToNonArray (Microsoft.Build.BuildEngine.Project project, System.Type type, Microsoft.Build.BuildEngine.ExpressionOptions options) [0x00000] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/ExpressionCollection.cs:98 \r\n  at Microsoft.Build.BuildEngine.ExpressionCollection.ConvertTo (Microsoft.Build.BuildEngine.Project project, System.Type type, Microsoft.Build.BuildEngine.ExpressionOptions options) [0x00048] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/ExpressionCollection.cs:86 \r\n  at Microsoft.Build.BuildEngine.Expression.ConvertTo (Microsoft.Build.BuildEngine.Project project, System.Type type, Microsoft.Build.BuildEngine.ExpressionOptions options) [0x00000] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/Expression.cs:645 \r\n  at Microsoft.Build.BuildEngine.BuildItem.AddMetadata (System.String name, System.String value) [0x00023] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/BuildItem.cs:283 \r\n  at Microsoft.Build.BuildEngine.BuildItem.Evaluate (Microsoft.Build.BuildEngine.Project project, System.Boolean evaluatedTo) [0x00054] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/BuildItem.cs:311 \r\n  at Microsoft.Build.BuildEngine.BuildTaskItem.Execute () [0x00007] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/BuildTaskItem.cs:64 \r\n  at Microsoft.Build.BuildEngine.TaskBatchingImpl.Execute (Microsoft.Build.BuildEngine.IBuildTask buildTask, Microsoft.Build.BuildEngine.TaskExecutionMode taskExecutionMode) [0x0001c] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TaskBatchingImpl.cs:104 \r\n  at Microsoft.Build.BuildEngine.TaskBatchingImpl.Build (Microsoft.Build.BuildEngine.IBuildTask buildTask, Microsoft.Build.BuildEngine.TaskExecutionMode taskExecutionMode, System.Boolean& executeOnErrors) [0x0001d] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TaskBatchingImpl.cs:52 \r\n  at Microsoft.Build.BuildEngine.TargetBatchingImpl.RunTargetWithBucket (System.Collections.Generic.Dictionary`2[TKey,TValue] bucket, Microsoft.Build.BuildEngine.Target target, System.Boolean& executeOnErrors) [0x000ab] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TargetBatchingImpl.cs:140 \r\n  at Microsoft.Build.BuildEngine.TargetBatchingImpl.Run (Microsoft.Build.BuildEngine.Target target, System.Boolean& executeOnErrors) [0x0004b] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TargetBatchingImpl.cs:85 \r\n  at Microsoft.Build.BuildEngine.TargetBatchingImpl.Build (Microsoft.Build.BuildEngine.Target target, System.Boolean& executeOnErrors) [0x00016] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TargetBatchingImpl.cs:64 \r\n  at Microsoft.Build.BuildEngine.Target.DoBuild (System.Boolean& executeOnErrors) [0x00015] in /private/tmp/source-mono-d15-3/bockbuild-d15-3/profiles/mono-mac-xamarin/build-root/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/Target.cs:279 \r\nDone building target \"Prepare\" in project \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" (\"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets\"); \"BuildContent\" depends on it.\r\nDone building target \"BuildContent\" in project \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" (\"/Library/Frameworks/Mono.framework/External/xbuild/MonoGame/v3.0/MonoGame.Content.Builder.targets\"); \"Build\" depends on it.\r\nDone building target \"Build\" in project \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\" (\"/Library/Frameworks/Mono.framework/Versions/5.2.0/lib/mono/xbuild/14.0/bin/Microsoft.Common.targets\").\r\nDone building project \"/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj\".-- FAILED\r\n\r\nTarget perfomance summary:\r\n     0,154 ms  _CheckForInvalidConfigurationAndPlatform                1 calls\r\n     0,502 ms  Prepare                                                 1 calls\r\n\r\nTasks perfomance summary:\r\n\r\nBuild FAILED.\r\nErrors:\r\n\r\n/Users/torbonde/Projects/FooBarGame/FooBarGame/FooBarGame.csproj (Build) ->\r\n\r\n\t: error : Error building target Prepare: Object reference not set to an instance of an object\r\n\r\n\t 0 Warning(s)\r\n\t 1 Error(s)\r\n\r\nTime Elapsed 00:00:00.0622150\r\n\r\n--------------------- F\u00e6rdig ---------------------\r\n\r\nBuild: 1 error, 0 warnings\r\n```\r\n\r\nTo reproduce: In Xamarin Studio, create new MonoGame iPhone/iPad application and click build.\r\n\r\nI'm on macOS Sierra running mono version 5.2.0.215. Before installing the new development build, everything worked just fine.\r\n\r\nDo you have any idea of what might be the issue? If not, can you tell me how to uninstall?\r\n\r\nI don't really know where to start with this, but a little bit of digging brought me to [this issue](https://github.com/Jjagg/MonoGameContentReferenceTest/issues/3). The author of the issue is also the author of [this PR](https://github.com/MonoGame/MonoGame/pull/4997). It seems related, but I don't know...\r\n\r\nI'm happy to provide any logs and so on you might require.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BaronMercury": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6002", "title": "GameWindow.TextInput is not recording keys - only characters.", "body": "The `TextInputEventArgs` objects produced by the `GameWindow.TextInput` Event always have their Key field set to `Keys.None`.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/6002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "littlebeast": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5999", "title": "ExternalReference paths not being sensibly parsed", "body": "This may actually be two separate issues, but they're closely related.\r\n\r\nFirst, when using a simple reference path such as `Sprites\\marble.xnb` as an ExternalReference's reference path, it looks in the directory of the _source_ file, not where the xnb would be stored.  This then produces an error:\r\n`ExternalReference 'E:\\(...)\\Content\\Terrains\\Sprites\\marble.xnb' must be in the root directory 'E:/(...)/CityEditor/Content/bin/Windows/'`\r\n<sub><sup>Possibly of note, the original path produced by IntermediateSerializer was \"Sprites/marble.xnb\", but this just produced the same error with the one slash inverted</sup></sub>\r\n\r\nSecondly, when adding a relative target of `..\\bin\\Windows\\Terrains\\` before the path, mgcb returned another, less sensical error:\r\n`ExternalReference 'E:\\(...)\\Content\\Terrains\\..\\bin\\Windows\\Terrains\\Sprites\\marble.xnb' must be in the root directory 'E:/(...)/Content/bin/Windows/'`\r\n\r\nSo... either it's not recognizing \"..\", not recognizing backslashes as folder seperators, not recognizing that a path with backslashes is the same as one with forward slashes, or some combination of those factors, is what I'm seeing.\r\n\r\nFor reference, I'm running Monogame 3.6.0.1625 on Windows 7.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5925", "title": "Feature Request: ContentSerializerCollection attribute", "body": "At the moment, any ContentSerializerAttribute that is applied to a collection will effect only the collection itself, not any items inside it<sup>1</sup>. For most of the attribute's effects, this isn't a huge deal; however, the only way<sup>2</sup> to serialize a collection of shared resources to allow cyclic references is to [derive a class from the collection and roll your own ContentTypeSerializer](https://blogs.msdn.microsoft.com/shawnhar/2008/11/20/serializing-collections-of-shared-resources/), as well as a [ContentTypeReader and ContentTypeWriter to deploy it as an XNB](https://blogs.msdn.microsoft.com/shawnhar/2010/09/28/serializing-collections-of-shared-resources-part-2/).  This is a complicated solution to what I'd imagine must be a common problem, and it requires adding a reference to the Monogame.Framework.Content.Pipeline dll<sup>3</sup>; it also hides the base collection's constructors, along with all the other<sup>4</sup> inconveniences of a derived class.\r\n\r\nI'd like to see a [ContentSerializerCollection] attribute which accepts either a ContentSerializerAttribute or simply shares properties with the same, and when applied to a generic Collection, applies that attribute / those properties to the items within the collection.  \r\n\r\n<sub>alternatively, we could just make a [SharedResourceCollection] attribute and get most of the value of this, but doing the more robust solution seems better.</sub>\r\n\r\n<sub>also a possibility: adding a Recurse property to the ContentSerializerCollectionAttribute to apply itself to nested collections</sub> \r\n\r\n<sup>1</sup>CollectionItemName excluded, of course.\r\n<sup>2</sup>unless I'm missing something, which is entirely possible\r\n<sup>3</sup>which yes, isn't really that big a deal, but I added a reference to the one installed on my computer rather than the portable one and was super confused when it wouldn't load on android, so I'm frustrated with it being necessary at the moment.\r\n<sup>4</sup>admittedly, minor", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5924", "title": " XMLImporter failure - Unable to load one or more of the requested types (Android)", "body": "(still not really sure this is a bug, but)\r\nI wrote a simple class, serialized it using the IntermediateSerializer, and then attempted to load it with the Content Pipeline tool.  But, every time I do, it gives the error\r\n`EXEC : warning : Unable to load one or more of the requested types. Retrieve the LoaderExceptions property for more information.`\r\n\r\nI have a reference to my game's debug DLL, so it should be capable of finding that.  The class is really freakin' basic - literally two strings, a vector2 and a List of ints (plus a private List of its own type, but that doesn't get serialized) and yet it says it can't find one of the types.  I even tried adding the Monogame.Framework and System dlls as references to the pipeline, in case it was being stupid, but no dice.\r\n\r\nMore details on the [forum thread](http://community.monogame.net/t/xmlimporter-failure-unable-to-load-one-or-more-of-the-requested-types/9669) if you need them.\r\n\r\nWhat the heck is going wrong??", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dellis1972": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5992", "title": "Exception processing Gesture State on Android", "body": "Android occasionally crashes with the following exception.\r\n\r\n```\r\n[AndroidGameView] System.InvalidOperationException: Collection was modified; enumeration operation may not execute.\r\n[AndroidGameView]   at System.ThrowHelper.ThrowInvalidOperationException (System.ExceptionResource resource) [0x0000b] in <896ad1d315ca4ba7b117efb8dacaedcf>:0 \r\n[AndroidGameView]   at System.Collections.Generic.List`1+Enumerator[T].MoveNextRare () [0x00013] in <896ad1d315ca4ba7b117efb8dacaedcf>:0 \r\n[AndroidGameView]   at System.Collections.Generic.List`1+Enumerator[T].MoveNext () [0x0004a] in <896ad1d315ca4ba7b117efb8dacaedcf>:0 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.Input.Touch.TouchPanelState.UpdateGestures (System.Boolean stateChanged) [0x0002b] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Input/Touch/TouchPanelState.cs:391 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.Input.Touch.TouchPanelState.get_IsGestureAvailable () [0x00001] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Input/Touch/TouchPanelState.cs:321 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.Input.Touch.TouchPanel.get_IsGestureAvailable () [0x00001] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Input/Touch/TouchPanel.cs:153 \r\n[AndroidGameView]   at Develop.Game1.Update (Microsoft.Xna.Framework.GameTime gameTime) [0x0019f] in /Users/dean/Desktop/DevelopBrighton/Develop.Shared/Game1.cs:111 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.Game.DoUpdate (Microsoft.Xna.Framework.GameTime gameTime) [0x0001f] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Game.cs:647 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.Game.Tick () [0x00105] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Game.cs:463 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.AndroidGameWindow.OnUpdateFrame (System.Object sender, Microsoft.Xna.Framework.MonoGameAndroidGameView+FrameEventArgs frameEventArgs) [0x00053] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Android/AndroidGameWindow.cs:89 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.MonoGameAndroidGameView.UpdateFrameInternal (Microsoft.Xna.Framework.MonoGameAndroidGameView+FrameEventArgs e) [0x00017] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Android/MonoGameAndroidGameView.cs:640 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.MonoGameAndroidGameView.UpdateAndRenderFrame () [0x00061] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Android/MonoGameAndroidGameView.cs:662 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.MonoGameAndroidGameView.processStateRunning (System.Threading.CancellationToken token) [0x00077] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Android/MonoGameAndroidGameView.cs:417 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.MonoGameAndroidGameView.RunIteration (System.Threading.CancellationToken token) [0x000fb] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Android/MonoGameAndroidGameView.cs:617 \r\n[AndroidGameView]   at Microsoft.Xna.Framework.MonoGameAndroidGameView.WorkerThreadFrameDispatcher (System.Threading.SynchronizationContext uiThreadSyncContext) [0x00071] in /Users/dean/Documents/Sandbox/MonoGame/MonoGame.Framework/Android/MonoGameAndroidGameView.cs:337 \r\nThread started: <Thread Pool> #3\r\n```\r\n\r\nLooks like we need some kind of locking to ensure that the `_gestureState` does not get updated during the `UpdateGestures` call. \r\n\r\n@tomspilman @KonajuGames thoughts?\r\n\r\n[1] https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Input/Touch/TouchPanelState.cs#L391\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5628", "title": "Constant Buffer overrun on DesktopGL", "body": "When using a shader under DesktopGL we get the following exception \r\n\r\n```Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.```\r\n\r\nThe error occurs at [1].\r\n\r\nFor this shader the offset is 64 the length of the _buffer is 112 bit the size of the data is 4*4*4. Which override the end of the buffer.  the sample shader is over at [2].\r\n\r\n@tomspilman @Jjagg any idea which the shade compiler is not creating a buffer of the correct length?\r\n\r\n[1] https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Graphics/Shader/ConstantBuffer.cs#L87\r\n[2] https://github.com/infinitespace-studios/RacingGame/blob/master/Content/Shaders/PreScreenSkyCubeMapping.fx", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5558", "title": "Models to not render properly by default", "body": "When loading and rendering a 3d model using the same code as XNA the model looks transparent / inside out. You have to add the following code before you draw the model to get it to work.\r\n\r\n```GraphicsDevice.DepthStencilState = DepthStencilState.Default;```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/108ff35404683e4675b3d9fed9d25b395169e305", "message": "Documentation Updates (#6039)\n\n* Rework/Cleanup the Documentation to reflect the current state\r\nof the project. i.e Remove Playstation Mobile and Windows 8/8.1.\r\n\r\n* Fixed what_is_monogame"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d8746217cd6e7319ce15e80b584b34b3226a449c", "message": "MonoGame Pipeline Tool crash when adding references (#5972)\n\nThe OnClosing event was not firing... so lets override\r\nthe `Close` method instead."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d28b2e55078d71ded7169792e3ed3e1ecb2590f8", "message": "Fix Duplicate/Weird Menus on MacOS (#5979)\n\nEto Forms seems to default `IncludeSystemItems` to `All`.\r\nAs a result the deafult system menus like `File`, `Edit`, `Help`\r\netc are populated by default on MacOS.\r\n\r\nEven though we set the property later they are not cleaned out.\r\nSo we end up with duplicates and messy menus.\r\n\r\nSo we subclass the `MenuBar` and set the property to our required\r\ndefault first."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f726fb6c3ff48fcffa017c811339c4926a4565f4", "message": "[OpenGL] Rework Android Framebuffer Support (#5993)\n\n* [OpenGL] Rework Android Framebuffer Support\r\n\r\nOpenTK removal also removed some support for frame buffers\r\non older devices. The old code was a bit of a mess with\r\nmutliple FrameBuffer classes each doing the same thing.\r\n\r\nThis commit reworks the code to have one OpenGL FramebufferHelper\r\nand moves all the loading of OpenGL extensions into the OpenGL.cs\r\nclass where they belong.\r\n\r\nAs a result GraphicsCapabilites was reworked to use the `Extensions`\r\nproperty on the `GL` class. We also needed to rework when the\r\nOpenGL entry points are loaded so ensure we have a current context.\r\nIf we don't we cannot get the extension strings from opengl since\r\nit required a current context.\r\n\r\n* Remvoed logging for Android\r\n\r\n* Fixed problem of trying to create GLES 3.0 when its not supported"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4a38b0a4b9f37daece4caf7a5e2b12b0c4b16ff6", "message": "Calculate the Client Bounds a bit later. (#5975)\n\n* Calculate the Client Bounds a bit later.\r\nFixes https://github.com/MonoGame/MonoGame/issues/5935\r\n\r\n* Use GetRealSize where we can"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e976825accff9b2b683c5bcd8052a5c40a8f13d1", "message": "Throw a ContentLoadError on the UI thread if we hit one. (#5974)\n\nCurrently if we hit a content problem on android the error\r\nis swallowed. We need to throw it on the UI thread so that\r\nit will get caught by the app exception handler."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5317403f945edfa18c7be8279d339d979cb5cc17", "message": "Fixed the Scissor rect calculation on DesktopGL and OpenGL platforms (#5977)\n\n* Fixed the Scissor rect calculation on DesktopGL\r\n\r\n* Add Unit tests"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/0d955461dc426282e3b88754b20de995e266b72c", "message": "Fixed the Pipeline tool to handle Importers without a DisplayName"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d51ae3b2c64fb90193a30d8c7bf4699af23f98e3", "message": "Dont run the BuildContent target if we do not have any Content.\n\nIf the `@(MonoGameContentReference)` ItemGroup is Empty we\ndo not need to even attempt to build content."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b89f56e020a22ecf552d0c74b4f258861f398836", "message": "Fix up the MacOS nuget package to deploy the SDL dependencies."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/df55027a5409a1d8e9bf7aa87ee88ef23603fec3", "message": "Add AVPlayer Video Support for MacOS."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4759c1d8adcb2361d8a06894893cdcf3a6873c54", "message": "Fix #5939. Install MonoGame.Build.Tasks in the right folder"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b914f314a22dae8530ecfd5232adc8ceec55782f", "message": "Initial Commit (#5410)\n\nFirst working version for iOS\r\nFixed OpenAL under iOS.\r\nFixed Android so that the entry points load.\r\nFixed tvOS build and Ouya build. Both of these platforms now use\r\nOpenGL.cs and OpenAL.cs\r\nRemoved OpenTK from MacOS\r\nFixed up the Build\r\nFixed iOS Viewpor/Scissor issue\r\nHack around MacOS issues. Need to replace with SDL2 Implementation\r\nUpdated to throw exceptions on the UIThread to aide debugging\r\nFixed Build\r\nFixed a missing Continuation which raises a Stop event"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6c8fecc448f03186d12caa02abdcb3df7be6001e", "message": "Fix SurfaceFormat.Rgba64 on DesktopGL it should be using Rgba16 (#5627)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e04b044ee236ce9240802c9c340ff12be3ed370a", "message": "Added Localized Resource Processing and Loading. (#5141)\n\n* Added Localized Resource Processing and Loading.\r\n\r\nWhen localizing games you sometimes need to load localized\r\nassets as well as text. This commit includes the sample\r\nXNA processors and ContentManager code into the core of the\r\nMonoGame system. This means that people no longer need to\r\nimplement this stuff themselves.\r\n\r\nUsage:\r\n\r\nDefine all of the \"string\" resources in standard .resx resource\r\nfiles. Add these to the .spritefont file\r\n\r\n```\r\n   <ResourceFiles>\r\n      <Resx>..\\Strings.resx</Resx>\r\n      <Resx>..\\Strings.da.resx</Resx>\r\n      <Resx>..\\Strings.fr.resx</Resx>\r\n      <Resx>..\\Strings.ja.resx</Resx>\r\n      <Resx>..\\Strings.ko.resx</Resx>\r\n    </ResourceFiles>\r\n```\r\n\r\nChange the .spritefont over to use the LocalizedFontProcessor.\r\nLoad the font as normal.\r\n\r\nFor other localized assets you can make use of the new\r\n\r\n    ```Content.LoadLocalized<T>```\r\n\r\nmethod. This will attempt to load assets which contain a culture\r\nextension e.g\r\n\r\n\tTexture1.fr.xnb\r\n\tTexture1.en-gb.xnb\r\n\r\nNote either the Name or the TwoLetterISOLanguageName can be used.\r\n\r\n* Added Unit test and Templates\r\n\r\n* Fixed formatting\r\n\r\n* Fixed some of the docs\r\n\r\n* Fixed some of the docs"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d7e2312cecd9e2d7db83477bd1f17286d957f152", "message": "Fix a crash when building content in xbuild  (#5897)\n\n* PR #4997 Introduced a crash in xbuild. This is because of a bug in\r\nxbuild where `<ItemGroup>` with Metadata are not supported. Instead\r\nyou need to use `CreateItem`.\r\n\r\nThis commit fixes that issue.\r\n\r\nThere are also other issues which need to be resolved with #4997.\r\n\r\nThat said this commit also adds a new unit test for the content system.\r\nThere is a sample project which we build as part of the unit test.\r\nWe check the output to make sure it is in the right place. This test\r\nshould be expaned on to include tests for Shared Projects and other\r\nsenarios that users use. It should allow use to catch issues such as\r\nwhat happened in #4997 at the point the PR is opened.\r\n\r\n* Updated Definiton to copy MacOS files on Mac\r\n\r\n* Ignore a couple of Image loading tests as the formats are not supported\r\n\r\n* Enable Tests on MacOS\r\n\r\n* Fix Tests running on MacOs\r\n\r\n* Rmeove the use of mdtool. It is obsolete\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* Added MonoGame.Build.Tasks to the project.\r\n\r\n* Added some documentation\r\n\r\n* Fixed some errors in the docs\r\n\r\n* PR #4997 Introduced a crash in xbuild. This is because of a bug in\r\nxbuild where `<ItemGroup>` with Metadata are not supported. Instead\r\nyou need to use `CreateItem`.\r\n\r\nThis commit fixes that issue.\r\n\r\nThere are also other issues which need to be resolved with #4997.\r\n\r\nThat said this commit also adds a new unit test for the content system.\r\nThere is a sample project which we build as part of the unit test.\r\nWe check the output to make sure it is in the right place. This test\r\nshould be expaned on to include tests for Shared Projects and other\r\nsenarios that users use. It should allow use to catch issues such as\r\nwhat happened in #4997 at the point the PR is opened.\r\n\r\n* Updated Definiton to copy MacOS files on Mac\r\n\r\n* Ignore a couple of Image loading tests as the formats are not supported\r\n\r\n* Enable Tests on MacOS\r\n\r\n* Fix Tests running on MacOs\r\n\r\n* Rmeove the use of mdtool. It is obsolete\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* More fixes for the Content Builder Targets\r\n\r\n* Fixed msbuild test on windows\r\n\r\n* Fixed windows tests\r\n\r\n* Fixed Task so we don't get an extra folder"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c952bf0482effe0d670483fe65f7030e9f2844e2", "message": "Update the UWP Template to use the Latest SDK"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/acd01cecd2386d8510e90169ec35ee38dbc0283d", "message": "Added new tests for the Font Processor [WIP] (#5913)\n\n* Initial Commit\r\n\r\n* Added Font test and pulled in new NVTT dependencies:"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e7066ea6be9a85c61ecc46b09cfcc1a5a77909c4", "message": "Merge pull request #5759 from KonajuGames/non-4x4-blocks\n\nAccount for non-4x4 block texture compression formats"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/53d6030f853a7b9801552a4bbd9da140d212adbd", "message": "Fix a Font issue on MacOS #5900 (#5908)\n\nBump Dependencies to bring in windows specific SharpFont assembly.\r\n\r\nThis is all down to mono now running in 64bit (we think). So the\r\nold code we had no longer worked. The Dependencies include specific\r\nversions of SharpFont for Mac and Linux and a seperate one for\r\nWindows. The Mac/Linux ones support AnyCPU but the windows is\r\nx64 specific. Since we require x64 for Windows content this\r\nshould not be a problem."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/c3e5ffa4b5e1c6b2988fd8c2c1ed251d0828e395", "message": "Revert recent SharpFont Changes"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/7de678bcbe83c80272d1fcc7cbacd8044c00916f", "message": "Fix the previous commit of SharpFont which broke windows"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/926d4a897f2c6311cb5c44978c62d8b0c5574a97", "message": "[MonoGame.Framework.Content.Pipeline] Pipeline fails to generate spritefont on OsX (#5890)\n\nFixes #5196\r\n\r\nThis is kinda weird. libfreetype and SharpFont just stop working on\r\nMacOS but only in 64 bit. In this PR we upgrade to the latest version\r\nof SharpFont to fix the problem. However the API has changed slightly\r\nso we need to update our API usage to match."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/40107945b814429c5b86f07055c8effe036ee6bd", "message": "Update the Tests definition so we can run the Linux unit tests on Mac. (#5587)\n\n* Update the Tests definition so we can run the Linux unit tests on Mac.\r\nFix the code in SDLWindow so we can handle the situation where we\r\ndo not have an EntryPoint assembly. This happens when we are running\r\nunit tests.\r\n\r\nNote this requires PR 101 for the audio tests to work.\r\nThere are a number of failures that need to be resolved before this\r\ngets enabled on the build bot.\r\n\r\nhttps://github.com/MonoGame/MonoGame.Dependencies/pull/101\r\n\r\n* Fixed the PackedVector implementations.\r\nBumped Dependencies\r\n\r\n* Ignore Excpections when we dispose the game on Mac.\r\nSomething raises a GL error.\r\nIf this is a problem. We should add a specific test.\r\n\r\n* Add tests to check the values get converted back correctly.\r\n\r\n* Fixed all the PackedVector tests\r\n\r\n* Updated the failing tests to be ignored under DesktopGL.\r\n\r\nWe should try to fix these asap."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/12fb040339dfa2fba9666b695d337153dd62ff64", "message": "Merge pull request #5888 from cra0zy/ial\n\nEnable Android stuff for Linux"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a8050dae607662f5419d6bbd861999d15e418856", "message": "Merge pull request #5877 from KonajuGames/programcache\n\nFix Android startup crash"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/eb25601dbab29a6b11fae7c10e34de74173db1a1", "message": "Added the x86 and x64 binaries to the DesktopGL Installation. (#5860)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/2afddb531af8c4e37f375df5645ff722118d82d8", "message": "Fixed a crash when a newer mono is installed. (#5801)\n\nIf a user has a different version of mono installed on a Mac\r\nthe Pipeline tool crashes when building. This is because the\r\ncode page were are trying to use does not exist. So if we\r\ncannot get that one we default to UTF8.\r\n\r\nThis PR also fixes another bug where if the build fails without\r\nANY items being processed the GUI crashes.\r\n\r\nAlso we upgrade to using msbuild for building the Mac platform.\r\nThis fixes a runtime issue when a different version of mono\r\nis installed."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4ca482998a9b1417b876a51dac7dbd851301f28d", "message": "Add Missing method to OpaqueDataDictionary\n\nContext https://msdn.microsoft.com/en-us/library/bb197288.aspx?f=255&MSPPError=-2147217396"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/2a31102cc8c6f665a02d90db167137c1f1b7426d", "message": "Fix the paths so they work on android-n+.\n\nAndroid N changed the way native libraries are used. You can\nno longer directly load from /system/lib. Instead it seems we\nneed to just provide the library name and let the OS do its\nthing."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/45a46498fd86dca2b014823e881441f22612f25d", "message": "Inverted the Platform(s) for TextureCubeReader, Texture3DReader and TextureReader to use ExcludePlatforms"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/085641e5f3812b522fccde359a0ac98005010c5a", "message": "Merge pull request #5589 from cra0zy/unit\n\n[DesktopGL] Don't call sizechanged when changing size from code"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6135", "title": "New Template System using Nuget [WORK IN PROGRESS]", "body": "This includes a new Addin for VSForMac.  ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6032", "title": "Dont override the ContentOutput directories if the user has defined them.", "body": "We currently always default the Content output directories to\r\nvalues we define. But we should get the metadata from the\r\nitems and use that if its present.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5973", "title": "Added some more unit tests [WIP don't merge]", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5941", "title": "Add sha256 files for the Mac and Linux installers.", "body": "Fix up the android build to it will work with the latest SDK on Mac.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5896", "title": "Move the DesktopGL platform over to use the GraphicsAdapter partial class [dont merge]", "body": "In the continuing effort to update/remote old code in favour of\r\npartial classes, this commit adds a GraphicsAdapter.SDL for the\r\nDesktopGL platform.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5609", "title": "Fix up some weird Effects crashes.", "body": "One of the samples I am porting hit this issue where the\r\nEffectParameter.SetValue (int) for Single/Int parameters\r\nas well as for Scalar and Vector parameters.\r\n\r\nThere was also a problem with access the Element[i] array in\r\nEffectParameter.SetValue(Single[]). In this case it was crashing\r\nevent though the Data object was correct. This commit\r\nremoves the use of Element in favour of Data which other Setters\r\nuse.", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2647052", "body": "Looks like the best way to support this would be to add a \n\nprivate Game _instance = null;\ninternal Game Instance { get { return _instance; } } \n\nto all the game classes, Then set the _instance in the constructor of the Game (we should only ever have one anyway).\n\nThen we could access the Game object via Game.Instance in all of the internal classes.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2647052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2855605", "body": "Any chance of some sample code / screen shots to show the issue?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2855605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2855617", "body": "I have replicated the issue. Will try to fix. :). \n\nAlso planning on moving the Sound.cs class over from the MediaPlayer to the SoundPool.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2855617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2869262", "body": "Hi dom. Cheers . I will re fork my fork. I have been using tortise git to\ndo stuff but im not sure it works correctly. Think i will resort to the\ncommand line from now on. Dean\nOn Nov 24, 2011 8:31 PM, \"Dominique Louis\" <\nreply@reply.github.com>\nwrote:\n\n> Dean, I've cherry-picked the other 3 commits from your fork. Please review\n> that I've grabbed the right ones. It might also be worth either rebasing or\n> recloning before submitting another pull request as I fear it may try and\n> resubmitt the changes that stopped this one from merging. Luckily with the\n> sample separated out, a reclone only take 2-3 minutes now.\n> \n> I'm not 100% sure what else you could do to avoid the clash. Do you\n> regularly do a\n> git fetch upstream\n> followed by\n> git merge upstream/develop\n> to keep in sync, before you commit any changes?\n> \n> Anyway, I'll close this pull request.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/121#issuecomment-2868956\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2869262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2883655", "body": "Just added a Pull Request to fix this. One side not I moved the Sound.cs class to use the SoundPool rather than the Media player, this will impact anyone that is trying to play files > 1MB as SoundPool will not work. We need to implement a MediaPlayer interface to handle larger files.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2883655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2883663", "body": "This has been fixed and will be in the next release. There are other issues with Orientation. please open a new Issue if there are still outstanding problems.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2883663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2992843", "body": "Hi Steve\n\nJust managed to check out your ContentManager changes, nice work :).\n\nThere is a slight problem on android though, the Dispose method on\nBinaryReader is not public, so the try finally does not work in\nReadAsset. however changing over from a try finally to a using fixes\nthe issue. If you think that is a good work around that will work on\nall the other platforms then I will make that change.\n\nI also noticed that we are creating a MemoryStream if the xnb is\ncompressed. Do we need to dispose of this as well? Or let the Gc\ncollect it.\n\nAnyway, I love the new partial classes approach keeps all the code the\nsame, we should probably try to roll that out across the project (if\nwe can :) )\n\nHope all is well\n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2992843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3009782", "body": "Hi Steve\n\nits a team effort so dont worry about broken code, we cant all test on\nevery platform :)\n\nDean\n\nOn 4 December 2011 23:31, Steve 'Sly' Williams\nreply@reply.github.com\nwrote:\n\n> Hi Dean,\n> \n> Valid points. \u00a0I will address those soon (if they haven't been done\n> already). \u00a0I see Kenneth has been making other fixes too, which is great.\n> Well, not great from the point of view of my commit of code that wasn't\n> fully working but great that the brokenness is getting fixed.\n> \n> Sly\n> \n> On 3 December 2011 03:12, Dean Ellis <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Hi Steve\n> > \n> > Just managed to check out your ContentManager changes, nice work :).\n> > \n> > There is a slight problem on android though, the Dispose method on\n> > BinaryReader is not public, so the try finally does not work in\n> > ReadAsset. however changing over from a try finally to a using fixes\n> > the issue. If you think that is a good work around that will work on\n> > all the other platforms then I will make that change.\n> > \n> > I also noticed that we are creating a MemoryStream if the xnb is\n> > compressed. Do we need to dispose of this as well? Or let the Gc\n> > collect it.\n> > \n> > Anyway, I love the new partial classes approach keeps all the code the\n> > same, we should probably try to roll that out across the project (if\n> > we can :) )\n> > \n> > Hope all is well\n> > \n> > Dean\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/pull/138#issuecomment-2992843\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/138#issuecomment-3009775\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3009782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3047461", "body": "Sly, any chance you could take this issue on? I'm going to be looking at the various Orientation issues we had at the moment and a Texture Rectangle issue as well.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3047461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3099846", "body": "nice work sly, I was just about to start looking at this issue :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3099846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3147984", "body": "Just found this it might be useful\nhttp://developer.android.com/resources/articles/faster-screen-orientation-change.html\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3147984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3159723", "body": "Good find, ill give that a go today\nOn Dec 15, 2011 10:44 AM, \"Steve &apos;Sly&apos; Williams\" <\nreply@reply.github.com>\nwrote:\n\n> Use the following attribute to prevent the activity being recreated on an\n> orientation change.\n> \n> [Activity(ConfigurationChanges=Orientation)]\n> \n> This will then call Activity.OnConfigurationChanged when the orientation\n> changes.  All other configuration changes will go through the standard\n> activity re-creation.  It may also help to add Keyboard and KeyboardHidden\n> to prevent the activity being recreated when a keyboard is slid open or\n> shut.  See the \"Configuration Changes\" section on this page\n> http://api.xamarin.com/index.aspx?link=T%3aAndroid.App.Activity\n> \n> Sly\n> \n> On 15 December 2011 05:32, Dean Ellis <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > There seems to be a big problem with the Orientation change stuff on\n> > Android. After reading the documentation the Activity is re-created each\n> > time the Orientation/Configuration changes. The means the Game object is\n> > being re-created each time, so all the assets are loaded again and again\n> > and again each time the orientation changes.\n> > \n> > We need to figure out a way to detect this and keep the same game object/\n> > content manager around  and just swap out the Activity/ AndroidGameView.\n> > \n> > This will not effect people who just use a fixed screen orientation for\n> > games as the orientation will not change. however this might be the cause\n> > of the Resume issue we have been seeing as well.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/issues/170\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/170#issuecomment-3159490\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3159723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3165759", "body": "that seems to work, but we now have to update the Viewport manually with the new width and height because the game is not being re-created each time. Looking at sorting that out now.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3165759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3223498", "body": "I reopened this for testing, I'll take a look when I get a minute :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3223498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3224168", "body": "For the test code attached to this issue the fix works. Which version of mono 4 android are you running? I am running the latest version\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3224168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3224345", "body": "jjxtra does that Textire2D fix need to be ported to other platforms?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3224345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3225256", "body": "Also, we are current working in the develop branch, could you resubmit your request to to develop branch\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3225256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3147984", "body": "Just found this it might be useful\nhttp://developer.android.com/resources/articles/faster-screen-orientation-change.html\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3147984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3159723", "body": "Good find, ill give that a go today\nOn Dec 15, 2011 10:44 AM, \"Steve &apos;Sly&apos; Williams\" <\nreply@reply.github.com>\nwrote:\n\n> Use the following attribute to prevent the activity being recreated on an\n> orientation change.\n> \n> [Activity(ConfigurationChanges=Orientation)]\n> \n> This will then call Activity.OnConfigurationChanged when the orientation\n> changes.  All other configuration changes will go through the standard\n> activity re-creation.  It may also help to add Keyboard and KeyboardHidden\n> to prevent the activity being recreated when a keyboard is slid open or\n> shut.  See the \"Configuration Changes\" section on this page\n> http://api.xamarin.com/index.aspx?link=T%3aAndroid.App.Activity\n> \n> Sly\n> \n> On 15 December 2011 05:32, Dean Ellis <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > There seems to be a big problem with the Orientation change stuff on\n> > Android. After reading the documentation the Activity is re-created each\n> > time the Orientation/Configuration changes. The means the Game object is\n> > being re-created each time, so all the assets are loaded again and again\n> > and again each time the orientation changes.\n> > \n> > We need to figure out a way to detect this and keep the same game object/\n> > content manager around  and just swap out the Activity/ AndroidGameView.\n> > \n> > This will not effect people who just use a fixed screen orientation for\n> > games as the orientation will not change. however this might be the cause\n> > of the Resume issue we have been seeing as well.\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/issues/170\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/170#issuecomment-3159490\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3159723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3165759", "body": "that seems to work, but we now have to update the Viewport manually with the new width and height because the game is not being re-created each time. Looking at sorting that out now.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3165759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3224345", "body": "jjxtra does that Textire2D fix need to be ported to other platforms?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3224345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3225256", "body": "Also, we are current working in the develop branch, could you resubmit your request to to develop branch\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3225256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3237758", "body": "Pull Request Closed as it was targeting master\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3237758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3237751", "body": "Pull Request Closed as it was targeting master\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3237751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3237737", "body": "Looks fine, thanks for the patch :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3237737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3326210", "body": "Which platform are you testing this on? Windows/Linux/Mac/Android/iOS?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3326210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3530048", "body": "Im not sure anything has been done with this si feel free to investigate :-)\nOn Jan 17, 2012 3:57 PM, \"sdancer\" <\nreply@reply.github.com>\nwrote:\n\n> What's the status on this?  I'm about to tackle device reset for the FRB\n> engine.  I was going to reload everything in our ContentManager.  The\n> problem with doing it through the engine is it should be done\n> asynchronously otherwise it will freeze the game.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/165#issuecomment-3530021\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3530048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3536414", "body": "I figured it was state releated, but I'm not to hot on the new 2.0 profile either.  looks like I have some googleing ahead of me, unless one of the team that did the origional 2.0 port knows how to implement it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3536414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3583995", "body": "The fix seems to have fixed the issue, nice work sdancer :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3583995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602244", "body": "Hi Tom\n\nFantastic, if you want to take on the DX11 back end that would be great. I was going to start looking at it myself but have my hands full with Android. We also need someone to keep the windows port going, it lost a bit of traction over the last few months. \n\nOn a side note I just managed to get Lidgren networking working (early days but functional) on Windows Phone 7 and I'm looking at porting the MonoGame network implementation to WP7 so people can use the XNA Netowkring api to play against people on Android/iOS/etc. I assume Armed uses its own networking, but I thought I'd mention it as it might be useful.\n\nFeel free to contact Cartblanche and/or myself directly if you need to.\n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602316", "body": "Tom\n\none thing to watch out for it that we want to be able to merge the\nWindows/Linux/MacOS stuff into one Desktop set of files (as far as we\ncan) because they use allot of the same code.\n\nObviously the Win8 Metro stuff will have its own DX11 folder.\n\nDean\n\nOn 22 January 2012 10:57, tomspilman\nreply@reply.github.com\nwrote:\n\n> Hi Dean.\n> \n> Yea from what i'm seeing in the develop branch the windows port is sort of broken at the moment. \u00a0So i'm sorting thru that now while i fight git.\n> \n> ARMED! is a turn based game and we do great with a simple http protocol to an Azure service, so UDP networking isn't really nessasary for our game.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/207#issuecomment-3602273\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3611245", "body": "Tom\n\nAny chance we (i.e me you and Dom) could exchange contact details (or provide an email in your git hub account) so we can keep in touch about developments. I think the Metro support could give monoGame a huge boost in developers as it seems people are really hacked off with not being able to write XNA apps for Metro.\n\nNot wanting to be pushy, but perhaps between us we could knock up a simple Game window (blue screen no textures) for the FOSDEM (its in 2 weeks).\n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3611245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3704580", "body": "I had an exception when I was testing one of the apps. so I put some protection in there. of course not I cant replicate the problem it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3704580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3723512", "body": "Updated to add Added XnaToOpenTK.cs to Android, Windows, Linux and MacOS\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3723512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3736223", "body": "KevinKidsAndI, \n\nWe only accept pull requests for the develop branch at the moment. Can you re do your changes and re submit the patch to the develop branch please.\n\nthanks for you time and contribution\n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3736223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3704580", "body": "I had an exception when I was testing one of the apps. so I put some protection in there. of course not I cant replicate the problem it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3704580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3723512", "body": "Updated to add Added XnaToOpenTK.cs to Android, Windows, Linux and MacOS\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3723512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3736223", "body": "KevinKidsAndI, \n\nWe only accept pull requests for the develop branch at the moment. Can you re do your changes and re submit the patch to the develop branch please.\n\nthanks for you time and contribution\n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3736223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3957737", "body": "Hi sdancer, I wil try to look at this before the 2.5 release. I will also check to see how WP7 handles it and make the android port compatible with that.\n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3957737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4086450", "body": "There is seem to be an issue here, we do need to have a minimum movement value before raising FreeDrag events.. not sure what the value should be though....\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4086450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519196", "body": "Scott, \n\nI think we should leave this bug until the 3.0 release. What do you think?\n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519263", "body": "ok. any ideas on how to fix it? I dont know that much about dpi etc.\n\nWe want to do a release on Wednesday next week (21st).\n\nOn 15 March 2012 13:14, sdancer\nreply@reply.github.com\nwrote:\n\n> I dunno. \u00a0Seems kind of critical to me if you are going to leave Gesture\n> Drag in. \u00a0Makes drag pretty useless without it.\n> \n> On Thu, Mar 15, 2012 at 8:11 AM, Dean Ellis <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Scott,\n> > \n> > I think we should leave this bug until the 3.0 release. What do you think?\n> > \n> > Dean\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/issues/274#issuecomment-4519196\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/274#issuecomment-4519243\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519513", "body": "ok scott, thanks for the info , I will look at this and see if I can fix it.\n\nLet me know how you get on with the memory stuff :)\n\nDean\n\nOn 15 March 2012 13:29, sdancer\nreply@reply.github.com\nwrote:\n\n> Android.Util.DisplayMetrics metric = new Android.Util.DisplayMetrics();\n> Game.Activity.WindowManager.DefaultDisplay.GetMetrics(metric);\n> \n> metric.densityDPI is the property that has the phones DPI. \u00a0You can take\n> the input value and determine the physical distance using DPI. \u00a0Vic and I\n> are trying to solve the memory leak issue that MonoGame has. \u00a0Hopefully we\n> can solve that this weekend.\n> \n> On Thu, Mar 15, 2012 at 8:15 AM, Dean Ellis <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > ok. any ideas on how to fix it? I dont know that much about dpi etc.\n> > \n> > We want to do a release on Wednesday next week (21st).\n> > \n> > On 15 March 2012 13:14, sdancer\n> > reply@reply.github.com\n> > wrote:\n> > \n> > > I dunno. \u00a0Seems kind of critical to me if you are going to leave Gesture\n> > > Drag in. \u00a0Makes drag pretty useless without it.\n> > > \n> > > On Thu, Mar 15, 2012 at 8:11 AM, Dean Ellis <\n> > > reply@reply.github.com\n> > > \n> > > > wrote:\n> > > > \n> > > > Scott,\n> > > > \n> > > > I think we should leave this bug until the 3.0 release. What do you\n> > > > think?\n> > > > \n> > > > Dean\n> > > > \n> > > > ---\n> > > > \n> > > > Reply to this email directly or view it on GitHub:\n> > > > https://github.com/mono/MonoGame/issues/274#issuecomment-4519196\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/mono/MonoGame/issues/274#issuecomment-4519243\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/issues/274#issuecomment-4519263\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/274#issuecomment-4519488\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4526967", "body": "Scott\n\nI think this pull request might fix the Drag/Tap issue, it works ok here.\n\nhttps://github.com/mono/MonoGame/pull/383\n\nWhen you get a moment can you confirm please.\n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4526967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852310", "body": "Scott\n\ndid you want me to pull this or leave it until your fixes the GameTime issues? I ran up the CatapultNetWars demo and noticed that the gameTime.TotalGameTime always seems to be 0. \n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852354", "body": "Also, I noticed we are initializing 2 GameTime objects in the AndroidGamewindow constructor but not keeping a reference to them? Are they there for a reason?\n\nDean\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852388", "body": "Ah OK Scott, no problem :D.\n\nI had decided not to pull it yet anyway :)\n\nJust drop me a mail when you are ready and I'll review, I'll be about\nfor the rest of the evening.\n\nDean\n\nOn 7 February 2012 17:35, sdancer\nreply@reply.github.com\nwrote:\n\n> Wait, I'm going to fix it. \u00a0Almost lunch time.\n> \n> On Tue, Feb 7, 2012 at 11:33 AM, Dean Ellis <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Scott\n> > \n> > did you want me to pull this or leave it until your fixes the GameTime\n> > issues? I ran up the CatapultNetWars demo and noticed that the\n> > gameTime.TotalGameTime always seems to be 0.\n> > \n> > Dean\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/pull/281#issuecomment-3852310\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/281#issuecomment-3852362\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4056545", "body": "sorry scott, I think it was my merge that broke this one. Some of your changes I put into my branch to test. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4056545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519180", "body": "New Templates for MonoDevelop are now in github. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7687941", "body": "Hi\n\nI just tried the mdtool to create a package\n\ncan someone test it out please. The repo is at\n\nhttp://www.infinitespace-studios.co.uk/monodevelop\n\nDean\n\nOn 13 August 2012 10:52, Benoit Jadinon notifications@github.com wrote:\n\n> templates from github are not working with MD 3.x\n> it would be awesome to have an mpack package of it...\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/issues/292#issuecomment-7687525.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7687941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7687949", "body": "The dll was built on windows btw. I dont know if it will work on Mac/linux.\n\nDean\n\nOn 13 August 2012 11:10, Dean Ellis dellis1972@googlemail.com wrote:\n\n> Hi\n> \n> I just tried the mdtool to create a package\n> \n> can someone test it out please. The repo is at\n> \n> http://www.infinitespace-studios.co.uk/monodevelop\n> \n> Dean\n> \n> On 13 August 2012 10:52, Benoit Jadinon notifications@github.com wrote:\n> \n> > templates from github are not working with MD 3.x\n> > it would be awesome to have an mpack package of it...\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/issues/292#issuecomment-7687525.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7687949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694", "body": "This is only temporary, the new 3.0 branch the desktop stuff is much\nmore integrated.\n\nOn 16 March 2012 15:46, Edward Rudd\nreply@reply.github.com\nwrote:\n\n> The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/commit/8b7cf8a8dd46e355807e0439336dfb7fff99cace#commitcomment-1094570\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002", "body": "There are a few missing projects. I will try to clean it up.\n\nthe opentk and the 3dSample should not be in the solution.\n\nYou will need the mono version of opentk for this to work though (I think).\n\nI've not actually managed to get this working on the Pi yet. only in a\nwindows gles emulator.\n\nOn 23 August 2012 11:46, Timothy notifications@github.com wrote:\n\n> Hey,\n> \n> I've tried to check out this branch, but it seems to be missing a lot of\n> files\n> \n> The OpenTK project in the monodevelop solution refers to\n> ../opentkpi/Source/OpenTK/OpenTK.csproj (outside the current repo?)\n> 3dSample cannot be located and neither can Samples/Draw2D/\n> \n> Am I missing something? How can I get these?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1754775.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172", "body": "I have a pi here as well, I installed wheezy too.\n\nyou can try my hacked opentk (https://github.com/dellis1972/opentk) I make\nsome hacks to get it to work properly with gles 2.0. There was one line I\ndid have to change in the Factory.cs I think.\n\nOn 23 August 2012 12:35, Timothy notifications@github.com wrote:\n\n> I tried cloning /mono/opentk but that differs from opentkpi (I'm new to\n> the git stuff)\n> If you have any compiled stuff you'd like me to test, please let me know,\n> I've got raspberry's to play with\n> \n> I'm using the armel version of wheezy, as I've heard the raspbian version\n> doesn't work?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a76d6bcd82eaed6525999af4a6f068137e78b065#commitcomment-1755034.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969075", "body": "Have you run\n\ngit submodule update\n\nto update your third party dlls\n\nOn 9 October 2012 17:54, Renaud B\u00e9dard notifications@github.com wrote:\n\n> ToArray is not a member of DataStream in my SharpDX DLL...?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/92db8c7a705bbc3b301d4e2debcb7fb0d0b47dc1#commitcomment-1969044.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2390079", "body": "This new constructor has broken the Windows 8 and the WP8 build. Under those platforms _data and _sound are not defined as they are not used.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2390079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2552860", "body": "this commit has broken the linux, and possibly other platforms where song does not contain the correct constuctor\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2552860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442247", "body": "it does.....\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442255", "body": "which version of Xamarin.iOS are you using?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442415", "body": "according to the PR it was never built by the build system, there are no\nlinks to the build jobs in the history.\n\nOn Monday, 17 June 2013, Alexandre Zollinger Chohfi wrote:\n\n> I'm using the latest stable Xamarin.iOS. Version 6.2.7.1 (Business\n> Edition).\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/7627b2994589fce7183abc3228e308dd65eb8ba0#commitcomment-3442373\n> .\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442469", "body": "looks like it broke android too\n\nOn 17 June 2013 22:07, Dean Ellis dellis1972@googlemail.com wrote:\n\n> according to the PR tit was never built by the build system, there are no\n> links to the build jobs in the history.\n> \n> On Monday, 17 June 2013, Alexandre Zollinger Chohfi wrote:\n> \n> > I'm using the latest stable Xamarin.iOS. Version 6.2.7.1 (Business\n> > Edition).\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/7627b2994589fce7183abc3228e308dd65eb8ba0#commitcomment-3442373\n> > .\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710815", "body": "Audio wont work, the NAudio library requires some windows dll's at the\nmoment\n\nOn 24 July 2013 22:42, Alisson Cavalcante Agiani\nnotifications@github.comwrote:\n\n> Cool, gotta test it :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/9a1a07766ed1032373346407ca519c8cc1b09877#commitcomment-3710767\n> .\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3975964", "body": "@tomspilman  when trying to write a SpriteFont I get a 'key not found in dictionary' error here now. It used to work before this change.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3975964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3975970", "body": "This is when writting the Glyph array which is a List<Rectangle> , it happens when the Rectangle is written I think.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3975970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977016", "body": "I think so. It happens on every sprite font I have tested here. Including\nArial.\n\nOn 29 August 2013 20:58, Tom Spilman notifications@github.com wrote:\n\n> How can I recreate this? Just generating a sprite font with the MonoGame\n> pipeline?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/afa4d3367805956a5976f3bcec4b9ff7e7f9ec32#commitcomment-3976986\n> .\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977621", "body": "Debugged we get\n\nMicrosoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.RectangleWriter\n\nThe odd things is the typeWriterMap does contain that ...\n\nMicrosoft.Xna.Framework.Content.Pipeline.Serialization.Compiler.RectangleWriter\n\nOn 29 August 2013 21:04, Tom Spilman notifications@github.com wrote:\n\n> What typeWriter is it passing into here?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/afa4d3367805956a5976f3bcec4b9ff7e7f9ec32#commitcomment-3977036\n> .\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977860", "body": "switching the code over to use\n\n Dictionary<Type, int> typeWriterMap = new Dictionary<Type, int>();\n\nand\n\n typeWriterMap.Add(typeWriter.GetType(), index);\n\nand\n\ntypeWriterMap[typeWriter.GetType()];\n\nin the appropriate places seems to fix the issue. I suspect a new instance\nof the typewriter was being created so it couldn't look it up.\n\nOn 29 August 2013 22:08, Tom Spilman notifications@github.com wrote:\n\n> That is odd... i'll have to investigate further.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/afa4d3367805956a5976f3bcec4b9ff7e7f9ec32#commitcomment-3977699\n> .\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3977860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435689", "body": "Does Present implement a SwapBuffers at the moment? If not would it be a good idea to get it too?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435689/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/442968", "body": "Guys, are we any further along with this ? \n\nI looked up and by default opengles on android uses doublebuffering. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/442968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1513755", "body": "Does this need to be commented out? or is this just something that is left over from testing?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1513755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560876", "body": "I tried that, all the textures get messed up. will need to check into it further.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1718239", "body": "Can this be pulled then?\n\nOn 28 September 2012 16:03, Aranda notifications@github.com wrote:\n\n> In MonoGame.Framework/Graphics/SpriteBatch.cs:\n> \n> > @@ -270,8 +270,8 @@ void CheckValid(SpriteFont spriteFont, StringBuilder text)\n> > \n> > ```\n> >         item.Set (destinationRectangle.X,\n> >                 destinationRectangle.Y,\n> > ```\n> > -                   -origin.X,\n> > -                   -origin.Y,\n> > -                   -origin.X \\* (float)(destinationRectangle.Z / texture.Width),\n> > -                   -origin.Y \\* (float)(destinationRectangle.W / texture.Height),\n> \n> Hehe, that's what comes of assuming the variable was a Rectangle just\n> because it had the word Rectangle in the name :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/pull/817/files#r1718227.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1718239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2522987", "body": "Should there be a space in Windows GL ? \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2522987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2522990", "body": "This is the MonoDevleop AddIn project, it can just be left as Release as the same addin works on all the platforms\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2522990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956231", "body": "The assembly should be cross platform, to be honest it probably shouldnt be in the windows directory. If the fixes for the nvtt we got for ubuntu pan out it should work. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956234", "body": "that is a bit of a pain\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3002630", "body": "should this line be using target rather than All.Texture2D?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3002630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3119133", "body": "Should the if statement wrap the calls to get the Min and Mag Filters? or should it just deal with the MaxAnisotropy one?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3119133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3119401", "body": "ok, so I think these lines need to change so that the Min and Mag Filters are always applied :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3119401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mgkcortyw": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5990", "title": "[Mac OS X] Subclass of NSApplication", "body": "Hello, guys!\r\n\r\nCan we make some subclass of NSApplication and not break MonoGame life cycle?\r\n\r\ni.e. i want somethink like this in Xamarin.Mac project:\r\n\r\n    [Register(\"CustomNSApplication\")]\r\n    public class CustomNSApplication : NSApplication\r\n    {\r\n        public CustomNSApplication(NSCoder coder) : base(coder)\r\n        {\r\n        }\r\n\r\n        public CustomNSApplication(NSObjectFlag t) : base(t)\r\n        {\r\n        }\r\n\r\n        public CustomNSApplication(IntPtr handle ) : base(handle)\r\n        {\r\n        }\r\n\r\n        public override void SendEvent(NSEvent theEvent)\r\n        {\r\n            base.SendEvent(theEvent);\r\n        }\r\n    }\r\n\r\nin Info.plist i write:\r\n\r\n\t<key>NSPrincipalClass</key>\r\n\t<string>CustomNSApplication</string>\r\n\r\nin Main.cs i put this:\r\n\r\n            NSApplication.Init();\r\n            NSApplication.Main(args);\r\n            using (var p = new NSAutoreleasePool())\r\n            {\r\n                // game initialization and run inside AppDelegate.WillFinishLaunching\r\n                NSApplication.SharedApplication.Delegate = new AppDelegate();\r\n            }\r\n\r\nI successfully hit break point in CustomNSApplication constructor. But in this case MonoGame window not showing.\r\n\r\nIf i put NSApplication.Main(args); after Delegate initialization -> game window are showed and works fine. But in this case CustomNSApplication not created (not hit on breakpoint in constructor).\r\n\r\nI need catch all mouse events in MonoGame over app, and for it i need method CustomNSApplication.SendEvent. Because of this https://github.com/MonoGame/MonoGame/issues/5988 issue.\r\n\r\nAny solutions?\r\n\r\nThank in advance!", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5988", "title": "[Mac OS X] Tap on trackpad not works correctly", "body": "Hello, guys!\r\n\r\nI trying to migrate my iOS game to MacOS, and my code: \r\n'mouse.LeftButton == ButtonState.Pressed' only is executed when I click the trackpad and not when I tap it.\r\n\r\nMy MacOS is configured to \"Tap to click - Tap with one finger\".\r\n\r\nSometimes on trackpad-Tap state of left mouse button changed on 'Pressed' state, but it's very unstable (1 of 10 taps) in other cases in update method we get always 'Released' mouse state like we don't Tap ever.\r\n\r\nLooks like MonoGame not catch very fast clicks (Tap-s). (i.e. 'Pressed' state changed very fast from 'Pressed' to 'Released', and Update method don't catch it).\r\n\r\nTested on last **stable MonoGame Release 3.6** and with **develop branch**. Same problem.\r\n\r\nThank in advance!", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Tattomoosa": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5981", "title": "MonoGame Template not in Visual Studio on Mac", "body": "I followed the instructions in the documentation for [Mac setup](http://www.monogame.net/documentation/?page=Setting_Up_MonoGame_Mac) but none of the MonoGame templates show up in Visual Studio for Mac.\r\n\r\nRunning macOS Sierra 10.12.6 on a 2010 Macbook Pro (it is too old to upgrade the OS, if that might be the issue)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PetrKavan": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5978", "title": "IOS MediaPlayer ands playing song when AVPlayer finishes", "body": "1) Use MediaPlayer.Play() to play some longer song\r\n2) Create AVPlayer, use it to play some shorter video\r\n3) When AVPlayer reaches the end of video, song also stops playing\r\n\r\nAs far as I can say based on source code, Monogame Song reacts to ObserveDidPlayToEndTime notification even if it was issued for some different AVPlayerItem.  Problem is in MonoGame.Framework/Media/Song.IOS.cs , method PlatformInitialize() when creating observer for notification\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "monkeyharhar": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5971", "title": "GamePadState.PacketNumber stays 0 even when input is working.", "body": "Only issue I could find that might pertain is [https://github.com/MonoGame/MonoGame/issues/4002](#4002)\r\n\r\nI've set up breakpoints on GamePadState.GetButtonPressed(Buttons.A) and it returns true but PacketNumber never updates.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Creta5164": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5970", "title": "Support MediaPlayer.GetVisualizationData", "body": "[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/F_7IO4C4Xk4/0.jpg)](https://www.youtube.com/watch?v=F_7IO4C4Xk4)\r\n(prototype video)\r\n\r\nI recently used ActionScript 3.0 to prototyped an audio visualizer background for my game.\r\nI want to implement the contents of the above video.\r\nSo, I asked the community how to can implement this in Monogame.\r\n\r\nJjagg responded to this.\r\n>XNA can  be implemented using **MediaPlayer.GetVisualizationData**,\r\n>but not yet implemented in Monogame.\r\n\r\nDoes the Monogame team have a specific plan to implement this?\r\nI really need this feature.\r\n\r\nthanks", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5970/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arcanewater": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5944", "title": "MonoGame Pipeline Tool crash when adding references", "body": "Version 3.6.0.1625\r\nMacOS: 10.12.6\r\n\r\nUsing MacOS pipeline tool, when trying to add references to dll on clicking OK it crashes. \r\n\r\n```\r\nApplication Specific Information:\r\nSystem.NullReferenceException: Object reference not set to an instance of an object\r\n  at (wrapper managed-to-native) AppKit.NSApplication:NSApplicationMain (int,string[])\r\n  at AppKit.NSApplication.Main (System.String[] args) [0x0003d] in <c6073fd3d8a24e8c8486d70c91715e73>:0 \r\n  at Eto.Mac.Forms.ApplicationHandler.Run () [0x0004e] in <07e1a440fba94bd1a16059b07bd0b6e0>:0 \r\n  at Eto.Forms.Application.Run (Eto.Forms.Form mainForm) [0x0002c] in <330b729e54b34ae38c2b6aa66a4c6304>:0 \r\n  at MonoGame.Tools.Pipeline.Program.Main (System.String[] args) [0x00066] in <954e325a58604e01b1c6d4ec1ce51c32>:0 \r\n```\r\nI am using current development build of pipeline tool for Mac.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hawezo": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5943", "title": "Protobuild with composed session name on Windows", "body": "Currently while trying to use Protobuild, it stops its execution when having a composed session name (`C:\\Users\\Firstname Lastname\\Blablah`)\r\n\r\n```\r\nStarting resolution of packages for Windows...\r\nEnabled parallelisation; use --no-parallel to disable...\r\nQuerying: https-git://github.com/OutOfOrder/MonoKickstart.git\r\nQuerying: https-git://github.com/MonoGame/MonoGame.Dependencies.git\r\nQuerying: https-git://github.com/ioctlLR/NVorbis.git\r\nResolving: https-git://github.com/OutOfOrder/MonoKickstart.git\r\nPackage type not specified (and no file at ThirdParty/Kickstart\\.git), requesting binary version.\r\nExecuting: git fetch origin +refs/heads/*:refs/heads/* (in C:\\Users\\Po Ny\\AppData\\Roaming\\.protobuild-cache\\af4406f790ebfd18b4fa28d2ae279677bce38053--source)\r\nExecuting: git clone --progress C:\\Users\\Po Ny\\AppData\\Roaming\\.protobuild-cache\\af4406f790ebfd18b4fa28d2ae279677bce38053--source \"ThirdParty/Kickstart\"\r\nfatal: Too many arguments.\r\n```\r\n\r\nIt gives a 129 error code which leads to the shutdown of the process.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "UltimaOmega": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5937", "title": "VideoPlayer poor performance and unusually high memory usage", "body": "So I mainly develop from my desktop PC so sometimes there are things that slip past me due to the hardware difference. I wanted to support lower end hardware since the game itself is simple enough to do so. While the game runs fine, VideoPlayer lags to the point where the video is not only out of sync but often missable due to how many frames are dropped.\r\n\r\nNot sure what the issue is though, I did notice CPU usage going up a bit, memory seems to be going up constantly each time the video runs (sometimes crashing after a few times) and this happens on both desktop and laptop. My game normally sits around 100mb - 150mb range max but letting a video (even if it is the same one) play over and over again can increase the memory usage to around 1gb after a minute of testing.\r\n\r\nThis is being tested on a Windows DX project, both testing platforms running Windows 10.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5911", "title": "PlayerIndex.One of GamePad.GetState() is never connected using DirectX project", "body": "I'm not sure what happens when more than one controller is connected but if there's only one controller then GamePad.GetState(PlayerIndex.One).IsConnected will always turn up false. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "afrodynamics": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5933", "title": "VideoPlayer DirectX - DllNotFound MediaFoundation (missing mf.dll)", "body": "We've had several complaints from users that their application cannot find mf.dll. Our game uses the DirectX backend. We've found that our users can install this on Windows 10 to fix the issue:\r\n\r\nhttps://support.microsoft.com/en-us/help/4016817/media-feature-pack-for-n-edition-of-windows-10-version-1703-april-2017\r\n\r\nGenerally our players crash when trying to play our intro cinematic in the VideoPlayer. Is it possible for us to ship with this dependency, or for it to be included in standard MG DX builds?\r\n\r\n(NOTE: If this is just something we have to require our users to install on their system, then this may not be a bug at all).", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8821833913cbb7240890223646e820f00dcc8d00", "message": "Improvements to VideoPlayer for Desktop DirectX. (#5737)\n\n* fix DX11 VideoPlayer crash in PlatformStop()\r\n\r\n* Optimization for DX11 VideoPlayer: cache video Texture2D instead of new'ing"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "remmah": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5929", "title": "Provide SHA-256 checksums for installers", "body": "The macOS MonoGame installer is unsigned and has to be downloaded in the clear from monogame.net. Would it be possible to provide the SHA-256 digest for each installer on a TLS-enabled site? Perhaps in the notes for each release tag here on GitHub?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HopefulToad": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5928", "title": "Strange problems with full-screen using latest development build (3.7.0.849) - DirectX", "body": "Today I updated from the previous version of MonoGame I was using, which was either the 3.6 stable build or some development build between then and now, and ran into serious problems with full-screen that weren't there before.\r\n\r\nHere's an example Game1.cs file that illustrates the problems:\r\n\r\n    using Microsoft.Xna.Framework;\r\n    using Microsoft.Xna.Framework.Graphics;\r\n    using Microsoft.Xna.Framework.Input;\r\n\r\n    namespace Example\r\n    {\r\n        public class Game1 : Game\r\n        {\r\n            public const int HorizontalResolution = 128;\r\n            public const int VerticalResolution = 96;\r\n            public const int ResolutionScale = 8;\r\n\r\n            GraphicsDeviceManager graphics;\r\n            SpriteBatch batch;\r\n\r\n            RenderTarget2D renderTarget;\r\n            Rectangle renderTargetDestination;\r\n            Color renderTargetColor = new Color(255, 255, 255);\r\n\r\n            Texture2D pattern;\r\n\r\n            public Game1()\r\n            {\r\n                graphics = new GraphicsDeviceManager(this);\r\n                Content.RootDirectory = \"Content\";\r\n\r\n                graphics.PreferredBackBufferWidth = HorizontalResolution * ResolutionScale;\r\n                graphics.PreferredBackBufferHeight = VerticalResolution * ResolutionScale;\r\n\r\n                graphics.IsFullScreen = true;\r\n            }\r\n\r\n            protected override void Initialize()\r\n            {\r\n                renderTarget = new RenderTarget2D(GraphicsDevice, HorizontalResolution, VerticalResolution);\r\n\r\n                //Create new texture with pattern to make any aspect ratio distortion noticeable\r\n                pattern = new Texture2D(GraphicsDevice, HorizontalResolution, VerticalResolution);\r\n                Color[] data = new Color[HorizontalResolution * VerticalResolution];\r\n                for (int i = 0; i < data.Length; i++)\r\n                    data[i] = (i % 2) == (i / HorizontalResolution) % 2 ? Color.Gray : Color.LightGray;\r\n                pattern.SetData(data);\r\n\r\n                base.Initialize();\r\n\r\n                renderTargetDestination = new Rectangle(0, 0, GraphicsDevice.PresentationParameters.BackBufferWidth, \r\n                    GraphicsDevice.PresentationParameters.BackBufferHeight);\r\n            }\r\n\r\n            protected override void LoadContent()\r\n            {\r\n                batch = new SpriteBatch(GraphicsDevice);\r\n\r\n            }\r\n            protected override void Update(GameTime gameTime)\r\n            {\r\n                if (Keyboard.GetState().IsKeyDown(Keys.Escape) ||\r\n                    GamePad.GetState(PlayerIndex.One).Buttons.Back == ButtonState.Pressed)\r\n                    Exit();\r\n\r\n                base.Update(gameTime);\r\n            }\r\n\r\n            protected override void Draw(GameTime gameTime)\r\n            {\r\n                GraphicsDevice.SetRenderTarget(renderTarget);\r\n\r\n                GraphicsDevice.Clear(Color.CornflowerBlue);\r\n\r\n                batch.Begin();\r\n\r\n                batch.Draw(pattern, Vector2.Zero, Color.White);\r\n\r\n                batch.End();\r\n\r\n                GraphicsDevice.SetRenderTarget(null);\r\n\r\n                GraphicsDevice.Clear(Color.CornflowerBlue);\r\n\r\n                batch.Begin(samplerState: SamplerState.PointClamp);\r\n\r\n                batch.Draw(renderTarget, renderTargetDestination, renderTargetColor);\r\n\r\n                batch.End();\r\n\r\n                base.Draw(gameTime);\r\n            }\r\n        }\r\n    }\r\n\r\nThis code does not work at all. At a <code>ResolutionScale</code> of 8, the height of the backbuffer should exactly match the vertical resolution of my screen (which has a resolution of 1366 by 768; a scale of 8 should lead to a back buffer size of 1024 by 768), the game displays incorrectly, with visible distortion in the checker pattern and both letter- and pillar-boxes surrounding the image.\r\n\r\nThings change when I move the lines that set the back buffer size to the <code>Initialize</code> method, but they don't really get better. Here's the code with that change:\r\n\r\n    using Microsoft.Xna.Framework;\r\n    using Microsoft.Xna.Framework.Graphics;\r\n    using Microsoft.Xna.Framework.Input;\r\n\r\n    namespace Example\r\n    {\r\n        public class Game1 : Game\r\n        {\r\n            public const int HorizontalResolution = 128;\r\n            public const int VerticalResolution = 96;\r\n            public const int ResolutionScale = 8;\r\n\r\n            GraphicsDeviceManager graphics;\r\n            SpriteBatch batch;\r\n\r\n            RenderTarget2D renderTarget;\r\n            Rectangle renderTargetDestination;\r\n            Color renderTargetColor = new Color(255, 255, 255);\r\n\r\n            Texture2D pattern;\r\n\r\n            public Game1()\r\n            {\r\n                graphics = new GraphicsDeviceManager(this);\r\n                Content.RootDirectory = \"Content\";\r\n            }\r\n\r\n            protected override void Initialize()\r\n            {\r\n                renderTarget = new RenderTarget2D(GraphicsDevice, HorizontalResolution, VerticalResolution);\r\n\r\n                //Create new texture with pattern to make any aspect ratio distortion noticeable\r\n                pattern = new Texture2D(GraphicsDevice, HorizontalResolution, VerticalResolution);\r\n                Color[] data = new Color[HorizontalResolution * VerticalResolution];\r\n                for (int i = 0; i < data.Length; i++)\r\n                    data[i] = (i % 2) == (i / HorizontalResolution) % 2 ? Color.Gray : Color.LightGray;\r\n                pattern.SetData(data);\r\n\r\n                base.Initialize();\r\n\r\n                graphics.PreferredBackBufferWidth = HorizontalResolution * ResolutionScale;\r\n                graphics.PreferredBackBufferHeight = VerticalResolution * ResolutionScale;\r\n\r\n                graphics.IsFullScreen = true;\r\n\r\n                graphics.ApplyChanges();\r\n\r\n                renderTargetDestination = new Rectangle(0, 0, GraphicsDevice.PresentationParameters.BackBufferWidth, \r\n                    GraphicsDevice.PresentationParameters.BackBufferHeight);\r\n            }\r\n\r\n            protected override void LoadContent()\r\n            {\r\n                batch = new SpriteBatch(GraphicsDevice);\r\n\r\n            }\r\n            protected override void Update(GameTime gameTime)\r\n            {\r\n                if (Keyboard.GetState().IsKeyDown(Keys.Escape) ||\r\n                    GamePad.GetState(PlayerIndex.One).Buttons.Back == ButtonState.Pressed)\r\n                    Exit();\r\n\r\n                base.Update(gameTime);\r\n            }\r\n\r\n            protected override void Draw(GameTime gameTime)\r\n            {\r\n                GraphicsDevice.SetRenderTarget(renderTarget);\r\n\r\n                GraphicsDevice.Clear(Color.CornflowerBlue);\r\n\r\n                batch.Begin();\r\n\r\n                batch.Draw(pattern, Vector2.Zero, Color.White);\r\n\r\n                batch.End();\r\n\r\n                GraphicsDevice.SetRenderTarget(null);\r\n\r\n                GraphicsDevice.Clear(Color.CornflowerBlue);\r\n\r\n                batch.Begin(samplerState: SamplerState.PointClamp);\r\n\r\n                batch.Draw(renderTarget, renderTargetDestination, renderTargetColor);\r\n\r\n                batch.End();\r\n\r\n                base.Draw(gameTime);\r\n            }\r\n        }\r\n    }\r\n\r\nA scale of 8 seems to display correctly. But with this new change, at a scale of 8, the mouse suddenly becomes visible when I move it to the left edge of the screen, and if I click there, the full-screen window is minimized to show whatever other program I have open. And the smaller the resolution scale, the higher the percentage of area of the game buffer that will inexplicably show the mouse.\r\n\r\nAnd, for the icing on the cake, my computer threw up a blue error screen and restarted not once, but _twice_ while running the program.\r\n\r\nI uninstalled the newly installed version of MonoGame, downloaded the 3.6 stable build instead, and installed that. With the stable 3.6 build, the second code example works exactly as expected, with no issues. The first example results in the image being stretched to fit the whole screen instead of remaining at a 4:3 aspect ratio. Neither example exhibits the strange mouse bug when using the stable 3.6 build.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5749", "title": "Guidance for contributing to documentation", "body": "I've been a user of MonoGame for some time, and I've liked the idea of contributing to the project. The problem is, I know very little about the inner workings of the framework and I doubt I would be able to help with any of the coding issues.\r\n\r\nOne area I probably _could_ help is in documentation. Before I start submitting PRs for documentation changes out of nowhere, though, I want to discuss it so that I don't end up wasting my time or anyone else's. I apologize if this is the wrong place to bring it up (since this isn't exactly an issue with MonoGame, but rather _contributing_ to MonoGame).\r\n\r\nA few things that might be problematic to me helping with documentation:\r\n\r\n- My level of understanding of MonoGame is much more that of an end-user than a contributor. In other words, I'm familiar with the API, but not the implementation.\r\n- I'm a Windows user only, and almost all of my experience with MonoGame is with working on desktop DirectX projects. I'm unfamiliar with UWP and I'm still using Windows 8.1, and I haven't really tried using OpenGL seriously.\r\n- My knowledge is mostly limited to 2D game development.\r\n- I've never actually published a video game, but I have been working on projects off and on for two years.\r\n\r\nWith all those caveats, should I even bother? I do think I have enough knowledge to at least contribute a little.\r\n\r\nFor documentation guidelines, I've seen #2520, which is somewhat old and it was never really confirmed in that discussion what the final outline would be. There's also the README in the documentation folder, but that just has a TODO under the style guide for manuals, guides, and tutorials.\r\n\r\nIf I could help with documentation, any guidance on how to get started would be appreciated.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5749/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5753", "title": "Riemer's tutorial port", "body": "As per #5749, this is the beginning of porting Riemer's XNA tutorials over to the MonoGame documentation. For now, this is a verbatim port, which means some parts don't apply to MonoGame and will have to be changed later.\r\n\r\nFor comparison, see the home page at <http://riemers.net/>.\r\n\r\nFor those curious where we were given permission to use the tutorials, see [this thread](http://community.monogame.net/t/riemers-tutorials-monogame-net/7762) over at the MonoGame website. I do think it would probably be a good idea to contact Riemer again just to make sure it's acceptable for us to use the tutorial content in this way.\r\n\r\nI made a few assumptions in this PR about how the tutorial might be formatted and placed in the Documentation section of the MonoGame website, so if any of the assumptions were made in error, please let me know.\r\n\r\nAlso, would it be a good idea to structure the .md files for the tutorial port within folders within the Documentation folder? If I just dump them all directly in the Documentation folder, it's going to become overcrowded fast.\r\n\r\n@tomspilman @KonajuGames ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dneelyep": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5923", "title": "In the Pipeline tool, in the Project tree, pressing the menu key should open the context menu", "body": "In most apps, pressing the Menu key (this thing: https://en.wikipedia.org/wiki/Menu_key) opens a context menu when it's available. This should happen in the Pipeline tool also, to make keyboard navigation smoother.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5916", "title": "Pipeline tool should add standard keyboard shortcuts to access the main menu items", "body": "In the Pipeline tool, I can press \"Alt\" to highlight the main menu bar (with options File, Edit, View, Build, Help). Ideally, I could use the below shortcuts to immediately open menu options, rather than having to press Alt+Up/Down/Left/Right Arrow to navigate to the correct menu.\r\n\r\n- [x] File: Alt+F\r\n- [x] Edit: Alt+E\r\n- [x] View: Alt+V\r\n- [x] Build: Alt+B\r\n- [x] Help: Alt+H\r\n\r\nFor an example, see the behavior of Visual Studio.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f91128d406ce0cf6e01c759999c27ef92eb2df43", "message": "Add shortcut keys to easily access menu items in the content pipeline tool. (#5919)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4653", "title": "Display project name in the window of the content pipeline tool.", "body": "This fixes part of Issue #4457.\n\nI'm not sure if exposing PipelineController._project.ProjectName publicly is the best way to get that information - I can change it to something else if desired. It looks like it was done a bit differently in the GTK pipeline tool, as pointed out by @cra0zy here: https://github.com/mono/MonoGame/blob/develop/Tools/Pipeline/Gtk/MainWindow.cs#L53\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xlebec": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5920", "title": "VideoPlayer.GetTexture() and VideoPlayer.Stop() crash in UWP Projects", "body": "Occurs when running UWP project on Xbox and Windows. Haven't tested other platforms. Non-UWP Windows project executes these methods without issue. Error messages below.\r\n\r\n**VideoPlayer.GetTexture()**\r\nException thrown: 'SharpDX.SharpDXException' in SharpDX.dll\r\nAn exception of type 'SharpDX.SharpDXException' occurred in SharpDX.dll but was not handled in user code\r\nHRESULT: [0x80070057], Module: [General], ApiCode: [E_INVALIDARG/Invalid Arguments], Message: The parameter is incorrect.\r\n\r\n**VideoPlayer.Stop()**\r\nAn exception of type 'SharpDX.SharpDXException' occurred in SharpDX.dll but was not handled in user code\r\nHRESULT: [0x80070057], Module: [General], ApiCode: [E_INVALIDARG/Invalid Arguments], Message: The parameter is incorrect.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Compynerd255": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5918", "title": "MonoGame Android does not properly notify window on Immersive mode", "body": "In my application, we have several `RenderTarget2D` resources that we use to render secondary screen views. Essentially, we draw to these render targets, then draw them to the screen afterwards.\r\n\r\nI am able to listen to `Game.GameWindow.ClientBoundsChanged` in order to recreate these render targets when the screen rotates. However, this does not work correctly with immersive mode - when the system changes to immersive mode, this callback is not called and the client bounds do not update. This causes the render target to be cropped and drawn several pixels below the top of the screen, at least until the screen rotates again and we have the correct sizes.\r\n\r\nIs there any other, more reliable way to get this information, or is the `GameWindow` the correct way to do it? If it's the latter, could we please patch this change in?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5905", "title": "Feature Request: Add text stroke and fill styles to SpriteFontDescription", "body": "I would like to be able to specify stroke and fill styles for text in SpriteFont descriptions, for instance to create different outlines and color styles for text (esp. title text). This would include things like thickness as well as color and joint types. What would other developers think of this feature?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "darkhog": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5917", "title": "Add FromUri method to other types of assets than Song", "body": "Song.FromUri is a very nice and easy way to load a music file directly from a specified path, without worrying of all glue code you'd need to put if you'd wanted to load it from stream. Could similar method be added for other types of resources such as Texture2D, SoundEffect, etc.? Basically everywhere the developer may want to load it from specific path. This would make things easy when you want to make highly moddable game that can be modded without using any sort of XNB stripper/editor.\r\n\r\nFor anyone still unconvinced:\r\n\r\n``` C#\r\n//code with fromstream:\r\n//Let's load some textures\r\nFileStream texturestream = new FileStream(\"Content/backgrounds/titlebg.png\", FileMode.Open);\r\nTexture2D titlebgtexture = Texture2D.FromStream(graphicsDevice,texturestream);\r\ntexturestream.Close();\r\ntexturestream = new FileStream(\"Content/logos/logo.png\", FileMode.Open);\r\nTexture2D titlelogo = Texture2D.FromStream(graphicsDevice,texturestream);\r\ntexturestream.Close();\r\ntexturestream = new FileStream(\"Content/ui/uiatlas.png\", FileMode.Open);\r\nTexture2D uiatlas = Texture2D.FromStream(graphicsDevice,texturestream);\r\ntexturestream.Close();\r\n\r\n//and now as if FromUri was implemented:\r\n\r\nTexture2D titlebgtexture = Texture2D.FromUri(graphicsDevice,new System.Uri(\"Content/backgrounds/titlebg.png\",System.UriKind.Relative);\r\nTexture2D titlelogo = Texture2D.FromUri(graphicsDevice,new System.Uri(\"Content/logos/logo.png\",System.UriKind.Relative);\r\nTexture2D uiatlas = Texture2D.FromUri(graphicsDevice,new System.Uri(\"Content/ui/uiatlas.png\",System.UriKind.Relative);\r\n```\r\n\r\nLess lines of code makes coders happy \ud83d\ude04. \r\nI could probably add this as extension methods and probably I will, but it would be good to have it in the core.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Noemata": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5915", "title": "Holographic (HoloLens) support", "body": "Would be nice to see this integrated:\r\n\r\nhttps://github.com/vladkol/MonoGame\r\n\r\nso HoloLens support was built in.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5915/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NaamloosDT": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5909", "title": "Loading songs from Uri leaks memory", "body": "I'm not completely sure whether this is causes by Monogame, but the mediaplayer seems to increase RAM usage each time a new song is loaded. Any ideas?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dazinator": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5891", "title": "MGCB.exe workingdir arg is fragile", "body": "If you call `MGCB.exe` and supply a `/workingDir` argument, it only has an impact if it is early in the list of args.\r\n\r\nFor example - this fails because it looks like the importer tries to resolve source files, before the working dir is set:\r\n\r\n```\r\n\"C:\\Program Files (x86)\\MSBuild\\MonoGame\\v3.0\\Tools\\MGCB.exe\" /@:\"C:\\Users\\darre\\Source\\Repos\\MonoGame\\Sample\\Content\\Content.mgcb\" /platform:Windows /outputDir:\"C:\\Users\\darre\\Source\\Repos\\MonoGame\\Sample\\Content\\bin\\Windows\\Content\" /intermediateDir:\"C:\\Users\\darre\\Source\\Repos\\MonoGame\\Sample\\Content\\obj\\Windows\\Content\" /workingDir:\"C:\\Users\\darre\\Source\\Repos\\MonoGame\\Sample\\Content\"\r\nBuild started 22/08/2017 22:38:53\r\n\r\nC:/WINDOWS/system32/Test.fx\r\nC:/WINDOWS/system32/Test.fx: error: The source file 'C:/WINDOWS/system32/Test.fx' does not exist!\r\n```\r\n\r\nTook me a while to figure out what was wrong here as was not initially obvious from command line usage. Supplying /workingDir as the first argument works as expected.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e2cb5dd11e9a5f33b6054ca531e25ba9f82feab0", "message": "Fixes #4977 (#4997)\n\n* Fixes #4977\r\nModified msbuild targets file, so that when mgcb's are built, their build output is copied to a directory in the output folder that is relative to the path of the mgcb within the project. This allows content to more easily be isolated by moving mgcb's to seperate prokected folders.\r\n\r\n* Removed a comment line I had accidentally left in.\r\n\r\n* Fixed issue where xnb's relative directory was not preserved when output to the bin folder.\r\n\r\n* Now also supports linked mgcb files.\r\n\r\n* Removed whitespace.\r\nFixed a problem with a missing condition, causing more output than necessary.\r\n\r\n* Removed additional backslahes."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5893", "title": "Fixes #5892 - Fix xbuild.", "body": "I moved the complicated msbuild logic from the targets file, into a seperate msbuild task (c#), because:\r\n1. xbuild can't handle it.\r\n2. This opens a path to create some test coverage of the build logic through testing the msbuild task with nunit / xunit etc.\r\n\r\nTo test:\r\n\r\n1. Build the `MonoGame.Framework.MsBuildTasks` project, and then put the `MonoGame.Framework.MsBuildTasks` dll in `C:\\Program Files (x86)\\MSBuild\\MonoGame\\v3.0\\Tools\\` folder.\r\n2. Overwrite the `MonoGame.Content.Builder.targets` file in `C:\\Program Files (x86)\\MSBuild\\MonoGame\\v3.0\\` with the version from this PR.\r\n\r\n3. Create a new monogame project. \r\n4. Add some `mgcb`s. You can experiment by adding linked and non linked mgcb's, to different directories within the project.\r\n5. Build the project.\r\n6. Check the output directory for all the content.\r\n\r\n## Debugging the msbuild task\r\n\r\n2. In your sample monogame project, edit the csproj file, and add a `TasksAssemblyFolderPath` property which points to the bin/debug folder that contains the task assembly. For my sample project which I created in the monogame repo directory, it looks like this:\r\n```\r\n <PropertyGroup>\r\n    <TasksAssemblyFolderPath>$(MSBuildThisFileDirectory)..\\MonoGame.Framework.MsBuildTasks\\bin\\Debug\\</TasksAssemblyFolderPath>\r\n\r\n```\r\n\r\nEdit the project properties for the MsBuildTasks project, so that it builds the sample project using msbuild / xbuild when you run it. For me this looks like:\r\n\r\n![image](https://user-images.githubusercontent.com/3176632/29594243-99f1262c-87a7-11e7-8775-bbcf4b548e21.png)\r\n\r\n\r\nNow you can run the  msbuild tasks project, and set a break point in the msbuild task to debug.\r\n\r\n## Other notes:\r\n\r\nI build each mgcb in parallel as I thought would be better for performance. Seems to work well.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "diliupg": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5889", "title": "Monogame 3.6 Pipeline tool does not work with Visual Studio 2017", "body": "This is a problem which has been going on for some time with no solution still. All versions of monogame give the same error of freetype file", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DDReaper": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5878", "title": "ViewPort remains at 800x600 regardless of backbuffer size", "body": "Tested in both existing and new projects. Regardless of what the preferred backbuffer width/height is set to.\r\n\r\nAlso as note din @dellis1972 s article in 2014, it shouldn't be used?\r\nhttp://www.infinitespace-studios.co.uk/general/handling-multiple-screen-resolutions-in-monogame-for-android-part-1/", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5878/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5777", "title": "Getting \"Method not found: 'Void SharpDX.XAudio2.XAudio2..ctor\" on SoundEffect.Initialise - WindowsDX", "body": "Texting on a clean Windows 10 machine and getting an odd SharpDX2 XAudio error but only on the WindowsDX platform.\r\n\r\nUWP, Windows 8.1 compile fine.\r\n\r\nOn WindowsDX, the following error appears on calling SoundEffect.Initialise:\r\n\r\n> \t\tMessage\t\"Method not found: 'Void SharpDX.XAudio2.XAudio2..ctor(SharpDX.XAudio2.XAudio2Flags, SharpDX.XAudio2.ProcessorSpecifier)'.\"\tstring\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5761", "title": "Missing Texture2D.FromFile ?", "body": "In upgrading the ZiggyWare blog posts, I came across the good old Texture2D.FromFile method.\r\n\r\nI know this was a XNA 1 artifact but this seems a much easier function for users not using the content pipeline to use that the current Texture2D.FromStream\r\n\r\nAny reasons why we couldn't add such a method ?\r\n\r\nThis would simply wrap the existing FromStream function to actually load the texture from a stream safely and return the resultant Texture2D.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5751", "title": "Build and publish PR NuGet's to a new stream", "body": "It's getting tougher to test NuGet releases as they only show up on the current dev feed after they have been pulled.\r\n\r\nThis introduces some risk as they cannot be formally tested until after merge.\r\n\r\nWe should have another stream, like the dev release stream to test updated packages.  Granted this should also have a limited lifespan like the dev release, probably the last 10 builds or so (gives enough time to at least pull the package locally to test / verify)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5554", "title": "Content Pipeline Extension project referencing error in Visual Studio 2017", "body": "Please be seated before reading this.\r\n\r\nI've found what I suspect is a bug/change in VS2017 with the $(MSBuildExtensionsPath) variable we use in the Content Pipeline project.\r\n\r\nin 2015 and before, this correctly resolves to the MSBUILD folder on the dev machine.\r\n\r\nin 2017 however, this is resolving to the Windows 8 MonoGame folder???  so as the Content Pipeline project DLL is nto packages with / per platform, this reference fails.\r\n\r\nSo need to investigate further to see what's causing this and whether a template change is required or whether we await a Visual Studio fix.\r\n\r\n*On a side note\r\nI noticed we don't actually have a proper Content Pipeline DLL, only the PCL one.\r\nHaving a full CP NuGet and using that in the project reference may be another easy way to resolve the issue.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/91b5000f7bb7038748d4ceb78024c8013548d102", "message": "Fix to resolve XAML projects double registering CoreWindow (#6078)\n\nFixes #6072"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/157bdd9b3313be47eeebb882dfc8038f05b1c807", "message": "Fix to resolve Services registry issue for Core Application project (#6053)\n\nFixes #6052\r\n\r\nNeeded to move CoreWindow registration to later in the start process"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b1d389183bb6369461a003dceb188d3b39a4f238", "message": "Small PR to add the reference to the CoreWindow to the service library.  Replicating behaviour used in iOS/Android (#6038)\n\nNeeded for MR/HL support"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a703508ca036c243c37b3e5a6abf4c82a46e97f7", "message": "VS 2017 Core Application Template (matching new 2015 version) (#6037)\n\n* Added a VS 2017 version of the new \"Core Application\" template for Windows 10.\r\nRenamed and updated existing Win 10 XAML template to match 2015\r\n\r\n* Updated Application.csproj\r\n\r\n* patch Application.csproj"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b057ea3077301843ff90d1444e18c46732561e9f", "message": "Removed Win8 / WP8 from NuGet definitions (#5951)\n\nUpdated NuGet Sharp DX dependencies to 4.0.1"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/cea1359d96466670bff6b46d78513de6bc73f432", "message": "Added new NuGet's for Platform type builds: (#5799)\n\n* Added new NuGet's for Platform type builds:\r\n* MonoGame.Framework.DX.nuspec\r\n* MonoGame.Framework.OpenGL.nuspec\r\n\r\n* Changed Windows 10 / 8 target definitions as they were originally using the same generic target.\r\nAlso updated OpenGL NuSpec with build targets fixes.\r\n\r\n* Removed Net40 & Net45 from Mac target as they conflict with the CrossPlatformProject dependencies.\r\n\r\n* Tabs be gone at the request of @crazy\r\n\r\n* Ran through an XML format tool to standardise formatting between files.\r\n\r\n* Updated DX NuGet in line with #5825"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9d1f25f9fa2fd2971b6adc1ffb6260df78cb448e", "message": "Updating the DX packages to use SharpDX 3.1.1 thanks to #5825 (#5828)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/13c74a656af4b06f469b1b2bdf1f3890e61f448a", "message": "Updating the Windows DX NuGet package\n\nFixed the TargetPlatform Identifier in the .targets file (WindowsDX -> Windows)\n\nDowngraded the SharpDX reference from 3.0.0 -> 2.6.3 due to concerns with 3 on this platform"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b40a7beb93212888411306e73aaf5f50cb6ec516", "message": "Updated Windows DX based NuGets\n\nThe NuGet's now inherit SharpDX direct from NuGet instead of including the dll's directly"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5758", "title": "Added new Circle class with tests", "body": "After reviewing some old archives, came across Kris Steele\u200f\u00a0@KrisWD40 Circle class code, Sourced from http://krissteele.net/blogdetails.aspx?id=251\r\n\r\nSo with his permission, I thought this would be a nice addition to our intersection classes, like Rectangle and so on.  Granted it's pimped up a bit to include all the other standard comparators and intersects like Rectangle. \r\n\r\nAlso included a new Test class to validate it as well.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "daviatorstorm": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5876", "title": "Monogame and .Net Core 2.0", "body": "Will Monogame port/support .Net Core 2.0?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dumbme24": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5875", "title": "Unable to convert existing Monogame Framework Mac OS Classic Library Api to Monogame Framework Xamarin.Mac unified API", "body": "I am building a sample application in Xamarin Mac OSX (Xamarin.Mac Project) which need to use a Monogame Framework api Version 3.2.\r\n\r\nScenario 1 : When I simply build the Xamarin sample application (Xamarin.Mac)(without any additional implementation of Monogame funtionality) then the application gets compile without any error and shows the output.\r\n\r\nScenario 2 : When I build the application with additional implementation of Monogame,  the application gets compile without any error for Monogame version 3.6. (referencing Monogame.Framework.dll 3.6 version - from the nugget package).\r\n\r\nScenario 3 : Here now I am using compiled version of Monogame Framework 3.6 Source Code. When  I build my sample application with additional implementation of Monogame, the application gives error which is mentioned in title \r\n(The assembly \"XamMac.dll\" is not compatible with the tool or profile (MM1402)). \r\n -- (referencing Monogame.Framework.dll 3.6 version dll  by compiling the Monogame Framework Source Code in Visual Studio 2017 Community - 7.0.1 Build 24).\r\n\r\n3.A. The Monogame Framework Library Project is Migrated to the Xamarin Mac project by the Visual Studio before compilation.\r\n3.B. The monogame Framework Library project is compiled without Migration.\r\n\r\nIn scenario 3.A. It gives me an error.. \r\n - The assembly \"XamMac.dll\" is not compatible with the tool or profile (MM1402).\r\n\r\nIn Scenario 3.B it gives me an error..\r\n- The assembly \"MonoMac.dll\" is not compatible with the tool or profile (MM1402). \r\n\r\nI reproduced the similar issue for the nugget package manager Monogame Framework.dll 3.2,3.3 version as well Monogame Framework source code compiled version 3.2,3.3.\r\n\r\nBut there is a dependency of XamMac even after migration of the Monogame Framework Source Code to Xamarin.Mac.\r\n\r\nI tried to migrate the Monogame Framework Library Project to unified version by following the given steps here - \r\nhttps://developer.xamarin.com/guides/cross-platform/macios/unified/updating-mac-apps/\r\nBut I am not able to port the app to Xamarin.Mac by removing XamMac.dll dependency in app.\r\n\r\nAfter removal of warnings I was just able to see the option of \"Migration to Xamarin.Mac\" under project option.\r\nI did the migration to Xamarin.Mac .Net Framework 4.5 and then in project references I was able to see the Xamarin.Mac dll instead of XamMac.dll (which is good).\r\n\r\nBut after migration and compilation I am getting many errors (165) out of which I am able to resolve the ones are in Using directives but It\u2019s difficult to resolve other missing reference errors.\r\nI also tried it to migrate to Xamarin.Mac Mobile Framework but similar 163 errors I am getting after compilation.\r\n\r\nFor my MacOS Xamarin sample app project say \u201cABC\u201d (which is a unified Xamarin.Mac app) I am using reference of this compiled library project (Monogame.Framework.dll). And for that this Library project should not be XamMac.dll dependent but should be Xamarin.Mac migrated api.\r\n\r\nSome more findings and details for your reference.\r\n\r\n1. I need this Monogame Framework Library project dll 3.2 version because it has some old implementation which is actually supporting my Sample App ABC.\r\n\r\n2. If I do compile Monogame Framework 3.6 latest version library project, I get same issue with compilation because of XamMac.dll and migration.\r\n\r\n3. Monogame framework 3.6 version dll from nugget packet works well when I reference it in my sample app ABC without XamMac.dll error as in title \r\n(No idea how it has built/compiled after migration and how the Monogame team has resolved those 165 errors after Migration to XamarinMac unified API)).\r\n\r\n4. Standalone 3.2 version dll from nugget packet doesn\u2019t work well and gives the same error in title.\r\n\r\n5. I need Monogame framework 3.2 version to build/compile after migration to XamarinMac Unified API.\r\n\r\nKindly Let me know if you have any thoughts or workaround.\r\n\r\nThanks\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "codeimpossible": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5871", "title": "Clicking \"Build\" in MonoGame Pipeline Tool Causes Hard Crash", "body": "I'm unable to build any content files on OSX. Clicking build in the pipeline tool causes a hard crash to the desktop with the following exception. I've tried building empty content files as well, with the same results.\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\n  at System.ThrowHelper.ThrowArgumentOutOfRangeException (System.ExceptionArgument argument, System.ExceptionResource resource) [0x00011] in <f712f98eb8e445c8918edaf595bbe465>:0 \r\n  at System.ThrowHelper.ThrowArgumentOutOfRangeException () [0x00000] in <f712f98eb8e445c8918edaf595bbe465>:0 \r\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x0000c] in <f712f98eb8e445c8918edaf595bbe465>:0 \r\n  at MonoGame.Tools.Pipeline.BuildOutput.WriteLine (System.String line) [0x00362] in <be888ecf4d084c3fb27a3112a90a3ead>:0 \r\n  at MonoGame.Tools.Pipeline.MainWindow+<OutputAppend>c__AnonStorey0.<>m__0 () [0x00000] in <be888ecf4d084c3fb27a3112a90a3ead>:0 \r\n  at Eto.Mac.Forms.ApplicationHandler+<AsyncInvoke>c__AnonStorey1.<>m__0 () [0x00000] in <6935bfaad55f45f0828134dff8450a4b>:0 \r\n  at Foundation.NSAsyncActionDispatcher.Apply () [0x00002] in <088ca15f28ed485b8ec04e5baf83b5ec>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at (wrapper managed-to-native) AppKit.NSApplication:NSApplicationMain (int,string[])\r\n  at AppKit.NSApplication.Main (System.String[] args) [0x0003d] in <088ca15f28ed485b8ec04e5baf83b5ec>:0 \r\n  at Eto.Mac.Forms.ApplicationHandler.Run () [0x0004e] in <6935bfaad55f45f0828134dff8450a4b>:0 \r\n  at Eto.Forms.Application.Run (Eto.Forms.Form mainForm) [0x0002c] in <463463a5cc984159baa96b0b5047a712>:0 \r\n  at MonoGame.Tools.Pipeline.Program.Main (System.String[] args) [0x00070] in <be888ecf4d084c3fb27a3112a90a3ead>:0 \r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JoshuaLamusga": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5857", "title": "compiled mp3: SharpDXException The system cannot find the file specified", "body": "With MonoGame version 3.6, I get\r\n`SharpDX.SharpDXException: 'HRESULT: [0x80070002], Module: [Unknown], ApiCode: [Unknown/Unknown], Message: The system cannot find the file specified.`\r\n\r\nIn VS2017 using the _Monogame Windows Project_ template, with a properly-built Content.mgcb directory of files. The content pipeline has found the .xnb file associated with the song, but is throwing an exception for some other reason. Output contains both .wma and .xnb files for each song as expected.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5857/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BrainSlugs83": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5855", "title": "MonoGame 3.6 UWP Template is broken for VB.NET", "body": "So, I recently re-imaged my dev. machine with the latest Windows 10 Creators Update -- so my machine is pretty raw/clean.\r\n\r\nI've got Visual Studio 2015, Update 3 -- and I've just pulled down Monogame 3.6 from the official website / installer.\r\n\r\nI immediately try to Create a new Monogame project -- and I accidentally selected the VB.NET version without realizing it (instead of C#) -- but I figured, what the heck, let's give this a try.\r\n\r\nUpon build, it pulled down a bunch of NuGet packages, and then immediately failed with the following error:\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tPayload file 'C:\\Users\\Mikey\\.nuget\\packages\\MonoGame.Framework.WindowsUAP\\3.4.0.459\\lib\\netcore\\MonoGame.Framework\\MonoGame.Framework.xr.xml' does not exist.\tRenderSomething\t\t\t\r\n```\r\n\r\nIt seems to me like, maybe the vbproj file is referencing MonoGame 3.4? -- Maybe this might even work if I'd also had MonoGame 3.4 installed. -- But, I bet that might lead to some interesting issues on its own.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rkusyapkulov": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5847", "title": "MonoGame and UWP", "body": "Hello,\r\n\r\nI have problem by building my UWP app using VS2015 SP3 and MonoGame 3.6.\r\n The compiler probably produce wrong code, if \"Compile with .NET Native tool chain\" is active.\r\n If I disable this feature, then all working fine.\r\n\r\nIt happened only, if I create a final windows store package.\r\n The DEBUG and RELEASE builds working fine, if I deploy and start app from debugger.\r\n But if I create a final windows store package with active \"Compile with .NET Native tool chain\" and manual install,\r\n then by start my app showing only SplashScreen and then app be terminated.\r\n\r\nIf I disable \"Compile with .NET Native tool chain\" and create a final windows store package,\r\n then my app working fine by manual install too.\r\n\r\nThe x86 and x64 packages working fine.\r\n It's looked that problem only under ARM.\r\n\r\nMy app using last MonoGame Framework version 3.6 .\r\n To reproduce problem enough to  create a default (empty) MonoGame Windows 10 Universal Project.\r\n Then activate \"Compile with .NET Native tool chain\" and create a final windows store package.\r\n After build, try to manual install ARM package to any windows phone.\r\n After start app - it show only SplashScreen and then app be terminated.\r\n If you disable \"Compile with .NET Native tool chain\" and create a final windows store package.\r\n Then by manual install all working fine.\r\n\r\nI found similar issues:\r\nhttps://github.com/aspnet/EntityFramework/issues/6253\r\nhttps://github.com/aspnet/EntityFramework/issues/6027\r\nhttps://stackoverflow.com/questions/43530071/how-to-fix-app-submission-error-of-1300\r\n\r\nbut no any solutions not help to resolve this problem.\r\n\r\nMy question is how I can resolve this problem ?\r\n\r\nDid somebody successful generated a submitt any monogame app to MS and successful go thru submission?\r\n\r\nthanks,\r\n\r\n\r\nPS: I just tested with last developer build 3.7.0.678. It's same problem !\r\n\r\nI asked help on MS forum: https://social.msdn.microsoft.com/Forums/Windowsapps/en-US/0e3dd982-8458-4dce-a513-b51847d8dddf/monogame-and-uwp?forum=wpdevelop\r\nBut they not can or not want to help us resolve this problem :-( ...", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kloda": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5845", "title": "Setting hlsl array elements", "body": "It doesn't work to set individual array elements like this:\r\n\r\n`effectParameter.Elements[x].SetValue(value);`\r\n\r\nIf I understand the code correctly, the ConstantBuffer.Update method checks StateKey to see if a parameter needs updating, and it does so for root parameters only, not caring if an array's elements have been set.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6097", "title": "Binary search for curve evaluation", "body": "In `Curve.Evaluate`, instead of looping through the keys to find those surrounding the evaluation point, I tried a binary search. It reduced the vertex buffer creation time for a large scene from a few seconds to around one second. For debug builds it went from minutes to a few seconds.\r\n\r\nSince the underlying List container `Curve._keys._keys` (ie. `CurveKeyCollection._keys`) is private I had to make a public method `CurveKeyCollection.IndexAtPosition` in which I do the search.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5956", "title": "Enable updating of individual hlsl array elements.", "body": "Fix for #5845.\r\nChecks a parameter's `StateKey` in `ConstantBuffer.SetData`, which is called for every array element.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RefactoredGames": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5839", "title": "Only the first instance of VideoPlayer can play video", "body": "Only the first instance of VideoPlayer that gets created can play a video. The next instances fail with the error \"cannot start video\".\r\n\r\n```\r\nVideoPlayer player = new VideoPlayer();\r\n        player.Play(video); \r\n\r\n        player.Stop();\r\n        player.Dispose();\r\n\r\n// try a 2nd time:\r\n        player = new VideoPlayer();\r\n        player.Play(video); //<-- throws exception \"cannot start video\"\r\n```\r\n\r\nA workaround is to create a single (static) VideoPlayer and only use that one.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spunky44": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5834", "title": "Multisampled Texture2D.GetData() throws Invalid arguments exception", "body": "It seems multisampled textures will crash if you try to save a rendertarget as a png, for instance.\r\n\r\n```\r\nHRESULT: [0x80070057], Module: [General], ApiCode: [E_INVALIDARG/Invalid Arguments]\r\n   ved SharpDX.Result.CheckError()\r\n   ved SharpDX.Direct3D11.Device.CreateTexture2D(Texture2DDescription& descRef, DataBox[] initialDataRef, Texture2D texture2DOut)\r\n   ved SharpDX.Direct3D11.Texture2D..ctor(Device device, Texture2DDescription description)\r\n   ved Microsoft.Xna.Framework.Graphics.Texture2D.PlatformGetData[T](Int32 level, Int32 arraySlice, Rectangle rect, T[] data, Int32 startIndex, Int32 elementCount) i C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\MonoGame\\MonoGame.Framework\\Graphics\\Texture2D.DirectX.cs:linje 138\r\n   ved Microsoft.Xna.Framework.Graphics.Texture2D.GetData[T](Int32 level, Int32 arraySlice, Nullable`1 rect, T[] data, Int32 startIndex, Int32 elementCount) i C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\MonoGame\\MonoGame.Framework\\Graphics\\Texture2D.cs:linje 206\r\n   ved Microsoft.Xna.Framework.Graphics.Texture2D.GetData[T](Int32 level, Nullable`1 rect, T[] data, Int32 startIndex, Int32 elementCount) i C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\MonoGame\\MonoGame.Framework\\Graphics\\Texture2D.cs:linje 221\r\n   ved Microsoft.Xna.Framework.Graphics.Texture2D.GetData[T](T[] data) i C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\MonoGame\\MonoGame.Framework\\Graphics\\Texture2D.cs:linje 247\r\n   ved MonoGame.Utilities.Png.PngWriter.GetColorData(Texture2D texture2D) i C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\MonoGame\\MonoGame.Framework\\Utilities\\Png\\PngWriter.cs:linje 227\r\n   ved MonoGame.Utilities.Png.PngWriter.Write(Texture2D texture2D, Stream outputStream) i C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\MonoGame\\MonoGame.Framework\\Utilities\\Png\\PngWriter.cs:linje 36\r\n   ved Microsoft.Xna.Framework.Graphics.Texture2D.PlatformSaveAsPng(Stream stream, Int32 width, Int32 height) i C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\MonoGame\\MonoGame.Framework\\Graphics\\Texture2D.DirectX.cs:linje 311\r\n   ved Microsoft.Xna.Framework.Graphics.Texture2D.SaveAsPng(Stream stream, Int32 width, Int32 height) i C:\\Users\\User\\Documents\\Visual Studio 2017\\Projects\\MonoGame\\MonoGame.Framework\\Graphics\\Texture2D.cs:linje 294\r\n\r\n```\r\n\r\nThe exception is thrown here:\r\n\r\n```\r\nprivate void PlatformGetData<T>(int level, int arraySlice, Rectangle rect, T[] data, int startIndex, int elementCount) where T : struct\r\n        {\r\n            // Create a temp staging resource for copying the data.\r\n            // \r\n            // TODO: We should probably be pooling these staging resources\r\n            // and not creating a new one each time.\r\n            //\r\n            var min = _format.IsCompressedFormat() ? 4 : 1;\r\n            var levelWidth = Math.Max(width >> level, min);\r\n            var levelHeight = Math.Max(height >> level, min);\r\n\r\n            if (_cachedStagingTexture == null)\r\n            {\r\n                var desc = new Texture2DDescription();\r\n                desc.Width = levelWidth;\r\n                desc.Height = levelHeight;\r\n                desc.MipLevels = 1;\r\n                desc.ArraySize = 1;\r\n                desc.Format = SharpDXHelper.ToFormat(_format);\r\n                desc.BindFlags = BindFlags.None;\r\n                desc.CpuAccessFlags = CpuAccessFlags.Read;\r\n                desc.SampleDescription = CreateSampleDescription();\r\n                desc.Usage = ResourceUsage.Staging;\r\n                desc.OptionFlags = ResourceOptionFlags.None;\r\n\r\n                // Save sampling description.\r\n                _sampleDescription = desc.SampleDescription;\r\n\r\n                _cachedStagingTexture = new SharpDX.Direct3D11.Texture2D(GraphicsDevice._d3dDevice, desc); <- line that crashes\r\n            }\r\n\r\n```\r\n\r\n\r\nhttp://community.monogame.net/t/multisampled-texture2d-saveaspng-crashes/9492\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PERECil": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5824", "title": "MonoGame Pipeline Tool GUI crash", "body": "Hello,\r\n\r\nI have this weird crash on the pipeline tool gui when right clicking an selecting \"Open\" on an XML file. I tested with other files types (wave, spritefont) and the tool doesn't crash.\r\n\r\nThat's maybe **due to the file association for XML being not set in Windows** (the file association configuration panel shows \"Unknown application\" (not sure of the translation, my OS is set to french), because after setting an application, the pipeline tool GUI doesn't crash anymore.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5808", "title": "Add support for arrow keys in GameWindow.TextInput", "body": "After correcting my setup for #5806, I finally found out that `Keys.Back` key was supported, and the `Keys.Delete` key too. **However, I wasn't able to make the arrows keys functioning**.\r\n\r\nUsually, when you're editing some text, you are able to navigate in a `Textbox` control using the arrows keys (left-right in a simple text box, up and down in a multi-line text-area).\r\n\r\nCould it be possible to implement the support for them? (and other keys like insert/home/end/page-up/page-down would be great too).", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5770", "title": "MGCB.exe crashes when a ContentTypeWriter for a specific type can not be found.", "body": "In the process of writing a new importer, I voluntarily forgot to write the `ContentTypeWriter` associated with the output type of the `ContentProcessor`. It made the MGCB tool crash. \r\n\r\nWe need to have an error instead of a crash.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5769", "title": "MonoGame content pipeline extension project build failure when Pipeline.exe is opened", "body": "My setup is the following:\r\n\r\nI have a MonoGame solution containing a game project, and a content pipeline extension project. The content pipeline extension project is referenced as an external dependency in `Content.mgcb`.\r\n\r\nWhen the `pipeline.exe` tool is opened, I can not build the project, as it seems that the tool keeps a reference to the content pipeline extension dll, and Visual Studio fails to overwrite the content pipeline dll.\r\n\r\nWould it be possible to read the new importers / processors from the library, cache it in the tool and then release the dll? A nice feature would be to add some kind of \"watcher\" that checks if the dll has changed and reload the list of importers and processors...", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5769/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5409", "title": "ArrayOutOfRangeException when loading .wav files", "body": "I found out that MonoGame is unable to use wav files that are sampled at more than 44khz. The content processor is able to process those files, but when you try to load the file as a `SoundEffect`, an `ArrayOutOfRangeException` is thrown in `Content.Load<SoundEffect>( ... )`.\r\n\r\nDownsampling the wav file from 96khz to 44khz resolved the issue, but it would be great either if:\r\n\r\n- The framework accepted 96khz wav files\r\n- The content processor would issue an error that the sampling used by the file is not supported.\r\n- The content processor would issue a warning and downsample the file by itself.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "willmotil": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5788", "title": "Proposal for a irregular shaped rectangle Draw call to be added to spritebatch.", "body": "This is a proposal for the implementation and discussion, of a irregular rectangle draw call or in reality a spritebatched quad type draw overload to be added to spritebatch. \r\n\r\nI had previously mentioned this on the wishlist http://community.monogame.net/t/monogame-feature-wishlist/6850/171 , there has been some speak of it here and there on occasion but i wanted to make a formalized request for it here.\r\n\r\nThis would add to the functionality of spritebatch in a big way with a small change.\r\n\r\nEssentially you would gain the ability to have things like trapzoids rombus ect and irregular 2d geometric draws. This would be done like any existing spriteBatch.Draw( ... ) call does currently.\r\n\r\n<img src=\"https://qph.ec.quoracdn.net/main-qimg-98166276b744a923fb269438244e2d96\" alt=\"\">\r\n\r\nSince this functionality is natural to these classes it is very easy to add it.\r\n\r\nSome (untested) psuedo code is given (_which is less pesudo code then it is a trimmed down existing Draw call_) with different paremeters. Additionally this example shows a addition of a Third set(...) method in SpriteBatchItem which this draw call would use.\r\n\r\n```\r\n\r\n        // In SpriteBatch\r\n        // https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Graphics/SpriteBatch.cs\r\n\r\n        /// <summary>\r\n        /// Submit a sprite for drawing in the current batch.\r\n        /// Altered for irregular shaped rectangles i.e. quads.\r\n        /// Shows eliminations for a more functional draw.\r\n        /// It might be nice to have color 0 1 2 3 but that would fatten it up a bit more\r\n        /// </summary>\r\n        public void Draw(\r\n            Texture2D texture,\r\n            Vector2 TL, Vector2 TR, Vector2 BR, Vector2 BL,\r\n            Rectangle? sourceRectangle,\r\n            Color color,\r\n            float layerDepth)\r\n        {\r\n            CheckValid(texture);\r\n\r\n            var item = _batcher.CreateBatchItem();\r\n            item.Texture = texture;\r\n\r\n            // set SortKey based on SpriteSortMode.\r\n            switch (_sortMode)\r\n            {\r\n                // Comparison of Texture objects.\r\n                case SpriteSortMode.Texture:\r\n                    item.SortKey = texture.SortingKey;\r\n                    break;\r\n                // Comparison of Depth\r\n                case SpriteSortMode.FrontToBack:\r\n                    item.SortKey = layerDepth;\r\n                    break;\r\n                // Comparison of Depth in reverse\r\n                case SpriteSortMode.BackToFront:\r\n                    item.SortKey = -layerDepth;\r\n                    break;\r\n            }\r\n\r\n            // Source rectangle could be kept for efficiency instead of passing Vector uv's\r\n            // origin isn't needed now.\r\n            if (sourceRectangle.HasValue)\r\n            {\r\n                var srcRect = sourceRectangle.GetValueOrDefault();\r\n                _texCoordTL.X = srcRect.X * texture.TexelWidth;\r\n                _texCoordTL.Y = srcRect.Y * texture.TexelHeight;\r\n                _texCoordBR.X = (srcRect.X + srcRect.Width) * texture.TexelWidth;\r\n                _texCoordBR.Y = (srcRect.Y + srcRect.Height) * texture.TexelHeight;\r\n            }\r\n            else\r\n            {\r\n                _texCoordTL = Vector2.Zero;\r\n                _texCoordBR = Vector2.One;\r\n            }\r\n\r\n            // We dont need SpriteEffects when manually passing vertices.\r\n            // We are responsible for passing them in the order we desire.\r\n            // We can just pass the vertices in different orders to replace SpriteEffects\r\n\r\n            // We do however need a additional set overloaded method in SpriteBatchItem.cs\r\n\r\n            item.Set\r\n                (\r\n                TL,\r\n                TR,\r\n                BL,\r\n                BR,\r\n                color,\r\n                _texCoordTL,\r\n                _texCoordBR,\r\n                layerDepth\r\n                );\r\n\r\n            FlushIfNeeded();\r\n        }\r\n\r\n        // in  MonoGame/MonoGame.Framework/Graphics/SpriteBatchItem.cs\r\n        // https://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Graphics/SpriteBatchItem.cs#L60\r\n\r\n        \r\n        public void Set(Vector2 TL, Vector2 TR, Vector2 BL, Vector2 BR, Color color, Vector2 texCoordTL, Vector2 texCoordBR, float depth)\r\n        {\r\n            vertexTL.Position.X = TL.X;\r\n            vertexTL.Position.Y = TL.Y;\r\n            vertexTL.Position.Z = depth;\r\n            vertexTL.Color = color;\r\n            vertexTL.TextureCoordinate.X = texCoordTL.X;\r\n            vertexTL.TextureCoordinate.Y = texCoordTL.Y;\r\n\r\n            vertexTR.Position.X = TR.X;\r\n            vertexTR.Position.Y = TR.Y;\r\n            vertexTR.Position.Z = depth;\r\n            vertexTR.Color = color;\r\n            vertexTR.TextureCoordinate.X = texCoordBR.X;\r\n            vertexTR.TextureCoordinate.Y = texCoordTL.Y;\r\n\r\n            vertexBL.Position.X = BL.X;\r\n            vertexBL.Position.Y = BL.Y;\r\n            vertexBL.Position.Z = depth;\r\n            vertexBL.Color = color;\r\n            vertexBL.TextureCoordinate.X = texCoordTL.X;\r\n            vertexBL.TextureCoordinate.Y = texCoordBR.Y;\r\n\r\n            vertexBR.Position.X = BR.X;\r\n            vertexBR.Position.Y = BR.Y;\r\n            vertexBR.Position.Z = depth;\r\n            vertexBR.Color = color;\r\n            vertexBR.TextureCoordinate.X = texCoordBR.X;\r\n            vertexBR.TextureCoordinate.Y = texCoordBR.Y;\r\n        }\r\n```\r\n\r\nMy personal foremost functional use for this would be text related.\r\nHowever im sure that many creative people would find unforeseeable uses for such functionality.\r\n\r\nhttp://community.monogame.net/t/fastest-way-to-draw-lots-of-simple-mesh-as-possable/9413\r\n\r\nAnyways i posted this for any thoughts comments or just to show the basic premise of the simplicity of the code changes involved.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5781", "title": "Video player request and problem.", "body": "The video player really needs a way to set position. \r\nIt should have that, as it is standard functionality for a video player.\r\n\r\nAdditionally... \r\n\r\nIt seems that some video's wouldn't play even after being processed thru the pipeline. Ill get a null texture returned over and over for some videos. \r\n\r\nHowever using ffmpeg thru the command line i have been testing re-encoding videos to get them to play. Pretty much most videos that i have re-encoded thru ffmpeg seem to work after the pipline processes them. (_Many that didn't prior to being re-encoded i.e. just built by the pipeline.)_\r\n\r\nThis is the ffmpeg re-encoding command that seems to work the best for preproccessing mp4s before adding them to the content pipeline. \r\n\r\n\"ffmpeg -y -i\" + \" \" + inputFilePath + \" \"\r\n**\"-c:v libx264 -profile:v main -level:v 3.0 -ab 128k -vf fps=30 -s 320x240 -c:a copy\"** \r\n\" \" + outputFilePath\r\n\r\nWhat the major criteria is for it to work or not i cant seem to pinpoint. Im thinking its the bitrate but i dunno.\r\nIf anyone  can shed some light on what the preferred encoding is for video's it would be much appreciated.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5757", "title": "VideoPlayer Resume() on DesktopGL throws error.", "body": "The video player starts then stops then restarts fine.\r\nI can pause it and then stop it, then, hit play again and it still works. \r\nHowever, i can't pause then, resume it, because it throws a error.\r\n\r\nThis on windows7 using the desktop gl solution.\r\n\r\n> // An unhandled exception of type 'SharpDX.SharpDXException' occurred in SharpDX.dll\r\n>                     // Additional information: HRESULT: [0x80004003], Module: [General], ApiCode: [E_POINTER/Invalid pointer], Message: **Invalid pointer**\r\n\r\nIn addition it maybe leaking memory at least there are garbage collections occuring.\r\nAbout 128 kb per second in my test run, with a heartbeat of about 8 kb's of garbage per second.\r\n\r\nHere is my console output of a test run.\r\n\r\n> clicked boxinbox_C0-(PlayVideo) No children, OnClick: Action will fire\r\n> >PlayVideo< status StoppedVideo, State:: Stopped\r\n> \r\n> clicked boxinbox_C1-(PauseVideo) No children, OnClick: Action will fire\r\n> >PauseVideo< status PlayingVideo, State: Playing\r\n> **-player.Pause();  result: Playing**\r\n> \r\n> clicked boxinbox_C2-(StopVideo) No children, OnClick: Action will fire\r\n> >PauseVideo< status PaudedVideo, State: Paused\r\n> -player.Stop();  result: Stopped\r\n> \r\n> clicked boxinbox_C0-(PlayVideo) No children, OnClick: Action will fire\r\n> >PlayVideo< status StoppedVideo, State:: Stopped\r\n> \r\n> clicked boxinbox_C1-(**PauseVideo**) No children, OnClick: Action will fire\r\n> >PauseVideo< status PlayingVideo, State: Playing\r\n> -player.Pause();  result: Paused\r\n> \r\n> clicked boxinbox_C0-(**PlayVideo**) No children, OnClick: Action will fire\r\n> >PlayVideo< **status PausedVideo, State:: Paused**\r\n\r\nthis last command is actually Play or Resume its Resume() in this case and it always throws the error.\r\n\r\n```\r\n        public static void PlayOrResumeVideo()\r\n        {\r\n            if (isPlayerInitialized == false)\r\n            {\r\n                videoFrameTexture = Gv.dotTexture;\r\n                player = new VideoPlayer();\r\n                isPlayerInitialized = true;\r\n            }\r\n            else\r\n            {\r\n                if (player.State == MediaState.Paused)\r\n                {\r\n                    Console.WriteLine(\">PlayVideo< status PausedVideo, State:: \" + player.State.ToString());\r\n                    // could be null or its stopped\r\n                    player.Resume(); \r\n                    // An unhandled exception of type 'SharpDX.SharpDXException' occurred in SharpDX.dll\r\n                    // Additional information: HRESULT: [0x80004003], Module: [General], ApiCode: [E_POINTER/Invalid pointer], Message: Invalid pointer\r\n                }\r\n                if (player.State == MediaState.Stopped)\r\n                {\r\n                    Console.WriteLine(\">PlayVideo< status StoppedVideo, State:: \" + player.State.ToString());\r\n                    // could be null or its stopped\r\n                    player.Play(video); // sometimes throws \"cannot start video\"\r\n                }\r\n                Console.WriteLine();\r\n            }\r\n        }\r\n        public static void PauseVideo()\r\n        {\r\n            if (isPlayerInitialized)\r\n            {\r\n                if (player.State == MediaState.Playing)\r\n                {\r\n                    Console.WriteLine(\">PauseVideo< status PlayingVideo, State: \" + player.State.ToString());\r\n                    player.Pause();\r\n                    Console.WriteLine(\"-player.Pause();  result: \" + player.State.ToString());\r\n                    // State returns that it is playing\r\n                }\r\n                Console.WriteLine();\r\n            }\r\n        }\r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5484", "title": "Request to expose Texel Width Height getter in Texture2D", "body": "Tom nkast jjag or whoever is working on this atm. \r\nCan we expose the getter on the two properties for texel width height in Texture2D.\r\n\r\ninternal float TexelWidth { get; private set; }\r\ninternal float TexelHeight { get; private set; }\r\n\r\nto simply\r\n\r\npublic float TexelWidth { get; private set; }\r\npublic float TexelHeight { get; private set; }\r\n\r\nThis is extremely useful when exposed for all texture2d custom vertex uv element assignments, for calculating source rectangles image pixel coordinates to uv positions.\r\n\r\nWe already have Width Height exposed so a user could keep recalculating the reciprocal for each texture himself but... It would be nice however to expose the getter on this since its there already and only ever really needs to be calculated and set when it the texture itself is created or recreated. \r\nA public getter here is a mini feature.\r\n\r\n_If this is a matter of hesitation on deciding on a final name just call it by its math proper name.\r\nOr whatever id like to be able to use that though outside of a source build._ \r\n\r\nWidthReciprocal.\r\nHeightReciprocal.\r\n\r\n\r\nhttps://www.mathsisfun.com/reciprocal.html\r\n\r\n> _Though the result is essentially used as a coefficient. \r\n> Your getting a reciprocal so i guess that is clearer besides that's what the descriptions for.\r\n> e.g. \r\n> ///\r\n> /// Returns the textures width reciprocal. \r\n> /// This value is commonly used as a coefficient against image texel positions to find uv coordinates\r\n> ///_\r\n> \r\n\r\nBtw the other associated classes to spritebatch look a lot lot better. \r\nThough spritebatch is really fat now lol.\r\n\r\n**One more thing.**\r\n\r\nI was wondering if we could get a set of vectors in the glyph class that directly relates to the uv bounds of each glyph. \r\nA) Since each spritefont builds its glyphs based on a single texture. \r\nB) Since each texture has but one texel coefficient which is created with the loaded spritefont. \r\nC) Then each glyph should directly have its source uv vectors stored per glyph. \r\nBesides the bounds, those constructed uv vectors can be directly placed into the vertex uv's, LT LB RT RB. \r\nThere really is no point in calculating them from the glyph bounds at all in the draw, even with a single multiply.\r\nBecause we look up the glyph per character anyways, and those char source uv's like and which are created from the char source bounds, will never change after being loaded for each font. \r\nTo say they are per font per char constructs and are not dynamic.\r\n\r\n```\r\npublic struct Glyph\r\n    {\r\n        /// <summary>\r\n        /// The char associated with this glyph.\r\n        /// </summary>\r\n        public char Character;\r\n        /// <summary>\r\n        /// Rectangle in the font texture where this letter exists.\r\n        /// </summary>\r\n        public Rectangle BoundsInTexture;\r\n\r\n        // The uv bounds of this glyph in the texture\r\n        // e.g when glyph is created LT = new Vector2( BoundsInTexture.X * texture.TexelWidth, ... )\r\n\r\n        public Vector2 LT;  \r\n        public Vector2 LB;\r\n        public Vector2 RT;\r\n        public Vector2 RB;\r\n\r\n        .... ect....\r\n\r\n       // The below in drawstring then gets shorted to a lookup for a already looked up glyph.\r\n\r\n\tpublic void DrawString ( \r\n        ....\r\n\r\n       _texCoordTL.X = currentGlyph.BoundsInTexture.X * spriteFont.Texture.TexelWidth;\r\n       _texCoordTL.Y = currentGlyph.BoundsInTexture.Y * spriteFont.Texture.TexelHeight;\r\n       _texCoordBR.X = (currentGlyph.BoundsInTexture.X + currentGlyph.BoundsInTexture.Width) * spriteFont.Texture.TexelWidth;\r\n       _texCoordBR.Y = (currentGlyph.BoundsInTexture.Y + currentGlyph.BoundsInTexture.Height) * spriteFont.Texture.TexelHeight;\r\n\r\n      // to\r\n      _texCoordTL = currentGlyph.LT;\r\n      _texCoordBR = currentGlyph.RB; \r\n\r\n```\r\n        ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ItsEddie": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5787", "title": "An unhandled exception of type 'System.NullReferenceException' occurred in MonoGame.Framework.dll", "body": "Hey Monogame,\r\n\r\nI may be missing something very obvious. I'm working on a small little engine to deploy on top of Monogame, and I accidently messed up my code. I've re-downloaded the source code from my Github project, however, upon launch (and fixing some of the normal resource missing issues), it seems to throw a very vague and arbitrary error with no indication to what is causing the issue.\r\n\r\n`An unhandled exception of type 'System.NullReferenceException' occurred in MonoGame.Framework.dll`\r\n\r\nOn \r\n\r\n`public MonoGame()`\r\n\r\nMonoGame() is the class that derives from `Game`, in a new project that 'd be `Game1 : Game`. The error **is not** thrown on anything **in** the MonoGame() function.\r\n\r\nI've removed and added different versions and platforms of Monogame, even downloaded the Nuget version but to no prevail. \r\n\r\n`System.NullReferenceException was unhandled\r\n  HResult=-2147467261\r\n  Message=Object reference not set to an instance of an object.\r\n  Source=MonoGame.Framework\r\n  StackTrace:\r\n       at Microsoft.Xna.Framework.MetroGamePlatform..ctor(Game game)\r\n       at Microsoft.Xna.Framework.GamePlatform.PlatformCreate(Game game)\r\n       at Microsoft.Xna.Framework.Game..ctor()\r\n       at Monogame_Engine_Library.MonoGame..ctor() in C:\\Users\\Gebruiker\\Desktop\\Monogame-GameMaker-Engine-master\\Monogame Engine Library\\MonoGame.cs:line 79\r\n       at Monogame_Engine.ExampleGame..ctor()\r\n       at Monogame_Engine.Program.Main() in C:\\Users\\Gebruiker\\Desktop\\Monogame-GameMaker-Engine-master\\Monogame Engine\\Program.cs:line 17\r\n       at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\r\n       at System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)\r\n       at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()\r\n       at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n       at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n       at System.Threading.ThreadHelper.ThreadStart()\r\n  InnerException: `\r\n\r\nI'm running on **Windows 10** and have heard some users having similar problems in **Windows 8**.\r\n\r\n1. Remove debug/bin folders. **Doesn't work.**\r\n2. Remove and add back Monogame DLL. **Doesn't work.**\r\n3. Change platform target from x86 to Any CPU / Vice Versa. **Doesn't work.**\r\n\r\n## Update\r\nAfter removing the downloaded source, and re-extracting it, I've finally come one step forward and now it throws the error at the 'Content' class, which strangely enough equals to null. \r\n\r\n`\r\n\r\n        /// <summary>\r\n        /// Example Game constructor.\r\n        /// </summary>\r\n        public MonoGame()\r\n        {\r\n            GraphicsDeviceManager = new GraphicsDeviceManager(this);\r\n            GraphicsDeviceManager.PreparingDeviceSettings += GraphicsDeviceManager_PreparingDeviceSettings;\r\n            Content.RootDirectory = \"Content\";\r\n        }\r\n\r\n`\r\n\r\n`{\"Object reference not set to an instance of an object.\"}`\r\nMonoGame.Framework (Version 3.6.0.1625, Runtime v4.0.30319, Specific Version: No) \r\n\r\n## Issue Resolved\r\nAlright, so once re-extracted, the error was thrown even more specifically after restarting. This time I discovered that it was not loading .xnb but it was loading .fx files. Now whether or not this is a Monogame issue I'm not sure of - in any case the debugger plainly refused to show me the origin of the error, and lead me to believe the Game class itself was broken.\r\n\r\nAs to how to solve this - I'm not sure, I suppose I was lucky.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5787/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JPCZ44": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5784", "title": "dpiAware for DestopGL does not work", "body": "I need to keep window size / resolution on computers where is enabled scaling of text and apps to more than 100% (in Windows display settings) - typical on 4K monitors. I was trying to use app.manifest with: \r\n\r\n```\r\n<application xmlns=\"urn:schemas-microsoft-com:asm.v3\">\r\n    <windowsSettings>\r\n\t<dpiAware xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">false</dpiAware>\r\n   </windowsSettings>\r\n</application>\r\n```\r\n\r\nManifest is selected in project properties and solution is rebuilded, but nothing happens. It is same if I have there false or true/pm option. Game window is still resized by Windows.  \r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5783", "title": "TargetElapsedTime for high FPS causes slow down of game (DesktopGL)", "body": "I am using _TargetElapsedTime_ to cap max FPS to some value. When I am using it for FPS around 30 or 60 it works good, bud when I want to limit FPS on higher values like 300 or 500 it causes slow down to 20 - 5 FPS. \r\n\r\nIm using it like this:\r\n\r\n`TargetElapsedTime = TimeSpan.FromSeconds(1f / maxFPS);`\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5695", "title": "SynchronizeWithVerticalRetrace does not work during game in OpenGL on Windows (ver. 3.6)", "body": "I switch our project to version 3.6 of Monogame (OpenGL on Windows) and i found that GraphicsDeviceManager.SynchronizeWithVerticalRetrace does not work anymore.\r\n\r\nIt works just on Initialization state - there I can set SynchronizeWithVerticalRetrace successfully, but when I am trying switch synchronisation during the game - nothing happened. I am calling GraphicsDeviceManager.ApplyChanges() but it stay unchanged.\r\n\r\nIn old version 3.5 it works properly.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mdhausman": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5782", "title": "Monogame 3.6 Linux DesktopGL: NoSuitableGraphicsDeviceException", "body": "I tried to make a thread for this on the community forums, but no amount of finagling with the title got me through the title filter :frowning_face:\r\n\r\nI'm trying to start up a barebones MonoGame project in JetBrains Rider, because MonoDevelop was giving me a headache. Just a really basic, \"open a cornflower blue window\" project to get started with. The code is lifted from https://gist.github.com/RetrocadeNet/51dfdaf5609285241a9f812c9b8ee06b, only the name of the game has changed.\r\n\r\nTutorials for working with MonoGame in Ubuntu are basically nonexistent, but I'm running Ubuntu 16.04 and have installed MonoGame.Framework.DesktopGL v3.6.0.1625 as well as MonoGame.Content.Builder v3.6.0.1 through NuGet.\r\n\r\nBut running just gives me this error. It seems the `System.EntryPointNotFoundException` is coming from the GraphicsDevice and is showing up in my debugger even before I call `_graphics = new GraphicsDeviceManager(this)`.\r\n\r\nCould it be an issue with my graphics card or driver? I've got a GTX 1060 and I'm running the nvidia 375.66 linux driver which should have OpenGL 4 support. So I'm a little puzzled.\r\n\r\nStack trace follows\r\n\r\n```\r\nUnhandled Exception:\r\nMicrosoft.Xna.Framework.Graphics.NoSuitableGraphicsDeviceException: Failed to create graphics device! ---> System.EntryPointNotFoundException: SDL_SetWindowResizable\r\n  at (wrapper managed-to-native) Sdl+Window:SetResizable (intptr,bool)\r\n  at Microsoft.Xna.Framework.SdlGameWindow.CreateWindow () [0x00098] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.PlatformInitialize (Microsoft.Xna.Framework.Graphics.PresentationParameters presentationParameters) [0x000d8] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.Initialize () [0x00023] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice () [0x00011] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n   --- End of inner exception stack trace ---\r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice () [0x00036] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.Microsoft.Xna.Framework.IGraphicsDeviceManager.CreateDevice () [0x00000] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.Game.DoInitialize () [0x00016] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.Game.Run (Microsoft.Xna.Framework.GameRunBehavior runBehavior) [0x0002d] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.Game.Run () [0x0000c] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at FirstMate.Program.Main () [0x00007] in <adcb49decfc74620a86dd74f00c4f305>:0 \r\n[ERROR] FATAL UNHANDLED EXCEPTION: Microsoft.Xna.Framework.Graphics.NoSuitableGraphicsDeviceException: Failed to create graphics device! ---> System.EntryPointNotFoundException: SDL_SetWindowResizable\r\n  at (wrapper managed-to-native) Sdl+Window:SetResizable (intptr,bool)\r\n  at Microsoft.Xna.Framework.SdlGameWindow.CreateWindow () [0x00098] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.PlatformInitialize (Microsoft.Xna.Framework.Graphics.PresentationParameters presentationParameters) [0x000d8] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.Initialize () [0x00023] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice () [0x00011] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n   --- End of inner exception stack trace ---\r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice () [0x00036] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.GraphicsDeviceManager.Microsoft.Xna.Framework.IGraphicsDeviceManager.CreateDevice () [0x00000] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.Game.DoInitialize () [0x00016] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.Game.Run (Microsoft.Xna.Framework.GameRunBehavior runBehavior) [0x0002d] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at Microsoft.Xna.Framework.Game.Run () [0x0000c] in <c31673e23fbb4b338ace0c0a31a4b94e>:0 \r\n  at FirstMate.Program.Main () [0x00007] in <adcb49decfc74620a86dd74f00c4f305>:0 \r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yolan51": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5765", "title": "Slowness in starting for Blank Page project ", "body": "I'm on Visual Studio 2017, AMD Phenom 2 x4 965 3,4Ghz , directX up to date , NetFramework up to date , Nvidia Geforce 750 Ti up to date. Windows Pro 64 bit.\r\n\r\nA 4 year old computer but still it shouldn't mather for 2d graphics.\r\n\r\n I installed Monogame version 3.6. It take about 20 seconds for the window to appear. I compared with SFML which take about 3-4 seconds, and Windows forms 1 sec .... all blank page project.\r\n\r\nI intend to load alots of content at startup so i don't like the 20 seconds wait for a blank page .\r\n\r\nGood Luck.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ArmsOfSorrow": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5731", "title": "Is HoloLens support coming anytime soon?", "body": "It would be interesting to have support for \"immersive\" HoloLens apps as a lightweight alternative to Unity. Is this planned for the short term or are you waiting for a consumer device before supporting it?", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "darfink": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5730", "title": "Fails to load `Song` content on macOS (DataUnavailable)", "body": "I've been having issues loading a `Song` resource on macOS, using the content pipeline. I have tried using several different source audio and types (`wav`, `ogg`, `mp3`), different qualities (`Low`, `Medium`, `Best`), different platforms (`DesktopGL`, `MacOSX`), and last but not least, different MonoGame versions (`3.6.0.1625` and develop branch `3.7.0.379`).\r\n\r\nThe issue stems from the [PlatformLoadAudioStream#L71-L94](https://github.com/MonoGame/MonoGame/blob/9b199ee849c3a2cc7f7c35ddbd27e302a1099cf6/MonoGame.Framework/Audio/SoundEffect.OpenAL.cs#L71-L94) method. The `audiodata` variable itself seems to contain the correct content, judging by its size and that it contains the magic cookie for `m4a` format (the converted file from the pipeline).\r\n\r\nThe `AudioFileStream` object though, is completely blank with only `LastError` set to `DataUnavailable`.\r\n\r\n<img src=\"https://cloud.githubusercontent.com/assets/1612390/26342234/82dcef8c-3f97-11e7-886a-76f7c543f71c.png\" align=\"left\" width=\"200\" >\r\n\r\nWhen the properties from the `afs` object are used, the code throws a [`DivideByZeroException`](https://github.com/MonoGame/MonoGame/blob/9b199ee849c3a2cc7f7c35ddbd27e302a1099cf6/MonoGame.Framework/Audio/SoundEffect.OpenAL.cs#L87), since the sample rate, bits per channel, channels per frame etc are all set to `0` / `null`.\r\n\r\nFurther investigation shows that the `DataUnavailable` error is directly mapped to [`kAudioFileStreamError_DataUnavailable`](https://developer.apple.com/reference/audiotoolbox/kaudiofilestreamerror_dataunavailable), with the description:\r\n\r\n> The amount of data provided to the parser was insufficient to produce any result.\r\n\r\nThis is where I got stuck, since the `audiodata` is correct from what I can tell (e.g the size is `973820`, same as the file on disk, it has the magic cookie etc). Is there anyone else experiencing this or can aid me in my debugging?\r\n\r\n- Running on macOS 10.12.4, MonoGame `3.7.0.379`.\r\n- The generated `m4a` file can be played with every media player I have tried.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/170d494e2746ff38571bdd31dac97428dc8192b4", "message": "Use Mono properties for pipeline platform prefix"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "albertofustinoni": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5724", "title": "MonoGame.Framework.Portable is broken", "body": "Going by the description, the MonoGame.Framework.Portable nuget package should be a bait and switch PCL, however it does not have the same API surface as the platform specific ones, and as a matter of fact is not a bait and switch PCL at all (look at MonoGame\\NuGetPackages\\MonoGame.Framework.Portable.nuspec and the only target is the PCL platform moniker - nuget packages targeting multiple platforms should be structured [like this](https://docs.microsoft.com/en-us/nuget/guides/create-cross-platform-packages)).\r\nThis includes the latest prerelease version as well.\r\n\r\nTo test, create a monogame project (I am using the Monogame UWP template), and a PCL project, then reference the PCL from the main project.\r\n\r\nAdd the MonoGame.Framework.Portable package to the PCL project and try to build: you'll get a conflict because both the PCL nuget package and the UWP try to copy their different versions of Monogame.Framework.dll to the same location.\r\n\r\nTry adding the PCL nuget to both projects instead of the platform specific one and MonoGame.Framework is not present anymore.\r\n\r\nThis means the only way of sharing code in a game targeting different platforms is to use a shared project like in the template, which is not at all good practice.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Scellow": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5715", "title": "[Keyboard - Azerty] Some keys not recognized", "body": "Hello\r\n\r\nI have an azerty keyboard, most of the keys are not recognized, and some of them are mapped to the wrong values\r\n\r\n![chrome_2017-05-17_08-41-24](https://cloud.githubusercontent.com/assets/27389256/26141553/cb850e28-3adc-11e7-99ba-e93b4051767c.png)\r\n\r\n\r\nLegend:\r\nGreen: incorect key returned\r\nPink: Not recognized at all, return \"None\"\r\n\r\nOS: Windows 10 x64\r\nMonoGame: 3.6 (DesktopGL from nuget)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5656", "title": "Freeze while clicking/moving the title bar", "body": "Hello\r\n\r\nCurrently each time you click or hold the mouse button or drag the title bar the window will freeze\r\n\r\nI don't think that should happen, any idea ?\r\n\r\nMonoGame version tested:\r\n* 3.6 DesktopGL\r\n* 3.5 DesktopGL\r\n\r\nOS: \r\n* Windows 10", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aloisdeniel": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5706", "title": "Mouse horizontal scroll wheel value", "body": "We currently have access to cumulative vertical scroll wheel value through `Mouse.GetState().ScrollWheelValue`, but the horizontal one isn't available. It could be useful to have access to it on macOS where such a gesture is quite common.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "asyschikov": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5702", "title": "Android: restoration of an activity fails after Game.Exit (v 3.6.0.1625)", "body": "I pulled the sample game https://github.com/MonoGame/MonoGame.Samples/tree/develop/Platformer2D\r\n\r\nUpdated Monogame to the latest (3.6.0.1625) and suddenly I noticed the nasty effect if I click Back (calls `Game.Exit`) and then click app icon, it can't restore the game. It seems to work in \"3.4.0.359\"\r\n\r\nThat's what application output is showing:\r\n```\r\n[AppTracker] App Event: start\r\n[MonoGame] MonoGameAndroidGameView.SurfaceCreated: surfaceFrame = Rect(0, 0 - 1920, 1080)\r\n[MonoGame] GraphicsDeviceManager.ResetClientBounds: newClientBounds={X:0 Y:0 Width:1920 Height:1080}\r\n[MonoGame] MonoGameAndroidGameView.SurfaceChanged: format = Rgb565, width = 1920, height = 1080\r\n[MonoGame] GraphicsDeviceManager.ResetClientBounds: newClientBounds={X:0 Y:0 Width:1920 Height:1080}\r\n[AppTracker] App Event: stop\r\n[MonoGame] MonoGameAndroidGameView.SurfaceDestroyed\r\n```\r\n\r\nMy Android is 7.1.1", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5653", "title": "MonoGame Pipeline Tool started to crash on build", "body": "Version 3.6.0.1625\r\nMacOS: 10.12.3\r\n\r\nI was using Pipeline tool for a while and everything was alright but suddenly it started crashing on any project when I click \"build\", here is stacktrace:\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\n  at System.ThrowHelper.ThrowArgumentOutOfRangeException (System.ExceptionArgument argument, System.ExceptionResource resource) [0x00011] in <f712f98eb8e445c8918edaf595bbe465>:0 \r\n  at System.ThrowHelper.ThrowArgumentOutOfRangeException () [0x00000] in <f712f98eb8e445c8918edaf595bbe465>:0 \r\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x0000c] in <f712f98eb8e445c8918edaf595bbe465>:0 \r\n  at MonoGame.Tools.Pipeline.BuildOutput.WriteLine (System.String line) [0x00362] in <be888ecf4d084c3fb27a3112a90a3ead>:0 \r\n  at MonoGame.Tools.Pipeline.MainWindow+<OutputAppend>c__AnonStorey0.<>m__0 () [0x00000] in <be888ecf4d084c3fb27a3112a90a3ead>:0 \r\n  at Eto.Mac.Forms.ApplicationHandler+<AsyncInvoke>c__AnonStorey1.<>m__0 () [0x00000] in <6935bfaad55f45f0828134dff8450a4b>:0 \r\n  at Foundation.NSAsyncActionDispatcher.Apply () [0x00002] in <088ca15f28ed485b8ec04e5baf83b5ec>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at (wrapper managed-to-native) AppKit.NSApplication:NSApplicationMain (int,string[])\r\n  at AppKit.NSApplication.Main (System.String[] args) [0x0003d] in <088ca15f28ed485b8ec04e5baf83b5ec>:0 \r\n  at Eto.Mac.Forms.ApplicationHandler.Run () [0x0004e] in <6935bfaad55f45f0828134dff8450a4b>:0 \r\n  at Eto.Forms.Application.Run (Eto.Forms.Form mainForm) [0x0002c] in <463463a5cc984159baa96b0b5047a712>:0 \r\n  at MonoGame.Tools.Pipeline.Program.Main (System.String[] args) [0x00070] in <be888ecf4d084c3fb27a3112a90a3ead>:0 \r\n```", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aharabada": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5699", "title": "SharpDX.SharpDXException when loading SM4.0 (or higher) Effect with Reach-Profile", "body": "It seems like the default GraphicsProfile is set to Reach now instead of HiDef. Which is fine, but because I didn't know this I tried to load an SM5.0-Effect with the Reach-Profile and got the following exception:\r\n\r\n> SharpDX.SharpDXException: \"HRESULT: [0x80070057], Module: [General], ApiCode: [E_INVALIDARG/Invalid > Arguments], Message: Falscher Parameter.\r\n> \r\n> \"\r\n\r\nThis exception is thrown in the \"CreatePixelShader\"-Function of the \"Shader\"-Class and because this exception isn't really helpful I think that:\r\n\r\n- The Pipeline-Tool should throw an error if someone tries to compile an effect with SM4.0 (or higher) when the GraphicsProfile is set to Reach.\r\n- MonoGame should throw an exception that tells the user to either use the HiDef-Profile or compile his effect with SM4.0-level 9.3", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5699/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MarcVador": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5697", "title": "PipelineTool - Incorrect display (Dev branch 3.7)", "body": "Hi\r\nI have noticed since the build 313 that the tools displays incorrectly folders (Windows7 x64, I have no other OS to test with right now):\r\n- The + has vanished when a folder can be expanded.\r\n- The content of 2 folders at the same level cannot be expanded\r\n- Files in an expanded folder are not always indented in the folder (same vertical line as the containing folder) (1st screenshot: basicscene should be indented to appear in the \"Scene\" folder)\r\n- Folders too (for ex, 3rd screenshot, the folder space is in \"modelsB\")\r\n- The scrollbar on the right cannot be used (2nd screenshot)\r\n\r\n![capture bad indentation](https://cloud.githubusercontent.com/assets/19704413/25740584/738f9764-3187-11e7-8b11-3dab36e9086f.JPG)\r\n![capture scrollbar](https://cloud.githubusercontent.com/assets/19704413/25740585/739595b0-3187-11e7-8077-dfeb1c1b9cfa.JPG)\r\n![capture folder](https://cloud.githubusercontent.com/assets/19704413/25740586/73968b82-3187-11e7-933d-29ff0e0f2c54.JPG)\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "theweekendgeek": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5696", "title": "Add a new label for beginning contributors", "body": "I've seen this on other projects on gihub and I think it could help encourage contribution to the project. At least that is the case for me.\r\nI would be interested in contributing to MonoGame but since my C#-Skills are still a bit limited and so is my time. It would be helpful if I could more easily identify issues that require less knowledge of MonoGame.\r\n\r\nA label like \"beginner friedly\" or \"for beginners\" could very much help with that. As it stands now I woud have to scan through all the issues (at least the ones with \"help wanted\") and then start looking at the corresponding postitions in the code. If I'm lucky I might find something that I feel comfortable working on, if I'm not I have to start that process over. And all of that takes some time.\r\n\r\nWorking in issues that require less initial knowledge could also help increase my knowledge of C# and MonoGame in general so over time it would be possible to tackle bigger problems. \r\n\r\nedit: I should propbably add that I'm not really used to working with labels myself, so if this is actually a thing with the people creating issues then it would be nice if use of such a label, where appropriate, would be encouraged.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5696/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gap9269": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5680", "title": "WindowsDX: Game.IsActive defaults to true on launch, even if the user is clicking or typing in another program", "body": "The only way to have Game.IsActive update correctly is to give the game window focus and then click elsewhere. Until you focus on the game window it will always be true, which can cause issues if a player is typing in a browser, for example. \r\n\r\nTo recreate:\r\n\r\n- Add a `Console.Writeline(IsActive)` to Game1.Update()\r\n- Launch a game or app, but don't click the window\r\n- Click around / type in other applications and you'll see it continues to say `True`", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "profexorgeek": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5677", "title": "XNA Mouse.GetState().Y Inaccurate on Multi Monitor Setup", "body": "The Y Coordinate reported by Microsoft.Xna.Framework.Input.Mouse.GetState() can be incorrect on multi-monitor setups. It appears that if the secondary monitor is vertically offset from the primary monitor, the Y coordinate is similarly vertically offset.\r\n\r\nIn these screenshots the application is running on a secondary, 4k monitor. The X coordinate is always correct, the Y coordinate offset is based on offset between monitors.\r\n\r\nNo vertical offset, the entity correctly tracks cursor using GetState():\r\n![xna-coords-good](https://cloud.githubusercontent.com/assets/711100/25536916/baae1096-2bf9-11e7-9b9a-0119f64e4af9.png)\r\n\r\nVertical offset in monitors, the entity is similarly offset from cursor:\r\n![xna-coords-bad](https://cloud.githubusercontent.com/assets/711100/25536935/c90d686c-2bf9-11e7-9ba0-969e6b45dad4.png)\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Oyyou": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5667", "title": "Stretching Window too far causes exception", "body": "I have my \"Window.AllowUserResizing\" set to 'true'.\r\n\r\nTo test the limits, I stretched the Window across both monitors. That is what caused the exception to be thrown.\r\n\"SharpDX.SharpDXException: 'HRESULT: [0x80070057], Module: [General], ApiCode: [E_INVALIDARG/Invalid Arguments], Message: The parameter is incorrect.\"\r\n\r\nI have created my event for \"ClientSizeChanged\", but obviously that makes no difference as this is happening in SharpDX\r\n\r\n`\r\n\r\n    private void Window_ClientSizeChanged(object sender, EventArgs e)\r\n    {\r\n      if (graphics.PreferredBackBufferHeight < 480)\r\n      {\r\n        graphics.PreferredBackBufferHeight = 480;\r\n        graphics.ApplyChanges();\r\n      }\r\n\r\n      if (graphics.PreferredBackBufferHeight > 1440)\r\n      {\r\n        graphics.PreferredBackBufferHeight = 1440;\r\n        graphics.ApplyChanges();\r\n      }\r\n\r\n      if (graphics.PreferredBackBufferWidth < 800)\r\n      {\r\n        graphics.PreferredBackBufferWidth = 800;\r\n        graphics.ApplyChanges();\r\n      }\r\n\r\n      if (graphics.PreferredBackBufferWidth > 2560)\r\n      {\r\n        graphics.PreferredBackBufferWidth = 2560;\r\n        graphics.ApplyChanges();\r\n      }\r\n\r\n      ScreenHeight = graphics.PreferredBackBufferHeight;\r\n      ScreenWidth = graphics.PreferredBackBufferWidth;\r\n    }\r\n\r\n`\r\n\r\nThanks", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Apostolique": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5664", "title": "DesktopGL resizing only updates at the end", "body": "When manually resizing a GameWindow in a DesktopGL project, the values for Window.ClientBounds.Width and Window.ClientBounds.Height are only changed when the window is done being resized. In Monogame 3.5 those values were updated throughout the resizing process.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Danthekilla": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5663", "title": "AudioStopOptions.AsAuthored is not supported (XACT)", "body": "When using XACT Cue.Stop(AudioStopOptions.AsAuthored) stops immediately and doesn't actually stop as authored.\r\n\r\nI have a looping sound that has been authored to \"play release\" when told to stop as authored and it just kills the sound instead.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5662", "title": "XACT crashes with a SharpDX Exception when ADPCM compression is enabled", "body": "When using XACT with monogame I expected to not be able to use xWMA (sadly) and I can live with the massive files of ADPCM for the most part with disk streaming. But when I change from PCM to ADPCM my game crashes when trying to play a Cue. With the following exception.\r\n\r\n```\r\n{SharpDX.SharpDXException: HRESULT: [0x88960001], Module: [SharpDX.XAudio2], ApiCode: [XAUDIO2_E_INVALID_CALL/InvalidCall], Message: Unknown\r\n   at SharpDX.XAudio2.XAudio2.CreateSourceVoice_(SourceVoice sourceVoiceOut, IntPtr sourceFormatRef, VoiceFlags flags, Single maxFrequencyRatio, IntPtr callbackRef, Nullable`1 sendListRef, Nullable`1 effectChainRef)\r\n   at SharpDX.XAudio2.SourceVoice.CreateSourceVoice(XAudio2 device, WaveFormat sourceFormat, VoiceFlags flags, Single maxFrequencyRatio, IntPtr callback, EffectDescriptor[] effectDescriptors)\r\n   at SharpDX.XAudio2.SourceVoice..ctor(XAudio2 device, WaveFormat sourceFormat, VoiceFlags flags, Single maxFrequencyRatio)\r\n   at Microsoft.Xna.Framework.Audio.SoundEffect.PlatformSetupInstance(SoundEffectInstance inst)}\r\n```\r\n\r\nMy platform is UWP, running on the latest windows 10, fast ring.\r\n\r\nI would expect this to be supported, and unlike xWMA it doesn't throw a not supported exception. So I assume it is either a bug or I am doing something wrong somehow.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5661", "title": "Xact Marker Events are not supported", "body": "I get a NotImplementedException(\"Marker event\"); when I try to load a xact file with a marker set in it.\r\n\r\nIs this planned to be implemented or does anyone have any tips on how I should start?\r\n\r\nDoes anyone have any idea of where this format is documented, or is it more of a fiddle with the bit loading until we get some data that looks right kind of thing?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamesford42": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5660", "title": "No pdb's generated for Release configuration.", "body": "See attached image showing the current settings of \"Debug Info: none\" for the Release configuration.\r\nThe request is that this instead be \"Debug Info: pdb-only\" for Release configurations.\r\n\r\nThis would actually be a protobuild change, this issue is just for tracking progress towards that, since Protobuild.exe would at least need to be updated within the monogame project after that.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/155688/25156939/95d9aa0c-2463-11e7-9451-e8f153f7a6bb.png)\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5432", "title": "misc xact fixes from ps4", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Ziriax": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5659", "title": "Suggestion: add debugging information when trying to manually Dispose content that is owned by the ContentManager", "body": "I made a very silly beginner's mistake, I called `Dispose` on a `SoundEffect` that I loaded using the `ContentManager`. \r\n\r\nI should have known that assets like these are owned by the `ContentManager`, and are freed when calling `ContentManager.Unload`\r\n\r\nHowever, the strangest happened in my case: the sound got corrupted, sometimes my game crashed, XAudio started printing all kinds of warnings...\r\n\r\nIt would be very helpful to add some debugging code that prints a warning when calling `Dispose` on an asset that is owned by the `ContentManager`, to help other beginners :-)\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Majirefy": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5647", "title": "Add Template for Visual Studio Mac", "body": "After installation, there are no templates in Visual Studio Mac.\r\n\r\nI seems VS Mac will take over Xamarin Studio, because it has all functionality of XS.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5647/reactions", "total_count": 9, "+1": 9, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "snaidamast": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5645", "title": "Visual Studio Templates Not Being Installed", "body": "Hello...\r\n\r\nWhen I moved over my game development projects to Visual Studio 2015 with Monogame 3.5 I noticed that the project templates were not installed and subsequently not showing up in the C# templates selection.  However, since my projects were correctly referencing the Monogame assemblies I had no issues running my work.  I only noticed this when I wanted to test out a new Monogame extension.\r\n\r\nI uninstalled Monogame 3.5 believing it was an issue with my current installation and performed a re-install.  However, during the re-install process all of the available template selections were grayed out and not selectable as a result.\r\n\r\nI cancelled the installation and tried the Monogame 3.6 installation finding the same issue.\r\n\r\nThis appears to be a rather substantial issue on the forums.  Can you supply either good documentation on how to work around this issue or correct the installation application so that we can select our VS templates and get them installed in the proper VS template directories.\r\n\r\nI have gone through a number of forum postings and there is a lot of confusion as to what to actually do and only a few of them have the proper link to the templates download on DropBox.\r\n\r\nI got mine working as a result but lesser experienced people will have terrible issues with this.\r\n\r\nThank you...\r\n\r\nSteve Naidamast\r\nSr. Software Engineer\r\nblackfalconsoftware@outlook.com", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "richkzad": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5644", "title": "FontDescriptionProcessor should also check user's local Fonts folder, on Mac", "body": "FontDescriptionProcessor currently won't pick up any fonts in `~/Library/Fonts`, but it does pick up fonts from `/Library/Fonts`.\r\n\r\nWhen you install fonts on a Mac, I believe it defaults to your local folder, so it's a little confusing that the Content Pipeline doesn't pick it up.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5640", "title": "Include a default LaunchScreen.storyboard in the iOS template", "body": "When adding a MonoGame iOS Application to a project, and you run your game on an iPhone 7 Plus (and likely other devices), it doesn't render fullscreen. It looks like the whole thing is being scaled up inappropriately.\r\n\r\nA good fix is to add a storyboard to serve as a launch screen. Then iOS realizes the app supports the larger resolutions, and displays you in fullscreen as you likely intend.\r\n\r\nIt'd be great if MonoGame included one by default, or at least some default such that iOS will render the game fullscreen and the device's native resolution.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5640/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shmellyorc": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5619", "title": "OpenGl 3.1 not creating graphic device.", "body": "I am using the current developer monogame api. I got a customer that has openg 3.1 and isn't able to run the game. Error resolve around the user doesn't have opengl 3.0 or higher.\r\n\r\nDoes the current developer api require opengl greater than 3.0 or am I wrong and monogame uses a higher opengl version higher than 3.1?\r\n\r\nThe user has an intel HD graphics 3000 laptop pc.\r\n\r\nERROR log:\r\n[2017-03-19 @ 16:36:43.238] [launch/native] err: \r\n[2017-03-19 @ 16:36:43.250] [launch/native] err: Unhandled Exception: **Microsoft.Xna.Framework.Graphics.NoSuitableGraphicsDeviceException: Failed to create graphics device! ---> System.PlatformNotSupportedException: MonoGame requires OpenGL 3.0 compatible drivers, or either ARB_framebuffer_object or EXT_framebuffer_object extensions.Try updating your graphics drivers.**\r\n[2017-03-19 @ 16:36:43.251] [launch/native] err:    at OpenGL.GraphicsContext..ctor(IWindowInfo info)\r\n[2017-03-19 @ 16:36:43.251] [launch/native] err:    at Microsoft.Xna.Framework.Graphics.GraphicsDevice.PlatformSetup()\r\n[2017-03-19 @ 16:36:43.252] [launch/native] err:    at Microsoft.Xna.Framework.Graphics.GraphicsDevice.Setup()\r\n[2017-03-19 @ 16:36:43.252] [launch/native] err:    at Microsoft.Xna.Framework.Graphics.GraphicsDevice..ctor(GraphicsAdapter adapter, GraphicsProfile graphicsProfile, PresentationParameters presentationParameters)\r\n[2017-03-19 @ 16:36:43.255] [launch/native] err:    at Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice(GraphicsDeviceInformation gdi)\r\n[2017-03-19 @ 16:36:43.255] [launch/native] err:    at Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice()\r\n[2017-03-19 @ 16:36:43.255] [launch/native] err:    --- End of inner exception stack trace ---\r\n[2017-03-19 @ 16:36:43.256] [launch/native] err:    at Microsoft.Xna.Framework.GraphicsDeviceManager.CreateDevice()\r\n[2017-03-19 @ 16:36:43.256] [launch/native] err:    at Microsoft.Xna.Framework.GraphicsDeviceManager.ApplyChanges()\r\n[2017-03-19 @ 16:36:43.258] [launch/native] err:    at SlashyDwarf.SlashyDwarfGame.ToggleFullScreen(Game game) in C:\\Users\\Owen\\Dropbox\\Monogame\\SlashyDwarf\\Client\\SlashyDwarfGame.cs:line 43\r\n[2017-03-19 @ 16:36:43.259] [launch/native] err:    at SlashyDwarf.SlashyDwarfGame..ctor() in C:\\Users\\Owen\\Dropbox\\Monogame\\SlashyDwarf\\Client\\SlashyDwarfGame.cs:line 21\r\n[2017-03-19 @ 16:36:43.259] [launch/native] err:    at SlashyDwarf.Program.Main() in C:\\Users\\Owen\\Dropbox\\Monogame\\SlashyDwarf\\Client\\Program.cs:line 16\r\n[2017-03-19 @ 16:36:43.387] [launch] error while launching 1a7a7060-7cef-4e1a-90af-423790cbe23e: application crashed. process exited with code 3762504530\r\n[2017-03-19 @ 16:36:43.397] [launch] crashed with \r\n[2017-03-19 @ 16:36:43.397] [launch] application crashed. process exited with code 3762504530", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Mattlekim": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5616", "title": "Guide.BeginShowKeyboardInput Not implemented windows Universal", "body": "As title says.\r\nI'm looking in to it and have made a little progress will post if I find a way to implement it", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5595", "title": "Crash when calling Guide on windows universal app", "body": "the is a crash when calling any guide function in windows universal app running windows 10 due to an obsolete call var licenseInformation = CurrentApp.LicenseInformation;", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5626", "title": "Fixed crash with Guide Issue #5595", "body": "Fixed crash when calling any guide function on Windows 10 Universal App", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nebosite": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5602", "title": "Output window is spammed by debugger null reference exceptions from Mono/Xamarin", "body": "When I debug my app on android, I get dozens of these exceptions every second:\r\n\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Xamarin.VisualStudio.Debugger.ProjectVisualStudio.GetCSharpProjectContent(VSProject vsproject) in C:\\data\\lanes\\3513\\00fa5cc4\\source\\xamarinvs\\src\\Core\\VisualStudio\\Debugging\\ProjectVisualStudio.cs:line 100\r\n   at Xamarin.VisualStudio.Debugger.ProjectVisualStudio..ctor(VSProject vsproject) in C:\\data\\lanes\\3513\\00fa5cc4\\source\\xamarinvs\\src\\Core\\VisualStudio\\Debugging\\ProjectVisualStudio.cs:line 114\r\n   at Xamarin.VisualStudio.Debugger.ExpressionResolver.FindOrCreateDocument(String source) in C:\\data\\lanes\\3513\\00fa5cc4\\source\\xamarinvs\\src\\Core\\VisualStudio\\Debugging\\ExpressionResolver.cs:line 31\r\n   at Xamarin.VisualStudio.Debugger.ExpressionResolver.ResolveType(String identifier, SourceLocation location) in C:\\data\\lanes\\3513\\00fa5cc4\\source\\xamarinvs\\src\\Core\\VisualStudio\\Debugging\\ExpressionResolver.cs:line 45\r\n   at Xamarin.VisualStudio.Debugger.MonoToolsDebuggerSession.OnResolveType(String identifier, SourceLocation location) in C:\\data\\lanes\\3513\\00fa5cc4\\source\\xamarinvs\\src\\Core\\VisualStudio\\Debugging\\MonoToolsDebuggerSession.cs:line 78\r\n   at Mono.Debugging.Client.DebuggerSession.ResolveIdentifierAsType(String identifier, SourceLocation location)\r\n   at Mono.Debugging.Evaluation.NRefactoryExpressionResolverVisitor.ReplaceType(String name, Int32 genericArgs, Int32 offset, Int32 length, Boolean memberType)\r\n   at Mono.Debugging.Evaluation.NRefactoryExpressionResolverVisitor.VisitIdentifierExpression(IdentifierExpression identifierExpression)\r\n   at ICSharpCode.NRefactory.CSharp.IdentifierExpression.AcceptVisitor(IAstVisitor visitor)\r\n   at ICSharpCode.NRefactory.CSharp.DepthFirstAstVisitor.VisitChildren(AstNode node)\r\n   at ICSharpCode.NRefactory.CSharp.DepthFirstAstVisitor.VisitBinaryOperatorExpression(BinaryOperatorExpression binaryOperatorExpression)\r\n   at ICSharpCode.NRefactory.CSharp.BinaryOperatorExpression.AcceptVisitor(IAstVisitor visitor)\r\n   at Mono.Debugging.Evaluation.NRefactoryExpressionEvaluator.Resolve(DebuggerSession session, SourceLocation location, String expression, Boolean tryTypeOf)\r\n   at Mono.Debugging.Evaluation.NRefactoryExpressionEvaluator.Resolve(DebuggerSession session, SourceLocation location, String exp)\r\n   at Mono.Debugging.Soft.SoftDebuggerSession.EvaluateExpression(ThreadMirror thread, String expression, BreakEvent bp)\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Metalfusion": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5593", "title": "Mouse.GetState() X1Button and X2Button values not updated on Windows", "body": "Having extra buttons is pretty common in mice nowadays, and XNA supported these.\r\nSource of the problem seems to be that the method UpdateMouseState() in WinFormsGameWindow doesn't consider these buttons even though the state is available the same as the other buttons. Fixing this seems trivial, much more so than setting up to make a pull request myself.\r\n\r\nhttps://github.com/MonoGame/MonoGame/blob/develop/MonoGame.Framework/Windows/WinFormsGameWindow.cs#L243", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "torshid": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5577", "title": "Mac mouse position incorrect with multiple monitors", "body": "Hi,\r\n\r\nI just encountered a small annoying problem, concerning the mouse position on Mac using multiple monitors (with different resolutions). The problem is that the Y position given by the GetState is not the same as the one we give to SetPosition previously.\r\n\r\nWe can simply see that with:\r\n```\r\nMouse.SetPosition(0, 0);\r\nConsole.WriteLine(Mouse.GetState().Position.Y);\r\n```\r\nI get here the value 158 (on a 1080p monitor).\r\n\r\nThe X position doesn't seem to have any problem.\r\n\r\n(If anybody encounters the same problem, a quick fix is to get this difference at the program launch and then remove it when we get the current position.)", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5540", "title": "DrawString and 3D", "body": "Hi,\r\n\r\nI was using the following lines to display a string using the SpriteBatch in a 3D environment  in the previous versions of MonoGame (and XNA):\r\n```\r\nSpriteBatch.Begin();\r\nSpriteBatch.DrawString(...);\r\nSpriteBatch.End();\r\n\r\nGraphicsDevice.BlendState = BlendState.AlphaBlend;\r\nGraphicsDevice.DepthStencilState = DepthStencilState.Default;\r\n```\r\nIt was working correctly, even when \"mixing\" 2D and 3D drawings. It now seems that I must draw the 2D after having drawn all the 3D, which is not why I want, because it can obviously quickly multiply the number of draw calls.\r\n\r\nDo you have any idea?\r\nThank you", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bogdanfedko": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5539", "title": "(DesktopGL) Process still running after window close", "body": "Well, everything is working ok when starting a new project. But after upgrading an existing one to 3.6 process is still running after window close, also debugging process in VS2015 doesn't stop. Everything else is working alright. Platform is DesktopGL, running on Windows 10.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "endimilojkoski": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5536", "title": "Can't use more than 4 wireless gamepads [Desktop GL]", "body": "1.\r\n\r\nMy game supports up to 8 players at once and I am getting complaints that only 4 wireless controllers are being detected.\r\nI don't have more than 4 wireless controllers to test so I can't confirm what is happening.\r\nI have tried a mix of wireless and different type of wired controllers and could manage to set up 8 players matches.\r\n\r\nThis is the Steam thread with the complaints in case you want to take a look:\r\nhttp://steamcommunity.com/app/414370/discussions/0/152391995404760614/\r\n\r\nLast player says that even with a mix of Xbox 360 and Xbox One wireless controllers only 4 of them are recognized.\r\nThis is pretty big issue for my game since \"8 players\" is its unique appeal :)\r\n\r\n2.\r\n\r\nAlso I have successfully ported the game to Android and everything works great but on gamepads the dpad is not working. Tried with Xbox 360 and PS4 controllers and they work fine but dpad is not recognized. This is not a big deal, you can still play on left stick, but it would be nice if dpad is working.\r\n\r\nThanks,\r\nEndi", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fatcatz888": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5534", "title": "Latest Pipeline Tool, 3.6.0.1625 cannot convert WAV file. Previous version could, 3.5.0.1678", "body": "MonoGame Pipeline Tool 3.5.0.1678 can convert to XNA the attached wav file. But the latest version,  cannot 3.6.0.1625. Latest version will throw an error.\r\n\r\n[chip.zip](https://github.com/MonoGame/MonoGame/files/814126/chip.zip)\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Quincy9000": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5531", "title": "Unable to load sdl2.dll ", "body": "Trying to switch my monogame stuff from 3.5 to 3.6 and I immediately run into this issue. The only fix I see is copying sdl2.dll from folder where it's installed on my pc.  This shouldn't happen on upgrading to a new version? Just wondering if it is something on my end. I also had two others create an empty monogame 3.6 from a template and they get the exact same error.  \r\n\r\n\r\nhttp://i.imgur.com/sjvFHo0.png", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5531/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Thraka": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5530", "title": "Annoying fullscreen differences between DirectX and OpenGL", "body": "I'm using MonoGame 3.6 and `GraphicsDeviceManager.HardwareModeSwitch = false;` and having a hard time working out my code for how I want my game to render. Depending on if I'm using DirectX or OpenGL, I get different behaviors.\r\n\r\n| Library | Mode | GraphicsDevice.Viewport.Bounds |\r\n| ------- | ----- | ---------------------|\r\n| DirectX | Original window | 640x400 |\r\n| DirectX | To full | 640x400 |\r\n| DirectX | Back to window | 624x361 |\r\n| OpenGL | Original window | 640x400 |\r\n| OpenGL | To full | 1920x1080 |\r\n| OpenGL | Back to window | 640x400 |\r\n\r\nAs you can see, DirectX misbehaves when coming out of fullscreen, and OpenGL misbehaves when going to fullscreen.\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RufusMall": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5511", "title": "VertexBuffer.GetData() and Index.GetData() not implemented on iOS", "body": "Hi! \r\n\r\nI think this would be a useful function to implement in iOS. As sometimes it is useful to be able to retrieve the vertices for whatever reason - be it debugging \r\n\r\nI have wanted to contribute to open source software for a while, and I think this is a good place to start.\r\n\r\nI read the Contribution guide and the process is something like:\r\n-Create an issue (so nobody duplicates work)\r\n-Create a fork\r\n-Make Changes to fork (DONT STEAL CODE :P)\r\n-Submit pull request.\r\n\r\nHope I didn't miss anything. Bear with me as I may need help as I haven't really used git/github much. I intend to submit a pull request in the next few days with this fix.\r\n\r\nThere are some other improvements I intent to submit in the future when I get time.\r\n\r\nThanks\r\n\r\n-Rufus", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5513", "title": "#5511 - Enable VertexBuffer/IndexBuffer.GetData() on iOS", "body": "Enable VertexBuffer/IndexBuffer.GetData() on iOS", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "LokiMidgard": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5485", "title": "The Pipline tool does not support /workingDir", "body": "I have a project where the assets are located outside the src folder, so different projects can use the same assets. In order to get the mgcb working I added ```/workingDir:../../../``` to the file. However the Pipeline tool now no longer shows the content files.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chukcha1": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5479", "title": "NormalMappingSample ?!", "body": "NormalMapping (XNA)&& MonoGame  =  False; //=(( (shaders 5_0)\r\n\r\n ", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AliciaRaven": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5476", "title": "New or cloned skinned effect will not work", "body": "Creating a new skinned effect or a clone of a skinned effect using existing effect from a model will not work, only the original effect created as part of the model will work.\r\n\r\nI am trying to create a skinned effect at runtime so i dont have to include serialized effect data in all my models. These models use a custom model format. I can create new basic or alpha effects which work ok but when i try to create a new skinned effect it does not work.\r\n\r\nModel renders black in a fixed location on the screen. Setting textures, lighting or animation does nothing. Even changing the view or world projects does not change the position on screen where the black model is rendered. I would expect a clone of a working effect to copy all parameters over but maybe some thing is missed out for skinned effects?\r\n\r\nThe original effect in the model works fine, but only one effect is created for all parts of the model meaning at draw time the textures have to be assigned for every frame drawn.\r\n\r\nSee also, http://community.monogame.net/t/creating-skinnedeffect-at-runtime-not-working/8744/2", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5422", "title": "Inconsistent vertex counts returned", "body": "I have found that the following methods can return different values, I assumed they would return the same number. The values match in almost all test models but one, which consistently reports a much lower value for some of its parts when using the first method. This results in missing geometry when using that number later in code to read the vertex data. (I read data out to my own model format)\r\n\r\n```\r\nModelMeshPart.NumVertices\r\nModelMeshPart.VertexBuffer.VertexCount\r\n```\r\n\r\nI can provide the example model for debugging if required", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5422/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RetrocadeNet": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5472", "title": "Possibility of multi-song playback", "body": "As far as I can tell, right now `Song`s can only be played through `MediaPlayer` and only one song at a time. Is there a way to do that?\r\n\r\nIf not I'd be happy to add the support myself, but I'd need to know if there is any preliminary design done for that.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Preprocezzor": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5470", "title": "Pipeline Error on OSx - System.DllnotFoundException: libfreeimage.dylib", "body": "I'm not able to add any content to my project via Content Pipeline.\r\nI use the Xamarin Studio. I tried to install freeimage via Homebrew but it still doesn't work.\r\n\r\nMy Error looks like this: \r\n\r\n<img width=\"1238\" alt=\"screen shot 2017-02-10 at 21 23 59\" src=\"https://cloud.githubusercontent.com/assets/25663451/22842891/4c3a385a-efd7-11e6-956f-d51692957c8e.png\">\r\n\r\nWhat's the solution for this?\r\n\r\nThanks.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "LonghronShen": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5454", "title": "[MGCB] Shader: compile array is not supported?", "body": "@tomspilman Here this shader code compile failed using the latest 3.6.0.1465 content pipeline:\r\n```C\r\ntexture Texture;\r\nuniform const sampler TextureSampler : register(s0) = sampler_state\r\n{\r\n\tTexture = (Texture);\r\n\tMipFilter = Linear;\r\n\tMinFilter = Linear;\r\n\tMagFilter = Linear;\r\n};\r\n\r\nuniform const int UseSphere;\r\ntexture Sphere;\r\nuniform const sampler SphereSampler : register(s1) = sampler_state\r\n{\r\n\tTexture = (Sphere);\r\n\tMipFilter = Linear;\r\n\tMinFilter = Linear;\r\n\tMagFilter = Linear;\r\n};\r\nuniform const bool UseToon;\r\ntexture ToonTex;\r\nuniform const sampler ToonTexSampler : register(s2) = sampler_state\r\n{\r\n\tTexture = (ToonTex);\r\n\tMipFilter = Linear;\r\n\tMinFilter = Linear;\r\n\tMagFilter = Linear;\r\n};\r\n\r\nuniform shared const float3\tEyePosition;\t\t// in world space\r\n\r\nuniform const float3\tDiffuseColor\t: register(c5) = 1;\r\nuniform const float\t\tAlpha\t\t\t: register(c6) = 1;\r\nuniform const float3\tEmissiveColor\t: register(c7) = 0;\r\nuniform const float3\tSpecularColor\t: register(c8) = 1;\r\nuniform const float\t\tSpecularPower\t: register(c9) = 16;\r\nuniform const bool\t\tEdge=true;\r\n\r\nuniform const float3\tAmbientLightColor;\r\nuniform const float3\tDirLight0Direction;\r\n\r\nuniform const float4x4\tWorld;\t\r\nuniform shared const float4x4\tView;\r\nuniform shared const float4x4\tProjection;\r\n\r\nstruct ColorPair\r\n{\r\n\tfloat3 Diffuse;\r\n\tfloat3 Specular;\r\n\tfloat2 ToonTex;\r\n};\r\n\r\nstruct CommonVSOutput\r\n{\r\n\tfloat4\tPos_ws;\r\n\tfloat4\tPos_ps;\r\n\tfloat4\tDiffuse;\r\n\tfloat3\tSpecular;\r\n\tfloat2 ToonTexCoord;\r\n\tfloat2 SphereCoord;\r\n};\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n// Shader I/O structures\r\n// Nm: Normal\r\n// Tx: Texture\r\n// Vc: Vertex color\r\n//\r\n// Nm Tx Vc\r\n//  1  0  0 VSInputNm\r\n//  1  0  1 VSInputNmVc\r\n//  1  1  0 VSInputNmTx\r\n//  1  1  1 VSInputNmTxVc\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n// Vertex shader inputs\r\n//-----------------------------------------------------------------------------\r\n\r\n\r\nstruct VSInputNm\r\n{\r\n\tfloat4\tPosition\t: POSITION;\r\n\tfloat3\tNormal\t\t: NORMAL;\r\n};\r\n\r\nstruct VSInputNmVc\r\n{\r\n\tfloat4\tPosition\t: POSITION;\r\n\tfloat3\tNormal\t\t: NORMAL;\r\n\tfloat4\tColor\t\t: COLOR;\r\n};\r\n\r\nstruct VSInputNmTx\r\n{\r\n\tfloat4\tPosition\t: POSITION;\r\n\tfloat3\tNormal\t\t: NORMAL;\r\n\tfloat2\tTexCoord\t: TEXCOORD0;\r\n};\r\n\r\nstruct VSInputNmTxVc\r\n{\r\n\tfloat4\tPosition\t: POSITION;\r\n\tfloat3\tNormal\t\t: NORMAL;\r\n\tfloat2\tTexCoord\t: TEXCOORD0;\r\n\tfloat4\tColor\t\t: COLOR;\r\n};\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n// Vertex shader outputs\r\n//-----------------------------------------------------------------------------\r\n\r\nstruct VertexLightingVSOutput\r\n{\r\n\tfloat4\tPositionPS\t: POSITION;\t\t// Position in projection space\r\n\tfloat4\tDiffuse\t\t: COLOR0;\r\n\tfloat4\tSpecular\t: COLOR1;\t\t// Specular.rgb and fog factor\r\n\tfloat2\tSphereCoord\t: TEXCOORD1;\r\n\tfloat2\tToonTexCoord: TEXCOORD2;\r\n};\r\n\r\nstruct VertexLightingVSOutputTx\r\n{\r\n\tfloat4\tPositionPS\t: POSITION;\t\t// Position in projection space\r\n\tfloat4\tDiffuse\t\t: COLOR0;\r\n\tfloat4\tSpecular\t: COLOR1;\r\n\tfloat2\tTexCoord\t: TEXCOORD0;\r\n\tfloat2\tSphereCoord\t: TEXCOORD1;\r\n\tfloat2\tToonTexCoord: TEXCOORD2;\r\n};\r\n\r\nstruct EdgeVSOutput\r\n{\r\n\tfloat4\tPositionPS\t: POSITION;\r\n\tfloat4\tColor\t\t: COLOR0;\r\n};\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n// Pixel shader inputs\r\n//-----------------------------------------------------------------------------\r\n\r\nstruct VertexLightingPSInput\r\n{\r\n\tfloat4\tDiffuse\t\t: COLOR0;\r\n\tfloat4\tSpecular\t: COLOR1;\r\n\tfloat2\tSphereCoord\t: TEXCOORD1;\r\n\tfloat2\tToonTexCoord\t: TEXCOORD2;\r\n};\r\n\r\nstruct VertexLightingPSInputTx\r\n{\r\n\tfloat4\tDiffuse\t\t: COLOR0;\r\n\tfloat4\tSpecular\t: COLOR1;\r\n\tfloat2\tTexCoord\t: TEXCOORD0;\r\n\tfloat2\tSphereCoord\t: TEXCOORD1;\r\n\tfloat2\tToonTexCoord\t: TEXCOORD2;\r\n};\r\n\r\n//-----------------------------------------------------------------------------\r\n// Compute lighting\r\n// E: Eye-Vector\r\n// N: Unit vector normal in world space\r\n//-----------------------------------------------------------------------------\r\nColorPair ComputeLights(float3 E, float3 N)\r\n{\r\n\tColorPair result;\r\n\t\r\n\tresult.Diffuse = AmbientLightColor;\r\n\tresult.Specular = 0;\r\n\r\n\t// Directional Light 0\r\n\tfloat3 L = normalize(-DirLight0Direction);\r\n\tfloat3 H = normalize(E+L);\r\n\tfloat2 ret = lit(dot(N, L), dot(N, H), SpecularPower).yz;\r\n\tresult.Specular+=AmbientLightColor*ret.y;\r\n\t\r\n\tresult.Diffuse *= DiffuseColor;\r\n\tresult.Diffuse\t+= EmissiveColor;\r\n\tresult.Diffuse\t= saturate(result.Diffuse);\r\n\tresult.Specular\t*= SpecularColor;\r\n\t\r\n\tresult.ToonTex.x=clamp(0.5f-dot(normalize(N),normalize(E))*0.5f,0,1);\r\n\tresult.ToonTex.y=clamp(0.5f-dot(normalize(N),normalize(L))*0.5f,0,1);\r\n\t\r\n\treturn result;\r\n}\r\n\r\nCommonVSOutput ComputeCommonVSOutputWithLighting(float4 position, float3 normal)\r\n{\r\n\tCommonVSOutput vout;\r\n\t\r\n\tfloat4 pos_ws = mul(position, World);\r\n\tfloat4 pos_vs = mul(pos_ws, View);\r\n\tfloat4 pos_ps = mul(pos_vs, Projection);\r\n\tvout.Pos_ws = pos_ws;\r\n\tvout.Pos_ps = pos_ps;\r\n\t\r\n\tfloat3 N = normalize(mul(normal, World));\r\n\tfloat3 posToEye = EyePosition - pos_ws;\r\n\tfloat3 E = normalize(posToEye);\r\n\tColorPair lightResult = ComputeLights(E, N);\r\n\t\r\n\tvout.Diffuse\t= float4(lightResult.Diffuse.rgb, Alpha);\r\n\tvout.Specular\t= lightResult.Specular;\r\n\t\r\n\tvout.ToonTexCoord=lightResult.ToonTex;\r\n\tvout.SphereCoord=float2(normal.x/2+0.5,normal.y/2+0.5);\r\n\t\r\n\treturn vout;\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------\r\n// Vertex shaders\r\n//-----------------------------------------------------------------------------\r\nVertexLightingVSOutput VSBasicNm(VSInputNm vin)\r\n{\r\n\tVertexLightingVSOutput vout;\r\n\t\r\n\tCommonVSOutput cout = ComputeCommonVSOutputWithLighting(vin.Position, vin.Normal);\r\n\r\n\tvout.PositionPS\t= cout.Pos_ps;\r\n\tvout.Diffuse\t= cout.Diffuse;\r\n\tvout.Specular\t= float4(cout.Specular, 1);\r\n\tvout.ToonTexCoord = cout.ToonTexCoord;\r\n\tvout.SphereCoord=cout.SphereCoord;\r\n\t\r\n\treturn vout;\r\n}\r\n\r\n\r\nVertexLightingVSOutput VSBasicNmVc(VSInputNmVc vin)\r\n{\r\n\tVertexLightingVSOutput vout;\r\n\t\r\n\tCommonVSOutput cout = ComputeCommonVSOutputWithLighting(vin.Position, vin.Normal);\r\n\r\n\tvout.PositionPS\t= cout.Pos_ps;\r\n\tvout.Diffuse\t= cout.Diffuse * vin.Color;\r\n\tvout.Specular\t= float4(cout.Specular, 1);\r\n\tvout.ToonTexCoord = cout.ToonTexCoord;\r\n\tvout.SphereCoord=cout.SphereCoord;\r\n\t\r\n\treturn vout;\r\n}\r\n\r\nVertexLightingVSOutputTx VSBasicNmTx(VSInputNmTx vin)\r\n{\r\n\tVertexLightingVSOutputTx vout;\r\n\t\r\n\tCommonVSOutput cout = ComputeCommonVSOutputWithLighting(vin.Position, vin.Normal);\r\n\r\n\tvout.PositionPS\t= cout.Pos_ps;\r\n\tvout.Diffuse\t= cout.Diffuse;\r\n\tvout.Specular\t= float4(cout.Specular, 1);\r\n\tvout.TexCoord\t= vin.TexCoord;\r\n\tvout.ToonTexCoord = cout.ToonTexCoord;\r\n\tvout.SphereCoord=cout.SphereCoord;\r\n\t\r\n\treturn vout;\r\n}\r\n\r\n\r\nVertexLightingVSOutputTx VSBasicNmTxVc(VSInputNmTxVc vin)\r\n{\r\n\tVertexLightingVSOutputTx vout;\r\n\t\r\n\tCommonVSOutput cout = ComputeCommonVSOutputWithLighting(vin.Position, vin.Normal);\r\n\r\n\tvout.PositionPS\t= cout.Pos_ps;\r\n\tvout.Diffuse\t= cout.Diffuse * vin.Color;\r\n\tvout.Specular\t= float4(cout.Specular, 1);\r\n\tvout.TexCoord\t= vin.TexCoord;\r\n\tvout.ToonTexCoord = cout.ToonTexCoord;\r\n\tvout.SphereCoord=cout.SphereCoord;\r\n\t\r\n\treturn vout;\r\n}\r\n\r\nEdgeVSOutput VSEdgeNm(VSInputNm vin)\r\n{\r\n\tEdgeVSOutput vout;\r\n\t\r\n\tvout.PositionPS\t= mul(mul(mul(vin.Position,World),View),Projection);\r\n\tfloat3 normal\t= normalize(mul(vin.Normal,World));\r\n\tif(Edge){\r\n\t\tvout.Color.rgb=(normal+1)/2;\r\n\t\tvout.Color.w=vout.PositionPS.z/vout.PositionPS.w;\r\n\t}else{\r\n\t\tvout.Color=1;\r\n\t}\r\n\treturn vout;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Pixel shaders\r\n//-----------------------------------------------------------------------------\r\n\r\nfloat4 PSBasic(VertexLightingPSInput pin) : COLOR\r\n{\r\n\tfloat4 color = pin.Diffuse + float4(pin.Specular.rgb, 0);\r\n\tif(UseSphere==1)\r\n\t\tcolor*=tex2D(SphereSampler,pin.SphereCoord);\r\n\telse if(UseSphere==2)\r\n\t\tcolor+=tex2D(SphereSampler,pin.SphereCoord);\r\n\tif(UseToon)\r\n\t\tcolor*=tex2D(ToonTexSampler,pin.ToonTexCoord);\r\n\treturn color;//+dummy*0;\r\n}\r\n\r\n\r\nfloat4 PSBasicTx(VertexLightingPSInputTx pin) : COLOR\r\n{\r\n\tfloat4 color = tex2D(TextureSampler, pin.TexCoord) * pin.Diffuse + float4(pin.Specular.rgb, 0);\r\n\tif(UseSphere==1)\r\n\t\tcolor*=tex2D(SphereSampler,pin.SphereCoord);\r\n\telse if(UseSphere==2)\r\n\t\tcolor+=tex2D(SphereSampler,pin.SphereCoord);\r\n\tif(UseToon)\r\n\t\tcolor*=tex2D(ToonTexSampler,pin.ToonTexCoord);\r\n\treturn color;\r\n}\r\n\r\nfloat4 PSEdge(float4 color : COLOR0) : COLOR\r\n{\r\n\treturn color;\r\n}\r\n\r\nint ShaderIndex = 0;\r\n\r\n\r\nVertexShader VSArray[4] =\r\n{\r\n\tcompile vs_2_0 VSBasicNm(),\r\n\tcompile vs_2_0 VSBasicNmVc(),\r\n\tcompile vs_2_0 VSBasicNmTx(),\r\n\tcompile vs_2_0 VSBasicNmTxVc(),\r\n};\r\n\r\n\r\nPixelShader PSArray[4] =\r\n{\r\n\tcompile ps_4_0_level_9_1 PSBasic(),\r\n\tcompile ps_4_0_level_9_1 PSBasic(),\r\n\tcompile ps_4_0_level_9_1 PSBasicTx(),\r\n\tcompile ps_4_0_level_9_1 PSBasicTx(),\r\n};\r\n\r\nVertexShader VSEdgeArray[4] =\r\n{\r\n\tcompile vs_2_0 VSEdgeNm(),\r\n\tcompile vs_2_0 VSEdgeNm(),\r\n\tcompile vs_2_0 VSEdgeNm(),\r\n\tcompile vs_2_0 VSEdgeNm(),\r\n};\r\n\r\n\r\nPixelShader PSEdgeArray[4] =\r\n{\r\n\tcompile ps_4_0_level_9_1 PSEdge(),\r\n\tcompile ps_4_0_level_9_1 PSEdge(),\r\n\tcompile ps_4_0_level_9_1 PSEdge(),\r\n\tcompile ps_4_0_level_9_1 PSEdge(),\r\n};\r\n\r\n\r\nTechnique MMDEffect\r\n{\r\n\tPass\r\n\t{\r\n\t\tVertexShader = (VSArray[ShaderIndex]);\r\n\t\tPixelShader\t = (PSArray[ShaderIndex]);\r\n\t}\r\n}\r\nTechnique MMDNormalDepth\r\n{\r\n\tPass\r\n\t{\r\n\t\tVertexShader = (VSEdgeArray[ShaderIndex]);\r\n\t\tPixelShader  = (PSEdgeArray[ShaderIndex]);\r\n\t}\r\n}\r\n```\r\nIt says that:\r\n\r\n> <code>VertexShader = (VSArray[ShaderIndex]);</code>Unexpected token '(' found Expected Compile\r\n\r\nAny idea about it? Thank you in advance!", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "impworks": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5450", "title": "RenderTarget2D constructor broken on Portable Library", "body": "Consider the following code:\r\n\r\n    public static RenderTarget2D CreateRT(GraphicsDevice device)\r\n    {\r\n        return new RenderTarget2D(\r\n            device,\r\n            device.PresentationParameters.BackBufferWidth,\r\n            device.PresentationParameters.BackBufferHeight,\r\n            false,\r\n            SurfaceFormat.Color,\r\n            DepthFormat.Depth16\r\n        );\r\n    }\r\n\r\nThis code works in a WP8.1 project, but in Portable library it throws an exception:\r\n\r\n```\r\nAn exception of type 'SharpDX.SharpDXException' occurred in SharpDX.DLL but was not handled in user code\r\n\r\nAdditional information: HRESULT: [0x80070057], Module: [General], ApiCode: [E_INVALIDARG/Invalid Arguments], Message: The parameter is incorrect.\r\n\r\n   at SharpDX.Result.CheckError()\r\n   at SharpDX.Direct3D11.Device.CreateTexture2D(Texture2DDescription& descRef, DataBox[] initialDataRef, Texture2D texture2DOut)\r\n   at Microsoft.Xna.Framework.Graphics.RenderTarget2D.GenerateIfRequired()\r\n   at Microsoft.Xna.Framework.Graphics.RenderTarget2D..ctor(GraphicsDevice graphicsDevice, Int32 width, Int32 height, Boolean mipMap, SurfaceFormat preferredFormat, DepthFormat preferredDepthFormat, Int32 preferredMultiSampleCount, RenderTargetUsage usage)\r\n```\r\n\r\nP. S. The overload with only 3 arguments `(GraphicDevice, int, int)` works fine in Portable. Only constructors with more arguments are affected.\r\n\r\n*Update*: here's a working reproduction:\r\n(GitHub says it accepts ZIP uploads but actually doesn't!)\r\n\r\nhttp://spark.ms/tmp/MonoGameFailTest.zip", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yyr57695": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5449", "title": "Latest dev builds: first performance drop, now NoSuitableGraphicsDeviceException?", "body": "I am running MonoGame on Windows with Visual Studio 2015 Community.  I recently ported an XNA project that utilizes 3D graphics.  Under XNA it was using the HiDef profile.\r\n\r\nUsing MonoGame 3.5.1 the performance was indistinguishable from XNA, but there was a bug using the Xbox One controller.  If it was plugged in when the game was launched, it didn't work until it was unplugged, then reconnected.\r\n\r\nI decided to try using the latest dev build to see if that bug was fixed.  I grabbed it as of a few weeks ago, version 3.6.0.1365.  At first, it didn't run at all...there were some minor changes I had to make, but the biggest issue was an error telling me I had to use 16-bit indices rather than 32-bit indices.  Huh?  I ultimately realized that it was trying to force the Reach profile, and fixed it by adding the following line in my constructor:\r\n\r\ngraphics.GraphicsProfile = GraphicsProfile.HiDef;\r\n\r\nwhere \"graphics\" is my GraphicsDeviceManager.  This got the game running, and the controller detection bug had indeed been fixed in the new MonoGame build, but the framerate was approximately half of what it had been before.  The game looked identical, but the performance had dropped like a rock.\r\n\r\nI was hoping that this was just a temporary bug.  I tried again with version 3.6.0.1425 just a few days ago (which is still the current version as of 1/29/2017).  But now the game won't start at all.  It builds OK, but crashes during initialization with a Microsoft.Xna.Framework.Graphics.NoSuitableGraphicsDeviceException.\r\n\r\nI am using a 2010 MacBook sporting an integrated GeForce 320M GPU.  Yeah, an antique by today's standards, but it always ran my XNA stuff quite easily.  \r\n\r\nWere the hardware requirements just raised?  If so, why?  If not, what could be causing this?\r\n\r\nIf there's no easy fix for this (and the performance issues), is it possible for me to Frankenstein the new Input code into MonoGame 3.5.1 and use that instead, for its superior performance?\r\n\r\nThanks very much for your assistance.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kosmonaut3d": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5441", "title": "DesktopGL stencil operations not working", "body": "I have the same project, configured with Windows and DesktopGL.\r\n\r\nIn the windows one the stencil buffer is working as expected.\r\nIn the DesktopGL one the stencil buffer is not working at all.\r\n\r\nMonogame version a few weeks old.\r\n\r\nBoth solutions here: \r\nhttps://we.tl/03Wsr5YuLy (147 kb)\r\n\r\nFor reference:\r\n```\r\n_stencilWriteOnly = new DepthStencilState()\r\n            {\r\n                DepthBufferEnable = false,\r\n                DepthBufferWriteEnable = false,\r\n                CounterClockwiseStencilFunction = CompareFunction.Always,\r\n                StencilFunction = CompareFunction.Always,\r\n                StencilFail = StencilOperation.IncrementSaturation,\r\n                StencilPass = StencilOperation.IncrementSaturation,\r\n                CounterClockwiseStencilFail = StencilOperation.IncrementSaturation,\r\n                CounterClockwiseStencilPass = StencilOperation.IncrementSaturation,\r\n                ReferenceStencil = 0,\r\n                StencilEnable = true,\r\n                StencilMask = 0,\r\n            };\r\n\r\n        _stencilReadOnly = new DepthStencilState()\r\n        {\r\n            DepthBufferEnable = false,\r\n            DepthBufferWriteEnable = false,\r\n            CounterClockwiseStencilFunction = CompareFunction.Less,\r\n            StencilFunction = CompareFunction.Less,\r\n            StencilFail = StencilOperation.Keep,\r\n            StencilPass = StencilOperation.Keep,\r\n            CounterClockwiseStencilFail = StencilOperation.Keep,\r\n            CounterClockwiseStencilPass = StencilOperation.Keep,\r\n            ReferenceStencil = 0,\r\n            StencilEnable = true\r\n        };\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5430", "title": "SpriteBatch with simple colored quad", "body": "One of the big frustrations I have over and over again is that I need to provide a texture input for SpriteBatch.Draw() even if I just want a colored quad to be drawn.\r\n\r\nI think almost everyone who worked with Mono or XNA can relate to this problem and creating a white 1x1 texture everytime is bothersome, and needless to say it's useless GPU overhead to need a texture read for every pixel.\r\n\r\nAt the same time spritebatch is super accessible, especially for beginners, and probably a better implementation of quad batching than most are willing to implement themselves.\r\n\r\nI would therefore propose an implementation of a draw function with only \r\n`(Rectangle destinationRectangle, Color color)`\r\ninputs, with a simplified pixel shader along the lines of\r\n```\r\nPixelShader(...)\r\n{\r\nreturn input.Color;\r\n}\r\n```\r\n\r\nOf course a different overload with stuff like SpriteEffects, Rotation etc. could also be provided.\r\n\r\nAlternatively it could be called DrawColor or DrawQuad to make it distinct from the normal Draw();\r\n\r\nWhat do you think?\r\n\r\nEDIT: I haven't thought about the batching actually, i just thought about convenience. But it obviously can't work with the batching. I still think it would be nice to provide a function to draw colored quads by default, even if not with the default spritebatch.\r\nOr have a 1x1 texture provided internally so this function can be done.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "polsys": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5428", "title": "Getting the OpenGL tests working", "body": "This is the list of issues and test failures I had running the OpenGL tests on Windows. This list has since been edited to reflect the current state (not necessarily merged into develop).\r\n\r\n- [x] `soft_oal.dll` not found, and a mistake in `DynamicSoundEffectInstance` disposal. Fixed in #5427.\r\n- [x] Some `Texture2D.Get/SetData()` tests fail with OpenGL error `GL_INVALID_OPERATION`. Fixed in #5429.\r\n- [x] Effect compilation is not implemented, which causes all the effect tests and a `SamplerState` test to fail. Worked around in #5429.\r\n- [x] Some `SoundEffect.FromStream()` tests fail. Fixed in #5429.\r\n- [x] `Texture3D` is not implemented but the tests are executed. Fixed in #5429.\r\n- [x] `GameTest+Misc.ExitHappensAtEndOfTick` fails. Fixed in #5429.\r\n- [x] One visual `RasterizerState` depth bias test fails. Fixed in #5429.\r\n\r\nI applied the #5426 fix for the compressed texture regression, so those failures are omitted. That regression would have been caught if the tests were runnable.\r\n\r\nThese issues are still open or should be investigated:\r\n- [x] The `BlendState` visual test fails with a considerable diff. #5563\r\n- [x] Investigate going back to runtime effect compilation for visual tests, on DirectX only\r\n- [ ] A bunch of tests is ignored on OpenGL due to missing functionality or failures - these can be seen on the test report\r\n- [ ] The `ShaderTest(RainbowH)` is not run on GL. It fails and can't be simply ignored because it's a parameterized test case.\r\n- [ ] Some `Texture2DNonVisualTest` cases are similarly disabled due to missing format support\r\n- [ ] The `DrawOrder_falls_back_to_order_of_addition_to_Game` test is ignored on DirectX because of some failures to be investigated.\r\n\r\nSince we have worked on Windows, the tests should also be checked on Mac. And of course, once they work, they should be added to the automated build \ud83d\ude04", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HypedHamster": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5418", "title": "Sound Effects only play intermittently on Android (MG 3.6)", "body": "This has been an Android issue since MG3.5 (all was good in 3.4). Sound effects usually play fine the first time they play and then hardly ever work after that. Clicking a button that repeatedly plays a sound effect will eventually crash the device too, with the following error:\r\n\r\n AL.Source (SourceId, ALSource3f.Position, _pan, 0, 0.1f);\r\n        ALHelper.CheckError(\"Failed to set source pan.\");\r\n\r\nManually setting the pan for each sound effect stops this crash but the sound effect still only plays occasionally.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pareklund": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5417", "title": "ToggleFullScreen not working in latest dev build", "body": "[DISCLAIMER: I haven't been developing on the Windows/.NET platform for many years, so I apologize if I have missed something fairly obvious.]\r\n\r\nIssue Description:\r\nCalling graphics.ToggleFullScreen() causes a NullReferenceException to be thrown. \r\n\r\nStacktrace:\r\n\"System.NullReferenceException: Object reference not set to an instance of an object.\\r\\n   at Microsoft.Xna.Framework.Graphics.GraphicsDevice.PlatformPresent()\\r\\n   at Microsoft.Xna.Framework.Graphics.GraphicsDevice.Present()\\r\\n   at Microsoft.Xna.Framework.UAPGamePlatform.Present()\\r\\n   at Microsoft.Xna.Framework.Game.EndDraw()\\r\\n   at Microsoft.Xna.Framework.Game.DoDraw(GameTime gameTime)\\r\\n   at Microsoft.Xna.Framework.Game.Tick()\\r\\n   at Microsoft.Xna.Framework.UAPGameWindow.Tick()\\r\\n   at Microsoft.Xna.Framewor\"\r\n\r\nSteps to Reproduce:\r\n1. Create a MonoGamew Windows 10 Universal Project, targeting .NET Framework 4.6.1 and UWP 10.0.14393.0 (Target and Minimum). \r\n2. Build and run => Works\r\n3: Add graphics.ToggleFullScreen() in game class constructor as follows:\r\n        public Game1()\r\n        {\r\n            graphics = new GraphicsDeviceManager(this);\r\n            graphics.ToggleFullScreen();\r\n            Content.RootDirectory = \"Content\";\r\n        }\r\n4. Rebuild and Run => NullReferenceException\r\n\r\nEnvironment:\r\n* Windows 10 and Xbox One (same behaviour regardless of deployment target)\r\n* Visual Studio Community 2015 v14.0.25431.01 Update 3\r\n* .NET Framework 4.6.01586 \r\n* Latest MonoGame development build (3.6.0.1352)\r\n* UWP 10.0.14393.0\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KrytenCoder": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5411", "title": "Custom app icons are overridden by MonoGame icon", "body": "Since I upgraded to dev code I have noticed the application icon for my game is now the orange monogame logo. Before I had it set to a custom icon. Checking the commit history I found a commit that was supposed to fix this issue by checking if a custom icon was used before overriding with the monogame icon. This issue seems to be a regression caused by the change from OpenTK.\r\n\r\nThe commit ref was 6aae06b841ee896e7c4dbb9e69a3e8b169cfec7c", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Bulmanator": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5396", "title": "MonoGame Portable Library creation fails with 'Unknown solution item type: PortableDotNet'", "body": "I have recently installed MonoDevelop and MonoGame and while trying to create a Portable Library (PCL)   it will fail with this message.\r\n![screenshot from 2017-01-05 17-14-33](https://cloud.githubusercontent.com/assets/8584482/21690027/747aa41e-d36a-11e6-9063-5e6acb5e35d5.png)\r\n\r\nCreating a shared library and a standard application work fine and creating a normal portable library, not a MonoGame one, works fine as well\r\nI got the monogame-sdk.run from the development branch on your website however the same thing did occur with MonoGame 3.5 as well.\r\n\r\nI am running Antergos Linux which is a derivative of Arch (Not sure if you officially support this) and dependencies are as such:\r\nMonoDevelop : 6.3\r\ngtk-sharp3 : 2.99.3-1\r\nreferenceassemblies-pcl : 4.6-1\r\nmono : 4.6.1.3-1\r\nmono-addins : 1.1-1\r\n\r\nIf you need any other information please let me know\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "minhnguyenlinknode": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5395", "title": "Unable to compile OBJ to XNB", "body": "I have been using Monogame Pipeline tool 3.5.1 to convert OBJ to XNB but got following error message.\r\n\r\n![image](https://cloud.githubusercontent.com/assets/9201108/21687356/d9edc092-d360-11e6-94c7-2cc86ba7ed04.png)\r\n\r\nI've attached my OBJ for investigation.\r\n\r\n[obj.zip](https://github.com/MonoGame/MonoGame/files/687683/obj.zip)\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hayderc": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5393", "title": "AndroidGameActivity.OnBackPressed is never called", "body": "1. Create a new android monogame project.\r\n2. In Activity1.cs add this\r\n        public override void OnBackPressed()\r\n        {            \r\n            // break point;\r\n        }\r\nLaunch the app and hit the hardware back button. \r\n\r\n[Expected] break point is hit and nothing happens (since base is not called)\r\n[Actual] break point never hit, leaving the app\r\n\r\nThis blocks adding a custom exist confirmation \r\n\r\nThe workaround is to use the GamePad.GetState(PlayerIndex.One).Buttons.Back == ButtonState.Pressed in the update call instead.", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jakepoz": {"issues": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5387", "title": "Sounds Don't Play Consistently on Monogame Android", "body": "On some Android devices, sound effects don't play consistently. They will either cut out completely for a few seconds at a time, or play fine in one game session, but then not play in another.\r\n\r\nI've attached a sample project that shows what happens. On a Kindle Fire HDX, the sounds play consistently, but on a Google Pixel they cut out sporadically. The project should call all the BINGO numbers from B1 to O75 continuously in a loop.\r\n\r\n[https://dl.dropboxusercontent.com/u/14806845/MonoGameAndroidAudioTest.zip](https://dl.dropboxusercontent.com/u/14806845/MonoGameAndroidAudioTest.zip)\r\n\r\n[Video repro on Google Pixel](https://goo.gl/photos/FQzvk6KAc4oZFVkN6)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/5387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5efb80f6e09cbd68078434d4c5ce43ed5156df13", "message": "Adding a missing handler for scroll wheel events"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rds1983": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5a7ad7f032cd4239c396799012e3a3b285f9008a", "message": "Updated to the latest version of StbSharp (#6131)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/367901a26b394348d1b9f51b56724bf8b076297b", "message": "Fixes #5567: Replacing System.Drawing for DesktopGL"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6126", "title": "Made SpriteFont constructor public", "body": "Please, consider making the SpriteFont constructor public. So it could be created in the run-time, ignoring Content Pipeline.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5508", "title": "Added ability to determine the underlying game platform type during the run-time.", "body": "It may be useful in some cases.\r\nI.e. if you are creating Effect by providing it's bytecode and therefore would need to know whether the underlying platform is DX or GL.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jkotas": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/64783185310f9ecb533719acb1f0b95740c4f075", "message": "Change OpenGL.LoadEntryPoint to return T\n\nIt avoids casts on every callsite."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6118", "title": "Delete wrong use RuntimeHelpers.OffsetToStringData", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KonajuGames": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8e9affad07c9facdb1be8acc63007ff1a0d53b64", "message": "Revert \"[MGCB] Set working dir for all the commands under response file (#6056)\" (#6076)\n\nThis reverts commit 063d7cac062ff760c892e9e468e49cc0cc1f835e."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/bd22d49e9cc8db4d1731f602c53f20276332da82", "message": "Compressed texture fallback formats (#6003)\n\nThis PR fixes some cases where ETC1 fallback wasn't working as expected, and expands the fallback support to allow NPOT and non-square textures to fall back to 16-bit formats instead of failing.\r\n\r\nMore unit tests added for texture compression.\r\n\r\nIf no rect is passed to Texture2D.SetData() that takes an optional rect, it passes the call to the full texture PlatformSetData instead for performance reasons.\r\n\r\nRemove a try..catch on Android that was hiding ContentLoadException thrown during content load.\r\n\r\nFixes #5983"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/778ca9a696314ffb7d97fd58405a6124b5c50a61", "message": "Fix for reading 24-bit DDS files (#5948)\n\nIt was trying to read 32-bits per pixel rather than 24-bits from the file. The expansion to 32-bits happens later."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/cabc8a7dd14ea81f35bd5308f768cddfad7cca09", "message": "Fixes to switching away from exclusive full-screen (#5887)\n\n* Fixes to switching away from exclusive full-screen\r\nFixes DirectX switching away from exclusive full-screen mode by forcing the swapchain out of exclusive mode and minimizing the window.\r\nFixes OpenGL switching away from exclusive full-screen mode by enabling the SDL hint to minimize video on loss of focus when changing to exclusive full-screen mode, otherwise the hint is left disabled.\r\n\r\nFixes #5885\r\n\r\n* Add exemption for Linux and Mac when setting the SDL hint for minimizing when losing focus."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/1bc51e36bfeede613c6f7d5c42be3567a78ad6b6", "message": "Better support for WAV audio formats in content pipeline and FromStream (#5750)\n\n* Support for MS-ADPCM, IMA/ADPCM, 8-bit, 16-bit, 24-bit, float in both content pipeline and SoundEFfect.FromStream().\r\n\r\n* - AudioContent: Revert back to null identity.\r\n- AudioLoader: If byte rate is zero from the file, calculate it.\r\n- OpenALSoundController: Add helper function to determine if a format is stereo or not.\r\n- SoundEffect.OpenAL: Calculated duration depends on number of channels.\r\n\r\n* Add parameter change to SoundEffect.Web.cs.\r\n\r\n* Fix some MS-ADPCM tests with incorrect number of parameters.\r\n\r\n* MonoGame.Tests.definition: Remove links to native DLLs (SDL, openal-soft) that are supplied by MonoGame.Framework.\r\nAudioLoader.cs: Rewrote AudioLoader.LoadWave to return more information and read more fields from the WAV file.\r\nSoundEffectTest.cs, XactTest.cs: Added call to FrameworkDispatcher.Update() in Setup() to initialise audio system before audio tests are run.\r\n\r\n* - Convert IMA/ADPCM and MS-ADPCM to 16-bit PCM when not supported by the OpenAL library on the platform.\r\n- Only support our own OpenAL bindings.\r\n\r\n* - Fix MS/ADPCM sound effect tests.\r\n\r\n* - FIx Android build."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/4a603103e024b83ec808c6c79e35019f17bb193b", "message": "Allow GL resources to be disposed cleanly (#5850)\n\n* Allow GL resources to be disposed cleanly\r\nGL resources (textures, buffers, effects, shaders, queries, framebuffers) are now queued by the GraphicsDevice and deleted after the Present on the next frame.  This gives them time to be released by any rendering operations and allows the GC to clean up the wrapper objects.\r\nSDL GL contexts are treated separately since there won't be a GraphicsDevice around to clean them up.\r\n\r\n* OpenGL ES 2.0 doesn't have queries."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e4609495dff3ed2b312f3f19dd194e6b67331a4a", "message": "Fix enum that doesn't exist in OpenGL ES 2.0 (#5774)\n\nGL_TEXTURE_BASE_LEVEL is not defined for OpenGL ES 2.0, so don't try to use it. A value of zero is assumed to be the default.\r\n\r\nFixes #5773"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8b5bc3ac93960cd88b60bec9917956209f025d99", "message": "Texture2D mipmap generation and population fixes (#5614)\n\n* - Mipmaps are now generated correctly down to 1x1 in the content pipeline.\r\n- Mipmaps are generated in the content pipeline in one location before it gets to the TextureProfile, avoiding duplication of functionality.\r\n- Mipmaps are generated before compression, not during.\r\n- Texture2D.OpenGL construction no longer generates mipmaps, but allocates mipmaps for population by SetData.\r\n- Added more texture processing tests for non-square, power-of-two and non-square, non-power-of-two textures with mipmaps.\r\n- Added Texture2D PlatformSetData overload for optimization of setting of an entire mip level.\r\n\r\n* - Fix Texture2D.Web.cs.\r\n\r\n* Fix for building on Mac.\r\n\r\n* - Move some consts from Texture.OpenGL.cs to SamplerState.OpenGL.cs to try to fix an Android build fail on the build machine.\r\n\r\n* - Add OpenTK to Android's Framework.Net project to try to fix this build error.\r\n\r\n* - Fixed some missing parameter validation in Texture2D.SetData().\r\n\r\n* Tweaked texture processor tests to minimize magic numbers.\r\n\r\n* - Added support for glDebugMessageCallback to get some helpful error messages.\r\n- OpenGL textures required the calls to glTexImage2D and glCompressedTexImage2D with null data pointers to apparently allocate the texture memory, otherwise it gives INVALID_VALUE errors complaining about the texture format when these functions are called later with proper data.\r\n- The Dispose for Shader.OpenGL is now more robust for cases where the shader may be destroyed elsewhere."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/6c2e48fae82d72c37bdb1c38ba6c893593b79f9d", "message": "Fixed leaks that affected shutting down and recreating GraphicsDevice under DirectX (#5728)\n\n* Windows DirectX leak fix\r\n- The swapchain was not being disposed in GraphicsDevice.DirectX for Windows.\r\n- Added PlatformDispose() to BlendState.\r\n- SpriteBatchTest was not calling base.TearDown().\r\n- GraphicsDeviceTestFixtureBase calls game.DoInitialize() rather than CreateDevice() directly on the IGraphicsDeviceManager. This allows the call to game.Dispose() to properly clean up the GraphicsDeviceManager.\r\n- VertexBuffer ctor was assigning the GraphicsDevice to the VertexDeclaration, but this was not used anywhere. Most common VertexDeclarations are a static global resource, thus it was holding a reference to the first GraphicsDevice.\r\n\r\n* - Change BlendState.PlatformDispose() to a partial method.\r\n- Add setter for Game.graphicsDeviceManager property so it can get set when the GraphicsDeviceManager is created.\r\n- Revert change to GraphicsDeviceTestFixtureBase so the XNA tests compile again.\r\n- Add new assets to XNA test project.\r\n\r\n* Revert changes to MonoGame.Tests.XNA.csproj."}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6008", "title": "Use StbSharp for all Texture2D.FromStream", "body": "StbSharp is now used for all implementations of Texture2D.FromStream(GraphicsDevice, Stream), avoiding discrepancies with OS-provided image loading routines.\r\n\r\nAs a result of this, DirectX platforms no longer support TIF or DDS through FromStream().\r\n\r\nAdded unit tests for loading 1-, 8-, 24- and 32-bit PNGs.\r\n\r\nFixes #6001", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5926", "title": "Implement GraphicsDeviceManager FindBestDevice and RankDevices", "body": "An implementation of `GraphicsDeviceManager.FindBestDevice` and `GraphicsDeviceManager.RankDevices` that matches XNA's implementation on initial tests in both windowed and fullscreen modes.\r\n\r\nFixes #5669", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5480", "title": "A test of changes to the installer.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5446", "title": "Prevent crash when multisampling is not supported in DirectX", "body": "If the GPU/driver does not support multisampling for a back buffer format, the quality returned is 0, which became -1.  Passing this value to create the D3D11Device causes it to fail with a SharpDX exception.\r\n\r\nDon't know how to add a unit test for this since it appears to be hardware/driver dependent.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5438", "title": "Simplified parameter prefix", "body": "Replaces #5421.\r\n\r\n* Added \"-\" as an optional parameter prefix in addition to \"/\" in 2MGFX.\r\n* Source file and output file parameters in 2MGFX now use \"/SourceFile:\" and \"/OutputFile:\" parameter names to avoid trying to differentiate between parameters and absolute paths on Linux and Mac.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5437", "title": "Recreation of VideoPlayer.WMS update", "body": "Recreated from #5084 due to GIT craziness.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5340", "title": "Fallbacks if the preferred render target formats are not supported", "body": "DirectX 11 (DXGI 1.1) does not support 16-bit surface formats Bgr565, Bgra5551 or Bgra4444 for render targets.  DirectX 11.1 (DXGI 1.2) does support these surface formats for render targets.\r\nhttps://msdn.microsoft.com/en-us/library/windows/desktop/ff471325(v=vs.85).aspx\r\n\r\nThis change implements a check for the support of the requested format and falls back to `SurfaceFormat.Color` and `DepthStencilFormat.Depth24Stencil8` if the requested formats are not supported.", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648", "body": "I believe the Rectangle.Intersects methods would be more efficient if the by-value called the by-ref, rather than the by-ref calling the by-value.  The purpose of by-ref methods is to be faster.  By having the by-ref call the by-value, you lose all benefits of using the by-ref version.\n\nIn XNA, Color channels are expressed in the range 0.0-1.0 when represented by floats and 0-255 when using integers.  Your FromNonPremultiplied(Vector4) would truncate all channels to zero except for those channels that were at full (1.0).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2407292", "body": "Nice.  All issues addressed.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2407292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2538351", "body": "This will fix the sprite rendering in the Platformer sample.  The Animator class assumes the texture height is the frame width, and the texture loader was stretching the texture horizontally so the frames were now wider than expected.\n\nI don't know if any other samples or code depends on the stretching behaviour though.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2538351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2989445", "body": "I knew there'd be something. :)  Thanks Kenneth.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2989445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3009775", "body": "Hi Dean,\n\nValid points.  I will address those soon (if they haven't been done\nalready).  I see Kenneth has been making other fixes too, which is great.\nWell, not great from the point of view of my commit of code that wasn't\nfully working but great that the brokenness is getting fixed.\n\nSly\n\nOn 3 December 2011 03:12, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> Hi Steve\n> \n> Just managed to check out your ContentManager changes, nice work :).\n> \n> There is a slight problem on android though, the Dispose method on\n> BinaryReader is not public, so the try finally does not work in\n> ReadAsset. however changing over from a try finally to a using fixes\n> the issue. If you think that is a good work around that will work on\n> all the other platforms then I will make that change.\n> \n> I also noticed that we are creating a MemoryStream if the xnb is\n> compressed. Do we need to dispose of this as well? Or let the Gc\n> collect it.\n> \n> Anyway, I love the new partial classes approach keeps all the code the\n> same, we should probably try to roll that out across the project (if\n> we can :) )\n> \n> Hope all is well\n> \n> Dean\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/138#issuecomment-2992843\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3009775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3045929", "body": "Sounds similar to device reset issues we used to deal with on Windows prior to DirectX10.  We may have to reload textures and other affected assets on resume.  This should be trivial for assets loaded through the ContentManager as we have a list of them and their asset names.  Assets created by the developer outside of the ContentManager will need to be manually reloaded or recreated by the developer.  This is what the GraphicsDevice.DeviceReset event is intended for.  ContentManager could attach an event handler to this event so that assets loaded by that ContentManager are automatically reloaded as required.  Alternatively, each Texture2D and other affected assets attach their own event handler when they are created so the objects reload themselves.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3045929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3047841", "body": "Sure\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3047841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3096513", "body": "Working fix at this stage is to copy the input stream to a memory stream for Android only.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3096513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3096915", "body": "Submitted pull request (#168) to fix this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3096915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3159490", "body": "Use the following attribute to prevent the activity being recreated on an\norientation change.\n\n[Activity(ConfigurationChanges=Orientation)]\n\nThis will then call Activity.OnConfigurationChanged when the orientation\nchanges.  All other configuration changes will go through the standard\nactivity re-creation.  It may also help to add Keyboard and KeyboardHidden\nto prevent the activity being recreated when a keyboard is slid open or\nshut.  See the \"Configuration Changes\" section on this page\nhttp://api.xamarin.com/index.aspx?link=T%3aAndroid.App.Activity\n\nSly\n\nOn 15 December 2011 05:32, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> There seems to be a big problem with the Orientation change stuff on\n> Android. After reading the documentation the Activity is re-created each\n> time the Orientation/Configuration changes. The means the Game object is\n> being re-created each time, so all the assets are loaded again and again\n> and again each time the orientation changes.\n> \n> We need to figure out a way to detect this and keep the same game object/\n> content manager around  and just swap out the Activity/ AndroidGameView.\n> \n> This will not effect people who just use a fixed screen orientation for\n> games as the orientation will not change. however this might be the cause\n> of the Resume issue we have been seeing as well.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/170\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3159490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3227049", "body": "I used the test project attached to this issue to develop the MemoryStream\nfix, which is how I could describe the image included.  I am also using the\nlatest released version of Mono for Android.  I'm trying to think of what\ncould cause an OutOfRangeException.\n\nSly\n\nOn 21 December 2011 05:47, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> For the test code attached to this issue the fix works. Which version of\n> mono 4 android are you running? I am running the latest version\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/167#issuecomment-3224168\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3227049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3159490", "body": "Use the following attribute to prevent the activity being recreated on an\norientation change.\n\n[Activity(ConfigurationChanges=Orientation)]\n\nThis will then call Activity.OnConfigurationChanged when the orientation\nchanges.  All other configuration changes will go through the standard\nactivity re-creation.  It may also help to add Keyboard and KeyboardHidden\nto prevent the activity being recreated when a keyboard is slid open or\nshut.  See the \"Configuration Changes\" section on this page\nhttp://api.xamarin.com/index.aspx?link=T%3aAndroid.App.Activity\n\nSly\n\nOn 15 December 2011 05:32, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> There seems to be a big problem with the Orientation change stuff on\n> Android. After reading the documentation the Activity is re-created each\n> time the Orientation/Configuration changes. The means the Game object is\n> being re-created each time, so all the assets are loaded again and again\n> and again each time the orientation changes.\n> \n> We need to figure out a way to detect this and keep the same game object/\n> content manager around  and just swap out the Activity/ AndroidGameView.\n> \n> This will not effect people who just use a fixed screen orientation for\n> games as the orientation will not change. however this might be the cause\n> of the Resume issue we have been seeing as well.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/170\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3159490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3286951", "body": "This is something I had been wanting to do for a long time, but the size of it was daunting.  Looks like you have covered most things that will be required.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3286951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3320851", "body": "A large change to combine all of the Game classes into a single shared Game class has just been pulled in.  You will have to merge that change and redo the pull request (if required).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3320851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3582478", "body": "Thank you for looking at that.  The submitted fix appears to be fine.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3582478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3595480", "body": "Hi Ben.  The source files affected by your fix have been modified since your pull request was added.  Could you rebase the change and resubmit the pull request?  Someone with MonoGame running on a Mac could then verify the fix.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3595480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3667997", "body": "Hi Tom,\n\nI'm curious about the move of content caching in ContentManager.  Was there a problem that it fixed?  The change of line endings makes the diff very difficult to read.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3667997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3679562", "body": "That's cool.  I was curious to know as I did the asset caching.\n\nAs for line endings, I had been ignoring the warning in Visual Studio for\njust that reason: GitHub's diff.  There are many files throughout the\ncodebase that have different line endings due to various historical\nreasons, and I think it is generally best to leave them as they are to make\ndiffs easier to browse on the GitHub site.\n\nSly\n\nOn 27 January 2012 04:53, Tom Spilman <\nreply@reply.github.com\n\n> wrote:\n> \n> @slygamer\n> \n> The issue was that ContentManager.ReadAsset<T>() was incorrectly following\n> the XNA standard.  In MS XNA ContentManager.ReadAsset<T>() returns a new\n> object each time it is called with the same asset name.  Instead MonoGame\n> was incorrectly caching assets within ReadAsset.  I simply moved the\n> caching into Load<T> where it belongs.\n> \n> As far as the line endings... it seems like someone had commited it with\n> bad line endings before as it was the only file in all my changes with this\n> issue.\n> \n> To identify the changes... look for the + in the left column.  Github\n> knows what changed, but doesn't display it well... it seems to focus on\n> colorizing whitespace changes when it should focus on actual code changes.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/247#issuecomment-3674268\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3679562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3667997", "body": "Hi Tom,\n\nI'm curious about the move of content caching in ContentManager.  Was there a problem that it fixed?  The change of line endings makes the diff very difficult to read.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3667997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3679562", "body": "That's cool.  I was curious to know as I did the asset caching.\n\nAs for line endings, I had been ignoring the warning in Visual Studio for\njust that reason: GitHub's diff.  There are many files throughout the\ncodebase that have different line endings due to various historical\nreasons, and I think it is generally best to leave them as they are to make\ndiffs easier to browse on the GitHub site.\n\nSly\n\nOn 27 January 2012 04:53, Tom Spilman <\nreply@reply.github.com\n\n> wrote:\n> \n> @slygamer\n> \n> The issue was that ContentManager.ReadAsset<T>() was incorrectly following\n> the XNA standard.  In MS XNA ContentManager.ReadAsset<T>() returns a new\n> object each time it is called with the same asset name.  Instead MonoGame\n> was incorrectly caching assets within ReadAsset.  I simply moved the\n> caching into Load<T> where it belongs.\n> \n> As far as the line endings... it seems like someone had commited it with\n> bad line endings before as it was the only file in all my changes with this\n> issue.\n> \n> To identify the changes... look for the + in the left column.  Github\n> knows what changed, but doesn't display it well... it seems to focus on\n> colorizing whitespace changes when it should focus on actual code changes.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/247#issuecomment-3674268\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3679562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4000570", "body": "Thanks for the report.  Is fixed in pull request #305.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4000570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4052108", "body": "This request will need to be merged with latest changes.  I believe we were waiting on some more local changes to be added to the pull request, is that right?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4052108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930", "body": "Javier, did you intend to add the ContentManager.cs.orig that was created as part of a merge conflict?  That file should not be added to the repos.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/796930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815", "body": "In Direct3D, the clear is not affected by the scissor rect.  In OpenGL,\nclear is affected by scissor rect.  To maintain the same behaviour as XNA,\nthe scissor rect needs to be reset before the clear.\n\nOn 28 August 2012 06:30, kaalus notifications@github.com wrote:\n\n> In XNA clears are affected by commit. Why this change?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1771938.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1772815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107", "body": "I wasn't too worried about redundant state change because the scissor rect\nis already tested for that before the change is applied.\n\nXNA 4.0 takes the path of \"assume nothing: explicitly set everything you\ndepend on before drawing.\" (\nhttp://blogs.msdn.com/b/shawnhar/archive/2010/04/02/state-objects-in-xna-game-studio-4-0.aspx\n)\n\nIf some code requires a specific scissor rect, it should always set it.\n\nOn 28 August 2012 10:58, Tom Spilman notifications@github.com wrote:\n\n> @slygamer https://github.com/slygamer\n> \n> Do you think it would be better if we restored the ScissorRect to its\n> previous state after the Clear()?\n> \n> Note that we have a patch coming that will remove all redundant GL state\n> settings... so you don't need to worry about that issue.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1772940.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361", "body": "Sure thing.\n\nOn 28 August 2012 12:04, Tom Spilman notifications@github.com wrote:\n\n> I agree with what you're saying... you shouldn't assume these things and\n> XNA is designed with that in mind. Still MonoGame is not just following XNA\n> theory... we're replicating its behavior.\n> \n> If XNA doesn't reset the ScissorRect after the clear then we shouldn't be\n> either. Especially since in this case it is easy for us to make it work\n> like XNA does.\n> \n> I'll double check the XNA behavior... if you're good with this being fixed\n> then i'll submit it as part of my next pull.\n> - Tom\n>   \n>   \u2014\n>   Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/a9e207ae17182a902355e552e357db1c975937aa#commitcomment-1773141.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1773361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701", "body": "Ok. That would be my bad as I don't have any test cases using custom\nshaders and those aspects were missed in the discussion of the pull\nrequest. You when I get into the office I'll revisit it unless someone does\nsooner.\nOn 1 Sep 2012 01:04, \"Renaud B\u00e9dard\" notifications@github.com wrote:\n\n> I don't understand why this is necessary or a good thing.\n> First it made one of my shaders break because it has elements (sub-params)\n> and the parent/root value is never set.\n> Also it seems valid to set, for instance, a Sampler2D to null to clear its\n> texture.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/mono/MonoGame/commit/8eaf9fb0bdaf6837ac9363b1d46f2135ab27c3ea#commitcomment-1794081.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046", "body": "This commit re-added the AndroidApplication tag to the MonoGame.Framework.Android.csproj after it had been removed previously to fix linking issues with Mono for Android in Visual Studio.  Did you use the latest MonoDevelop for this edit?  I'm guessing it might have been due to the change of true and false to True and False as happened in MonoDevelop for MonoTouch as well.\n\nWe need to make sure the AndroidApplication tag doesn't get added back in.  Could you think of how it may have happened?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1849046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1928252", "body": "Was also fixed in another PR just prior to your submission.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1928252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2186057", "body": "Found an error with this. AsyncResult does not exist in WinRT.  What was wrong with the code before and how does your change fix it?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2186057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2390189", "body": "PR submitted to fix compiling on those platforms.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2390189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3010690", "body": "I've got local changes to support checking for the extensions.  There are\nseveral extensions that declare support for DXT and S3TC.  Will be checking\nit all works ok then make a PR.\u200b\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3010690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3014156", "body": "The DXT textures appear to load on my Tegra 3-powered Nexus 7, but my\ntextures are black.  Trying to work out the issue.\u200b\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3014156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442237", "body": "Mgbot doesn't build iOS?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442266", "body": "OK, so why is this breaking with an unknown symbol for Alexandre and not\nfor mgbot? Strange.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3711117", "body": "I have previously used the Nuclex font importer and processor that does\njust that. Optional path to TTF file or falls back to installed fonts, and\nuses FreeType for rendering to an uncompressed texture for higher quality.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3711117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3868444", "body": "Keys shouldn't have the Flags attribute as you don't combine them together.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3868444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4345318", "body": "Added PR #2090\u200b\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4345318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764", "body": "I've never used a .config file, so I do not know what that would give us.\n\nSly\n\nOn 13 February 2012 20:30, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> >  #if IPHONE\n> >               const string libglsl_optmizer_dll = \"__Internal\";\n> > +#elif ANDROID\n> > -             const string libglsl_optmizer_dll = \"libglsl_optimizer.so\";\n> \n> Can you use the .config file on Android?\n> \n> Though maybe it'd just be easier to use ifdefs for all platforms.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443114\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767", "body": "Sorry.  That was left over from some experimentation.  I can change that\nback.\n\nOn 13 February 2012 20:32, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -155,6 +152,11 @@ public void End ()\n> > \n> >  #else\n> >                       if (_effect == null) {\n> > -                if (spriteEffect == null)\n> > -                {\n> > -                    // Use a custom SpriteEffect so we can control the\n> >   transformation matrix\n> > -                    spriteEffect = new Effect(this.graphicsDevice,\n> >   Effect.LoadEffectResource(\"SpriteEffect\"));\n> > -                }\n> \n> Why not leave it static?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443124\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780", "body": "Is there anything wrong with it there?  That was the only difference in the\nAndroid-specific file, so I merged it into the common source file in the\nsame place.\n\nOn 13 February 2012 20:35, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -194,11 +197,24 @@ public bool IsFullScreen\n> >                               wantFullScreen = value;\n> >                               if (_graphicsDevice != null)\n> > \n> > ##                               {\n> > \n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +\n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +#if ANDROID\n> > -                    ForceSetFullScreen();\n> >   +#endif\n> \n> Can this be put somewhere else?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443133\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805", "body": "DXT decompression is nasty as it is (allocating at least byte[4] for every\npixel in the source data).  Adding a loop with the requisite overhead is\nnot warranted, especially for only four items that are better unrolled\nanyway.\n\nOn 13 February 2012 20:37, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 2] = finalColor[2];\n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 3] = finalColor[3];\n> > -                    int py = y \\* 4 + blockY;\n> > -                    if (py < height)\n> > -                    {\n> > -                        int px = x \\* 4 + blockX;\n> > -                        int offset = y \\* blockCountX \\* 64 + blockY *\n> >   (blockCountX - 1) \\* 16 + x \\* 16 + blockX \\* 4;\n> > -                        if (px < width)\n> > -                            imageData[offset] = finalColor[0];\n> > -                        if ((px + 1) < width)\n> > -                            imageData[offset + 1] = finalColor[1];\n> > -                        if ((px + 2) < width)\n> > -                            imageData[offset + 2] = finalColor[2];\n> > -                        if ((px + 3) < width)\n> > -                            imageData[offset + 3] = finalColor[3];\n> > -                    }\n> \n> Just use a loop, maybe\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443149\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815", "body": "I can change that back.\n\nOn 13 February 2012 20:36, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > ```\n> >           }\n> > \n> >           internal static string GetFilename(string name)\n> >           {\n> >                   // Replace Windows path separators with local path\n> > ```\n> > \n> > separators\n> >                       name = name.Replace('\\',\n> > Path.DirectorySeparatorChar);\n> > -                     string fileName =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> > -                     return fileName;\n> >   +#if IPHONE\n> > -                     name =\n> >   Path.Combine(NSBundle.MainBundle.ResourcePath, name);\n> >   +#endif\n> > -                     return name;\n> \n> we've got a separate TitleContainer.cs for each other platforms instead of\n> idefs, since both functions have differences on each,\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r443140\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447116", "body": "I can give it a go.  I'll copy the Mac file and see if it works.\n\nOn 14 February 2012 14:11, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> >  #if IPHONE\n> >               const string libglsl_optmizer_dll = \"__Internal\";\n> > +#elif ANDROID\n> > -             const string libglsl_optmizer_dll = \"libglsl_optimizer.so\";\n> \n> Such platform dll mapping is usually done in mono using dllmap in a config\n> file:\n> https://github.com/mono/MonoGame/blob/develop3d/MonoGame.Framework/MonoGame.Framework.MacOS.dll.config.\n>  Dono if it works like that on android though.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r447040\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447134", "body": "I would like to refine the DXT decompression at some point.  I also don't\nlike to assume what the JIT may do, coming from Windows Phone where there\nis very minimal JIT.\n\nOn 14 February 2012 14:06, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 2] = finalColor[2];\n> > -                    imageData[y \\* width \\* 64 + blockY \\* width \\* 16 + x\n> > - 16 + blockX \\* 4 + 3] = finalColor[3];\n> > -                    int py = y \\* 4 + blockY;\n> > -                    if (py < height)\n> > -                    {\n> > -                        int px = x \\* 4 + blockX;\n> > -                        int offset = y \\* blockCountX \\* 64 + blockY *\n> >   (blockCountX - 1) \\* 16 + x \\* 16 + blockX \\* 4;\n> > -                        if (px < width)\n> > -                            imageData[offset] = finalColor[0];\n> > -                        if ((px + 1) < width)\n> > -                            imageData[offset + 1] = finalColor[1];\n> > -                        if ((px + 2) < width)\n> > -                            imageData[offset + 2] = finalColor[2];\n> > -                        if ((px + 3) < width)\n> > -                            imageData[offset + 3] = finalColor[3];\n> > -                    }\n> \n> I would think the JIT would unroll it. Besides, it would be a very\n> marginal gain considering the sloppiness of the rest of the decompression\n> code.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r447020\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447136", "body": "I'll have a look and see if GamePlatform does allow this to be extracted.\n\nOn 14 February 2012 14:01, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -194,11 +197,24 @@ public bool IsFullScreen\n> >                               wantFullScreen = value;\n> >                               if (_graphicsDevice != null)\n> > \n> > ##                               {\n> > \n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +\n> > _graphicsDevice.PresentationParameters.IsFullScreen = value;\n> > +#if ANDROID\n> > -                    ForceSetFullScreen();\n> >   +#endif\n> \n> That sort of stuff is put in the *GamePlatform classes on the other\n> platforms, though I don't know if that's applicable in this case.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/299/files#r447001\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/506346", "body": "To open the Android solution in Visual Studio, you need to have Mono for Android installed.\n\nTo open the iOS solution in MonoDevelop on a Mac, you need MonoTouch installed.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/506346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602366", "body": "On Android it won't be necessary since it doesn't do anything on background\ncontexts.\n\nCould Android tell the TextureCollection a slot is dirty if it does\nanything with a texture due to a background thread?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602396", "body": "It would only be required on platforms that don't have a background context\nsuch as Android, and and TextureCollection wouldn't need to be thread safe\nas the GL calls are all done on the main thread in that case.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602629", "body": "It would need to go back.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1602629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1716784", "body": "Nice catch.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1716784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1717817", "body": "Ahh, that's the overload of Draw() that takes a Vector4 for destinationRectangle, so this will promote texture.Width and texture.Height to float automatically before the divide.  Should be fine then.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1717817/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2023377", "body": "This line throws a compiler error on Android.  Cannot add int to IntPtr.  Should be\n    dataPtr = (IntPtr)(dataPtr.ToInt32() + dataSize);\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2023377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2028701", "body": "Is that correct to be adding MonoGame and Lidgren assemblies for all MonoDevelop-supported platforms, but only one OpenTK, Tao.Sdl and sdl library?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2028701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2053891", "body": "Looking at other MonoDevelop template projects, it does seem to be how its done.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2053891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1977479", "body": "Did MonoDevelop add that AndroidApplication tag back into the .csproj?  It is incorrect and breaks Visual Studio compilation.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1977479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2174838", "body": "Looks like you may have an extra closing brace there.\n\nEdit: Nope, just different indenting.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2174838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2175517", "body": "Not necessary to be retroactive yet.  At some point before the 3.0 release\nwe will be doing a full pass over the source to fix these things.  4-space\ntabs (the VS C# default) is our chosen indent for the project and in future\nwe will be getting stricter on submissions meeting those requirements.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2175517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2854958", "body": "DXTDataHandler class doesn't need to be public as it shouldn't be visible outside of the assembly.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2854958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2854987", "body": "This should also check if the target platform (in the context parameter) is one of the Windows variants and if TextureFormat is Compressed, since the Compressed texture format should choose the best compression for the target platform.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2854987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2854996", "body": "These additions to Program.cs will need #if WINDOWS around them.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2854996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2855877", "body": "The #if WINDOWS will need to go around this DllImport as well.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2855877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2855882", "body": "Perhaps that could be left until we add Linux and Mac compatibility.  I'll merge now.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2855882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2942412", "body": "A Debug.Assert is a no-op in Release configuration (it uses\nConditionalAttribute(\"DEBUG\")), thus allowing the bad type through.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2942412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3303834", "body": "Oh. That was my test case for making generic type writers work. Its good to\nremove. :-)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3303834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3407973", "body": "For the int version, that would be better replaced with something like\n\n```\nreturn ((value - min) % (max - min)) + min;\n```\n\nNote that is just off the top of my head, so it may contain bugs, but is\nalong the lines of how it should be written.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3407973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3782734", "body": "The third test is redundant, because if the first two pass, then it can be safe to say they already equal each other.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3782734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "lateralusX": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/40bf85dbb4b48a19716777afa78cea4112a2f341", "message": "Fix error when reading none square textures using mipmaps. (#6026)\n\nCommit https://github.com/MonoGame/MonoGame/commit/8b5bc3ac93960cd88b60bec9917956209f025d99#diff-fa10ad1a26f56dc77556dc3503b2028d\r\nchanged how mipmaps generation is handled. Part of that fix includes validation logic\r\nexecuted when setting texture data Texture2D.SetData.\r\n\r\nI have a none square texture 256x128 that correctly loaded in the past, but after\r\ncommit above I get the following exception on load:\r\n\r\nTexture2D.cs:357\r\n\r\nthrow new ArgumentException(\"startIndex must be at least zero and smaller than data.Length.\", \"startIndex\");\r\n\r\nTurns out that when reading back mipmaps we hit a scenario for none square textures that\r\nset width/height to 1x0 instead of 1x1 for smallest mipmap and that cause allocation of\r\n0 length data buffer that in turn trigger ValidateParams to throw an exception.\r\n\r\nProblem is the implementation of Texture2DReader.cs line 78,79:\r\n\r\nint levelWidth = width >> level;\r\nint levelHeight = height >> level;\r\n\r\nSince that will transform to 1x0 for smallest mipmap of none square textures instead of 1x1.\r\n\r\nFix is to make sure we never get smaller than 1x1 in above statements."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MichaelDePiazzi": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/51a0072b11bd19567bb70f588d27f8b3ff518fd7", "message": "[DX] Fixed GamePad.SetVibration \"device not connected\" exception"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4207", "title": "Improved accuracy of fixed time step", "body": "This is in response to issue #4202. I can't say that it will resolve the issue, but it should definitely at least improve things a little. (UPDATE: @bousquetm confirmed that there was a big improvement with my changes, so I think it's now fair to say that this resolves #4202)\n\nIn summary, this PR tries to better consider the inaccuracy of \"Sleep\" and use it more conservatively to try and avoid overshooting the desired update time. The side effect of this is that there'll be some CPU spinning, but the CPU usage increase should be minimal.\n\nFor Windows platforms (except for WinRT), it now considers the timer resolution when sleeping. It will try to sleep as long as possible without overshooting, and then spin the CPU for the remainder. My tests have shown this to be very accurate, and in theory it should never actually overshoot due to oversleeping.\n\nI couldn't use this trick on other platforms though. So for other platforms, it instead only tries to sleep when the next update time is still at least 1ms away, otherwise it will spin the CPU for the remainder. Also, to further reduce the chance of overshooting, it will only perform a \"Sleep(1)\" each time it does sleep.\n\nLastly, @nkast also pointed out that `Task.Delay` (used by WinRT in place of `Thread.Sleep`) was generating garbage. So I've changed it to use `Monitor.Wait` instead, which should be just as accurate without the garbage generation. I wasn't able to properly test this though with a Windows Store app.\n\nWhile I was able to test all of the 3 methods on my Windows 7 machine and prove they at least work on that platform, I wasn't able to test any of this on any other platforms. WinRT in particular probably needs a good test as it's now using `Monitor.Wait` to sleep. The other platforms should be ok though as the change was much less significant, but it would be great if someone could test them also.\n\n**UPDATE (30-Oct):**\nAfter some discussion, it was decided that only the Windows platform would attempt to sleep when using fixed time step because we can still maintain timing accuracy. For all other platforms we couldn't guarantee accuracy when sleeping though, so it now spins the CPU instead (which is what XNA seems to do as well). And to compensate for this, the `Game.InactiveSleepTime` feature from XNA (https://msdn.microsoft.com/en-us/library/microsoft.xna.framework.game.inactivesleeptime.aspx) was also implemented so that sleeping would be performed when the game window is inactive.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "atomgott": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5d4583c343cf6a970ce609061f0783e8189db80c", "message": "Fixed back button problems in UWP (#5810)\n\n* Fixed back button race condition\r\n\r\n* Moved back button logic to UAPGameWindow.ProcessWindowEvents"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8765165ac70b0699254d9b5d58cd38e594d1a9f1", "message": "UWP Templates use target version selected in wizard"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5958", "title": "Reset framebuffer after Texture2D.GetData on GL ES", "body": "GetData left the framebuffer bound to the texture.\r\n\r\nAlthough it is rather unlikely to happen, I think there can still be a problem if a rendertarget was bound before, but I don't know how to fix that.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "roponator": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/a18f7e406b72ec97507728647b6dd6be16cb43e2", "message": "Fix for android 7 nougat for black screen when split-screen is activated (#5785)"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9c2a2490d51f3e140165869c79c07d933ab4255a", "message": "keyboard fix when keyboard stops working when window focus is lost sometimes (#5743)"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6132", "title": "Android crash fix: unsafe fixed statement string->char* causes crash on Android", "body": "**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n**DO NOT MERGE IN YET, NEEDS MORE TESTS!!!**\r\n\r\nIssue:  the app crashes if a function is called which contains a statement like this:\r\nstring str = ...\r\nfixed(char* c = str) \r\n\r\nIf we convert the string to unicode bytes and use fixed(byte* b=strBytes) it works.\r\n\r\nEDIT: **this issue appeared when OpenTK was removed,** an older version of monogame which still has OpenTK (3.7.0.512) works fine.\r\nOpenTK code seemed to have used some native OpenGL calls to do this.\r\n\r\nEDIT 2: I get a crash also if I executed fixed(char* c = str) in our game code (so outside of the MonoGame lib).\r\n\r\n**Potential issue**: this RuntimeHelpers.OffsetToStringData is not applied now: \r\nchar* c = str + RuntimeHelpers.OffsetToStringData / 2\r\nAny idea about this? It works for a quick test game (stuff renders, will need to test more).\r\n\r\n@dellis1972 If I remember correctly you were the one who did the OpenTK removal and rewrite? Do you have any idea about this?\r\n\r\nI'm using the latest development branch.\r\n\r\nThe issue is very strange because the app crashes not when this 'fixed' statement is encountered, but when the function which contains this 'fixed' statement is called:\r\n\r\n```\r\nunsafe void DoUnsafe()\r\n{\r\n  // neither code nor debugger gets to here! \r\n   System.Diagnostics.Debug.WriteLine(\"testy\"); // this does not print!\r\n    string str=\"bla\";\r\n   fixed(char* c = str)\r\n   {\r\n   }\r\n}\r\n\r\nvoid Issue()\r\n{\r\n  DoUnsafe(); // crash happens here!\r\n}\r\n```\r\n\r\n\r\nSome observations: \r\n- sometimes I get a \"index out of range\" exception, but does not happen always. I assume its a side effect of the strange crash, because most of the time the app shuts down hard, no c# exception is thrown most of the time.\r\n\r\nI have confirmed this crash on 2 phones: Huawie G620S-L01 and Nexus 5X.\r\n\r\nThe fix works on both phones.\r\n\r\nCan anyone else reproduce this?\r\n\r\nTop of stack trace:\r\n\r\n```\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt: Stacktrace:\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at <unknown> <0xffffffff>\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.MarshalStringArrayToPtr (string[]) [0x00052] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at MonoGame.OpenGL.GL.ShaderSource (int,string) [0x00008] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n01-06 22:41:26.830 9578-9578/com.game E/mono-rt:   at Microsoft.Xna.Framework.Graphics.Shader.GetShaderHandle () [0x00047] in <aac7c7476e4b413091b00e98f9c80047>:0\r\n```\r\n\r\n\r\nAndroid project compilation:\r\nCompiling with Android 7.1\r\nMin Android version: 4.4\r\nTarget Android version: 4.4\r\n\r\nPhone 1: Huawei G620S-L01\r\nOS: Custom rom LineageOS 14.1\r\nAndroid OS version: 7.1.2\r\n\r\nPhone 2: Nexus 5X\r\nStock rom.\r\nAndroid 8.0.0\r\n  \r\n  \r\n  ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5741", "title": "Exposed classes & functions to allow better threaded texture loading", "body": "We implemented better threaded texture loading in our games to speed up loading.\r\n\r\nThe current monogame threaded approach does not allow for good threading as it mixes loading stuff from files and graphics api dependent texture creation.\r\n\r\nThere are 2 ways we can get our approach to work with future versions of monogame, either:\r\n\r\na) (this PR) expose some monogame classes so we/other users can override them\r\n\r\nb) Add one or two functions to ContentTypeReader, ContentReader, ContentManager & Texture2DReader which take an additional callback parameter and reorder some things so that it's more task/threading friendly.\r\n\r\nAn alternative would be to hack it using reflection but that is something we don't wish to do.\r\nMethod a) would allow future specialization for developers who are in need of it.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5646", "title": "Locking of touchPanelState", "body": "When testing the PR that removes OpenTK for Android we noticed that if Android game loop is running on the worker thread instead of the UI thread that the TouchPanelState class is accessed from the worker and UI thread at the same time without locking.\r\n\r\nThis works fine in 99.999999% of cases but we managed to get a bug just once (which is what led us to this PR) - due to where the bug happened I assume the internal touch state was being converted to an array while it was modified in the 'GetState' function: new TouchCollection (_touchState.ToArray ())\r\n\r\nHow it was tested so far:\r\n\r\nThis PR was build and tested on AWS device farm on a Random Salad Games game. The game was running on the UI thread. It passed all tests.\r\n\r\nSame as 1) but this time 'RenderOnUIThread' was set to false. This time it crashed with an error in the OpenTK lib. I assume it was because OpenTK doesn't support game loop in worker thread properly? If this is so, then this isn't a problem since OpenTK is getting removed.\r\n\r\nSince the goal of this PR is to be able to work when game loop is on a worker thread we tested this with my fixed version of PR #5410 . It passed all tests.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alex-sherman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/33333ce5ffd909abe7cb766bf21e6746f3eb6656", "message": "Use GraphicsAdapter.UseDebugLayers exclusively instead of the DEBUG compile flag (#5798)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "D3vilK4i": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/e3d73ce99a6cadf1b0e5da62e50b4d1a4e438884", "message": "Updated copyright to 2017"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "OfficePop": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ae4388666493d579792ed65c8792c6b10233ab1f", "message": "Edits to readme documentation file (#5835)\n\n* Update README.md\r\n\r\n* Update README.md\r\n\r\n* Update README.md"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ea59ce5784e08d349015e388fbe96073e1b78855", "message": "Update README.md (#5823)\n\nUpdated the link to Microsoft's C# XML Documentation (the old page was archived and no longer current)."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Yubyf": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/702390513702be9cbf11f798b05ee00124be5d73", "message": "Correct an error in XINPUT (#5811)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gsfreema": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/47a47c9f0157d24cc9a581454cca1f11aa0adf51", "message": "Horizontal scroll (#5735)\n\n* Horizontal Scroll Wheel Value\r\n\r\nThis change adds a HorizontalScrollWheelValue property to the MouseState and sets it for the UI systems mentioned below.\r\n\r\n- WinForms\r\n- SDL\r\n- Win8/Universal\r\n\r\n* HorizontalScrollWheelValue for MacOS\r\n\r\n* Fixing Horizontal Mouse Wheel based on PR review\r\n\r\n- Declaring and using a _horzontalScrollWheelValue as backing field\r\n- No longer delegating MouseState constructor with this\r\n- Removing functions that mimicked Microsoft macros since they are simply casts and bitwise operations used once"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/aa98ee62c895d5dd4c27e448c6fd6d89427e8247", "message": "Reusable function for raising events (#5713)\n\n* Reusable function for raising events\r\n\r\nBefore raising an event, you must first check the handler to see if it is null in order to check that an object is subscribed to handle the event.  This is best done if the event handler is stored in a local variable just in case the last subscriber unsubscribes in a different thread between the time the event handler is checked and the handler is actually invoked.  This reusable function makes it easy to raise events by storing a local copy of the handler and checking for null before invoking it.  Many classes already had a helper function for this.  This change refactors those into a single function.\r\n\r\nThere are some instances where more complex logic was being done after the event handler was checked.  In those scenarios, the code was mostly left alone except for the introduction of a local handler variable.\r\n\r\n* Safely raising events through common function\r\n\r\n- Updated events being raised throughout the framework with the new EventHelpers.Raise function\r\n- Updated the name of EventHelper to be plural in case more helper methods are needed in the future."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hach-que": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/ceac152c3d5b7b839a81fc61f176a138dd8a40fe", "message": "Replace environment variable with UseDebugLayers static property"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/1ae213f8783449160cd49e142e9d94b1963058fa", "message": "Add GraphicsDebug class for retrieving DirectX debug messages (#5779)\n\n* Add GraphicsDebug class for retrieving DirectX debug messages\r\n\r\n* Guard against null reference\r\n\r\n* Add copyright notices"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/8925543dd1696ff8679b30033c0cb90bf1ce4281", "message": "Allow DirectX debug layers to be enabled via environment variable (#5786)\n\nWhen using a release build of MonoGame (as is the case whenever using a prebuilt binary), there's no way of enabling the DirectX debug layers, even on systems with those debug layers installed.  To support this scenario, this updates device creation so that if the MONOGAME_ENABLE_DIRECTX_DEBUGGING environment variable is set to \"true\", then MonoGame will attempt to enable the debug layers if they are available."}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5445f4c3f11b11ddc69a9d53288ce114c16f606e", "message": "Check if framebuffer is complete before calling GL.Clear under OpenGL (#5780)\n\n* Check if framebuffer is complete before calling GL.Clear under OpenGL\r\n\r\nThis fixes an issue where on macOS the GL.Clear called immediately after the GraphicsDevice is created throws a FrameBufferExt error, because the backbuffer isn't yet ready for writing.  Adding this check prevents GL.Clear from being called on an incomplete framebuffer.\r\n\r\nI checked during game execution, and once the game is rendering this check passes and GL.Clear is called as expected.\r\n\r\n* Only apply this fix to macOS, as mobile platforms don't have FramebufferExt"}], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5793", "title": "Support GraphicsDebug in OpenGL", "body": "This adds support for retrieving graphics debug messages on OpenGL platforms using the new GraphicsDebug API.  This PR depends on both #5791 and #5792 being merged first.\r\n\r\nThere's some changes in OpenGL platform behaviour with this PR, and one breaking change as outlined below:\r\n\r\n* The OpenGL implementation already captured messages on Debug builds of MonoGame, and emitted them using `System.Diagnostics.Debug`.  I updated the enablement of message capturing to align with DirectX; that is, enabled on Debug builds with the option to be enabled on Release builds by setting `UseDebugLayers` to true. This necessitated moving some code out of `GL`'s static constructor into the PlatformSetup for OpenGL.\r\n* The OpenGL implementation appeared to call a static `OnError` callback in the `GL` class in response to messages being captured.  I've changed the code so this is no longer called, and added an `[Obsolete(..., true)]` attribute which will cause usages of this to emit a compilation error.  It wasn't used in MonoGame itself, and the nature of it's placement in the `GL` class makes it entirely platform specific, so I chose to forcefully deprecate it in favour of `GraphicsDebug`.  This can be changed to a soft deprecation (making the code still call it and changing the Obsolete to a warning) if desired.\r\n* `GraphicsDebugMessage` got some new properties that match the data that OpenGL provides in it's debug messages, since this differs from the kind of information that DirectX provides.  I believe it's better to provide the data in fields that match the underlying subsystem, rather than trying to map things across and losing accuracy in the messages reported.\r\n\r\nTo test that this works, I ran the tests and set a breakpoint on the message capture function:\r\n\r\n![image](https://user-images.githubusercontent.com/504826/27487914-88d244ce-5878-11e7-8400-e8fc98cbfaa7.png)\r\n\r\nIt's not really possible to write an automated test, since different systems may emit different debug messages or not emit messages at all.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5792", "title": "Refactor GraphicsDebug according to feedback", "body": "See #5779. @tomspilman ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5778", "title": "Remove all MonoMac supporting code", "body": "This removes all PLATFORM_MACOS_LEGACY code branches in preparation for the removal of MonoMac support.\r\n\r\nSee #4693 and https://github.com/Protobuild/Protobuild/issues/164.  I intend to move forward with removing MonoMac and the legacy XamMac support in Protobuild very soon.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4406", "title": "Add stream-based content import", "body": "This adds a stream-based content importing API.  As per #4342, our asset importing system is primarily stream based, because we might be sourcing content from non-file based streams (like over the network).  Right now whenever we import content we have to take the stream (which might already be loaded from a file), write it out to disk somewhere, pass that filename into MonoGame (which might then read a stream again) to perform the content import.\n\nBy providing a stream-based content importing API, it removes the requirement to have a temporary file on-disk, and makes importing assets from in-memory or network sources easier.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4295", "title": "Add project creation tool", "body": "See #4288.  This adds a cross-platform project creation tool to MonoGame, intended to replace the Visual Studio and Xamarin Studio templates that are currently used.  Here is a video of a very early version working: https://youtu.be/uxnvCNX95ts\n\nI still need to get these things done before it's mergeable (although it's in a submodule so it's just a case of updating the reference in future):\n- [x] Draw a list of templates from the local folder or branding file\n- [x] Instantiate the project from a template that is on-disk instead of online\n- [x] Allow user to pick the project generation type (C# projects with Git submodule, C# projects with NuGet, Protobuild, etc.)\n- [x] Pre-generate for all supported platforms if the template isn't using Protobuild\n- [x] Apply the overlays that the user has chosen\n- [x] Fix up any cross-platform support that is missing on Mac\n- [x] Fix up any cross-platform support that is missing on Linux\n- [x] Integrate it into the build so it can be shipped\n- [x] Update the installer so that it wires it up to Visual Studio / Xamarin Studio as appropriate\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710721", "body": "Yes, font compilation now works on Linux.  There's no support for full\nkerning yet (that would require going off to a library like Freetype and\ngetting the kerning information; something which I haven't worked out how\nto do).\n\nAlso you can at least compile textures to XNB on Linux as well.  Audio\nprobably works but I haven't tried that yet.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3711007", "body": "At the moment MonoGame gets 90% of the information from System.Drawing.\nI'd expect something like FreeType on Linux would need the full path to the\nTTF / OTF file; it won't be like Windows where you can just get the kerning\nby font name.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3711007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "raizam": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/f2f331f37c5b5f7da54c28e06e70b6b2febc05bd", "message": "throw NoSuitableGraphicsDeviceException when OpenGL version not found (#5763)\n\nThrow NoSuitableGraphicsDeviceException when GL.GetString(StringName.Version) returns null.\r\nCurrently throws a NullReferenceException.\r\n\r\nThis may happen in case of drivers problems."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ablanchard17": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/d9603ebacbdf2c8d29a248646a1d1601cba2ecbb", "message": "Implemented caching for staging resource used to copy data from a Texture2D (#5704)\n\nImplemented caching of staging resources used to copy data from a Texture2D under DirectX"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "robert-wallis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/9b53841289e1500ffa223b191d3ad409fffbec61", "message": "[Graphics] Implement GetHashCode on Vertex* by xor'ing Properties (#5654)\n\nImplement GetHashCode on Vertex types"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "siudeks": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/5bba2201a4e03fb99829857593dd09d4c0f7d065", "message": "Increase code coverage for Model classes #4699\n\nAdded some new XNA-friendly tests based on loading default Blender 3D cube"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tinfoilbroker": {"issues": [], "commits": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/commits/b9e7fb07e078f4dc5e21d65548d3df1d426e3e1c", "message": "Fixed link to Mono downloads page"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "guFalcon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6146", "title": "Adds O(1) EffectParameter lookups by name", "body": "This adds a dictionary to the immutable EffectParameters class to achieve O(1) lookups by name.\r\nAdds a test that depends on the parameters permanently being on the same index which shouldn't be a problem except when adding parameters.\r\n\r\nAdded this because it spares you the wrapping of all your shaders because of performance reasons if you have more that one parameter. No need for the dirty-flags any more (at least in trivial shaders where the variables are independent).\r\nHope that helps.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CartBlanche": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6116", "title": "[MacOS]Remove OpenTK reference from MonoGame.Tests.MacOS definition.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578", "body": "Merged Touch\\* Changes, did not commit csproj changes. Thanks for submitting. Please double check I've not missed anything once you git clone mono/MonoGame.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/974578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501", "body": "Christian, we have a problem with your request, which I did not envision happening.\nThe code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n\nCould you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405", "body": "Please ignore my previous question, I realise now that it is just decompressed xnbs.\n\nWe will have to stipulate in the docs that they MUST be debug xnbs with the compression flag unchecked, because I had the weird situation where even a debug xnb had the compression flag as 1.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058", "body": "Thanks Christian, greatly appreciated.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1045058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264", "body": "Please resubmit the pull request. I'll close this one for now, to avoid confusion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1734264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789", "body": "Hi Andre, I'm a bit worried about this part of the pull request - Merge remote-tracking branch 'upstream/master'. I looks like it may overwrite things in trunk.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302", "body": "Hi Andre, Too many things have changed in trunk for me to pull this in automagically. Any chance you can resync and resubmit the pull request. Btw, we've postponed the v1.6 release until early September so that we get a rock solid release out.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1825302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693", "body": "Yes the new repo is https://github.com/CartBlanche/MonoGame-Samples - I already added you as a dev. If you have any problems, let me know.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801", "body": "Thanks GalaxiaGuy, greatly appreciated!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1803801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827", "body": "Any news on if this this sound caching fix works for others?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1911827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486715", "body": "Hi Andre, it seems no one else tried this change. I'm going to take a chance, but could I be a pain and ask you to rebase, then resend this pull request? I'm hoping to release v1.6 next Friday or Saturday and think this and the colour change should be included. Let me know if that is a problem.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2490225", "body": "Andre, I decided to manually merge your sound cache changes. So I'm going to close this pull request. Please grab the latest code and let me know if it still works for you on Linux.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2490225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687", "body": "It was just the SetRenderTarget and SetRenderTargets methods. Making the framebufferiD an array like the rendertargetIDs\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2343687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486724", "body": "Hi Sly, could I be a pain and ask you to rebase and then resubmit this pull request?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2487784", "body": "oops sorry about that cadahl, I had just sent him an message. Appologies for calling you the wrong name.\n\nBtw, I didn't mean to suggest you were not paying attention, I was merely trying to highlight issue you may not have been aware off, as I assume you are fairly new to MonoGame. I would really like to include you patch in v1.6, which I'm hoping to release next week-end.\n\nHave a great week-end.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2487784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2487890", "body": "Ok I couldn't sleep so I've manually merged your changes into the main repo, and I'll close this one.\n\nThanks again for your patch, greatly appreciated!! Btw, what project are you working on?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2487890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2489212", "body": "glad to hear it. Yes we still have lots to do, but the great news is we are on our way :)\n\nI look forward to your future contributions.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2489212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2510458", "body": "I think your changes have already been merged, or am I mistaken?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2510458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2510475", "body": "Oops, this was meant to be pulled in my kjpou1, as I was hoping he would look over it before pulling the request in. I should have labelled it as such. Sorry about the confusion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2510475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2540260", "body": "Thanks slygamer for looking over the request. Once I've created the development branch and the release goes out, we can pull it in.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2540260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2576074", "body": "I think you need to do a manual merge via command line. That is what I've done with other files last week. I used \"git mergetool\" as described here - https://github.com/bricoleurs/bricolage/wiki/Merging-with-Git . I will have a look at this later today.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2576074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2598242", "body": "I'll send you the Android version shortly :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2598242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2818765", "body": "Hi Urkle,\n  Thanks for your patch. I've incorporated it into the develop branch of MonoGame. In future, please base you patches on the develop branch as that is the cutting/bleeding edge that we are working on and we do not accept patches to the master branch. Once the develop branch is ready it will be merged into master for a public release.\n\nYou can see the new Location property here...\nhttps://github.com/CartBlanche/MonoGame/blob/develop/MonoGame.Framework/Rectangle.cs\n\nDo drop by the discussion forums on monogame.codeplex.com and let us know what you are working on, and if you release anything built with MonoGame.\n\nI'll close this request and we look forward to receiving more patches from you to make MonoGame better than ever.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2818765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2818765", "body": "Hi Urkle,\n  Thanks for your patch. I've incorporated it into the develop branch of MonoGame. In future, please base you patches on the develop branch as that is the cutting/bleeding edge that we are working on and we do not accept patches to the master branch. Once the develop branch is ready it will be merged into master for a public release.\n\nYou can see the new Location property here...\nhttps://github.com/CartBlanche/MonoGame/blob/develop/MonoGame.Framework/Rectangle.cs\n\nDo drop by the discussion forums on monogame.codeplex.com and let us know what you are working on, and if you release anything built with MonoGame.\n\nI'll close this request and we look forward to receiving more patches from you to make MonoGame better than ever.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2818765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2860209", "body": "I'm going to have to cherry-pick these as it cannot be auto-merged.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2860209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2868956", "body": "Dean, I've cherry-picked the other 3 commits from your fork. Please review that I've grabbed the right ones. It might also be worth either rebasing or recloning before submitting another pull request as I fear it may try and resubmitt the changes that stopped this one from merging. Luckily with the sample separated out, a reclone only take 2-3 minutes now.\n\nI'm not 100% sure what else you could do to avoid the clash. Do you regularly do a \ngit fetch upstream \nfollowed by\ngit merge upstream/develop\nto keep in sync, before you commit any changes?\n\nAnyway, I'll close this pull request.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2868956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2891174", "body": "Hi StygianTraveler, Are both the Linux and Windows file 100% identical for Mouse input?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2891174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2951786", "body": "Is this ready to be pulled in?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2951786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3041034", "body": "The latest commit should now allow Android and iOS to share code  ( lots of IFDEFs ) but still compile and run in ES 1.1.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3041034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3236215", "body": "Hi jjxtra, could you please resubmit this pull request so it is against the develop branch.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3236215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3270725", "body": "Damn, I've accidentally pull this into master. \n\nTom/wahjah could you please resubmit this pull request for the develop branch, as we are trying to keep master as the stable release. That way both master and develop will be synced. Luckily this change shouldn't cause any issues on master.\n\nAlso for future pull requests, please work and target develop.\n\nThanks again for your patch.  \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3270725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3607104", "body": "Windows 7 is our least supporte platform at the moment. But there is some good news. The team behind ARMED! on WP7, are hoping to head up the Windows port and even try and take it to Window 8 and Metro with a DX11 backend. Stay tuned.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3607104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3363279", "body": "This is a known issue and is one we hope to address for the next release.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3363279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3381738", "body": "Hi Matt,\n  Thanks for your changes. I wrote the original input class code, but for\nmy game back then, I used another input method, but decided to check it in\nanyway as I planned to get back to it. Unfortunately when we released MG\n2.0, the project gained a lot more visibility than I anticipated, so now\neveryone gets to see my unfinished code. Also back then I was working on\nthe master branch directly.\n\nI think the original code may be getting called more than once, hence why\nmultiple text fields appear, possibly due to the game loop. I'm just\nthinking out loud.\n\nSo did you use that code directly, or did you make a change to the Guide\nand Text Input classes.\n\nD.\n\nOn Thu, Jan 5, 2012 at 8:50 AM, Matt <\nreply@reply.github.com\n\n> wrote:\n> \n> We had to implement it for Infinite Flight as it was broken in our branch\n> on iOS5. Here's how we solved it.\n> \n> ---\n> \n> var alertView = new UIAlertView();\n>                                    alertView.Title = description;\n>                                    alertView.AlertViewStyle =\n> usePasswordMode ? UIAlertViewStyle.SecureTextInput :\n> UIAlertViewStyle.PlainTextInput;\n> \n> ```\n>                                alertView.AddButton (\"Cancel\");\n>                                alertView.AddButton (\"OK\");\n> \n>                                //username\n>                                UITextField textField =\n> ```\n> \n> alertView.GetTextField(0);\n>                                    textField.KeyboardType =\n> UIKeyboardType.Default;\n>                                    textField.ReturnKeyType =\n> UIReturnKeyType.Next;\n>                                    textField.ClearButtonMode =\n> UITextFieldViewMode.WhileEditing;\n> \n> ```\n>                                    alertView.Clicked +=\n> ```\n> \n> delegate(object sender, UIButtonEventArgs e)\n>                                                        {\n>                                                                if\n> (e.ButtonIndex == 1)\n>                                                                {\n> \n> ```\n>  currentResult = textField.Text;\n> \n>  isKeyboardInputShowing = false;\n> \n>  callback(new InputAsyncResult() { AsyncState = state });\n>                                                            }\n>                                                    };\n> \n>                                    alertView.Dismissed +=\n> ```\n> \n> delegate(object sender, UIButtonEventArgs e)\n>                                                                        {\n> \n> ```\n>  currentResult = defaultText;\n> \n>  isKeyboardInputShowing = false;\n>                                                                    };\n> \n>                            alertView.Show();\n> ```\n> \n> ---\n> \n> Hope it helps :)\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/186#issuecomment-3366684\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3381738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3601969", "body": "Hi Christopher, \n  Thanks for the heads-up. I'll test out your suggestions and resubmit this pull request.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3601969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3601996", "body": "Hi Tom,\n  Thanks for the pull request. Unfortunately we only accept pull requests for the develop branch. \nCould you ensure your changes are against develop and resubmit another pull request, and I and one of the team will be happy to merge that pull request.\n\nBtw, we were discussing the other day the possibility of making the Windows port Window 8 and Metro compatible, as Microsoft has not announced XNA support for that yet. Essentially putting a DirectX 11 back-end in. What are your thoughts, and is this something you would be keen to head up? As we definitely someone to be in charge of the Windows side of things.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3601996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3604749", "body": "Awesome stuff Tom! Look forward to your pull requests.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3604749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3604765", "body": "Btw Tom, if you or your team have a twitter account, let me know what it is so I can give you guys a shout out.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3604765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3604859", "body": "Oops looks like I'm spamming, but last thing Tom, if you can, please jump onto irc.gnome.org and log into the #MonoGame channel, where most of the developers discuss the ports.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3604859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3605308", "body": "Did you manage to rectify this issue?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3605308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3605325", "body": "kjpou1 are you still looking into this?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3605325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3607104", "body": "Windows 7 is our least supporte platform at the moment. But there is some good news. The team behind ARMED! on WP7, are hoping to head up the Windows port and even try and take it to Window 8 and Metro with a DX11 backend. Stay tuned.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3607104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3641309", "body": "NO longer needed.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3641309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13468270", "body": "Has anyone checked if this is working correctly in desktop platforms too?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13468270/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3641309", "body": "NO longer needed.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3641309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4099956", "body": "It seems this pull request can no longer be automerged? Has it been superceded?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4099956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4111370", "body": "Thanks for your patience Thiago. Git does take a little getting used to, but like any new change control system, once you know how it fits together, it will beceme like second nature to you.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4111370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4204605", "body": "Hi Thiago,\n  I just pushed a fix to develop3d branch that should allow Windows and iOS to build, as well as MacOS.\n\nHopefully in the next few days we'll get Linux building on there as well.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4204605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4205590", "body": "Hi Thiago,\n  Most ports have native calls. Each port has its own sub-directory, where they have that OS/platform's specific versions of classes, like GameWindow.cs for example. If you follow a similar pattern to what we have for MacOS, this should give you  some hints.\n\nDominique.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4205590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796", "body": "This merged all of mine and your BeginDraw code into master as well. Not sure you meant to. It is not really a major issue, we just have to be mindful of it with future pull requests.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/709796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230", "body": "Ah ok, sorry my misunderstanding. I forgot about the first test.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/711230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998", "body": "Please explain how they are hidden? All you need to do, indicated above is.....\ngit submodule init\ngit submodule update\n\nand it will pull down _everything_.\n\nWe made a conscious decision not to include them in the main Framework distro, because it would come to over 400MB! Not everyone has that sort of bandwidth, though we wish they did. Also most people using MonoGame already have XNA Samples/StarterKits, which is what we have used in our ports of the Samples and StarterKits. There may be a couple of samples that aren't ports, but the vast majority are XNA ports.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784", "body": "I understand where you are coming from and we know that git is not the easiest thing to get your head round when you first use it. \nWe plan to create some zips, like the tagged zips, for those who don't want to get their hand git dirty :).\n\nWe do appreciate a \"new-starter\" perspective. So over time we will make it easier. For example in the v2.5 release we will have project templates for certain platforms, and we will increase support for other platforms leading up to v3.0 release.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2866275", "body": "Hi guys, \n  I can confirm that this code causes a rendering glitch on Mac, Linux and iOS, not noticed it on Android yet.\n\nD.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2866275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3055105", "body": "@slygamer, wasn't your PR linked to this?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3055105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1210806", "body": "Looks like your editor is using spaces instead of tabs. Would you mind fixing that and then I'll pull this in.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1210806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1211655", "body": "Ultimately they should be as close to this http://www.mono-project.com/Coding_Guidelines as possible. I know not all files meet this criteria, but that is what we are aiming for. To tabs essentially.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1211655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1985356", "body": "MD may have done. I would have thought that VS would ignore any tags it doesn't understand.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1985356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3520247", "body": "The issue is that ContentTypeReader needs access to the Location, so that the FileExists check passes when reading non-XNB assets.\nI believe so far it has worked for other platforms as their paths appear to be relative to exe, while on PSM it sits under /Application/....\n\nI'm happy to revert this back to internal if there is a more elegant way to retrieve the RootDirectoryFullPath.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3520247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3596316", "body": "Yes Jacob, i'm trying to load an .MP3 directly. I'll try the ~/ solution today.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3596316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Max-str": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6101", "title": "Added missing constructor to GamePadState (fixes #6027)", "body": "Brings back \r\n<code>public GamePadState(Vector2, Vector2 , float , float , params Buttons[])</code>\r\nas GamePadState ctor.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Juhlinus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/6096", "title": "Added type deconstruction", "body": "As per #6094.\r\n\r\nI don't know if this is something that has been considered at all, but I figured I'd add it either way if someone is interested. \ud83d\ude03 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joncloud": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5996", "title": "Fixes property content serialization detection when using a property named `Item`.", "body": "* Adjusts indexer property detection to check for Index Parameters instead of get/set method's parameters.\r\n* Moves test compliation in order to share between tests.\r\n* Creates new tests to verify changes.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "evgenidb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5403", "title": "Optional parameters for spriteBatch.DrawString", "body": "Made some of the parameters in DrawString optional, similar to the Draw method. Now you can use named parameters, so you don't have to enter all arguments if you want only to rotate the string or set the layer.\r\n\r\nSpriteFont, text, position, and color are still required though.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sergiokoo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5382", "title": "fixed touch handling bug", "body": "This is a small obvious fix for a little bug: when using .RemoveAt() with List<>, it should be iterated backward.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gustavolsson": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5378", "title": "Net namespace rewrite", "body": "Hello,\r\n\r\nI started to port my kart-racer \"Seaside Racing\" to PC (from XBLIG) and got the game up and running in very little time, great work everyone! However, I ran into problems with the Net namespace. In particular, issue #2211 and the realization that supporting multiple local gamers would be problematic caused me to rewrite the code from scratch.\r\n\r\nIn addition to implementing everything XNA supported (except host migration), I wrote a simple Master Server to support NetworkSessionType.PlayerMatch and NetworkSessionType.Ranked (ie. online modes).\r\n\r\nMy kart racer is not quire ready yet, so in order to demonstrate the code I compiled the NetRumble sample (provided to me by @dellis1972) using my Net implementation. I also deployed a master server (referencing the GUID of the NetRumble project) to an Azure VM so that we can play online with each other. Just notify me on the gitter chat if you want to play and I will join. Here is the executable: https://www.dropbox.com/s/u103ci1qosm1nd0/NetRumble.zip?dl=0\r\n\r\nThe master server is the only thing that is not standard XNA. The server itself is just a simple console application:\r\n\r\n```\r\npublic static void Main(string[] args)\r\n{\r\n    NetworkSessionMasterServer server = new NetworkSessionMasterServer();\r\n\r\n    server.Start(\"e3ba2560-9fb5-4085-9c3a-b73fb4257f0e\");\r\n\r\n    while (!Console.KeyAvailable || Console.ReadKey().Key != ConsoleKey.Escape)\r\n    {\r\n        server.Update();\r\n\r\n        Thread.Sleep(10);\r\n    }\r\n\r\n    server.Shutdown();\r\n}\r\n```\r\n\r\nand the NetRumble sample is modified so that it knows about the master server in the following way:\r\n\r\n```\r\npublic static void Main (string[] args)\r\n{\r\n    // Set master server address before creating a NetworkSession:\r\n    NetworkSessionSettings.MasterServerAddress = \"13.81.113.129\";\r\n\r\n\tusing (var game = new NetRumbleGame ()) {\r\n\t\tgame.Run ();\r\n\t}\r\n}\r\n```\r\n\r\nI updated the README to describe my fork but I don't know how to exclude it from this PR. Other than that, everything should be included in the PR.\r\n\r\nSo, what do you think? Here are my notes from the README:\r\n\r\n**This Fork**\r\n\r\nMy fork of MonoGame implements the Net namespace in order to compile networked games/apps that were built for XNA on any platform. I wanted to port my kart-racing game \"Seaside Racing\" to MonoGame and I decided to reimplement the Net namespace instead of rewriting the networking code in the game. The main reason to use the Net namespace for a new project is that the original API is very elegant, handles player management and lobby-to-game transitions. The implementation supports multiple backends and it should be straightforward to add support for new platforms. At the moment, the default backend uses the Lidgren library for low level networking tasks and the backend will work on any platform that supports standard .NET sockets.\r\n\r\n**Implementation details**\r\n\r\nSince a user can choose to use any network topology for their game, the internal implementation uses a peer-to-peer topology as it is the most general case. If the user wants a client/server topology, all traffic can be routed through the designated host or any other peer. This is inline with the original XNA implementation.\r\n\r\nThe peer that starts a game using the NetworkSession.Create() method becomes the host of the game. The host of the game broadcasts its existence to the master server (if NetworkSessionType is PlayerMatch or Ranked as opposed to Local or SystemLink) and responds to discovery requests. Any peer that connects to a host using the NetworkSession.Join() method becomes an ordinary peer. In the future, host migration could make it possible for ordinary peers to become hosts, but it is not implemented yet.\r\n\r\nThe master server is responsible for introducing (ie. finding the endpoint and performing NAT punchthrough) a peer to a host of an online game. Once connected to a host, the peer is introduced to the other peers already in the game by the host. Peers only allow introductions/connections from other peers whose endpoints are specified in an allowlist and only allow changes to the allowlist from the host. Once fully connected, the signed in gamers of the peer are able to join. This procedure ensures that all peers in a game are fully connected to each other in order to support a true peer-to-peer topology.\r\n\r\nThe session state is synchronized across all peers. Each signed in gamer that enters a game gets its own unique id that is synchronized across all peers. Incoming messages from unknown gamers are delayed until the gamer in question joins the game on the local machine, which is important because user messages do not need to be ordered and may arrive before the internal gamer join message.\r\n\r\nOverall, there are 2 caveats of the implementation that users must be aware of:\r\n\r\n* A peer cannot be behind the same router as the master server since the master server must know the external endpoint of the peer\r\n* A peer cannot be behind the same router as the host since the host must know the external endpoint of the peer\r\n\r\nIn practice, the only problem is that gamers behind the same router will not be able to connect to each other if any of them are designated the host.\r\n\r\n**Future work (Not implemented)**\r\n\r\n* Clean up responsibility of internal messages vs Session\r\n* Host migration\r\n* Cheat protection", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hifi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5288", "title": "Don't lose textures when applying effect", "body": "This is not necessary the correct behavior and I'm unable to test it on anything else than UltimaXNA but this XNA game expects textures are preserved when applying an effect multiple times and between frames. On MonoGame I had to reset them per effect apply.\r\n\r\nAs an additional note, the game in question has `RenderTargetUsage.PreserveContents` set for the graphics device.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KimikoMuffin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5213", "title": "Set \"MatrixTransform\" effect-property in SpriteBatch.", "body": "Fixes issue #4387.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vaporwavre": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5124", "title": "Added remarks to Mouse.SetPosition", "body": "Notes that it does not work with Windows 8 and Windows Universal (#4718)\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sim31": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5095", "title": "Set session state to proper value when resuming.", "body": "On windows uwp platform when resuming a song, sessionState was not\nreset to started, which resulted in failing to pause a song later\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4952", "title": "Fix importing of skeleton which is not a direct child of root node", "body": "Before this fix, model with a skeleton which isn't direct child of\nroot node would become a direct child of root node which messed up some\nanimations.\n\nIn my case skeleton was a child of a mesh which was animated so it impacted the whole skeleton. Assimp model viewer supports that kind of animation so I think it would make sense for MonoGame too.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rpsfonseca": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/5018", "title": "Adds Vector3.TransformCoord #4587", "body": "By reading the documentation of XMVector3TransformCoord and comparing the other Transform methods in MonoGame, I think this is what is asked on #4587 .\n\nI assume this is the way to keep the w component 1.0.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BrilliantOne": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4936", "title": "Windows Setup Documentation", "body": "Created missing Windows documentation on how to setup MonoGame for Windows. Also, edited tutorial.md, windows link to point to new Windows Setup Documentation.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mjb501": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4900", "title": "Unit Tests for MaterialProcessor", "body": "I have written some unit tests for the MaterialProcessor (#4333). \n\nI need to figure out how to setup material content with OpaqueData and Textures to test some more of the process method.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Tzenchor": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4861", "title": "Tests for Texture2D.GetData(t[], int, int)", "body": "Add tests to prove the claims done in #4224.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4561", "title": "Font Style Renderer", "body": "I'm working on methods to create the font styles manually for fonts where we can't find a font with the style included. This is complimentary to my pulls #4537 and #4545 (may have conflicts with this one).\nThis is the result of my first version\n![embolden and italic first pass](https://cloud.githubusercontent.com/assets/11319966/13269807/22815e48-da8a-11e5-946b-b4e1d6fc59cb.PNG)\nBoth texts are taken from the regular arial font, and the big one is emboldened and italiced, while the second one is only emboldened. In theory the first one should have been only italiced, but there's a problem with `FontDescriptionStyle` and the `Bold` flag is always set.\n\nFor the italiced effect i'm skewing the characters about 20 degrees.\nFor the emboldened effect i'm drawing the bitmap 3 times with 1 pixel offset each one.\n\nI still have to review the spacing of the characters as the italics are drawn outside it's reported size horizontally (vertically the problem is resolved in #4545 as that comes from other place)\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4537", "title": "[Ready to Test] Spritefont styles", "body": "**As of 20/02/2016 this is ready to test**\nI'm working on enabling the style tag of the spritefonts as talked in #4149. At this time i can find the font based on its filename or its family name if it is an installed font in Windows.\nThe changes at this time include:\n- Add 3 private fields to `FontDescriptionProcessor` that contains the supported font extensions, possible terminations of bold font files, and the possible terminations of italic font files.\n- Add method `FontDescriptionProcessor.FindFontByFileName`: Considers the fontname as the filename of the font, and tries to find the font file that better matches the name and the style (for example if the users wants \"arial\" bold, this finds \"arialb.ttf\"), the method relays heavily on LINQ and I have added comments in each step at least for now, but I don't mind removing them in future.\n- Add private class `FontDescriptionProcessor.FileInfoComparer`: Required in method `FontDescriptionProcessor.FindFontByFileName`\n- Update method `FontDescriptionProcessor.FindFontFileFromFontName` for Windows: Added style information to the method call and updated its logic.\n- Simplified method `FontDescriptionProcessor.Process`: Reworked the method to remove an `if` embedded inside an `#if` and make the procedure simpler.\n- Reorder the elements of `FontDescriptionStyle`, now Regular is 0, bold is 1, italic is 2, and by extension bold and italic is 3. Before Bold was 0, italic was 1 and regular was 2.\n\nBoth methods look for the best match for the users intentions, giving preference to the italic fonts (if requested).\n\nThe code  in `FontDescriptionProcessor.FindFontByFileName` is tested, and linked inside `FontDescriptionProcessor.Process`, but it's result is not used at this time as I want to make the other procedures needed.\n\nI'll need guidance with the following things:\n- To search in every folder using family names and to see what styles are available inside each font file i'll need to use SharpFont to read that data, but it feels wrong using it outside `SharpFontImporter`. The problem is that if I do this inside `SharpFontImporter` i'll have to move code from `FontDescriptionProcessor` to `SharpFontImporter`, i'm not sure what option is better.\n- Related to the previous point, for rendering the font styles manually I'm gonna need to have information about the found font to know what treatment it needs to get the expected style, and I can do it when retrieving each glyph from the font inside `SharpFontImporter` or after that when back in `FontDescriptionProcessor`\n- Also, to review the linux method `FontDescriptionProcessor.FindFontFileFromFontName` i'll need to have an example of the data retrieved in: [line of code](https://github.com/Tzenchor/MonoGame/commit/067476c80767113dd4cd8001b203148a70c649bf#diff-4e98352b3c096b0bf2a04d8f61626bc3L316) from anyone on linux and/or mac\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stonstad": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4831", "title": "UWP Targets and Rooted File Access", "body": "In addition to TitleContainer file system access, UWP apps fully support\nread and write access to ApplicationData.Current.LocalFolder and\nKnownFolder directories (Music Library, Pictures) with package declarations.  Not sure \nit is the role of MonoGame to restrict access to the TitleContainer subfolder\nexclusively if a rooted path is requested on the the UWP platform.\nIf access to a rooted folder is invalid an access denied exception is always\nthrown for UWP platform targets (Windows 8, Windows 10, Windows Phone,\nXB1) due to sandboxing.  This proposed code change adds WINDOWS_UAP to the list of platform\ntargets which allow rooted file system access.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "palver123": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4815", "title": "Multisampling and RenderTarget2D", "body": "I have spent a lot of time debugging this bug and finally cracked it with DebugView and DirectX Debug Layer. You cannot create a depth stencil view with multisampling if you do not set the underlying texture dimension. This only affects the DirectX version of RenderTarget2D I think.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "confusingbits": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4813", "title": "Added tests for GamePad per #4744", "body": "NUnit VS Adapter 2.0.0.0 executing tests is finished\n========== Run test finished: 218 run (0:00:02.2515109) ==========\n\nNot really sure if the Null is valid, but I checked anyway.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thegouldfish": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4807", "title": "Added new design converters and extended the pipeline", "body": "Added Colour and Point designer converters (both used in the pipeline tool) and extended the pipelineTypes so it can be used by external tools (anything that might want to load and use the content project).\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "neofuji": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4664", "title": "[Content Pipeline] Support specialized LoopLength and LoopStart", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ralfjansson": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4607", "title": "Added FAQ information", "body": "Copied the FAQ information from the wiki and added it to the new docs.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "soenneker": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4361", "title": "Implemented bool, int, quaternion, and vector array SetValue() in EffectParameter.", "body": "I decided to squash the commits and create a new pull request.\nPrevious pull request: #4268 \n\nI've added the invalid cast tests for the various array settings.\n\n@tomspilman:\n\n> We should also test XNA to see what it does when you try to set a singular value on a array type. Does it allow it? If so do we observe the same behavior.\n\nI tested a sample XNA project for this, and it does not allow it. (\"Specified cast is not valid.\")\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mattleibow": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4300", "title": "EffectParameter Additions / Completion", "body": "I have added some changes to the `GetValue` methods to bring them up to the features of XNA. I also added a series of unit tests to ensure that I didn't break anything else.\n\nMostly, the current methods just catered for a single case, such as `GetValueMatrix`, which always failed if the data wasn't a 4x4 matrix. Now it supports a scalar, 2x3, 3x2, 3x4,4x3 and 4x4. (the 2x2,1x2, 2x1 seem to be missing from the other methods, so I didn't add them, but the can be)\n\nA breaking change to the existing methods is the inclusion of a `int count` parameter to some of the `GetValueArray` methods. This is what XNA does and is a very useful feature. This size controls the size of the resulting array. For some reason, only some of these methods had the count parameter, such as `GetValueMatrixArray`.  \nThe breaking methods are:\n- `GetValueSingleArray`\n- `GetValueVector2Array`\n- `GetValueVector3Array`\n- `GetValueVector4Array`\n\nThese changes are the other side of #4268, I didn't touch those methods so that there will be no conflicts when merging.\n\nNOTE: I made a whoopee somewhere and ended up with two PRs :( [#4299] Closed that one.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "prime31": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4286", "title": "Fixes #4277 and allows GraphicsManager.ApplyChanges() to work on Mac", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "suilevap": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4165", "title": "Fix ContentExtensions.GetAllProperties for Win10 when Native toolchain enabled", "body": "I  found that loading Xml from content files works incorrect for Win10 in release mode (or to be more precise when native toolchain is enabled).\nIt looks like `ContentExtensions.GetAllProperties` always return empty array due to condition `(p.GetMethod == p.GetMethod.GetRuntimeBaseDefinition())` (which is true without native toolchain, and false with) .\nI am not sure what exactly should check this code, but in my case it works as expected without it.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HeshamMeneisi": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4157", "title": "ContentManager.Unload(asset), More strict memory management", "body": "I made 2 changes to the content manager when I was working on a project and came across some memory problems\n#1\n\nI noticed the absence of this crucial function, Unload(asset), in the content manager so I decided to add it. This is essentially an alternative for (resource).Dispose() when the resource is loaded through a content manager.\n#2\n\nAs much as I hated to, I had to use GC.Collect() in the ReadAsset and Unload functions, this seemed to be the only way to prevent crashing on devices with limited resources when attempting to \"replace\" current loaded data as in, for example, a theme change or moving from level to level with largely varying content. It also seems to be the only way to prevent a memory leak from occurring especially on Windows UAP because of the rather delayed collection intervals, the following graphs should clarify what I mean:\n\nThe current memory stats while I continuously switch between 2 sets of textures on UAP:\n\nWithout collect calls:\n![nogc](https://cloud.githubusercontent.com/assets/10683997/10112741/23813bc4-63de-11e5-9f5e-a464837085b6.PNG)\n\nThe memory simply grows endlessly in a memory leak resembling pattern. This memory is NOT reusable as this test would crash the 512mb emulator or a low end device immediately (Also reported on android by a project member). The memory is occasionally collected by the GC to a slightly lower value but this behavior would continue until the memory is out.\n\nAfter adding collect calls:\n![agc](https://cloud.githubusercontent.com/assets/10683997/10112869/1abd2e48-63df-11e5-96f6-b77a3408920e.PNG)\n\nThe issue has been reduced to those spikes, which I have found to be associated with the async nature of the WINRT file system, but so far I have not thought of a solution to this probelm. Also calling GC.Collect() once after the loading process on game side does not reduce memory usage as opposed to the call once per ReadAsset.\n\nNote: Visual studio reformatted the document (which I have found conforming to the guidelines) so here are the lines I edited to make it easier for anyone interested in seeing the actual change.\n215                  Unload(asset)\n248,377,687  GC.Collect()\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kjpou1": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4092", "title": "Add Windows 8.1 project generation to Protobuild definitions.", "body": "This will create project and solutions for Windows 8.1 version of MonoGame so that it can be loaded in Visual Studio 2015.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1445169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650", "body": "Thank you\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1488852/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1491552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983", "body": "Thanks\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1760983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985", "body": "CartBlanche\n\nI do not see what changed as the whole file was marked as changed.  Can you give me a specific place to look for the modifications.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2342985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286", "body": "CartBlanche  This looks fine to me\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2355286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2568664", "body": "Well now what do we do for this type of problem.  It says \"This pull request cannot be automatically merged.\"  Maybe it should be applied again?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2568664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2588075", "body": "This was not what I wanted at all\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2588075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2650573", "body": "Hello urkle and technomage\n\nInstead of setting a private method I think you can use the services to obtain the GraphicsDeviceManager and from there the GraphicsDevice.\n\nSomething like this maybe?\n\n```\n                IGraphicsDeviceService service = this.Services.GetService (typeof(IGraphicsDeviceService)) as IGraphicsDeviceService;\n                if (service == null) {\n                    throw new InvalidOperationException (\"No Graphics Device Service\");\n                }\n```\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2650573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2650978", "body": "Never mind.  I did not read this very well this morning so totally misunderstood the question.\n\nI totally agree with the solution that dellis1972 outlined above.\n\nSorry for the confusion.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2650978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2726765", "body": "urkle\n\nThanks for the fixes.  I merged this in.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2726765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2726840", "body": "urkle\n\nThis was against master and did not notice it.  Could you please do a pull request for develop like for the Location.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2726840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2711357", "body": "Forgot to change from master to develop!!!!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2711357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2781106", "body": "Not sure but I modified it because it did not correspond to the XNA documentation.  It was modified because one sample did not use ushort but short so the sample would not compile.  Please bring this up to be discussed and decided on.  I have no problem one way or the other.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2781106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2867885", "body": "Scott\n\nThat was the only way for the colors to show up correctly in the samples \nthat I have.  The shades were not coming through correctly.  It looked \nlike it was working but the colors just were not the color that was \nexpected.  I added another class called VertexElementColor that is used \ninstead of the Color class.  When I added that all the colors are \ncorrect and if we do not turn the color array on the Shaders were not \nworking correctly in the basic effect.  I was going to send an e-mail to \neveryone on the weekend after seeing if it all works in Linux to double \ncheck on Android and iOS.  Dominique verified that the colors are now \ncorrect on iOS.\n\nPlease if you see something I am missing let me know.  Also if you do \nnot agree with my changes please let me know so we can discuss them.  I \nam planning on optimizing the code after we get the next release out so \nyour input would be very helpful.\n\nAlso there are samples and tests out there so let me know if they do not \nwork for you.  They might need to be ported to Android but it should be \nsimple as they are all really small.\n\nKenneth\n\nOn 11/24/11 6:17 PM, sdancer wrote:\n\n> Turning the color array on if the vertex object has color will result in undesired effects.  It's why I took it out for android.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/116#issuecomment-2867468\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2867885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2871696", "body": "Scott\n\nYou are absolutely right!!!!  I modified this and submitted a pull request.  \n\nThank you for the correction.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2871696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2871734", "body": "Scott pull request is out there.  When you get a chance look over any other parts and let me know where I missed anymore.\n\nHave a good vacation.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2871734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2954963", "body": "No not yet.  Still discussing the change with Tapani.  I want to make sure I do not break master right before release time.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2954963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2955540", "body": "Ok verified all with Tapani and it is good to go.  We found another problem but that will have to wait until the next release.  I am trying to get him on IRC as it will definitely make things easier instead of by e-mail.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2955540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2959779", "body": "Steve, this is awesome!!!!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2959779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2990738", "body": "Steve\n\nNo problem.  Nice work you did there.  Thank you for that.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2990738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001087", "body": "jadaml\n\nCan you please repull the request against develop branch and not master.\n\nThanks\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001326", "body": "jadaml\n\nCould you please redo this pull request against develop branch (not master) and resubmit the pull request.\n\nThank you \n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001326/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001638", "body": "jadaml\n\nI will close this one out and merge the other one that you just put out there against develop.  Thank you for your understanding.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001656", "body": "jadaml\n\nThis is now merged.  Thank you for the fixes.  Also the Rate modification that you did would need to be pulled again as well so that I can apply it.  Sorry about that.\n\nWe only accept pull requests to develop branch which is where we all work.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001678", "body": "Thank you jadaml.  I did not notice that it was master the first time and went ahead and merged it.  I then had to revert the change.  \n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3011351", "body": "Hi Steve\n\nI echo Dean's sentiment.  It is a team effort.  Problems will crop up and be fixed.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3011351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3497392", "body": "Squizzle\n\nThis should be fixed in my fork.  Could you try it and let me know if it fixes your problem.  https://github.com/kjpou1/MonoGame  \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3497392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3609600", "body": "ncoder\n\nThanks for the pull request. These are definitely needed but unfortunately we only accept pull requests for the develop branch. \n\nCould you ensure your changes are against develop and resubmit another pull request, at which time myself or another team member will merge the pull request.\n\nThank you \n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3609600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3609633", "body": "CartBlanche and Squizzle\n\nNo have not looked into this further.  I thought all they needed to do was add it to the project.  Am thinking the Windows is not compiling right now and needs to have the DrawUserPrimitives implemented as well.  Am quite sure without those modifications the krypton will probably not run.  Windows is just a little behind at the moment but we do accept donations of code to help us in our efforts to bring MonoGame to as many platforms as possible.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3609633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3613753", "body": "ncoder\n\nAlso you might want to break these up into separate pull requests so we can see a little better what is going on.  This allows us to also be quicker in our response to pull requests if we have questions.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3613753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3657531", "body": "Hey guys\n\nHave not finished it yet but will in the next couple of days.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3657531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3657587", "body": "Whoops\n\nSorry the vsync is in there but I need to redo it to fit into the new platform stuff that went in.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3657587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702244", "body": "Scottmm\n\nThanks for the pull request. These are definitely needed but unfortunately we only accept pull requests for the develop branch.\n\nCould you ensure your changes are against develop and resubmit another pull request, at which time myself or another team member will merge the pull request.\n\nThank you\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702305", "body": "Scottmm\n\nThank you for resubmitting\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3773319", "body": "Hi Jesse\n\nThanks for the pull request. Unfortunately we only accept pull requests for the develop branch.\nCould you ensure your changes are against develop and resubmit another pull request, and I and one of the team will be happy to merge that pull request. \n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3773319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3609600", "body": "ncoder\n\nThanks for the pull request. These are definitely needed but unfortunately we only accept pull requests for the develop branch. \n\nCould you ensure your changes are against develop and resubmit another pull request, at which time myself or another team member will merge the pull request.\n\nThank you \n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3609600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3613753", "body": "ncoder\n\nAlso you might want to break these up into separate pull requests so we can see a little better what is going on.  This allows us to also be quicker in our response to pull requests if we have questions.\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3613753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702244", "body": "Scottmm\n\nThanks for the pull request. These are definitely needed but unfortunately we only accept pull requests for the develop branch.\n\nCould you ensure your changes are against develop and resubmit another pull request, at which time myself or another team member will merge the pull request.\n\nThank you\n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702305", "body": "Scottmm\n\nThank you for resubmitting\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3773319", "body": "Hi Jesse\n\nThanks for the pull request. Unfortunately we only accept pull requests for the develop branch.\nCould you ensure your changes are against develop and resubmit another pull request, and I and one of the team will be happy to merge that pull request. \n\nKenneth\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3773319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3847802", "body": "Scott\n\nI think you need to use the Update method of the GameTime instead of setting it directly\n\nFor instance replace:\n                _gameTime.ElapsedGameTime = TargetElapsedTime;\n\nWith the following code:\n                _gameTime.Update(TargetElapsedTime);\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3847802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3849001", "body": "No problem just wanted to suggest a fix instead of saying it was not working correctly.  I did not think it was finished.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3849001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466", "body": "Changed from foreach to for loop in case the GameComponents's Update method modifies the component collection.  With a foreach it causes an error: \"Collection was modified; enumeration operation may not execute.\"  .Net 4.0 I thought got around this but in Mono 2.10.2 we still get this error.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/463466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215", "body": "Dominique\n\nThose were already there so I went ahead with it.  That was the code I used as the very first test to see how things worked.  As you say it should not have been done in the first place.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/710215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/464747", "body": "Just replied on IRC.  Not sure what happened on the line ending change.  It was when I fixed the merge conflict I had and it seems the opendiff tool did that as well.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/464747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/464750", "body": "Actually thinking about that.  I can not say what happened because I ended up putting those mods back in by hand because the conflict was crap \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/464750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484059", "body": "yes you are right. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484061", "body": "yes needs to be cleaned up\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484064", "body": "Not sure about that.  Those are coming in from binary format and still not sure what I am going to do with those.  They may be changed later but right now they should stay.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484066", "body": "This is so that we do not have to rewrite the shaders for each platform.  This will be changed to be something like MONOGAME_DESKTOP.  Then in each module we can use the compiler directive to use precision for ES 2.0 as that does not work on desktop systems.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484070", "body": "Yep that is what I thought but it would not compile.  Left that there for later until I have time to look at it and test on iOS.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484080", "body": "An example is as follows:\n\n```\n    #ifdef DESKTOP\n    uniform mat4 MatrixTransform;\n    #else\n    uniform highp mat4 MatrixTransform;\n    #endif\n\n    #ifdef DESKTOP\n    attribute vec4 Position;\n    attribute vec4 Color;\n    attribute vec2 TextureCoordinate;\n\n    varying vec4 Diffuse;\n    varying vec2 TexCoord;\n\n    #else\n    attribute highp vec4 Position;\n    attribute lowp vec4 Color;\n    attribute mediump vec2 TextureCoordinate;\n\n    varying lowp vec4 Diffuse;\n    varying mediump vec2 TexCoord;\n    #endif\n```\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484095", "body": "Oh and Android\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/485037", "body": "Ok\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/485037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/485040", "body": "yep\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/485040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/485064", "body": "Feel free to correct and change whatever you want espes.  Redo it and make it better if that is what you want to do but I really do not have time for the playground nitpicking. \n\nI really do know what is missing and needs to be redone.  Thank you for your feedback but like I said it is not complete.  \n\nThose are really just notes for myself right now.  I am tired of manually applying these changes and that is the only reason I am putting it out there to be merged.  If the rest feel the same way then close out the request.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/485064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Alturos": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/4088", "title": "Pull Request for Issue #3186 Content Processor Updates", "body": "Updated ContentTypeReaderManager to make type resolutions for ContentTypeReaders significantly more robust.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "WardBenjamin": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/3789", "title": "Cross-platform Random number generator", "body": "This fulfills https://github.com/mono/MonoGame/issues/3772, which requires a random number generator that is consistent over platforms. It contains only one utility function as of yet, `ulong MathHelper.Random.GenerateSeed()`.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "isaacbrodsky": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/3677", "title": "Correct and fill out Android key mapping, add Apps key mapping on Windows", "body": "Hi,\n\nThis PR fixes an issue with the Android keycode mapping (C/Z keys did not work correctly.) It also adds many more key mappings for Android, so function keys can be used.\n\nThe PR also adds the mapping for the key called \"Apps\" in XNA on Windows/OpenGL\n\nIsaac\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Nezz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/3546", "title": "Android orientation lock", "body": "Simple and useful feature. Many Android devices are very sensitive when it comes to rotation. If the user shakes the device the rotation might change, so this is very useful if you use accelerometer in your game. Just lock the rotation while the game is playing and unlock once the game is paused/stopped.\n", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/3454", "title": "Calculate line height smaller than line spacing correctly", "body": "When using SpriteFont textures, LineSpacing is the height of the tallest sprite (untrimmed).\n\nMeasureString works incorrectly because it initializes the `finalLineHeight` variable with LineSpacing, then looks for taller sprites:\n\n``` C#\nif (currentGlyph.Cropping.Height > finalLineHeight)\n    finalLineHeight = currentGlyph.Cropping.Height;\n```\n\nThis will obviously never happen with SpriteFont textures. This PR modifies MeasureString so it initializes `finalLineHeight` with 0 and resets it to 0 at a line break.\n\nI haven't tested it with SpriteFont descriptions where LineSpacing might be a correct value, so please test it. \n\nThe biggest change is when you measure small characters, like a space which is represented as a 1x1 transparent pixel. It will return a height of 1:\n`this.font.MeasureString(\" \")` -> {18, 1}\n\nHow is the result of MeasureString \"definied\"?\n", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12800720", "body": "As far as I know WP7 only allows one scissor per spritebatch begin/end.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12800720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12804248", "body": "I tested it and it works in a simple way:\nYou enable ScissorTest in rasterizer state.\nIf you use something like deferred (draw only happens once when the end is called) you can use one scissor rectangle, the one you last set before calling end.\nOn the other hand, if you use immediate, the textures will draw immediately, so every single draw can use a seperate scissor rectangle.\n\nNote that using deferred has a lot better performance than immediate. For example if you draw lots of sprites from a spritesheet, XNA will draw all those textures in a single pass instead of one pass per object drawn.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12804248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12807435", "body": "If someone takes the time to test the following code on the platforms, we will see if it works correctly:\n\n``` C#\n            RasterizerState rasterizerState = new RasterizerState() { MultiSampleAntiAlias = false, ScissorTestEnable = true };\n            Texture2D whitePixel = new Texture2D(GraphicsDevice, 1, 1);\n            whitePixel.SetData<Color>(new Color[] { Color.White });\n\n            Rectangle scissorRectangle = new Rectangle(0, 0, GraphicsDevice.PresentationParameters.BackBufferWidth, GraphicsDevice.PresentationParameters.BackBufferHeight);\n            Rectangle scissorRectangle2 = new Rectangle(0, 0, GraphicsDevice.PresentationParameters.BackBufferWidth / 2, GraphicsDevice.PresentationParameters.BackBufferHeight / 2);\n\n            this.SpriteBatch.Begin(SpriteSortMode.Immediate, BlendState.AlphaBlend, SamplerState.LinearClamp, DepthStencilState.None, rasterizerState);\n            this.GraphicsDevice.ScissorRectangle = scissorRectangle;\n            this.SpriteBatch.Draw(whitePixel, new Rectangle(0, 0, GraphicsDevice.PresentationParameters.BackBufferWidth, GraphicsDevice.PresentationParameters.BackBufferHeight), Color.White);\n            this.GraphicsDevice.ScissorRectangle = scissorRectangle2;\n            this.SpriteBatch.End();\n```\n\nIf this draws to the full screen, we're good.\nChange it to SpriteSortMode.Deferred. If it draws to the top left corner only, we're double good.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12807435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13287378", "body": "Seems fine to me considering that WP8 is in portrait.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13287378/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1957984", "body": "Portrait is still buggy with my fix. The issue is that supported orientations are set during the initialization of the game view, but that happens before the game constructor is called, so it will always be DisplayOrientation.Default. You can work around this issue by disabling landscape in the info.plist and change the \"GetSupportedOrientations\" function to return orientation mask portrait.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1957984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3462839", "body": "How could this get merged? Now I can't blame :'(\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3462839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4435342", "body": "We spent a lot of time trying to find the source of the FPS drop bug in debug mode when you make drag gestures. This tourned out the be the source of the bug. Any idea why?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4435342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1473894", "body": "Yes, but in that pull request it is discussed that it causes buggy behaviour.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1473894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1513792", "body": "Sorry, I shouldn't have committed that line. I reimplemented the accelerometer per microsoft standards that's why it got commented. As soon as I remove that comment, it is ready for merge.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1513792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1533704", "body": "The code you commented on only applies for touch events that already had a \"Pressed\" event registered. As you can see, I loop touchlocations and the only way for an ID to get into touchlocations is to be registered as pressed.\nI rewrote the system in a way that does not care about \"frames\". You can get the states (or gestures which gets the states) whenever you want to and they will be reported correctly. For example, if you get the states once a second and you tap the screen you will get one pressed event, zero or one moved event and one released event.\nNow would someone merge this please? :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1533704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560542", "body": "Yep, it looks right :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2545500", "body": "You should check here if the value was really changed like:\nif (currentValue != value)\n{\n   do stuff\n}\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2545500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2558341", "body": "!EqualityComparer<TSensorReading>.Default.Equals(currentValue, value)?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2558341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2756920", "body": "Are you sure that we should return TimeSpan.Zero if there is a song in the queue and it is stopped? I think we shouldn't.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2756920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213685", "body": "Because it is junk left by the designer.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213677", "body": "That is how you exit apps on WP8. And it is needed since most people use back button to call this.Game.Exit(). No brainer.\n\nPS: The comment is for silverlight users who expect it to save. That's something we don't need.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213784", "body": "Yep, that should be taken care of somehow, but that's another story. This is better than throwing an exception.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3217505", "body": "The debugger always hangs for me. That seems to be a WP8 think. Anyway, making a proper OnExiting is not part of this PR, so anything agains merging this?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3217505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "christallire": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/3476", "title": "- FIX for exception is thrown when device feature is not supported by PresentationParameters.MultiSam...", "body": "...pleCount\n\n```\nmultisampleDesc.Quality = (int)SharpDX.Direct3D11.StandardMultisampleQualityLevels.StandardMultisamplePattern;\n+                \n```\n\nThis code throws error when device is either very old or only supporting for software rendering.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/3475", "title": "- Mono workaround: Uri.LocalPath is not always same with .net platform", "body": "as with version of mono 3.12.0 \nUri.LocalPath returns \"///\" or \"//\" before actual LocalPath.\n\n```\nMono: ///Content/Spirtes/a.xnb\nWindows: Content/Spirtes/a.xnb\n```\n\nSo i did eliminated in order to \"///\" then \"//\" to prevent unwanted \"/\" left.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GhostTap": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/2856", "title": "WinForm Easy Embed", "body": "Hey @tomspilman,\n\nIt feels like creating an embedded Game class in win forms is extremely difficult in MonoGame.  I've struggled with this for like 4 years now, and it seems that people on the web have hundreds of hacky work arounds to make this all work.\n\nI was wondering if you would consider an addition like this which would greatly simplify making editors and other monogame embedded applications.  Given the small changes, it makes it possible for me to do use a Custom User Control and have Monogame render to that instead of to the hard coded WinFormsGameForm.  Controls will still work, mouse and everything.  Sample code below.\n\n```\n        private void Control_Load(object sender, EventArgs e)\n        {\n            if (this.DesignMode == false)\n            {\n                WindowsDeviceConfig.UseForm = false;\n                WindowsDeviceConfig.ControlToUse = this;\n\n                MyGame game = new MyGame();\n                game.IsFixedTimeStep = false;\n\n                Thread t = new Thread(new ThreadStart(() =>\n                {\n                    while (true)\n                    {\n                        this.Invoke(new MethodInvoker(() =>\n                        {\n                            game.RunOneFrame();\n                        }));\n\n                        Thread.Sleep(16);\n                    }\n                }));\n\n                t.IsBackground = true;\n                t.Name = \"Monogame Thread\";\n                t.Start();                \n            }\n        }\n```\n\nThoughts?\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cschwarz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508", "body": "Sorry, I thought the format is equal on all platforms. Has it been like that in XNA 3.1 too? I'm going to check this out now.\n\nAm 17.04.2011 um 13:29 schrieb CartBlanche:\n\n> Christian, we have a problem with your request, which I did not envision happening.\n> The code you have implemented, to check for XNBm is to handle the WP7 xnb format. That means Windows or XBox XNA4 binaries will not work as they have XNBw and XNBx headers. It either needs to support all the XNA 4 binary formats or as a minimum just the Windows one as that is the one most people are likely to have. The other 2 are bonuses.\n> \n> Could you let Kenneth and I know if a change to support XNBw is possible and what is the likely hood of supporting XNBx as well as XNBm. Alternatively should we revert back tot he 3.1 format?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/4#issuecomment-1016501\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1016508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647", "body": "That's right. It won't be easy to support compression, because they don't use gzip or deflate, but a custom compression algorithm as I read somewhere.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1017647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "andreesteve": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875", "body": "I thought I had to do that so I could keep in the same pace of development as the main trunk. Is there a way I can cut just that commit of the pull request? Should I stop fetching changes from the main trunk on the next commits?\n\nI'm sorry, I didn't know it could cause any trouble.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1794875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683", "body": "Just merged with upstream. I've removed the sample references from the linux solution.\nThe samples were removed from this repository, isn't it? Is there another repo where I could get then? I think its a good thing to separate the samples from the framework. Fetching will be faster :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727", "body": "I'm sorry, CartBlanche. I've just realized that I forgot to remove the linux starter kits. That card framework stuff.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1826727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475", "body": "I've posted the commit on a codexplex discussion regarding a sound performance issue, but no one replied yet. I couldn't confirm if this fix work for others.\n\nCodeplex discussion: http://monogame.codeplex.com/discussions/261118\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/1913475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Grapes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401779", "body": "I see what you are saying, I'll update that tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2401779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2854791", "body": "I'll try this tonight.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2854791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2857963", "body": "I can rotate the device now and it no longer goes crashes which is great. If the device is in landscape it'll show the taskbar in portrait mode but scale incorrectly.\n\nI solved the performance issues with running in release.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2857963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2858184", "body": "A simple rectangle like this: \nlogo_rect = new Rectangle(Game.width / 2 - 424 / 2, 90, 461, 287);\nspriteBatch.Draw(Game.textures[\"logo\"], logo_rect, Color.White);\n\nMaybe try same width/height.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2858184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2858196", "body": "Also I use a matrix scale on my spritebatch like so:\n\nspriteBatch.Begin(SpriteSortMode.Immediate, BlendState.AlphaBlend, null, null, null, null, matrix);\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2858196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cadahl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2417448", "body": "Thanks for the feedback. I see, I will examine and fix this, sorry for not paying closer attention.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2417448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486773", "body": "Sly?\n\nSure, I will fix it up as soon as I find some time (soon). Very busy atm.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2486773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2488771", "body": "No worries. I am definitely new, and perhaps especially to git. I'm a fairly able hg user but git is throwing me off a bit despite being similar. Have to get used to the workflow here on github too.\n\nThanks for merging my changes. I only have one regret: I did some refactoring of the changes and wanted to commit them, didn't have time for a while, but I will instead look at your merge and think it over again.\n\nMy project is just a small platform game, I was previously using OpenTK for personal projects but now that I found MonoGame, I think I'll go XNA. I'm finding some kinks as I go, and want to contribute to this great project. :)\nI find stubs and missing functionality, like the initiatlization code (GraphicsDeviceManager etc). Vsync didn't work, for instance. I'll keep poking at it and hopefully I can find time to generate more pull requests.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2488771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2512966", "body": "In short, yes. I just made the state activation more general and eliminated\nthe extra SamplerstateGL class. I had this fix written but not yet pushed\nwhen you did the manual rebase/merge.\nDen 25 okt 2011 00:28 skrev \"Dominique Louis\" <\nreply@reply.github.com>:\n\n> I think your changes have already been merged, or am I mistaken?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/61#issuecomment-2510458\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2512966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "vostok4": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2536954", "body": "Added on more commit to fix a typo I found.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2536954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "komiga": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2688009", "body": "You can manually merge and resolve the conflicts (click the 'i' circle on the left side of the status line for pull info).\n\nThough, (more appropriately) in a typical setting, the PR author handles conflicts with upstream and must update the PR to match changes made upstream.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2688009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "urkle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2647304", "body": "OK.. that sounds like a plan..   I'll work on that and send a pull request.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2647304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2725227", "body": "I've attached a pull request to this issue with the changes.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2725227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2819379", "body": "Yup, I have two other pull requests I have to rebase off of develop.  But probably won't get to them for another week or so.  And if I do decide to do this port I will definitely join the forums as it will involve I implementing quit a few features to monogamy..\n\nSent from my iPad\n\nOn Nov 21, 2011, at 13:17, Dominique Louis reply@reply.github.com wrote:\n\n> Hi Urkle,\n>  Thanks for your patch. I've incorporated it into the develop branch of MonoGame. In future, please base you patches on the develop branch as that is the cutting/bleeding edge that we are working on and we do not accept patches to the master branch. Once the develop branch is ready it will be merged into master for a public release.\n> \n> You can see the new Location property here...\n> https://github.com/CartBlanche/MonoGame/blob/develop/MonoGame.Framework/Rectangle.cs\n> \n> Do drop by the discussion forums on monogame.codeplex.com and let us know what you are working on, and if you release anything built with MonoGame.\n> \n> I'll close this request and we look forward to receiving more patches from you to make MonoGame better than ever.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/93#issuecomment-2818765\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2819379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2819379", "body": "Yup, I have two other pull requests I have to rebase off of develop.  But probably won't get to them for another week or so.  And if I do decide to do this port I will definitely join the forums as it will involve I implementing quit a few features to monogamy..\n\nSent from my iPad\n\nOn Nov 21, 2011, at 13:17, Dominique Louis reply@reply.github.com wrote:\n\n> Hi Urkle,\n>  Thanks for your patch. I've incorporated it into the develop branch of MonoGame. In future, please base you patches on the develop branch as that is the cutting/bleeding edge that we are working on and we do not accept patches to the master branch. Once the develop branch is ready it will be merged into master for a public release.\n> \n> You can see the new Location property here...\n> https://github.com/CartBlanche/MonoGame/blob/develop/MonoGame.Framework/Rectangle.cs\n> \n> Do drop by the discussion forums on monogame.codeplex.com and let us know what you are working on, and if you release anything built with MonoGame.\n> \n> I'll close this request and we look forward to receiving more patches from you to make MonoGame better than ever.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/93#issuecomment-2818765\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2819379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570", "body": "The question I have now, is why do we have two implementations which are (pretty much) exactly the same?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873", "body": "Oh goodie.   I'm just gawking at the amount of duplicated code as I port things from a private branch (mac port of a game) to the upstream develop branch for mac & linux. (and trying to mirror on Windows best I can).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1094873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "sdancer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2777345", "body": "Do you think keeping an extra method that takes ushort would be beneficial for some users?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2777345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2867468", "body": "Turning the color array on if the vertex object has color will result in undesired effects.  It's why I took it out for android.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2867468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2871550", "body": "The colorarray gets turned on in the apply method in basic effect if VertexColorEnabled in BasicEffect is set to true.  I didn't test in the samples.  I just got my XNA engine, FlatRedBall, working, so I'm trying to get it to work as close to XNA as possible.  I'm on Holiday vacation so I can't check anything until next week.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/2871550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3530021", "body": "What's the status on this?  I'm about to tackle device reset for the FRB engine.  I was going to reload everything in our ContentManager.  The problem with doing it through the engine is it should be done asynchronously otherwise it will freeze the game.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3530021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3536373", "body": "Yea, I know about this.  I'm still using 1.1 for our stuff.  The way things are applied in 2.0 require the shader (like the texture to draw) and I wasn't familiar with how that works.  So, I just use 1.1 as I don't need 2.0 features.  I think that's all that's needed though (applying the states).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3536373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3572815", "body": "Forgot some things.\n1.  This also fixes dispose for Android Textures.\n2.  To reload textures, call device reset.  I do this on a background thread and draw a loading screen until that's done in my game.\n3.  This adds a new file and methods.  I think the only thing other platforms need is the new file \"PrimaryThreadLoader\" .\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3572815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3704528", "body": "In what case is the RemoveAllViews not working?  If it's not properly removed, then it will throw an exception when it's restored.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3704528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3704528", "body": "In what case is the RemoveAllViews not working?  If it's not properly removed, then it will throw an exception when it's restored.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3704528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4087854", "body": "It'll probably need to take into account the dpi and resolution so we get\nan actual distance.  Then, I think it might be between a quarter and half\nan inch.\n\nOn Tue, Feb 21, 2012 at 2:27 PM, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> There is seem to be an issue here, we do need to have a minimum movement\n> value before raising FreeDrag events.. not sure what the value should be\n> though....\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/274#issuecomment-4086450\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4087854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519243", "body": "I dunno.  Seems kind of critical to me if you are going to leave Gesture\nDrag in.  Makes drag pretty useless without it.\n\nOn Thu, Mar 15, 2012 at 8:11 AM, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> Scott,\n> \n> I think we should leave this bug until the 3.0 release. What do you think?\n> \n> Dean\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/274#issuecomment-4519196\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519488", "body": "Android.Util.DisplayMetrics metric = new Android.Util.DisplayMetrics();\nGame.Activity.WindowManager.DefaultDisplay.GetMetrics(metric);\n\nmetric.densityDPI is the property that has the phones DPI.  You can take\nthe input value and determine the physical distance using DPI.  Vic and I\nare trying to solve the memory leak issue that MonoGame has.  Hopefully we\ncan solve that this weekend.\n\nOn Thu, Mar 15, 2012 at 8:15 AM, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> ok. any ideas on how to fix it? I dont know that much about dpi etc.\n> \n> We want to do a release on Wednesday next week (21st).\n> \n> On 15 March 2012 13:14, sdancer\n> reply@reply.github.com\n> wrote:\n> \n> > I dunno.  Seems kind of critical to me if you are going to leave Gesture\n> > Drag in.  Makes drag pretty useless without it.\n> > \n> > On Thu, Mar 15, 2012 at 8:11 AM, Dean Ellis <\n> > reply@reply.github.com\n> > \n> > > wrote:\n> > > \n> > > Scott,\n> > > \n> > > I think we should leave this bug until the 3.0 release. What do you\n> > > think?\n> > > \n> > > Dean\n> > > \n> > > ---\n> > > \n> > > Reply to this email directly or view it on GitHub:\n> > > https://github.com/mono/MonoGame/issues/274#issuecomment-4519196\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/issues/274#issuecomment-4519243\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/issues/274#issuecomment-4519263\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4519488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3815282", "body": "Right now, it just pads to power of 2.  ScaleImageToPowerOf2 actually scales the image to the new texture size.  That's how native XNA works.  But, for some people, it may be easier to handle if it just pads so I added an option to make it pad.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3815282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3840998", "body": "Good call.  Looked into that, and yes, that is it.  And, it's default on.  So, I'm going to change this.  But, turns out the issue I was having is something else that wasn't implemented.  Apparently, XNA will only call the # of updates for half of a second to catch up before going back to normal.  Where, right now, if there was 12 seconds of lag, it will run 12 seconds of updates.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3840998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3848427", "body": "I don't think your suggestion is right, but it brought up some issues that I'll try to fix during lunch (4 hours).  I'm not updating gametime correctly, so I'll change that.  And, I think I'm going to use a different FixedGameTime to pass to update when using IsFixedStep.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3848427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852362", "body": "Wait, I'm going to fix it.  Almost lunch time.\n\nOn Tue, Feb 7, 2012 at 11:33 AM, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> Scott\n> \n> did you want me to pull this or leave it until your fixes the GameTime\n> issues? I ran up the CatapultNetWars demo and noticed that the\n> gameTime.TotalGameTime always seems to be 0.\n> \n> Dean\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/281#issuecomment-3852310\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852371", "body": "No, I thought I got rid of them.\n\nOn Tue, Feb 7, 2012 at 11:35 AM, Scott Dancer dancer.scott@gmail.comwrote:\n\n> Wait, I'm going to fix it.  Almost lunch time.\n> \n> On Tue, Feb 7, 2012 at 11:33 AM, Dean Ellis <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Scott\n> > \n> > did you want me to pull this or leave it until your fixes the GameTime\n> > issues? I ran up the CatapultNetWars demo and noticed that the\n> > gameTime.TotalGameTime always seems to be 0.\n> > \n> > Dean\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/pull/281#issuecomment-3852310\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3852371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4053579", "body": "I've already added those commits and had merged the latest changes yesterday.  I guess another merge broke it again.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4053579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167", "body": "I didn't set it.  It was like that before.  But, ES11 would make more sense.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890", "body": "This is for reloading a texture when the context is lost.  I added this when adding tomb stoning to Android.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/437890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/436476", "body": "How do we know if double or triple buffering is on?  Is that platform specific?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/436476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443746", "body": "I've got changes in my local copy but haven't had a change to push it to\nthe develop branch.  Been tackling other issues.\n\nOn Mon, Feb 13, 2012 at 3:43 AM, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    if (iterations >= max)  //Reset catchup if to many\n> >   updates have been called\n> > -                    {\n> > -                        _totalTime = TimeSpan.Zero;\n> > -                    }\n> > -                }\n> > -            }\n> > -            else\n> > -            {\n> > -                DoUpdate(_gameTime);\n> > -                doDraw = true;\n> > -            }\n> >   +\n> > -            if (doDraw)\n> > -            {\n> > -                DoDraw(_gameTime);\n> > -                _platform.SwapBuffers();\n> \n> Guys, are we any further along with this ?\n> \n> I looked up and by default opengles on android uses doublebuffering.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/281/files#r442968\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jadaml": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001427", "body": "Yes, of course. Did I do something wrong for putting the request against the master branch? Should I remove this one, if there is an option for that?\nI only can send a new one. I hope it's okay.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001552", "body": "Actually I had trouble to do so, but I just did it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3001552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3016181", "body": "Correction: Rare case according to the discussions. (No one seemed to find any trouble.)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3016181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483", "body": "It is possible, that the controller is not an Xbox controller IMHO. Needed to be checked for possible names. \"Microsoft X-Box 360 Pad\" on Linux.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/268483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "TapaniV": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3022379", "body": "Wrong repo, sorry\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3022379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "sunbow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3222894", "body": "This Issue doesn't seem to be fixed for me.\nNow I get an OutOfRangeException at \"stream.CopyTo(memStream);\" when I try to load (also with the test-project).\n\nunfortunately I don't have permission to reopen this Issue :(\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3222894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3492653", "body": "Sorry, I had problems with my computer and had to reinstall the OS. Since then I didn't tried it again. Before the reinstallation I still couldn't load the content.\n\nplease give me a day or two to let me install all the git stuff and test it again.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3492653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3499229", "body": "Yeah! It works now.\n\nSo I probably had some broken installation or something.\n\nYou can close this Issue :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3499229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3492653", "body": "Sorry, I had problems with my computer and had to reinstall the OS. Since then I didn't tried it again. Before the reinstallation I still couldn't load the content.\n\nplease give me a day or two to let me install all the git stuff and test it again.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3492653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3499229", "body": "Yeah! It works now.\n\nSo I probably had some broken installation or something.\n\nYou can close this Issue :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3499229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jjxtra": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3226623", "body": "I will resubmit on the develop branch and take a look at the other\nplatforms and get back to you soon.\n\n-- Jeff\n\nOn Tue, Dec 20, 2011 at 2:01 PM, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> Also, we are current working in the develop branch, could you resubmit\n> your request to to develop branch\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/172#issuecomment-3225256\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3226623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3228965", "body": "I think I got this right, my develop branch to your develop branch if you're up for it :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3228965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3229015", "body": "Ok I updated my pull request to use the develop branch and I added GetData\nfor uint on Android and MacOS. I noticed Linux was completely commented out\nso I didn't go there...\n\n-- Jeff\n\nOn Tue, Dec 20, 2011 at 3:40 PM, Jeff Johnson jjxtra@gmail.com wrote:\n\n> I will resubmit on the develop branch and take a look at the other\n> platforms and get back to you soon.\n> \n> -- Jeff\n> \n> On Tue, Dec 20, 2011 at 2:01 PM, Dean Ellis <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Also, we are current working in the develop branch, could you resubmit\n> > your request to to develop branch\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/pull/172#issuecomment-3225256\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3229015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3226623", "body": "I will resubmit on the develop branch and take a look at the other\nplatforms and get back to you soon.\n\n-- Jeff\n\nOn Tue, Dec 20, 2011 at 2:01 PM, Dean Ellis <\nreply@reply.github.com\n\n> wrote:\n> \n> Also, we are current working in the develop branch, could you resubmit\n> your request to to develop branch\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/172#issuecomment-3225256\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3226623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3229015", "body": "Ok I updated my pull request to use the develop branch and I added GetData\nfor uint on Android and MacOS. I noticed Linux was completely commented out\nso I didn't go there...\n\n-- Jeff\n\nOn Tue, Dec 20, 2011 at 3:40 PM, Jeff Johnson jjxtra@gmail.com wrote:\n\n> I will resubmit on the develop branch and take a look at the other\n> platforms and get back to you soon.\n> \n> -- Jeff\n> \n> On Tue, Dec 20, 2011 at 2:01 PM, Dean Ellis <\n> reply@reply.github.com\n> \n> > wrote:\n> > \n> > Also, we are current working in the develop branch, could you resubmit\n> > your request to to develop branch\n> > \n> > ---\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/mono/MonoGame/pull/172#issuecomment-3225256\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3229015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3236333", "body": "Done\n\nOn Dec 21, 2011, at 9:54 AM, Dominique Louisreply@reply.github.com wrote:\n\n> Hi jjxtra, could you please resubmit this pull request so it is against the develop branch.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/174#issuecomment-3236215\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3236333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3228965", "body": "I think I got this right, my develop branch to your develop branch if you're up for it :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3228965/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ghost": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3287093", "body": "By all means, if you need anything from me to make the merge go more smoothly, don't hesitate to ask.\n\nThe last commit before the pull request was just a pull-back from mono/MonoGame@develop to work out any conflicts we may have created.  It's possible I clobbered some whitespace changes that had been made to the Android classes with that merge.  (Or it's possible that github is showing false-positives in the diff.)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3287093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4441120", "body": "This issue should be repaired by pull #369.  Please re-open it if there are further problems.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4441120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3601206", "body": "Hey, I just wanted to chime in here about the change to Game to make Platform_Activate/Deactivate internal.  I don't think this should be necessary.\n\nRather than calling Game.Platform_Activate/Deactivate directly, GamePlatform.IsActive can be set true/false by the iOSGamePlatform subclass.  This will raise the GamePlatform.Activated/Deactivated events, which Game subscribes to (Platform_Activate/Deactivate are the handlers for this event).\n\nI apologize for not documenting this change more thoroughly in the first place.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3601206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3601339", "body": "Actually, I'm going to withdraw this pull request for the moment.  I hadn't had an opportunity to try this code on a real device until just now, and it appears that performance is totally unacceptable.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3601339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602043", "body": "I'm still learning exactly how pull requests work.  I committed a couple of revisions to Lancej/MonoGame@develop that should not be part of this pull, so I'm closing this one and have opened a clean one that refers to the specific commit in question.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602245", "body": "Closing this so that we can do it piecemeal.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3602245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3665644", "body": "This was just a test! Never meant to be really pulled\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3665644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3665644", "body": "This was just a test! Never meant to be really pulled\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3665644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3837828", "body": "I may be misinterpreting its purpose, but I believe `AndroidCompatibility.DoCatchupUpdates` is expressed in XNA 4 as `Game.IsFixedTimeStep`.  When this property is true, XNA will attempt to call `Game.Update` at the interval given in `Game.TargetElapsedTime` and will skip calls to `Game.Draw` in order to accomplish this goal.  If it's not possible to catch up entirely, a call to `Draw` is forced at least every 500ms.\n\nThe remarks on [this page](http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.game.isfixedtimestep.aspx) give more details on this behavior.  And I've collected some data from XNA in [this gist](https://gist.github.com/1681158) that demonstrates under what circumstances and to what degree XNA is willing to skip `Draw` calls.  (Sorry, it's a little hard to read.  There is a lot of information to convey.)\n\nIs it feasible to use `Game.IsFixedTimeStep` directly rather than introducing a platform-specific flag?\n\n(If I've totally misunderstood, please correct me!)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3837828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3824456", "body": "Yep.  Unbreaks Linux and breaks iOS (probably Android too)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3824456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3879540", "body": "Will try again with mono:develop3d as the base\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3879540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3879834", "body": "Hi tpastor, it looks like this pull request merges out some recent changes to mono:develop3d.  In order to get a clean merge, you should create a new branch based on the commit that you originally started working from.\n\nAlso, there are a few files that have nothing in them except line-ending changes.  You might try turning on git's autocrlf setting to see if that reduces the number of line-ending changes.\n\nHere's all of that in command-line form:\n\n``` bash\n# Turn on autocrlf so that all line endings are converted to \\n when committing\n# On Windows, use 'true'.  On Mac/Linux, use 'input'\ngit config core.autocrlf true\n\n# Create a new local branch based on the commit your work started from\ngit checkout -b tpastor_develop3d <commit sha1 you started from>\n# Apply your changes here.  Then commit as usual.\ngit commit\n\n# Push to a new branch on your GitHub account\ngit push origin tpastor_develop3d\n\n# Finally, submit your pull request from tpastor:tpastor_develop3d to mono:develop3d\n```\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3879834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3901188", "body": "<del>Superseded by [pull 295](https://github.com/mono/MonoGame/pull/295)</del>\n\n\nMaybe I am wrong.  Is this actually superseded by 295, or is it separate?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3901188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/14866752", "body": "I'm having the same issue in XamarinStudio. Here's how to reproduce. At least with XamarinStudio it looks like the template creates reference to Windows version of the MonoGame.\n\n1 . Install MonoFramework-MDK-2.10.11.macos10.xamarin.x86.dmg\n2 . Install XamarinStudio-4.0.dmg\n3 . Install XamarinStudio.MonoGame_3.0.1.mpack using Add-in Manager\n4 . Create new MonoGame Mac Application solution\n5 . Use Build Action->BundleResource for logo.png\n6 . Run outputs:\n\n> Loaded assembly: /Users/ecode/Projects/Test/Test/bin/Debug/Test.app/Contents/MonoBundle/Test.exe\n> Loaded assembly: /Users/ecode/Projects/Test/Test/bin/Debug/Test.app/Contents/MonoBundle/MonoMac.dll [External]\n> \n> Unhandled Exception:\n> System.TypeLoadException: A type load exception has occurred.\n> [ERROR] FATAL UNHANDLED EXCEPTION: System.TypeLoadException: A type load exception has occurred.\n\n7 . Deselect \"MonoGame.Framework 3.0.10 monogame-windowsgl 3.0 (Provided by Xamarin Studio)\" from References\n8 . Select \"MonoGame.Framework 3.0.10 monogame-mac 3.0 (Provided by Xamarin Studio)\"\n\n**Step 8 automatically selects package referenced in step 7. Run outputs the same error as in step 6.**\n\n9 . Deselect \"MonoGame.Framework 3.0.10 monogame-windowsgl 3.0 (Provided by Xamarin Studio)\" from References\n10 . Add reference to ~/Library/Application\\ Support/XamarinStudio-4.0/LocalInstall/Addins/MonoDevelop.MonoGame.3.0.1/assemblies/MacOS/MonoGame.Framework.dll\n11 . **Project builds and runs ok!**\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/14866752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dhasenan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3321260", "body": "Are you saying that you will reject any line ending changes, even from nonstandard line endings (\\r only)?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3321260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "danzel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/41142563", "body": "Just tried this again on the latest version.\nGives a dark grey screen on WindowsGL, and crashes loading the converted shader on WindowsDX (I had to hack the shader to get it to compile, so might be my fault)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/41142563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1957795", "body": "@Nezz Are you sure about this block?\nThis breaks TouchPanel when built with iOS 5.1 SDK. TouchPanel ends up with _touchScale being Vector2(1.5,0.66667) always when using portrait (fine in landscape), which makes the touch position values scale incorrectly.\nI'm downloading the new SDK now and will update when I've tested\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1957795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1957884", "body": "Fine with iOS 6 SDK, just doesn't work with 5.1. No worries @Nezz \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1957884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3214276", "body": "Use .Any instead of .Count != 0?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3214276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "espes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3903875", "body": "I had a look out of curiosity. Minor monomac fix on the develop3d branch and krypton shows, er something: http://i.imgur.com/cidAx.png\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3903875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3815239", "body": "Why ScaleImageToPowerOf2? Shouldn't that just be default in ES1.1 unless GL_OES_texture_npot is enabled?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3815239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478", "body": "Probably shouldn't commit changes to the solution file\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/375478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162", "body": "I've been using \"ES11\" as my macro\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163", "body": "Should be internal, probably\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/417163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921", "body": "This necessary?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924", "body": "You'll need to figure out the commit you based your branch off and merge from there to prevent clobbering other commits like this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930", "body": "Did anything actually change in this file? Try to avoid changing line endings so diffs are nice :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938", "body": "nit: stick to tabs for indentation, unless the file on the whole uses spaces.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948", "body": "Try to remove non-changes like this. It makes git blame and whatnot harder.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950", "body": "There a nice way to factor this with the IndexBuffer impl? :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114", "body": "Can you use the .config file on Android?\n\nThough maybe it'd just be easier to use ifdefs for all platforms.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124", "body": "Why not leave it static?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133", "body": "Can this be put somewhere else?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140", "body": "we've got a separate TitleContainer.cs for each other platforms instead of idefs, since both functions have differences on each,\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149", "body": "Just use a loop, maybe\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/443149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001", "body": "That sort of stuff is put in the *GamePlatform classes on the other platforms, though I don't know if that's applicable in this case.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020", "body": "I would think the JIT would unroll it. Besides, it would be a very marginal gain considering the sloppiness of the rest of the decompression code.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447040", "body": "Such platform dll mapping is usually done in mono using dllmap in a config file: https://github.com/mono/MonoGame/blob/develop3d/MonoGame.Framework/MonoGame.Framework.MacOS.dll.config.  Dono if it works like that on android though.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/447040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/464744", "body": "Line ending change :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/464744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483977", "body": "assetStream.CopyTo(effectStream)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483978", "body": "Unused\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483980", "body": "No reason these enums+structs need to be duplicated. Since we control the format, just use XNA ones\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483985", "body": "Need to explain what this is for\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483986", "body": "These shouldn't be necessary\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/483986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484135", "body": "I meant like, as a comment\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484138", "body": "I disagree. Completely unnecessary and needless complexity, unless you can think of a use case where our binary format for XNA has different enums and features than our XNA api\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484140", "body": "Should be fixed before being pulled, I would think\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484156", "body": "Should correct these notes - 0xFEFF0901 indicates a directx 9 (minor version 1) effect object, and it probably should be made clear that GLSL is our own custom format.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/484156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/504164", "body": "Changes would break Android+iOS, wouldn't it?\n\nThe indentation changes are also pretty annoying :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/504164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/504170", "body": "Breaks build on ES platforms (no glPolygonMode)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/504170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/508899", "body": " || LINUX\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/508899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/508906", "body": "Probably don't really want to change the guid\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/508906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/509045", "body": "Might, yes. Best to keep pull requests clean.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/509045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/510309", "body": "No, I meant it was better fixed :/\n\nSorry for the confusion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/510309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/600670", "body": "Just fix this annoyance and it can be merged\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/600670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/600684", "body": "like, these change lines being present when there wasn't any change. Breaks `git blame` :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/600684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/675065", "body": "Line ending change :/\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/675065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1513080", "body": "^\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1513080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Squizzle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3379864", "body": "Windows 7 32bit\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3379864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3496660", "body": "Windows 7 32bit.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3496660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3522602", "body": "I tried your fork and it doesn't have VertexPositionColorTexture defined.  It has VertexPositionColor, VertexPositionNormalTexture and VertexPositionTexture.  Krypton XNA uses VertexPositionColorTexture to create lights.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3522602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ncoder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3628246", "body": "Got it. I'll try again following your instructions.\n\nOn Mon, Jan 23, 2012 at 5:31 AM, Kenneth Pouncey\nreply@reply.github.com\nwrote:\n\n> ncoder\n> \n> Also you might want to break these up into separate pull requests so we can see a little better what is going on. \u00a0This allows us to also be quicker in our response to pull requests if we have questions.\n> \n> Kenneth\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/220#issuecomment-3613753\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3628246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3628246", "body": "Got it. I'll try again following your instructions.\n\nOn Mon, Jan 23, 2012 at 5:31 AM, Kenneth Pouncey\nreply@reply.github.com\nwrote:\n\n> ncoder\n> \n> Also you might want to break these up into separate pull requests so we can see a little better what is going on. \u00a0This allows us to also be quicker in our response to pull requests if we have questions.\n> \n> Kenneth\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/220#issuecomment-3613753\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3628246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "bkane": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3636181", "body": "I will look into this soon (I'm a bit behind on the develop branch) - still getting the hang of git and working with github. I know Kenneth (I think - kjpou1?) had a different approach to fixing this that wasn't quite as hacky. I haven't had a chance to try that out though - that approach might tie vsync to the timestep of the game and not allow you to toggle it independently or after the game has started. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3636181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3657072", "body": "Whoops, kjpou1's change already went into the develop branch a little while back (https://github.com/mono/MonoGame/blob/9e2ef92943b4c09e02b78fac0e153a02fe7e5ae7/MonoGame.Framework/MacOS/MacGamePlatform.cs). I'll close this now.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3657072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "scottmm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702261", "body": "No Problem, I'm new to GitHub. I'll sort that out and get another done.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702322", "body": "No problem at all. Happy to help where I can.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702332", "body": "I'm not sure if I did or not, but it is worth adding a comment indicating that the Triggers and DPad are still not implemented.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702261", "body": "No Problem, I'm new to GitHub. I'll sort that out and get another done.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702322", "body": "No problem at all. Happy to help where I can.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702332", "body": "I'm not sure if I did or not, but it is worth adding a comment indicating that the Triggers and DPad are still not implemented.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3702332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "orsonteodoro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3785498", "body": "There is no issue with \n  2.0.0.0.zip 37712d44d2cb249af743e6b7b834238e724ed360 \nbut with\n  2.1.0.0.zip e6a05fdfaef4cb219043b9b2aaf786a92d1f694f\n  and trunk\n\nMy build environment is\n  Gentoo Linux\n  tao-sdl-1.2.13\n  lidgren-network-20120107\n  opentk-20101006\n  mono-2.10.5\n  monodevelop-2.6\n\npatch (deps-9999.patch):\n\nhttp://pastebin.com/JNFhPVwy\n\nbuild process:\napply deps-9999.patch (see above you must change the public key token for your build environment for each dependency)\nremove BOM from files:  find . -type f -name \"*.cs\" -print0 | xargs -0 -I {} sed -i -e 's|\\xef\\xbb\\xbf||g' {}  \ngenerate keypair for monogame: sn -k keypair.snk\nadd keypair to assembly: echo \"[assembly: AssemblyKeyFileAttribute(@\\\"${S}/keypair.snk\\\")]\" >> MonoGame.Framework/Properties/AssemblyInfo.cs\nbuild project: xbuild MonoGame.Framework.Linux.sln /p:Configuration=\"Release\" || die \"build failed\"\n\nSame problem exist if you compile it though MonoDevelop IDE.\n\nErrors:\n\n/var/tmp/portage/dev-dotnet/monogame-9999/work/monogame/MonoGame.Framework.Linux.sln (default targets) ->\n(Build target) ->\n/var/tmp/portage/dev-dotnet/monogame-9999/work/monogame/MonoGame.Framework/MonoGame.Framework.Linux.csproj (default targets) ->\n/usr/lib64/mono/4.0/Microsoft.CSharp.targets (CoreCompile target) ->\n\n```\n: error CS1577: Referenced assembly `GamepadBridge, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' does not have a strong name\n```\n\nThe problem is that there is no source code for GamepadBridge.  Either provide source code so I can strong sign it or strong sign the assembly and distribute the strong signed GamepadBridge assembly. I was able to strong sign tao-sdl, lidgren-network, opentk because I had access to the source code and there is no source code for GamepadBridge.  Also you cannot disable the strong sign check on Linux because the feature is not implemented for Mono StrongName (sn -Vr).\n\nYou can also remove the dependency of GamepadBridge which I recommend since it is closed source.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3785498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "totallyevil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12184406", "body": "Do we have a test case here that exercises this issue?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12184406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "totallyeviljake": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12801021", "body": "how about desktop XNA? I wonder what it allows....\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12801021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12806046", "body": "Does MG support immediate mode rendering? Yeah, those Xamarin guys need to get us a test case that precipitated this bug report. _ahem_ @CartBlanche ??\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12806046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3463140", "body": "I am updating now. It's not horrible, just horribly inconvenient. Every line really is conflicted, but that's how it goes sometimes ...\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3463140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3463193", "body": "Well, the trusty old forensic diff tool saves the day. Nothing changed after I did the github merge and deleted the head conflicts. Weird. pushing shortly ...\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3463193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710804", "body": "check this out @hach-que as this already does the rendering of true type labels on the fly and does kerning and all of that fun stuff.\n\nhttps://github.com/Cocos2DXNA/cocos2d-xna/blob/master/cocos2d/label_nodes/CCLabel.cs\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710804/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2801795", "body": "Do we know that the input texture is in ARGB format here? Is this \"FromArgb(0)\" a safe call to make?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2801795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2872678", "body": "@tomspilman this is where you are concerned about performance? This is the only reference search. How fast is the getHashCode on OALSoundBuffer? while the HashSet is O(logN) for this search, how much does it cost to compute the hash code? the O(n) linear search (as you point out) for small sets will outperform the HashSet lookup. The only reason I need List() is for the reverse iteration. if there was a way to do reverse iteration on the hashset so that I can remove items from the list inline with the iteration in update() then we can use HashSet (or whatever variant that offers reverse iteration)....\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2872678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2983298", "body": "I see in both cases the error isn't handled, it's just buried. I think we would want to care if the achievement made it or not. That's for another PR though.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2983298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3005276", "body": "Default = 0 here is likely going to affect anybody who already has dealt with this fun nuance of MG. Otherwise, these changes should be ok. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3005276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3005755", "body": "this is one of those times where I wish there was an mg-announce mailing list to alert our brethren that their orientation workarounds will need to be updated. This caused quite a bit of frustration when we ported cocos2d-xna over to iOS.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3005755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2938285", "body": "Game.TargetElapsedTime.TotalSeconds / (1.0f / 60.0f));\n\nthis is mathematically the same as \"60f \\* Game.TargetElapsedTime.TotalSeconds\" - is that the intention? What's the point of the extraneous 1/60 ??? \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2938285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2938347", "body": "Not entirely sure the compiler will optimize that correctly, so can you remove the 1/60 and just add a comment instead? 1/60 is irrational, so it may likely produce a value that is 59.99999 \\* TotalSeconds (as Tom pointed out earlier).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2938347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3020970", "body": "yes, thank you for documenting magic numbers! we all appreciate it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3020970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3031633", "body": "This change is unnecessary. I will remove it when I clean up the SoundEffectInstance comments and change the XNA pitch conversion method to use Pow(2,n).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3031633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2816242", "body": "Looks like a literal translation error, can you change this comment to read:\n\nPreserves the previous execution state in MetroGamePlatform and returns the constructed game object initialized with the given window.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2816242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3256546", "body": "GraphicsUtil.GetNextPowerfTwo(int) - no need to reinvent this method.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3256546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3256549", "body": "I agree with Ray, please update your log output to give it some context.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3256549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3273335", "body": "@tomspilman was that a comment for me? If so, then GraphicsUtil.GetNextPowerOfTwo(int) should get pulled into MathHelper so it doesn't get reinvented again and again.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3273335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3306845", "body": "ok.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3306845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3407954", "body": "This is a huge performance problem. iterations like this are trouble since you can easily compute the perturbation to bring your value into the range. Can you replace this iteration with a calculation instead? For instance, Wrap(123434343324, 1, 2) would iterate forever and make us all quite upset with your code. When you write the unit tests for these methods, you will need to include boundary tests like that.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3407954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3325666", "body": "This method seems superfluous. The meat of this method is to dispatch on the delegate, which should be done in the loop that calls it. Looped method calls are very expensive, so can the delegate invocation be moved up to line 503 above, in the KeyDown method?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3325666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3325690", "body": "The common pattern in the source is to use Debug.Assert() here in lieu of exception throwing. While this is very good defensive practice, this inner code is well designed to behave itself and outside use is restricted, meaning we know exactly what will happen when execution hits this spot. We don't need to defend against ourselves.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3325690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326024", "body": "If I am an inheritor here, I won't be able to override it because it is not virtual, it is just protected. Virtual methods are also very expensive. Your inheritance design here is to allow access to dispatch on the delegate? The event is public, so an inheritor can already dispatch their own events if they create them. Your side, in the base class, should be encapsulated and not shared. I don't believe that this inheritance model is correct for a game environment. It would be more applicable to text processing application.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326141", "body": "My opinion is to not allow inheritors to send events through this method. They should pump their events through the 'event' and deal with their own state. Whatever we push out of MG has to be isolated from the final game consumer. This change set begins to murk that strict separation.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326263", "body": "Yes! Indeed there may be, and then it should be supported by MonoGame rather than ad-hoc patched. Then again, once implemented by the game developer who is patching it in, the pedigree of events is well known and we no longer have to defend against ourselves. Oh, and yes, you are correct about events. Sorry. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326368", "body": "I see where you want to go with this change now. There has been very little discussion about how to create an extensibility layer in MonoGame. That kind of extension can be problematic to games because it creates a pure virtual layer that is inheritantly slow-performing. I am interested in @tomspilman's opinion.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3587816", "body": "I think these should be properties instead of GetXX() methods. That would be more C#'ish.\n\npublic Type[] ImporterTypes\n{\n  get { ... }\n}\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3587816/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3587977", "body": "I don't understand your comment. The property accessor will not create a new instance of your class each time you call it. It's just a compiler nuance, ergo shortcut for the GetXX() method. Your GetXX() methods do not change the state of the object and do not perform any action on the object, so they are just properties of the object. That's why they should be property accessors instead of methods.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3587977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3588289", "body": "Sure. The same people would also do obj.GetProperty1() != obj.GetProperty1(). We can't help those people. Their games will always be slow no matter what we do. (haha) Just add a comment on the property that this call has a side effect, or else keep the generated array as a member variable that is created on-demand one time.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3588289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3594624", "body": "@kentcb that's a fair argument that I will gladly concede.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3594624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3598087", "body": "Can you remove the 'Stupid sony\" from this comment? thanks.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3598087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3502279", "body": "interesting that i am looking at this right now too - because AVAudioPlayer returns null when I try to load an mp3 raw asset using the content loader ... I will try this right now.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3502279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3502296", "body": "This didn't fix my problem, but it did not cause any other problems. Still can't get Song to load an MP3 as a raw asset.. I tested i on iOS btw.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3502296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3520517", "body": "and you are doing this with a content type reader that is not in the monogame assembly? yeah. That must mean the File I/O operations provided by SONY allow for absolute pathing. You can't set RootDirectoryFullPath to tilde (~)? Such as \"~/mycontent.xnb\" ?? I am trying to think of a fun exploit where this public Location makes it easier, but I recall that the Vita was very strict about file system access.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3520517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tpastor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3880012", "body": "done.\nSorry for this inconvenience.\nToday is the first time iam using git.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:52 PM, Christopher Chambers <\nreply@reply.github.com\n\n> wrote:\n> \n> Hi tpastor, it looks like this pull request merges out some recent changes\n> to mono:develop3d.  In order to get a clean merge, you should create a new\n> branch based on the commit that you originally started working from.\n> \n> Also, there are a few files that have nothing in them except line-ending\n> changes.  You might try turning on git's autocrlf setting to see if that\n> reduces the number of line-ending changes.\n> \n> Here's all of that in command-line form:\n> \n> ``` bash\n> # Turn on autocrlf so that all line endings are converted to \\n when\n> committing\n> # On Windows, use 'true'.  On Mac/Linux, use 'input'\n> git config core.autocrlf true\n> \n> git checkout -b tpastor_develop3d <commit sha1 you started from>\n> # Apply your changes here.  Then commit as usual.\n> git commit\n> \n> # Push to a new branch on your GitHub account\n> git push origin tpastor_develop3d\n> \n> # Finally, submit your pull request from tpastor:tpastor_develop3d to\n> mono:develop3d\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290#issuecomment-3879834\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3880012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3898609", "body": "sent another pull request.\n\nAny problem, pls tell me !!!\n\niam learning git stuffs =P\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:52 PM, Christopher Chambers <\nreply@reply.github.com\n\n> wrote:\n> \n> Hi tpastor, it looks like this pull request merges out some recent changes\n> to mono:develop3d.  In order to get a clean merge, you should create a new\n> branch based on the commit that you originally started working from.\n> \n> Also, there are a few files that have nothing in them except line-ending\n> changes.  You might try turning on git's autocrlf setting to see if that\n> reduces the number of line-ending changes.\n> \n> Here's all of that in command-line form:\n> \n> ``` bash\n> # Turn on autocrlf so that all line endings are converted to \\n when\n> committing\n> # On Windows, use 'true'.  On Mac/Linux, use 'input'\n> git config core.autocrlf true\n> \n> git checkout -b tpastor_develop3d <commit sha1 you started from>\n> # Apply your changes here.  Then commit as usual.\n> git commit\n> \n> # Push to a new branch on your GitHub account\n> git push origin tpastor_develop3d\n> \n> # Finally, submit your pull request from tpastor:tpastor_develop3d to\n> mono:develop3d\n> ```\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290#issuecomment-3879834\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/3898609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4106984", "body": "Hi,\n\nI talked with others guys of monogame, and i will try to make another pull\nrequesst without all this mess.\niam not good at all with git, and that made me commit lots of idiot stuffs.\n\nyou can reject the pull request, i will open another soon with only the\nrigh things\n\nThiago Dias Pastor\n\nOn Wed, Feb 22, 2012 at 6:19 AM, Dominique Louis <\nreply@reply.github.com\n\n> wrote:\n> \n> It seems this pull request can no longer be automerged? Has it been\n> superceded?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/291#issuecomment-4099956\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4106984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4129355", "body": "I downloaded the branch develope3d and all the submodules.\nOpened the Windows Solution and compiled it.\nGot the following error.\n\nError 29 'OpenTK.Graphics.OpenGL.RenderbufferStorage' does not contain a\ndefinition for 'Extensions'\nC:\\Users\\tpastor\\Desktop\\Mono\\MonoRepo\\MonoGame.Framework\\Graphics\\GraphicsDevice.cs\n240 57 MonoGame.Framework.Windows\n\nLast version with problem:\ninternal void Initialize()\n        {\nextensions.AddRange(GL.GetString(RenderbufferStorage.Extensions).Split('\n')); -> HERE\n System.Diagnostics.Debug.WriteLine(\"Supported extensions:\");\nforeach (string extension in extensions)\n System.Diagnostics.Debug.WriteLine(extension);\n\n#if ES11\n//Is this needed?\n GL.TexEnv(TextureEnvTarget.TextureEnv, TextureEnvParameter.TextureEnvMode,\n(int)All.BlendSrc);\n#endif\n\nThe old version that i was using before does not contains these lines ...\n\nthe Opentk version changed ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 22, 2012 at 4:01 PM, Dominique Louis <\nreply@reply.github.com\n\n> wrote:\n> \n> Thanks for your patience Thiago. Git does take a little getting used to,\n> but like any new change control system, once you know how it fits together,\n> it will beceme like second nature to you.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/291#issuecomment-4111370\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4129355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4204782", "body": "Thanks for telling me.\nTo day i will download it, and starting working on those old changes ...\n\nOne question:\nCan i go Native (a fucntions from WIndowsSDK) in Windows solution using\n#If WINDOWS\n\nto make mouse pointer works ?\ni think there is a way using DLLImport  .... instead of using the new\nopentk dll version.\n\nIam asking because i did not see anyone using Native code in any version.\n\nThiago Dias Pastor\n\nOn Mon, Feb 27, 2012 at 7:22 PM, Dominique Louis <\nreply@reply.github.com\n\n> wrote:\n> \n> Hi Thiago,\n>  I just pushed a fix to develop3d branch that should allow Windows and iOS\n> to build, as well as MacOS.\n> \n> Hopefully in the next few days we'll get Linux building on there as well.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/291#issuecomment-4204605\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4204782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4207751", "body": "thanks for pointing this.\n\nSend a new pull request with some changes\nnot included the mouse and the vector3 changes yet, will include soon\n\nTake a look,\ntell me if i did some stupid thing (getting more pratice with git now =P)\n\nThiago Dias Pastor\n\nOn Mon, Feb 27, 2012 at 8:12 PM, Dominique Louis <\nreply@reply.github.com\n\n> wrote:\n> \n> Hi Thiago,\n>  Most ports have native calls. Each port has its own sub-directory, where\n> they have that OS/platform's specific versions of classes, like\n> GameWindow.cs for example. If you follow a similar pattern to what we have\n> for MacOS, this should give you  some hints.\n> \n> Dominique.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/291#issuecomment-4205590\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/4207751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929", "body": "no.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:35 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -79,6 +79,12 @@\n> >      <PlatformTarget>x86</PlatformTarget>\n> >      <DefineConstants>TRACE;WINDOWS</DefineConstants>\n> >    </PropertyGroup>\n> > -  <PropertyGroup>\n> > -    <SignAssembly>false</SignAssembly>\n> > -  </PropertyGroup>\n> > -  <PropertyGroup>\n> >   +\n> >   <AssemblyOriginatorKeyFile>MonogameKey.snk</AssemblyOriginatorKeyFile>\n> > -  </PropertyGroup>\n> \n> This necessary?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430921\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963", "body": "maybe i did not understood what you mean.\nNeed to make this magic cause the  elementSizeInByte can be diferent than\nthe syze of T\nthen we need to \"Cut\" the byte array in many slices and throw some parts\naway.\n\nAlso this uses ARB extensions and will work in machines with only Opengl\n1.4.\nIn mahcines with Opengl 2.0, there are ways to map only a range, not all of\nit ....\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/430963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052", "body": "is there any reason for using an old version of OpenTk\nIam a bit accustomed with some functions and i cant find them. (Like OpenTK\nstatic functions to handle Mouse Position ....)\ncan i change to the latest version ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/431052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938", "body": "i understood now what you mean. (i think)\n\nthis part\n\n> -                        if (i < elementSizeInByte)\n>   is dummy,\n>   it was a copy past from VertexBuffer.\n>   Here you cant slice the index, cause it is or int or short.\n\nThiago Dias Pastor\n\nOn Wed, Feb 8, 2012 at 10:43 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > -                    {\n> > -                        if (i < elementSizeInByte)\n> > -                            bytes[i] = *byt;\n> > -                        byt++;\n> > -                    }\n> >   +\n> > -                    IntPtr buffer =\n> >   Marshal.AllocHGlobal(elementSizeInByte);\n> > -                    Marshal.Copy(bytes, 0, buffer, elementSizeInByte);\n> > -                    object retobj = Marshal.PtrToStructure(buffer,\n> >   typeof(T));\n> > -                    data[j] = (T)retobj;\n> > -                    Marshal.Release(buffer);\n> > -                }\n> >   +\n> > -                GL.Arb.UnmapBuffer(BufferTargetArb.ArrayBuffer);\n> > -                Marshal.Release(ptr);\n> > -            }\n> \n> There a nice way to factor this with the IndexBuffer impl? :/\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/290/files#r430950\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/435938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/502100", "body": "Agree with you.\nChanged to used GetBufferSubData instead.\nWill add to the pull request today night.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/502100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/502118", "body": "More one thing.\n\nI have an ancient laptop that either does not have a dedicated video board.\nIt does not run the Windows version cause we use some stuffs not avaliable\non the laptop.\nSo i added a Compilation Symbol (REACH) and made some changes in the\nmonogame to run on this laptop.\n\nShould i send this to the repo, or monogame will only suport Hidef profile ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 29, 2012 at 6:34 AM, Christopher Chambers <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -65,21 +65,49 @@ internal void Apply()\n> >               {\n> >                       GL.BindBuffer(BufferTarget.ElementArrayBuffer,\n> > ibo);\n> > \n> > ##               }\n> > -             public void GetData<T>(int offsetInBytes, T[] data, int\n> >   startIndex, int elementCount) where T : struct\n> >   +\n> > -        public unsafe void GetData<T>(int offsetInBytes, T[] data, int\n> >   startIndex, int elementCount) where T : struct\n> \n> Hi Thiago,\n> \n> For GetData<T>, could a single call to GL.GetBufferSubData be used,\n> rather than having to loop and copy data?  This would allow you to remove\n> the 'unsafe' keyword, which doesn't match the XNA API.\n> \n> I know GetBufferSubData is not available in GLES, but I don't think\n> MapBuffer is either, so we'd need a different solution for the mobile\n> platforms either way.\n> \n> What do you think?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/324/files#r500561\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/502118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/502814", "body": "yes,\n\nBut we will need to add Lots of \"IFS\" in the code.\nActually, only two minor changes were necessary (But my tests do not cover\nlots of scenarios).\n\nDirectx and Opengl are quite different and probably some stuffs that are\nReach in DIrectx arent necessary reach in Opengl.\n\nSome stuffs like \"custom shader\" should not be Reach (it is a \"sacrifice\"\ndone by microsoft because of windows phone 7), so in my opinion the\nMOnogame REach should not be equal do XNA Reach,\nOur reach must constains things that runs in almost all plataforms (THis is\njust my opinion =P)\n\nAtt,\nThiago Dias Pastor\n\nOn Wed, Feb 29, 2012 at 3:36 PM, Christopher Chambers <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -65,21 +65,49 @@ internal void Apply()\n> >               {\n> >                       GL.BindBuffer(BufferTarget.ElementArrayBuffer,\n> > ibo);\n> > \n> > ##               }\n> > -             public void GetData<T>(int offsetInBytes, T[] data, int\n> >   startIndex, int elementCount) where T : struct\n> >   +\n> > -        public unsafe void GetData<T>(int offsetInBytes, T[] data, int\n> >   startIndex, int elementCount) where T : struct\n> \n> Yes, I think we'll eventually want full support for the Reach profile.\n>  I'd be interested in seeing those changes and working with you to get them\n> integrated.\n> \n> I think they should be fully selectable at runtime, like XNA does with\n> GraphicsDevice.GraphicsProfile.  Is it possible to do it that way, rather\n> than with a compilation symbol?\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/324/files#r502689\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/502814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/503016", "body": "I think it (maybe) doest not worth the effort\nChanges are very localized and the cost of performing some sparse extra ifs\nare pretty much the same of calling virtual methods.\nMaybe in terms of organization it worths ? Need to discuss more.\n\nBut what about the features, will us just follow the xna reach\nfuncionalities ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 29, 2012 at 4:06 PM, Christopher Chambers <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -65,21 +65,49 @@ internal void Apply()\n> >               {\n> >                       GL.BindBuffer(BufferTarget.ElementArrayBuffer,\n> > ibo);\n> > \n> > ##               }\n> > -             public void GetData<T>(int offsetInBytes, T[] data, int\n> >   startIndex, int elementCount) where T : struct\n> >   +\n> > -        public unsafe void GetData<T>(int offsetInBytes, T[] data, int\n> >   startIndex, int elementCount) where T : struct\n> \n> I can't say for sure without knowing more about the code, but it might be\n> possible to eliminate most of the 'ifs' by using a variation of the\n> [Strategy Pattern](http://en.wikipedia.org/wiki/Strategy_pattern).\n> \n> For example, we could have an internal abstract class,\n> GraphicsProfileBehavior.  And then HidefProfileBehavior and\n> ReachProfileBehavior implementations that actually do the work.  That way\n> you create the right kind of behavior object when the user chooses the\n> profile they want, and eliminate the need for if statements to be\n> throughout the code.  All the differences would be isolated into the\n> behavior of those two classes.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/324/files#r502927\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/503016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/504350", "body": "how do you usually test if ES platform will be broken ?\nI never used ES in my life and the bot did not worked for me >.<\n\nthe above fix is easy but the one in ...DrawElements...\ni dont even know the problem,\nhow do you usually test this sceneraios ?\n\nThiago Dias Pastor\n\nOn Wed, Feb 29, 2012 at 7:20 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -192,11 +191,6 @@ public static void FillMode (RasterizerState state)\n> >                               GL.PolygonMode(MaterialFace.FrontAndBack,\n> > PolygonMode.Line);\n> >                               break;\n> >                       }\n> > -#else\n> > -                     if (state.FillMode !=\n> >   Microsoft.Xna.Framework.Graphics.FillMode.Solid) {\n> > -                             throw new NotImplementedException();\n> > -                     }\n> >   -#endif\n> \n> Breaks build on ES platforms\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/324/files#r504170\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/504350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/504801", "body": "thanks.\n\nSomeone can pls point me the problem in the functions (DrawUserPrimitive).\nCause i dont have the environment to compile for IOS or Android.\n\nWHen i try to open the solution i get:\nThe project type is not supported by this installation.\niam using visual studio 2010 ultimate\n\nAtt,\nThiago Dias Pastor\n\nOn Wed, Feb 29, 2012 at 7:54 PM, Christopher Chambers <\nreply@reply.github.com\n\n> wrote:\n> \n> > @@ -192,11 +191,6 @@ public static void FillMode (RasterizerState state)\n> >                               GL.PolygonMode(MaterialFace.FrontAndBack,\n> > PolygonMode.Line);\n> >                               break;\n> >                       }\n> > -#else\n> > -                     if (state.FillMode !=\n> >   Microsoft.Xna.Framework.Graphics.FillMode.Solid) {\n> > -                             throw new NotImplementedException();\n> > -                     }\n> >   -#endif\n> \n> Right now the only way is to test against Android or iOS manually,\n> unfortunately.  I'm working on adding automatic testing for Android and iOS\n> to the bot.  And also working on fixing the bug that prevents it from\n> building this pull request.\n> \n> Hopefully things will be better soon!\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/324/files#r504386\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/504801/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/505319", "body": "where ?\ni cant compile for these platforms and i dont know ES well.\nTell me and i will fix\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/505319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/508928", "body": "this changes automatically here cause i have two monogame version on the same solution.\nIs this a problem ?\n\ni can switch back if it is.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/508928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/509060", "body": "commited another switching back this.\n\nThiago Dias Pastor\n\nOn Thu, Mar 1, 2012 at 7:07 PM, espes <\nreply@reply.github.com\n\n> wrote:\n> \n> >  <Project ToolsVersion=\"4.0\" DefaultTargets=\"Build\" xmlns=\"\n> > http://schemas.microsoft.com/developer/msbuild/2003\">\n> >    <PropertyGroup>\n> >      <Configuration Condition=\" '$(Configuration)' == ''\n> > \">Debug</Configuration>\n> >      <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\n> >      <ProductVersion>9.0.30729</ProductVersion>\n> >      <SchemaVersion>2.0</SchemaVersion>\n> > -    <ProjectGuid>{7DE47032-A904-4C29-BD22-2D235E8D91BA}</ProjectGuid>\n> > -    <ProjectGuid>{10E726F7-7F99-4BDB-972E-E3ED440DEDA8}</ProjectGuid>\n> \n> Might, yes. Best to keep pull requests clean.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/mono/MonoGame/pull/342/files#r509045\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/509060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "ivansf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13249106", "body": "I had the same problem as @dac-xp\nCreated a new solution and it doesn't run, but builds just fine.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13249106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13249942", "body": "MonoDevelop 3.1.1\nMonoGame 3.0.0\nXamarin.Mac 3.1.1\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/13249942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "joshbenner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/10669309", "body": "Was this ever sorted? I still get errors when I attempt to install the package into MonoDevelop 3 on Mac.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/10669309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dac-xp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12948915", "body": "Same problem as @dominickm here. Created a new MonoGame Mac Application, tried to run it and got the \"[ERROR] FATAL UNHANDLED EXCEPTION: System.TypeLoadException: A type load exception has occurred.\" - message. \n\nI'm working with MonoDevelop 3.1.1 and the MonoDevelop.MonoGame_3.0.0 Add-In.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12948915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "benoitjadinon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7687525", "body": "templates from github are not working with MD 3.x\nit would be awesome to have an mpack package of it...\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7687525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7689497", "body": "it installed correctly using your repo, but then crashes when opening \"New Solution\" :\n\nSystem.InvalidOperationException: Type 'MonoDevelop.MonoGame.MonoGameProject' not found in add-in 'MonoDevelop.MonoGame,2.5.1'\n  at Mono.Addins.RuntimeAddin.GetType (System.String typeName, Boolean throwIfNotFound) [0x00000] in <filename unknown>:0 \n  at MonoDevelop.Projects.Extensions.DotNetProjectSubtypeNode.get_Type () [0x00011] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Extensions/DotNetProjectSubtypeNode.cs:73 \n  at MonoDevelop.Projects.Extensions.DotNetProjectSubtypeNode.CanHandleItem (MonoDevelop.Projects.SolutionEntityItem item) [0x00000] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Extensions/DotNetProjectSubtypeNode.cs:121 \n  at MonoDevelop.Projects.Formats.MSBuild.MSBuildProjectService.InitializeItemHandler (MonoDevelop.Projects.SolutionItem item) [0x0004f] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Formats.MSBuild/MSBuildProjectService.cs:141 \n  at MonoDevelop.Projects.Formats.MSBuild.MSBuildFileFormat.ConvertToFormat (System.Object obj) [0x0002e] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Core/MonoDevelop.Projects.Formats.MSBuild/MSBuildFileFormat.cs:190 \n  at MonoDevelop.Projects.SolutionEntityItem.InitializeItemHandler () [0x00000] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Core/MonoDevelop.Projects/SolutionEntityItem.cs:232 \n  at MonoDevelop.Projects.SolutionItem.get_ItemHandler () [0x0000b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Core/MonoDevelop.Projects/SolutionItem.cs:92 \n  at MonoDevelop.Projects.SolutionEntityItem.set_Name (System.String value) [0x00020] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Core/MonoDevelop.Projects/SolutionEntityItem.cs:162 \n  at MonoDevelop.Projects.DotNetProject..ctor (System.String languageName, MonoDevelop.Projects.ProjectCreateInformation projectCreateInfo, System.Xml.XmlElement projectOptions) [0x00249] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Core/MonoDevelop.Projects/DotNetProject.cs:149 \n  at MonoDevelop.Projects.DotNetAssemblyProject..ctor (System.String languageName, MonoDevelop.Projects.ProjectCreateInformation projectCreateInfo, System.Xml.XmlElement projectOptions) [0x00000] in <filename unknown>:0 \n  at MonoDevelop.MonoMac.MonoMacProject..ctor (System.String languageName, MonoDevelop.Projects.ProjectCreateInformation info, System.Xml.XmlElement projectOptions) [0x00000] in <filename unknown>:0 \n  at MonoDevelop.MonoMac.MonoMacProjectBinding.CreateProject (MonoDevelop.Projects.ProjectCreateInformation info, System.Xml.XmlElement projectOptions) [0x0000c] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/md-addins/MonoDevelop.MonoMac/MonoDevelop.MonoMac/Project/MonoMacProjectBinding.cs:40 \n  at MonoDevelop.Projects.ProjectService.CreateProject (System.String type, MonoDevelop.Projects.ProjectCreateInformation info, System.Xml.XmlElement projectOptions) [0x00033] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Core/MonoDevelop.Projects/ProjectService.cs:498 \n  at MonoDevelop.Ide.Templates.ProjectDescriptor.CreateItem (MonoDevelop.Projects.ProjectCreateInformation projectCreateInformation, System.String defaultLanguage) [0x00036] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Templates/ProjectDescriptor.cs:114 \n  at MonoDevelop.Ide.Templates.ProjectTemplate.HasItemFeatures (MonoDevelop.Projects.SolutionFolder parentFolder, MonoDevelop.Projects.ProjectCreateInformation cinfo) [0x0000e] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Templates/ProjectTemplate.cs:301 \n  at MonoDevelop.Ide.Projects.NewProjectDialog.SelectedIndexChange (System.Object sender, System.EventArgs e) [0x00107] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Projects/NewProjectDialog.cs:480 \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7689497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7690009", "body": "replaced the dll with one compiled on mac, but it is still not working\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7690009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7693687", "body": "thanks ! (I'm using MD 3.0.3.5)\nit's almost working ;) \n\nnow \"New Solution\" is ok (no errors, + icons)\nbut when clicking Forward after filling some solution name, it crashes saying :\n\nFile ${ProjectName}Game.cs could not be written.\n\nthen 3 (or 4?) popups :\nFile Main.cs [/ Content / Properties] could not be written.\n\n(it created the root solution folders at the right place)\n\nfirst exception :\n\nSystem.IO.DirectoryNotFoundException: Could not find a part of the path \"/Users/bja/Library/Application Support/MonoDevelop-3.0/LocalInstall/Addins/MonoDevelop.MonoGame.2.5.1/templates/MonoGameApplication/MacGame.cs\".\n  at System.IO.FileStream..ctor (System.String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, Boolean anonymous, FileOptions options) [0x00000] in <filename unknown>:0 \n  at System.IO.FileStream..ctor (System.String path, FileMode mode, FileAccess access, FileShare share) [0x00000] in <filename unknown>:0 \n  at (wrapper remoting-invoke-with-check) System.IO.FileStream:.ctor (string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  at System.IO.File.OpenRead (System.String path) [0x00000] in <filename unknown>:0 \n  at System.IO.StreamReader..ctor (System.String path, System.Text.Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize) [0x00000] in <filename unknown>:0 \n  at System.IO.StreamReader..ctor (System.String path) [0x00000] in <filename unknown>:0 \n  at (wrapper remoting-invoke-with-check) System.IO.StreamReader:.ctor (string)\n  at System.IO.File.ReadAllText (System.String path) [0x00000] in <filename unknown>:0 \n  at MonoDevelop.Ide.Templates.TextFileDescriptionTemplate.CreateContent (System.String language) [0x00000] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Templates/TextFileDescriptionTemplate.cs:77 \n  at MonoDevelop.Ide.Templates.SingleFileDescriptionTemplate.CreateContent (MonoDevelop.Projects.Project project, System.Collections.Generic.Dictionary`2 tags, System.String language) [0x00000] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Templates/SingleFileDescriptionTemplate.cs:311 \n  at MonoDevelop.Ide.Templates.SingleFileDescriptionTemplate.CreateFileContent (MonoDevelop.Projects.SolutionItem policyParent, MonoDevelop.Projects.Project project, System.String language, System.String fileName, System.String identifier) [0x00015] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Templates/SingleFileDescriptionTemplate.cs:264 \n  at MonoDevelop.Ide.Templates.SingleFileDescriptionTemplate.SaveFile (MonoDevelop.Projects.SolutionItem policyParent, MonoDevelop.Projects.Project project, System.String language, System.String baseDirectory, System.String entryName) [0x0005b] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Templates/SingleFileDescriptionTemplate.cs:204 \n  at MonoDevelop.Ide.Templates.SingleFileDescriptionTemplate.AddFileToProject (MonoDevelop.Projects.SolutionItem policyParent, MonoDevelop.Projects.Project project, System.String language, System.String directory, System.String name) [0x00000] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Templates/SingleFileDescriptionTemplate.cs:113 \n  at MonoDevelop.Ide.Templates.SingleFileDescriptionTemplate.AddToProject (MonoDevelop.Projects.SolutionItem policyParent, MonoDevelop.Projects.Project project, System.String language, System.String directory, System.String name) [0x00000] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Templates/SingleFileDescriptionTemplate.cs:108 \n  at MonoDevelop.Ide.Templates.ProjectDescriptor.InitializeItem (MonoDevelop.Projects.SolutionItem policyParent, MonoDevelop.Projects.ProjectCreateInformation projectCreateInformation, System.String defaultLanguage, MonoDevelop.Projects.SolutionEntityItem item) [0x001c6] in /Users/builder/data/lanes/monodevelop-lion-monodevelop-3.0.3-branch/3d53e136/source/monodevelop/main/src/core/MonoDevelop.Ide/MonoDevelop.Ide.Templates/ProjectDescriptor.cs:158 \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7693687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7693793", "body": "and that is because the /templates/ folder does not contain /MonoGameApplication/ \nonly *.xpt.xml files (and actually misses some too, the Classes ones, like MonoGameiOSClass.xft.xml)\n-> I've copied the missing folder (and .xml) from MonoGame 2.5 zip and it worked, but I these should be installed by the add-in as well.\nanyway, thanks for support ! will you release the addin as part of the package from now on ?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7693793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7694464", "body": "this time it warned about monogame and lidgren, which seems ok, but there still is one more issue : \n![File Not Found ${ProjectName}Game.cs](https://img.skitch.com/20120813-nhpdbhq48rmebrhibf3ctmiqkt.jpg)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7694464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7694507", "body": "I guess that's the Main Class setting\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7694507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7694582", "body": "and the *Classes.xpt.xml files are still not there either\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7694582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7695062", "body": ";)\nI'm afraid the File Not Found popup still shows (though I now see Game1.cs, so i'm using the latest build)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7695062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7695455", "body": "FYI   >:-(\n\n;-)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7695455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7696032", "body": "yes and it is usable still.\nthanks for the support.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/7696032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "dominickm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12254320", "body": "Like @joshbenner  I'd be interested in knowing the status of this.. I used you  addin link and it works ok but there that Game error is still thrown and when I run the project it crashs with the following output: Unhandled Exception: System.TypeLoadException: A type load exception has occurred.\n[ERROR] FATAL UNHANDLED EXCEPTION: System.TypeLoadException: A type load exception has occurred.\n\nI've added MG manually before but it would be great to get this template system working. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/12254320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tromero": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/14694252", "body": "I'm having this same issue in Monogame 3.0.1. No matter whether I create the project using Xamarin or Monodevelop, I still get a System.TypeLoadException when creating a new Monogame Mac Application.\n\nVersions:\n\nMonogame 3.0.1\nXamarin 4.0 (build 2003)\nMonodevelop 3.1.1\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/issues/comments/14694252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jfernandezrodriguez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083", "body": "Sorry, It's my fault. I'll fix it now. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/797083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "bonesoul": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951", "body": "I really don't understand why you guys keeping especially samples in a submodule. Especially new users when first trying to get introduced a new sdk/framework, they'll be looking for documentation / samples. Monogame already lacks a proper documentation and further \"hiding\" samples/starter kits makes harder to get started?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1120951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763", "body": "Okay given the 400MB fact then submodules are correct way to go. In the first place, I just put myself in place of a new-starter who isn't that much experienced with git.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797", "body": "Okay, it's good to know these are coming. I hope I can find some free time so I can start hacking the monogame source - or maybe I should start with some quick intro docs.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1121797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/600685", "body": "actually there was a change there which I tried a fix (https://github.com/raistlinthewiz/MonoGame/commit/a9696b85c39e80e6b801b5fc52f0320581c0aaa0 and https://github.com/raistlinthewiz/MonoGame/commit/f8274d6047158cf02155397acc5a2849df7c54d6), though slygamer provided a correct fix later for it (https://github.com/mono/MonoGame/pull/395).\n\nSo I decided to remove my changes back on that file which eventually broke the blame.\n\nI'll be removing that annoyance now. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/600685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/600687", "body": "It should be all okay now.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/600687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956245", "body": "mm nice catch :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2956245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "seanedwards": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237", "body": "If an exception occurs here, bitmap is possibly uninitialized, resulting in a null pointer exception. Something more intelligent should be done with this exception.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "eropple": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248", "body": "Issue noted in #585; this won't build in Mono 2.11 and is probably not wise anyway. Surely there's something better than a catch-all?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1588248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "timothyparez": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775", "body": "Hey,\n\nI've tried to check out this branch, but it seems to be missing a lot of files\n\n3dSample cannot be located and neither can Samples/Draw2D/\nThe OpenTK project refers to ../opentkpi/Source/OpenTK/OpenTK.csproj   \n\nAm I missing something? How can I get these?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1754775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034", "body": "I tried cloning /mono/opentk but that differs from opentkpi (I'm new to the git stuff)\nIf you have any compiled stuff you'd like me to test, please let me know, I've got raspberry's to play with\n\nI'm using the armel version of wheezy, as I've heard the raspbian version doesn't work?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1755034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "kaalus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938", "body": "In XNA clears are affected by scissor. Why this change?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1771938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "renaudbedard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081", "body": "I don't understand why this is necessary or a good thing.\nFirst it made one of my shaders break because it has elements (sub-params) and the parent/root value is never set.\nAlso it seems valid to set, for instance, a Sampler2D to null to clear its texture.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1794081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1928194", "body": "This doesn't compile over here with the version of OpenTK that's in Dependencies/Libs, this enum member (.Zero) does not exist. Or is it just me?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1928194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1968960", "body": "This doesn't compile here, ShaderCode is a byte array and stripped isn't.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1968960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1968966", "body": "Another compile error, since bytecode is a byte array and that constructor expects a ShaderByteCode.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1968966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1968987", "body": "I should mention that the errors I'm getting are on Windows 7 with referencing the DLLs from ThirdParty\\Libs\\SharpDX\\Windows.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1968987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969044", "body": "ToArray is not a member of DataStream in my SharpDX DLL...?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969083", "body": "There's nothing to update under Windows, the latest push is from June. Only the \"Windows 8 Metro\" DLLs have been updated.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969391", "body": "Argh, you're right. I'm using a new tool for Git and it wasn't showing upstream changes in submodules when merging.\nSorry for the outcry!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1969391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2671404", "body": "For some reason, this commit breaks some of my RTs. I don't have the time to figure out what's wrong so I just commented out the additions and it went back to normal... anyone had problems with it?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2671404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677595", "body": "To be clear : I don't use MRT either, it seemed to confuse my regular RT draws.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677625", "body": "Is the stencil buffer fancy? I use that. :D\nI'll have to dig later into what could cause it, I'll let you know if I find anything. Not my number 1 priority right now though.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Aranda": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1928205", "body": "You're absolutely right. I'm submitting a PR right now :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1928205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1928236", "body": "PR that fixes this is up now: https://github.com/mono/MonoGame/pull/828\n\nI should have mentioned that you can just replace TextureTarget.Zero with the number 0. I managed it because I was in GLES mode which maps TextureTarget to GLES.All.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/1928236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1532561", "body": "Have you tested this change on Android? I think it used to be like this and it was possible to get moved events without a pressed event of the same ID. This occurred when moved events occurred in the same frame as their pressed event. The `&&  _events[j].State == loc.State` clause was added to ensure only the multiple moved events per frame were filtered out.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1532561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560287", "body": "This line does not compile in Mono for Android.:\n\n> Error 4   The 'this' object cannot be used before all of its fields are assigned to   C:\\dev\\GnomicDev\\MonoGame\\MonoGame.Framework\\Input\\Touch\\TouchLocation.cs   145 35  MonoGame.Framework.Android\n\nChanging to assign directly to `_timestamp` for testing.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560293", "body": "This line can currently crash on Android. If you hold a touch down and the device orientation changes, it calls ReleaseAllTouches(). Then a release event can come in with the same ID so _touchIds[id] throws a key not found exception. The unfortunate thing is that Android sometimes gives you released events and sometimes doesn't. That was why my EndTouch() implementation didn't Assert that the touch already existed.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1560293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1575758", "body": "Should have said.... This is required because the Viewport may also have changed since TouchPanel.DisplayHeight/Width was last set.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1575758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1598224", "body": "Should we also set `_shaderHandle = -1;` here?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1598224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1598521", "body": "Here's a clue. If I add just this line back in, my problem goes away. I put a break point in there during the period when it would otherwise be showing a texture that was being loaded and only the first texture in the array was non-null.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1598521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1638363", "body": "Will this still compile for other OPENGL platforms such as Android?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1638363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1667646", "body": "This looks to me like it would create unnecessary garbage. Could it be made a member variable that gets cleared or kept up to date?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1667646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1716702", "body": "I'm not certain, but wouldn't you want to avoid the integer rounding by doing this? :\n\n``` csharp\n    -origin.X * (float)destinationRectangle.Z / (float)texture.Width,   \n    -origin.Y * (float)destinationRectangle.W / (float)texture.Height,\n```\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1716702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1718227", "body": "Hehe, that's what comes of assuming the variable was a Rectangle just because it had the word Rectangle in the name :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1718227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1977923", "body": "Small grammar/spelling mistake in this comment. Up to you if you think it's worth fixing.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1977923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2165099", "body": "Am I missing something here? This line looks to be doing out of bounds access on an ininitialised array!?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2165099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2980087", "body": "Shouldn't `input` be be `bundleName` here (or vice versa)? Looks like `input` is currently undefined.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2980087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2942099", "body": "I wonder if all this invalid cast checking should be converted to Degub.Assert() or wrapped in #if DEBUG. Seems this might detriment performance to some small (but unkown) degree.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2942099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2943110", "body": "I realise that, but thought that it may be appropriate if the error checking impacted on performance. It seems unlikely that someone would use the method incorrectly AND not run it in DEBUG. Perhaps the safety of checking in release outways the performance hit though.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2943110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2960833", "body": "> You only link against the release version... this I guess is why validation of parameters is done via exceptions.\n\nThat's a very good point. Since we're an open source library, I imagine most devs will prefer to get and compile the source themselves, but as MonoGame becomes more stable, people may increasingly use the installed binaries only.\n\nI'd still prefer not to check incorrect parameters in RELEASE builds, but since we're aiming for Xna parity, I'm happy to concede this one if others prefer the extra safety.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2960833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3119233", "body": "Just the anistropic filter lines. I tracked the problem down to when this anisotropic filtering was recently added (see linked PR) and the Min and Mag filtering has been in for ages.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3119233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3119414", "body": "Right. Good catch :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3119414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "WaaghMan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2186394", "body": "It fixed the issue explained in #946\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2186394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Lone-Coder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2389526", "body": "Yay!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2389526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "aghajani": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2552881", "body": "Me too, I will fix song constructor in diff folders (Linux and Android)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2552881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2553021", "body": "Fix for Linux and Android is submitted as a PR #1290\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2553021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "etodd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677621", "body": "@tomspilman Unfortunately my game's MonoGame port is not compiling right now so I haven't used this code in a while; I just tested it against the Windows render target sample. But originally I had it doing MRT with four targets in different formats. @renaudbedard are you doing anything particularly fancy?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677638", "body": "I've never used the stencil buffer, that could definitely be it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/2677638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2175330", "body": "Oh shoot. I have VS set to tabs. Am I gonna have to switch my whole solution over to spaces?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2175330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2175533", "body": "Okay. Wish you guys were using tabs though, so everyone can use whatever tab width they want. I hate how that's the C# default.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2175533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Ark-kun": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292507", "body": "This doesn't hide the cursor by default.\nMore so it removes any way to hide it.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292575", "body": "This should be private or internal. It's not used outside the WinFormsGameWindow.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292680", "body": "This breaks compilation when DIRECTX is defined while WINDOWS_MEDIA_SESSION and WINDOWS_MEDIA_ENGINE are not defined since SoundEffect doesn't have this constructor when DIRECTX is defined.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292844", "body": "GetRenderTargetView and GetDepthStencilView are the only two public API members that depend on SharpDX.Direct3D11\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292850", "body": "Speakers enum is the only public API member that references/depends on the SharpDX assembly.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3292850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3293180", "body": "The public API of the Windows MonoGame.Framework assembly is now nearly perfectly \"clean\".\nOnly SoundEffect.Speakers, RenderTargetCube.GetRenderTargetView and RenderTargetCube.GetDepthStencilView link it to SharpDX assemblies.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3293180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3301261", "body": "@tomspilman, @xanather, Sorry, I was wrong and this is already fixed.\nI've wrote this comment because mouse wasn't hidden by default in the packaged Windows MonoGame library that I used and this commit seemed to cause this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3301261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "bwfox": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3302573", "body": "_graphicsDevice is no longer initialized in the WindowsGL build with this removal. \n\nEDIT: Ah, found the PR: https://github.com/mono/MonoGame/pull/1757\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3302573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "azchohfi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3440840", "body": "This commit broke my iOS build! Can't find TextureParameterName.TextureLodBias.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3440840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442373", "body": "I'm using the latest stable Xamarin.iOS. Version 6.2.7.1 (Business Edition).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3442373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "thelinuxlich": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3706940", "body": "Does it mean we can finally compile fonts on linux?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3706940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710767", "body": "Cool, gotta test it :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3712401", "body": "+1 on the .spritefont change\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3712401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nightst4r": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710921", "body": "I've had lots of expierience with Freetype, its not so bad, You'd just have to load the font from Memory or from disk, and then set the pixel size you want for the font, and then u can get the advance metrics and all that from each character. oh and the kerning data is 64x larger than a pixel so if the kern value was 1, it will say its 64, so just need to do a shift. its all the their docs. \n\nhttp://www.freetype.org/freetype2/docs/tutorial/step1.html\n\nOr perhaps even easier, we can just get the kerning data from the TTF kerning table in the file.?\n\nhttps://developer.apple.com/fonts/TTRefMan/RM06/Chap6kern.html ?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/3710921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "gyfis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4344910", "body": "Hey guys, you forgot to add the { } braces around the $guid2$ - took me quite some time to figure out what was wrong and how to fix that, since the ProductID formats are not really publicly findable. Also, it seems quite small to make a whole new commit out of it, but I'll do it if that's necessary.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4344910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4348200", "body": "I so much love the team working on this! Great job, truly, with everything in this framework!\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4348200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "DrMiaow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4967368", "body": "After pulling this and adding this to my local repo nothing renders for me on the Vita or Vita Emulator.\n\nSeems to stop vector and texture/image blits from having any visual effect,\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/4967368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324203", "body": "This appears to have broken PSM for me.\nImages and textures are still working but fonts and vectors now don't appear to render properly.\n\nFonts don't show.\nVectors are very very dark.\n\n![10-02-2014 9-46-39 pm](https://f.cloud.github.com/assets/31360/2124529/b778f20c-9240-11e3-8629-dc411b258ff6.png)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324250", "body": "Reverting just this patch gets me back to where I should be..\n\nAny ideas as to where you think the issue might be?\n\n![10-02-2014 9-50-31 pm](https://f.cloud.github.com/assets/31360/2124549/3935d8b4-9241-11e3-9e9a-ff30737aee98.png)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324406", "body": "This seems to be killing the Color for the vectors...  reverting this line for the previous gives me colors back.. No change to fonts though.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324523", "body": "Fonts are being killed by something in GraphicsDevice.cs. \nAny ideas?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324566", "body": "Removing the addition of ApplyState(true); resolves the font issue.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324585", "body": "Looks like modifying the two lines I suggested in the two comments in the code above resolves the issues for PSM.\n\nDo you have any objections to me making these changes?\n\nDo you foresee any impact? \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324712", "body": "Here is the branch that I am going to issue a pull request for unless you can think or something else I should do.\n\nThe change to GraphicsDevice.cs looks consistent with other PSM code in there.\n\neg.\n\n> public void DrawPrimitives(PrimitiveType primitiveType, int vertexStart, int primitiveCount)\n\nDoes not call `ApplyState(true);`\n\nThe chance to the shader though.. it looks like the intention was there there should be a default texture that you are not providing by default?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5324712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mgbot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5931196", "body": "TeamCity MonoGame :: Develop (Win) [Build 12](http://teamcity.monogame.net/viewLog.html?buildId=46&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:23\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5931196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5931198", "body": "TeamCity MonoGame :: Develop (Win) [Build 13](http://teamcity.monogame.net/viewLog.html?buildId=47&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5931198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5934341", "body": "TeamCity MonoGame :: Develop (Win) [Build 37](http://teamcity.monogame.net/viewLog.html?buildId=76&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5934341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5934926", "body": "TeamCity MonoGame :: Develop (Win) [Build 48](http://teamcity.monogame.net/viewLog.html?buildId=115&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:14\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5934926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5934929", "body": "TeamCity MonoGame :: Develop (Win) [Build 49](http://teamcity.monogame.net/viewLog.html?buildId=116&buildTypeId=MonoGame_DevelopWin) outcome was **FAILURE**\nSummary: Snapshot dependency failed: MonoGame :: Develop (Mac) Build time: 00:00:00\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5934929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5934930", "body": "TeamCity MonoGame :: Develop (Win) [Build 50](http://teamcity.monogame.net/viewLog.html?buildId=117&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5934930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5935424", "body": "TeamCity MonoGame :: Develop (Win) [Build 62](http://teamcity.monogame.net/viewLog.html?buildId=129&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:06\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5935424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5935425", "body": "TeamCity MonoGame :: Develop (Win) [Build 63](http://teamcity.monogame.net/viewLog.html?buildId=130&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/5935425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6068262", "body": "TeamCity MonoGame :: Develop (Win) [Build 185](http://teamcity.monogame.net/viewLog.html?buildId=475&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6068262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6068299", "body": "TeamCity MonoGame :: Develop (Win) [Build 185](http://teamcity.monogame.net/viewLog.html?buildId=475&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:13:44\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6068299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6076416", "body": "TeamCity MonoGame :: Develop (Win) [Build 186](http://teamcity.monogame.net/viewLog.html?buildId=477&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6076416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6076436", "body": "TeamCity MonoGame :: Develop (Win) [Build 186](http://teamcity.monogame.net/viewLog.html?buildId=477&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:37\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6076436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6077608", "body": "TeamCity MonoGame :: Develop (Win) [Build 187](http://teamcity.monogame.net/viewLog.html?buildId=479&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6077608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6077660", "body": "TeamCity MonoGame :: Develop (Win) [Build 187](http://teamcity.monogame.net/viewLog.html?buildId=479&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:06:20\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6077660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6077662", "body": "TeamCity MonoGame :: Develop (Win) [Build 188](http://teamcity.monogame.net/viewLog.html?buildId=481&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6077662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6077706", "body": "TeamCity MonoGame :: Develop (Win) [Build 188](http://teamcity.monogame.net/viewLog.html?buildId=481&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:53\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6077706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078314", "body": "TeamCity MonoGame :: Develop (Win) [Build 189](http://teamcity.monogame.net/viewLog.html?buildId=483&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078363", "body": "TeamCity MonoGame :: Develop (Win) [Build 189](http://teamcity.monogame.net/viewLog.html?buildId=483&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:59\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078708", "body": "TeamCity MonoGame :: Develop (Win) [Build 190](http://teamcity.monogame.net/viewLog.html?buildId=485&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078752", "body": "TeamCity MonoGame :: Develop (Win) [Build 190](http://teamcity.monogame.net/viewLog.html?buildId=485&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:44\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078867", "body": "TeamCity MonoGame :: Develop (Win) [Build 191](http://teamcity.monogame.net/viewLog.html?buildId=487&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078926", "body": "TeamCity MonoGame :: Develop (Win) [Build 191](http://teamcity.monogame.net/viewLog.html?buildId=487&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:43\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6078926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6079044", "body": "TeamCity MonoGame :: Develop (Win) [Build 192](http://teamcity.monogame.net/viewLog.html?buildId=489&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6079044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6079093", "body": "TeamCity MonoGame :: Develop (Win) [Build 192](http://teamcity.monogame.net/viewLog.html?buildId=489&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:52\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6079093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6079095", "body": "TeamCity MonoGame :: Develop (Win) [Build 193](http://teamcity.monogame.net/viewLog.html?buildId=491&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6079095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6079152", "body": "TeamCity MonoGame :: Develop (Win) [Build 193](http://teamcity.monogame.net/viewLog.html?buildId=491&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:45\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6079152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080342", "body": "TeamCity MonoGame :: Develop (Win) [Build 194](http://teamcity.monogame.net/viewLog.html?buildId=493&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080399", "body": "TeamCity MonoGame :: Develop (Win) [Build 194](http://teamcity.monogame.net/viewLog.html?buildId=493&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:57\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080433", "body": "TeamCity MonoGame :: Develop (Win) [Build 195](http://teamcity.monogame.net/viewLog.html?buildId=495&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080491", "body": "TeamCity MonoGame :: Develop (Win) [Build 195](http://teamcity.monogame.net/viewLog.html?buildId=495&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:45\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080925", "body": "TeamCity MonoGame :: Develop (Win) [Build 196](http://teamcity.monogame.net/viewLog.html?buildId=497&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080964", "body": "TeamCity MonoGame :: Develop (Win) [Build 196](http://teamcity.monogame.net/viewLog.html?buildId=497&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:52\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6080964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6081131", "body": "TeamCity MonoGame :: Develop (Win) [Build 197](http://teamcity.monogame.net/viewLog.html?buildId=499&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6081131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6081187", "body": "TeamCity MonoGame :: Develop (Win) [Build 197](http://teamcity.monogame.net/viewLog.html?buildId=499&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:47\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6081187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6085642", "body": "TeamCity MonoGame :: Develop (Win) [Build 198](http://teamcity.monogame.net/viewLog.html?buildId=501&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6085642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6085719", "body": "TeamCity MonoGame :: Develop (Win) [Build 198](http://teamcity.monogame.net/viewLog.html?buildId=501&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:40\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6085719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087093", "body": "TeamCity MonoGame :: Develop (Win) [Build 199](http://teamcity.monogame.net/viewLog.html?buildId=504&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087150", "body": "TeamCity MonoGame :: Develop (Win) [Build 199](http://teamcity.monogame.net/viewLog.html?buildId=504&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:26\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087152", "body": "TeamCity MonoGame :: Develop (Win) [Build 200](http://teamcity.monogame.net/viewLog.html?buildId=505&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087219", "body": "TeamCity MonoGame :: Develop (Win) [Build 200](http://teamcity.monogame.net/viewLog.html?buildId=505&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:53\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087221", "body": "TeamCity MonoGame :: Develop (Win) [Build 201](http://teamcity.monogame.net/viewLog.html?buildId=508&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087284", "body": "TeamCity MonoGame :: Develop (Win) [Build 201](http://teamcity.monogame.net/viewLog.html?buildId=508&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:00\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087287", "body": "TeamCity MonoGame :: Develop (Win) [Build 202](http://teamcity.monogame.net/viewLog.html?buildId=511&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087358", "body": "TeamCity MonoGame :: Develop (Win) [Build 202](http://teamcity.monogame.net/viewLog.html?buildId=511&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:52\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087360", "body": "TeamCity MonoGame :: Develop (Win) [Build 203](http://teamcity.monogame.net/viewLog.html?buildId=512&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087424", "body": "TeamCity MonoGame :: Develop (Win) [Build 203](http://teamcity.monogame.net/viewLog.html?buildId=512&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:52\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087426", "body": "TeamCity MonoGame :: Develop (Win) [Build 204](http://teamcity.monogame.net/viewLog.html?buildId=513&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087484", "body": "TeamCity MonoGame :: Develop (Win) [Build 204](http://teamcity.monogame.net/viewLog.html?buildId=513&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:53\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087486", "body": "TeamCity MonoGame :: Develop (Win) [Build 205](http://teamcity.monogame.net/viewLog.html?buildId=515&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087539", "body": "TeamCity MonoGame :: Develop (Win) [Build 205](http://teamcity.monogame.net/viewLog.html?buildId=515&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:49\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087807", "body": "TeamCity MonoGame :: Develop (Win) [Build 206](http://teamcity.monogame.net/viewLog.html?buildId=517&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087807/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087855", "body": "TeamCity MonoGame :: Develop (Win) [Build 206](http://teamcity.monogame.net/viewLog.html?buildId=517&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:55\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6087855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088729", "body": "TeamCity MonoGame :: Develop (Win) [Build 207](http://teamcity.monogame.net/viewLog.html?buildId=519&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088740", "body": "TeamCity MonoGame :: Develop (Win) [Build 207](http://teamcity.monogame.net/viewLog.html?buildId=519&buildTypeId=MonoGame_DevelopWin) outcome was **FAILURE**\nSummary: Exit code 1 (new) Build time: 00:00:51\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088851", "body": "TeamCity MonoGame :: Develop (Win) [Build 208](http://teamcity.monogame.net/viewLog.html?buildId=521&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088863", "body": "TeamCity MonoGame :: Develop (Win) [Build 208](http://teamcity.monogame.net/viewLog.html?buildId=521&buildTypeId=MonoGame_DevelopWin) outcome was **FAILURE**\nSummary: Exit code 1 Build time: 00:01:41\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088956", "body": "TeamCity MonoGame :: Develop (Win) [Build 209](http://teamcity.monogame.net/viewLog.html?buildId=523&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088964", "body": "TeamCity MonoGame :: Develop (Win) [Build 209](http://teamcity.monogame.net/viewLog.html?buildId=523&buildTypeId=MonoGame_DevelopWin) outcome was **FAILURE**\nSummary: Exit code 1 Build time: 00:02:20\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6088964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6089015", "body": "TeamCity MonoGame :: Develop (Win) [Build 210](http://teamcity.monogame.net/viewLog.html?buildId=525&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6089015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6089057", "body": "TeamCity MonoGame :: Develop (Win) [Build 210](http://teamcity.monogame.net/viewLog.html?buildId=525&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:07\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6089057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090277", "body": "TeamCity MonoGame :: Develop (Win) [Build 211](http://teamcity.monogame.net/viewLog.html?buildId=527&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090290", "body": "TeamCity MonoGame :: Develop (Win) [Build 211](http://teamcity.monogame.net/viewLog.html?buildId=527&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:01\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090405", "body": "TeamCity MonoGame :: Develop (Win) [Build 212](http://teamcity.monogame.net/viewLog.html?buildId=529&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090422", "body": "TeamCity MonoGame :: Develop (Win) [Build 212](http://teamcity.monogame.net/viewLog.html?buildId=529&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:51\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090476", "body": "TeamCity MonoGame :: Develop (Win) [Build 213](http://teamcity.monogame.net/viewLog.html?buildId=531&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090500", "body": "TeamCity MonoGame :: Develop (Win) [Build 213](http://teamcity.monogame.net/viewLog.html?buildId=531&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:44\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090678", "body": "TeamCity MonoGame :: Develop (Win) [Build 214](http://teamcity.monogame.net/viewLog.html?buildId=533&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090683", "body": "TeamCity MonoGame :: Develop (Win) [Build 214](http://teamcity.monogame.net/viewLog.html?buildId=533&buildTypeId=MonoGame_DevelopWin) outcome was **FAILURE**\nSummary: Exit code 1 (new) Build time: 00:00:40\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090733", "body": "TeamCity MonoGame :: Develop (Win) [Build 215](http://teamcity.monogame.net/viewLog.html?buildId=535&buildTypeId=MonoGame_DevelopWin) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090786", "body": "TeamCity MonoGame :: Develop (Win) [Build 215](http://teamcity.monogame.net/viewLog.html?buildId=535&buildTypeId=MonoGame_DevelopWin) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:54\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6090786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6092508", "body": "TeamCity MonoGame :: Develop (Win) [Build 216](http://teamcity.monogame.net/viewLog.html?buildId=537&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6092508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6092558", "body": "TeamCity MonoGame :: Develop (Win) [Build 216](http://teamcity.monogame.net/viewLog.html?buildId=537&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:06:09\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6092558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6092560", "body": "TeamCity MonoGame :: Develop (Win) [Build 217](http://teamcity.monogame.net/viewLog.html?buildId=539&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6092560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6092602", "body": "TeamCity MonoGame :: Develop (Win) [Build 217](http://teamcity.monogame.net/viewLog.html?buildId=539&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:52\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6092602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6093604", "body": "TeamCity MonoGame :: Develop (Win) [Build 218](http://teamcity.monogame.net/viewLog.html?buildId=541&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6093604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6093657", "body": "TeamCity MonoGame :: Develop (Win) [Build 218](http://teamcity.monogame.net/viewLog.html?buildId=541&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:21\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6093657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096298", "body": "TeamCity MonoGame :: Develop (Win) [Build 219](http://teamcity.monogame.net/viewLog.html?buildId=543&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096376", "body": "TeamCity MonoGame :: Develop (Win) [Build 219](http://teamcity.monogame.net/viewLog.html?buildId=543&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:49\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096866", "body": "TeamCity MonoGame :: Develop (Win) [Build 220](http://teamcity.monogame.net/viewLog.html?buildId=545&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096952", "body": "TeamCity MonoGame :: Develop (Win) [Build 220](http://teamcity.monogame.net/viewLog.html?buildId=545&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:46\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096974", "body": "TeamCity MonoGame :: Develop (Win) [Build 221](http://teamcity.monogame.net/viewLog.html?buildId=547&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6096974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6097049", "body": "TeamCity MonoGame :: Develop (Win) [Build 221](http://teamcity.monogame.net/viewLog.html?buildId=547&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:50\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6097049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6097480", "body": "TeamCity MonoGame :: Develop (Win) [Build 222](http://teamcity.monogame.net/viewLog.html?buildId=549&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6097480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6097495", "body": "TeamCity MonoGame :: Develop (Win) [Build 222](http://teamcity.monogame.net/viewLog.html?buildId=549&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **FAILURE**\nSummary: Exit code 1 (new) Build time: 00:01:23\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6097495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6100685", "body": "TeamCity MonoGame :: Develop (Win) [Build 223](http://teamcity.monogame.net/viewLog.html?buildId=551&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6100685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6100779", "body": "TeamCity MonoGame :: Develop (Win) [Build 223](http://teamcity.monogame.net/viewLog.html?buildId=551&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:29\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6100779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6102684", "body": "TeamCity MonoGame :: Develop (Win) [Build 224](http://teamcity.monogame.net/viewLog.html?buildId=553&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6102684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6102707", "body": "TeamCity MonoGame :: Develop (Win) [Build 224](http://teamcity.monogame.net/viewLog.html?buildId=553&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:54\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6102707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6102748", "body": "TeamCity MonoGame :: Develop (Win) [Build 225](http://teamcity.monogame.net/viewLog.html?buildId=555&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6102748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6102768", "body": "TeamCity MonoGame :: Develop (Win) [Build 225](http://teamcity.monogame.net/viewLog.html?buildId=555&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:00\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6102768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6104048", "body": "TeamCity MonoGame :: Develop (Win) [Build 226](http://teamcity.monogame.net/viewLog.html?buildId=557&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6104048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6104078", "body": "TeamCity MonoGame :: Develop (Win) [Build 226](http://teamcity.monogame.net/viewLog.html?buildId=557&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:31\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6104078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6104133", "body": "TeamCity MonoGame :: Develop (Win) [Build 227](http://teamcity.monogame.net/viewLog.html?buildId=559&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6104133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6104156", "body": "TeamCity MonoGame :: Develop (Win) [Build 227](http://teamcity.monogame.net/viewLog.html?buildId=559&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:52\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6104156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105400", "body": "TeamCity MonoGame :: Develop (Win) [Build 228](http://teamcity.monogame.net/viewLog.html?buildId=561&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105452", "body": "TeamCity MonoGame :: Develop (Win) [Build 228](http://teamcity.monogame.net/viewLog.html?buildId=561&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:25\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105453", "body": "TeamCity MonoGame :: Develop (Win) [Build 229](http://teamcity.monogame.net/viewLog.html?buildId=563&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105514", "body": "TeamCity MonoGame :: Develop (Win) [Build 229](http://teamcity.monogame.net/viewLog.html?buildId=563&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:05\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105515", "body": "TeamCity MonoGame :: Develop (Win) [Build 230](http://teamcity.monogame.net/viewLog.html?buildId=565&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105620", "body": "TeamCity MonoGame :: Develop (Win) [Build 230](http://teamcity.monogame.net/viewLog.html?buildId=565&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:12:04\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105659", "body": "TeamCity MonoGame :: Develop (Win) [Build 231](http://teamcity.monogame.net/viewLog.html?buildId=567&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105697", "body": "TeamCity MonoGame :: Develop (Win) [Build 231](http://teamcity.monogame.net/viewLog.html?buildId=567&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:50\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6105697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6106398", "body": "TeamCity MonoGame :: Develop (Win) [Build 232](http://teamcity.monogame.net/viewLog.html?buildId=569&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6106398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6106451", "body": "TeamCity MonoGame :: Develop (Win) [Build 232](http://teamcity.monogame.net/viewLog.html?buildId=569&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:54\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6106451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6112466", "body": "TeamCity MonoGame :: Develop (Win) [Build 233](http://teamcity.monogame.net/viewLog.html?buildId=571&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6112466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6112543", "body": "TeamCity MonoGame :: Develop (Win) [Build 233](http://teamcity.monogame.net/viewLog.html?buildId=571&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:53\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6112543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114175", "body": "TeamCity MonoGame :: Develop (Win) [Build 234](http://teamcity.monogame.net/viewLog.html?buildId=573&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114247", "body": "TeamCity MonoGame :: Develop (Win) [Build 234](http://teamcity.monogame.net/viewLog.html?buildId=573&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:25\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114436", "body": "TeamCity MonoGame :: Develop (Win) [Build 235](http://teamcity.monogame.net/viewLog.html?buildId=575&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114518", "body": "TeamCity MonoGame :: Develop (Win) [Build 235](http://teamcity.monogame.net/viewLog.html?buildId=575&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:50\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114519", "body": "TeamCity MonoGame :: Develop (Win) [Build 236](http://teamcity.monogame.net/viewLog.html?buildId=577&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114575", "body": "TeamCity MonoGame :: Develop (Win) [Build 236](http://teamcity.monogame.net/viewLog.html?buildId=577&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:46\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114710", "body": "TeamCity MonoGame :: Develop (Win) [Build 237](http://teamcity.monogame.net/viewLog.html?buildId=579&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114757", "body": "TeamCity MonoGame :: Develop (Win) [Build 237](http://teamcity.monogame.net/viewLog.html?buildId=579&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:07\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6114757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6115533", "body": "TeamCity MonoGame :: Develop (Win) [Build 238](http://teamcity.monogame.net/viewLog.html?buildId=581&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **FAILURE**\nSummary: Snapshot dependency failed: MonoGame :: Develop (Mac) Build time: 00:00:00\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6115533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116829", "body": "TeamCity MonoGame :: Develop (Win) [Build 239](http://teamcity.monogame.net/viewLog.html?buildId=583&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116862", "body": "TeamCity MonoGame :: Develop (Win) [Build 239](http://teamcity.monogame.net/viewLog.html?buildId=583&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **FAILURE**\nSummary: Exit code 1 (new) Build time: 00:02:40\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116918", "body": "TeamCity MonoGame :: Develop (Win) [Build 240](http://teamcity.monogame.net/viewLog.html?buildId=585&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116942", "body": "TeamCity MonoGame :: Develop (Win) [Build 240](http://teamcity.monogame.net/viewLog.html?buildId=585&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:06\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116985", "body": "TeamCity MonoGame :: Develop (Win) [Build 241](http://teamcity.monogame.net/viewLog.html?buildId=587&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6116985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117012", "body": "TeamCity MonoGame :: Develop (Win) [Build 241](http://teamcity.monogame.net/viewLog.html?buildId=587&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:50\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117528", "body": "TeamCity MonoGame :: Develop (Win) [Build 242](http://teamcity.monogame.net/viewLog.html?buildId=589&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117539", "body": "TeamCity MonoGame :: Develop (Win) [Build 242](http://teamcity.monogame.net/viewLog.html?buildId=589&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **FAILURE**\nSummary: Exit code 1 (new) Build time: 00:02:09\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117578", "body": "TeamCity MonoGame :: Develop (Win) [Build 243](http://teamcity.monogame.net/viewLog.html?buildId=591&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117590", "body": "TeamCity MonoGame :: Develop (Win) [Build 243](http://teamcity.monogame.net/viewLog.html?buildId=591&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **FAILURE**\nSummary: Exit code 1 Build time: 00:02:16\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117598", "body": "TeamCity MonoGame :: Develop (Win) [Build 244](http://teamcity.monogame.net/viewLog.html?buildId=593&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117612", "body": "TeamCity MonoGame :: Develop (Win) [Build 244](http://teamcity.monogame.net/viewLog.html?buildId=593&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **FAILURE**\nSummary: Exit code 1 Build time: 00:02:23\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117627", "body": "TeamCity MonoGame :: Develop (Win) [Build 245](http://teamcity.monogame.net/viewLog.html?buildId=595&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117644", "body": "TeamCity MonoGame :: Develop (Win) [Build 245](http://teamcity.monogame.net/viewLog.html?buildId=595&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **FAILURE**\nSummary: Exit code 1 Build time: 00:02:21\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117661", "body": "TeamCity MonoGame :: Develop (Win) [Build 246](http://teamcity.monogame.net/viewLog.html?buildId=597&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117682", "body": "TeamCity MonoGame :: Develop (Win) [Build 246](http://teamcity.monogame.net/viewLog.html?buildId=597&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:00\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117969", "body": "TeamCity MonoGame :: Develop (Win) [Build 247](http://teamcity.monogame.net/viewLog.html?buildId=599&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117988", "body": "TeamCity MonoGame :: Develop (Win) [Build 247](http://teamcity.monogame.net/viewLog.html?buildId=599&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:51\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6117988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118286", "body": "TeamCity MonoGame :: Develop (Win) [Build 248](http://teamcity.monogame.net/viewLog.html?buildId=601&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118311", "body": "TeamCity MonoGame :: Develop (Win) [Build 248](http://teamcity.monogame.net/viewLog.html?buildId=601&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:52\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118312", "body": "TeamCity MonoGame :: Develop (Win) [Build 249](http://teamcity.monogame.net/viewLog.html?buildId=603&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118344", "body": "TeamCity MonoGame :: Develop (Win) [Build 249](http://teamcity.monogame.net/viewLog.html?buildId=603&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:52\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118345", "body": "TeamCity MonoGame :: Develop (Win) [Build 250](http://teamcity.monogame.net/viewLog.html?buildId=605&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118375", "body": "TeamCity MonoGame :: Develop (Win) [Build 250](http://teamcity.monogame.net/viewLog.html?buildId=605&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:47\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118685", "body": "TeamCity MonoGame :: Develop (Win) [Build 251](http://teamcity.monogame.net/viewLog.html?buildId=607&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118724", "body": "TeamCity MonoGame :: Develop (Win) [Build 251](http://teamcity.monogame.net/viewLog.html?buildId=607&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:53\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6118724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119032", "body": "TeamCity MonoGame :: Develop (Win) [Build 252](http://teamcity.monogame.net/viewLog.html?buildId=609&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119074", "body": "TeamCity MonoGame :: Develop (Win) [Build 252](http://teamcity.monogame.net/viewLog.html?buildId=609&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:48\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119075", "body": "TeamCity MonoGame :: Develop (Win) [Build 253](http://teamcity.monogame.net/viewLog.html?buildId=611&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119127", "body": "TeamCity MonoGame :: Develop (Win) [Build 253](http://teamcity.monogame.net/viewLog.html?buildId=611&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:53\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119134", "body": "TeamCity MonoGame :: Develop (Win) [Build 254](http://teamcity.monogame.net/viewLog.html?buildId=613&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119186", "body": "TeamCity MonoGame :: Develop (Win) [Build 254](http://teamcity.monogame.net/viewLog.html?buildId=613&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:55\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6119186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6123984", "body": "TeamCity MonoGame :: Develop (Win) [Build 255](http://teamcity.monogame.net/viewLog.html?buildId=615&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6123984/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124054", "body": "TeamCity MonoGame :: Develop (Win) [Build 255](http://teamcity.monogame.net/viewLog.html?buildId=615&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:58\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124440", "body": "TeamCity MonoGame :: Develop (Win) [Build 256](http://teamcity.monogame.net/viewLog.html?buildId=617&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124440/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124503", "body": "TeamCity MonoGame :: Develop (Win) [Build 256](http://teamcity.monogame.net/viewLog.html?buildId=617&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:54\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124505", "body": "TeamCity MonoGame :: Develop (Win) [Build 257](http://teamcity.monogame.net/viewLog.html?buildId=619&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124553", "body": "TeamCity MonoGame :: Develop (Win) [Build 257](http://teamcity.monogame.net/viewLog.html?buildId=619&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:48\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6124553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6125402", "body": "TeamCity MonoGame :: Develop (Win) [Build 258](http://teamcity.monogame.net/viewLog.html?buildId=621&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6125402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6125460", "body": "TeamCity MonoGame :: Develop (Win) [Build 258](http://teamcity.monogame.net/viewLog.html?buildId=621&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:51\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6125460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6125688", "body": "TeamCity MonoGame :: Develop (Win) [Build 259](http://teamcity.monogame.net/viewLog.html?buildId=623&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6125688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6125739", "body": "TeamCity MonoGame :: Develop (Win) [Build 259](http://teamcity.monogame.net/viewLog.html?buildId=623&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:51\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6125739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6126647", "body": "TeamCity MonoGame :: Develop (Win) [Build 260](http://teamcity.monogame.net/viewLog.html?buildId=625&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6126647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6126693", "body": "TeamCity MonoGame :: Develop (Win) [Build 260](http://teamcity.monogame.net/viewLog.html?buildId=625&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:25\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6126693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6128783", "body": "TeamCity MonoGame :: Develop (Win) [Build 261](http://teamcity.monogame.net/viewLog.html?buildId=627&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6128783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6128805", "body": "TeamCity MonoGame :: Develop (Win) [Build 261](http://teamcity.monogame.net/viewLog.html?buildId=627&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:19\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6128805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6128858", "body": "TeamCity MonoGame :: Develop (Win) [Build 262](http://teamcity.monogame.net/viewLog.html?buildId=629&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6128858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6128875", "body": "TeamCity MonoGame :: Develop (Win) [Build 262](http://teamcity.monogame.net/viewLog.html?buildId=629&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:50\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6128875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6129699", "body": "TeamCity MonoGame :: Develop (Win) [Build 263](http://teamcity.monogame.net/viewLog.html?buildId=631&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6129699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6129710", "body": "TeamCity MonoGame :: Develop (Win) [Build 263](http://teamcity.monogame.net/viewLog.html?buildId=631&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:04:48\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6129710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6130657", "body": "TeamCity MonoGame :: Develop (Win) [Build 264](http://teamcity.monogame.net/viewLog.html?buildId=633&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6130657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6130661", "body": "TeamCity MonoGame :: Develop (Win) [Build 264](http://teamcity.monogame.net/viewLog.html?buildId=633&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **FAILURE**\nSummary: Exit code 1 (new) Build time: 00:01:46\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6130661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6130770", "body": "TeamCity MonoGame :: Develop (Win) [Build 265](http://teamcity.monogame.net/viewLog.html?buildId=635&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6130770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6130786", "body": "TeamCity MonoGame :: Develop (Win) [Build 265](http://teamcity.monogame.net/viewLog.html?buildId=635&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:10\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6130786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6131835", "body": "TeamCity MonoGame :: Develop (Win) [Build 266](http://teamcity.monogame.net/viewLog.html?buildId=637&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6131835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6131874", "body": "TeamCity MonoGame :: Develop (Win) [Build 266](http://teamcity.monogame.net/viewLog.html?buildId=637&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:24\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6131874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6132700", "body": "TeamCity MonoGame :: Develop (Win) [Build 267](http://teamcity.monogame.net/viewLog.html?buildId=639&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6132700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6132722", "body": "TeamCity MonoGame :: Develop (Win) [Build 267](http://teamcity.monogame.net/viewLog.html?buildId=639&buildTypeId=MonoGame_DevelopWin&guest=1) outcome was **SUCCESS**\nSummary: Running Build time: 00:05:17\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6132722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6132727", "body": "TeamCity MonoGame :: Develop (Win) [Build 268](http://teamcity.monogame.net/viewLog.html?buildId=641&buildTypeId=MonoGame_DevelopWin&guest=1) is now running\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/comments/6132727/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "KarimLUCCIN": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1410781", "body": "This should be really fixed some day ...\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1410781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jhlllnd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1473241", "body": "This line has been changed just a few days ago...\nhttps://github.com/mono/MonoGame/pull/696/files#L1R1003\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1473241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1474052", "body": "Oh sorry, I missed that.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1474052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1553431", "body": "#elif else\n\nShould be #else I think :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1553431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "liortal53": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1717163", "body": "I am not next to my laptop now, but aren't the  vector4 components already of a float type?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1717163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1718426", "body": "Yes looks fine.aren't there any tests to prove i didn't ruin anything ? :)\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/1718426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "picrap": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2545559", "body": "I just checked, and it doesn't work like that. Operator != can not apply to generics, so I'll need to dig a bit further.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2545559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2558503", "body": "To me this is another improvement, and I see two reasons not to hurry (the third being that I'm lazy :)):\n1. Due to sensors sensibility, the values are actually different each time (just make the test).\n2. The behavior until today was to always fire the event, and apparently there was not much complain about this.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2558503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "RayBatts": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2801904", "body": "What do you mean by safe?\n\nI'm going with a bit different of an approach in order to get this up and running as soon as possible.\n\nI'm trying to avoid manipulating image data directly and having to deal with different pixel formats at multiple parts in the pipeline. The goal is to do all of the work I can through the System.Drawing.Bitmap API, then convert/copy over the image data where it needs to go. That's the goal of ConvertBitmap() in GraphicsUtil.\n\nRight now It only supports 32bpp RGB and ARGB, but I'm working on a pull request to add supports for a couple more formats.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2801904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2937897", "body": "FrameInterval is the number of frames that have to pass before the selector's called again.\n\nIf the user's targeting 30 fps, the Math.Round() would result in a double of 2.0, which is then cast to an integer of 2.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2937897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2938311", "body": "I should clarify that with a comment, but the extra 1/60 is a bit of inline documentation. Trying to say that we're essentially dividing our target time by the  amount of time of time a frame is on iOS.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/2938311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213444", "body": "I don't think this should be part of the pull request. This PR is for the back button, and this exit function is added without being used. This is probably better off in another pull request.\n\nSecond off, this isn't really the way to exit an app as the MSDN page suggests: http://msdn.microsoft.com/en-us/library/windowsphone/develop/system.windows.application.terminate(v=vs.105).aspx\n\n> \"Otherwise, apps should not use this method to provide an \u201cExit\u201d mechanism. The Terminate method does not raise any application lifecycle events.\"\n\nI haven't looked into the 'proper' closing of an app on WP8, but if there's no better way around this then at the very least we need to make sure that our Exiting events are triggered before Terminate().\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213446", "body": "Why was this removed?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213799", "body": "It's a valid WP8 API but it skips the Game.OnExiting event.\n\nI don't know if this is just me, but it seems to leave my debugger hanging after the process exits as well.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3213799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3250924", "body": "It wouldn't be a bad idea to add the name of the file here.\n\n```\ncontext.Logger.LogImportantMessage(string.Format(\"Resized font texture {0} to {1}x{2}\", input.Name, resizedBitmap.Width, resizedBitmap.Height));\n```\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3250924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3253304", "body": "I checked it out the other day. On Windows Phone 7, calling Game.Exit() triggers Game.OnExiting.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3253304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mattzink": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3069207", "body": "It would be preferable to unroll this loop, as it is small and constant, for performance sake\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3069207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nfurtwangler": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3069349", "body": "Sure thing, I'll update it to be unrolled in an hour or so in case their is any other feedback.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3069349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "JamesLupiani": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3303723", "body": "@slygamer: I couldn't find what this explicit dictionary type reference was needed for, do you remember? It makes ParseXnb blow up, so I've removed it but we can add it back in or find another way.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3303723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "elisee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3309379", "body": "I moved the SupportRetina check below so that it keeps happening only on iOS, because UIScreen is (I think) part of MonoTouch (at the very least it wasn't defined on Mac) and we don't depend on MonoTouch on the Mac. Not sure if there's another way to check for retina support on Mac (or if we even want to).\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3309379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Chaosus": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3408022", "body": "@slygamer Yeah, it contains bug - Wrap(-125, -100, 100); != 75\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3408022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "nickdarnell": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3403077", "body": "How do I edit a pull request?\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3403077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "SamuelEnglard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3325844", "body": "Main reason for pulling it out into it's own method is for inheritors. Allows them to either \"patch in\" to when a TextInput Event is fired without messing with the code that fires it (or know what does for that matter) or allows the to fire the event themselves.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3325844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3325872", "body": "Again a case of \"for inheritors\". If they call this themselves but don't give an `TextInputEventArgs` then code that subscribes to the event could crash assuming (reasonably I believe) that they will be passed something not `null`.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3325872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326111", "body": "You are right on the \"patch in\" angle. For some reason thought I had made the method virtual when writing that. True the event is public but the first rule of events is that only \"their\" class can fire them, not even inheritors. I could easily see a game that allows some alternate character input system besides a keyboard that would want to fire this event too.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326289", "body": "Final Game consumer agreed but what about \"add in\" makers. For instance a developer making a add on to MG that allows text input via an game controller. The final game builder only has to accept text from `TextInput` and not care if the text came from the keyboard or from the game controller.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326342", "body": "It's cool. I forget it myself at times\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326410", "body": "I'm going this way because I'm working on one of sorts. Currently internal only, hoping to open source soon.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3326410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "zVolodymyr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3587906", "body": "I really don't like to use property if it generates new instance every call.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3587906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3588176", "body": "I mean - creates new instance of value. Method creates new instance of array every call. Properties looks like fields and people like to use it like fields. In other words, I don't like if obj.Property1 != obj.Property1\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3588176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3592529", "body": "I have spent a lot of time supporting component libraries, and know, that people don't read comments :) Also caching is not safe, somebody can change array. Need to use readonly collection. Using of methods it's not a big problem. \n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3592529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "kentcb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3594261", "body": "FWIW, the .NET framework design guidelines [recommend a method](http://msdn.microsoft.com/en-gb/library/ms229054.aspx) if returning an array.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3594261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "kg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3598100", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3598100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3685527", "body": "I never figured out why that was happening.\n", "reactions": {"url": "https://api.github.com/repos/MonoGame/MonoGame/pulls/comments/3685527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}