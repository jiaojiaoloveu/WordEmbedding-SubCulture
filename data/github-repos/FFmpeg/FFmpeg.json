{"_default": {"1": {"fhvwy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2e96f5278095d44f090a4d89507e62d27cccf3b9", "message": "v4l2_m2m: Fix integer overflow in timestamp handling"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bda5ad305e907d6e5eaa6abbb1b3bc1590ec20d8", "message": "v4l2_m2m: Fix free of the wrong pointer in an error path\n\nFixes CIDs #1427821 and #1427822."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a0c624e299730c8c5800375c2f5f3c6c200053ff", "message": "avcodec: v4l2_m2m: fix races around freeing data on close\n\nRefcount all of the context information. This also fixes a potential\nsegmentation fault when accessing freed memory  (buffer returned after\nthe codec has been closed).\n\nTested-by: Jorge Ramirez-Ortiz <jorge.ramirez.ortiz@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96cf0d8a9cf35f3c49860bf1c000c382dd661607", "message": "Merge commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8'\n\n* commit 'cbe28bc069dde1d53d937ee10700bb123279c7c8':\n  qsv: better to use alignment by 16 and HEVC 10b requires alignment by 32\n\nMerged-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3895fce26ec7f6d2b1642f96ecaddede6521228e", "message": "Merge commit '34c113335b53d83ed343de49741f0823aa1f8cc6'\n\n* commit '34c113335b53d83ed343de49741f0823aa1f8cc6':\n  Add support for H.264 and HEVC hardware encoding for AMD GPUs based on AMF SDK\n\nMost of this was already present from 9ea6607d294526688ab1b1342cb36ee159683e88,\nthis just applies some minor fixups and adds the general documentation.\n\nMerged-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/68de778ccc35bea885a989e47358089da006a8b6", "message": "Merge commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336'\n\n* commit '7b0b5bc810cdb9ef100492c9a9f2d30602c04336':\n  cmdutils: update copyright year to 2018\n\nThis commit is a noop, see bddf31ba7570325dd2c8d033eae3d0dd74127f96\n\nMerged-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/725ae0e2d0222f81b5cca3b0b226116ec6fd0494", "message": "Merge commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74'\n\n* commit '1efbbfedcaf4a3cecab980273ad809ba3ade2f74':\n  examples/qsvdec: do not set the deprecated field refcounted_frames\n\nMerged-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d204b7ff610cb8dac1116e7a4fd3068733cb5adf", "message": "Merge commit 'e23190269fb6e8217d080918893641ba3e0e3556'\n\n* commit 'e23190269fb6e8217d080918893641ba3e0e3556':\n  lavu/qsv: add log message for libmfx version\n\nMerged-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/526a87b47124bfd2d57901d1b9abd6d322eaf293", "message": "vf_program_opencl: Add missing error code returns\n\nFixes CID #1427285."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9b4611a1c1f2ac5d1bfd75f7e6e41aa0bc15ca39", "message": "vf_overlay_opencl: Don't leak output frame on error\n\nFixes CID #1423277."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/03c08d59fb2b998106829063b3840e63c2837923", "message": "doc/filters: Document OpenCL program filters\n\nInclude some example programs."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/dfdc14616112acd1586f1c5c709d3adeb60e0086", "message": "lavfi: Add filters to run arbitrary OpenCL programs"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/202b59cd3d0138921fc6fb6a940fd2a022e33b0a", "message": "lavfi/opencl: Use filter device if no input device is available\n\nThis allows implementing sources as well as filters."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e6a1dfc9ce81a443b16776a5fbd841284efa3613", "message": "mpeg4videodec: Fix unused variable warning\n\nvideo_format is not used."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jamrial": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/388a0f7869a852dec51482dc1802239f792775db", "message": "avcodec/mpeg12dec: fix preprocessor check for mpeg1_nvdec hwaccel\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2159d4bbc3e69d04242e87bac13ebea8b942d94d", "message": "avcodec/hevc_parser: use ff_hevc_uninit_parameter_sets()\n\nReviewed-by: Michael Niedermayer <michael@niedermayer.cc>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1f0cf1b2f4ef6304c343d53508193ac4b5d9c1d2", "message": "avcodec/hevcdec: use ff_hevc_uninit_parameter_sets()\n\nReviewed-by: Michael Niedermayer <michael@niedermayer.cc>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9462b2b8205397ea5972b2365c2e8db6872ef3e9", "message": "avcodec/hevc_ps: add a function to uninitialize parameter set buffers\n\nReviewed-by: Michael Niedermayer <michael@niedermayer.cc>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/fb3fd4d506238c7ef731a2c031c744abb1c54813", "message": "fate: update filter-acrossfade test reference file\n\n<jamrial> durandal_1707: 8088b5d69c broke the acrossfade test\n<@durandal_1707> jamrial: there was test?\n<jamrial> durandal_1707: fate-filter-acrossfade\n<@durandal_1707> what broke?\n<jamrial> what used to be one frame is now two\n<@durandal_1707> ahh, just update test\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4f6b34f1f803a103f321330bc5f9e4a01f788925", "message": "avformat: small AVFormatContext doxy cosmetics\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b5d3c08e3fbaa1fb6ba43532ce79904b0d5650b", "message": "avformat: small cosmetics after 6512ff72f9\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/02dba49dd3f02c0b2d4f4740597a3062d6c4981c", "message": "avformat/adtsenc: add adts_init()\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6e80079a2840ee407c5d126030eb1066bcbfdfc5", "message": "avcodec: increase AV_INPUT_BUFFER_PADDING_SIZE to 64\n\nAVX-512 support has been introduced, and even if no functions currently\nuse zmm registers (able to load as much as 64 bytes of consecutive data\nper instruction), they will be added eventually.\n\nReviewed-by: Rostislav Pehlivanov <atomnuker@gmail.com>\nTested-by: Michael Niedermayer <michael@niedermayer.cc>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ef21033c327a32a23c893d077148d4116c3cb0f7", "message": "avutil/mastering_display_metadata: fix copyright header wrongly formated as doxy\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/32f85056b3eae97ddd149d9312b48449f22cff51", "message": "configure: don't use SDL.h in check_func_headers when checking for SDL2\n\ncheck_func_headers() defines a main() function, which clashes with a\nredefinition done by said SDL header. Check for SDL_PollEvent using\nSDL_events.h only instead, where the redefinition doesn't happen.\n\nFixes a regression since d03c39b46b21c893d6549a532289b7fb9935b3fc.\n\nTested-by: RiCON\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ded409b7c9c242df5954f582f7d8b180f9291793", "message": "avresample: remove deprecated attribute from the AVAudioResampleContext struct\n\nHaving all the public functions marked as deprecated is enough.\n\nThis gets rid of a warning spam when compiling any file including\nlibavresample/avresample.h even when avresample is not enabled, like\nit's the case with fftools/cmdutils.c\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9d68c0191cdd570ece2c4d006b20230ac08085fe", "message": "fate/filter-video: fix 12 bit framerate filter tests on big endian targets\n\nTested-by: Michael Niedermayer <michael@niedermayer.cc>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9e68f472ec5d07538ea2f86c66f6ff534583028c", "message": "configure: remove check for SA_RESTART\n\nIt's not used anymore.\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6ec91319204bd9836eb095a9da3150afebebf228", "message": "fate: remove ffm reference files\n\nMissed in c17f4761443b471f47fa8f0a5bcff078cdff9479 and\n8bbd8c8d52dbcb15773717d3512f8fb68e860bf2\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8bbd8c8d52dbcb15773717d3512f8fb68e860bf2", "message": "fate: remove missing references to ffm\n\nMissed in c17f4761443b471f47fa8f0a5bcff078cdff9479.\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b2c42fc6dc3502a8b6cae441c54d898972a51cff", "message": "avfilter: deprecate avfilter_link_get_channels()\n\nReviewed-by: Nicolas George <george@nsup.org>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/da5b05c8335d2c29355b95257f466211d04ab81d", "message": "Revert \"avfilter: deprecate avfilter_link_get_channels()\"\n\nThis reverts commit 798dcf2432999f449c76c0e0fe2d7a4ee5eabbc2.\n\nIt was applied by accident before it could be reviewed."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/503164b54ba2f4fcc3ba829ee4ece43333998b15", "message": "Revert \"tools/uncoded_frame: remove usage of avfilter_link_get_channels()\"\n\nThis reverts commit 01c21653eee53a353ae887a47cd2b48165902383.\n\nIt was applied by accident before it could be reviewed."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/077fe9eb0679ccba53b1814ac5e687ea3eb2a3c1", "message": "doc/libav-merge: remove line about libavutil atomics API\n\nSee 89b84cb18b54d3af281643bcad8bba365a702e96.\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01c21653eee53a353ae887a47cd2b48165902383", "message": "tools/uncoded_frame: remove usage of avfilter_link_get_channels()\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/798dcf2432999f449c76c0e0fe2d7a4ee5eabbc2", "message": "avfilter: deprecate avfilter_link_get_channels()\n\nAnd move the channels field to the public section of the struct.\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b9ad04b19c0c7244cc3788f3fa45e9fbe0b620a8", "message": "fate: add PERSIST_RPARAM_A_RExt_Sony_3 hevc conformance test\n\nThe PERSIST_RPARAM_A_RExt_Sony_1 bitstream has an out-of-range value\nand has therefore been superseded.\nIt is otherwise identical, and decodes the same.\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/dcbf034a0fd28b0b894d275c86ebcdb2e766a804", "message": "avcodec/error_resilience: remove unused header\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/167e659b289f6c2236c905ee7b8c50857457c858", "message": "avfilter: use a mutex instead of atomics in avfilter_register()\n\nReviewed-by: wm4 <nfxjfg@googlemail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57960b1f2800e59a46de2b03f7b37ef6ef1c1e52", "message": "avformat: use mutexes instead of atomics in av_register_{input,output}_format()\n\nReviewed-by: wm4 <nfxjfg@googlemail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9ed4ebc530dde681943389b1f97db90b546ad38d", "message": "avcodec/util: use a mutex instead of atomics in avcodec_register()\n\nReviewed-by: wm4 <nfxjfg@googlemail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d36335bda5e5eff317240c098337cbfc57906897", "message": "avcodec/parser: use a mutex instead of atomics in av_register_codec_parser()\n\nReviewed-by: Michael Niedermayer <michael@niedermayer.cc>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8d9c9775b248b0a0f43bd96a242b5311fcc28b72", "message": "avutil/log: use thread wrappers for the locking functionality\n\nw32threads and os2threads both support static mutex initialization now,\nso don't limit it to pthreads only.\n\nReviewed-by: wm4 <nfxjfg@googlemail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/414a49d6710d90c0943c152a8d7bd521e1627125", "message": "ffmpeg: use thread wrappers for the thread message functionality\n\nReviewed-by: Michael Niedermayer <michael@niedermayer.cc>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b4eeffffc8933f04d3a951577b9b8e0b128ef580", "message": "configure: update minimum required version of libvmaf\n\nAt least version 0.6.2 is needed since commit\ndf3222d4bb18cbceda443def17b1b29067ed6e3f.\n\nReviewed-by: Ronald S. Bultje <rsbultje@gmail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2f96190732d15510ba29471fa45d66841c0c3df1", "message": "Merge commit 'c6558e8840fbb2386bf8742e4d68dd6e067d262e'\n\n* commit 'c6558e8840fbb2386bf8742e4d68dd6e067d262e':\n  x264: Support version 153\n\nSee\n2a111c99a60fdf4fe5eea2b073901630190c6c93\n7e60c74329353db28db00552028bc88cd2a52346\n\nMerged-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/aa6f43c2e959a960792f76d006b8699d733f258f", "message": "Merge commit '2beba58e0e4bda688bf96e12413231607ceafdd4'\n\n* commit '2beba58e0e4bda688bf96e12413231607ceafdd4':\n  mmaldec: Fix compilation after 2fcb0090\n\nThis commit is a noop, see 758fbc54fef2f31957b5c5f22e05e5fd9b04f631\n\nMerged-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/fa2d28567e3514323c440c4b7935a3d711eded8d", "message": "Merge commit 'ddea22a684611c1fec9d8b5c70d835e983a9252e'\n\n* commit 'ddea22a684611c1fec9d8b5c70d835e983a9252e':\n  avconv: Use codec hardware config to configure hwaccels\n  lavc: Mark all AVHWAccel structures as const\n  lavc: Delete all fake hwaccels\n  lavc: Remove register mechanism for hwaccels\n  lavc: Deprecate av_hwaccel_next() and av_register_hwaccel()\n  lavc: Use hardware config information in ff_get_format()\n  webp: Fix alpha initialisation\n  lavc: Add hardware config metadata for decoders supporting hardware output\n  lavc: Add codec metadata to indicate hardware support\n\nThis commit is a noop, see\n24cc0a53e99e281b0ff502e82e7cf857111eca3f\n758fbc54fef2f31957b5c5f22e05e5fd9b04f631\n9f00fa536938130e3c7ad2640a61795770d419a1\n67e81d79ccfc6713c797ddb19a3b8aea476c947b\n3536a3efb9fde88d34d526a51b1080247326cd6e\n9bd326ac465db2eee47301a1225d55dffd7bfe93\nda4e02b1961572c15d7cd6a701d153155f196477\n3a71bcc213f223428622ac3750fe1a923f2f3ab4\nb0cd14fb1dab4b044f7fe6b53ac635409849de77\n\nMerged-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/efb63e4316c20093d03e51659a60804382eb867c", "message": "configure: add missing avcodec dep to avfilter for de/convolve filters"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7e60c74329353db28db00552028bc88cd2a52346", "message": "avcodec/libx264: set supported pix_fmts at runtime rather than build time\n\nThis partially reverts a change in behavior introduced in 2a111c99a60fdf4fe5eea2b073901630190c6c93.\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2a111c99a60fdf4fe5eea2b073901630190c6c93", "message": "avcodec/libx264: fix compilation with x264 builds >= 153\n\nx264 now supports multibitdepth builds, with a slightly changed API to\nrequest bitdepth during initialization.\n\nReviewed-by: Ricardo Constantino <wiiaboo@gmail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/89f704cabab446afc8ba6ecea76714a51b1df32b", "message": "avcodec/libx264: use the pixfmt descriptor to check for high bit depths\n\nThe x264_bit_depth constant has been removed in newer x264 builds.\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/613f789c19153edadb1fcc11866192f6b296ee58", "message": "w32pthreads: remove some remaining superfluous checks\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/90d216cb90398ffb92e9e8361656ad619a985b64", "message": "x86inc: set the correct amount of simd regs in x86_64 when avx512 is enabled but not used\n\nFixes compilation of libavresample/x86/audio_mix.asm\n\nReviewed-by: Gramner\nSigned-off-by: James Almer <jamrial@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mypopydev": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9bba10c174c893b08b036898a522ed6dad1d3660", "message": "lavfi: add denoise and sharpness VAAPI video filters.\n\nMost code between them is common, so put them in a new file for\nmiscellaneous VAAPI filters.\n\nSigned-off-by: Yun Zhou <yunx.z.zhou@intel.com>\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/fcf5eae4bf24dac897da34b95cfe23634b9ac5fa", "message": "lavfi: add ProcAmp (color balance) VAAPI video filter.\n\nAdd ProcAmp(color balance) vaapi video filter, use the option\nlike -vf \"procamp_vaapi=b=10:h=120:c=2.8:s=3.7\" to set\nbrightness/hue/contrast/saturation.\n\nSigned-off-by: Yun Zhou <yunx.z.zhou@intel.com>\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/92704c480e811e0bd2a605173559d2baa974119f", "message": "lavfi: use common VAAPI VPP infrastructure for vf_deinterlace_vaapi.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/19214f005140b0ee7f706509bd3fab47f4af9b90", "message": "lavfi: use common VAAPI VPP infrastructure for vf_scale_vaapi.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/dfdeed5a2c8f432d6c5eda1a3a6a1f333f3d4604", "message": "lavfi: VAAPI VPP common infrastructure.\n\nRe-work the VAAPI common infrastructure to avoid code duplication\nbetween filters.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Mark Thompson <sw@jkqxz.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/383804edd812410219a097e2bf3efac8a8b4562a", "message": "lavfi/deinterlace_vaapi: fix can't show full option information.\n\nuse ffmpeg -h filter=deinterlace_vaapi can't get full help information,\nthe root cause is not setting the flags fileld in options.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a919ab853efcecf89516e703df8018d0649e1143", "message": "lavc/snow_dwt: add struct MpegEncContext to fix headers check.\n\nadd missing struct MpegEncContext, use make checkheaders\nfound this warning.\n\nSigned-off-by: Jun Zhao <jun.zhao@intel.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9b955eece610f7f8b4aa2096b4e0ca738e21edc4", "message": "examples/vaapi_encode: Remove redundancy check when free context.\n\navcodec_free_context have handle NULL pointer case, so caller doesn't\nneed to check the NULL before call this function.\n\nSigne-off-by: Jun Zhao <jun.zhao@intel.com>\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kccpac": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/78e884f3fb1d0471dbe2c89fec0d0f274f7c8350", "message": "libavformat/dashdec: Fix for ticket 6856 (filename limited to 1024)"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7a63da891023767824af75ff1c9fe681c156ac19", "message": "libavformat/dashdec: Fix for ticket 6658 (Dash demuxer segfault)\n\n1 Add function 'resolve_content_path' to propagate the baseURL from\nupper level nodes.\n * if no baseURL is available, the path of mpd file will be set as the baseURL.\n2 Remove checking for newly established connection.\n3 Establish the communication protocol in each connection rather than\n applying one protocol to all connection."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8db4ef3e6d9377d131e7051dcebf41fa6cc9ac81", "message": "avformat/dashdec.c: Download dash content with byte range info"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "redmcg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1f48c5c0671bb4f39c9dc3ec44c727f1680547b3", "message": "dashdec: Only free url string if being reused\n\nIf no representation bandwidth value is set, the url value returned\nby get_content_url is corrupt (as it has been freed).\nThis change ensures the url string is not freed unless it is about\nto be reused\nChanges since v1:\n 1 removed the unneeded 'if' statement (as pointed out by Michael Niedermayer\n 2 added comment to make it clear why the av_free was required\nSigned-off-by: Brendan McGrath <redmcg@redmandi.dyndns.org>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2472dbc7a770a908a2f511ec337ec392ca3e3afa", "message": "avformat/hlsenc: Check that data is set\n\nIf codecpar->extradata is not set (for example, when the stream goes\nthrough the 'tee' muxer), then a segfault occurs.\nThis patch ensures the data variable is not null before attempting\nto access it\nBefore the var_stream_map option was available - I was using the tee\nmuxer to create each resolution as an individual stream.\nWhen running this configuration after the most recent hlsenc change\nI hit a segfault\nThe most simple command which recreates the segfault is:\nffmpeg -i in.ts -map 0:a -map 0:v -c:a aac -c:v h264 -f tee [select=\\'a,v\\':f=hls]tv_hls_hd.m3u8\n\nSigned-off-by: Brendan McGrath <redmcg@redmandi.dyndns.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sfan5": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/777d6c677b1d70e9267c5e31c2c2473fa064076b", "message": "dashdec: Make use of frame rate specified in Representation\n\nIf the manifest provides this, setting r_frame_rate\navoids warnings regarding frame rate estimation."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57dbabd9c13b9770d2447a2168a1acccd7296827", "message": "dashdec: Support SegmentTemplate inside Period\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01d74c405564bb4846bf894bb928ae542273cfe8", "message": "dashdec: Avoid trying to read any segments beyond the last\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/74b143d81fa38cd4f05a0db889a19a2cb7ff226c", "message": "dashdec: Correct seeking behaviour\n\ndash_read_seek() is called only once to issue a seek\nof *all* streams to the specified timestamp. But to\navoid reopening each stream, do a \"dry run\" for streams\nthat are in a discarded state.\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bb0cc2e7bd6d6cc79413ed898e405c1b11c47759", "message": "dashdec: Search for segment timeline inside AdaptionSets too"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94cc16499ff1309386ca1d77aac0627e16ffa917", "message": "dashdec: Support for multiple video/audio streams\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/66e551eafb8d202f37ba5a2bbe03741966a9e241", "message": "dashdec: Expose bandwidth and representation ID as metadata\n\nThe primary goal was making it viable to play YouTube/Vimeo/... videos\nusing the native demuxer, since mpv currently uses a workaround in form\nof Edit Decision Lists (EDL).\n\nImplemented features:\n\n1 Exposing id / bitrate as stream metadata (similar to the HLS demuxer)\n2 Support for multiple video and audio streams\n3 A few minor parts of the specification that are in use at YouTube\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Gramner": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6f62b0bd4ff2bd4333d899b697f82643d14ff560", "message": "x86inc: Drop cpuflags_slowctz"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/eb5f063e7ccc93062a70faac2402a533bb9669fd", "message": "x86inc: Correctly set mmreg variables"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6b6edd121699a87c17bd5eca9e94cdd125088c0e", "message": "x86inc: Support creating global symbols from local labels\n\nOn ELF platforms such symbols needs to be flagged as functions with the\ncorrect visibility to please certain linkers in some scenarios."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9e4b3675f226238ae132cada2bb82bcb00110aa6", "message": "x86inc: Use .rdata instead of .rodata on Windows\n\nThe standard section for read-only data on Windows is .rdata. Nasm will\nflag non-standard sections as executable by default which isn't ideal."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3a02cbe3faccad9e346d63cf40c009e664657304", "message": "x86inc: Enable AVX emulation for floating-point pseudo-instructions\n\nThere are 32 pseudo-instructions for each floating-point comparison\ninstruction, but only 8 of them are actually valid in legacy-encoded mode.\nThe remaining 24 requires the use of VEX-encoded (v-prefixed) instructions\nand can therefore be disregarded for this purpose."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/f7197f68dc61753be67ff68b27bbd3b15fe43da6", "message": "x86inc: AVX-512 support\n\nAVX-512 consists of a plethora of different extensions, but in order to keep\nthings a bit more manageable we group together the following extensions\nunder a single baseline cpu flag which should cover SKL-X and future CPUs:\n * AVX-512 Foundation (F)\n * AVX-512 Conflict Detection Instructions (CD)\n * AVX-512 Byte and Word Instructions (BW)\n * AVX-512 Doubleword and Quadword Instructions (DQ)\n * AVX-512 Vector Length Extensions (VL)\n\nOn x86-64 AVX-512 provides 16 additional vector registers, prefer using\nthose over existing ones since it allows us to avoid using `vzeroupper`\nunless more than 16 vector registers are required. They also happen to\nbe volatile on Windows which means that we don't need to save and restore\nexisting xmm register contents unless more than 22 vector registers are\nrequired.\n\nBig thanks to Intel for their support."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dheitmueller": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b5b48685043e4761335c4ab7086eba3b24a9c03d", "message": "avdevice/decklink: Fix compilation of module on OSX\n\nClang applies the missing-prototypes warning on C++ files, whereas\ngcc only applies it to C.  As a result, the decklink_common.cpp file\nfails to build because of missing prototypes in DecklinkDispatch.cpp\n(which is #included by decklink_common.cpp).\n\nWe don't want to change the actual Blackmagic SDK sources, so\nsuppress the warning just for that one #include.\n\nSigned-off-by: Devin Heitmueller <dheitmueller@ltnglobal.com>\nSigned-off-by: Marton Balint <cus@passwd.hu>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/5409f065f2c48ad9c4baf787d08384176cbc62a4", "message": "avdevice/decklink: Suppress warning about misuse of struct instead of class\n\nWhen building with Clang, the following warning is shown:\n\nwarning: struct 'IDeckLinkVideoFrame' was previously declared as a\nclass [-Wmismatched-tags]\n\nThe function incorrectly casts IDeckLinkVideoFrame as a struct\ninstead of a class pointer.\n\nSigned-off-by: Devin Heitmueller <dheitmueller@ltnglobal.com>\nSigned-off-by: Marton Balint <cus@passwd.hu>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cus": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e3acba0d5d7b5b35b779b25ec3a76a4d80a405ea", "message": "avfilter/formats: remove support for deprecated channel count specification\n\nSigned-off-by: Marton Balint <cus@passwd.hu>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/0c31a3876d9a522add43ab62a9bcd3d857b28436", "message": "avfilter/vf_framerate: simplify filter\n\nThe framerate filter was quite convoluted with some filter_frame /\nrequest_frame logic bugs. It seemed easier to rewrite the whole filter_frame /\nrequest_frame part and also the frame interpolation ratio calculation part in\none step.\n\nNotable changes:\n- The filter now only stores 2 frames instead of 3\n- filter_frame outputs all the frames it can to be able to handle consecutive\n  filter_frame calls which previously caused early drops of buffered frames.\n- because of this, request_frame is largely simplified and it only outputs\n  frames on flush. Previously consecuitve request_frame calls could cause the\n  filter to think it is in flush mode filling its buffer with the same frames\n  causing a \"ghost\" effect on the output.\n- PTS discontinuities are handled better\n- frames with unknown PTS values are now dropped\n\nFixes ticket #4870.\nProbably fixes ticket #5493.\n\nSigned-off-by: Marton Balint <cus@passwd.hu>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/f528c49c7cd10bfb7f639c467e11bb624be71eef", "message": "avfilter/vf_framerate: calculate interpolation as integer\n\nIt was truncated to int later on anyway. Fate test changes are due to rounding\ninstead of truncation.\n\nFixes fate test failures on x86-32 (gcc 4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.1))\nafter 090b740680f91e0f2bf07423c36df7166740e8f6.\n\nSigned-off-by: Marton Balint <cus@passwd.hu>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e403e4bdbea08af0c4a068eb560b577d1b64cf7a", "message": "avfilter/vf_framerate: fix scene score with negative linesize\n\nAlso, do not overread input if linesize > width, or linesize is not divisible\nby 8, and use the proper rounded width/height for MAFD calculation.\n\nSigned-off-by: Marton Balint <cus@passwd.hu>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c6a65ed67088fd61017f14691b5fcecd133d9eeb", "message": "avfilter/vf_framerate: do not calculate scene change score multiple times for the same frame\n\nThis speeds up the filter, and also fixes scene change detection score which is\nreduced based on the difference of the current MAFD to the preivous MAFD.\nObviously if we compare two frames twice, the difference will be 0...\n\nSigned-off-by: Marton Balint <cus@passwd.hu>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1113a83ccb6bb30e3ad865956fe9eed0d650394", "message": "avfilter/vf_framerate: fix scene change detection score\n\n- normalize score to [0..100] instead of [0..85]\n- change the default score to 8.2 to roughly keep existing behaviour\n- take into account bit depth\n- do not truncate to integer\n\nSigned-off-by: Marton Balint <cus@passwd.hu>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/be15304ee610252636120f5e09fad4b015b34a31", "message": "avfilter/vf_framerate: factorize get_scene_score\n\nSigned-off-by: Marton Balint <cus@passwd.hu>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rcombs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/381a4820c64ba2d1b3ddc3a50147961f1d8c5848", "message": "lavfi/vf_scale_vaapi: set output SAR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1eb7c1d49d67fe0f21c71fb87d6c1fa8542f8cef", "message": "lavc/libx265: support all color parameters that x265 does"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "richardpl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8088b5d69c51b9329ccbc6d1125cf55c54ff6374", "message": "avfilter/af_afade: acrossfade: switch to activate\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6cc44c058396c51a52e868c4293692b43047e8f4", "message": "doc/filters: fix error in aiir options names\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/de8a1d8d4d0bbcb4c8500965ea8611bf754c4321", "message": "avfilter/af_aiir: add polar zeros/poles format variant\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/de5b12c93f85098407e9a5c59806c5309e7ea13b", "message": "avfilter/af_aiir: unbreak clipping detection\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ea25b7b41cb121adaa2234fe7511d2f2d98dd1e6", "message": "doc/filters: fix examples for aiir filter\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3c29f68b4db316c5d2b126619220cfa4255eacd6", "message": "avfilter/af_aiir: do not leak memory on failure in convert_zp2tf()\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/16ba6a8ad14183d2f8947e58a8cb9bae519bc430", "message": "avformat/wavdec: make fact chunk parsing for w64 more robust\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d38a223943d12c603c87ce806023ab4f4c0769c9", "message": "doc/filters: update aiir filter documentation\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e9edd61965da9d1b907fa2685fa5caec595ad687", "message": "avfilter/af_aiir: refactor code so it uses IIRChannel struct\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/21c99f4b40de07c2390803d47f4dd247175e08a3", "message": "avfilter/af_aiir: make default processing to serially cascaded\n\nAlso add several helpfull log messages.\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d9a3074b93aca99fa223deab641af90e962d5daf", "message": "avfilter/af_aiir: add slice threading support\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7add1ca2b5afb1ef85359ff481475c518456a8c8", "message": "avfilter/af_aiir: add cascaded biquads support\n\nAlso add precision option.\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3f234a0b22bc19c45bb5b6ed3e663d081a0ea1ae", "message": "avfilter/af_aiir: do not forget to free gains too\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/205046420d5a4d389adb705538df3d6158be1fdb", "message": "avfilter/af_aiir: fix typo which may cause overread\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2d3df8e2e9e60829c6cd392e334bf0302b8b59bb", "message": "avfilter/af_aiir: rename options, provide gains in separate option\n\nThis way it can be also used for other format.\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6c65de3db06c5379f2ca9173175bfb5f1553518b", "message": "avfilter/af_aiir: add support for alternative coefficients format\n\nSupport for zeros/poles syntax on Z-plane.\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/50b3cd22dd70658b39abd0ced31b495d4d0a4b1b", "message": "avfilter/av_biquads: scale a0 too\n\nFixes bug when using commands to alter coefficients.\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/52c959a2376614e4c9089145b8ee69334b663257", "message": "avfilter/af_aiir: do not crash with invalid options\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7bb1be9af0ea41d6f342655e1d15e30f662fe0f3", "message": "avfilter: add arbitrary audio IIR filter\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/89bbf5c7ec18a3dff2e2505883a662d182ca6c3a", "message": "avfilter: add hilbert source FIR filter\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/88cbd25b193dddb852bc1921b733c5dde5fee2fe", "message": "avfilter: pass outlink to ff_get_audio_buffer()\n\nThis is more correct.\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/09b24a807ad23b4fec25049775075cc63c0c1fa3", "message": "avfilter: add entropy filter\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/57d0c24132c544441266b3f561d9af15d4f8cf42", "message": "avcodec/utvideoenc: switch to planar RGB formats\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/92b32664cdc064523c60ddba5ed139855e08470c", "message": "avcodec/utvideodec: add support for UMH2, UMY2, UMH4, UMY4, UMRA, UMRG\n\nThese are new modes which are supposed to be more SIMD friendly.\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9f7dbaad7e36e11237ab76ed5e1932af7dfd2df2", "message": "avfilter/af_crystalizer: use outlink instead of inlink\n\nDoesn't change anything but is more correct.\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/f3552c3b9d517e278ec45d5e2bd53bf3e7dc754b", "message": "avfilter/af_afir: rework FIR gain measurement\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/aff167847754d61987703ebaa0e461612e72a858", "message": "configure: note (de)convolve filter dependency\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8c9a91ac82b9be729fc37d7bdc69608b3c70a5aa", "message": "avfilter: add deconvolve filter\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/87f148d526348a591716c66c40b3c294880ffc63", "message": "avfilter/vf_convolve: remove padding, its unused and not needed\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/caacbfa773fc1cc6dbeb4a47e0a5a0616fa09549", "message": "avfilter/vf_convolve: cosmetics\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e712d301736106002264d631cff925a92dfe891d", "message": "avfilter/vf_convolve: add threading for complex multiplication\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c59e49f9b2f30184e6d74255f3c1b2a1a89c6520", "message": "avfilter/vf_convolve: implement slice threading\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/f9f1b2a9274f1c58e1695fcf584646e2c6e9f756", "message": "avfilter/vf_convolve: split input/output operations from fft\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/86e3eebfb763855e9be873cc71b8569f6dd2b52f", "message": "avfilter/vf_convolve: use shorter variants for pointers\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6608f51b2d5a979b59d0dcc6a06629a0f8bd81", "message": "avfilter/vf_convolve: clear coefficients only when needed\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/5533cbfc84ea120f35cc0fd62bc58fcb2cd3fbfc", "message": "avfilter/vf_convolve: fix various issues\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/175122fcd5e6116a11203a938680de0dd4fd5747", "message": "avfilter/vf_convolve: fix convolution of borders\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b5958ff82eedc8112d28b9d8c5aaee6b3329fa81", "message": "avfilter/vf_convolve: unbreak non-power of 2 width&height filtering\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b943bc343de0aba21a06447cef695b42f5db102d", "message": "avfilter/vf_fftfilt: support >8 bit depth formats\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/f6608f47255306c92c5be324c46af3ba0c45cbd8", "message": "avfilter/vf_aspect: change outlink sample aspect ratio instead of inlink\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4754d70a23255bb378975258eff296d9bdebb687", "message": "avfilter/video: pick sar from link\n\nIt should not be needed for each filter that sets sample aspect ratio\nto set it explicitly also for each and every frame, instead that is\nautomatically done in get_buffer call.\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d2a2bc9a9f305008e417d72432322fcf48400b33", "message": "avfilter/vf_lut: add support for gray formats\n\nSigned-off-by: Paul B Mahol <onemda@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836", "body": "It is possible, its just I did not yet found such files.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3751836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958", "body": "I was not talking about SMPTE 302M files. It's irrelevant if bits per sample can be set via command line, it just number that is reported by decoder/containers.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3755958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "GyanD": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e1e89c0695b430ca1f0f869ac8a2b6b46be9e2fa", "message": "avfilter/vidstab: check bytesPerPixel only for packed formats.\n\nlibvidstab introduced this variable only for packed formats but in\nvf_vidstab*.c, it's checked for all inputs. So the filter errors out for YUV422/444P streams.\n\nFixes #6736.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/96f94624e0a1a91134bd8e1e3127080b81716f6f", "message": "avformat/adtsenc: allow only AAC streams\n\nThe ADTS muxer will silently (attempt to) mux any audio stream passed to it.\nPatch adds a codec check.\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wm4": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/27b9f82e2c5dca3ad642ed13c2360032a17687ec", "message": "hwcontext_d3d11va: implement av_hwdevice_get_hwframe_constraints()\n\nD3D11 has rather fine grained per format capabilities for different uses\nthat can be queried at runtime. Since we don't know what the user wants\nto do with the formats when av_hwdevice_get_hwframe_constraints() is\ncalled, we simply return all formats that have the most basic support."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631c56a8e46dea41585f3e7b3ef9c52b49faa385", "message": "avformat: make avformat_network_init() explicitly optional\n\nIt was sort of optional before - if you didn't call it, networking was\ninitialized on demand, and an ugly warning was logged. Also, the doxygen\ncomments threatened that it would be made strictly required one day.\n\nMake it explicitly optional. I would prefer to deprecate it fully, but\nthere might still be legitimate reasons to use this. But the average\nuser won't need it.\n\nThis is needed only for two reasons: to initialize TLS libraries like\nOpenSSL and GnuTLS, and winsock.\n\nOpenSSL and GnuTLS were already silently initialized on demand if the\nglobal network init function was not called. They also have various\nthread-safety acrobatics, which make concurrent initialization within\nlibavformat safe. In addition, the libraries are moving towards making\ntheir global init functions safe, which removes all need for central\nglobal init. In particular, GnuTLS 3.5.16 and OpenSSL 1.1.0g have been\nfound to have safe init functions. In all cases, they use internal\nreference counters to avoid that the global uninit functions interfere\nwith concurrent uses of the library by other API users who called global\ninit.\n\nwinsock should be thread-safe as well, and maintains an internal\nreference counter as well.\n\nSince we still support ancient TLS libraries, which do not have this\nfixed, and since it's unknown whether winsock and GnuTLS\nreinitialization is costly in any way, don't deprecate the libavformat\nfunctions yet."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6512ff72f9cc058e27646604caeacc4ef0dbd93e", "message": "avformat: deprecate another ffserver API leftover"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbbb2067341d7c2d98f560f81c6fb103af33a490", "message": "hwcontext_vdpau: implement av_hwdevice_get_hwframe_constraints()\n\nIn addition, this does not allow creating frames contexts with sw_format\nfor which no known transfer formats exist. In theory, we should check\nwhether the chroma format (i.e. the sw_format) is supported at all by\nthe vdpau driver, but checking for transfer formats has the same effect.\n\nNote that the pre-existing code adds 1 to priv->nb_pix_fmts[i] for\nunknown reason, and some checks need to account for that to check for\nempty lists. They are not off-by-one errors."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/43e1ccfea186080b1c4cb4cd1e59ac1a3c3dc446", "message": "http: cosmetics: reformat reconnect check for better readability\n\nThe condition was a bit too long, and most editors will break the line\nand turn it into an unreadable mess. Move out some of the conditions.\n\nThis should not change the behavior."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2477bfe22121f04eff9e4ba2475f1f999c17ea36", "message": "http: avoid logging reconnect warning if stream was aborted\n\nIf the stream was aborted using the libavformat interrupt callback, we\ndon't want it to log the reconnect warning. (Exiting after logging this\nwarning worked well, so this is only for avoiding the ugly warning.)"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/18fbfd7bf86effb49c0341b37b9c1d73940d688e", "message": "hwcontext_dxva2: initialize D3DDISPLAYMODEEX correctly"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1b283c4a0dde1060ca1745f59a15cb8b77dfdaa5", "message": "http: bump message level for reconnect message and log timeout"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8a108bdea06fac43af9f44b6d2538f357451167a", "message": "http: block while waiting for reconnecting\n\nIt makes no sense to return an error after the first reconnect, and then\nsomehow resume the next time it's called. Usually this will lead to\ndemuxer errors. Make reconnecting block instead, until it has either\nsuccessfully reconnected, or given up.\n\nAlso make the wait reasonably interruptible. Since there is no mechanism\nfor this in the API, polling is the best we can do. This behaves roughly\nthe same as other interruptible network functions in libavformat.\n\n(The original code would work if it returned AVERROR(EAGAIN) or so,\nwhich would make retry_transfer_wrapper() repeat the read call. But I\nthink having an explicit loop for this is better anyway.)\n\nI also snuck in a fix for reconnect_at_eof. It has to check for\nAVERROR_EOF, not 0."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/0e1f771d2200d14d298df09c91e14f51e418fd3a", "message": "tcp: properly return EOF\n\nThere is no POSIX error code for EOF - recv() signals EOF by simply\nreturning 0. But libavformat recently changed its conventions and\nrequires an explicit AVERROR_EOF, or it might get into an endless retry\nloop, consuming 100% CPU while doing nothing."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8f9024f2ca4740c4ed80dea1e9c890c9217013bd", "message": "lavc: remove uneffective attribute_deprecated on enum\n\nDoes not work. Even emits a warning with some compilers that the\nattribute does not work on enums. It's likely that there is way to make\nit work, but not worth the trouble."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cf57cb3ae4364ab8e70af37beea7a45a86de90e9", "message": "h264: add AVOption to set x264_build default\n\nThis provides a generic way to the API user to deal with files that\neither lack this SEI, or which have the SEI only in packets not passed\nto the decoder (such as the common case of the SEI being in the very\nfirsat video packet, but decoding is started somewhere in the middle of\nthe file). Bugs like 840b41b2a643fc8f0617c0370125a19c02c6b586 make this\nsomewhat of a necessity.\n\nThis intentionally uses the version in the SEI instead, if any is found."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4ed66517c62c599701b3793fa2843d5a8530a4f4", "message": "lavc: remove complex debug code around avcodec init locking\n\nThis is just a lot of complicated and confusing code that had no purpose\nanymore.\n\nAlso, the functions return values were checked only sometimes. Locking\nshouldn't fail anyway, so remove the return values. Barely any other\npthread lock calls check the return value (including more important code\nthat is more likely to fail horribly if locking fails).\n\nIt could be argued that it might be helpful in some debugging\nsituations, or when the user built FFmpeg without thread support against\nall good advice.\n\nBut there are dummy atomics too, so the atomic check won't help with\nensuring correctness absolutely. You gain very little.\n\nAlso, for debugging, you can just raise the ASSERT_LEVEL, and then\nlibavutil/thread.h will redefine the locking functions to explicitly\ncheck the return values."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/86a13bf2ffb40d44260d5747a4782a42a43a1ed8", "message": "lavc, lavf: move avformat static mutex from avcodec to avformat\n\nIt's completely absurd that libavcodec would care about libavformat\nlocking, but it was there because the lock manager was in libavcodec.\n\nThis is more stright forward. Changes ABI, but we don't require ABI\ncompatibility currently."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e24f192a9fd6013e272df1bfaeaba31e8ca49f92", "message": "ffplay: drop lock manager use\n\nDeprecated and useless."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a04c2c707de2ce850f79870e84ac9d7ec7aa9143", "message": "lavc: replace and deprecate the lock manager\n\nUse static mutexes instead of requiring a lock manager. The behavior\nshould be roughly the same before and after this change for API users\nwhich did not set the lock manager at all (except that a minor memory\nleak disappears)."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9b121dfc32810250938021952aab4172a988cb56", "message": "w32pthreads: always use Vista+ API, drop XP support\n\nThis removes the XP compatibility code, and switches entirely to SWR\nlocks, which are available starting at Windows Vista.\n\nThis removes CRITICAL_SECTION use, which allows us to add\nPTHREAD_MUTEX_INITIALIZER, which will be useful later.\n\nWindows XP is hereby not a supported build target anymore. It was\ndecided in a project vote that this is OK."}], "pull_requests": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/153", "title": "WARNING: PULL REQUESTS ON THIS REPOSITORY ARE IGNORED", "body": "This is not a real pull request, but a reminder whoever comes across this repository. You should not open pull requests here; most developers don't look at the pull requests, so they will be ignored for the most part. The reason is that FFmpeg development, including code review, happens on the ffmpeg-devel mailing list, not here.\n\nThis is what the README.md says:\n\n> Patches should be submitted to the ffmpeg-devel mailing list using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process. Few developers follow pull requests so they will likely be ignored.\n\nPlease read our [official documentation on how to contribute](https://www.ffmpeg.org/developer.html#Contributing).\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926355", "body": "Broken indentation.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926360", "body": "Useless comments (in other places too).", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926373", "body": "Not allowed. You can't have more buffers than frames. You should probably unref the decoder from the frame release function instead.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926375", "body": "Redundant NULL check.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926385", "body": "You use this lock only to protect mpp_frame_deinit(). That's fishy. If mpp_frame_deinit() is not thread-safe, you got other problems, because the decoder could be running at the same time and cause similar thread-safety issues.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926392", "body": "It's probably not necessary to log minor and unlikely errors like this.\r\n\r\nIn FFmpeg, we check failures of small mallocs only to keep up appearances anyway.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20926392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "ronag": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/856b7cae9f40c094be6a1dfa73eb57295838496c", "message": "avfilter/vf_idet: added more YUVA formats to idet query_formats\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "atomnuker": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c51301db14fe08bf9f5c3b4f9e588e04095f9ac1", "message": "dcaenc: move all tables inside context and fix incorrect coding style\n\nFunctionally identical to the old code, with less lines wasted.\nPartially fixes the complete disregard for the 80 col/line guide.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/56e11ebf55a5e51a8a7131d382c2020e35d34f42", "message": "dcaenc: cleanup on init failure and add a threadsafe init codec cap\n\nThe encoder didn't clean up if a malloc failed during init.\nIt also doesn't need any external tables to be initialized on init.\nFinally, it didn't need to check for whether avctx->priv_data exists during\nuninit.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6c4b9eb935b677e6f562660caf145b73ea49cf30", "message": "fate: remove the fate-aac-ltp-encode test\n\nIt tests a useless profile which sounds no better than regular aac and which\ntakes extremely long to encoder something. Also it has been behind experimental\nflag for as long as it has been supported.\nShould be removed altogether sometime in the future."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/fcb681ac3edd708f26c3b5014c06e32fd2723887", "message": "aacenc: use the fast coder as the default\n\nThe twoloop coder sounds decent at low bitrates, however at higher bitrates\nit sounds worse than the fast coder (which used to be the old twoloop coder\nbefore October 2015) and needs quite a lot more CPU.\nChange the default to fast. It has been well tested and has had little changes\nover the years so its been confirmed to be quite stable.\nAlso change its description (not valid for more than a year) and the\ndocumentation.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c693af1951a0074a29ce39b69736ff0cf33b41d2", "message": "libavformat/network: fix function duplication\n\nSince the function used to be exposed for ffserver's sake, it was renamed\nto the same name as a system's aton function which caused a collision.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7c6125cbcc6e805711feff9cbf35329adcb6e313", "message": "libavformat/mpjpeg: use \"ffmpeg\" instead of \"ffserver\" as boundary tag\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8788e82c04fee409d6b56751a0925d4ee17d2f68", "message": "libavformat: unexpose private ff_ functions needed by ffserver\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d41de90d440ae389262e13fb6c4dc3fdf7261b57", "message": "libavformat: remove the ff_rtp_get_local_rtcp_port function\n\nOnly used by ffserver\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9396ed0f291509e62235e12cd064d5b13b2473c2", "message": "libavformat: unexpose the ff_inet_aton function\n\nUsed only by ffserver.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c17f4761443b471f47fa8f0a5bcff078cdff9479", "message": "libavformat: remove the ffmenc and ffmdec muxer and demuxers\n\nUsed only by ffserver.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6b35a83214f1bc3fb38c9ea9c2cd3676f28709fa", "message": "Remove the ffserver program\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/f141b353e60f1081185927a1e74a9ab46cae8bef", "message": "opusenc_psy: disable stereo searches for mono streams\n\nFixes a crash which happened when someone tried to encode mono.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c29038f3041a4080342b2e333c1967d136749c0f", "message": "lavr: deprecate the entire library\n\nDeprecate the entire library. Merged years ago to provide compatibility\nwith Libav, it remained unmaintained by the FFmpeg project and duplicated\nfunctionality provided by libswresample.\n\nIn order to improve consistency and reduce attack surface, as well as to ease\nburden on maintainers, it has been deprecated. Users of this library are asked\nto migrate to libswresample, which, as well as providing more functionality,\nis faster and has higher accuracy.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/fdbd26196702120561a6a9b32928443b04fcbd11", "message": "lavc/Makefile: fix opus_parser dependencies\n\nFix suggested by RiCON.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/51027d0b8b2835d4c70c9cb7b2ab5e28d5e3f22f", "message": "opus: merge encoder and decoder bitallocation functions into one\n\nThere's no difference apart from which entropy coding functions get called.\n\nSigned-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dcherednik": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ec6e389c753ba7de0303e8094a494a981b927b77", "message": "avcodec/dcaenc: Use ffmpeg mdct instead of own implementation\n\nSigned-off-by: Daniil Cherednik <dan.cherednik@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c7d726f7f466f69af8321a5e01133e64b4885f53", "message": "opusenc_psy: Typo, use all coeffs in range for band tonality calculation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "richard-tunein": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9147c0975533c83564b1ba47f22952b291b80282", "message": "avformat/http: fix memory leak in parse_cookie.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JeromeMartinez": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/58e16a4f4b70b00e1ae14c8a52aea49000fa34a3", "message": "avcodec/ffv1enc: mark RGB48 support as non-experimental\n\nResulting bitstream was tested with a conformance checker\nusing the last draft of FFV1 specifications.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n\nAlso the files are already in the wild, and decoder support is\nthus needed. And with decoders widely supporting it, there is no\nadvantage in not allowing it in the encoder.\nThe exact bitstream format may change in future versions of the\nspec, if improvments are found."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "manxorist": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8b1b25a86f1b3c61f1c9742c9b7fff5baa5f1bc7", "message": "avformat/libopenmpt: Update to libopenmpt 0.3 API\n\nlibopenmpt 0.3 deprecates openmpt_module_create_from_memory() and\nprovides a replacement function openmpt_module_create_from_memory2().\n\nDetecting libopenmpt 0.3 can be done at build time via the API\nversion macros provided by libopenmpt. libopenmpt 0.2 did not provide\nall required macros, however libopenmpt documents the required #define\nshims that can be safely added for libopenmpt 0.2.\n\nUsing openmpt_module_create_from_memory2() instead of\nopenmpt_module_create_from_memory() avoids the deprecation warning\nwhen building ffmpeg with libopenmpt 0.3.\n\nopenmpt_module_create_from_memory2() provides more fine-grained error\nreporting and in particular allows distinguishing out-of-memory from\ninput file parsing errors. Return appropriate ffmpeg errors\naccordingly.\n\nlibopenmpt 0.3 is ABI and API compatible with applications built\nagainst libopenmpt 0.2. Building ffmpeg with libopenmpt 0.2 is still\nsupported.\n\nSigned-off-by: J\u00f6rn Heusipp <osmanx@problemloesungsmaschine.de>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a571a2a65abea24adb3a9fff4b05bc562ce93ed6", "message": "avformat/libopenmpt: Fix mixed code and declarations\n\nSigned-off-by: J\u00f6rn Heusipp <osmanx@problemloesungsmaschine.de>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mvji": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b94cd55155d8c061f1e1faca9076afe540149c27", "message": "avfilter/x86/vf_interlace : add AVX2 version"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kylophone": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/42a5fe340fb30042fa9b2212459de7cbbda15b73", "message": "doc/filters: correct typo in psnr filter docs\n\nSigned-off-by: Kyle Swanson <k@ylo.ph>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "maximd33": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cbe28bc069dde1d53d937ee10700bb123279c7c8", "message": "qsv: better to use alignment by 16 and HEVC 10b requires alignment by 32"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "komh": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d03c39b46b21c893d6549a532289b7fb9935b3fc", "message": "configure: check SDL2 function with a header\n\nSDL2 uses SDLCALL to specify a calling convention. On OS/2, it's defined\nto `_System' which is similar to `_cdecl' but does not prepend '_'.\n\nAfter all, without a header, a function is used without `_System'. And\nlinker will try to `_func' but fail because the function is `func' not\n`_func'.\n\nReviewed-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>\nSigned-off-by: James Almer <jamrial@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tmm1": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/cc90ee0b7e47bcdb0405789aa6435db906d0774e", "message": "Changelog: add VideoToolbox HEVC support\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9d9835017f67db7e37b6b5a42a247e17b05bf8fc", "message": "lavc/mediacodecdec: switch to new decoding API\n\nUsing the new API gives the decoder the ability to produce\nN frames per input packet. This is particularly useful with\nmpeg2 decoders on some android devices, which automatically\ndeinterlace video and produce one frame per field.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>\nSigned-off-by: Matthieu Bouron <matthieu.bouron@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/97b89432e4566a5d620f97bfdf4c8ae9c83d94e8", "message": "avformat/hls: ignore http_persistent for segments requring crypto\n\nEncrypted HLS segments have regular http:// urls, but open_input()\nactually prefixes them with crypto+ before calling open_url(), so\nthey end up using the crypto protocol and not the http protocol.\n\nThis means invoking ff_http_do_new_request will fail, so we avoid\ncalling it in the first place. After the earlier http.c commit,\nthe failure results in a warning printed to the user. In earlier\nversions, the failure would cause a segfault.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c0b08ef94f037572876448990dca840b85432262", "message": "avformat/http: return EINVAL if ff_http_do_new_request is called with non-http URLContext\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1dd82edea5ab689f9a94e14cb2cf6d382cbf9ee6", "message": "avformat/hls: enable http_multiple only for http/1.1 servers\n\nSome http/1.0 implementations, like python's SimpleHTTPServer, can only support one client connection at a time. Making a second request while the first is still connected leads to a deadlock.\n\nThis change enables multiple connections for http/1.1 servers only, which need to support keepalive by default and should have no problem with concurrent requests.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/039007c928b4207b8bdde31c80c57dc7b917dd2f", "message": "avformat/http: export http_version from response\n\nCan be used by the api user to figure out what http features the server supports based on the response received.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ac19e63b184570c0ade4d3a8a785f64441d9cac8", "message": "avformat/hls: respect http_persistent only for http playlist urls\n\nFixes a segfault when reading a live playlist (without end tag) from non-http url (like a file on disk).\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/11f989945e1748fbe9b2a5abd68a25d3091acc5d", "message": "avformat/http: avoid ff_http_do_new_request after http/1.0 response\n\nThis makes do_new_request fail early when dealing with a http/1.0 server, avoiding unnecessary \"reconnecting\" warnings shown to the user.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/a232a72d77cf32766e7f42f892b983f5e496653f", "message": "avformat/hls: return AVERROR_PROTOCOL_NOT_FOUND when http protocol is not available\n\nFixes compile error when building with network or protocols disabled.\n\nThis code would never be reached (because the demuxer fails much earlier on http playlists or segments), so it doesn't matter much what we do here as long as it compiles.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2f9ca64556cba9a7edcca9a1c55923a60022937d", "message": "avformat/hls: remove repeated http proto_name checks in open_url()\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/207e98b4e502edc17c2e0fcba91bf122892f718c", "message": "avformat/hls: fix SEGV in previous commit\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b33cf735071cfe07ac60fd8f95e7f1f984005f45", "message": "avformat/hls: fix memory leak with non-http segments\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/3d95868d1bf2197597fbcbddd984eac175325a14", "message": "avformat/hls: fix CID 1426930\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9e5e3236f4f2004a505533228cf6a6dd65b0101c", "message": "avformat/internal: fix compile error with some versions of g++\n\nFixes #6926\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4c78bbd3136a43347a112dd45ac60685c61bf425", "message": "avformat/internal: log underlying error with ff_rename failure\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>\nSigned-off-by: wm4 <nfxjfg@googlemail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/5f4a32a6e343d2683d90843506ecfc98cc7c8ed4", "message": "avformat/hls: hide misleading warning when http reconnect is required\n\nAVERROR_EOF is an internal error which means the http socket is no longer\nvalid for new requests. It informs the caller that a new connection must\nbe established, and as such does not need to be surfaced to the user as\na warning.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/54d0ef1738ff30c05e2edb5b019dbd44b694ebe6", "message": "avformat/http: return EOF from ff_http_do_new_request if previous response said Connection:close\n\nThis fixes a deadlock when using the hls demuxer's new http_persistent feature\nto stream a youtube live stream over HTTPS. The youtube servers are http/1.1\ncompliant, but return a \"Connecton: close\". Before this commit, the demuxer\nwould attempt to send a new request on the partially shutdown connection and\ncause a deadlock in the tls protocol.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1f0eaa02aa7141f371e095540ac285698a0bdf46", "message": "avformat/hls: add http_multiple option\n\nThis improves network throughput of the hls demuxer by avoiding\nthe latency introduced by downloading segments one at a time.\n\nThe problem is particularly noticable over high-latency network\nconnections: for instance, if RTT is 250ms, there will a 250ms idle\nperiod between when one segment response is read and the next one\nstarts.\n\nThe obvious solution to this is to use HTTP pipelining, where a\nsecond request can be sent (on the persistent http/1.1 connection)\nbefore the first response is fully read. Unfortunately the way the\nhttp protocol is implemented in avformat makes implementing pipleining\nvery complex.\n\nInstead, this commit simulates pipelining using two separate persistent\nhttp connections. This has the advantage of working independently of\nthe http_persistent option, and can be used with http/1.0 servers as\nwell. The pair of connections is swapped every time a new segment starts\ndownloading, and a request for the next segment is sent on the secondary\nconnection right away. This means the second response will be ready and\nwaiting by the time the current response is fully read.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>\nSigned-off-by: Anssi Hannula <anssi.hannula@iki.fi>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/03765aa6fa9c519571586db87d4dade1102c4c86", "message": "avformat/hls: allow open_input to be re-used\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>\nSigned-off-by: Anssi Hannula <anssi.hannula@iki.fi>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b7d6c0cd48dac7869b9e6803e2d47d05a4fa373b", "message": "avformat/hls: add http_persistent option\n\nThis teaches the HLS demuxer to use the HTTP protocols\nmultiple_requests=1 option, to take advantage of \"Connection:\nKeep-Alive\" when downloading playlists and segments from the HLS server.\n\nWith the new option, you can avoid TCP connection and TLS negotiation\noverhead, which is particularly beneficial when streaming via a\nhigh-latency internet connection.\n\nSimilar to the http_persistent option recently implemented in hlsenc.c\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>\nSigned-off-by: Anssi Hannula <anssi.hannula@iki.fi>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9395e44b8d20d1d4c72dd5b42d28721ca191d957", "message": "avformat/http: add \"Opening\" info logging to ff_http_do_new_request\n\nThis mimics logging that was added in 53e0d5d7247 for security\npurposes.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/28358e466d4f4bc54f8137e0597057f33100b236", "message": "avformat/http: return EINVAL from ff_http_do_new_request() if re-used with different hostname\n\nThis will prevent improper use of ff_http_do_new_request() if the user\ntries to send a request for a different host to a previously connected\npersistent http/1.1 connection.\n\nSigned-off-by: Aman Gupta <aman@tmm1.net>\nSigned-off-by: Karthick J <kjeyapal@akamai.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/26467161", "body": "Thanks for the heads up. I guess we need a patch similar to https://github.com/FFmpeg/FFmpeg/commit/d67c1dda403288bcfd30b5d4a0412582728c2c79", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/26467161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mbouron": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e30b46b1aeea03fc5cbcecc03f7103cf204090f0", "message": "lavc/mediacodec_wrapper: allocate MediaCodec.BufferInfo once"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/d19174c673b8788de825a936d8d7c9340aefcd56", "message": "lavc/mediacodecdec: remove mediacodec_process_data() indirection"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22530122", "body": "I'll work on it in the upcoming days.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22530122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22535770", "body": "The following patch fixes the build with Xcode 7.2 : https://patchwork.ffmpeg.org/patch/3975/\r\nCan you confirm it works for you ?", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22535770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22609163", "body": "I will test your patch on monday (I don't have an Apple machine at hand until then) and submit it to the mailing if it's correct. If you can format the patch with git format-patch that would be great.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22609163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22743873", "body": "Sorry for the long reply, I did contact the maintainer of those files and he submitted and pushed your patches to both libav and ffmpeg:\r\nhttps://ffmpeg.org/pipermail/ffmpeg-devel/2017-June/212675.html", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22743873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "LongChair": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2ca65fc7b74444edd51d5803a2c1e05a801a6023", "message": "avcodec/rkmpp : remove stream start retries before first frame.\n\nthose were needed because of some odd mpp behavior that seems to have\nbeen fixed.\n\nMakes the code cleaner.\n\nSigned-off-by: wm4 <nfxjfg@googlemail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c6f84106366c6f243a8b07dbffcc7880009aa904", "message": "avcodec/rkmpp : Fix broken build due to missing control operation\n\nThis patch is taking care of https://trac.ffmpeg.org/ticket/6834.\nIt seems that one of the control operations that was available to get\nthe free decoders input slots was removed.\n\nThere is another control operation to retrieve the used slots. Given\nthat the input slot count is hardcoded to 4 in mpp at this point,\nreplacing the old control operation by the other one.\n\nThis was tested on Rockchip ROCK64.\n\nSigned-off-by: wm4 <nfxjfg@googlemail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Cigaes": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/01735b4852c65081eaead3d9d405ef30fbb5a6ee", "message": "tools/uncoded_frame: remove use of AVStream.codec."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/34dfe36971aafd2b3bef04f1e78b2813e2f0b73f", "message": "tools/uncoded_frame: use buffersink accessors.\n\nNo longer access buffersink's link structure directly."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/29b5f3115d9f217758bebd1d00e541aa3e739d2a", "message": "lavfi/framesync: remove an invalid free."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/9ace76697ac1e43aa4da4c7333ec4a296907c336", "message": "lavfi/framesync: document frame ownership for dualinput."}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e45f7bca735ff7ba965ec1e441199dc7aeb0c8fc", "message": "lavf/concatdec: properly init streams timestamp parameters.\n\npts_wrap_bits defaults to 33 (like MPEG), that causes valid\ntimestamps to be unwrapped and become invalid.\nInspired by a patch by Wu Zhiqiang <mymoeyard@gmail.com>."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107206279", "body": "A few comments:\n- Please send patches to the devel mailing-lists. This kind of web-based discussion system is awful for working seriously.\n- The commit moving the new code should be squashed with the commit adding the code.\n- Do not worry about \u201call POSIX implementations\u201d: this patch is about Linux/android/bionic, it is only necessary to make sure it works for this particular platform, including interrupting recv().\n- The ifdef logic seems wrong. There may be other platforms with `HAVE_PTHREADS` that are not bionic. Something like this should be better:\n\n```\n#if HAVE_PTHREAD_CANCEL\n# define USE_RECV_THREAD 1\n# define thread_canceled() 0\n#else\n# if HAVE_BIONIC?\n#  include \"../compat/bionic/pthread_cancel.h\"\n#  define USE_RECV_THREAD 1\n# else\n# define USE_RECV_THREAD 0\n# endif\n#endif\n```\n- I agree that cancelling from outside is terrible. At some point I want to rework all that into generic event-driven code for network protocols. But that is a lot of work.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107206279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mistydemeo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/bfe397e4313c640e2f05c90a2ff1541f50524094", "message": "aiff: add explicit goto got_sound\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/94e6b5ac3914c391912b717e6aba2cb40cc717b7", "message": "adpcm: consume remainder after consuming XA chunks\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/fde057dfb25e2b6917fc896a0b2dfec0f336b1ce", "message": "aiff: add support for XA ADPCM\n\nCertain AIFF files encode XA ADPCM compressed audio using a chunk\nwith the tag `APCM`. Aside from this custom chunk type, they're\notherwise standard AIFF files. I've only observed these files in the\nSega Saturn game Sonic Jam so far.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "elenril": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/89b84cb18b54d3af281643bcad8bba365a702e96", "message": "It has been replaced by C11 stdatomic.h and is now unused.\n\n(cherry picked from commit 5cc0057f4910c8c72421b812c8f337ef6c43696c)\nSigned-off-by: James Almer <jamrial@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MarcAntoine-Arnaud": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e425047a47b68dd21d50f0d83cfd7ae816268f57", "message": "avfilter: rename variables in geq\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/ac6b0bba79fe4de1281e0f2058646bee23d90224", "message": "avfilter: slice processing for geq\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/206b25f9f45a7a0e408338f9f6ab022ff2efb196", "message": "avfilter: reorder variable definition in geq\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mwootton": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/34c113335b53d83ed343de49741f0823aa1f8cc6", "message": "Add support for H.264 and HEVC hardware encoding for AMD GPUs based on AMF SDK\n\nRequires AMF headers for at least version 1.4.4.1.\n\nSigned-off-by: Mikhail Mironov <mikhail.mironov@amd.com>\nSigned-off-by: Luca Barbato <lu_zero@gentoo.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mont3z": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/59b126f92225316e0cd77bb952d630553801dc85", "message": "libavutil/hwcontext_dxva2: Add check for possible errors from GetAdapterDisplayModeEx\n\nThis prevents a possible crash in CreateDeviceEx when using faulty\nresponse from GetAdapterDisplayModeEx and allows ffmpeg to fallback to\nclassic d3d9.\n\nSigned-off-by: wm4 <nfxjfg@googlemail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jiejun-zhang": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/677701c6b319d2d3b95a27179fde6ec2a863bf72", "message": "lavc/audiotoolboxenc: fix noise in encoded audio\n\nThis fixes #6940\n\nAlthough undocumented, AudioToolbox seems to require the data supplied\nby the callback (i.e. ffat_encode_callback) being unchanged until the\nnext time the callback is called. In the old implementation, the\nAVBuffer backing the frame is recycled after the frame is freed, and\nsomebody else (maybe the decoder) will write into the AVBuffer and\nchange the data. AudioToolbox then encodes some wrong data and noise\nis produced. Retaining a frame reference solves this problem.\n\nSigned-off-by: James Almer <jamrial@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dwbuiten": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/631fa0432be8968e0fd372595749b918224946df", "message": "vf_paletteuse: Don't free the second frame from ff_framesync_dualinput_get_writable on error\n\nThis fixes a double free in he error case.\n\nSigned-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/6470abc740367cc881c181db866891f8dd1d342f", "message": "vf_paletteuse: Add error checking to apply_palette\n\nThis fixes a segfault caused by passing NULL to ff_filter_frame\nwhen an error occurs.\n\nSigned-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/500a9bb5ba94201dd53bd714794fc33e5ffe3773", "message": "lavc/options: Remove unneeded header\n\nSigned-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SeanMcG": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/7b0b5bc810cdb9ef100492c9a9f2d30602c04336", "message": "cmdutils: update copyright year to 2018"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "T-bagwell": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2906363d1bb804994cf741ad2c99d8c76efff5f0", "message": "avformat/hls: release mem resource to fix memleak\n\nfix CID: 1426991\n\nSigned-off-by: Steven Liu <lq@chinaffmpeg.org>\nSigned-off-by: Aman Gupta <aman@tmm1.net>\nSigned-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/be4dfbf7b71e44a53ca8da882a081e35ea134c83", "message": "avformat/avio: check input URLContext value NULL\n\nReviewed-by: Michael Niedermayer <michael@niedermayer.cc>\nReviewed-by: Karthick Jeyapal <kjeyapal@akamai.com>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/2aee5a87233277027bb281372f888b5246a58e77", "message": "avformat/hlsenc: fix resource leak\n\nfix CID: 1426931 1426929"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lizhong1008": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/1efbbfedcaf4a3cecab980273ad809ba3ade2f74", "message": "examples/qsvdec: do not set the deprecated field refcounted_frames\n\nIt is used by the deprecated API avcodec_decode_video2 and ignored by the\nnew decode APIs (avcodec_send_packet/avcodec_receive_frame).\n\nSigned-off-by: Zhong Li <zhong.li@intel.com>\nSigned-off-by: Luca Barbato <lu_zero@gentoo.org>"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e23190269fb6e8217d080918893641ba3e0e3556", "message": "lavu/qsv: add log message for libmfx version\n\nIt is benefit to diagnose issues related to different libmfx version.\n\nSigned-off-by: Zhong Li <zhong.li@intel.com>\nSigned-off-by: Luca Barbato <lu_zero@gentoo.org>"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lu-zero": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/c6558e8840fbb2386bf8742e4d68dd6e067d262e", "message": "x264: Support version 153\n\nIt has native simultaneus 8 and 10 bit support."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JDarnley": {"issues": [], "commits": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/40d4b13228bf234a2b9649674d9ed25bd020f226", "message": "checkasm: support for AVX-512 functions"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8f86e6623811f7713d5e72c13797e20fffb3df62", "message": "avcodec: add stride alignment needed for AVX-512"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/e2218ed8ce6e2f208b9279acc80b7e2b7f1eae6c", "message": "avutil: add alignment needed for AVX-512"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/4783a01c113b727164588ada47b3145ce5d2c367", "message": "avutil: detect when AVX-512 is available"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/8b81eabe5789105cf4dcf223c9d758ca19278cab", "message": "avutil: add AVX-512 flags"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/commits/b7a3d1f249c9da9f21d10ea9137e304961da02ba", "message": "configure: test whether x86 assembler supports AVX-512"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kierank": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/274", "title": "Create CODE_OF_CONDUCT.md", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "michaelni": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706", "body": "The commits have been merged Sun Jan 22, sorry ive missed that there also was a pull request open here on github.\nNote to everyone, mail pull requests to me (michaelni@gmx.at) or the ffmpeg-devel ML.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4623706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124", "body": "Patch applied locally, will be in github in a moment\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/4865124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327", "body": "Hmm, 5 merge commits, 1 rebased commit from master, 1 duplicate commit from you and 5 actual commits. Could you rebase this so there are no random merges and random duplicate commits ? The actual changes that merging all this would introduce probably are ok but i cant merge this branch as is\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10322327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820", "body": "commits integrated\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15077820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902", "body": "Any updates on this? you said you will have an updated patch in a day or 2, did i miss it ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15869902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824", "body": "where can we find a sample with which to reproduce the bug & fix ?\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15870824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140", "body": "The problem has been fixed in 1f2ce32825f7ca14c3bd90ef2781d75e8b704d41\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/16387140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780", "body": "Patch applied by Paul\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18362780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671", "body": "patches should be against master\npatches against release/1.2 should always have been in master first\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18363671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499", "body": "Is there any reason why you dont check if getnamenifo() failed ?\nIt seems more correct to me to check it and handle this error condition instead of silently continuing with a empty buffer\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18365499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722", "body": "The checks are all wrong, an error is a non zero return not a zero. Please test code before submitting.\nAlso my question still stands, why do you not handle the errors but instead manipulate the name.\nHandling an error means printing an error message and returning failure not continuing.\nPlease explain what you are trying to achive with setting the name to 0 and continuing\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18453722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736", "body": "Comment from ronald:that change to ff_rtp_set_remote_url() ignores the port parameter, that's not right\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18464736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012", "body": "Comment from wbs:\nwbs: michaelni: yes, as BBB says, that commit is very much wrong. if that actually helps in some case, the caller is doing something very much wrong, because it would break every single rtsp case at least. that function is used for setting the peer hostname/port, but the change makes it ignore the port you set. so if the change helps, the caller shouldn't be calling the function at all. or alternatively, add logic to parse out ...\nwbs: ... rtcp_port within that function just as it is done in rtp_open\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18465012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127", "body": "var_values[VAR_N] is left at the old value, isnt that confusing for users of expressions\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19488127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19714674", "body": "If you squash them, thats less work for me ... so beng lazy i prefer that of course\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19714674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/20472175", "body": "Do you have a url / testcase that needs this / to test it ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/20472175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/21383233", "body": "bugfixes merged into the corresponding commits, fate checksums updated and merged\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/21383233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/23299426", "body": "This breaks build:\nHTML    doc/ffmpeg.html\n**\\* Undefined node `codec-options' in @ref (in doc/encoders.texi l. 729)\nHTML    doc/ffplay.html\nHTML    doc/ffprobe.html\nPOD doc/ffmpeg.pod\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 429.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 430.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 433.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 435.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 437.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 439.\n@end multitable without @multitable at line 442\nmake: **\\* [doc/ffmpeg.pod] Error 25\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/23299426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/23307298", "body": "This fixes the warning but the build still fails:\nHTML    doc/general.html\nHTML    doc/git-howto.html\nHTML    doc/libavfilter.html\nHTML    doc/platform.html\nHTML    doc/syntax.html\nPOD doc/ffmpeg.pod\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 429.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 430.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 433.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 435.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 437.\nUse of uninitialized value $ic in concatenation (.) or string at ./doc/texi2pod.pl line 287, <GEN7> line 439.\n@end multitable without @multitable at line 442\nmake: **\\* [doc/ffmpeg.pod] Error 25\nmake: **\\* Waiting for unfinished jobs....\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/23307298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/25116453", "body": "av_gettime() does not return the time at which audio has been recorded it returns the time at which its called which can be arbitrary later. if pulse provides some means to get the wallclock time of when a sample has been recorded then this could be used, otherwise please see ff_timefilter\\* which would reduce the inaccuracies with av_gettime()\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/25116453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/25153234", "body": "frame_duration is a meaningless nonsense value, it cant be used like that, the audio sample rate is not synchronized to the wallclock. it might be 44100.1 samples per second now and 44097 in an hour when the hardware is a bit hotter. besides it is a rounded integer and not always exact to begin with\n\nno, using an inaccurate timestamp per packet is not a good idea. You would be changing one set of issues against another set of issues\nPlease check if theres a way to get exact timestamps from pulse. And\nif the pulse API is lacks that (which would mean the API is crap), then please use ff_timefilter\\* \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/25153234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26671257", "body": "I think you could achive the same by just removing the \"local_rtp_port>=0\" check but thats not so important. Whats important and problematic is that if you force it to use random port +1, this port might simply be unavailable and cause a random failure, port + 1 might even be larger than 65535. So i think the code is missing some kind of error recovery and retry unless iam missing something\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26671257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26671283", "body": "Merged by Stefano\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26671283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26673295", "body": "no, i belive you have to at minimum detect that the port is unavailable and retry if no specific port was requested and fail only if this specific port has been requested. \nThat is if the caller requests port 1234 and that or 1235 is in use and opening fails then fail but if the caller requests no specific port then its not ok to fail if port+1 is unavailable. The code should try another pair until it finds a usable one or some max_retry_count is reached\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26673295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26702748", "body": "merged / integrated\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26702748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27122540", "body": "\"some link\"?\nplease explain how the issue can be reproduced\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27122540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27124899", "body": "changes applied\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27124899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27124997", "body": "please reopen when you have a new patch\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27124997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27151068", "body": "issue fixed\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27151068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27170739", "body": "this pull request contains quite a few old change that have already been integrated.\nabout the new change, why are changes outside udp.c needed ?\nthe change looks a bit complex and also would discard a packet\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27170739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27177750", "body": "Its neccessary to use objective C to access this ?\nMacBook/iMac embedded camera isnt accessable from plain C ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27177750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27312276", "body": "width / height fixed, i couldnt just take your change as it broke make fate and the float might in theory have caused portability issues\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27312276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27326631", "body": "You misunderstood me, i already fixed it see: 6103faaa51d2f46d6ccecaad9a089b4b42ff66ee\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27326631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27783106", "body": "please look at\nhttps://github.com/FFmpeg/FFmpeg/pull/42.patch\nwhich is simply your changes for this pull request, they even contain conflict markers\n\"-<<<<<<< HEAD\"\nwe cant merge this no matter what it fixes.\nAbout the fix itself, the code discards a packet, you dont know if the discarded packet is a punching hole packet or if it contained some information that rather should have been received normally. Also i do not understand why changes outside udp are needed. The changes in ffserver if they are needed in some form look wrong, they seem to hardcode the assumtation that there are 2 streams (instesd of more or less)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27783106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27956194", "body": "cleaned up and applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27956194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/29809382", "body": "patch has been applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/29809382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/29810901", "body": "This has been fixed in df9117921ac3fea7552a20c66b1cfd5967a9f345\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/29810901/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/32571177", "body": "s->duration and timestamp can be in different timebases\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/32571177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/33493075", "body": "Is there a reason why you dont use av_dict_copy() ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/33493075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/33506568", "body": "patch applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/33506568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/33918608", "body": "patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/33918608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36562570", "body": "Pull requests are not a means to ask for support\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36562570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36562838", "body": "Please only use pull requests for well pull requests.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36562838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36633550", "body": "patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36633550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36633590", "body": "patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36633590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36702775", "body": "Can you be a bit more specific than \"an error\" and \"using the example code\"\nHow can the problem be reproduced?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36702775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36751696", "body": "patch applied with a more detailed commit message\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36751696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40499833", "body": "The patch has been applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40499833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40501903", "body": "adpcm doesnt have 4 bytes per sample, also even if it did you cant change public parameters from bits to bytes\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40501903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40501967", "body": "also the commit message must explain why a change is done\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40501967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40505986", "body": "patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40505986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40506394", "body": "no change since 4 month -> closing\nplease reopen if theres a new version\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40506394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40523876", "body": "code_size is used in get_bits() as argument so it is definitly a size in bits not bytes\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40523876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41036567", "body": "How can the crash be reproduced ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41036567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41234823", "body": "patch applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41234823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41349811", "body": "Have you benchmarked your change ? (you can use START/STOP_TIMER to get accurate benchmark scores over some piece of code like that function)\nIf its slower than it would be better to handle the last line by some different code that doesnt overread. Thats also how the main swscale codepath works (that is it switches to the plain C code for the last line)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41349811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/43947680", "body": "Patch applied\n\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/43947680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44405789", "body": "From IRC:\nllogan: might be kind of weird to have one be markdown style and the others not\nllogan: INSTALL, etc\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44405789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44463013", "body": "squashed in 3 patches and applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44463013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44791622", "body": "pull request makes no sense\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44791622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/48467469", "body": "this breaks build on linux\n\"gcc: error trying to exec 'cc1obj': execvp: No such file or directory\"\nalso the patch should probably be submitted to the ffmpeg-devel mailing list for review.\nyou can also add yourself to the MAINTAINERs file in the patch if you like and i suggest to stash these into a single patch, they kind of seem to me all together just the initial support for OS X screen capture devices, it should make review easier. Or does this represent some public history of development and testing ? (considering it fails building on linux it doesnt seem so to me)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/48467469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/50253446", "body": "Commit cherry picked\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/50253446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/50254526", "body": "Was applied in 9ce64ba111221a37bdd78204b67330a6120f6c50, several days ago\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/50254526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/50254592", "body": "Pull requests are not bug reports, please see https://trac.ffmpeg.org if you want to report a bug in ffmpeg. But libmfx sounds like this is not unmodified FFmpeg,\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/50254592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52100191", "body": "please submit a bugreport to https://trac.ffmpeg.org/\nthis change looks wrong, non key frames should not be inserted in the index as keyframes\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52100191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52400027", "body": "the 2nd return becomes redundant with this change, also should 0 be allowed for all fields or would it make sense to allow it only for ones where 0 makes sense?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52400027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52400203", "body": "patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52400203/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52401947", "body": "yes, sounds, like a reasonable solution\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52401947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52610620", "body": "patch applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52610620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53174146", "body": "patch applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53174146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53359795", "body": "patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53359795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/57361321", "body": "Applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/57361321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/58597545", "body": "The file is G2M4 not 5\nStream #0:2: Video: g2m (G2M4 / 0x344D3247), rgb24, 1366x768, 47 kb/s, 29.97 tbr, 1k tbn, 1k tbc\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/58597545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59795441", "body": "Your branch contains commits that add conflict markers like \"<<<<<<< HEAD\", which are later removed in seperate commits, also it contains a seemingly random merge of ffmpeg master.\nI cannot merge or cherry pick these patches, please clean this up somehow\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59795441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59798981", "body": "sure, if you like to add audio support.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59798981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59799235", "body": "so do you or someone else have a g2m5 sample to test this code ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59799235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59801327", "body": "this pull request makes no sense\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59801327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59807771", "body": "yes, but it seem/would breaks build on linux\ngcc: error trying to exec 'cc1obj': execvp: No such file or directory\nmake: **\\* [libavdevice/avcapture.o] Error 1\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59807771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59820780", "body": "should lock/unlock_frames() not be static inline ?\niam asking as just inline was historically in C interpreted differently by different compilers. Not sure this issue applies here too\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59820780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60423877", "body": "carl found a g2m5 file, patch applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60423877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60497295", "body": "applied thilos patch, \nthanks to all!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60497295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60948297", "body": "please dont remove unrelated code like asserts or lines from configure, also please dont remove all indention. and do not re-add removed code like dsputil.\nAlso please send patches to the ffmpeg devel mailing list\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60948297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60949565", "body": "also please dont include random c files in other c file like #include \"pcm.c\"  in mlpenc.c\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60949565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61386484", "body": "There are still changes in configure remaining, like the removial of -Werror\n\ntrying to encode with it, the output file is empty\n\nthe end of mlpenc.c is indented quite abit but there are no open brakets, it should look similar to the begin of the file.\nthe whole indention becomes wrong starting at:\n\n``` diff\n+            if (index)\n+                for (filter = 0; filter < NUM_FILTERS; filter++)\n+                    copy_filter_params(&cp->filter_params[filter], &ctx->cur_channel_params[channel].filter_params[filter]);\n+            }\n```\n\ni suspect thats not the only such error in the file.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61386484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/62331429", "body": "Fixed in b44a242c3dfa1225ca4e75135ed5fbe7f0e3c378\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/62331429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63496825", "body": "couldnt the removial of the code setting RTSP_FLAG_LISTEN break some scripts ?\nalso the documentation in doc/protocols.texi  isnt updated and is the \"udp poll timeout occured\" message usefull beyond what was needed for implementing this aka is it intended to be added too ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63496825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63503664", "body": "The pktdata variable seems unneeded, why dont you use buf_temp instead ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63503664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63513303", "body": "patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63513303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63529894", "body": "patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63529894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63552337", "body": "isnt the value of buf_temp after that change exactly what you set pktdata to?\nand pktdata isnt changed after its initialization so why would buf_temp if its used in its place, if its not changed theres no problem with subsequent use.\nalso do you have some reference about the correct placement of @setDataFrame ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63552337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63561865", "body": "line 2981 advances it by copy so it should be exactly the same as pktdata unless iam missing something which is certainly possible\nthanks about your explanation regarding @setDataFrame\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63561865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63566088", "body": "you set pktdata = buf_temp + copy;\nthe next line is bytestream_get_buffer(&buf_temp, rt->flv_header + rt->flv_header_bytes, copy);\nbytestream_get_buffer sets buf_temp = buf_temp + copy\nso at this point buf_temp should be the same as pktdata, if they are not then iam really curious what i am missing\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63566088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63571137", "body": "`bytestream_get_buffer` copies into the 2nd argument the amount of bytes specified in the 3rd from the 1st, the first is also `const uint8_t *` ...\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63571137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64140085", "body": "Patch applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64140085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64823162", "body": "patches applied\nin the future please submit patches to the ffmpeg-devel mailing list, pull requests get occasionally overlooked.\nAlso please send a patch that adds dscp to the documentation\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64823162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64825017", "body": "This break transcoding from 18_221.mlp to wav\nresulting in pages of\nInput stream #0:0 frame changed from rate:48000 fmt:s16 ch:2 chl:stereo to rate:48000 fmt:s16 ch:5 chl:5 channels (FL+FR+LFE+BL+BR)\nLossless check failed - expected fd, calculated 00.\nInput stream #0:0 frame changed from rate:48000 fmt:s16 ch:5 chl:5 channels (FL+FR+LFE+BL+BR) to rate:48000 fmt:s16 ch:2 chl:stereo\nLossless check failed - expected e0, calculated 70.\nalso the output has strongly audible artifacts after the patch\ninput is Stream #0:0: Audio: mlp, 48000 Hz, 5 channels (FL+FR+LFE+BL+BR), s16\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64825017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64825100", "body": "Also can you share a file that this patch improves ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64825100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/69129125", "body": "Posted to ffmpeg-devel, not everyone reads teh github pull requests and changes to the public interface should be seen by everyone\nhttps://ffmpeg.org/pipermail/ffmpeg-devel/2015-January/167354.html\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/69129125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/70187868", "body": "Patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/70187868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71295365", "body": "Yes, its usefull but this does not apply cleanly, also its probably best if you send a patch to the ffmpeg-devel mailing list\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71295365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71495282", "body": "Patchset combined, fate test fixed and applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71495282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71750813", "body": "what is the speed difference of this change when meassured with START/STOP_TIMER over the function ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71750813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71871563", "body": "the relevant values are the last decicycles as they include the earlier ones, also not sure why you disable optimizations. Considering only the >1000 run cases i get ~3880 cycles per run from old.txt and ~3943 from new.txt. Which would indicate that its slower. How can the bug this fixes be reproduced ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71871563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71930146", "body": "Overreads up to 16 bytes are not really forbidden, please see libavutil/frame.h AVFrame.data. Ideally of course no overreads would be better, this one seemed to slightly reduce speed though unless i made a mistake when averaging the values from new/old.txt. An alternative also might be to fall back to C for the last line of the picture or the last pixels of the last line. I wasnt able to see a issue with ffmpeg and valgrind, which is why i asked about how to reproduce it but ffmpeg allocates a few bytes more to allow simple SIMD in filters avoiding alot of special cases to handle odd ends\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71930146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71963882", "body": "See get_video_buffer() in frame.c for example\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71963882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72301392", "body": "The README.md conflicts, the new information should probably be put into doc/\nAlso the docs should link to or contain documentation which works with ffmpeg.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72301392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/73999176", "body": "Patch applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/73999176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/76506390", "body": "patch applied\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/76506390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77245130", "body": "Patch applied\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77245130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77248997", "body": "Patches applied\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77248997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77634839", "body": "patch applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77634839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85468471", "body": "I agree that its best if the author submits his code, but if the author does not intend to do so or does not do so AND there is someone else who wants to do the work to integrate and test it then i prefer that over having to do the integration and testing myself. We now have some qsv code in FFmpeg git but it needs someone to test and if needed fix/improve/maintain it\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85468471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85568069", "body": "@TimothyGu yes, but that does not gurantee that the same patch will apply cleanly to FFmpeg nor that it will work in FFmpeg when applied and conflicts resolved, its much better if code has a dedicated maintainer in FFmpeg and is tested. If you want an example the avisynth commit today applied with 0 conflicts but did not work and required fixes.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85568069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85575362", "body": "@Dreampursue, if there are things missing in FFmpeg, please submit patches to ffmpeg-devel. Also if there is overlap with antons patch then it would be best to keep the code similar to antons code, this should make it easier to move code back and forth between forks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85575362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/88417590", "body": "This code does not build, also please submit patches to the ffmpeg-devel mailing list instead of pull requests.\nlibavcodec/exr.c:882:1: error: expected \u2018=\u2019, \u2018,\u2019, \u2018;\u2019, \u2018asm\u2019 or \u2018**attribute**\u2019 before \u2018static\u2019\nlibavcodec/exr.c: In function \u2018decode_block\u2019:\nlibavcodec/exr.c:996:13: error: implicit declaration of function \u2018pxr24_uncompress\u2019 [-Werror=implicit-function-declaration]\ncc1: some warnings being treated as errors\nmake: **\\* [libavcodec/exr.o] Error 1\nmake: **\\* Waiting for unfinished jobs....\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/88417590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/88653126", "body": "added back the return so the code builds\napplied\nalso, please send future patches to the ffmpeg-devel mailing list\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/88653126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/88890402", "body": "applied\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/88890402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91223079", "body": "On Thu, Apr 09, 2015 at 05:30:22AM -0700, Jonathen Russell wrote:\n\n> @TimothyGu why does it set the background color? It's pointless and visually disruptive. If expunging it isn't acceptible then the user should atleast be given more control over it.\n\nWhy/In which case is it disruptive ?\ncan you show an example?\n\n## [...]\n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nDemocracy is the form of government in which you can choose your dictator\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91223079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91264635", "body": "Please submit the patch for review to the ffmpeg-devel mailing list\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91264635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/93142586", "body": "more recent version on the mailing list, thus closing\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/93142586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/96029871", "body": "if theres a bug or potential improvment remaining please submit a patch to the ffmpeg devel mailing list\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/96029871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/96399912", "body": "this breaks shared libs with mingw, pages of errors like ffmpeg/libavfilter/buffersink.c:127: multiple definition of `av_buffersink_get_frame_flags'\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/96399912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/102610491", "body": "Applied, please also submit an update to the documentation\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/102610491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/102814787", "body": "suggested changes made\napplied\n\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/102814787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/104726848", "body": "This breaks fate, also a little more than \"I'm unsure if this breaks any 3rd party decoders\" is needed.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/104726848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107151884", "body": "This is still full of unrelated changes, also patches should be sent to the ffmpeg-devel mailing list (and you also already did) so closing this\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107151884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107151935", "body": "If you dont have time then please open a bug report on https://trac.ffmpeg.org\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107151935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107167886", "body": "Applied except the packed hack stuff\nThanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107167886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107173456", "body": "No reply, thus closing, theres nothing i can do with a patch that breaks decoding and no testcase it fixes\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/107173456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/108626963", "body": "applied\n\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/108626963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/125010581", "body": "Patch applied by Timo Rothenpieler\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/125010581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299", "body": "On Wed, Apr 25, 2012 at 06:40:36AM -0700, FrostWire wrote:\n\n> out of curiosity, why do you multiply by the double negation of f->ec ?\n> (I'm just a noob looking around)\n\nbecause i want the value added when f->ec is not 0\n\ncould have been written as (f->ec ? X : 0) too\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nThe greatest way to live with honor in this world is to be what we pretend\nto be. -- Socrates\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1256299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764", "body": "On Thu, Dec 13, 2012 at 07:22:57PM -0800, wanzhang wrote:\n\n> Is it more simple and readable when changed to \n> diff = ((~(long)ptr )&(ALIGN-1)) + 1;\n\nyes its a small bit simpler\nchanged\n\n[...]\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nOpposition brings concord. Out of discord comes the fairest harmony.\n-- Heraclitus\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531", "body": "@thomag Do you have a sample h264 file / testcase to reproduce this ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7933531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788", "body": "Issue fixed\nthanks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8838788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513", "body": "How can this issue be reproduced ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9426548", "body": "Are you sure the mkv files generated before this commit where correct ?\nIf so, its probably best to submit a bug report to trac or patch to the ffmpeg-devel mailing list. Few developers follow github.\nIf OTOH it did actually not produce correct files before then something has to be changed/added to the AVParser or a bitstream filter to format the AAC in a way that is compatible with mkv.\nIt would also be possible to allow the user to override this check by checking strict_std_compliance but if the resulting files arent valid that would be a rather half baked solution\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9426548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9429258", "body": "You misunderstand, the question is not if this commit changed a warning to an error but rather if the files that where generated with this warning where valid. If they are not valid, they may fail to play with some players, which would be bad, the intend of the error is to prevent the user from generating such invalid files. Do you have any evidence that the files where valid before ? did you check the mkv spec or test o a wide range of players ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9429258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10547050", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10547050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13967783", "body": "On Fri, Oct 23, 2015 at 12:34:20PM -0700, Lucas de Andrade wrote:\n\n> Why this commit wasn't added to 2.8.1?\n\nBecause noone backported it and noone asked for it to be backported\nSee the thread \"[FFmpeg-devel] FFmpeg 2.8.1\" on the mailing list\nwhere i asked about backports\nFFmpeg is a project based on volunteers ...\n## [...]\n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nDNS cache poisoning attacks, popular search engine, Google internet authority\ndont be evil, please\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13967783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13967809", "body": "On Fri, Oct 23, 2015 at 12:34:20PM -0700, Lucas de Andrade wrote:\n\n> Why this commit wasn't added to 2.8.1?\n\nalso, this does not cleanly apply to release/2.8 so if you want it\nin 2.8.2 then please clone ffmpeg, and backport the commit to\nrelease/2.8, test it and then send me a pull request (per mail not\ngithub for your release/2.8)\n## [...]\n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nGood people do not need laws to tell them to act responsibly, while bad\npeople will find a way around the laws. -- Plato\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13967809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17851448", "body": "On Sun, Jun 12, 2016 at 11:40:03AM -0700, LA wrote:\n\n> libavcodec/videotoolbox.c still has references to h->pps:\n> \n> > libavcodec/videotoolbox.c:107:35: error: no member named 'pps' in 'struct H264Context'\n> >     memcpy(p + 4, h->pps.data, h->pps.data_size);\n> > libavcodec/videotoolbox.c:109:17: error: no member named 'pps' in 'struct H264Context'\n> >     p += 4 + h->pps.data_size;\n\nShould have been fixed by ubitux in aafdad1b454c1656e6ba08822de49fb7caf924f3\nand 4df944920c2b92686751fa44e4ff7429eea1ff28\n## \n\nMichael     GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nFrequently ignored answer#1 FFmpeg bugs should be sent to our bugtracker. User\nquestions about the command line tools should be sent to the ffmpeg-user ML.\nAnd questions about how to use libav\\* should be sent to the libav-user ML.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17851448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682", "body": "codecs should not depend on sizof(AVFrame) due to ABI, AVFrame is part of libavutil and not libavcodec\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838", "body": "Thats not how AVPackets are initilaized, please see how other encoders do it, one way is with ff_alloc_packet2()\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893", "body": "the code should be converted to the new API not a wraper added over the old and otherwise unused code\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947", "body": "This can be calculated with integers which avoid platform specific rounding dependancies (aka bitexact output and behavior between platforms)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3419947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558", "body": "There should be no wraper, also the code in the wraper looks odd, i dont think these checks are needed\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564", "body": "simply not setting coded_frame should be fine\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3428564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509", "body": "The expression stuff outside and inside the loop could be merged. (and the errors ignored before the last iteration)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4762509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "chinshou": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894", "body": "test\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/5590894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "lippit": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870", "body": "I've rebased my changes into a single commit, since they do not really deserve to have separate commits. Hope this is ok now.\n\nThanks,\nGeorg\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/10340870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20744968", "body": "Hi Walter,\n\nthat's already a couple of years ago, just trying to remember what I did \nback then ;)\n\nDid you also try entering the device guid without leading 0x?\n\nIf that does not help, I can set up some FireWire hardware next week and \ntry to reproduce. But I have admit that I haven't used FireWire myself \nfor several years now.\n\nBest,\n\nGeorg\n\n\nOn Friday 2017-02-03 15:09, Walter Sonius wrote:\n\n>\n>Dear lippit,\n>\n>Trying your -dvguid option to use/distinguish multiple dv/hdv camera's at the same time on ffmpeg has been unsuccessful. I don't\n>think its a bug, but me not understanding the correct iec61883 options/parameter syntax.\n>\n>Using two DV camera's each on a separate pci firewire card works when using the -i 0 parameter for card0 and -i 1 for pci card1. But\n>using two DV camera's on the same pci firewire card fails without a working guid. Using dvgrab -guid option with the DV camera's on\n>the same pci firewire adapter works fine.\n>\n>I have filled a bug report with more specific info OS/ffmpeg versions/hardware, could you please have a look?\n>https://trac.ffmpeg.org/ticket/5966\n>\n>\u2014\n>You are receiving this because you authored the thread.\n>Reply to this email directly, view it on GitHub, or mute the thread.[AB1oPyr33kKy_YwEPXYp7OjpoucJ9QRHks5rYzUMgaJpZM4L2XWk.gif]\n>\n>\n>", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20744968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "darrylwally": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173", "body": "I will have an updated patch in a day or two. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15115173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847", "body": "@michaelni Sorry for the extreme delay.  I didn't get a chance to get back to this until now.  New commits are attached.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18358847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900", "body": "@richardpl While I suppose this it is technically correct to handle these cases, were you finding that it was possible to get, for example,  a value of 22 set on bits_per_raw_sample?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3476900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004", "body": "I would argue it's not possible files that way.  The SMPTE 302M standard does not spec any other sizes than 16, 20, and 24 bits per sample.  I was asking if it were possible to set, via command-line, to have that value set to 21,22, or 23 bits per coded sample?  Just curious.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/3752004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132", "body": "Alright.  The original implementation had it this way.  No one at libav mentioned it, hence, it was left this way.  \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200", "body": "While I had considered doing this, I wanted to avoid a monolithic function and thought this would be sufficient.  The old code isn't \"unused\" so much as it's just using the original avcodec_encode_audio interface.\n\nWhat about simply, modfiying the function signature of s302m_encode_frame to something like:\ns302_encode_audio(AVCodecContext *, AVPacket *, AVFrame *);\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207", "body": "I'll clean this up.  I was testing something out and wanted doubles for some reason.  It shouldn't be doubles...\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215", "body": "I'll checkout some other encoders and ff_alloc_packet2.  Thanks.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233", "body": "The original author referenced s->frame for the current coded frame.  How should this be handled if the S302MContext should not contain an AVFrame?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3425233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327", "body": "Ok.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334", "body": "Alright, I'll clean it up.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/3431334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "heldchen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554", "body": "+1\n\nwould love to have xyz2rgb and rgb2xyz this in ffmpeg.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/15152554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "TimothyGu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625", "body": "Please send patch to ffmpeg-devel because it will receive more attention there.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/17781625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/23302585", "body": "Please reopen this pull request as I added one more commit.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/23302585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/23350261", "body": "Damn. Had to backport all the changes to texi2pod.pl too. This should build now.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/23350261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/24110970", "body": "Merged by Michael in 7d75fb381ba774a8d2fa7de0c12140cd465c0255\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/24110970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/49389713", "body": "@db0company We are trying to move towards makeinfo, the successor of texi2html. The init file syntax has changed. My current WIP new init file (originally written by Andreas Cadhalpun) is located at https://gist.github.com/TimothyGu/a09348c8454eb519978a . Feel free to fork it.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/49389713/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53019153", "body": "This is not needed anymore per @ubitux.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53019153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53130499", "body": "Please continue using the mailing list. Nobody really reads GitHub pull requests.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53130499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/58546815", "body": "Is there a sample for this codec that we can use to test?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/58546815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59681062", "body": "Isn't this a driver problem?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59681062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61911622", "body": "@davidherran I suspect you accidentally switched the `-f` and the `-i`:\n\n> ```\n>  ffmpeg -i -f avcapture '0' -i -f avfoundation '0' /Users/user/5.mkv\n> ```\n\nThe `-f` must be in front of `-i`.\n\nP.S. \u00bfHablas espa\u00f1ol?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61911622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61918486", "body": "@davidherran \n\nHola David,\n\nNo hablo espa\u00f1ol mucho ni lo hablo bien porque es mi segundo a\u00f1o aprendiendo espa\u00f1ol en mi escuela. Vivo en los Estados Unidos, pero soy de China, y espa\u00f1ol es mi tercera idioma. Hay muchos mexicanos aqu\u00ed en California y espa\u00f1ol es muy \u00fatil.\n\nVoy a (give you) unas instrucciones para debugar el problema en ingl\u00e9s, pero pienso @thiloborgmann sabe m\u00e1s en el sujeto.\n\nSaludos de Los \u00c1ngeles, y por favor corregir mi (writing)! \n\n---\n\nHi David,\n\nSpanish is my third language so I'm not really good at it. Please correct me in any way you could!\n\nI suspect the order of `1:0` is wrong. Could you please test\n\n```\nffmpeg_master -f avfoundation -i '0:0' /Users/user/1.mkv\n```\n\nand\n\n```\nffmpeg_master -f avfoundation -i '0:1' /Users/user/1.mkv\n```\n\nand report back? Just so you know, the first number is the video device while the second is the audio device. You don't have a video device `1` so that might be causing the error.\n\nIf you still get some error, could you post the log of the failed command? It will help us debug the problem.\n\n---\n\n@thiloborgmann Two questions I have here:\n1. The [docs](https://www.ffmpeg.org/ffmpeg-devices.html#avfoundation) doesn't say you can pass input file names with colon, but the implementation clearly supports a notation with `:` as separators between video and audio devices. Would you mind adding some documentation on that?\n2. Was there a reason you chose `strtok()` over [`av_strtok()`](https://www.ffmpeg.org/doxygen/trunk/group__lavu__string.html#ga3d4270f4ed651c414e2850090b9b77c4) which is NIH'd and Brings More Stability\u2122?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61918486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63751728", "body": "Please send Git-style patches to the ffmpeg-devel mailing list.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63751728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63764152", "body": "First, please do not send pull requests on GitHub anymore.\n\nSecond, send **self-contained** patches to ffmpeg-devel mailing list. \"Self-contained\" means that it is one thing, not multiple things mixed together. In your patch, you mixed together adding a compatibility header, trailing spaces, `av_restrict`, and a bunch of other things that can be separated into other patches.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63764152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/69353741", "body": "The implementation itself should be in compat/, so that it can be shared across files.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/69353741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71742499", "body": "@vkalinsky said:\n\n> FATE is happy (not sure that code covered though)\n\nI don't think that code is covered as the swscale x86 asm is not bit-exact compared to the reference C implementation, and therefore not tested.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71742499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72301556", "body": "@Dreampursue I am closing this. This is @drocon11's WIP repository, and it should be @drocon11 who submits this PR.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72301556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72345912", "body": "@dhead666 It would be cool if you can send the patch to the ffmpeg developers' mailing list as not many people are following our GitHub pull requests.\n1. Subscribe to the mailing list: http://lists.ffmpeg.org/mailman/listinfo/ffmpeg-devel\n2. Check out the branch, and\n   \n   ```\n   git format-patch -1\n   ```\n3. Send your patch as an attachment to ffmpeg-devel@ffmpeg.org.\n\nAlso if you know how to use `git format-patch` that would be even better.\n\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72345912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72347172", "body": "The description in `git send-email` is the commit message, and when the maintainer uses `git am < patch.patch` the commit message will automatically be committed.\n\nIf you would like to attach something that is not to go into the commit message, do it like this: (with `git send-email -1 --annotate`)\n\n``` diff\nFrom 2d59c1ede5885664561b40ca78ae3b8f8f8987c0 Mon Sep 17 00:00:00 2001\nFrom: your name <emai@example.com>\nDate: Wed, 28 Jan 2015 19:19:03 -0800\nSubject: [PATCH] My patch\n\nCOmmitt message herrrre.\n---\n\nMessage that won't be committed.\n\n doc/muxers.texi         | 3 +++\n libavformat/mpegtsenc.c | 6 +++++-\n 2 files changed, 8 insertions(+), 1 deletion(-)\n\ndiff --git a/doc/muxers.texi b/doc/muxers.texi\nindex 7ca6409..52a9cd4 100644\n--- a/doc/muxers.texi\n+++ b/doc/muxers.texi\n@@ -690,6 +690,9 @@ Set the transport_stream_id (default 0x0001). This identifies a\n transponder in DVB.\n @item -mpegts_service_id @var{number}\n Set the service_id (default 0x0001) also known as program in DVB.\n+@item -mpegts_service_type @var{number}\n+Set the program service_type (default 0x01 - TV).  For the list of valid\n+values see ETSI 300 468.\n @item -mpegts_pmt_start_pid @var{number}\n Set the first PID for PMT (default 0x1000, max 0x1f00).\n @item -mpegts_start_pid @var{number}\n```\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72347172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/73996224", "body": "@michaelni LGTM.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/73996224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77971345", "body": "Can you please submit the patches to the ffmpeg-devel mailing list? Not a lot of developers read GitHub PRs.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77971345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/79153269", "body": "@jluce50 I just saw that you pinged the post, which is good. Usually that's all you have to do to get attention.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/79153269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85540655", "body": "@michaelni on libav-devel Anton submitted a patch that is being reviewed and probably will be applied soon: https://lists.libav.org/pipermail/libav-devel/2015-March/068222.html\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85540655/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/86264432", "body": "Please do not submit useless pull requests like this. release/2.6 is a release branch, don't merge that to master.\n\nSee https://ffmpeg.org/contact.htm if you would like to ask any questions.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/86264432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/86264557", "body": "This isn't C++.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/86264557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/86264674", "body": "@vidonme-developer hi, have you read @michaelni's comments above?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/86264674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91121499", "body": "Why not?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91121499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91946588", "body": "Hi @niklesh-lalwani,\n\nThank you for this patch. I have forwarded this to the [ffmpeg-devel@ffmpeg.org mailing list](https://lists.ffmpeg.org/pipermail/ffmpeg-devel/2015-April/171651.html), where it will receive more attention than here. Please subscribe to the mailing list if possible. Thank you!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91946588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/102731019", "body": "@anatolschwarz there are located in the doc/ folder. For this change, you'll want to look at doc/ffmpeg.texi.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/102731019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921", "body": "@thomag I have forwarded your comment to https://ffmpeg.org/pipermail/ffmpeg-devel/2014-September/163453.html, where discussion is more active. Please subscribe to ffmpeg-devel if you have any further comments, and please do not break the thread if you do.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9434069", "body": "@raxon1s Can you upload an affected file to [our bug tracker](https://trac.ffmpeg.org) so we can examine it more closely? Thanks.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9434069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13548893", "body": "@gdsotirov most FFmpeg devs don't read GitHub comments, so please file a ticket on https://trac.ffmpeg.org.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13548893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/16956548", "body": "@jdevelop This commit fixes a potential security issue, which is (and should be) more important for us than backward compatibility.\n\nAlso, if you had objections to this change, you could have replied on the mailing list when this change was proposed.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/16956548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18611116", "body": "@czchmate, in general we don't recommend using MinGW. MinGW-w64 supports everything MinGW supports, but is actually in active development. Either way, you can work around this problem by using `--extra-cflags=-D_WIN32_WINNT=0x0502` (declares requirement for Windows XP SP1).\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18611116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18612071", "body": "@czchmate, there is already a pending patch for doing so: http://lists.libav.org/pipermail/libav-devel/2016-August/078705.html\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18612071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24044523", "body": "This needs an update to the docs, right?", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24044523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248", "body": "Please merge this line with\n\n```\nOBJS-$(CONFIG_AVFOUNDATION_INDEV)        += avfoundation.o\n```\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249", "body": "Also, alphabetical order.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271", "body": "Missing copyright. Also use `AVDEVICE_AVFFRAMERECEIVER_H` as multi-inclusion guard.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279", "body": "Please add copyright.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16581279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728", "body": "No tabs are allowed in FFmpeg.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841", "body": "This needs\n\n```\nCopyright (c) 2014 Thilo Borgmann <thilo.borgmann@mail.de>\n```\n\ntoo as you copied the contents from avfoundation.m.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/16603841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773", "body": "Use\n\n```\nCopyright (c) 2014 Jesse Jiang <qyljcy@163.com>\nCopyright (c) 2014 PPLive Inc. <http://www.pptv.com>\n```\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589794", "body": "Please don't attach thisscript to the commit.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589820", "body": "Put the documentation into doc/platforms.texi\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20589820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20624058", "body": "Trailing whitespace.\n\nAlso how is the API autodetected?\n\nAlso this option should be in the platform section.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20624058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628309", "body": "@qyljcy https://github.com/FFmpeg/FFmpeg/blob/master/configure#L138\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628325", "body": "conver **sion**\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628385", "body": "Is there a reason why this is needed?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628392", "body": "Is there a reason for this change?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628424", "body": "The `test` there is to prevent `gas-preprocessor.pl` from being included twice, make `${gas}` equal `gas-preprocessor.plgas-preprocessor.pl`.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628432", "body": "Is there a reason why this is removed?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628479", "body": "Are these needed? The `check_func_headers` above should disable them if they are not available.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628503", "body": "I think \"Windows RT\" is clearer.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628526", "body": "English grammar:\n\n```\n@item If you wish to compile for Windows RT, for either Windows Store or \nWindows Phone, add @code{--enable-winrtapi} to your configure options. You must\nuse static library for Windows RT.\n```\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628549", "body": "This should be in a separate patch/commit.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628842", "body": "Well, only change what you can test. I wouldn't recommend changing that.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628888", "body": "OK.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/23893792", "body": "It should be `0x01` to be consistent with the min/max.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/23893792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/52121683", "body": "Global variables are not allowed. Put them in a context.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/52121683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/52121691", "body": "Wrong indentation\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/52121691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "ubitux": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491", "body": "Note that you can do something like:\n\n```\nffplay -f lavfi color=black -vf \"drawtext=text='%{e\\:n+123}':fontcolor=white\"\n```\n\nMay I ask what is the purpose behind such feature? Is it just to solve the problem of `n` starting at 0 or 1?\n\nEdit1:\nOh mmh, I should have read your initial post, my bad.\n\nBut another note; now that the counter is stored in a common place (link->frame_count), I wonder if we couldn't have a more global starting number instead. That would make more sense when using for instance in combination with showinfo filter (which prints the n), or actually any kind of filters where the counter is used (anything with timeline for instance, or various expressions).\n\nEdit2:\nTo be more specific, maybe have a look to filters_common_options in avfilter.c, and try to add it here. Unfortunately, if you do that, it will be limited to each filter scope. Maybe we need some global libavfilter options, so when a `-start_n` is specified by a tool, it is populated everywhere. Such thing should be discussed on ffmpeg-devel mailing list or IRC.\n\nI know I'm being pedantic for such a trivial feature, but I believe it can be done way better and have a few benefits in the long term. Adding such option like this now will mean a depreciation burden next time it's implemented generically.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18243491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469", "body": "Note: XYZ is supported for decoding since 0c47c9028be2cf4b1a557e653606fced5b959445\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18244469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mjmvisser": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496", "body": "Good idea (filters_common_options), I hadn't realized n was used outside of the drawtext filter. I'll update this patch when I have a chance and post a link to it on the mailing list.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/18408496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426", "body": "Do to some n00bness on my part, this pull request was empty. I've resubmitted it here: https://github.com/FFmpeg/FFmpeg/issues/24\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19474426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265", "body": "Fixed, start_number is now added directly to var_values[VAR_N] instead of inside the frame_num function.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19644265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370", "body": "Thanks for the feedback, changes made as requested.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19693370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317", "body": "Sure, no problem. Also, in case it's required: I hereby relinquish all copyright control over the above commits to the FFmpeg project.\n\ncheers,\n-Mark\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106", "body": "Good to know. Should I squash my commits, or does a maintainer usually do that?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19700106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19985474", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19985474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764", "body": "I thought of that, too, but in the end I figured it would be easy enough to refactor the eval stuff into a separate function if variables are ever added that vary over time. I surveyed a few other filters, and the \"don't do it until you need it\" approach seems to be consistent.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4775764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "krieger-od": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181", "body": "Thank you for your work.\nI think these commits will be squashed, either by you or by michaelni.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19696181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922", "body": "I have never heard of such feature in FFmpeg project. This is not \"GPL\" Asterisk which forces you to relinquish your patch authorship for it to be accepted.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/19698922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702", "body": "indentation got a bit broken, also at drawgrid_options. Please realign AV_OPT_... values\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734", "body": "Please update also drawgrid doc in same way\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841", "body": "I'd write x=-t, also reference t in all other places where it is meant.\nIn sake of example correctness: if input image size ration exceeds 2.40:1, e.g. 3:1, i think it will draw just two horizontal lines (didn't test though).\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907", "body": "(Feel free to ignore the below.)\nIt may be better to move eval-stuff to separate procedure called from config_input(), so it would be easier to add possibility to reference changing variables, (e.g. timestamp or frame number), just calling eval function from filter_frame() instead of config_input().\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/4764907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "bbcallen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/20476568", "body": "Here is the url\nhttp://video.ifeng.com/data6/video06/2013/05/09/d23f75f5-c0bf-437e-9e09-69044ccd36df.mp4\n\n# \n\nIn my player based on ffplay, got logs below\n07-04 21:02:53.657: E/IJKMEDIA(20785): TCP connection to :80 failed: Connection refused\n07-04 21:02:53.657: E/IJKMEDIA(20785): TCP connection to :80 failed: Connection refused\n07-04 21:02:53.657: E/IJKMEDIA(20785): http://video.ifeng.com/video06/2013/05/09/d23f75f5-c0bf-437e-9e09-69044ccd36df.mp4: I/O error\n\n# \n\nIn Firefox, got headers below\n\nhttp://video.ifeng.com/video06/2013/05/09/d23f75f5-c0bf-437e-9e09-69044ccd36df.mp4\n\nGET /video06/2013/05/09/d23f75f5-c0bf-437e-9e09-69044ccd36df.mp4 HTTP/1.1\nHost: video.ifeng.com\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,_/_;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\n\nHTTP/1.1 302 Moved Temporarily\nServer: IWS/1.2.4\nDate: Thu, 04 Jul 2013 13:06:47 GMT\nContent-Type: text/html\nTransfer-Encoding: chunked\nConnection: keep-alive\nLocation: /data6/video06/2013/05/09/d23f75f5-c0bf-437e-9e09-69044ccd36df.mp4\n\n# \n\nPS:\nSame patch and relpy has been send to ffmpeg-devel, I've been suggested to submit there.\nThis pull request could be closed.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/20476568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "clook": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/21854772", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/21854772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "peili": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/25129243", "body": "When i use av_gettime() instead of AV_NOPTS_VALUE:\n\nInput #0, x11grab, from ':1.0':\n  Duration: N/A, start: 1380069717.100921, bitrate: 221184 kb/s\n    Stream #0:0: Video: rawvideo (RGB[16] / 0x10424752), rgb565le, 1280x720, 221184 kb/s, 15 tbr, 1000k tbn, 15 tbc\nGuessed Channel Layout for  Input Stream #1.0 : stereo\nInput #1, pulse, from 'alsa_output.0.analog-stereo.monitor':\n  Duration: N/A, start: 1380069717.135368, bitrate: 1536 kb/s\n    Stream #1:0: Audio: pcm_s16le, 48000 Hz, stereo, s16, 1536 kb/s\n\nav_gettime() is only called once when streaming started \nPulselib reads packets and change pts:\n    pkt->pts = pd->pts;\n    pd->pts += pd->frame_duration;\n\nSo i think pts of x11 grab and pulselib should be always almost equal as long as hardware capabilities are good enough?\n\nwould it help to set \npkt->pts = av_gettime()\nin pulse_read_packet() instead?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/25129243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lemonlinger": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26672957", "body": "OK. As you said, we should add one more check \"local_rtp_port < 65535\". and then it's perfect~~ :D\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26672957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26674308", "body": "OK, I see. It seems more complicated than i thought. I will try to fix that. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26674308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26995684", "body": "I add retry mechanism when failed to create a usable pair of ports.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/26995684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27186936", "body": "The punching-hole packets are sent by client just after receiving reply of \"SETUP\" request and before \"PLAY\" request.\nSo, we should inject into the process of establishing sessions via RTSP.\nBut there is no code in file ffserver.c  to receive the punching-hole packets.\n\nFor keeping framework of ffmepg&ffserver, other files are also changed except for upd.c.\n\nThe punching-hole packets are not necessary. If client and server are in the same network or behind  the same NAT, it's OK, and client will not have to send punching-hole packets. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27186936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27756159", "body": "hi @michaelni , i found this bug when i deployed and started ffserver on a public host. i cannot play any stream via vlc on my own pc. I used wireshark to capture the packets, and found the remote udp port is not the one mapped by client's NAT but  the client port in \"SETUP\" request header. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27756159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/29956163", "body": "Sorry, it's my fault. I will think it over and try hard to find an elegant way to fix this bug.:)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/29956163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "crossle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27149107", "body": "`ffplay http://m1.file.xiami.com/282/23282/343749/1769075752_709488_l.mp3`, can not playback.\n\n`$ curl -I  http://m1.file.xiami.com/282/23282/343749/1769075752_709488_l.mp3`, shown  `Content-Encoding: utf-8`, `libavformat/http.c`  return AVERROR. can't playback.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27149107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vkalinsky": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27177851", "body": "Unfortunately QTKit has ObjC API only.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27177851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71848124", "body": "@michaelni \nyuv420p to rgb24 of (8,72,136, ..., 2048)x(8,72,136, ..., 2048) image, --disable-optimizations --enable-debug=3, i5 2.3 GHz:\n\nhttp://pastebin.com/YuHka2Li - before\nhttp://pastebin.com/LfVcgZtA - after\n\nclean csv files:\nhttp://beta.kalinsky.ru/wtf/new.txt\nhttp://beta.kalinsky.ru/wtf/old.txt\n\nI'm not sure how to interpret these results correctly, but I guess the main metric is decicycles/run.\nbefore: mean(cycles/runs)=39259, sd 17239\nafter: mean(cycles/runs)=37187, sd 12052\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71848124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71911312", "body": "It's classic buffer over-read. In my case I just enabled GuardMalloc (osx/xcode) and made the yuv420p-rgb conversion of buffer with size divisible by 16 (to make small overruns detectable by GM). I guess you can run this conversion under valgrind and get the same result.\n\nBTW, there's the same problem in avx-related code in libswscale/input.asm. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71911312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71959050", "body": "@michaelni \n\n> _ffmpeg allocates a few bytes more to allow simple SIMD in filters avoiding alot of special cases to handle odd ends_\n\nHow does it do that? As far as I grep, ffmpeg is using avpicture_get_size, which doesn't take into account those possible overreads.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71959050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72285976", "body": "What's the point of (also) having avpicture_get_size which returns size that can't be safely used? People use it as-is everywhere: http://code.openhub.net/search?s=avpicture_get_size (me either until recently). Shouldn't that magic number 16 be there instead of users' code?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72285976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "asan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27321890", "body": "I fixed make fate and removed float, can you reopen PR, or i need to create new?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27321890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27329798", "body": "awesome, tnx a lot\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/27329798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "anssih": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/31432675", "body": "I think instead of `int event` you could use an enum (PLS_TYPE_UNSPECIFIED, PLS_TYPE_EVENT, PLS_TYPE_VOD or similar).\n\nIs there something preventing us from jumping to unplayed segments before the first played segment in event playlists? Or did you just not implement it since it was harder (that is OK of course)?\n\nBTW, I have a larger HLS patchset in progress here: https://github.com/anssih/FFmpeg/tree/hls-patchset-wip\nNo need to necessarily rebase, though, I can rebase on top of yours if this can be merged soon :)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/31432675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/31525833", "body": "> > I think instead of |int event| you could use an enum\n> >  (PLS_TYPE_UNSPECIFIED, PLS_TYPE_EVENT, PLS_TYPE_VOD or similar).\n> \n> You're right, and I'll fix it ASAP. But this should change the finished\n> flag handling too, since not only VOD playlist may contain EXT-X-ENDLIST\n> theoretically. For example, duration would be calculated for VOD type\n> playlists only.\n\nI'm not sure I follow. EVENT and UNSPECIFIED playlists can have a duration too if they have ended (and X-PLAYLIST-TYPE is not mandatory by the spec).\n\nBTW, I've posted a new version of my patchset here:\nhttps://github.com/anssih/FFmpeg/tree/hls-patchset-wip-2\nI'd also like to change my mind a bit, I think it'd be nice if you could rebase on top of that. :) The seeking code has seen quite a few changes and you are in a better position to test your patch than I am. I don't expect to make any big changes to seeking before I'll apply the patchset, so it should be OK to work on top of.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/31525833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/39673755", "body": "Rebased and committed as cdbd9e218d44d2bcf14f5e07894fa4f72a4696e2.\n\nThanks and sorry for the delay.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/39673755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "vkosh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/31443778", "body": "> I think instead of |int event| you could use an enum\n> (PLS_TYPE_UNSPECIFIED, PLS_TYPE_EVENT, PLS_TYPE_VOD or similar).\n\nYou're right, and I'll fix it ASAP. But this should change the finished \nflag handling too, since not only VOD playlist may contain EXT-X-ENDLIST \ntheoretically. For example, duration would be calculated for VOD type \nplaylists only.\n\n> Is there something preventing us from jumping to unplayed segments\n> before the first played segment in event playlists? Or did you just not\n> implement it since it was harder (that is OK of course)?\n\nWell, there's no problem of finding and jumping to segment in the past. \nBut I run into another problem which prevented me to implement such a \nfeature yet.\nI use XBMC as ffmpeg client for playing HLS. XBMC player uses stream \ntimestamps/duration for seekbar rendering, so first timestamp of the HLS \nstream (which is actually timestamp of packet in the first played \nsegment) defines start time of the seekbar. And thus user can't seek \nbefore the first played segment.\nI tried to workaround this by calculating first timestamp from first \nsegment in the event playlist, so AVFormatContext.start_time pointed to \ntimestamp of the first playlist segment. But I didn't find the solution \nto detect the timestamp without playing the first playlist segment.\n\n> BTW, I have a larger HLS patchset in progress here:\n> https://github.com/anssih/FFmpeg/tree/hls-patchset-wip\n> No need to necessarily rebase, though, I can rebase on top of yours if\n> this can be merged soon :)\n\nLooks very nice! BTW I thought about pulling seek_\\* vars to variant \nplaylist struct too - it's more correct then handling them on HLSContext \nlevel.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/31443778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/31590752", "body": "@anssih rebased on top of your patchset, added enum for playlist type, and made some simplifications concerned your changes. E.g. removed first_seq_no and its handling, and removed (seek_timestamp < first_timestamp) check since the similar check exists in find_timestamp_in_playlist()\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/31590752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369", "body": "Added a \"seek_timestamp - first_timestamp\" in check condition to cover a case when first VOD segment starts from non-zero timestamp.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/8574369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mifi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/33502251", "body": "No :)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/33502251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cuilizhong": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/35230165", "body": "yun,shenmeyishia.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/35230165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tuoxie007": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36704101", "body": "I built a binary from source doc/example/remuxing.c, and run it on Android.\nThe test video file is http://clips.vorwaerts-gmbh.de/VfE_html5.mp4\n\nI got a error, the log is\n\nshell@android:/data/local $ ./remuxing VfE_html5.mp4 out.mp4  \nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from 'VfE_html5.mp4':\n  Metadata:\n    major_brand     : mp42\n    minor_version   : 1\n    compatible_brands: mp42avc1\n    creation_time   : 2011-03-16 10:41:51\n  Duration: 00:01:00.08, start: 0.000000, bitrate: 699 kb/s\n    Stream #0:0(eng): Video: h264 (Constrained Baseline) (avc1 / 0x31637661), yuv420p(tv, smpte170m), 640x360, 633 kb/s, 24.04 fps, 24.04 tbr, 2500 tbn, 5k tbc (default)\n    Metadata:\n      creation_time   : 2011-03-16 10:41:52\n      handler_name    : Apple Video Media Handler\n    Stream #0:1(eng): Audio: aac (mp4a / 0x6134706D), 44100 Hz, mono, fltp, 62 kb/s (default)\n    Metadata:\n      creation_time   : 2011-03-16 10:41:53\n      handler_name    : Apple Sound Media Handler\nOutput #0, mp4, to 'out.mp4':\n    Stream #0:0: Video: h264 (avc1 / 0x31637661), yuv420p(tv, smpte170m), 640x360, q=2-31, 633 kb/s, 90k tbn, 5k tbc\n    Stream #0:1: Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, mono, fltp, 62 kb/s\n[mp4 @ 0x3417e0] Tag avc1/0x31637661 incompatible with output codec id '28' ([33][0][0][0])\nError occurred when opening output file\nError occurred: Invalid data found when processing input\n\nI checked the comment of codec_tag, it said the default value will be used if the codec_tag is not set by user, so I set the codec_tag to 0, and it works fine.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/36704101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "essentia0": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40518996", "body": "Nevermind, thought code_size was bytes size. Sorry about that one.\n\n> Le 15 avr. 2014 \u00e0 18:18, Michael Niedermayer notifications@github.com a \u00e9crit :\n> \n> also the commit message must explain why a change is done\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/40518996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "yudenzel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41065774", "body": "Sadly, I could hardly reproduce the crash by setting up a new project.\n\nBut it happens in my project very frequently.\n\nAnd here is some backtrace.\n\n![00](https://cloud.githubusercontent.com/assets/4387218/2768043/6ffe7c94-ca3f-11e3-8594-b207de39c1de.png)\n![01](https://cloud.githubusercontent.com/assets/4387218/2768044/70016d5a-ca3f-11e3-96a3-f886cd66e552.png)\n![02](https://cloud.githubusercontent.com/assets/4387218/2768045/700347d8-ca3f-11e3-949e-a70b6ad1cc23.png)\n![03](https://cloud.githubusercontent.com/assets/4387218/2768046/7005ec9a-ca3f-11e3-9add-822edd546f23.png)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41065774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41159280", "body": "I found that the crash would happens on some special kind of data.\n\nAnd here is a data sample which will cause the crash.\n\nThe yuv file is a YUV420P format data with 1280x1440 size.\nhttps://drive.google.com/file/d/0B-HCOiDVVtmTOHlabE9pazE1dkE/edit?usp=sharing\n\nyuv420_rgb24_mmx(ext) will crash on this data.\n\nBut it will not crash if you provide extra 4 bytes after the data or configure and make libswscale with --disable-mmx and --disable-mmxext provided.\n\nAnd I was confused why it would not crash on other data.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41159280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41470960", "body": "It seems that the crash cannot be reproduced after pulled from server.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/41470960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "KonradIT": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44418564", "body": "Shall I add .md to the other files? Or close PR and issue?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44418564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44448548", "body": "Ok, so I added the missing .md extentions and added more markdown syntax for titles, lists, headings... New commits are:\n- 5588341f98462b2dd3d7f4b50ecdd234440e3358\n- b8d8cd8d555ecc0fc0b8fbb109732ee72deb46c0\n- 3ea40e9ae2f96cf2717a5724ed172162371269ca\n- e2a53fdfe2dc4be854f13f1612b283d001cded57\n- 33da1f29218dab5e2189eb3b6d787bba11e4fccd\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44448548/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44454872", "body": "Line 6 fixed by 2fb3ef0eb11058e67abd39b05092d3b8116c4cce\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44454872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44458445", "body": "OK, now? https://github.com/KonradIT/FFmpeg/blob/master/INSTALL.md\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44458445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44460175", "body": "Here you go: b3a8e09a76c6bcda53368b239c2c569dc7261329\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44460175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "llogan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44443744", "body": "Hi. Thanks for the contribution. If you markup and rename the other files referenced in README (LICENSE and INSTALL), then I'll be happy to merge it.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44443744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44459829", "body": "What about using `blah` instead of ```blah```? There should be a blank line above `2.` and above `3.` in INSTALL.md. That should be all of the requested changes.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/44459829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77018237", "body": "Hi, thanks for the contributions, but few of us look at the github pull requests. The official place to send patches is the ffmpeg-devel mailing list where you can get a more comprehensive review. Would it be possible for you to send your patches there? If not then we can probably deal with github, but we may overlook it or forget. For some general info see http://www.ffmpeg.org/developer.html\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77018237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164", "body": "These may look better as an ordered list rather than an unordered list with numerals. Refer to the [markdown syntax](http://daringfireball.net/projects/markdown/syntax#list). (Also, please disregard my previous comments on the older commits; I commented before viewing your newer commits.)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737", "body": "We are almost there. Thanks for the updates so far. The look of the raw text is more important than the markdown rendered look, so it should be given priority, but I think both can be made to look good.  This line can be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756", "body": "Please add four spaces to the beginning of this line.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759", "body": "This line can also be restored.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769", "body": "Same with this line. The only other blocking nit is the extra backticks for the code spans. Unless I'm wrong I think one backtick on each side of the word should suffice instead of three.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6479769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "jbenden": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/48484459", "body": "The reason is that 'avcapture' doesn't disable itself on non-OS X platforms. I've briefly looked around, but I cannot figure out why it does that. Maybe someone with more experience can help...\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/48484459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/48489571", "body": "I figured it out and added the necessary change to configure.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/48489571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53069830", "body": "I have fixed the requested changes.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53069830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53090361", "body": "Ok, have a look again. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/53090361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59771055", "body": "I've updated the code to merge appropriately with master branch.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59771055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59782482", "body": "I've added a blog post about using this device. See it here: http://www.benden.us/journal/2014/avcapture-mac-os-x-screen-recording/\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59782482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59797990", "body": "Ok, I will clean up the commit.\n\nOn a side note, should I add audio capture support to this module? It might be better than using sox. Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59797990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59803679", "body": "Ok, I cleaned up the merges. Can you merge it easily now?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59803679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59810841", "body": "I fixed the Linux build problem. I am getting a linking error though. Not sure if it is due to code rot or if there is a problem. I'm researching this matter.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59810841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59814580", "body": "It seems the updated configure script fixed the linking issues. I am about to test and commit audio support to this device.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59814580/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59829977", "body": "I changed them to static inline.\n\nI have a branch ready for testing that includes audio support. It is working locally, but has a few pops and clicks. I'm not sure of why it is doing this. Can anyone offer advise?\n\nThe branch is located here: https://github.com/jbenden/FFmpeg/tree/avcapture-audio\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59829977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59832928", "body": "As far as the sound branch goes, if you set the rate to 30; everything seems much better. So there is some sort of disconnect between the two streams rates (the video rate verses audio rate).\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59832928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59969291", "body": "I now have a branch where I've merged avcapture with avfoundation. https://github.com/jbenden/FFmpeg/tree/avfoundation\n\nIt experiences the same troubles that plagued avcapture; namely that the frame rate must be fixed at 30 or the sound is sped up. Additionally, it does NOT seem as if any of the arguments passed to ffmpeg are honored - I had to hard code my device indexes to even test this out.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59969291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60418534", "body": "How come the command-line arguments are still not read? I still have to hard-code a video_device_index to use and list_devices doesn't work. Is it my copy or a general problem?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60418534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60420837", "body": "I've updated to the latest code, still it doesn't read the command-line options for avfoundation correctly.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60420837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60420989", "body": "In case people are curious, the FFmpeg mailing list post is here: https://ffmpeg.org/pipermail/ffmpeg-devel/2014-October/164470.html\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60420989/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60425045", "body": "Thilo, you have an off by one calculation in listing supported devices. In the for loop for desktop screens, it should be i + index + 1.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60425045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60483255", "body": "ffmpeg -f avfoundation -i \"\" -list_devices true\n\nThis does not list the available devices, like it should.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60483255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60484705", "body": "That did the trick! (Note I patched the n+1 problem in display enumeration)\n\n\u2192 ffmpeg -f avfoundation -list_devices true -i \"\"                 10/25 @ 07:15\nffmpeg version N-67141-ge56425d Copyright (c) 2000-2014 the FFmpeg developers\n  built on Oct 24 2014 10:19:51 with Apple LLVM version 6.0 (clang-600.0.54) (based on LLVM 3.5svn)\n  configuration: --prefix=/usr/local/Cellar/ffmpeg/HEAD --enable-shared --enable-pthreads --enable-gpl --enable-version3 --enable-nonfree --enable-hardcoded-tables --enable-avresample --enable-vda --cc=clang --host-cflags= --host-ldflags= --enable-libx264 --enable-libmp3lame --enable-libxvid\n  libavutil      54. 11.100 / 54. 11.100\n  libavcodec     56.  9.100 / 56.  9.100\n  libavformat    56. 10.100 / 56. 10.100\n  libavdevice    56.  1.100 / 56.  1.100\n  libavfilter     5.  2.100 /  5.  2.100\n  libavresample   2.  1.  0 /  2.  1.  0\n  libswscale      3.  1.101 /  3.  1.101\n  libswresample   1.  1.100 /  1.  1.100\n  libpostproc    53.  3.100 / 53.  3.100\n[AVFoundation input device @ 0x7f939b514280] AVFoundation video devices:\n[AVFoundation input device @ 0x7f939b514280] [0] Built-in iSight\n[AVFoundation input device @ 0x7f939b514280] [1] Capture screen 0\n[AVFoundation input device @ 0x7f939b514280] AVFoundation audio devices:\n[AVFoundation input device @ 0x7f939b514280] [0] Soundflower (64ch)\n[AVFoundation input device @ 0x7f939b514280] [1] Built-in Microphone\n[AVFoundation input device @ 0x7f939b514280] [2] Soundflower (2ch)\n[AVFoundation input device @ 0x7f939b514280] [3] Built-in Input\n: Input/output error\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60484705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61982839", "body": "add -r 30 to the list of arguments. This helps my recordings.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61982839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/62002677", "body": "Well the sync is OK now, but there is popping clicks in the audio. I'm not sure why that's happening, maybe @thiloborgmann can shed some light on the situation.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/62002677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "cbenhagen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52401380", "body": "you are right. it would be nicer to allow it only where it makes sense. what about adding an optional argument (allow_zero) to the function? would that feel right?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52401380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52572622", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/52572622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "EZWrighter": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/58550313", "body": "I will attempt to create one...currently I do not have any public videos available.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/58550313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/58563649", "body": "Here is a short sample of the G2M video codec recorded on Windows 8, using the latest Go To Meeting software as of 10/09/2014: http://static.mediamobz.com/G2M5_sample_video.wmv\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/58563649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59813745", "body": "Sorry, still working on getting a sample.  Apparently the Go To Meeting windows client does not produce the newer G2M5 encoding.  I believe that the newer codec is only used on the Mac G2M client.  I don't have a Mac to test, so I have asked someone to help me get a test sample, it might take some time.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59813745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "OneOfOne": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59681283", "body": "It uses `uvcvideo`, so it is possibly a driver issue.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59681283/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "davidherran": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59793217", "body": "Hello, I have been using the merge since it launched and it works great in Maveriks. Thank you very much for this sensational contribution. The only thing is that I could not set up the audio with OpenAL. Try to do the same to set it but I could not. I'm using SOX a python script with multhreding to capture audio and video simultaneously. \n\nThank you very much.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59793217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59850558", "body": "YEA!!! OPENAL\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59850558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61871902", "body": "Hello, thank you very much for the help. I compiled the new version of the branch-avcapure audio. These are devices that shows me the system:\n\n[AVFoundation input device @ 0x7faf53d0cfe0] AVFoundation video devices:\n[AVFoundation input device @ 0x7faf53d0cfe0] [0] iSight\n[AVFoundation input device @ 0x7faf53d0cfe0] AVFoundation audio devices:\n[AVFoundation input device @ 0x7faf53d0cfe0] [0] Built-in Microphone\n[AVFoundation @ 0x7faf53d0cfe0 input device] [1] Built-in Input\n\nBut I have doubts on how to execute the command. I need to capture video of your screen and audio from the microphone, but the camera is triggered and recording the screen but with many interruptions:\n\nffmpeg -i -f avcapture '0' -i -f avfoundation '0' /Users/user/5.mkv\n\nas to differentiate avfoundation [0] Built-in Microphone and not [0] in iSight\navfoundation -f -i '0'\n\nUse this version https://github.com/jbenden/FFmpeg/tree/avfoundation since the master does not recognize my microphone.\n\nThank you very much!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61871902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61874678", "body": "Hi! Thank you very much for answering. I'm on a macbook pro with mavericks.\nRun the command as you indicate and captured video from my isight camera is not from my screen.\n\nI apologize if I did not understand. I need to capture video from my desk and microphone audio.\n\nThanks again\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61874678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61875495", "body": "Ok... Muchas gracias!!!!!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61875495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61912286", "body": "Yes, I am from Colombia, how are you? I take and I tell ... finished compiling FFMPEG master version, and success !!! recorded video and audio from my desk ... but I deleted audio frames ... audio cuts out and comes back when I play video. I'm on a Mac book pro with mavericks.\n\nuse this command: ffmpeg_master avfoundation -f -i '1: 0' /Users/user/1.mkv\n\nGreetings from Colombia !!!!\n\nSi, soy de Colombia, como est\u00e1s? Aprovecho y te cuento... acabe de compilar la versi\u00f3n master de FFMPEG, y \u00e9xito!!! grabo video de mi escritorio y audio... pero me borra frames de audio... el audio se corta y regresa cuando reproduzco el video. Estoy en un Mac book pro con mavericks.\n\nuse este comando: ffmpeg_master -f avfoundation -i '1:0' /Users/user/1.mkv\n\nSaludos de Colombia!!!!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61912286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61978076", "body": "@TimothyGu \n\nHello and of course with pleasure ... my English is also very bad, so excuse me ...\n\nHola David,\nNo hablo espa\u00f1ol mucho ni lo hablo bien porque es mi segundo a\u00f1o aprendiendo espa\u00f1ol en mi escuela. Vivo en los Estados Unidos, pero soy de China, ( y espa\u00f1ol \u2014>  y \"el\" espa\u00f1ol ) (es mi tercera idioma \u2014 > es mi \"tercer\" idioma). Hay muchos mexicanos aqu\u00ed en California (y espa\u00f1ol \u2014> y \"el\" espa\u00f1ol) es muy \u00fatil.\nVoy a (give you \u2014> darle o darte) unas instrucciones para (debugar \u2014> depurar o esta bien usar el termino en ingles debug) el problema en ingl\u00e9s, pero pienso @thiloborgmann sabe m\u00e1s en el (sujeto \u2014> asunto o tema).\nSaludos de Los \u00c1ngeles, y por favor corregir mi (writing \u2014> Escritura)!\n\nUse new version of FFMPEG master with the command -> \n\nffmpeg_master -f avfoundation -list_devices true -i \"\"\n\nand this is the list of devices that I have:\n\n[AVFoundation input device @ 0x7fe40b50d060] AVFoundation video devices:\n[AVFoundation input device @ 0x7fe40b50d060] [0] iSight\n[AVFoundation @ 0x7fe40b50d060 input device] [1] Capture screen 0\n[AVFoundation input device @ 0x7fe40b50d060] AVFoundation audio devices:\n[AVFoundation input device @ 0x7fe40b50d060] [0] Built-in Microphone\n[AVFoundation @ 0x7fe40b50d060 input device] [1] Built-in Input\n\nto execute the command\n\nffmpeg_master -f avfoundation -i '1:0' /Users/user/1.mkv\n\nCapture great video from my desktop, but the audio has cut frames. that's the thing ...\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61978076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61988660", "body": "@jbenden Hello and tks...\n\nplease see the example in video  http://youtu.be/d8kfFlh_yeg \n\nCommand: \n\nffmpeg_master -f avfoundation -i '1:0' -r 30  /Users/davidherran/1.mkv\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61988660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/62004881", "body": "ok. thats is correct, this is the correct term or word \"popping\" tks\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/62004881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "thiloborgmann": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59895119", "body": "This introduces a lot of code redundancy by introducing the avcapture device.\n\nI think the avfoundation device should be extended to include the display inputs.\n\nAlso the audio issues can be solved for all inputs in one device.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/59895119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60207543", "body": "I'm currently adapting your changes but need some more days to do it.\nExcept the 30fps issue, I expect the issues to be solvable.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60207543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60399122", "body": "I've just posted a patch to ffmpeg-devel.\nThanks, Joe!\nRemarks welcome. \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60399122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60477603", "body": "I teste yesterday on a mini with no video devices so maybe this is true. Will test again later today. \n\nI used: -i \"#\" and -i \"Captire screen #\" which are working for me. \n-video_device_index should also work. \n\nWhat command line does not work as expected for you?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60477603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60484409", "body": "In that case -list_devices is interpreted as an output option. Move it bevore -i \"\".\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60484409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60485709", "body": "Your fix of the device listing works only if there are video devices available...\n\nFixed differently and updated the patch on ffmpeg-devel.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/60485709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61873456", "body": "Interesting, on what hardware are you operating?\n\nFor the command, use\nffmpeg -f avfoundation -i \"0:0\" /Users/user/5.mkv\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61873456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61875019", "body": "For screen capturing you should use current git HEAD.\n\nIf the microphone is an issue with git HEAD, then please report this issue in detail - best would be to open a new ticket on trac.ffmpeg.org if you think it is a bug.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61875019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61936197", "body": "1. will have a look as soon as I can find some time.\n2. hm no, I think I copied that from another filter... going to change that when time comes, too.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61936197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "greeshmab": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61307350", "body": "hi,\ni have made required changes\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/61307350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jeffreywescott": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63517593", "body": "I believe `buf_temp` is used to determine whether the loop terminates:\n\n``` c\ndo { ... } while (buf_temp - buf < size);\n```\n\nIt's also changed just below the place where we use it to initialize `pktdata`. Perhaps I'm not understanding what you mean?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63517593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63557935", "body": "No, `buf_temp` is not exactly the same as `pktdata`. We want the `buf_temp` as it was set on line 2966. It gets re-set on line 2981, but we need to use it on 3006 -- that's why the `pktdata` variable is there.\n\nRTMP (as I'm sure you're aware) is one of the most horribly under-documented protocols in existence. [Here's more info on using `@setDataFrame` w/ `onMetaData`.](http://help.adobe.com/en_US/adobemediaserver/devguide/WS5b3ccc516d4fbf351e63e3d11a0773d56e-7ff6Dev.2.3.html#WSC2D25B71-1929-449b-B8EF-1FA5A5562CE3Dev.2.3)\n\nBasically, you use `@setDataFrame` to package-up data that you want player clients to receive as soon as they connect to the server. For other callbacks (such as `onTextData` and `onCuePoint`), you want them to be received by player clients  _as they are sent by the publisher_, not when the player client connects.\n\nAt first, I tried just using `@setDataFrame` for `onMetaData` packets, but got errors when trying to write to Adobe's FMS. When I added it in also for `|RtmpSampleAccess`, things started working again. It was quite a bit of trial and error to get it all working.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63557935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63563397", "body": "I remember trying to use `buf_temp` at first, but ended up declaring another variable because it _didn't_ contain exactly the data we want. I don't think that `rt->flv_header + rt->flv_header_bytes` and `buf_temp + skip + copy` point to the same place.\n\nI also think the code is much more readable; `buf_temp` is used rather generically throughout the code, whereas `pktdata` is specifically when we're trying to look at which notify command is being invoked.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63563397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63568205", "body": "Maybe I'm misunderstanding something, but I was under the impression that `bytestream_get_buffer` copied `copy` bytes into `buf_temp` starting at memory address `rt->flv_header + rt->flv_header_bytes`. If that's not what's happening, then what is the 2nd argument?\n\nSorry I'm having trouble remembering, exactly. :-P\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63568205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63572257", "body": "Ah. Okay. My bad. Sorry -- it's been a little bit since I looked at this code.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/63572257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64056908", "body": "@michaelni -- You were absolutely right. I updated the PR to remove the redundant variable.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/64056908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "idstein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/69357572", "body": "I totally agree with you! Yet there is no other part of ffmpeg that uses pthread_cancel. So I felt there would be no need to share it. \nEspecially, as canceling a thread from the outside seems to be a very fragile approach.\nAs this specific implementation offers also a non-blocking I/O logic it seems to already mix up logic. \nI would suggest to look for another cancelation mechanism without such a blocking recv with an endless loop.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/69357572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/22733822", "body": "recv may not be interrupted correctly on all POSIX implementations. One expected behaviour would be that any interrupt (signal such as SIG_CANCEL_SIGNAL) will set errno to EINTR.\n\nBut BSD behaviour may just lead to an interrupt by our signal and restart the in progress function recv. In that case we may need to wait for any sort of interrupt or socket close that will let us continue the execution flow.\n\nSome proposed fixed could include setting a timeout for recv until it continues with the regular execution. We could then also complete replace the cancel mechanism and use a volatile cancel flag.\n\nWe could also change the SA_RESTART flag to restart the interrupted system call (here recv). But that would require sigaction and have an influence on the signal action handler table. This table has a process-wide scope and would affect all threads within FFMpeg.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/22733822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/22769702", "body": "It may happen that the cancel state is changed between two AS-safe method invocations. The behaviour then is unpredictable. Make sure to end up in a consistent state by ensuring only a very small amount of logic between AS-safe calls. Otherwise the incoming signals are not clearly verified!\n\nAn awkward  behaviour may occur in the following flow:\n- AS-Safe call\n- some other calls ( <-- from another thread a signal is for SIG_CANCEL_SIGNAL enqueued)\n- setcancelstate to enable (SIG_CANCEL_SIGNAL still pending)\n- thread_canceled returns true\n\nYet, that that could be an expected behaviour. It all depends on the AS-safe method invocations. Still the thread will not cancel before thread_canceled has been checked and the user logic has agreed to cancel this thread.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/22769702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "KevinJW": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71436634", "body": "OK, I'll port it forward and submit it,\n\nThanks\n\nKevin\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71436634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71683247", "body": "Arg, Avid appears to encode the way ffmpeg does...I give up closing...\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/71683247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/74490309", "body": "submitted squashed patch to mailling list\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/74490309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dhead666": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72345745", "body": "fixed and rebased.\nI forgot to add this fix https://trac.ffmpeg.org/ticket/4118\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72345745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72346763", "body": "@TimothyGu \n\nThanks, I sent the patch with git send-mail (well without description, first time using this method) so I'm closing the PR here.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72346763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72347923", "body": "@TimothyGu thanks you very much for your help :)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/72347923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "selsta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77347582", "body": "Sample url: http://demo.unified-streaming.com/video/caminandes/caminandes-sample-aes.ism/caminandes-sample-aes.m3u8\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77347582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77405445", "body": "okay!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77405445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "rdp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77404607", "body": "please submit patches to ffmpeg-devel instead of using github pull request, thanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77404607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77404660", "body": "please submit patches to ffmpeg-devel instead of using github pull request, thanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77404660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77404755", "body": "please submit patches to ffmpeg-devel instead of using github pull request, thanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77404755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77405000", "body": "please submit patches to ffmpeg-devel instead of using github pull request, thanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77405000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77405102", "body": "please submit patches to ffmpeg-devel instead of using github pull request, thanks!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/77405102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jluce50": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/79045176", "body": "I posted to the list a couple days ago and sent a follow up as instructed by the developer docs, but haven't gotten any responses. Is there anything else I can do?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/79045176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Dreampursue": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85563647", "body": "I think I can do something for it. Now, I'm AE at Intel supporting for Media Server Studio. I can try to push it in Intel firstly. Or, I can do it individually. \n\nFrom my iPhone\nBest regard!\nLi Hui\n\nOn Mar 24, 2015, at 8:01 PM, Michael Niedermayer notifications@github.com wrote:\n\nI agree that its best if the author submits his code, but if the author does not intend to do so or does not do so AND there is someone else who wants to do the work to integrate and test it then i prefer that over having to do the integration and testing myself. We now have some qsv code in FFmpeg git but it needs someone to test and if needed fix/improve/maintain it\n\n\u2014\nReply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/85563647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jgrar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91214753", "body": "@TimothyGu why does it set the background color? It's pointless and visually disruptive. If expunging it isn't acceptible then the user should atleast be given more control over it.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91214753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Deepaksharm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91275881", "body": "ok thanks\n\nOn Thu, Apr 9, 2015 at 8:57 PM, Michael Niedermayer <\nnotifications@github.com> wrote:\n\n> Closed #130 https://github.com/FFmpeg/FFmpeg/pull/130.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/FFmpeg/FFmpeg/pull/130#event-277284323.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/91275881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ThomasVolkert": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/95339277", "body": "Is this still relevant? Otherwise, we can close this ticket!?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/95339277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/98515442", "body": "The content of the patches LGTM.\nSome more detailed comments are added to the individual commits.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/98515442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "anatolschwarz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/102730553", "body": "I didn't find the relevant doc file in the github.\nCan you please instruct me where I can find it.\n\nThanks\n\nOn Sat, May 16, 2015 at 2:15 PM, Michael Niedermayer <\nnotifications@github.com> wrote:\n\n> Applied, please also submit an update to the documentation\n> thanks\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/FFmpeg/FFmpeg/pull/135#issuecomment-102610491.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/102730553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Mischanix": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/104679199", "body": "Additional information:\n\n```\nffmpeg-master -i any.wav -c:a adpcm_ima_wav adpcm_0.wav\nffmpeg-fork -i any.wav -c:a adpcm_ima_wav adpcm_1.wav\nxxd adpcm_0.wav | head -4\nxxd adpcm_1.wav | head -4\n```\n\n## \n\n```\n00000000: 5249 4646 dc10 3700 5741 5645 666d 7420  RIFF..7.WAVEfmt\n00000010: 1400 0000 1100 0200 44ac 0000 803e 0000  ........D....>..\n00000020: 0004 0400 0200 f903 6661 6374 0400 0000  ........fact....\n00000030: >>a4af 3600<< 4c49 5354 a000 0000 494e 464f  ..6.LIST....INFO\n```\n\n## \n\n```\n00000000: 5249 4646 dc10 3700 5741 5645 666d 7420  RIFF..7.WAVEfmt\n00000010: 1400 0000 1100 0200 44ac 0000 803e 0000  ........D....>..\n00000020: 0004 0400 0200 f903 6661 6374 0400 0000  ........fact....\n00000030: >>95ac 3600<< 4c49 5354 a000 0000 494e 464f  ..6.LIST....INFO\n```\n\n## \n\nThe sample count emitted in the 'fact' chunk for older versions is actually just the frame size multiplied by the number of frames.  Allowing small last frames fixes this sample count, as shown in the second xxd output.  The data chunk is still the same length, meaning the last frame is still correctly written as a constant size.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/104679199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/104848436", "body": "Sorry, I don't have any time to work on this.  Perhaps just take the second comment here as a bug report?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/104848436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rainey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/115262811", "body": "Closing this to make it more in-line with the original\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/115262811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/115277069", "body": "Submitting patch to ffmpeg-devel\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/115277069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "BtbN": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997255", "body": "Yes, it seems like 2Pass support was extended.\nBut i'm not sure what you are trying to achive with this patch.\nThere was never anything stopping it from doing 2Pass RC with all presets. It only issues a warning with non-LL presets.\nRemoving the warning is a possibility, but this fundamently changes the CBR rate control selection behaviour.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997637", "body": "the twopass variable is a tristate, it defaults to -1, which means autoselect(Enables it for LL presets).\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997894", "body": "You can, just pass -twopass 0, and the first branch of the if will catch that and set normal CBR.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124998155", "body": "If you reduce the patch to removing the warning and changing the parameter documentation, it's good to merge.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124998155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/127027206", "body": "First thing, could you update your branch so this PR only shows the relevant commit?\nThe most simple way is propably to hard-reset to upstream/master, and then cherry-pick 38c1526 on top of it.\n\nAlso, this changes the default behaviour, which is not desireable. It should only change something if 2pass is actualy set to a non-default value. Doing something when it's explicitly disabled makes no sense, so it should only be activated when requested.\n\nFinaly, did you test if this actualy works?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/127027206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/127219609", "body": "You don't need to re-open pull requests for changes, they follow the branch they are created from.\n\nWith changing default behaviour I mean that currently, if you do VBR encoding with a low-latency preset, you will get the faster non twopass mode. After your changes this would change and one needs to explicitly disable twopass to get the old behaviour.\n\nAlso, keep in mind that github pullrequests are not the normal way of submitting patches for ffmpeg. The github repo isn't allways up-to-date with the primary repository, and only a few people get notifications about what's going on here.\nThere's no need to re-send this patch to the ffmpeg-devel mailinglist now though, as i'll take care of this patch.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/127219609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24226866", "body": "You should bring this up on trac.\nPutting it here has a high chance of just getting ignored by the \nrelevant people.\n\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24226866/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "WereCatf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997564", "body": "The warnings about 2-pass only being available with low-latency presets are useless now. The check for IsLL is redundant, since the code already checks whether twopass variable was enabled or not. Also, the way it was done meant that 2-pass was always enabled for LL-presets even when twopass variable wasn't enabled as long as CBR was used; I do not see the reason for that. It should honour the variable.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997799", "body": "Ah, I missed that. Still, you can't actually disable twopass for LL-presets the way the code was -- it is always forced on.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997997", "body": "I guess I should go back to bed.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124997997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124998527", "body": "Um, unfixed what didn't need fixing.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/issues/comments/124998527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jnorthrup": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812", "body": "too cool\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/736812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "frostwire": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779", "body": "out of curiosity, why do you multiply by the double negation of f->ec ?\n(I'm just a noob looking around)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/1255779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "bygreencn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051", "body": "WinXP(32bit) with MinGW 4.6.1 and VS2010 may cause ffmpeg.exe crash at CommandLineToArgvW.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2248051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "fritsch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576", "body": "This commit produces an issue within our OpenELEC version 3.0b3 that was based on 0.10.6 Cause we are a bit late in the release cycle, we downgraded to 0.10.5.\n\nFor reference and test sample: https://github.com/OpenELEC/OpenELEC.tv/issues/1557\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2255576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "wanzhang": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462", "body": "Is it more simple and readable when changed to \ndiff = ((~(long)ptr )&(ALIGN-1)) + 1;\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/2307462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "thoughtpalette": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845", "body": "Dis guy\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/4181845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "svnpenn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581", "body": "@michaelni I notice `clev` and `slev` defaults have been set at -3dB since first\nintroduced in b5875b9\n\nWhy did you choose this value? It seems to make for poor downmixing\n\n[`ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851`](http://ffmpeg.zeranoe.com/forum/viewtopic.php?t=1851)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6532581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184", "body": "It is useful because they are shorter, same reason you would use `-af` over `-filter:a`\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6842184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22717172", "body": "@atomnuker this commit breaks Windows build:\r\n\r\nhttp://trac.ffmpeg.org/ticket/6484", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22717172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "saste": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935", "body": "Hi, please can you comment about why do you think this is useful (I'm not contrary to the idea but this is a bit inconsistent with how the other tools work)?\n\nAlso posting patches to the ffmpeg-devel mailing-list is preferred since most developers are used to comment there, thanks.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/6839935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "thomag": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737", "body": "Consider an mp4 files with just pps in the h264 stream (no sps in the NAL units, but available from avcc).\nIn this case 'ctx->idr_sps_pps_seen' prevents inserting sps in the extracted h264, which is then unusable.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7931737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638", "body": "Michael,\nHere is a short clip @ https://s3.amazonaws.com/quickfire-public/dwclip2.mp4\nwhich has just PPS in the h264 stream.\nPlease let me know if you need anything else.\nRegards,\nThomas.\n\nOn Fri, Sep 26, 2014 at 9:17 AM, Thomas George <\nthomasg@quickfirenetworks.com> wrote:\n\n> Sure. This is short mp4 vid. with just PPS in the h264 stream.\n> Please let me know if you want anything else.\n> Regards,\n> Thomas.\n> \n> On Thu, Sep 25, 2014 at 7:15 PM, Michael Niedermayer <\n> notifications@github.com> wrote:\n> \n> > @thomag https://github.com/thomag Do you have a sample h264 file /\n> > testcase to reproduce this ?\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/FFmpeg/FFmpeg/commit/ad91bf854b559f1afc42fc06f8a7dfbb75def5c8#commitcomment-7933531\n> > .\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/7942638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stoupeace": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371", "body": "I'm getting a seg fault on cygwin (windows xp). Probably inside open_output_file function (line 87)\n![untitled](https://cloud.githubusercontent.com/assets/9247809/5296651/0d0b8524-7baf-11e4-8d7f-c43a35d7cd53.JPG)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8831371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529", "body": "Thanks for the update!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/8871529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "raxon1s": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236", "body": "That commit completely broke the muxing into mkv container for many video files \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9333236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330", "body": "I had many MPEG-TS Videos and FFmpeg failed to mux them into mkv. Try with some MPEGT-TS video you may find.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9337330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9428597", "body": "I'm 1000% sure that this commite caused the problem.\n\nIn FFmpeg 2.5.3 it works fine. I get the above error \"Error parsing AAC extradata, unable to determine samplerate.\" and because it isn't a warning, but an ERROR it stops.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9428597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9433838", "body": "Yes mate, i'm saying this and i replied to this commit because i was using \"that feature\" already. In FFmpeg 2.5.3 i had some MPEG-TS videos and i successfully converted them into MKV and i had audio + video just fine!! (although the warning was there)\n\nSo, with the new git hub version i tried to convert THE SAME VIDEO into MKV, and it showed me that error, but before even if the warning was there , the output video was working.\n\nI wouldn't write in this commit if i wasn't sure.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/9433838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "multiSnow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10083259", "body": "i is undeclared.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10083259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10084092", "body": "or fix that commit by add 'int' before 'i = 0;'\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10084092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "pigoz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10545765", "body": "Looks like this is breaking the build:\n\n```\nlibavcodec/vda_h264.c:347:9: error: use of undeclared identifier 'h'\n    if (h->is_avc == 1)\n        ^\n1 error generated.\n```\n\nI guess adding `H264Context *h  = avctx->priv_data;` to `vda_h264_decode_slice` would fix it?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10545765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10547293", "body": "Confirm it's fixed. Also the commit seems to help with a lot of samples that were previously broken.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10547293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "FernetMenta": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10548724", "body": "I am sorry, messed this up on copy from mac to Linux system. Our cross-compile system is not ideal for development on libs.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/10548724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Syd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12268413", "body": "thanks so much for this commit @michaelni , this is amazing :)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12268413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ggnull35": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12583069", "body": "Hello Philip,\n\nI tested with driver 355.06, but I see still there is interleaving problem.\nI attached the HEVC file here:\nhttp://we.tl/TcvE9MXOsC\n\nI used below command:\nDISPLAY=:0.0 /opt/ffmpeg/bin/ffmpeg -loglevel verbose -hwaccel auto -strict -2 -i /tmp/out -vcodec libx264 -preset ultrafast -acodec aac -strict -2 -f mpegts -y /tmp/out_decode\n\n(For your note: I renamed the file to \"out\" and placed it under /tmp)\n\nHere is the log:\nDISPLAY=:0.0 /opt/ffmpeg/bin/ffmpeg -loglevel verbose -hwaccel auto -strict -2 -i /tmp/out -vcodec libx264 -preset ultrafast -acodec aac -strict -2 -f mpegts -y /tmp/out_decode\nffmpeg version N-74313-g9c0407e Copyright (c) 2000-2015 the FFmpeg developers\n  built with gcc 4.8 (Ubuntu 4.8.4-2ubuntu1~14.04)\n  configuration: --prefix=/opt/ffmpeglow --enable-shared --enable-nonfree --enable-gpl --extra-cflags='-I/opt/ffmpeglow/include -I/usr/local/include' --extra-ldflags=-L/opt/ffmpeglow/lib --bindir=/opt/ffmpeglow/bin --extra-libs=-ldl --enable-libx264 --enable-libx265 --enable-nonfree --enable-gpl --enable-nvenc --enable-vdpau\n  libavutil      54. 30.100 / 54. 30.100\n  libavcodec     56. 57.100 / 56. 57.100\n  libavformat    56. 40.101 / 56. 40.101\n  libavdevice    56.  4.100 / 56.  4.100\n  libavfilter     5. 32.100 /  5. 32.100\n  libswscale      3.  1.101 /  3.  1.101\n  libswresample   1.  2.101 /  1.  2.101\n  libpostproc    53.  3.100 / 53.  3.100\nRouting option strict to both codec and muxer layer\n    Last message repeated 1 times\n[mpegts @ 0x25204a0] max_analyze_duration 5000000 reached at 5000000 microseconds st:0\nInput #0, mpegts, from '/tmp/out':\n  Duration: 00:00:19.95, start: 1.440000, bitrate: 2622 kb/s\n  Program 1\n    Metadata:\n      service_name    : Service01\n      service_provider: FFmpeg\n    Stream #0:0[0x100]: Video: hevc (Main), 1 reference frame ([36][0][0][0] / 0x0024), yuv420p(tv), 3840x2160 [SAR 1:1 DAR 16:9], 50 fps, 50 tbr, 90k tbn, 50 tbc\n    Stream #0:1[0x101](eng): Audio: aac (LC) ([15][0][0][0] / 0x000F), 48000 Hz, 5.1, fltp, 264 kb/s\n[graph 0 input from stream 0:0 @ 0x250c000] w:3840 h:2160 pixfmt:yuv420p tb:1/90000 fr:50/1 sar:1/1 sws_param:flags=2\n[graph 1 input from stream 0:1 @ 0x250c560] tb:1/48000 samplefmt:fltp samplerate:48000 chlayout:0x3f\n[libx264 @ 0x25470c0] using SAR=1/1\n[libx264 @ 0x25470c0] using cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.2 AVX\n[libx264 @ 0x25470c0] profile Constrained Baseline, level 5.2\n[mpegts @ 0x2546200] muxrate VBR, pcr every 5 pkts, sdt every 200, pat/pmt every 40 pkts\nOutput #0, mpegts, to '/tmp/out_decode':\n  Metadata:\n    encoder         : Lavf56.40.101\n    Stream #0:0: Video: h264 (libx264), -1 reference frame, yuv420p, 3840x2160 [SAR 1:1 DAR 16:9], q=-1--1, 50 fps, 90k tbn, 50 tbc\n    Metadata:\n      encoder         : Lavc56.57.100 libx264\n    Stream #0:1(eng): Audio: aac, 48000 Hz, 5.1, fltp, 128 kb/s\n    Metadata:\n      encoder         : Lavc56.57.100 aac\nStream mapping:\n  Stream #0:0 -> #0:0 (hevc (native) -> h264 (libx264))\n  Stream #0:1 -> #0:1 (aac (native) -> aac (native))\nPress [q] to stop, [?] for help\nUsing VDPAU -- NVIDIA VDPAU Driver Shared Library  355.06  Tue Jul 28 20:55:42 PDT 2015 -- on X11 display :0.0, to decode input stream #0:0.\nNo more output streams to write to, finishing.e=00:00:19.22 bitrate=73641.2kbits/s\nframe=  988 fps= 97 q=-1.0 Lsize=  207074kB time=00:00:20.01 bitrate=84772.1kbits/s\nvideo:191656kB audio:315kB subtitle:0kB other streams:0kB global headers:0kB muxing overhead: 7.866875%\nInput file #0 (/tmp/out):\n  Input stream #0:0 (video): 988 packets read (5281840 bytes); 988 frames decoded;\n  Input stream #0:1 (audio): 938 packets read (647575 bytes); 938 frames decoded (960512 samples);\n  Total: 1926 packets (5929415 bytes) demuxed\nOutput file #0 (/tmp/out_decode):\n  Output stream #0:0 (video): 988 frames encoded; 988 packets muxed (196255838 bytes);\n  Output stream #0:1 (audio): 938 frames encoded (960512 samples); 939 packets muxed (322880 bytes);\n  Total: 1927 packets (196578718 bytes) muxed\n[libx264 @ 0x25470c0] frame I:4     Avg QP:17.75  size:1295014\n[libx264 @ 0x25470c0] frame P:984   Avg QP:20.30  size:194183\n[libx264 @ 0x25470c0] mb I  I16..4: 100.0%  0.0%  0.0%\n[libx264 @ 0x25470c0] mb P  I16..4:  6.7%  0.0%  0.0%  P16..4: 37.4%  0.0%  0.0%  0.0%  0.0%    skip:55.9%\n[libx264 @ 0x25470c0] coded y,uvDC,uvAC intra: 21.6% 62.1% 47.2% inter: 15.3% 17.8% 7.6%\n[libx264 @ 0x25470c0] i16 v,h,dc,p: 15% 83%  1%  1%\n[libx264 @ 0x25470c0] i8c dc,h,v,p: 22% 75%  3%  0%\n[libx264 @ 0x25470c0] kb/s:79455.80\n\nThis is the output of interleaved video screens:\n![out1](https://cloud.githubusercontent.com/assets/8988826/9132614/7feba64a-3cfd-11e5-868c-6df64896e73f.png)\n\n![out2](https://cloud.githubusercontent.com/assets/8988826/9132635/9d77737e-3cfd-11e5-95d3-344d7c13af74.png)\n\nI have system Ubuntu 14.04 LTS with\nLinux encoder 3.18.3-031803-generic #201501161810 SMP Fri Jan 16 18:12:22 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\n\nNvidia driver:\nFri Aug  7 12:13:32 2015\n+------------------------------------------------------+\n| NVIDIA-SMI 355.06     Driver Version: 355.06         |\n|-------------------------------+----------------------+----------------------+\n| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n|===============================+======================+======================|\n|   0  GeForce GTX 960     Off  | 0000:02:00.0      On |                  N/A |\n|  0%   35C    P8     9W / 130W |    154MiB /  2046MiB |      0%      Default |\n+-------------------------------+----------------------+----------------------+\n\n+-----------------------------------------------------------------------------+\n| Processes:                                                       GPU Memory |\n|  GPU       PID  Type  Process name                               Usage      |\n|=============================================================================|\n|    0      1567    G   /usr/bin/X                                     143MiB |\n+-----------------------------------------------------------------------------+\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12583069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12590659", "body": "Thank you for info. So; we need to wait still for a driver update, right ?\n\nI just wanted to say maybe it is not good idea to remove experimental flag as in practic problem continues.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12590659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12593588", "body": "Ah, I see. It is crystal clear now. One last outof topic question, does ffplay support hwaccel ? \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12593588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12978018", "body": "Hello,\n\nA new driver released by Nvidia;\nhttp://www.geforce.com/drivers/results/90393\n\nVDPAU related notes are;\n\n1)Fixed a bug that caused VDPAU to only display the top half of a video frame when decoding and displaying H.265/HEVC encoded video streams.\n\n2)Added support for VDPAU profiles added in VDPAU 0.9:\nVDP_DECODER_PROFILE_H264_BASELINE\nVDP_DECODER_PROFILE_H264_CONSTRAINED_BASELINE\nVDP_DECODER_PROFILE_H264_EXTENDED\nVDP_DECODER_PROFILE_H264_PROGRESSIVE_HIGH\nVDP_DECODER_PROFILE_H264_CONSTRAINED_HIGH\n\nI will try to check if vdpau decoding of HEVC fixed tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12978018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13083013", "body": "Hi all,\n\n1st September 2015 release 346.96 fixes the issue.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13083013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13293157", "body": "Is there any plan to support for HDR and temporal layering ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13293157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17930680", "body": "A very lovely update.\nNow FFmpeg produce real CBR MPEGTS output fully compatible with TR 101 290\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17930680/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17992836", "body": "It will be great if same patch applied to RTP output as well.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17992836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18811939", "body": "Hello,\n\nFFmpeg gives out error for yuv420p10le to p010le convertion while trying to do 10 bits YUV420P HEVC encoding:\n\n```\nffmpeg -loglevel verbose -i /media/usb1/4k_sampels/Samsung_SUHD_Picture_Quality\\ Demo_Nano_Crystal\\ Display_UK-Version.mp4 -c:v:0 nvenc_hevc  -preset llhq       -vb 28000k -minrate 28000k -maxrate 28000k -bufsize 28000k -muxrate 30000k -c:a:0 aac  -b:a:0 192k -pix_fmt yuv420p10le 'udp://233.33.33.1:5001'\n\nffmpeg version N-81489-ga37e6dd Copyright (c) 2000-2016 the FFmpeg developers\n  built with gcc 4.8 (Ubuntu 4.8.4-2ubuntu1~14.04.3)\n  configuration: --prefix=/opt/ffmpeg --enable-shared --enable-static --enable-nonfree --enable-gpl --extra-cflags='-I/opt/ffmpeg/include -I/usr/local/include' --extra-ldflags=-L/opt/ffmpeg/lib --bindir=/opt/ffmpeg/bin --extra-libs=-ldl --enable-libx264 --enable-libx265 --enable-nonfree --enable-gpl --enable-nvenc --enable-vdpau --enable-libzvbi --enable-libfdk-aac --enable-libzimg --enable-avresample\n  libavutil      55. 29.100 / 55. 29.100\n  libavcodec     57. 54.101 / 57. 54.101\n  libavformat    57. 48.101 / 57. 48.101\n  libavdevice    57.  0.102 / 57.  0.102\n  libavfilter     6. 57.100 /  6. 57.100\n  libavresample   3.  0.  0 /  3.  0.  0\n  libswscale      4.  1.100 /  4.  1.100\n  libswresample   2.  1.100 /  2.  1.100\n  libpostproc    54.  0.100 / 54.  0.100\nRouting option err_detect to both codec and muxer layer\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from '/media/usb1/4k_sampels/Samsung_SUHD_Picture_Quality Demo_Nano_Crystal Display_UK-Version.mp4':\n  Metadata:\n    major_brand     : hvc1\n    minor_version   : 0\n    compatible_brands: isomhvc1\n    creation_time   : 2015-07-11T03:36:53.000000Z\n  Duration: 00:01:55.35, start: 0.000000, bitrate: 50346 kb/s\n    Stream #0:0(eng): Data: none (mp4s / 0x7334706D), 224 kb/s (default)\n    Metadata:\n      creation_time   : 2015-07-11T03:36:53.000000Z\n    Stream #0:1(eng): Data: none (mp4s / 0x7334706D), 240 kb/s (default)\n    Metadata:\n      creation_time   : 2015-07-11T03:36:53.000000Z\n    Stream #0:2(eng): Video: hevc (Main 10), 1 reference frame (hvc1 / 0x31637668), yuv420p10le(tv, bt2020nc/bt2020/smpte2084), 3840x2160 [SAR 1:1 DAR 16:9], 49999 kb/s, 29.97 fps, 29.97 tbr, 90k tbn, 29.97 tbc (default)\n    Metadata:\n      creation_time   : 2015-07-11T03:36:53.000000Z\n      encoder         : HEVC Coding\n    Stream #0:3(und): Audio: aac (LC) (mp4a / 0x6134706D), 48000 Hz, stereo, fltp, 383 kb/s (default)\n    Metadata:\n      creation_time   : 2015-07-11T03:36:53.000000Z\n[graph 0 input from stream 0:2 @ 0x1baa6c0] w:3840 h:2160 pixfmt:yuv420p10le tb:1/90000 fr:30000/1001 sar:1/1 sws_param:flags=2\n[scaler for output stream 0:0 @ 0x1b405a0] w:3840 h:2160 flags:'bicubic' interl:0\nIncompatible pixel format 'yuv420p10le' for codec 'nvenc_hevc', auto-selecting format 'p010le'\n[auto-inserted scaler 0 @ 0x1b7b1e0] w:iw h:ih flags:'bicubic' interl:0\n[format @ 0x1bac7c0] auto-inserting filter 'auto-inserted scaler 0' between the filter 'scaler for output stream 0:0' and the filter 'format'\nImpossible to convert between the formats supported by the filter 'scaler for output stream 0:0' and the filter 'auto-inserted scaler 0'\n```\n\nIf I remove pix_fmt parameters, FFmpeg does yuv444p encoding. But this is not a wished scenario.\nIs it possible to use YUV420P10LE instrad of P010LE ?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18811939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18858277", "body": "Fixed by https://github.com/FFmpeg/FFmpeg/commit/99882d05a6635446d587ed51b095c627abc42587\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18858277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18858315", "body": "Nvidia Pascal Titan X GPU can not reach to 50 fps on Main 10 P010LE HEVC encoding:\n\n```\nffmpeg -loglevel verbose -i /media/usb1/4k_sampels/Samsung_SUHD_Picture_Quality\\ Demo_Nano_Crystal\\ Display_UK-Version.mp4 -c:v:0 nvenc_hevc -preset hp -cbr 1 -2pass 0 -r 50 -vb 28000k -minrate 28000k -maxrate 28000k -bufsize 28000k -muxrate 30000k -c:a:0 aac -b:a:0 192k -pix_fmt p010le 'udp://233.33.33.1:5001'\n```\n\nFPS waves around 41-43 fps. If same command with YUV420P, it reaches to 120 - 130 fps.\n\nGPU NVENC Load:\n\n```\n nvidia-smi dmon -i 0\n# gpu   pwr  temp    sm   mem   enc   dec  mclk  pclk\n# Idx     W     C     %     %     %     %   MHz   MHz\n    0    81    67     9     2    41     0  4513  1809\n    0    80    66     9     2    41     0  4513  1809\n    0    81    67     9     2    42     0  4513  1809\n    0    80    67    10     2    41     0  4513  1809\n    0    81    67     9     2    44     0  4513  1809\n```\n\nI think bottleneck is not at GPU side, pixel convertion maybe needs speed up improvement.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18858315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18858344", "body": "If codec changed to rawvideo to test pixel format convertion performance testing, FPS again waves around 39-40 fps\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18858344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "philipl": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12588560", "body": "Yes, this is to be expected. They have fixed rendering of video for display output, but they did not fix vdp_video_surface_get_bits_y_cb_cr which is what is used in the ffmpeg command line tool. It continues to be broken in this way. They're aware that this is still a problem.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12588560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12590706", "body": "The primary use-case is in media player applications and those work fine, so I didn't want to leave them blocked. The usage in the command line tool is opt-in (not on by default) so it doesn't impact anyone who doesn't want to try it out.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12590706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12597892", "body": "no\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/12597892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "gdsotirov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13543327", "body": "Are you sure this fixes support for OpenJPEG 2.0 and above? As far as I could check OpenJPEG 2.0 has new API, so existing FFMPEG code isn't compiling. In fact, I've started writing a patch, but perhaps I would need some help to complete it, because two functions that existed in 1.5.x do not exist anymore in 2.0, so they would have to be replaced.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13543327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "rokam": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13960954", "body": "Why this commit wasn't added to 2.8.1?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13960954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13968453", "body": "Em S\u00e1b, 24 de out de 2015 13:45, Michael Niedermayer <\nnotifications@github.com> escreveu:\n\nOn Fri, Oct 23, 2015 at 12:34:20PM -0700, Lucas de Andrade wrote:\n\n> Why this commit wasn't added to 2.8.1?\n\nalso, this does not cleanly apply to release/2.8 so if you want it\nin 2.8.2 then please clone ffmpeg, and backport the commit to\nrelease/2.8, test it and then send me a pull request (per mail not\ngithub for your release/2.8)\n## [...]\n\nMichael GnuPG fingerprint: 9FF2128B147EF6730BADF133611EC787040B0FAB\n\nGood people do not need laws to tell them to act responsibly, while bad\npeople will find a way around the laws. -- Plato\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/FFmpeg/FFmpeg/commit/770dd105044d00263da041f509a08b316296a78e#commitcomment-13967809.<img\nsrc=\"\nhttps://ci5.googleusercontent.com/proxy/kuu8PNj4ibPndgzfetFckSbtSoCSZuScAVS7vPNOo-A0sBc9ASAyeVgQLhaoKLdNoJBPbyHV6vNrLlmSbuo17jVsWVeTBf9J7zXn5XyKoRqeTTlaVKuSiRrJn7mKvlwpduUkX4Ttuu0cd9HeTAQOQTzZWzOxCw=s0-d-e1-ft#https://github.com/notifications/beacon/ACuWRhDgqYHQJ8QtwY-JwOQvuBl2CYfZks5o-58CgaJpZM4GUxsG.gif\n\">\n\nSorry. I'm new to open source development. So I need to merge it with\n2.8-devel tag and send a patch here? Anything else?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/13968453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/14074567", "body": "I've already sent the patch to be merged on release/2.8 to ffmpeg-devel but with no response. Do I need to do anything else?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/14074567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Elyotna": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/14231705", "body": "Thank you for all your hard work on the AAC encoder, it's really starting to sound good!\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/14231705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mkrufky": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/15760214", "body": "This line broke the build.  Please see my PR #173 \n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/15760214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "guillaumekh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/16781629", "body": "Hi @richardpl , thanks a lot for having contributed afade to ffmpeg.\n\nI've been using it these last days and had trouble understanding the meaning of some of afade's curves, my mathematics being rusty. I [made myself a 'cheatsheet'](https://github.com/guillaumekh/ffmpeg-afade-cheatsheet) to better visualize afade's curves.\n\nI also[ added it to ffmpeg's wiki](https://trac.ffmpeg.org/wiki/AfadeCurves) since the native documentation is text-only.\n\nRegards\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/16781629/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jdevelop": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/16955302", "body": "Thank you so much, Michael! Who cares about the backward compatibility now, really?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/16955302/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/16959236", "body": "@TimothyGu I'm not a developer of ffmpeg and I haven't really ever subscribed to the developers mailing list. The quick search in google revealed that many people suffered from this _security fix_, and it's especially sad that I had to fix this stuff on live production environment **after** updating ffmpeg to get some problem with demuxers fixed. Perhaps it's a good idea for future to think that devops don't necessary have time/resources to go through **every** update of a package on server (thus they should paid some attention, really). Especially if that does introduce some incompatibility with the previous version, and **affects** users of the software in such a way that the app simply **exits** with an error if some flag **suddenly** got a new default value to **terminate** normal execution.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/16959236/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mogrein": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17836278", "body": "libavcodec/videotoolbox.c still has references to H264Context::pps:\n\n> libavcodec/videotoolbox.c:107:35: error: no member named 'pps' in 'struct H264Context'\n>     memcpy(p + 4, h->pps.data, h->pps.data_size);\n> libavcodec/videotoolbox.c:109:17: error: no member named 'pps' in 'struct H264Context'\n>     p += 4 + h->pps.data_size;\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17836278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "rboy1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17865862", "body": "This commit is causing a failure to cross compile for x86 Windows in Ubuntu14.04:\n`\nIn file included from ./libavformat/internal.h:28:0,\n                 from libavdevice/decklink_enc.cpp:29:\n./libavformat/os_support.h: In function 'int win32_stat(const char*, _stati64*)':\n./libavformat/os_support.h:196:32: error: cannot convert '_stati64*' to '_stat64*' for argument '2' to 'int _wstat64(const wchar_t*, _stat64*)'\n     ret = wfunc(filename_w, par);                         \\\n                                ^\n./libavformat/os_support.h:206:1: note: in expansion of macro 'DEF_FS_FUNCTION2'\n DEF_FS_FUNCTION2(stat, _wstat64, _stat64, struct stat*)\n ^\n./libavformat/os_support.h:202:36: error: cannot convert '_stati64*' to '_stat64*' for argument '2' to 'int _stat64(const char*, _stat64*)'\n     return afunc(filename_utf8, par);\n`\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/17865862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Memphiz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18104782", "body": "Imo this has the wrong syntax. For AARCH64 and 64bit GP Registers the syntax is\n\nBIC Xd, Xn, Xm{, shift #amount} ; 64-bit general registers\n\nIndeed i get a compile error when using xcode6.2\n\n<stdin>:32:21: error: invalid operand for instruction\n        bic x7, x7, #63\n\nApple LLVM version 6.0 (clang-600.0.57) (based on LLVM 3.5svn)\nTarget: x86_64-apple-darwin13.4.0\nThread model: posix\n\nIt seems to compile fine on Xcode7 and its clang but i have no clue why ...\n\nWorking syntax would be:\nbic             x7, x7, x7, lsl #63\n\nNot sure if the semantics are still correct. I have not the slightest clue of arm assembler i have to admit.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18104782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18383978", "body": "@jannau ping - any comment on this please?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18383978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20111177", "body": "@jannau - so is this a bug of xcode6.2 shipped clang then?", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20111177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20140286", "body": "Cool thx :)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20140286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22524851", "body": "Do you have any more fixes to come? I still get this errors when compiling with xcode 6.1.1 for ios arm64 and gas-preprocessor:\r\nhttps://pastebin.com/Cmzbs2Ag", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22524851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22530145", "body": "I tried it with xcode7.2 now with and without gas-preprocessor (we have nothing newer on our jenkins atm and can't easily get to xcode8 due to using osx 10.10.x atm)  - no dice it just can't get past this file. With which xcode version should this be compilable and is usage of gas-preprocessorcurrently needed or not?", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22530145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22530148", "body": "Sorry you posted while i was typing - i'll wait then ;)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22530148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22540870", "body": "Yes this fixes simple_idct_neon.S ... next thing that doesn't compile is this:\r\n\r\nhttps://pastebin.com/G4VeDe8z\r\n\r\nReplacing the \"-\" with a \",\" doesn't fix it. Having no idea from arm asm i suppose the \"-\" is a short cut for a register range and the \",\"  is not working (it complains that registers must be sequential)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22540870/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22541085", "body": "Ok i got the next 2 problems solved i guess - have a look at this patch please (as i am only guessing asm here ;) ):\r\n\r\nhttps://pastebin.com/Pde1YqMR\r\n\r\nSadly i am out of time now ... the next issue is this:\r\n\r\nhttps://pastebin.com/KXwbkZCP", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22541085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22541347", "body": "as a last comment - maybe some of those need to be patched via gas-preprocessor instead - not sure how generic those ios adapted asm codes are (for other compilers i mean).", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22541347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22606040", "body": "@mbouron in addition to the patch you pasted/committed - this is needed for me to get the compilation finally done.\r\n\r\nhttps://pastebin.com/SwwPuSaK\r\n\r\nI have no idea if the semantics are still right. Please check the patch. And in case it is correct it would be great if you could take care of adding it into ffmpeg. (i know you don't use github and i am really not technically able to use mailing lists).", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22606040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22610411", "body": "top 4 commits here:\r\n\r\nhttps://github.com/Memphiz/FFmpeg/commits/ios64_xcode7\r\n\r\nbtw - this also solves compilation for xcode 6.1.1 :)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22610411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22741936", "body": "Did you get any chance to give it a shot yet? Not into making any pressure here - its just i try to fit the solution of this into my own spare time windows from time to time ;)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22741936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22743900", "body": "thx very much for taking care of that :)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/22743900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "czchmate": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18609673", "body": "This gives me an implicit function declaration for SetDLLDirectory(\"\") when compiling with MinGW32 running in MSYS.\n\nMaybe include windows.h after an #ifdef MINGW32 ?\n\nI'm not a programmer, just a hobbyist compiler of code so I don't feel comfortable making changes myself. (Nor do I understand the commit/pull process using Git.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18609673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18610723", "body": "Looking at it closer. There is something in the MinGW winbase.h code that interrupts the declaration of SetDllDirectory().\n\nIn the MinGW winbase.h all of the commands related to the SetDLLDirectory function are nested in these ifs\n# if (_WIN32_WINNT >= 0x0502)\n\nSo, somehow you have to make winbase.h think that WIN32_WINNT >= 0x0502 or skip the SetDllDirectory / init_dynload command for users compiling on MinGW32 on MSYS.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18610723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18611359", "body": "Thank you.\n\nMaybe the extra cflag definition could be added to the configure file with the condition of target-os=mingw32?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/18611359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "wg1989john": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/19235523", "body": "Maybe miss the rbsp_stop_bits and rbsp_trailing_zero\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/19235523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "hauihau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/19560368", "body": "This patch prevents building ffmpeg with LTO enabled. Please see https://bugs.gentoo.org/show_bug.cgi?id=598054.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/19560368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jannau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20110912", "body": "@Memphiz  the assemblers supporting the pseudo instruction bic with immediate and converting it to and with bitwise inverted immediate,", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20110912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20123627", "body": "@Memphiz I completly overread the assembler error, sorry. I think clang in xcode 6.2 simply doesn't support this transformation. It's not bug since bic with immediate is not listed in the Architecture Reference Manual as pseudo instruction. I can't imagine that I didn't test it with xcode 6.x so I guess clang in xcode 6.3 or 6.4 supports that. I'll do the tranformation manually and commit to libav.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20123627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "lystormenvoy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20182333", "body": "I want to know why the versions are not in order?  n3.2.2 then n2.8.10?", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20182333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20194523", "body": "So which one I should choose?\r\nand whats different between these branches", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20194523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "retokromer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20182744", "body": "There are different branches.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20182744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20196048", "body": "If you start, the last one. See: https://ffmpeg.org/download.html", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20196048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "walterav1984": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20731346", "body": "Dear lippit,\r\n\r\nTrying your -dvguid option to use/distinguish multiple dv/hdv camera's at the same time on ffmpeg has been unsuccessful. I don't think its a bug, but me not understanding the correct iec61883 options/parameter syntax.\r\n\r\nUsing two DV camera's each on a separate pci firewire card works when using the -i 0 parameter for card0 and -i 1 for pci card1. But using two DV camera's on the same pci firewire card fails without a working guid. Using dvgrab -guid option with the DV camera's on the same pci  firewire adapter works fine.\r\n\r\nI have filled a bug report with more specific info OS/ffmpeg versions/hardware, could you please have a look?\r\nhttps://trac.ffmpeg.org/ticket/5966\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20731346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20745053", "body": "Hi Georg,\r\n\r\nI also tried without the leading 0x on the dvguid option and allot of possible other undocumented combinations.  With all these tries I have never even got the error message \"Invalid dvguid parameter\" so it might not even got parsed at all?\r\n\r\nIt would be very nice if you could have a look at your old code, should we continue chatting under this commit until a new commit/issue arises?\r\n\r\ngreetings,\r\n\r\nWalter ", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20745053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20777842", "body": "Looking further in the file history I found that there are 9 more commits since your initial version. I will try to build and experiment all of them, my guess is that commit 3323c5f @cehoyos from 2015 june 13 may affect the parsing of the dvguid code.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20777842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20779634", "body": "In Ubuntu Linux 15.04 amd64 the ffmpeg repo version 2.5.10 works :+1:  from the liveCD with two camera's on one firewire pci interface at the same time using the following syntax. This version does still use the `if (sscanf(dv->device_guid, \"%llx\", (long long unsigned int *)&guid) != 1) {` code instead of 3323c5f  `if (sscanf(dv->device_guid, \"%\"SCNu64, &guid) != 1) {`.\r\n\r\n`ffplay -f iec61883 -i 0 -dvtype dv -dvguid 0xguidcodecam1&withoutleading0x`\r\n\r\n`ffplay -f iec61883 -i 0 -dvtype dv -dvguid 0xguidcodecam2&withoutleading0x`\r\n\r\nIn Ubuntu linux 16.04.1 amd64 the same command does not work since the dvguid option takes any good/wrong guid number, although it errors when you type a unsigned value like - / ! / @.\r\n\r\n`[iec61883 @ 0x7faa24009280] Invalid dvguid parameter: @`\r\n\r\nI'll try to build a current version without the old sscanf llx option and see if that works.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20779634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20795167", "body": "Although \"ffplay\" works in Ubuntu linux 15.04 amd64 with the -dvguid option, its shipping \"ffmpeg\" version is also not accepting -dvguid option or anything further from 0/auto. It justs records from the first powered on dv/hdv camera.\r\n\r\n`ffmpeg -f iec61883 -i 0 -dvtype dv -dvguid 0x0camera1guidcode out.dv`\r\n\r\nSo there is a difference between ffmpeg & ffplay syntax parsing in Ubuntu linux 15.04 versions. In ubuntu 16.04 ffplay and ffmpeg both won't work at all with -dvguid option.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20795167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/21765620", "body": "I was able to compile ffmpeg&ffplay in (Ubuntu Linux 15.04 amd64 live environment) using git bisect until this commit 15b02ddee033aec69e75e2c1cdc3de085133d959. After 13 bisects, there was still no working version of ffmpeg parsing the right arguments for selecting a firewire deviced by its GUID code.\r\n\r\nHowever \"ffplay\" is working at this initial commit 15b02dd and is correctly handling multiple firewire DV/HDV devices at the same time using GUID codes, but its gets broken/fixed multiple times in future versions (some dvguid option invalid error).\r\n\r\nI tested by running ./ffplay or ./ffmpeg from the compilation folder after each bisect make-clean ./configure --enable-iec61883 make etc, maybe I need to update/source the lib locations of every build but I didn't do it because I don't know.\r\n\r\nThe commit was applied around november 2012 to upstream ffmpeg, but the ffmpeg part (besided ffplay) may have only been functional/tested around july2012 when it was written by  @lippit .\r\n\r\nWas the ffmpeg code actually working, or was only the ffplay code tested the solution will probably be arguments/options parsing of ffmpeg which differs from ffplay?", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/21765620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "carnil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20872213", "body": "This is [CVE-2016-10190](http://www.openwall.com/lists/oss-security/2017/02/02/1)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20872213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20872271", "body": "This is [CVE-2016-10191](http://www.openwall.com/lists/oss-security/2017/02/02/1)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20872271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20872277", "body": "This is [CVE-2016-10192](http://www.openwall.com/lists/oss-security/2017/02/02/1)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/20872277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "lvml": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/21488736", "body": "The \"zscale\" filter being an important color-space aware alternative to the normal \"scale\" filter is really a great tool, the only major drawback being that it runs single-threaded, and thus easily becomes the bottle-neck of a video processing chain.\r\n\r\nGiven that the zimg library claims to be prepared for use from multi-threaded applications, would it be possible to implement (simple, frame-based) multi-threading for the zscale filter, too?\r\n\r\nI'm not after avoiding latency, just after increased throughput, so using a pool of N threads to scale one frame each, then starting over with the first thread for the N+1 frame and so on would be perfectly sufficient to be able to saturate the CPU cores while using zscale.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/21488736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "v0lt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/23255950", "body": "Where can I download this compiler update?", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/23255950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kasper93": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/23268675", "body": "Hi @v0lt, long time no see. \r\n\r\nVS2017 has newer MSVC bundled and it is periodically updated. So it is fixed there.\r\n\r\nVS2015 as for as my install goes still have 19.00.24215.1 bundled. But they provided this hotfix package https://support.microsoft.com/en-us/kb/3207317 in my bug report about this bug. For reference https://connect.microsoft.com/VisualStudio/feedback/details/2890170\r\n\r\nAlso Microsoft releases preview version of their compiler every day. https://blogs.msdn.microsoft.com/vcblog/2016/04/26/stay-up-to-date-with-the-visual-c-tools-on-nuget/ But I wouldn't use it unless you are doing some troubleshooting. On the other hand probably this is the same thing they release as stable, every so often. So if they have good testing env, it should be fine for personal use. ", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/23268675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "shqking": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014533", "body": "This is CVE-2017-14054 issue.\r\n[http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-14054](url)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014534", "body": "This is CVE-2017-14055 issue.\r\n[http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-14055](url)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014558", "body": "This is CVE-2017-14056 issue.\r\n[http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-14056](url)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014566", "body": "This is CVE-2017-14057 issue.\r\n[http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-14057](url)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014572", "body": "This is CVE-2017-14058 issue.\r\n[http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-14058](url)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014579", "body": "This is CVE-2017-14059 issue.\r\n[http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-14059](url)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24014579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24134386", "body": "This is CVE-2017-14169.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24134386/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24134400", "body": "This is CVE-2017-14170.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24134400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24134414", "body": "This is CVE-2017-14171.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24134414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24209860", "body": "This is CVE-2017-14222.\r\n[http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2017-14222](url)", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24209860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24209862", "body": "This is CVE-2017-14223.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24209862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "fgeek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24188372", "body": "https://nvd.nist.gov/vuln/detail/CVE-2017-14225", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24188372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24188377", "body": "https://nvd.nist.gov/vuln/detail/CVE-2017-14223", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24188377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24188385", "body": "https://nvd.nist.gov/vuln/detail/CVE-2017-14222", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24188385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "devernay": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24225840", "body": "I don't understand why this code considers that the macroblock size is 8 for 10-bit ? The macroblock size seems to be 16 whatever the bit depth, see https://github.com/FFmpeg/FFmpeg/blob/f078bc4c5e6675a93166a7e5b23feb5b04ac9320/libavcodec/dnxhdenc.c#L475 \r\nThis makes my encoder crash when encoding 1920x1080 DNxHR 444, because the last line of macroblocks is half outside of the image, but this condition is never true (mb_height is 68, and 68*16=1088).", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24225840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24226046", "body": "This fixes the crash, can you please confirm that this is a fix?\r\n```\r\n    } else if (ctx->bit_depth == 10 && vdsp->emulated_edge_mc && ((mb_x << 4) + 16 > ctx->m.avctx->width ||\r\n                                                                  (mb_y << 4) + 16 > ctx->m.avctx->height)) {\r\n        int y_w = ctx->m.avctx->width  - (mb_x << 4);\r\n        int y_h = ctx->m.avctx->height - (mb_y << 4);\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24226046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24228079", "body": "posted on trac: https://trac.ffmpeg.org/ticket/6649", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24228079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "assistcontrol": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24658478", "body": "/usr/bin/install on macOS doesn't support `-T`:\r\n\r\n```\r\ninstall -m 644 -T ./doc/examples/Makefile.example \"/usr/local/share/ffmpeg/examples/Makefile\"\r\ninstall: illegal option -- T\r\nmake: *** [install-data] Error 64\r\n```", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/24658478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ershubhamgupta1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/25324427", "body": "got following error\r\n\r\nERROR: libopenjp2 >= 2.1.0 not found using pkg-config\r\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/25324427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "liyoubdu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/25666771", "body": "why remove it", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/25666771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/25759465", "body": "why remove it?", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/25759465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "omerjerk": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/25671509", "body": "It is valid to have opt_order more than block_length.", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/25671509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "binoculars": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/26466782", "body": "@tmm1 this seems to break the build with --disable-protocols\r\n\r\nSee https://travis-ci.org/binoculars/ffmpeg-build-lambda/builds/320451067", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/26466782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/26469246", "body": "\ud83d\udc4d Thank you", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/26469246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "utack": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/26566478", "body": "Thanks for all your work implementing this\r\nIs there a way to control the target bitrate or quantization factor?\r\nThanks\r\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/comments/26566478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jessejiang0214": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20624848", "body": "Where is the platform section?\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20624848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628742", "body": "Should I find all *restrict and change it? I also find *restrict in \"libavcodec\\alpha\\hpeldsp_alpha.c\", but I'm not sure if it works well after I change.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628836", "body": "Yes it is necessary. These APIs can be used and linked (so the `check_func_headers` won't fail), but if a developer wants to link to the ffmpeg libraries using these unsupported APIs, the Windows App Certification Kit (WACK) will fail.\n\n---\n\nOriginal text (above English text enhanced by @TimothyGu for better readability):\n\nYes it necessary. These api can be used and linked into the static library, so the check_func_headers cannot die it. If a developer want to use these library with these api, who will failed with WACK test.\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/20628836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "BilyakA": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/64011293", "body": "Why havn't you added SM_SINGLE_SLICE option? yeah, this can be achieved by setting SliceNum == 1, but IMHO it must be default value (as it was designed in OpenH264)\n", "reactions": {"url": "https://api.github.com/repos/FFmpeg/FFmpeg/pulls/comments/64011293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}