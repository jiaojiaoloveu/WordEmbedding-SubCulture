{"_default": {"1": {"fsaintjacques": {"issues": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/24", "title": "Automatic group detection is incomplete", "body": "See the [libtwiddle](https://fsaintjacques.github.io/libtwiddle/#HEAD) documentation, there should be 2 distinct group called `bitmap` and `bitmap_rle`, yet they get merged into `bitmap`. I believe the following [code](https://github.com/libgit2/docurium/blob/master/lib/docurium.rb#L366-L370) makes a bold assumption where the first word splited by `_` is the group name. \n\nWould there be a way to specify the group which a function lives in? For example, in libgit2, we can see the following [header](https://github.com/libgit2/libgit2/blob/master/include/git2/types.h#L12-L17) in most files.\n\nSome suggestions\n- Use a special comment in each function, say `@group`\n- Have the user provide a list of groups in the config file and bind a function to the longest prefix matching group in the list\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/24/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/217730499", "body": "Can we re-open this feature? I agree that crawling tags is a mandatory feature, but writing the output in a gh-branches is a strong github-ism. It would be really useful to validate output before pushing into documentation branch, i.e. writing to a local directory.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/217730499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/218126952", "body": "I would see the provided group list as the norm, and then resorting to the split trick if it doesn't match anything. This wouldn't break libgit2 current behaviour if the don't provide `groups` in the JSON configuration.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/218126952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rofl0r": {"issues": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/22", "title": "\"screenshot\" links in README dead", "body": "", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/22/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cirosantilli": {"issues": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/17", "title": "Add callback typedefs to the API documentation.", "body": "Callback typedefs are not being put in the documentation. E.g.: https://libgit2.github.com/libgit2/#HEAD/group/diff/git_diff_blob_to_buffer uses `git_diff_file_cb`, which it defined and documented publicly at: https://github.com/libgit2/libgit2/blob/master/include/git2/diff.h#L416. It would be really helpful to have links to those callbacks to understand how to call the functions that use them. \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/17/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/67736743", "body": "Carlos, feel free to close this if you consider this solved: I'm unable to check it right now.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/67736743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "lu-zero": {"issues": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/14", "title": "Support multiple include paths", "body": "I'm evaluating docurium for Libav and seems that it doesn't support multiple include paths (ideally I'd have [\"libavcodec\", \"libavformat\", ...] and such as input.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/14/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/comments/5212444", "body": "typo template in the type attribute\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/comments/5212444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "carlosmn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/d2b8ef9affaea5f35af0f3cd79b9720774bd88c6", "message": "Remove screenshots from README\n\nSkitch either doesn't have them anymore or they're under some new\nURL. Either way, remove these broken links."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ab40a15468d955e39cdac7593f347abc9fdbbac1", "message": "Bump version to 0.5.0"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d9518f6453e1f880e814382d2d0b29a0fc633b63", "message": "Define DOCURIUM when parsing\n\nDefine DOCURIUM to 1 when parsing the headers to let the source code\nknow it's being run for documentation parsing and give it a chance to\nperform any workarounds they might need."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e4b1e6553f86edfaed912963476386c2e013e0ee", "message": "Don't override a user-specified LLVM_CONFIG"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8cc236d3c7bc02e75529c7a99ddd475178557340", "message": "Remove bogus split into lines inside a single comment block\n\nWe had wrongly assumed that the comment blocks inside paragraphs\ncorrespond to the different lines, but an expression such as\n\n    `<branchname>@{upstream}`\n\nmakes clang return each symbol in its own block. Adding newlines between\neach of them makes us render bad data."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/0574a3d72fd9fac5fd2e892fde6f89c72ce28961", "message": "Merge pull request #23 from niess/master\n\nSome tweaks and more love for callbacks"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5990e5178d7fa89e6d35a25f58a8372e62db0e73", "message": "Bump version to 0.4.2"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5826a6cb78f605de166ac3fa176e29fa3f46440d", "message": "Don't include RCs in the version list\n\nRelease candidates have the API of the release and they're not\ninteresting for posterity anyhow."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c4a27329f4ea596a8d6218b0b395e9816fe97083", "message": "Sort the function history\n\nWe lost the sorting when we introduced concurrency in parsing the\ndifferent versions. Bring it back."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/f7a9aa4c720aa1b615a6ab61de6136f204a2d4dc", "message": "Bump version to 0.4.1"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/26156c2ec241f75df5076fa9298cd748f0d85577", "message": "Wait for the data to load before rendering\n\nWhen setting the version, that can trigger an asynchronous request to\ndownload the json file. We were assuming the new data was set when the\nfunction returned, which meant on a new load, we were not rendering the\nright version, but whatever happened to be loaded before.\n\nUse a callback to render the views only once the new data has been\ndownloaded and set (or immediately if we're already in the right\nversion)."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c878f2a123bcfc9a90486970630e0892716af61a", "message": "Use the generic llvm-config for library detection"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1ae3a2def172bf6011fd1b6c9e00158052c343bf", "message": "Update underscore and backbone"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/9eb147d6c3060779b42502c066221a1b2bddb3b8", "message": "Get rid of unused js"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a0143c321bb7bb94e2cf662eb7c50c6acc1e25d6", "message": "Merge branch 'callbacks'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4dd60af237ae6b21ff725a312464ef97622eaaaf", "message": "Show callbacks in the search results"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/adfbfbbc31ca46a09fb455529686ef26c3121377", "message": "Link to callbacks from the function view\n\nCallbacks don't get a history view or appear in the \"also in this\ngroup\", as they're not quite functions."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c53572a726a7567107608ad316c7c56377716196", "message": "Export the callbacks"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d8182b62bc3f9dc339c791d1edd42f20ba4e830b", "message": "Tag the callback types"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a7cb8a39ba170fd1d7e3bce002dd5d84bd2217c0", "message": "Merge pull request #18 from libgit2/vendor-css\n\nVendor the css and refer to it instead"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4cd6f71d9af292c01db4d0bdde8b8a3dbdaf84e5", "message": "Make the CSS path relative\n\nInstead of hard-coding libgit2's location, detect how deep the example\nis and use a relative path, allowing for use in different projects."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/51f60051439b87cacd26ad241ef89a809660a9b1", "message": "Merge branch 'master' into vendor-css"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/11f1191987671e4bd43943df5058536f7849f8b3", "message": "Merge pull request #20 from Therzok/master\n\nRequire redcarpet compat."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/73f3faf42c78562a0d87e3f918be4b971eb31398", "message": "docparser: recursively create directories\n\nIf we want file a/b/c.h we want to make sure that we create a/ and a/b/\nwhich Dir.mkdir doesn't do for us. Use FileUtils.mkdir_p instead."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e152c493978eb735096ab5fb54648bf7f07d729d", "message": "docparser: require tempfile\n\nWe use it and were previously relying on Docurium to load it for us."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ff4179a3d014a03390338ec73a2f6d3724d12945", "message": "docparser: fix repeated 'when'\n\nThe second when for :cursor_type_ref will never trigger, causing us to\nerror out on unknown typedef contents instead of going with the name\ncatch-all. Fix that."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/98fe6507070be887f4a08abfd10bd40ca29a1ff4", "message": "Update to rugged 0.21"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/f2c4c24ba22bf0ab7cf8fd0719ffdd24220ddb18", "message": "Correct the function -> group lookup\n\nWe got rid of the reverse lookup in project.json, but we have this\ninformation in the function definitions already, so use it."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/15d103f2cce440975b84be03eaafb7dc1a5a6390", "message": "Remove leftover use of project.json's groups\n\nUse the current groups instead."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/842bdececbea6ca990b62586eb5004b8b8a726a1", "message": "Bump version to 0.4.0"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6bcb43d7099dcc78caee007bd6184981c5d81531", "message": "Merge branch 'parallel'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/53d347e08483e7b13228e214dac9ed3aed2aac43", "message": "Nicer dependencies\n\nMake gem happy with the way we describe our dependencies."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8e0e7377e6b4d2861716bb277fde05be781fc5b6", "message": "Parallelise doc generation\n\nPut each version on its own process and collect the output.\n\nOn my desktop, this brings the process down from ~1m to ~15s."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e06cbfe5c52c010dd6f61dc2aa3447ddd66d58ee", "message": "Generate docs in a background thread\n\nThis makes sure that the queue works as intended, before we parallelise\nthe process."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d4b8028978c84b88548382d3fa544d7d29a6cab4", "message": "Factor out writing the examples to the index\n\nThis lets us just get data from the function instead of having to jiggle\nthe index."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d6f030019990c3e6b4fdf9c1b4005ac741dbba3a", "message": "Split out example formatting from doc generation"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/aa017cba9cc298f6ad233e631b1c8eecb213e502", "message": "Remove groups from the project file\n\nThis does not do anything useful"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b7e7887cad28a7b310b74ac3156103425f33e6e1", "message": "Tally signatures after doc generation\n\nIt's still modifying an instance variable, but at least it's now outside\nthe function."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/23131cdb0471d64fc3d7965a6d86c2a72493c504", "message": "Get rid of the global data\n\nWe clear it before we process each version, so there is no advantage to\nit being an instance variable other than saving on passing arguments.\n\nInstead create it when needed and mutate the data for each version as\nits own."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1868e1be9bd398a99aa220956defd8d13591adc4", "message": "Mark doc gen methods as mutating when appropriate"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/2671bf2ddb9a670eb01adf6de2a43c1d86b6339b", "message": "fixup! Extract the doc-generation into its own method"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/58b4ce03d159692ee685af6d8bb9f3f099574ba7", "message": "Load the template only once"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e1085079911928c9eaedc263d674ba51bb0dcf00", "message": "Use a new in-memory index each time\n\nThere is no need to re-use the repository's index, especially since\nwe're clearing it straight away."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e83a4544ebb7c86fcb15b220cadb5604f60db60d", "message": "Extract the doc-generation into its own method\n\nThis is as preparation for parallelising it."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c4d803b6cca1043fe4764ecd0940c3ec69a4d0db", "message": "Merge branch 'clang'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/62717582c30e091b37738b328d8f4dc4b669f59b", "message": "Auto-set llvm-config-3.4 on Linux when available"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/f4e13941d5f37713230041f3b460f1a05343d7e0", "message": "Show comments for types\n\nGather descriptions for opaque types and copy them into the output\nfile.\n\nShow these in the descriptions again."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/545374571e4bdfb03be7b9c6bcc1aeda6f720035", "message": "Correctly identify opaque types\n\nThe name of the symbol changed."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/431db619b48578951883d25aac7d09266975ffbb", "message": "Use tables for type field comments\n\nThis lets us do something similar to dd/dt but also align the types and\nfield names."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e3bc0f298bebdf8b789a6e46e321506159eb0765", "message": "Custom template for enum and struct\n\nEach needs a different extra bit of information."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b044ecf371266769baec28459b811bfba25b2007", "message": "Show the type of fields"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a32bb5cbe205ce87a509a44c682107447a25a88c", "message": "Try to set up LIBCLANG on Darwin\n\nIf a known installed libclang is available, set up the environment for\nffi-clang to find it without a need for the user to set it up."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8df11fa63822b7b323e6092953866a460c872571", "message": "Fix functions returning an opaque struct\n\nThese nodes appear as children of the function and we used to let them\nin as though they were arguments. Let only the param declarations\nthrough to avoid this."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8416fd3fdacf8bc25bad6b0c7fe01bbddf9a4bb3", "message": "Show fields in blocks\n\nNot all fields have comments attached, so put them in a block."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/246d95e6ced4ee6d5f7703cb479bccfb0bd53db0", "message": "Try using dt for type fields"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d103e80ffafbe6b8884809b59fe1bdc76ca03312", "message": "Show struct and enum field docs\n\nSince clang can tell us about the docs for individual fields, let's show\nthem. This replaces the 'sections' we had for auto-created enums.\n\nWe still need to figure out what to do with those."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/32cc72594d0a4ff348c19cf68b2ceac58f3235ce", "message": "parser: create dirs if necessary\n\nWhen we're creating the on-disk files so clang will use the in-memory\nfiles, we need to make sure to create any intermediary directories, as\nit the case for e.g. the `sys/commit.h` header."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a89db575806fd5f5718bf68ef645e12c5d52d0b8", "message": "travis: set up llvm"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c48c27ab66e816dce4dd8e21d3d9ee52c6437e7c", "message": "test: skip ones for creation of enums\n\nWe don't currently auto-create enums from defines, and we cannot get\ndocumentation for them from clang, so we probably won't in the future\neither.\n\nFor now skip those tests that rely on that."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a3065a1466813cf69fc6b28f16cfb2aac04de27e", "message": "test: we now detect more uses\n\nI'm not entirely sure why the old code doesn't detect these uses."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/7fcdda9eaba698489f462d25b6b1ba1209a77a17", "message": "test: include common.h in errors.h\n\nWe need common.h to define what GIT_EXTERN() is so the parser doesn't\nbail on us."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/9f455b51cebd535c7aed095a83e04e6cb0572eb9", "message": "Better subject/description splitting\n\nDon't repeat the subject, and separate paragraphs by two LFs."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/fe9d35b063285b3c5ce2bdeee541a93e9beb0504", "message": "remove puts"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/2c0ef88f2b51e14245b072ec2462d0ecdbf9bea0", "message": "Get repo_test to pass a bit"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6ea95160180e8b748d752102ba2bc0129cdebf21", "message": "Better typedef handling"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ba709ee80f16ae8613f8e640c6268a166b5d239c", "message": "defines"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ce60b65a441b94dd1b68f3305a2c760f6188f44d", "message": "enum field values"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/570256b173f4153e8f68b6134062b86752a2b6a5", "message": "foo"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/03e33902b50c3572c383d4ccf87a3e877ed39063", "message": "deduplication"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5acab77a00549448c2b36bfa95566fc0bc62c31e", "message": "enum fields"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e47bd6be20605853951f4ae9b57a200a926a932c", "message": "Add basic enum test"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c5cf2279a098ca6febabafa11c722a21879d1948", "message": "Store struct field docs"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/528e88444fddf846071494df53e207dbc23aa72f", "message": "Add test for struct"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d1492de0d1603d2789f0f6a3e0fe30e4ee4ddbee", "message": "Add a test for GIT_EXTERN()\n\nThis means we need to go and write stuff to disk."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/9b51dc1d015e73f1f9fcb36e3cf4812a185d4232", "message": "both doc-parser tests pass"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a290e04a692b3ed187ca15093d144a0784cfdbf3", "message": "make first test pass"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/da5789af1a2488a78cf8500c2ae7a317c23fbe90", "message": "make first test pass"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6cbcc1b2e41ff96ca62525dbfd3cb41b5dcd3dbf", "message": "make a real argline"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/385f8b200d407c04bd560344f848eecc9597864b", "message": "Start testing the doc parser"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d54659408c13b040084c490138156c9885b26fed", "message": "Use ffi-clang from the repo\n\nThe released gem only works well on MacOS, so let's use this fixed\nversion."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e05a8b60c3663f50698ff8656447de5aac9d92c0", "message": "wip"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1a368f906fbc5859aaacd698d7bfd171690618ea", "message": "better struct handling"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/33301b00ae5fcb157ccd027a99a54c0018484bf3", "message": "more refactor"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/80c07a83cf72d4894e3aee06343d33ccc58f4322", "message": "extract some common logic"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d64168166cabe2c67365da6c2aab19942803b423", "message": "refactor docparser a bit"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b40ec41b82ddc77df038faff11a533996cda400b", "message": "Skip empty recs"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c743269e37bba76a0a3f8203b42a22f3bf04746d", "message": "hacks to get it to work more"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/096bf16e33f4fc9f11691b54d27cab743b74cdb7", "message": "fix enum decl"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4859ff9576db5da244f3467283ed7a92a527dace", "message": "properly parse enum comments"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/3e516813891c0a9222d31241091397386f9b11e5", "message": "let's not crash"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/74c76e3eb044eccce6c1758c86187399c1b072b1", "message": "less stupidity"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/df29ac03c75988faf94e8822b1cda6ca26943b46", "message": "start enum"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/cdb64e2b55185d1b5c6fdaa6f8364daec2ae8ab1", "message": "more"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/85d8d5dbb6b7eea69402c9b172b0c8d8a00e67fa", "message": "more fixes"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/7a0d8bf98b8556b0a198350f1f721f4bca7af742", "message": "bo"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b613c4bc96d27c1e615e5abc68b33bd33d97139f", "message": "typo"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8ad2208bf58cc4ca199a08578337b6aee900e264", "message": "use the new parser"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/161a554ba6f1c21705b1a0b6e398dad625a66e47", "message": "displayName -> display_name"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8416db9d20b3545c48a89fdc5e94f9605b95f8eb", "message": "ffi-clang 0.1.3 has the type support we need"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a452569fb41d1243763bd9b25e48434214a8ca99", "message": "a bit more"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/0bcb8e2b9aaa502374430a99adfca8804fd9dfaa", "message": "Start playing with clang as a parser"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/fcbb74bf5fae4e429a4defa704504c41ace19784", "message": "Prepare for travis"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/48408acaaaf72ff4fe6abb6b018e6bdfe09814d2", "message": "Merge branch 'multidoc-enum'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1ee2add449b6e141d33f0e3032671233d26c01e7", "message": "Show multi-doc blocks in the UI\n\nIf we have the sections, show them instead of the joined-together block."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a9f6bffa8c3f14c5ed2968263a8301a5b3cd8c53", "message": "Add a build task"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e3037127b1134836e98416b4fe271baf387d14aa", "message": "Store multi-doc enums as a list\n\nIf a series of defines is transformed into an enum, we might have\nmultiple doc blocks, grouped by purpose. Store the docs and definitions\nas a list of pairs for rendering."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/253d9938d458e690e8381cecc80dce9209eae0cb", "message": "Bump version to 0.3.2"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d8a46ee97d1f69d375c153d40623f568fba00ce2", "message": "Join together enum declarations\n\nMultiple enum declarations come from defines with similar prefixes,\nwhich means we should join together their definitions instead of\nreplacing them."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a8e5103be6a3822f49f9ad3a69239cf4223cb6ca", "message": "Add failing test for auto-enums\n\nWhen defines with a common prefix are made into enums, later blocks of\ncomment override earlier ones, which makes us lose them.\n\nAdd a test for this behaviour."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ecd678f466c99235bf593eea7e0b2b39a9c36def", "message": "The default repo should be nil, not a string"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/fe7cb47c7fbe5be5fafeab80e82feeb847e62558", "message": "Merge branch 'test'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/79abe619011ef522e17a624b09a40b16b4a7d78a", "message": "Make the test task the default"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/3a4d9e3e7bc929cfd907ecbb19ffa85ea6c89bd4", "message": "Port the old 'repo' tests to minitest\n\nWe skip one as we know about the failure"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/dba11bde3ff6d9c3239e96037c59ae938d2f9d59", "message": "Take an optional repo\n\nLet the user specify which repository we should be using to look up\nobjects."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ea4a4a321bc8a593cc546e27de93adcdc225e1cc", "message": "Remove zlib from the fixture"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/57cde7d08986f2730aa8106df043e07d70eed3bd", "message": "Capture gen's output"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e911307b979596773e9c69821e27cc9343e5eda0", "message": "Make sure we like conf file we generate"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/dbb6f9859e68438d9731f302cf0335d05f064166", "message": "Add a test rake task"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/2c6673d1c7f392750dafc120e463580f2c382176", "message": "Rename the legacy test file so it doesn't look like a test"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5fe1f7d0089b71c77502e7f3e264082dd62e3b86", "message": "Add a simple test for the c parser"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c6effbba90915b9c52e5c4b7209c6c37b6d9a1ba", "message": "Correct the config file to a current standard"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/7edf58517224c85415c1a784ccb301e4f76afcb7", "message": "Fix typo"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/849a292ef3f87951056edaedd0f7a26997ea7f59", "message": "Bump version to 0.3.1"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8f523f8c7cdfebbc8e7cfe86998656e4739cf5bd", "message": "Handle functions which are a substring of their return value\n\nThe function parsing regex did not take into account functions which may\nbe of the type\n\n    GIT_EXTERN(git_some_type_t) git_some(void)\n\nand it would split git_some_type_t in the middle, thinking it had\nreached the function name. Force the name to be adjacent to an opening\nparenthesis in order to work around this."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5463f1db4fed24b587412976754ccaf60e9dca20", "message": "Bump vresion to 0.3.0"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ea90ad8d14ff6775e30394eee16abc0a8b7ae6ea", "message": "Render search results even if there's nothing there"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8238fde5a23bcd30ee24de927c61774ecc9aaa4d", "message": "Remove the global router"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8ef9fff5ad97df7c0f206409a50fd2f4a7f8605a", "message": "Get rid of the global Docurium\n\nWe still pas it into everywhere, but now we've stopped relying on some\nobject and can concentrate on the relationship between the models."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/70092a92d5b4189f1f9b77d35a7464125aad6eb9", "message": "Don't rely on the global docurium for link-building"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6cd7ce98f2f4cfccd53bcfd5e7e82d9f158f5989", "message": "Keep the groups in a collection\n\nThis matches our usage better.\n\nAdditionally, make sure we redraw the active main view when it needs to\nbe redrawn, which we lost when moving to the mulitplexer."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/f00875f7e0f01acf0112652fbe9a75cbc3843579", "message": "Merge branch 'views'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/350e1687c3eb94ffa81ac88e9a850a2609de4cf3", "message": "A rose by any other name"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/3eab85f08af76c131b423bf6d1a834743cc7c47e", "message": "Don't forget the group name"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e58d48b04f677a444de22bd85d920f231b309e6c", "message": "Scroll to top when switching views"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ba7a47f5f8adc0cde3ed0890f6ee826cfab4fb0c", "message": "Go back to the main page when emptying the search field"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8d865e86907c9b25987075daf4119dcfa8a97dc9", "message": "Multiplex the main views"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ff7f8389c2a3f508283f2db69681e67d081a2815", "message": "Sort-of working search"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d7d594a1d17dab294c1ef9e676f0dad6789d3cca", "message": "Almost-working search, after move to views"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b54ba6f5d10c265a88470b41674cad047beb3c27", "message": "Pass an instance of docurium to the router\n\nInstead of relying on a global var"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8fc55b94ac387ddfd2128766ab0c0b2979053a54", "message": "Use a template for search"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/fa54b3620a9a2c97c59a6b8e9479740f4ca53df6", "message": "Move showGroup into a view"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e48a10b19d24a1049db969b5a70133f1f3381483", "message": "showGroup: use a template"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4da49ec229019b4c0b2c13f1ddb0068866024bf9", "message": "Move showType to view+model"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5e07f281cf146cce7a275d4db9305e71fd2a77f2", "message": "showType: use a template"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/80c4b1c9ec8d52b7b818d5e38c21b5c60b5ba0c6", "message": "Keep the main list around"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/198a0dcafadf9ff1c1edaf4476de818211dffe22", "message": "Move the main view to view+model\n\nThe model keeps getting recreated, unfortunately. We should make it be\nsome sort of global."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e510fcc10eb910c8bcaf277fcd2c01004a1aa0ad", "message": "showIndexPage: use a template"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/265dc0c06df782897bde84dae335231d07ba9388", "message": "Remove first-redirect hack\n\nInstead of having showIndexPage() redirect us, let the redirects\nthemselves take care of calling it.\n\nThis removes the odd piece of code which decided whether to replace the\nurl or not. Instead, have the '/' path be a different route which\nreplaces the url with the latest version and triggers that route."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/484b129f92d88e661c3ae0d0b3be3c0befe57ae5", "message": "Prefer CSS over JS"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b8313f0731b9ccaaf7c27f5d83e4bb3dced8f71b", "message": "Move FileList into model+view"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/82eb388f12cf008ac401baeff932cfcef86e85d0", "message": "Move showFun into model+view"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/7eb6aec27e7ea48049c72b1fca9bbf12bccf7dbd", "message": "showFun: move completely to use a template"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/38b94cc2bc4119b942b869fa1d0750ab85e71c5b", "message": "showFun: move arg table to template"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/bb979411ddb696a24e6a1a5fd837090aec1c183c", "message": "Merge branch 'sidebar-links'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4b658bc0dfb28a49354fc6cbd570a0e5100be81c", "message": "More events, fewer click handlers"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/46386ceb0aac9926cc4f5850851d5cadfa5049cd", "message": "Remove unnecessary click events"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/253936f376e33e364f9c8d742d76999a61ea65d2", "message": "Link in functions by URL"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c3110a63541b9bfd140a08c965b516a966859fea", "message": "Use groupLink() instead of by hand"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/40afab9764eb7859bcd2c322113c10da387727c2", "message": "Don't call showGroup directly"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/61b4968059eb7b16a1275f43df107ae6ec96c812", "message": "Get rid of a useless param"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8dad1e54e3bdc9a8f6f92a3ba5e597b56f70350d", "message": "Fix typo"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/20d37f60eeb38ecfa823ace9743a7ce792b3e8ea", "message": "Remove obsoleete bookkeeping"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/36a397de0087500e11aa00b9fcc201816cba890a", "message": "Use URLs in the sidebar\n\nInstead of catching the click and redirecting, let the browser and\nframework do the normal routing.\n\nThis eliminates complexity, although for the moment does mean we're\nlooping over the list instead of being able to know the offset\ndirectly. It is still a better alternative."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e5f531b1aa8e112d1485d1d3d0efde9ee07511eb", "message": "Merge branch 'templates'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8861e63a14976ec43333a3510a073fcbf0352e82", "message": "Grab data directly from the list when 'manual' is passed\n\nThe showGroup() and showType() functions assume that the file-list DOM\nhas been built, which is not the case when first loading the page. Load\nthe data from our variables instead of the DOM.\n\nThis is still a pretty sorry state of affairs in general, but we're\ngetting there."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d60cf9794724931d92d85df950a377cc52905bc3", "message": "Run loadDoc() from a version change event"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5026b44a78b8a6c4608c76c537e06ed9dc590536", "message": "Make the version picker a view"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8d6c527b927036e17713bca57117c416cccf76c4", "message": "Let the framework start the history"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b0c884b098e2671d1531e14574a59a0a5e953978", "message": "Update the title through an event"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6b6aaf942af19960505d1f510fc2c01b4a133de7", "message": "Factor out the type list"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1fd2a6eadb97b0c8898d39e4e094824e1dc82f91", "message": "Go for HTML5"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/226d1dd0d99e36f8b49ea49ce32b576e182e753c", "message": "Hide types and files by default again"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1126c5078a954cd15a319b908c3367c482dc1632", "message": "Make the changelog a view"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/04041b4dfe0080711a10a234dfcbd7c086035369", "message": "Update the homepage url"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d60346114b9ba52dbcd4fe6bf0bd91aca9067b31", "message": "Make the version text a view"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a0a8f6c073b1b0c3365060e1ae559f66fa8686b7", "message": "Move the 'file list' into a view\n\nThis should make it clearer what belongs where."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/752bdcab0e06fe11c4ce4ba9bcd231a6b8115a38", "message": "Merge branch 'templates'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/0918aa731d652a82d4540673d1f7432039ff60f3", "message": "Use the right 'ref' for types\n\nWe used to start again from zero in each section. What we need to do is\nkeep around the original offset in the array."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/50f2ab9ed966b59cae6bb9a5bea02e81f78fa8e0", "message": "Move the sidebar to a template"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6a6059dad933ec675c705fcdd5f48c0257e1c91d", "message": "Use a template for the version picker"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6436bf761c2819f3d8e63d5a63fbf9c246343f90", "message": "Create the whole changelog from templates"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/cb84e8fd803d19023e46a66b40609dbda0d7be09", "message": "Start moving the changelog to use templates"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/62c4172a8a16e6f651a6ec6bffe8601e65731659", "message": "search: show single results directly\n\nIf the search term matches a single result, show that result directly."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/2a426d438f936d008d43031ad9d5913be01f579c", "message": "Refactor some of the changelog code"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/507c33682d3716b772fb88a835c428041c5b2abc", "message": "Use getJSON instead of ajax"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/3e7f75f13d395e244c6805ac4fcb8f8e24c05da2", "message": "Refactor the sidebar\n\nMore code reuse, less manual building of HTML."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/f4f457b20242d395553a915591b74de9bfd1539d", "message": "Use Array.join instead of string concat for github_file"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/341d538c2986698af7decad9aa35aa8e661e0965", "message": "Smarter search result filtering\n\nSince we want 'function' results to override argline results, let's not\neven search for them if we've found it in the function name, which means\nless work during the search and display phases, as we don't need to\nfilter these results out either."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/bf4151a08951ea6281cbeec2bae8b33079a263b7", "message": "Don't show a trailing comma in the related functions list"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/49653e3f98eb968d24329138c2c84e0ee1c2a5a4", "message": "Only start history once\n\nWe used to call Backbone.history.start() every time the user changed the\nversion they were looking at. Make sure to only call it the very first\ntime."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/03a8c5623109073245a2cf48209101ba4bb1212f", "message": "Refactor the view refreshes\n\nInstead of emptying out the element and re-filling it, create it\noff-screen and replace the entry in the DOM all at once.\n\nMake use of forEach() instead of iterating over keys."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6ae25739a1c40f8a9c5711f01aee1bcb69f3f324", "message": "Update docs a bit"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/9c64ee6774a1bea51e0132a5ed4cd417bc3c26ab", "message": "Bump version to 0.2.2"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/3d4902537d0c59d18112d9a725fe7e02652a6322", "message": "Send more types through the markdown parser"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/cfe8d425aade6862d7ba574aafc92526e2a73405", "message": "Update some dependencies"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/27dbfc26fdb53cb06d73e8d87b2dfaba060700c9", "message": "Show comments for enums as well\n\nWe extract them from the source, so let's just show them."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/0da2b52e9ce3ffe7ae5cba7d5842a97d90067e68", "message": "Scroll to the top when switching views"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/2a2f1cc3dd717196e922714b47a798e7b8cffbf8", "message": "Bump version to 0.2.1"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/0f44ffbda76bcc6d4c974c6b3fc745599164a9f3", "message": "Use full names for the examples\n\nRocco uses the full (relative) filename for the examples, but we were\nstoring them under their basename, which causes the links to be wrong.\n\nUse the real paths to fix this. This fixes #10."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/300ea326fbd7270bfb123335a47bd2c33c0ed7bc", "message": "Show the main page when coming back from a search\n\nWhen the search field has less than two letters, show the index\npage. The reverse effect is already here, but switching from search\ninto main listing was missing."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1527a8c127fdaf505ef49c2c764961e569a66a48", "message": "Fix the search field\n\nSet and get the input's value via .val()."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/89974d5b4eb0a1ee07b8a381422f1d73ae604607", "message": "Update authorship and homepage information"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a2ed02e8e791767761e41a05f42d3677dbb2f05e", "message": "Bump version to 0.2.0"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ef48419de4f68f52fca69ddebd8cffb4cfb8aacf", "message": "Fix the list fix\n\nAdd the attributes to the link instead of the li so the CSS\nworks"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4c10799a9e10907f3692fc184c7998c86cfb9043", "message": "Fix back navigation\n\nWhen the user arrives at '/', we want to change it to '/#HEAD', but we\nshould replace the state instead of redirecting, which breaks back\nnavigation (the user would go back to '/' which would redirect again).\n\nThis fixes #8."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/f9f443fdff5842af1f7c02124b7cffe0f618ee2a", "message": "Better versions list\n\nUse a list with no style instead of floating the div, which provides a\ncorrect result even for short lists."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/3a48fbe1da349c8d26ebb3a759617ebfe1eb0bd1", "message": "Update to latest and greatest"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b5b5cc70fcafd050ec6c1aefe39a6302c020f4a0", "message": "Let the version list wrap\n\nFunctions that have been in the API from the start make the versions\nlist wider than the main content container and overlap with the\nnamespace list.\n\nAdd 'float: left' so they wrap."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/132e80e34fcdcc9cf6e5987686a87bc1fdf912da", "message": "Really remove the leftover function"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6231e322b4d95e598d1f16f754a155b21501dde7", "message": "Merge branch 'markdown'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/34fad8ae2c66b6a88c69138091f8c7d5761a3f93", "message": "Indent the function description in group view"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/9c297632f9fb2deaa595b4570ababd3624466497", "message": "Parse comments as markdown"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/3bfafaa10cd67e91da218c5dd0836845c3250879", "message": "Remove a left-over function"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6689b0827aa04f020ef0888ddb814158d7f2f6ba", "message": "Depend on redcarpet"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/405d64d1d972ac85276aa888b06aea41c3c0aa94", "message": "include GLI::App as the warning says"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/06cd923d0ce44a86f7357397a428424af48ad25c", "message": "Use the more accurate ~>0.18.b1 rugged version"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b1e097d0b93cdd591245bf3b41970a20f9a12662", "message": "Merge branch 'rugged'"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6b7ac6e2686b6e996019b79e6cca3371c3a649a0", "message": "Let bundler run\n\nMove the version to its own file so we the gemspec doesn't require\neverything docurium does to run, taking us out of a catch-22.\n\nOn the way, declare dependencies on gli and rugged (the ~>0.17.beta\nmakes it build the 0.18 versions)"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/118cf848aa34abae8cb8cf816ba5caad2423e4ee", "message": "Complain if there is no branch configured"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e13a03724b441ea1655d94ad1bc7622ceb561ed3", "message": "Bump version to 0.1.0"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e2956e05256351633fba5c02dca494c3824c5fd3", "message": "Raise an error if there is no branch configured"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e61815f16601e626bfd37d775a804f0d0eaf3a35", "message": "Remove remnants of file/dir creation"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/2426a6af9da22cb4d42abef76644c216a2a10bf8", "message": "Write out the site and project files to the repo"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/14bc6c07d4d7789ff5db4e7e4d674fe598f152e8", "message": "The files are put in correctly"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/81da4c5d3ca9dcfa61a76d6dcfead8cd7917c76b", "message": "More preparatory work"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/bc076ad9e3cb128117acf5d7340905812fc0e27b", "message": "Preparation work: read the subtree into an index"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/580396e4fa25a938a98c8270dce6fe33dd58201f", "message": "Update the docs branch via rugged"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/9ec17f449150ce3e9ef992c1a45625b89b1b75a1", "message": "Get the list of tags from rugged"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d15a41b2f607edbd7b643291cac4a363fb25b4d8", "message": "Use a docco.css that exists"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b30f879ded81e8f1a657b5a07abe85c99c00ba13", "message": "HTML-escape the function descriptions"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/9d7a49c262e59bc44cfb28893e16fdc61c2f3fe1", "message": "Support GLI-2"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/9a4059ca2acfbac15ad1fab0901a7cdb7b6cee1a", "message": "Fix filename listing\n\nfile_map.values is an array and this creates an array of arrays int\nthe JSON data. Add file_map.values[0] so we get what the js code\nexpects us to have."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a24bf9b62b47bee8d3ddb3675a053e315cca5938", "message": "Show the description in the group view\n\nrawComments doesn't exist anymore, use comments and\ndescription"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ea1a5010437a4f11c912f71a056dd7c9b574dc03", "message": "fix define -> enum transformation\n\nWhen we get the result from d[:body].scan we need to\nselect the first element. Otherwise the string representation\nis \"[\\\"GIT_STATUS_WHATEVER\\\"]\" which wreaks havoc with the rest\nof the string transformations"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/779218f4767f9af89ead774e8ab398a2a1636fda", "message": "Use each_line so it works under ruby 1.9\n\nThis closes #4."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/3e80fb6d01798077ba2591536fded2668322537b", "message": "Leave function links undecorated until hover\n\nSigned-off-by: Carlos Mart\u00edn Nieto <carlos@cmartin.tk>"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081686", "body": "They're not clearly highlighted as links, so it just looks (to me, at least) like they were wrongly rendered. So they should either be marked more clearly or the underline taken away.\n\nI never knew they were links.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081792", "body": "> Open a PR that fixes the CSS then...\n\nLazy open source developers... :p\n\n> I can't really think of a more obvious way to mark a link than to underline it. :)\n\nColours come to mind. If the colour is indistinguishable from normal text, I assume it's just underlined text, but maybe I'm just not a web person. Alternatively, leaving the link unmarked until you hover over it, and have some sort of header (which we should probably have anyway) saying that you can click on the functions to get to the documentation.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7358256", "body": "Running this against current libgit2 I get an odd thing. In `lib/docurium.rb:293` it has `[\"GIT_STATUS` as one of the types which messes up with the regex.\n\nDoing an ugly hack to make it build, the javascript then fails with the same kind of error `Uncaught SyntaxError: Invalid regular expression: /[\"GIT_ATTR_CHECK /: Unterminated character class`\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7358256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7358886", "body": "This seems to fix this particular issue, though I can't see the description of the functions in the namespace overview.\n\n``` diff\ndiff --git a/lib/docurium/cparser.rb b/lib/docurium/cparser.rb\nindex 7c31775..3a4f156 100644\n--- a/lib/docurium/cparser.rb\n+++ b/lib/docurium/cparser.rb\n@@ -59,7 +59,7 @@ class Docurium\n         d[:tdef] = nil\n       elsif d[:body] =~ /\\A\\#\\s*define\\s+(\\w+)/\n         names = []\n-        d[:body].scan(/\\#\\s*define\\s+(\\w+)/) { |m| names << m.to_s }\n+        d[:body].scan(/\\#\\s*define\\s+(\\w+)/) { |m| names << m[0].to_s }\n         d[:tdef] = nil\n         names.uniq!\n         if names.length == 1\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7358886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7364716", "body": "And with this patch the UI shows the comments\n\n``` diff\n\ndiff --git a/site/js/docurium.js b/site/js/docurium.js\nindex 5154f21..b5a9cbd 100644\n--- a/site/js/docurium.js\n+++ b/site/js/docurium.js\n@@ -382,7 +382,10 @@ $(function() {\n         argsText = '( ' + fdata[f]['argline'] + ' )'\n         link = $('<a>').attr('href', '#' + groupLink(gname, f)).append(f)\n         $('.content').append($('<h2>').append(link).append($('<small>').append(argsText)))\n-        $('.content').append($('<pre>').append(fdata[f]['rawComments']))\n+        description = fdata[f]['description']\n+       if(fdata[f]['comments'])\n+               description += \"\\n\\n\" + fdata[f]['comments']\n+       $('.content').append($('<pre>').append(description))\n       }\n       return false\n     },\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7364716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7552734", "body": "This is also more by empirical evidence than knowing what's going on, but we also need this fix\n\n``` diff\ndiff --git a/lib/docurium.rb b/lib/docurium.rb\nindex 592d581..a5f888b 100644\n--- a/lib/docurium.rb\n+++ b/lib/docurium.rb\n@@ -387,7 +387,7 @@ class Docurium\n\n     end\n\n-    @data[:files] << file_map.values\n+    @data[:files] << file_map.values[0]\n   end\n\n   def mkdir_temp\n```\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/7552734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17783994", "body": "Finally got this into the main branch.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17783994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17784084", "body": "Thanks. These changes made it in as part of other fixes.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17784084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17784123", "body": "FTR, this is about the top links that should point to the examples under `network/`\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/17784123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30856107", "body": "Thanks, but I updated the gemspec before noticing this PR.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30856107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/34748012", "body": "Cool, I'll see if I can get time to do that and remember what I was doing.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/34748012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/61407931", "body": "The ruby ecosystem has a habit of breaking on minor changes. I'm not seeing this on my computer but that's probably because I just haven't updated the gems.\n\nI guess we'll just have to require the compat layer now.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/61407931/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/65637127", "body": "This may have been a feature some time back, but I don't recall it ever working. Everything is set up to work inside a Git directory and to write out a Git tree and a commit for it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/65637127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/67632894", "body": "I've added the logic which knows how to create a relative path from the example to the CSS file, so we can use this wherever.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/67632894/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/67632976", "body": "This was fixed with #20 \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/67632976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/67734675", "body": "Most of this has been taken care of with a0143c32 which links those callback types with documentation and exposes them through the search.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/67734675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/203419410", "body": "Thanks. I'm not sure about the 'callbacks' name for function pointers, since they're not always callbacks as such, but you might be providing an interface in a struct. But I'll merge as-is and then I'll see if I feel strongly enough to change it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/203419410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/220272532", "body": "This is very oriented towards GitHub because it was made by a hubber for a project hosted on GitHub. If you'd like to define an interface for writing things out, I can take a look at the PR, but it's not something I'm going to do myself, since I won't be using that feature.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/220272532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/220284178", "body": "Those whole-file comments in libgit2 are left-over from doxygen. docurium currently uses the clang parser, which means those aren't recorded anywhere (and the same goes for macros, unfortunately).\n\nHaving the group explicitly in the docs would be a way to solve this. We likely won't use this in libgit2 though since we have the same general policy of using underscores to namespace. So there is no incentive for me to write this feature.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/220284178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18817135", "body": "This hardcoding seems unnecessary, since we control what gets written out and have the file at `ex/css.css`, simply `href=\"css.css\"` should be enough, no?\n\nI hear rumours that people other than libgit2 use this project, so they'd probably appreciate it if we didn't hardcode our url into it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18817135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18896112", "body": "The `api.docurium` file has a `github` field which we could use to determine whether the project is hosted on GitHub, so we could base some logic off of that, but I agree it's al going to be somewhat ugly no matter what.\n\nIf we include `{{css}}` somwhere and pass in the contents of the CSS file, it should work, even if it means larger file sizes.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18896112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/19529208", "body": "I think what I'm going to do here is calculate the relative path of the example to the css file. We know where the css file is and we know the path to the file, so we can count the slashes and put the right amount of '../' in a string to pass to mustache.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/19529208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "niess": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/1bfdc4d7d55342bd76e02c0022a21f13c8e76cc1", "message": "Corrected a bug resulting in function's group not being displayed."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/4a4d1e9edf2e0f1d70c6cc0165210b38d7749850", "message": "Patching a regexp bug.\n\nExact matching of `returned by/argument in` is now allowed."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/04a516bf64b26b93fa8b75aec736254ed68a221e", "message": "Some cosmetic tunnings.\n\nAlso link doesn't show the current function anymore.\nAdded commas separator and dot for the list of links to Argument in/returned by, in structures."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1810453499a87262faa07b153d33dec094edd67b", "message": "Added a callback entry to the sidebar.\n\nCallbacks appear in the `Types` menu. In addition if a type is missing, e.g. opaques structures, the corresponding sub-menu doesnt appear anymore."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/773fdd377dc0aea5e1168b1d25faadbd2c0ee274", "message": "Added callbacks to the struct usage info.\n\nCallbacks as well as functions are now shown in the stats of a structure usage."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1457e6e962408172748083d8b6d39ffa66c19276", "message": "Force string encoding to UTF-8.\n\nThis prevents a crash when symbols, e.g. &alpha; are encoded using .to_json."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/203621241", "body": "Hello :) One could flag function pointers as callbacks only if the end with _cb, _cb_t. Though it would enforce some coding convention :(\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/203621241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/218079209", "body": "Agreed. What I am doing at moment is overwriting to a temporary dev branch. Then I merge manually to the gh-pages once I am happy with the result. But being able to dump to a local dir would be more convenient.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/218079209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/218080886", "body": "I got the same problem. I changed the naming of my functions which with rather OK in my case. The second suggestion, i.e. provide exceptions for group names in the config file, should be rather straightforward to implement, changing only docurium.rb hopefully?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/218080886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Therzok": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/03e66b1d8d712002d211e091a6ee7fc23882028b", "message": "Possible extra line in README."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a941a77652483164ea1d564d1f400a59166ca4b0", "message": "Require redcarpet compat."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schacon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/6703d5db8c18f63c95910fe879cafa7216f5bf8f", "message": "vendor the css and refer to it instead"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5b4565e5608204003675f4e71d00b644725200f1", "message": "Merge pull request #1 from wesbillman/support-camelCase-functions\n\nChange regex to support camelCase functions."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/7e3da1e9771ddc682b9660cc34950af7911fbbbf", "message": "Merge pull request #3 from carlosmn/master\n\nLeave function links undecorated until hover"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ec5980f984257d61c7681c29c5c3142f42c4a5e3", "message": "minor fix, 0.5"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5e77a57d5ca1f592bfc47ec671e9fcc5ee2cb828", "message": "hm"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/aa218f56b14c9653891f9e74264a383fa43fefbd", "message": "only .c files"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6e39f085def79bd9ddf67d41be62eeb3f603d335", "message": "bump version"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/c09363f58b7b484b8fe32dcd5d56eb7a53ddc683", "message": "fix for groups issues"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d127721bcbdcaaf9e88781f7bd824f172ec4383a", "message": "link example use"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5a2b8ba1ab421867ed110a4f382a0b4c2ce1d42c", "message": "one way function linking from examples"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/271ec42ec9673f5026c667570ef62e4af7cd8be2", "message": "examples option for docco parsed examples"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/008d5929885531ce057aa98f14980493ac6faa09", "message": "link to site"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ebe0a52956b3d1ecb19c063694a2e74720957ebc", "message": "can write directly to a branch"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/12972b71c320acf8009b183de89d06f3c09ff116", "message": "show warnings on output"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1d8ec08536c7873b38e25cea9e0c893fec09af6c", "message": "readme updates"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e768f41e3d5ad98cfe885f413d10fecaff16d597", "message": "some cleanups and readme updates"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/7e154afeb4d31e0dd61678066ea7fab66b9a98c6", "message": "add cli option to gen a sample file"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6a48d48ce9b95d66ada7e0427dbe30c8ef06fa0f", "message": "fix dep"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/69a9dbea1953f1e831bb1817d6e8c35dcf4b9ede", "message": "gemspec"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/f9fca82d260783fcf195f09f637d1d52f6208a9b", "message": "changelog"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/b396712dd98fe9a733e96243e9970fa02f9820b6", "message": "fix version link"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a36e818ca0635974686e9709fb750b240cc1fcae", "message": "highlighting changing functions on index page"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/1cead3c3434c33ccf40848db6496441bf3df4897", "message": "set title from project data"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/6506fffcfe13e2e348dc7c8e9156735f7a419f77", "message": "lists versions a function has existed in, highlighting where it changes signatures"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8e6ac325767340a75d1f353f0be9b7c199af23c5", "message": "add signature history to project data"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a8a782bf3de46fb28a2e53f9bacf037e3cb06710", "message": "fix tests for config file change"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/804f5e5012e415c437d08e246cf822818baaed3f", "message": "update readme"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/7a5568c775765431baeec9a921510ebb83ab8f44", "message": "readme update"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/d6fe55b1e0dbff8b3f21e3066b59c4a1beed545f", "message": "version picker working"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/8671a1856acca7373733449f4be3ce00315d39f7", "message": "can switch versions"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/e47e79e707b4a1b0bf5458ddd96a63d83dd12b68", "message": "first element of versions array should be newest"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ae3d0ac30083b3e7f1d1742891da1d4ba834c8de", "message": "producing data files for all tagged versions"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/0ceaaa6182d9299ad5aee34c468e18985ea2e5c1", "message": "finally move web stuff to site/"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ddc9e8e04e2cdecb8b904ea16abe73b109d754ac", "message": "removing stuff from cli and concentrating on config file"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/47bdc10cf4f25cc43ef01cdf9eeab9f5d857e1c3", "message": "index page route so back button works"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/bbf4196b592701d919019858019a8f751c4c6502", "message": "showing index page of all funcs"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/bb587aa4f9639320dc46d31e2376e9db7aea6b83", "message": "add type search"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/088d85311fde227c91a19a7455f1d5f9e0e3a5d2", "message": "force the type"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/ddc6be4aed86c8e00ec1bdbf698ca8d604207780", "message": "better?"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/477fcbecef4ba086ff8fbe40ce8c1f7aa3cdee6d", "message": "basic function searching - through name and argline"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/2c021c23724c5e46bc158f8f720eee85b1a3069a", "message": "swap version and search boxes"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/21ad97d49bdf73c6a5f1434512fee4e9fb3d7e58", "message": "links to all the places structs are used and needed"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/54ea15e6a2e2eaa5f7699b4f7e2b902623dc63cb", "message": "cross linking structs"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/34a9a1b21a306860bd7dc0b22dfda2adff1fb8d1", "message": "using links to github to look up function defs"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/cc051809f782b83b1ea5bb61dc696c4a4eff270e", "message": "remove misc group"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/df3699ae0fbbe6d4aad7f5bd9d4b9e4a3f12f5c9", "message": "sequential sigs parsing"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/75ee4d28b9ab5b13a6bba97ca632e863d4cab0e4", "message": "break out enums, style bar better"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/00b9bd47485a16dab3754955f49141ea4fbdf7a7", "message": "showing public and private types"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/7f7dfdcb387a9c26c4d358cddc55680c336fc190", "message": "loading types and clickable"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/0a696eced9967a2239a67d1112d1f31887356dd8", "message": "wip"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/973544b197f80626d904b4e4e214aa8fc0823046", "message": "make filename the grouping if no subgroup in func name"}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/5a80bcac7b014e9e3967ca81272a5104fc45c1bb", "message": "styling changes and globals extraction"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18861630", "body": "Hm, yeah, I'm sure there's a good way to do this, I'm just a little rusty on how this library works exactly. The main issue is that there are example files in both `ex/file` and `ex/network/file` so relative links don't work without more magic. I have to make them absolute. but that means that I have to hardcode the `libgit2` in there I believe (like `/libgit2/ex/css.css`). So stupid.\n\nIt may actually be easier to just slap the css itself into this template file rather than linking it. Not super efficient, but it's simpler and bulletproof.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/pulls/comments/18861630/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "arrbee": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/0cfc0afb749fe2914867ec8a309b72052f812bc1", "message": "Move header data parser into CParser object\n\nSince the parser function really doesn't make sense standalone,\nthis moves it to the Docurium::CParser object where is belongs."}, {"url": "https://api.github.com/repos/libgit2/docurium/commits/a27d97d3c3004dff8ff8c64802eb9bbd94d6a9d1", "message": "Improve header file parsing\n\nThis moves the C header file parsing into a separate object\nand expands it to cover a broader range of constructs that\nare found in the libgit2 headers."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/6413324", "body": "@tanoku Take a look if you get a moment.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/6413324/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/6415961", "body": "Man, the diff on docurium.rb is incredibly annoying - a bunch of spurious matches for \"end\" lines in the middle of the function breaks up the function definitions in a painful manner.\n\nIt might help to review this if I gave a little summary of the differences...\n\nI started out just making small changes to the existing version, but ultimately I found that analyzing the headers line-by-line was inconvenient and required me to carry around a lot more state as I went from one line to the next. Instead, I decided to split the file on `/**` comment beginnings, with the idea that there would generally be a `/**` comment block followed immediately by something that was being documented. Then I just needed to write code to figure out what that something was.\n\nSo the `parse_header` method does that - it splits the file on `/**` and then assumes that each chunk will be: `/** header content */ <thing to be documented>; <irrelevant other stuff>;` through the end of the file. It keeps track of which line of the file you're on (which is a little trickier with this method - hence the use of `x.scan(\"\\n\").length` in various places) and it has some minor fix ups to deal with inline `/**< blah */` or even `/** blah */` comments that occur on individual lines inside an enum or a struct.\n\nAfter `parse_header` has found a `[ comment, body ]` pair, it passes the record off to a series of recognizer functions that try to interpret the body content. Actually, it creates a `Docurium::CParser` object and calls the `parse_declaration_block` method which dispatches to the various `detect_<xyz>` methods in series.\n\nOnce one detect method successfully identifies the body content, the whole record is passed to a parser function that pulls apart the body and, if necessary, the block comment contents, in order to completely describe the item. These are the various `parse_<type>` methods of the CParser object. `parse_header` proceeds pair by pair through the file generating a list of records describing the things it finds.\n\nFinally, the whole record list is passed off to the new `update_globals` function which takes each record and extracts the data into the specific format that docurium expects. I wrote the parser and record generator somewhat independently of what docurium expects; this function translates the parsed data into the existing structures for backwards compatibility.\n\nAnyhow, hopefully that will act as a bit of a guide to understanding what's going on. My Ruby coding is a little rusty, so feel free to pick things apart and make me fix it up.\n\nProbably the `parse_header` function should be moved into the `Docurium::CParser` object at some point, since it really doesn't make sense to use the CParser without it.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/6415961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/9382191", "body": "Heya, @carlosmn! Let's get this stuff merged. If I merge this, do you want to open another PR from your branch with the bug fixes?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/9382191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29315620", "body": "Automated post :unamused: one of > 50 made programmatically by user at the same time.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29315620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316299", "body": "> Yikes, that's no fun. Can I help triage them?\n\nThis response does not make sense. You made the automated posts across many different repositories at GitHub. I made this note so the other owners of this repository would understand why the details of the issue you opened appear to have no actual knowledge of this project.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "vmg": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/972940ac5d2463730daf22c3c18a5b672d444f4a", "message": "Merge pull request #5 from carlosmn/one-niner\n\nUse each_line so it works under ruby 1.9"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081629", "body": "...They are linked to the actual API documentation for that function. What's wrong with that? :p\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081693", "body": "Open a PR that fixes the CSS then... I can't really think of a more obvious way to mark a link than to underline it. :)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081806", "body": "/cc @schacon on this.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/2081806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "wesnovo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/libgit2/docurium/commits/1858ce12b53456157d18e28d99f3455640f4deab", "message": "Change regex to support camelCase functions."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tiennou": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/libgit2/docurium/pulls/26", "title": "Quality of life tweaks", "body": "This is a collection of fixes + features I got while learning how it works.\r\n\r\n9f038b0 is the main one. It fixes the rendering mess of bulleted [structs comments](https://libgit2.github.com/libgit2/#HEAD/type/git_repository_init_options).\r\n\r\nb3a09b3 adds a `cm doc --for=$version` option so you're not forced to build *all* versions each time (which is nice :wink:).\r\n\r\n22b9c5c is a style change that makes struct members render like function parameters descriptions. It can be dropped. I was just looking at how the HTML worked.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cholin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/5381231", "body": "in ruby1.9 there is no `each` method for strings. instead you have to use `each_line` now.\nYou have to change  `block[:comments].each` to `block[:comments].each_line` in [lib/docorium.rb](https://github.com/schacon/docurium/blob/master/lib/docurium.rb#L420)\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/5381231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "tmc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/24352093", "body": "This project moved to only building to a branch but didn't update documentation or code or default generated config.\nChange your 'output' to 'branch' and 'cm doc' will put commit new docs on that branch.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/24352093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "noname22": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/24353038", "body": "How... inconvenient. We have a separate repository for the web page, so generating the documentation to a branch of the library repo doesn't really make much sense. Not too hard to work around the issue though.\n\nThanks for helping out!\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/24353038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bf4": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29315763", "body": "Yikes, that's no fun.  Can I help triage them?\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29315763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316115", "body": "Wait, I only created one in this org.  https://github.com/bf4/gemproject/commit/7182872217af47c8aefa5c3b7e0ef7e07c415b76#diff-ec1fb48b6d52b84c9fd5ed9ad06326beR2395  \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316941", "body": "@arrbee You are correct. I had thought, from what you wrote, that I made a lot of issues for the org.  I posted too soon.  \n\nI since checked which issues I created and confirmed it was only one for you.  As you can imagine, I don't want to annoy people.  There's a fine line between explaining where the PR comes from and actually saying automated.  People respond a lot more nicely if I don't explicitly say I generated the issue from the command-line.  In any case, I follow up on every issue I create.  I'm more of a cyborg.\n\nAnyhow, I'll make a PR now, if you'd like that.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/29316941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30420766", "body": "bump :smile: \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30420766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30865785", "body": "It's the thought that counts :) \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30865785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30865821", "body": "Great, thanks! :rainbow: \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/30865821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jameswalmsley": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/44633815", "body": "I did fork docurium a long time a go (when it seemed like the project was no longer active) to add such a feature. Now I've seen that docurium is active again I shall back-port my features to it and make a pull-request.\n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/44633815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "papriwalprateek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/223864268", "body": "I figured out what the `legacy` option is doing. It actually is taking care for any changes in `input` path in the legacy (previous) versions. I am closing the issue. \nBut it would be great to add some information about the config file options in the README. \n", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/223864268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mewmew": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/290652524", "body": "@tiennou Lovely with some quality of life improvements. Both of the first outlined issues, I've also encountered when taking docurium out for a spin.\r\n\r\n> 9f038b0 is the main one. It fixes the rendering mess of bulleted structs comments.\r\n>\r\n> b3a09b3 adds a cm doc --for=$version option so you're not forced to build all versions each time (which is nice \ud83d\ude09).\r\n\r\nAny chance of having this reviewed and potentially merged?", "reactions": {"url": "https://api.github.com/repos/libgit2/docurium/issues/comments/290652524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}