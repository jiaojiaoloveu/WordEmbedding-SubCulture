{"_default": {"1": {"iBotasky": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/586", "title": "Problems of ChromeDevtoolsServer: Method not implemented ", "body": "@zpao Hello, I got a problem\r\nHere is my gradle's setting\r\n```\r\nbuildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            shrinkResources false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n        debug{\r\n            minifyEnabled false\r\n            shrinkResources false\r\n        }\r\n    }\r\n```\r\nI'm closing the proguard  and there is not a relese version of app. But i can see any db or sp files in the Stetho.\r\n![image](https://user-images.githubusercontent.com/13627665/35191344-e808f0b4-feb3-11e7-8a94-36109e977ef4.png)\r\n\r\nAnd there is the log of the logs\r\n```\r\n01-21 00:53:43.239 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: Debugger.setAsyncCallStackDepth\r\n01-21 00:53:43.254 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: Debugger.skipStackFrames\r\n01-21 00:53:43.266 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: Runtime.enable\r\n01-21 00:53:43.321 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: Worker.enable\r\n01-21 00:53:43.332 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: Timeline.enable\r\n01-21 00:53:43.390 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: IndexedDB.enable\r\n01-21 00:53:43.402 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: Page.getNavigationHistory\r\n01-21 00:53:43.412 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: Worker.setAutoconnectToWorkers\r\n01-21 00:53:43.474 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: IndexedDB.requestDatabaseNames\r\n01-21 00:53:43.484 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: Page.getNavigationHistory\r\n01-21 00:53:55.625 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: ApplicationCache.enable\r\n01-21 00:53:55.635 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: ApplicationCache.getFramesWithManifests\r\n01-21 00:58:59.963 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: Method not implemented: Not implemented: IndexedDB.requestDatabaseNames\r\n01-21 00:59:05.274 4262-4330/com.sirius.cybird D/ChromeDevtoolsServer: onClose: reason=1011 EOF while reading\r\n01-21 00:59:05.274 4262-4330/com.sirius.cybird I/ResponseBodyFileManager: Cleaned up temporary network files.\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "LouisCAD": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/581", "title": "OutOfMemory Exception when OkHttp request/response body has huge data(like a video for example)", "body": "Hi, I'm uploading video files with an app using OkHttp, and Stetho still tries to allocate the whole video (which was more than 100MB in my case, but could be bigger) in RAM instead of setting a reasonable threshold where it'd just print the size of the request, and maybe the beginning of the request up to the max RAM consumption threshold.\r\n```stacktrace\r\nHappened on thread: Thread[StethoWorker-main-730,5,main]\r\n                                                                              java.lang.OutOfMemoryError: Failed to allocate a 8208 byte allocation with 136 free bytes and 136B until OOM, max allowed footprint 201326592, growth limit 201326592\r\n                                                                                  at java.io.BufferedOutputStream.<init>(BufferedOutputStream.java:76)\r\n                                                                                  at java.io.BufferedOutputStream.<init>(BufferedOutputStream.java:59)\r\n                                                                                  at com.facebook.stetho.server.http.LightHttpServer.serve(LightHttpServer.java:46)\r\n                                                                                  at com.facebook.stetho.inspector.DevtoolsSocketHandler.onAccepted(DevtoolsSocketHandler.java:52)\r\n                                                                                  at com.facebook.stetho.server.ProtocolDetectingSocketHandler.onSecured(ProtocolDetectingSocketHandler.java:63)\r\n                                                                                  at com.facebook.stetho.server.SecureSocketHandler.onAccepted(SecureSocketHandler.java:33)\r\n                                                                                  at com.facebook.stetho.server.LazySocketHandler.onAccepted(LazySocketHandler.java:36)\r\n                                                                                  at com.facebook.stetho.server.LocalSocketServer$WorkerThread.run(LocalSocketServer.java:167)\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/568", "title": "Migrate BSD + patents license to MIT or Apache v2.0, as done for React", "body": "Hi Facebook,\r\n\r\nCould you consider migrating the license of this project too, as has been [announced](https://code.facebook.com/posts/300798627056246/relicensing-react-jest-flow-and-immutable-js/) and [done](https://github.com/facebook/react/commit/b765fb25ebc6e53bb8de2496d2828d9d01c2774b) to React?", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/568/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ninovanhooff": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/575", "title": "regression: width and height not displayed in box model (1.5.0)", "body": "After upgrading 1.4.2 -> 1.5.0, I did not see the width and height displayed in the blue shaded area of the box model anymore. Notice that in the screenshot, the value of width is 720\r\n\r\n\r\n![screen shot 2017-10-13 at 15 00 10](https://user-images.githubusercontent.com/10351007/31816793-f0feb82c-b591-11e7-9034-f394282bfee3.png)\r\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/552", "title": "[Feature-request] Allow more than 1 Descriptor for the same type", "body": "If I want to add my own View Descriptor, I have to remove the default one via reflection:\r\n\r\n```     \r\n Stetho.InitializerBuilder initializerBuilder = Stetho.newInitializerBuilder(application);\r\n\r\nDescriptorProvider descriptorProvider = descriptorRegistrar -> {\r\n    if (descriptorRegistrar instanceof DescriptorMap){\r\n        try{\r\n            DescriptorMap descriptorMap = (DescriptorMap) descriptorRegistrar;\r\n\r\n            //Remove previous View descriptor, because there can only be one per (View) type\r\n            Field fMap = DescriptorMap.class.getDeclaredField(\"mMap\");\r\n            fMap.setAccessible(true);\r\n            Map map = (Map) fMap.get(descriptorMap);\r\n            map.remove(View.class);\r\n        } catch (IllegalAccessException | NoSuchFieldException e){\r\n            System.err.println(e);\r\n        }\r\n        \r\n    }\r\n    descriptorRegistrar.registerDescriptor(View.class, new CustomViewDescriptor());\r\n};\r\n\r\n\r\n\r\nAndroidDocumentProviderFactory factory = new AndroidDocumentProviderFactory(application, Collections.singletonList(descriptorProvider));\r\n\r\nInspectorModulesProvider inspectorModulesProvider = () -> {\r\n    Stetho.DefaultInspectorModulesBuilder inspectorModulesBuilder = new Stetho.DefaultInspectorModulesBuilder(application);\r\n    inspectorModulesBuilder.documentProvider(factory);\r\n    return inspectorModulesBuilder.finish();\r\n};\r\n\r\ninitializerBuilder.enableWebKitInspector(inspectorModulesProvider);\r\n\r\n\r\nStetho.initialize(initializerBuilder.build());\r\n```\r\n\r\nIt would be nice if there would be a AndroidDocumentProviderFactory that allows to skip adding of specified classes. Another approach would be to allow multiple Descriptors for the same type", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "paour": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/534", "title": "App crashes when Stetho is open during a screen rotation", "body": "This is running on a Genymotion 2.9.0 VM, Android N.\r\nStetho 1.5.0\r\nThe app is using AppCompat 25.3.1.\r\n\r\nStacktrace:\r\n\r\n```\r\njava.lang.IllegalStateException: Fragment has not been attached yet.\r\n    at android.support.v4.app.Fragment.instantiateChildFragmentManager(Fragment.java:2154)\r\n    at android.support.v4.app.Fragment.getChildFragmentManager(Fragment.java:704)\r\n    at com.facebook.stetho.common.android.FragmentCompatSupportLib$FragmentAccessorSupportLib.getChildFragmentManager(FragmentCompatSupportLib.java:101)\r\n    at com.facebook.stetho.common.android.FragmentCompatSupportLib$FragmentAccessorSupportLib.getChildFragmentManager(FragmentCompatSupportLib.java:68)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForViewInFragment(FragmentCompatUtil.java:120)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForViewInFragmentManager(FragmentCompatUtil.java:99)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForViewInActivity(FragmentCompatUtil.java:83)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForViewInActivity(FragmentCompatUtil.java:56)\r\n    at com.facebook.stetho.common.android.FragmentCompatUtil.findFragmentForView(FragmentCompatUtil.java:46)\r\n    at com.facebook.stetho.inspector.elements.android.ViewGroupDescriptor.getElementForView(ViewGroupDescriptor.java:76)\r\n    at com.facebook.stetho.inspector.elements.android.ViewGroupDescriptor.onGetChildren(ViewGroupDescriptor.java:47)\r\n    at com.facebook.stetho.inspector.elements.android.ViewGroupDescriptor.onGetChildren(ViewGroupDescriptor.java:27)\r\n    at com.facebook.stetho.inspector.elements.AbstractChainedDescriptor.getChildren(AbstractChainedDescriptor.java:118)\r\n    at com.facebook.stetho.inspector.elements.Document.createShadowDocumentUpdate(Document.java:307)\r\n    at com.facebook.stetho.inspector.elements.Document.updateTree(Document.java:341)\r\n    at com.facebook.stetho.inspector.elements.Document.access$1200(Document.java:31)\r\n    at com.facebook.stetho.inspector.elements.Document$ProviderListener.onPossiblyChanged(Document.java:720)\r\n    at com.facebook.stetho.inspector.elements.android.AndroidDocumentProvider$1.run(AndroidDocumentProvider.java:71)\r\n    at android.os.Handler.handleCallback(Handler.java:751)\r\n    at android.os.Handler.dispatchMessage(Handler.java:95)\r\n    at android.os.Looper.loop(Looper.java:154)\r\n    at android.app.ActivityThread.main(ActivityThread.java:6077)\r\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:865)\r\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)\r\n```", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/2f12645c4da3ace149afcf01ec1dba043e1e4950", "message": "Add details on OkHttp integration\n\nCopy of #426"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/aab66fba563bae475744db9cb177434630023460", "message": "Restore support for default classes and packages"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/204b2c4f3da4d1f9984659648b96451591c4f53b", "message": "Fix importClass and importPackage not finding external classes\n\nFor external packages, the package name needs to be prefixed with `Packages.` per https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java#External_Packages_and_Classes"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mariotaku": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/508", "title": "Make dumpapp available in PyPI", "body": "It would be nice if you could publish `dumpapp` into PyPI, so we can install without cloning whole source tree.", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/6ac57a4e037dda6caeec0f5dc017ceb3420a7395", "message": "Made URLConnectionInspectorHeaders case insensitive"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rickbrew": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/458", "title": "Improve performance of Document.applyDocumentUpdate", "body": "There's a TODO that I left behind:\r\n\r\n```\r\n    // TODO: it'd be nice if we could delegate our calls into mPeerManager.sendNotificationToPeers()\r\n    //       to a background thread so as to offload the UI from JSON serialization stuff\r\n```\r\n\r\nFrom what I remember, this is the biggest time cost of this whole system. The JSON serialization and transmission over-the-wire can really tie up the UI thread badly for applications with \"large\" View hierarchies.", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/228", "title": "ShadowDocument and ElementInfo should include attributes", "body": "The shadow DOM used for tree diffing does not include an element's attributes in the `ElementInfo`. This means that something like Search has to pull data from both the shadow DOM and the node descriptor, which is bad because then we're mixing snapshot vs. realtime inside of one algorithm.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/210", "title": "AndroidDocumentProvider is overzealous with updates", "body": "`DocumentProvider` is obligated to tell its `Listener` that the tree changed by calling the `DocumentProvider.Listener.onPossiblyChanged()` method. `DOM` then picks this up and re-reads the entire tree and does some smart stuff and pushes the delta over to Chrome.\n\nHowever, `AndroidDocumentProvider` calls `onPossiblyChanged()` once per second. Every second. Even if nothing could possibly have changed! If we can hook into something like `ViewTreeObserver` correctly then we should be able to have a better idea of when we should call actually call this method.\n\nThe goal: if the app is idle, then `AndroidDocumentProvider` should not call `onPossiblyChanged()`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/208", "title": "View --> Fragment cache can be optimized", "body": "In `ViewGroupDescriptor`, we have a cache for the result of calling `FragmentCompatUtil.findFragmentForView()`. For any `View` that we haven't seen, this necessitates a lot of linear searching. It's fairly brute force.\n\nHowever, we can do better. Since we're doing tree diffing now, that gives us a good time to instead build a `Fragment` <--> `View` mapping. Or, rather, when `AndroidDOMProvider` calls `DOMProvider.Listener.onPossiblyChanged()`, that's a fantastic time for us to _clear_ a `Fragment` <--> `View` cache which we could store in `AndroidDOMProvider`. Then, in `ViewGroupDescriptor`, we would ask our host (via `getHost()`) (the host is the `AndroidDOMProvider`) if it knows whether a `View` is owned by a `Fragment`. The first time this happens, we can populate the cache by traversing all the fragments and building the `Fragment` <--> `View` map.\n\nThis means we don't have to do a weird linear search for every new View we see. It means we will only need 1 `Map.Entry` per `Fragment` instead of 1 per `View`. It should be nice wins all around.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/199", "title": "CheckBox doesn't list checked state as attribute", "body": "Would be nice to see something like:\n\n```\n<checkbox id=\"@android:id/checkbox\" checked=\"true\"></checkbox>\n```\n\nSince CheckBox only supports setting a single change listener, we may need to poll this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/6cdd9bf939ee220c1ca1acaa64375c4cc5df7eb9", "message": "Merge pull request #544 from naturalwarren/ws_connection_npe\n\nNull check Interceptor.Chain.connection()."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b187ddb65c5e7e4ceed9157a3f270f62040b142a", "message": "Merge pull request #522 from emilsjolander/fix-css-crash\n\nFix crash when stylesheet text is empty"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b92b0f768e28a92d1d215ad30f7b22d704a7bb61", "message": "Merge pull request #521 from emilsjolander/fix-hit-test\n\nAllow hitting empty viewgroups"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/44fe4bb878f52d413d4eaeb9637b30a2525e725c", "message": "Merge pull request #510 from emilsjolander/hit-test-fixes\n\nSome fixes to recent hit test improvements"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/dc84e6f710a9488cb04ddb1c1a81e202a47efa6a", "message": "Merge pull request #500 from emilsjolander/hit-test\n\nImprove hit testing to handle non-view elements"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7603ac22a987a96510aa6d196d81b6ae95c8ff21", "message": "Merge pull request #507 from emilsjolander/nullcheck\n\nFix logical error in null check."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/bfa7162d0efe183d1353216aa21239fdae1bd9d0", "message": "Merge pull request #503 from emilsjolander/editable-styles\n\nAdd support for editable style properties"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/42f0f75199e85d4b0ff34d8355df4a439f98231d", "message": "Merge pull request #497 from emilsjolander/null-bounds\n\nUse empty rect if bounds are null, avoiding NPE"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/300c5f63eb24e069ae90a418abed38817d7f4a03", "message": "Merge pull request #484 from duanbo1983/fix_rss_url\n\nFixes rss url; otherwise it gets 302 status code and shows a blank list."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/26c35e846d9d69d3267b6c8330755190be78685f", "message": "Merge pull request #495 from emilsjolander/attribute-modified\n\nFix typo for DOM.attributeModified"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/845caefe6a59bd826062fd4854657e160d3c3e6a", "message": "Merge pull request #493 from emilsjolander/selector-name\n\nMove selector naming to the descriptor"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7c271178f734374ae1ce46305e549b72f5a2b14b", "message": "Merge pull request #494 from emilsjolander/public-HighlightableDescriptor\n\nMake HighlightableDescriptor public"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d15f8bf93ffce9d82020d569bfbd37f41d4439f8", "message": "Merge pull request #488 from emilsjolander/descriptor-provider\n\nAdd ability to register custom descriptors"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/688232315ae9a616c23b05aa38dc8b7b86b7b1d1", "message": "Merge pull request #489 from emilsjolander/highlight-bounds\n\nAdd ability to highlight sub-bounds of view"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b664719827bc90752103246e77645416344b9993", "message": "Merge pull request #486 from viviwen123/patch-1\n\nfix TextViewDescriptor npe"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7931536721467575b832dd35bb83cbc5a466cdf8", "message": "Merge pull request #487 from emilsjolander/generics\n\nMake NodeDescriptor, Descriptor, and HighlightableDescriptor generic"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d0f805aaa8fe16e2561d6a4d3a5c7415a2eda90d", "message": "Fix extranneous boxing and also correctly check return value of binarySearch() (#470)"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/37e615ed293ab49073f57b37e51fdcc6334cf919", "message": "Comprehensive fix for NPE and retained Fragments\n\nCloses #381"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/118d516510ef11e633927af919300bb67be6f6c4", "message": "Fix ObjectMapper's treatment of static fields (#465)\n\nWe should not be setting static fields from JSON data, or serializing\r\nthem into JSON data. Also, this prevents Stetho from working with\r\nAndroid Studio's Instant Run since it injects some stuff into there.\r\nThis can manifest itself as a totally blank inspector window."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/86e9cd4dcb2a66b6e32d73a169572a248f1cbf83", "message": "Update to gradle 2.2.2 (#464)\n\nAndroid Studio is very persistent about nagging about this."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/49166da4a056235dfe04d5b7b2ba7aa89142eaa6", "message": "Merge pull request #448 from longinoa/fixNPE\n\nFix NPE in ObjectMapper"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/42a8414634ea788f67939ed51ec6d83343cdd705", "message": "Merge pull request #449 from blavalla/child_node_not_focusable\n\nMake sure only unfocusable children's descriptions are being co-opted by parents"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/83c0625385b34517387dc7a564366bea41068e91", "message": "Merge pull request #414 from blavalla/accessibility_accessibility_focus\n\nAdded various other properties to the accessibility inspection"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/1a4dd9db2584a0609118a599ec97f75c51b3a77c", "message": "Merge pull request #410 from blavalla/accessibility_ignored_reasons\n\nAdded ignoredReasons to accessibility inspection"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b7dd70d06bd50cf6234f46dcf679ae1d98d3a3a6", "message": "Merge pull request #387 from blavalla/accessibility\n\nAccessibility"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/6ac43c5cb81e5106c5fb53e95142d984d0303867", "message": "Merge pull request #348 from rickbrew/cache1\n\nCache the result from ObjectMapper.getJsonValueMethod()"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b247a0b3363075e22da25ade97409141da3280f5", "message": "Cache the result from ObjectMapper.getJsonValueMethod()\n\nCaching this results in significant performance wins for the Elements\ntab.\n\nI also experimented with a general reflection cache, e.g.\nClass<?>.getFields(), getEnumConstants(), etc. While that also seemed\nto improve things, I'm not completely confident without running a\nmicro-benchmark or a sampling profiler."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/ee0b7fd702991429ff8bee3271d2edc9e21d7b2d", "message": "Merge pull request #345 from rickbrew/master\n\nFix for duplicates in Element tree, and fix JSON unit test"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a08e5308befc82197eb28f3259233c9487a7185a", "message": "Fix ObjectMapperTest.testNestedProperty unit test\n\nThis fails on Java 8 because the order of serialization changed."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/24d0d3e25d8c72eee3dc373b6915368c68c649b8", "message": "Fix for duplicates in Element tree"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/1673668342d3c96ca81f6cdc8ff3e21480b56ae3", "message": "Fix for incoherent tree diffing\n\nWhen an element is reparented, we must transmit the removal event\nbefore the insertion event. Otherwise the removal event gets ignored\nbecause the parent doesn't match up."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/293395787105334f3fab72e67291b561afe54f98", "message": "Merge pull request #332 from rickbrew/master\n\nFix NPE that happens during ShadowDocument.getGarbageElements()\r\n\r\nCloses #330"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3bbf4cec52c863150ceeea854d65d335ff5f3d74", "message": "Fix NPE that happens during ShadowDocument.getGarbageElements()\n\nFull autopsy write-up coming soon."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/5e920bd12ac0addd9b8b76e5df6521d202e1c019", "message": "Merge pull request #299 from jferlisi/jferlisi/fixed_memory_leaks\n\nFixed a couple of memory leaks."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e39c2770234d04eec627eccda6b08490616cca0b", "message": "Merge pull request #282 from ichub/margins\n\nAdded margins to css styles tab."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/93865e53ba6428d6fb494119c29984c58ec2e6ff", "message": "Merge pull request #261 from ichub/computedCSS\n\nAdded the ability to inspect an element's style"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a2d811f7d1143002bd520df017caf60b49909269", "message": "Merge pull request #275 from rickbrew/DOMrename\n\nFinish renaming DOM to Document where appropriate"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/477a0a1e5a157c9c3df0c3a95838ad151a774cfe", "message": "Finish renaming DOM to Document where appropriate"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/dbf55565d0e7bdbd8a49257d77ded63d0bf88488", "message": "Merge pull request #274 from rickbrew/nulllllll\n\nFixing NPE crash in ElementInfo.<init>() from Document.createDOMUpdate()"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/8e5c94658d618a899283dbb92be0bf2930867975", "message": "Fixing NPE crash in ElementInfo.<init>() from Document.createDOMUpdate()\n\nCloses #272"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b6c2ffca15c192bcce0659f2c05c142faf4a0957", "message": "Merge pull request #256 from mengdilin/register\n\nFix registration flow for Async Pretty Printer"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/53e1e756b0bf1055f42fcbee5b3e701e75ea7cf3", "message": "Merge pull request #237 from ichub/refactoring\n\nSplit DOM into two classes: Document and DOM"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83827912", "body": "Woops, nope it's still over in the elements branch.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83827912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88633928", "body": "Looks good!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88633928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88637472", "body": "In fact, this looks like a broader problem of needing to define thread affinity/safety for this area. Similar in spirit to what WPF does with Dispatcher, DispatcherObject, and Check/VerifyAccess().\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88637472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88655116", "body": "Reviewed / approved out of band\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88655116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/20164047", "body": "Yeah I noticed this too just now! ... PR #470 ", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/20164047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/20164067", "body": "Note: This commit was accidentally pushed straight into master. It is the fix for #381.", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/20164067/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25372940", "body": "It goes from null to non-null ... when an Activity is first created, it isn't yet plugged into a Window, right? And yet there's nothing here hooking in to listen to when the Window is attached. I think we'll be able to rely on the tree diffing stuff though for that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25372940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25373970", "body": "I scratched my head on the right way to do this for a bit, and finally decided on mirroring the DOM JSON API as much as possible in the Java code; highlightNode and hideHighlight are methods on the JSON DOM protocol, therefore they're methods on our DOM.Provider. This should make it easier to navigate and understand the two if they are mirrors of each other. Plus, from a practical standpoint, this would require the NodeDescriptor to coordinate with the DOM.Provider. There isn't currently a channel of communication in that direction and I wasn't sure this was the right justification for adding it. It's very easy for a DOM.Provider implementation to delegate this call to NodeDescriptor if that's the strategy it chooses to use (just use getNodeDescriptor!), but the reverse isn't as easy (for NodeDescriptor to delegate to DOM.Provider).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25373970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25374334", "body": "Well it didn't crash ... :) Should I throw an exception?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25374334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25374712", "body": "The class or the field? HighlightConfig is part of the HighlightNode payload, and showInfo is part of it. We're not using it though ... can probably remove it? The old docs I was using has far fewer fields than the newer and more official docs we found\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25374712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25376758", "body": "Except that it is stateful because it calls into createNodeForElement, which is also stateful because it calls into getOrCreateNodeIdForElement\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25376758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25381799", "body": "Yes, I like that name better too. I was mimicking some UI call, getBounds(Rect outRect), or something.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25381799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25382010", "body": "This is meant as a defensive play to help catch bugs in the NodeDescriptor. Otherwise there's no way to detect if copyAttributeAt accidentally forgot to set name or value. If the index is out of bounds then I'd expect an IndexOutOfBoundsException, otherwise .node and .value must be non-null.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25382010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25524057", "body": "Yeah I was thinking of that too\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25524057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25524169", "body": "IIRC, it had an empty Elements tab\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25524169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25524223", "body": "I've switched all instances of the diamond operator, here and elsewhere, to not use it\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25524223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25524319", "body": "I was using an int in the Node for nodeType, but now I see the @JsonValue pattern and have switched to it\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25524319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25627154", "body": "Yup, next update has this fixed up!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25627154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25916206", "body": "I'm quite loathe to do this as well (the reflection hax0ring, that is). How about we leave as-is for now and yank it once diffing is in place? (which I'm definitely not treating as a low priority thing btw)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25916206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25916268", "body": "Ahh, that makes sense. I must've mentally slipped back into C#-mode where every string is its own allocation without any sharing (I can explain why it's done that way if you ever want to know, btw).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25916268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25916393", "body": "Do we want it to be generic? I didn't need it to be generic right now, so seemed kind of pointless for now, and trivial cost to change later ...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25916393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26174022", "body": "No spam. Also I think I found a reliable repro\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26174022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268171", "body": "Trying to be prudent with string allocations 8-) If I do the concatenation within the case, then I can't know precisely how large to allocate the StringBuilder a few lines down.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268957", "body": "Tried skipping the check and running on a few different apps ... seems to work, why not?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26269403", "body": "Why the name \"resourceGetPackageId\" ? (versus \"getResourcePackageId\")\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26269403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27068188", "body": "Agreed, except for the unfortunate fact that the compiler yells at me and says it might already be assigned (in the catch block).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27068188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27069489", "body": "So you're suggesting we just rename this method to, e.g. initialize() ?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27069489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27070490", "body": "I can simplify this by changing the protocol. If I don't re-use one instance of FragmentDescriptor to handle both Fragment APIs, it means I don't have to worry about the idempotency stuff. What I originally ran into was that my one instance of FragmentDescriptor was being initialized twice from DescriptorMap, once for each Fragment class (native and support).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27070490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27691601", "body": "Should I just create my own Predicate interface then? Or is there something I can re-use?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27691601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695244", "body": "Yes. I'm using the terminology used within View/ViewGroup. Easy enough to clarify locally too.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695853", "body": "hmmmmm unfortunately View.pointInView() is package-private and this doesn't seem to work ... \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695918", "body": "Yes! good catch\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27697252", "body": "It's named this way so as to match the name of DOM.inspectNodeRequested, which is what this call will directly map to (and is intended to be thought of in that way). Except it isn't a node, so we omit that word. And the other methods omit 'element', so we don't replace 'node' with 'element.'\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27697252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27698508", "body": "This is consistent with the other \"events\" in this file (look above for a big handful of them). Should we just go ahead and rename them all right now?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27698508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27712828", "body": "It's used outside of this package though\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27712828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27712910", "body": "That doesn't seem necessary though? It's safe because postAndWait() doesn't return until the Runnable completes. Using an AtomicReference wouldn't gain us real safety, and then this code might look like it's being unnecessarily over-cautious due to the developer not being sure about the safety of not using AtomicReference in this case.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27712910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27712946", "body": "Which part? Why wouldn't it be? ObjectIdMapper locks internally. clear() is implemented carefully to make sure that this is a plausible way to do things (it doesn't lock while broadcasting the onUnmapped calls).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27712946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27713076", "body": "Okie dokie\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27713076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742311", "body": "since this is a class with utility methods for 'Resources', perhaps we should call this 'ResourcesUtil'\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742407", "body": "if I saw this in logcat I'd have no idea where it came from ... \"Unknown identifier encountered\" is very generic! let's tag it with class/method name or something\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742680", "body": "this code isn't handling the case where 'r' is null ... whereas the old code did.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742736", "body": "why don't we make it so that getIdStringQuietly() handles the 'id == NO_ID' case?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27743795", "body": "nit ... Resources, not Resource\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27743795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rohitsingh14101992": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/439", "title": "Chrome hangs it doesn't respond whenever there is multipart request", "body": "", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "longinoa": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/421", "title": "stetho-sample crashes on M/N when selecting content providers", "body": "We need to implement the new permissions API.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/bd3c6d3253ff99665d3cb4807fe85690285e3cd8", "message": "Update to 1.4.3-SNAPSHOT (#473)"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/406e2657acefa1b3766900c6e6b0dfde60261978", "message": "Bump to version 1.4.2"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9e37f3f0a34c506f93870e4b81ec9c1bdb9d9eaf", "message": "Update CHANGELOG.md to 1.4.2"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9b7bec0e202cf8e8755aaf1dbc85f4e1733ba1f2", "message": "Merge pull request #454 from kikuchy/versionup_okhttp3\n\nUpdate Okhttp3 to 3.4.2"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/92c4916062e20a1868acdcc451c59c8727857e68", "message": "Fix NPE in ObjectMapper\n\nFix NPE when an IllegalArgumentException is thrown from `field.set`.\nfixes #447"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/36aa5bd356d9cf5893b9424b06a83dda9ec5e44f", "message": "Merge pull request #437 from longinoa/1.4.2-SNAPSHOT\n\nUpdate to 1.4.2-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e8456030acae5f9a26f9717a504e5b103791bfff", "message": "Update to 1.4.2-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/05118d7bec2fd05816c2d1c52079a7675b44de23", "message": "Merge pull request #435 from longinoa/release-v1.4.1\n\nRelease v1.4.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/95c6bce23e597562eedb191fb3ac9b07453cff31", "message": "Bump to version 1.4.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2edb506ac183f613765bf85fa032adfbe386919e", "message": "Update CHANGELOG.md to 1.4.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/728f669f83626cb03befbc24ab68f36bec9f76ac", "message": "Merge pull request #432 from longinoa/fix-database\n\nHave DefaultDatabaseProvider return filename"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/89cac2b09c899edd37a0c78dbd5b93c205938c60", "message": "Have DefaultDatabaseProvider return filename\n\nThe API for `DatabaseProvider` is to return `List<File>` however the\ncurrent implementation of `DefaultDatabaseProvider` returns a `File`\nthat does not exist. We were able to get around this before due to the\nfact that the file was only used to call `File#getName()`.\n\nIn #390 this was changed and the actual `File` object was used to open\nthe database.\n\nThis fixes #431"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/fa75228ffbb5f5848920e694ad7e8914c43c75a3", "message": "Merge pull request #430 from matthewmichihara/patch-1\n\nmarkdown fix"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e827ddc32b4bf222f661506ed9a90424dced9bf5", "message": "Merge pull request #427 from paour/patch-1\n\nAdd details on OkHttp integration"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/865d58a6b9be101366b4e25ea1daaecbff8486fa", "message": "Merge pull request #428 from longinoa/1.4.1-SNAPSHOT\n\nUpdate to 1.4.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/8b2373ae0429539af6fc3b6adc872bb0a8a15574", "message": "Update to 1.4.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/5dc3da126f9a20fcbbc5255f0266d1c03e5ad74a", "message": "Merge pull request #425 from longinoa/release-v1.3.0\n\nRelease v1.4.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/0639e1127dc800fe9a8c04c515cc8d24e3d3b54b", "message": "Bump to version 1.4.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/fb4a97301663b96096e87c8788c74bb6df153f56", "message": "Update CHANGELOG.md to 1.4.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d50572bbee2e3bc5da188f0d953c760dec84aee6", "message": "Merge pull request #424 from longinoa/dont-create-jars\n\nRemove creation of jars in output"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7aa640eca411222dc4c57ed385066fd959c87334", "message": "Remove creation of jars in output\n\nThis diff removes creating jars in the `installArchives` and\n`uploadArchives` steps of `gradlew`. This is needed as this step causes\nthe default packaging to be `jar` rather than `aar`."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/6de20a0bc28893bcfea999267a06461b98c31492", "message": "Merge pull request #396 from mmirhoseini/master\n\nupdate timber version"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/99796d09ce81c7f53df1b0c38b3c587fc1029128", "message": "Merge pull request #417 from friederbluemle/update-project\n\nUpdate build tools and Android plug-in"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/269cf7830f82075a4ee32a819b76b49e870f2450", "message": "Merge pull request #397 from friederbluemle/update-project\n\nUpdate Gradle wrapper and plug-in"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3237fa8e3e22c02919456c4b455dab021d3a2be9", "message": "Merge pull request #294 from longinoa/process-fromenv\n\nAdd support for STETHO_PROCESS environment variable to dumpapp"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/395443e95118e427a49aeec6e4cd978a8f510068", "message": "Add support for STETHO_PROCESS environment variable to dumpapp\n\nWe want to be able to support passing the process via environment\nvariable. This gets around having to create arbitrary wrapper scripts\nthat just pass `-p myprocess $@` to dumpapp."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d00753b18e8cd87d61c622f95ca91bf38f26713b", "message": "Merge pull request #260 from mengdilin/http\n\nAdd status code checking for schema download"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3ffd980a09a8488f3799c5fb239483d2a42d4f38", "message": "Merge pull request #257 from mengdilin/executor\n\nInit executor service for pretty printers on first peer registered"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/8a418c78faea321297b32190f2801c155b0c6704", "message": "Merge pull request #252 from mengdilin/master\n\nRemove TestAsyncPrettyPrinterFactory"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2315e74522cfc55989d42de47afbbaabaecbe3a9", "message": "Merge pull request #219 from mengdilin/pretty-print\n\nAdd async pretty printing binary payload"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72522183", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72522183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72545077", "body": "Are we planning on moving this to maven when it is public? \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72545077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72547297", "body": "You should add tests or at least an issue for adding tests. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72547297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72570674", "body": "LGTM Squash and merge.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72570674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73256287", "body": "Strongly prefer http://patorjk.com/software/taag/#p=display&f=Slant%20Relief&t=STETHO the e in your version is unreadable\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73256287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73267486", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73267486/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73600611", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73600611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75279228", "body": "LGTM. I would probably prefer this to be a static method that returns a `LocalServerSocket` but can go either way. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75279228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75328451", "body": "Is the right course of action to assume text/html though? spec seems to indicate it should be application/octet-stream http://www.w3.org/Protocols/rfc2616/rfc2616-sec7.html\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75328451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75607757", "body": "Can you add a description as well.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75607757/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75647575", "body": ":-1: you still sleep for `millis` rather than `remaining`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75647575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75652299", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75652299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75672916", "body": "The set semantics in this diff seem fragile. Would like to see more on the flow of how that works.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75672916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75876786", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75876786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76234829", "body": "You should update the UI on success (IE 1 -> true) and reflect failure ie trying to change true -> fizbuzz should reset the value to true.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76234829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76266143", "body": ":+1: Can you squash your last 3 commits\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76266143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76302529", "body": "Why arent these put in `META-INF/maven/commons-cli` ?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76302529/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76486530", "body": "@bbade we just shipped 1.0.1 that has the fix for this can you retry now\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76486530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78314117", "body": "I looked into this a bit today. We are using `SqliteDatabase#rawQuery(...)` which returns a `Cursor`. As far as I can tell we cant extract the data of how many rows were modified from a `Cursor` and would need to find out if the query is `UPDATE`/`INSERT`/`DELETE`/`SELECT`/... by parsing the raw sql, and then calling structured methods on `SqlliteDatabase`. \n\nI know presto has parsing for sqlite but do we want to go down that path?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78314117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79098141", "body": "@Tolriq  yeah I thought about doing that. \nYou have to parse the type of query to find out if you should do `select_changes` or `last_insert_rowId`.\nHow do you dont know that it is a select w/ no rows returned?\nWhat would you expect create/drop to return?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79098141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79116288", "body": "what would be returned for last_insert_id or select_changes for statements other than update/insert/delete? IE what is the return type for `create table` for instance? \n\nIm just trying to figure out the value in the return from them to do an additional round trip.\nFrom what I have seen it looks like the inspector ui does bizarre things when you dont return a \"valid\" result with the sql query disappearing. I think we can tackle that by returning a dummy result but if there is value in the return for the other calls I am more than happy to add it in.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79116288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79150292", "body": "I think if they are congruent changes doing the smart thing and handling the return in the correct way rather than a second round trip to the database.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79150292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79325018", "body": "I was planning on squashing and was going to update the commit message to have `Closes #` at the end\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79325018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88241687", "body": "Im not sure about the year part but the rest lgtm\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88241687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88245295", "body": "See comments on your pull request: #95\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88245295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23943740", "body": "Since you throw if there is no connection later, may want to throw if there is a connection here\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23943740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962271", "body": "why use `+=` when you can just assign it\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962666", "body": "This is kind of interesting, in `StethoURLConnectionManager` you allow the caller to pass in their own `ResponseHandler` but here you do not. I wonder if we want to try and hook into this by providing a factory in the constructor.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962868", "body": "could this be because you arent declaring a dependency on `com.squareup.okio:okio:1.1.0`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23962868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24248299", "body": "Why is this on  page and not network?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24248299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24252628", "body": "ahhh I wanted to make sure that the welcome message would be the first message, rather than after some log lines. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24252628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24041536", "body": "make this a static constant\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24041536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24042595", "body": "you should add a `close()` override, pre JDK-8 `close()` ignores any exception thrown on `flush()`. you should just call `#close()` on `out`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24042595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24048424", "body": "Do we want to expose a generic interface for registering decompression (or other encoding) facilities? something that would take a factory object and do dictionary lookups?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24048424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24092779", "body": "the gzip header is actually parsed in the `DecompressionHelper`, this is not aware of headers\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24092779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24094186", "body": "This feels like the wrong interface since you are explicitly ignoring `decodedBytesRead` It almost looks like you want to make this be `protected void reportDataReceived()` and add protected getters for `mBytesRead` and `mDecodedBytesRead` in `DefaultResponseHandler`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24094186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24094438", "body": "you want to use `ContentLengthResponseHandler` when `contentEncoding` is null.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24094438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24096189", "body": "why not make this a `Runnable` then you wouldnt need to do the `return Void`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24096189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24096490", "body": "this should probably not change signatures\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24096490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24098840", "body": "Who handles this `IOException` it seems kind of dangerous to leak this out in a `close()` call. If we get an `IOException` that should be on decompression of the stream that we are writing to a the file (eventually) It should be reported to the console rather than causing an `IOException` to go to the caller who made the web request.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24098840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104320", "body": "By header here I mean Content-Encoding header.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24121175", "body": "Then this comment about the header seems redundant, of course it is designed to handle the gzip header its the gunzip stream.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24121175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24346542", "body": "you should make a thread local byte array for this\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24346542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24347115", "body": "This should probably be pooled as well\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24347115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24366535", "body": "That makes sense, if it becomes a big issue we can re-evaluate it\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24366535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25190396", "body": "You should save state here. If you keep getting interrupted you will never terminate this loop.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25190396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25190518", "body": "prefer to use the constant `TIME_BETWEEN_RETRIES_MS`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25190518/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25210219", "body": "this seems like it could conflict with #67 \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25210219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25213061", "body": "not really, you are calling `tidyProcessName` before which does the semantic replacement of `processName` characters to `_` \n\nIn this diff you assume that that has been done and you return the index of the terminating character. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25213061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25213577", "body": "This can now be reflected as a regex\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25213577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214405", "body": "`Context.MODE_PRIVATE`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214463", "body": "Did we ever figure out how to reference an Issue from code?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214660", "body": "It seems incorrect to assume not multi-process.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214717", "body": "`mPrefsListeners.clear()`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215000", "body": "Did you test what happens when you add a completely new item? calling `remove` on an item that didnt exist could be problematic\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215050", "body": ":-1: booo that this is the interface we have to use. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25216480", "body": "was more a question of \"is this possible\" than \"do this\" \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25216480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25216513", "body": ":+1: yeah I saw that in the protocol, wanted to make sure we didnt need to cache all values we returned\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25216513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25216774", "body": "`else {CLog(...);}`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25216774/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217110", "body": "this seems a bit strange looking at it. Why is the first \"tag\" the security origin of the root of the tree rather than it being stetho or something similar?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217327", "body": "why are `Integer` and `Long` treated the same?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217700", "body": "This seems pretty fragile, and a good way to break the app. \n\nI dont have a great way to test this, but when does `setDOMStorageItem` get called on the devtools side?  If it is when you leave the field this has the ability to be pretty harmful to the hosting app.There is no validation, and no telling what the app expects this to be.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217718", "body": "No support for `Set<String>`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25448788", "body": "this should be in the `else` block. Why would we call `apply` if we know we arent going to change it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25448788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25458190", "body": "This should be a throw, or a statement to file a bug. If both `existedBefore` and `existsNow` are `false` that has to imply Android did something it shouldn't do, or more likely our map is out of date. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25458190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26267706", "body": "the cursor was basically null. the count was always -1, there were no columns, and no values. Plus \"rows updated\" always = 0\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26267706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26267794", "body": "This is case insensitive, note the call to `toUpperCase()`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26267794/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26267830", "body": "Maybe we should make it so that IntelliJ just does the right thing!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26267830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26400285", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26400285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27520397", "body": "You should check to make sure this is in the path, and if not provide a link to http://developer.android.com/tools/help/hprof-conv.html or at least a warning.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27520397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27520797", "body": "no process selector?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27520797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27521328", "body": "Per convention this should throw a `DumpUsageException`.\n\nConsider adding a `--help`, yes its a bit over-engineering for this, but this is a dumper that is being checked in and should be an example.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27521328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27521676", "body": "this seems kind of scary, why dont we just return the file name used to standard out and require it be parsed when used as a script?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27521676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27522216", "body": "Isnt this supposed to be the current year? \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27522216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27691636", "body": "dont think you need this\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27691636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "irbull": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/365", "title": "Runtime#getProperties returns empty array when ownProperties == false", "body": "According to the [protocol](https://raw.githubusercontent.com/facebook/stetho/master/build-tools/protocol.json), Runtime#getProperties contains a parameter `ownProperties` with the following documentation: `If true, returns properties belonging only to the element itself, not to its prototype chain.`. While it's not clear what happens if ownProperties is false, I assume it should return all properties (not just it's own properties). However, Stetho is currently returning an empty array. When I connected to ChromeDevTools, it passes `false` for this value, meaning nothing is showing up in Scope Variables view.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AAverin": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/361", "title": "View highlighting is not working on Android Emulator API 16", "body": "View highlighting is not working on Android Emulator\n\nAttempt to click on the image results in `ChromeDevtoolsServer: Method not implemented: Not implemented: Input.emulateTouchFromMouseEvent`\n\nAlso get:\n\n```\nMethod not implemented: Not implemented: DOM.getNodeForLocation\nMethod not implemented: Not implemented: DOM.getBoxModel\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sybarite": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/312", "title": "Extending and adding a interceptor to give an output similar to default chrome network request", "body": "![image](https://cloud.githubusercontent.com/assets/882442/11627253/17adf3a4-9d0f-11e5-9978-7fd0677a2c37.png)\n\nI am using the okhttp interceptor provided by stetho, but I am only getting latency and download times. How do I provision okhttp to get a network timeline output like above? It would be great if a library developer would point to right direction to develop such a functionality if its not present\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jasta": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/239", "title": "Implement checkstyle for travis-CI code style checks", "body": "Now that the number of PRs is starting to heat up, it's time to enforce some of the basic style rules of the project using CI.  checkstyle seems like a mature and reasonable way to do that, though I'm open to suggestions :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/92", "title": "Implement Profiles tab (heap profiling)", "body": "This may be possible using a private API that powers DDMS' lame Allocation Tracking UI: https://android.googlesource.com/platform/libcore/+/android-5.1.0_r1/dalvik/src/main/java/org/apache/harmony/dalvik/ddmc/DdmVmInternal.java\n\nThis API has been stable for a very long time AFAICT (I looked all the way back to Ice Cream Sandwich).  I believe it will continue to be stable as well.\n\nThe format of the `getRecentAllocations` method is defined by ddmlib: https://android.googlesource.com/platform/tools/base/+/android-5.1.0_r1/ddmlib/src/main/java/com/android/ddmlib/AllocationsParser.java\n\nThe major issue to overcome is the seemingly incomplete `heapsnapshot` file format that Chrome uses.  In particular, there's limited UI and file format support for allocation stack traces and the format exported/imported by DevTools appears to even lose the limited information that does currently exist.  Upstream discussion started at: https://code.google.com/p/chromium/issues/detail?id=277984#c34\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/92/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/58", "title": "Show application icon in chrome://inspect", "body": "There's a spot for the app icon to appear next to the process / app name in the `chrome://inspect` UI.  We should extract this from the manifest and display it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/58/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/0cbcea7715a939999a2a6999858487f5da92f091", "message": "Merge pull request #585 from jasta/fatjar-exclude-R\n\nFix fatjar compilation including android support library R.class files"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f868b8e35a8ce148bc61a9076f413c649c091f45", "message": "Merge pull request #529 from misakuo/bugfix-ws\n\nFix the missing notification on WebSocket handshake response received"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9512c7554e835f27360b9efc89e05da905604686", "message": "Merge pull request #543 from schrnz/patch-1\n\nFixed anchor formatting + issue link"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2a6d9fc79b3d3f8ddb018edb27a99c12e1a98973", "message": "Merge pull request #545 from zsmb13/patch-1\n\nFixed a typo in the websocket flow diagram"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/42f375f959e64e204b43983c7b1f582dc44e2ffc", "message": "Merge pull request #584 from jasta/interceptor-better-error\n\nImprove error message when addInterceptor is used instead of addNetworkInterceptor"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/37becae619944ea77c9e030012ca4256d9ece918", "message": "Merge pull request #551 from ozmium/patch-1\n\nFix issue #480 : Documentation to add MyApplication to AndroidManifest.xml"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/304c1cb7a9fc50a9addd0f52edff76afb9d60488", "message": "Merge pull request #574 from YongdongHe/master\n\nImprove README.md"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/0afd55d31d1057f47251b08e206f19516150d54f", "message": "Merge pull request #578 from funny9527/master\n\nfix payloadData length error"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3a60ecb78082a227b11d608209f0b718283d4fd1", "message": "Merge pull request #576 from IgorGanapolsky/master\n\nRemove extra parenthesis."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e5b869911dd7d0dc429dc1e8a831815e01ed12d5", "message": "Merge pull request #525 from friederbluemle/update-project\n\nUpdate build dependencies"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/4556718581bc5fe32bb21833f38f580b5b8b2782", "message": "Fix build break and test break"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d18432456512736dfdccb718caac6e9bdf43447a", "message": "Fix fatjar compilation including android support library R.class files\n\nThese files would conflict with any other version of the support\nlibrary the user tried to add and are not otherwise required or\nimportant for Stetho to function.\n\nCloses #566"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d9bdbfe7e00e82d67d12e59f811211a16074fa49", "message": "Improve error message when addInterceptor is used instead of addNetworkInterceptor\n\nPreviously this would yield a NullPointerException and was not very\ndiscoverable/actionable for users.\n\nCloses #580"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/05910cc9c7fe5de8a0b44231b06c98bd7e251088", "message": "Merge pull request #527 from jasta/snapshot-v1.5.1\n\nUpdate to 1.5.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f1c51afb77995142ff7b484477ad4e60a4107b43", "message": "Update to 1.5.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c15b5521f2793a32c9a03349e0680c0e37f73b7f", "message": "Merge pull request #526 from jasta/release-v1.5.0\n\nRelease v1.5.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/8a9fb55c9796279f368109f0f82fa32dff2b7a42", "message": "Bump version to 1.5.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d1af809ea7b1f6c62efe746be98f85570f1f4eb5", "message": "Update CHANGELOG.md to v1.5.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d94f5cfa67037139b872ee3ac8981104c1c57cd1", "message": "Merge pull request #392 from jasta/databaseid-mapping\n\nFix database id mapping to remove guesswork hacks"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/31f5a97549903aead8ec14624833d627fbc46318", "message": "Merge pull request #515 from jasta/sockets\n\nAdd full websocket support to NetworkEventReporter"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/47272b0d73a5fb47d4cbb9fe2a57ab563ea84660", "message": "use stetho#### not Guest#### which gets blocked by freenode :("}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c42f0b3743ea24697a78cfb04a02ba03cec35fde", "message": "Merge pull request #519 from jasta/scraper-features\n\nExpand scraper.js support for events."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7133e9aff5ed3c2dffd28e5d069a6d75a72e2150", "message": "Add IRC client to stetho-sample to demonstrate new WebSocket support\n\nThe basic flow of the IRC client involves an initial connect screen\nwhich prompts the user for server and nickname then transitions to a\nchat screen which initiates the connection and offers a simple terminal\nto type raw IRC commands and see the full set of replies from the\nserver.  Pressing back or encountering any I/O exception will cause the\nuser to return to the connect screen and will shutdown the websocket\n(causing it to show as \"Finished\" in chrome://inspect)."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c729a3a24324c205d136f463589a8b1241d6c2a4", "message": "Add full \"websocket\" support to NetworkEventReporter\n\nNote that websockets and sockets can be used more-or-less interchangably\nfrom Stetho's point of view since we're emulating the support from\nChrome and therefore can choose to treat any socket-like stream of data\nas a \"websocket\" for display purposes.  This is demonstrated in a\nsubsequent diff which introduces an IRC client to stetho-sample.\n\nNote that there is no explicit pretty printing functionality as of yet\nthough this can be done at the client level by simply not hooking raw\nsockets but rather interpreting the messages at a higher level before\nsending them to NetworkEventReporter."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/cef057af82ca89edca1ddb2fa25c5c281697205d", "message": "Expand scraper.js support for events.\n\nThis PR adds events (instead of just commands) support for scraper.js\nand fixes a crash when a type definition has no fields."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b0ee15bdd39bc00b8d617da7108da7ced82a3440", "message": "Merge pull request #491 from friederbluemle/update-project\n\nUpdate build dependencies"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/eb0d74b3c6f709c8bd832dc4dadb5ab88035ab5c", "message": "Merge pull request #511 from blavalla/ax_deps\n\nFixed unexpected dependency on support library for Accessibility properties"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/53303b7e8bbff5c38c4126562f6d174d339c0637", "message": "Merge pull request #481 from ypresto/singleton-request-id\n\n\tIntroduce nextRequestId() method to ensure its uniqueness"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9567db194aff8268b3e99ad88f549250e807950f", "message": "Merge pull request #513 from jasta/leakcanary-wtfleak\n\nAvoid false positive in LeakCanary"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/5a414d53c7a0909a909f8c500b77732fedb91eeb", "message": "Merge pull request #514 from jasta/database-execerrors\n\nHandle any runtime exception from a database driver"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/898ed21de017bea14986c0d3e213df940fbc5e7a", "message": "Merge pull request #406 from paour/bugfix/js-import\n\nFix importClass and importPackage not finding external classes"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/24f7fff40eae2ea6c576da7d621a37f79b2a7cac", "message": "Handle any runtime exception from a database driver\n\nSince database drivers are such wide ranging third party code it\ncannot be assumed that they exclusively throw SQLiteException but\ninstead could throw any manner of unknown RuntimeException and that\nshould not tear down the connection with chrome://inspect but, since\nwe are indeed a debug tool, should report sufficient debugging\ninformation to diagnose the issue."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e94789e53856e8618cd48b1c751ffdc5e0520d10", "message": "Preserve API compatibility for Database.DatabaseDriver"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/1506dd23bb6050ed454c845e55659768e7d557ce", "message": "Fix database id mapping to remove guesswork hacks\n\nThe SqliteDatabaseDriver had to resort to counter intuitive hacks\nto manually locate a database by its file name and didn't\nproperly handle deduplicating multiple databases with the same name.  As\nwe expanded flexibility we failed to address the possibility (nay,\nlikelihood) that this will occur and it would create very confusing\nresults for users.\n\nThis diff doesn't address the confusion in the UI (two database entries\nof the same name can still occur) but it internally makes it possible to\ntreat them as separate databases and track their filenames separately.\nIt also makes it relatively straightforward to fix the uniqueness of the\nuser visible naming by introducing a \"context\" parameter to\nDatabaseDescriptor which would be used in the case of name ambiguity.\n\nThis diff addresses concerns raised in #366 and #367."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/5c480f50c6dcc0e51a0c684b363183e66e2e62b2", "message": "Merge pull request #499 from mariotaku/master\n\nMade URLConnectionInspectorHeaders case insensitive"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/1ce0a741beeb605a469a8f70668d498327b0897a", "message": "Merge pull request #512 from jasta/dumpapp-stdinfix\n\nFix stdin issue when the stream is read to exhaustion."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a2eb108683307bff15a19cf50226db3a076b76ba", "message": "Avoid false positive in LeakCanary\n\nLeakCanary flags Stetho's ActivityTracker as a potential leak because it\ndoes indeed have a path to the GC root that isn't already covered by the\nmany exclusions present in LeakCanary for legitimate Android use cases.\nThis is essentially a known flaw in LeakCanary in which unknown path to\nGC roots are assumed to be leaks even if they are indeed consistent with\nthe normal object lifecycle (like in our case the strong reference is\nremoved when the activity is destroyed).\n\nWorking around this issue is trivial however and does indeed have the\neffect of making our code look less suspicious of leaks in the first\nplace.\n\nCloses #319"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/ecea16e2065954ffdbf29435a32a184b6719b7cb", "message": "Fix stdin issue when the stream is read to exhaustion.\n\nThis PR corrects a larger signedness mismatch between dumpapp client and\nserver.  The dumpapp client (python) used unsigned integers where the\nserver (Android/Java) used signed integers due to a limitation in\nDataInput/OutputStream not supporting unsigned 32 and 64-bit types\n(technically this could be done with readLong & 0xffffffffff though).\nThe critical fix comes in when sys.stdin.buffer.read reaches EOF whereby\nthe client tried to pack -1 in an unsigned int which is not obviously\nnot possible.  Since the server was always expecting this to be signed, simply\ncorrecting the client causes the problem to go away.\n\nCloses #509"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2807d4248c6fa06cdd3626b6afb9bfc42ba50d55", "message": "Merge pull request #399 from blavalla/view_debug_data_types\n\nAdded methods to get styles from other data types"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/21b0934311457d22a5bf67644dbffaa95c51ab07", "message": "Merge pull request #391 from jasta/sqlite-wal\n\nImprove support for custom SQLite open flags"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/0cedc401aa8c28cef27bfa2cdc8196ec9316b8aa", "message": "Merge pull request #390 from jasta/pr-366\n\nManual merge for DatabaseConnectionProvider API"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f6e0bd2376cce3cf1b2dcdd725a2e04ae850a710", "message": "Improve support for custom SQLite open flags\n\nThis diff adds a WAL-guessing heuristic to support most database users\nfor the common case as well as expands upon\nDefaultDatabaseConnectionProvider to fully support subclassing to\nconveniently select custom options on a per database file basis."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/4a577301958f83744cbe675820edb3e5084a78b7", "message": "Remove databaseConnections API from the inspector builder\n\nThis isn't necessary or appropriate as the functionality concretely\nrelates to SqliteDatabaseDriver and not generically to any other\ndatabase driver.  For this reason, it should be provided there alone."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d2d7f5ef9377d33e98d8f61c20315fd0bd27ec39", "message": "Merge branch 'databaseConnectionProvider' of https://github.com/frett/stetho into pr-366"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b8457a6e975759cfdb70b5a4b12758a48853dac9", "message": "Merge pull request #367 from jferlisi/jferlisi/fix_database_driver_with_customer_file_provider\n\nFixed SqliteDatabaseDriver with custom DatabaseFilesProvider"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9ddeef4cfca8798e42e0d2bf56bb3224a2e5e8e0", "message": "Merge pull request #389 from facebook/spring-cleaning\n\nSpring cleaning"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/bee814c6f8964d7305d7d99b2a82bd9a6c4d70bc", "message": "Correct Travis CI jobs being killed\n\nThis switches off the container based infrastructure in order to allow\nfor greater memory consumption during the build, presumably needed by\nthe dexing step in our Android build."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/bd1b12a387c3a163dd4b4787b4b6257c2c1e0c9f", "message": "Address minor lint warnings"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/980bbaca8f79963a4e7412a391019860bcfdae6e", "message": "Android Studio 2.2 preview 2 random scribbles"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/54791fbb854bdc8e023d7830d49876171d740e8b", "message": "Upgrade Android gradle support\n\nSpecifically this bumps us to build-tools-23.0.3, gradle 2.10, and the\ngradle Android plugin 2.1.0.  All of which was recommended after an\nupgrade to Android Studio 2.2 preview 2."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a2dd2db31e8034793e98b6ecf56e1e9f4b6d1582", "message": "Merge pull request #359 from jasta/snapshot-v1.3.2\n\nUpdate to 1.3.2-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/abd5fb55c1cac263eb27da68b894a60e6ce861d9", "message": "Update to 1.3.2-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f80fea5ae1386b907b0f20023a74431d033de2d1", "message": "Merge pull request #358 from jasta/release-v1.3.1\n\nRelease v1.3.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c5ac2b376e3f673f0b485d199e0e01c5c79d3344", "message": "Bump version to 1.3.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f91e7cf6a01444d8a818c5966de530638c335ff4", "message": "Update CHANGELOG.md to v1.3.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/28f7b698a703902242de179d1ded7d7558119047", "message": "Merge pull request #357 from jasta/styles-static-fix\n\nRemove static fields from exported properties"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/ae7c41c715e52aa89abdbd917cb4e66b8560b4fc", "message": "Remove static fields from exported properties\n\nFixes #335"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/4dcc54af52ea238cd3294886d7ec687a7649d8e0", "message": "Merge pull request #353 from mottis/argshelper\n\nAdded a utility method to convert args iterator to array of args."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b290a00369dbd257d6357c9ada4eba76a96699a4", "message": "Merge pull request #349 from mottis/dumper-scripts\n\nA couple of script fixes"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a13eb9230686c24ee763611fbc3952bd2fdc6777", "message": "Merge pull request #334 from rickbrew/master\n\nFix for incoherent tree diffing"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c35b6aa52df0643d5f4c49c5eb4856f7e680099c", "message": "Merge pull request #343 from jasta/okhttp3-readme2\n\nRephrase README to refer to StethoInterceptor directly"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/4136b04c79dc48ff185e5c13f26b5144f71fb41e", "message": "Rephrase README to refer to StethoInterceptor directly"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e20db4355352938c88c067de68bd0ef87a0e228b", "message": "Merge pull request #341 from jasta/snapshot-1.3.1\n\nUpdate to 1.3.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/21f5b65a0393a5392bf32a0c2d5d4d48f9ecc6bd", "message": "Merge pull request #340 from jasta/okhttp3-readme\n\nTweak README to clarify stetho-okhttp3 dependency."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7ee71bc3b1c0a33c9f8df99619d84025e4fb22cc", "message": "Update to 1.3.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3e2ac31fce94372103d0bdb9bc1e342cc8603350", "message": "Tweak README to clarify stetho-okhttp3 dependency.\n\nThe same will need to be applied to the website."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/fe9caee8753cb6a5dba9f52b458ad3488523f8a9", "message": "Merge pull request #338 from jasta/release-v1.3.0\n\nRelease v1.3.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7d2ce3d8b8080319fb55e557867c4b65102045a2", "message": "Bump version to 1.3.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/17e8ff4a65e93122fed032991940ff0289e592ca", "message": "Update CHANGELOG.md to v1.3.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c17c90082998d7016192a96a62c34b71203ef316", "message": "Merge pull request #337 from jasta/no-httpclient-cleanup\n\nNo longer search for _dumpapp socket names"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/ede5504fc35b326ed4633795f51e47b22c95aace", "message": "Merge pull request #324 from swankjesse/jwilson_0103_upgrade_okhttp\n\nAdd OkHttp 3 integration, Deprecate OkHttp 2 integration."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b1e0c597451909d9b6b7231c63b84c65b67e2574", "message": "Merge pull request #317 from friederbluemle/update-project\n\nUpdate Gradle wrapper and Android plugin"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f5e026bf33596912ada587f9a97054e88da5440e", "message": "No longer search for _dumpapp socket names\n\nThis is a cleanup diff to fix an issue accidentally left in\neb0ca3d565ce75f147d3ef8d376230f4e1f263a2.  Since we landed on just\nhaving one socket, we don't need to support the extra *_dumpapp socket\nname and in fact this script did so in a way that broke the -p use case."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9af23cd1d8b080dc43d12cc3b151165293e337b7", "message": "Merge pull request #288 from jasta/no-httpclient\n\nRemove dependency on Apache HttpClient"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/eb0ca3d565ce75f147d3ef8d376230f4e1f263a2", "message": "Remove dependency on Apache HttpClient\n\nAndroid 6.0 removes support for HttpClient and forces applications to\nbundle the jars directly if targeting 6.0 in an effort to phase out its\nusage more aggressively.  Unfortunately, Stetho depended on HttpClient\nfor a crude HTTP server implementation to facilitate dumpapp and the\nChrome DevTools protocol.\n\nThis diff adds an HTTP server for general purpose usage within Stetho\nbut also heavily modifies dumpapp to no longer use HTTP at all.  This\nbecame possible late in dumpapp's development when a framing protocol\nwas developed to support stdout/stderr.  This framing protocol made it\neasy to use pure sockets and to further mimic the command-line paradigm.\n\nThe legacy HTTP support for dumpapp remains but in limited capacity\n(does not support stdin and cannot do streaming stdout/stderr output).\nA warning is produced when the old script is used.\n\nStetho combines both the new binary dumpapp protocol with the DevTools\nHTTP/WebSocket protocol in a single socket and simply sniffs the first\nfew bytes from the client to determine how to handle the remainder of\nthe stream.  This was done for simplicity and performance so that just\none server would need to be set up when Stetho initializes.\n\nCloses #251"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/55e869f33281c46e0e13e4917951528e43054a7c", "message": "Merge pull request #313 from jasta/fix-longmin\n\nWork around DevTools issue formatting Long.MIN_VALUE"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/18d1cd5bdd64f8bc771686bb80768ca13078ebfa", "message": "Merge pull request #314 from jasta/studio2-metadata\n\nApply random Android Studio 2.0 project changes"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/27a1a46af7cddff2e6caee20ea9e2bf501abbdc4", "message": "Apply random Android Studio 2.0 project changes\n\nThese look to be unimportant but Studio insists :)"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/0344cb302002edce38b3d589b7b7d354cd0811be", "message": "Merge pull request #300 from potyl/js-unit-test\n\nUnit tests for stetho-js-rhino are now using jUnit4 (ditching Robolectric)"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2b59bd0a598e0d745ff67b22457cc09b499befcb", "message": "Merge pull request #302 from colriot/show-assert-logs-as-errors\n\nDisplay logs with ASSERT level as ERROR messages in Chrome console."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d5df2cc915af2a5cdbeafe1a3aa030b48f84d81c", "message": "Merge pull request #306 from friederbluemle/update-project\n\nUpdate Gradle wrapper and Android plugin"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2b1272592e13d703d5e8ae51c34fe6dba3239fb7", "message": "Work around DevTools issue formatting Long.MIN_VALUE\n\nDevTools appears to have problems accepting values near\nLong.MIN/MAX_VALUE as integer types despite JSONs explicit support for\nthis.  Since it appears not to care at all what JSON type is used, a\nString substitution appears to nicely fix the issue with no observable\nvisual effects.\n\nFixes #310"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d5ff44cf6c250ae3e7e86a9cd3427c30394374a9", "message": "Merge pull request #264 from sromku/master\n\nAdded support of Database Domain extensions"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/93e71b41856bc8daa4ad6e80590250d25c990378", "message": "Merge pull request #305 from frett/proguard\n\nBundle default proguard rules"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/def637c647aa9003f0f0989601d42af634e733f8", "message": "Merge pull request #292 from potyl/json-serialization-fixes\n\nJson serialization fixes"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/246cf0e25d413363fd7c9f06b148f597d69980fa", "message": "Merge pull request #297 from felipecsl/felipe/sort-css-properties\n\nSort the View CSS properties by cssName"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2428d52ce29ddaf78e8007803d8218968cc74ce6", "message": "Merge pull request #293 from potyl/js-console-s_\n\nSave the last evalutate expression to $_ (as google chrome does)"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a58ebd88f6737444cfdf326876f78a4373f3a222", "message": "Merge pull request #286 from potyl/js-tweaks\n\nJs tweaks"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f5c2e476a479bcf6adb326973eeec59b74194ec5", "message": "Merge pull request #289 from jasta/sqlite-views\n\nShow SQLite views as tables"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/cbd7c4d529511da0f1b5ccc78401f9fa91fcfc2c", "message": "Show SQLite views as tables\n\nSimple change to make views (as with CREATE VIEW ...) show up in the\nWebSQL section as a table.  Quick smoke test reveals there's no trouble\ntreating them as tables in Stetho.\n\nCloses #285"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/5f7a0f5ef0c225ed3c2f1ad6a2a4bad966b3e0fb", "message": "Merge pull request #287 from jasta/snapshot-1.2.1\n\nMove to 1.2.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/45af34ea63811389b1086eb3ff45065c6b6c7726", "message": "Move to 1.2.1-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/24be00b83dbe91c106e6b23bcf955a96f0c27c21", "message": "Merge pull request #284 from VEINHORN/master\n\nupdate sdk version and buildToolsVersion"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f3e1c88be7df56b21f552b6d717079580215e045", "message": "Merge pull request #279 from jasta/release-v1.2.0\n\nRelease v1.2.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d8b2436d0e70f089b33474d44b31b3e7bd3c8fe8", "message": "Bump version to 1.2.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/6d91e47ab8178e3c3176a425e7ebdca12c915ee4", "message": "Update CHANGELOG.md to v1.2.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/30551ca4b2ee68ddfb8ad33153ee40bcbf090f0b", "message": "Merge pull request #270 from potyl/rhino-doc-update\n\nUpdate stetho-js-rhino's README with a more complete config snippet"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e6a115a6cbf4b6812d4e7755ad1f56f7b7221312", "message": "Merge pull request #265 from jasta/better-init2\n\nFurther refine DefaultInspectorModulesBuilder"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/cd962651e434f36b5bf9215c330138f704bae2d9", "message": "Merge pull request #269 from jasta/repl-readme\n\nAdd README info about customizing stetho-js-rhino"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/00e8127a0d5d95610e8c4d20cc7592fbe7de5830", "message": "Further refine DefaultInspectorModulesBuilder\n\nAs the DevTools implementation has matured it has become clear that the\nmodules are not truly modular or interchangable at all and have heavy\ndependencies between the two that make it impossible to provide or\nconfigure them in isolation.  Because of this, we're moving to a more\nexplicit customization API which is responsible for managing the\ndependencies of the implementation directly while still preserving the\nlevel of abstractions already present in the system (such as providing a\ncustom document model, runtime REPL, etc)."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/84ec7ba9b0eee2fd01ae14554dcd1ca35659db23", "message": "Add README info about customizing stetho-js-rhino"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3493f69c1a2177508b50f889f891f683ead48a31", "message": "Merge pull request #268 from jasta/repl-oops\n\nFix the Rhino autodetection feature"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/62c4a4874914675b75744dab22ff78ae3a7f7f79", "message": "Fix the Rhino autodetection feature\n\nThis was accidentally broken in #245 by not modifying the default\ninspector modules provider to use the new Runtime(Context) constructor,\neffectively disabling the entire feature."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/cbc87a9c4263a5a4d333fa94ba2fd6defe20a255", "message": "Merge pull request #266 from jasta/javadoc8-fix\n\nFix javadoc errors on Java 8"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/fa6d28caf677b294dcf1ed07231fde155f8189e0", "message": "Fix javadoc errors on Java 8\n\nJava 8 became much more strict about enforcement of HTML syntax and\nrules which breaks the norms we were previously adhering too."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/07378ed2ca60196f6a6ec349b14171307207aa14", "message": "Merge pull request #245 from jasta/rhino-autodetect\n\nAutodetect stetho-js-rhino and use it"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2c81c681059970faac9031968236dd7ad2a00139", "message": "Merge pull request #190 from felipecsl/feature/screencasting\n\nScreencasting support"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/1212a8eb00300e7862ff36a9798dd688e64e2e19", "message": "Autodetect stetho-js-rhino and use it\n\nThis diff focuses on making stetho-js-rhino a bit more of a first-party\ncitizen in Stetho, with the default implementation both detecting it\nmore conveniently and automatically using it if available or\nrecommending users add it to the classpath so that it will be\nautodetected."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/6fbeefd63c44c5988ae77a221e7f228fa9a69686", "message": "Merge pull request #242 from ichub/build-tools\n\nAdded a script for automatically generating types and methods defined in protocol.json"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7f86e203cec5ab80da142719355127b39524c452", "message": "Merge pull request #234 from jasta/better-init\n\nProvide a better customization API for Stetho.initialize"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/243e27942d3afd9db3703218b4013d88fdfc60a2", "message": "Merge pull request #249 from hzsweers/master\n\nFix RequestBodyHelper body inflation"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f41bb1ccb21a6548ea456f2e345c7b4e7cb51dd7", "message": "Merge pull request #248 from jasta/request-compr\n\nImplement transparent request decompression"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b41e5d698988f73d0c21d487737cc8e94b43a391", "message": "Implement transparent request decompression\n\nRequest decompression is not officially part of the standard but many\nmobile implementations choose to do it because payloads tend to be quite\nlarge on clients and servers these days are easily made to support it.\nThis diff simply makes it so that Stetho will show the decompressed\npayload, but still report the compressed payloads size to the UI.\n\nNote that this only affects stetho-urlconnection and stetho-okhttp.\nOther modules must manually implement this as it is not possible given\nthe existing API contract to do it transparently.\n\nCloses #111"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/fb758241cac8c88ad69f97e5c2e4ab39a23899db", "message": "Merge pull request #246 from jasta/sample-rhino\n\nProvide comment about stetho-js-rhino in stetho-sample"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/6923e15fbf2ce0541e5259e625a9bc49d2b8b186", "message": "Provide comment about stetho-js-rhino in stetho-sample"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2db9f92df72ee020d17613313527d9c172468f0d", "message": "Merge pull request #244 from jasta/prep-v1.2.0\n\nChange version to 1.2.0-SNAPSHOT"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e56c2e77f1eec6080529af2204bbae2df931bf20", "message": "Change version to 1.2.0-SNAPSHOT\n\nThis was supposed to be done after 1.1.1 was cut but I must have forgot.\nSigh, we need to bring in the gradle release plugin :)"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/239cd2d26cf7a4560204e4aae62801c3bb5ed6fe", "message": "Merge pull request #238 from dougsparling/master\n\nAdd support for EXPLAIN queries run via Web SQL console."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/edb6bcc6981deb7852b7460fa08f9adcbb0c5d07", "message": "Use new initializer API in README"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/ba6d1862f4b43f3b4757728289979e80d6871fc9", "message": "Provide a better customization API for Stetho.initialize\n\nNow that many more configuration options are becoming available it's\nimportant to provide a more streamlined API for overriding plugins or\nadding new ones, especially for dumpapp.\n\nCloses #195"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/082ee9c3e70e103430d319e46b5f4070a1a4f06c", "message": "Merge pull request #188 from potyl/stetho/repl\n\nImplement Console tab support with Rhino"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/610f225a94d3faa6d9fd9d415d85fd80cd7ec5d6", "message": "Merge pull request #229 from VEINHORN/master\n\nRemove redundant modifiers from interfaces"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7ce1d8ffd724bd1cdcd3e9fb428826cb9e1ef2c6", "message": "Merge pull request #231 from jasta/sort-db-files\n\nSort DOMStorage entries (database and shared prefs)"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/0dc3dda6265dce5248e19484abb54c76d56542d2", "message": "Merge pull request #225 from ichub/search\n\nAdded the ability to search the DOM tree"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/47b10b7b402116b2effc33ed34a4d6ac82b10f66", "message": "Sort DOMStorage entries (database and shared prefs)\n\nThe entries in this list can be quite large and hard to find.  Sorting\nhelps.\n\nCloses #201"}], "pull_requests": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/247", "title": "Allow exporting DOM elements to the Console", "body": "This assigns the special variable $0 to match the selection in the\nElements tab.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/241", "title": "Add checkstyle rules", "body": "This is intended to run on Travis-CI to fail builds which don't adhere\nto the style.\n\nCloses #239 \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72286522", "body": "Taking this in a little bit different of a direction.  Will re-open with a stetho-okhttp module that doesn't modify the sample app.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72286522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72549487", "body": "Yes, many other Facebook open source projects do this (including the Android SDK).  With that, you can deploy actual AAR files with dependency data.  Much more flexible and convenient.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72549487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72933119", "body": "I did some digging into okhttp and how it relates to HttpURLConnection on Android.  Turns out, okhttp has a documented way of bypassing transparent gzip support and letting you handle it yourself manually: https://github.com/square/okhttp/wiki/Calls (see Rewriting Requests) that works even when it is using HttpURLConnection.  I believe this is our perfect opportunity to just implement it ourselves, ahead of OkHttp, using the same logic.  I'm going to experiment with this to see if we can't get the support working.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/72933119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73178664", "body": "![Screenshot](https://cloud.githubusercontent.com/assets/83791/6074273/8eecb878-ad6f-11e4-8e52-99f85e871c75.png)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73178664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73263286", "body": "I disagree the all caps version looks better, but yeah the lowercase \"e\" does look strange.  That said, it's not exactly about being legible, it's pretty clear given the context what it says :)\n\nI might try hand editing it tho.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/73263286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74345843", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74345843/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74928662", "body": "Thanks! :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74928662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74932971", "body": "Good to know.  Part way through development we started to realize the storied history in part and have some conflicts in the APIs/internals.  We'll be working to clean those up moving forward.  I'll leave this task open since its covering a major API.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74932971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933581", "body": "Of course, but do note that we have a CLA process that you must complete before we can merge.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74936351", "body": "@paulirish, any chance you could take a look at #13?  We've been having trouble lately with Chrome 40 breaking things in seemingly undocumented ways which seems very much related to the fork you mentioned.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74936351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74949651", "body": "Are you using the Maven/Gradle dependency or the JAR?  Things have been a little crazy on launch day and we might have made a mistake in one of the integration paths.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74949651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74950900", "body": "Yes, we made a mistake bundling the commons-cli dependency.  To fix your problem quickly, add this JAR as well: http://central.maven.org/maven2/commons-cli/commons-cli/1.2/commons-cli-1.2.jar\n\nWe'll fix it for everyone else shortly by creating a fatjar.  Sorry about that!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74950900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74950943", "body": "Oops, shouldn't have closed yet :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74950943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74953621", "body": "Can you try: https://github.com/facebook/stetho/releases/download/v1.0.0/stetho-1.0.0-fatjar.jar?  This should work for you.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74953621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74954905", "body": "Swung the link at http://facebook.github.io/stetho/ over to the new fatjar.  Thanks for reporting!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74954905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74974543", "body": "Wut? :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74974543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74978759", "body": "That's really helpful, thanks.  We've been using entirely the wrong `protocol.json` all this time :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74978759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75079930", "body": "Awesome, thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75079930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75080416", "body": "@adnan-SM I just retested the instructions using Gradle and everything is working fine.  Are you sure you're not seeing a different symptom?  Gradle should be automatically bundling the `commons-cli` library for you that was causing problems in the JAR release.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75080416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75080856", "body": "Duplicates #38 \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75080856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75083081", "body": "Our thought was that Volley would be supported by extending the appropriate `HttpStack` implementation.  `HurlStack` for instance is not final and in particular `HurlStack#openConnection` is suitable for `StethoURLConnectionManager#preConnect`, with `HurlStack#performRequest` being good for `postConnect` and `interpretResponseStream`.  I have not personally tested this, but from my read of the Volley code I think it should work perfectly.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75083081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75084120", "body": "Actually you can use Firefox.  If you download the chrome-devtools UI (which is open source: https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/devtools/front_end/&q=protocol.json&sq=package:chromium&type=cs), you can host it locally using a simple webserver like `python -m SimpleHTTPServer 8000`.  This is actually how we used to do things before we implemented `chrome://inspect`.  The main advantage to the latter is that we don't need to ship the frontend HTML/JS with Stetho.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75084120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75085789", "body": "Are you using Retrofit <= 1.8?  According to \nhttps://github.com/square/okhttp/wiki/Interceptors, it won't work on that older version without some additional effort.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75085789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75087635", "body": "I noticed this myself recently.  Can you try running `adb shell cat /proc/net/unix | grep @stetho`?  This is where the information comes from to populate that list of process names that you see.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75087635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75088376", "body": "It shouldn't, no.  In fact, one of our main design goals was to not require root or special privileges to operate.\n\nCan you explain a little bit about what isn't working?\n\nAlso, give the stetho-sample app a try (`gradle installDebug` in the stetho project root) to see if the inspection works there.  Clicking the \"APOD\" button will cause a database to be created.  Note that there is currently a bug where databases that are created after you first open the inspector UI will never appear in the list.  Just closing and re-opening the inspector will fix it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75088376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75089935", "body": "There is a pretty straight forward way to make this work using `ChromePeerManager` and hacking Stetho itself just a little bit (patches welcome _grin_).  Specifically, something like:\n\n``` java\npublic class Console ... {\n  private final ConsolePeerManager mConsolePeerManager = ConsolePeerManager.getInstance();\n\n  @ChromeDevtoolsMethod\n  public void enable(...) {\n    mConsolePeerManager.addPeer(peer);\n  }\n}\n\npublic final class ConsolePeerManager extends ChromePeerManager { ... }\n```\n\nWith that change, you can now track all peers that are aware of console updates and can dispatch to them easily using `CLog`:\n\n``` java\nCLog.writeToConsole(ConsolePeerManager.getInstance(), ...);\n```\n\nWe wanted to encapsulate this for you, allowing for `CLog` itself to guess `ConsolePeerManager.getInstnace()` by default as well so that callers could just invoke:\n\n``` java\nCLog.writeToConsole(MessageLevel.WARNING, MessageSource.NETWORK, \"foo\");\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75089935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75090404", "body": "It's common to see a few `Not implemented` messages stream by.  It represents specific JSON-RPC methods as part of the Chrome Debugger protocol that we don't understand/implement yet.\n\nIs there something that's actually not working as a result or is this just a concern about the warnings?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75090404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75098792", "body": "@antonkrasov let me spin up a quick Retrofit 1.9 + OkHttp 2.2.0 sample app to see if I can debug through the problems locally.\n\n@Tremelune that error is unrelated (but still a bug).  It's a harmless issue but is unintentionally noisy.  I'll fix it soon.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75098792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75109352", "body": "Diamond syntax FTW!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75109352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75111126", "body": "@Tremelune I tested this locally and cannot see an issue with Retrofit 1.9.  Can you try adding the logging interceptor mentioned in https://github.com/square/okhttp/wiki/Interceptors.  I'm curious if that is working.  If no, I think your issue is just with interceptors in general.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75111126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75111861", "body": "@bryanstern you can integrate `HttpURLConnection` using `StethoURLConnectionManager`.  If you depend on `okhttp-urlconnection`, you can likely make this work pretty easily through subclassing `HurlStack`.  Note that you could probably more easily implement a better `OkHttpStack` than the one Google provided in Volley.  Basically all you'd need is:\n\n``` java\npublic HttpResponse performRequest(...) {\n  Response okHttpResponse = mOkHttpClient.newCall(convertToCall(request, params)).execute();\n  return convertToApacheResponse(okHttpResponse);\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75111861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75118918", "body": "That is weird indeed.  If you kill your process (`adb shell run-as com.mypackage kill pid`), what does the `... | grep @stetho` line show?  Just trying to make sure things are being cleaned up as expected.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75118918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75123141", "body": "I confirmed my sample app is working correctly with Retrofit 1.9 and OkHttp 2.2.0.  Source is here: https://github.com/jasta/retrofit-okhttp-stetho-demo\n\nHere's the modified `GitHubClient`: https://github.com/jasta/retrofit-okhttp-stetho-demo/blob/master/app/src/main/java/com/example/retrofit/GitHubClient.java\n\nScreenshot to prove it :)\n![retrofit](https://cloud.githubusercontent.com/assets/83791/6274601/7f46df7a-b82d-11e4-8bad-4b6ac072b30e.png)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75123141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75125509", "body": "Lol, _facepalm_.  Entries show up in this list even for when they are client connections to that server socket.  In other words, if you open `chrome://inspect` and inspect your process you should start seeing multiple entries show up.\n\nThis should be fixed by filtering out the results that are not in the bound socket state or just removing duplicates.  I'll do a PR :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75125509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75152922", "body": "@longinoa merged without review as this is an important bug fix.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75152922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75169042", "body": "Hmm that's weird that it wouldn't work with non standard ports.  The layer at which Stetho intercepts isn't affected by the actual network layers at all.  Can you repro this in a sample/demo app?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75169042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75179140", "body": "@vrunoa yes, you will need to apply either `stetho-okhttp` or `stetho-urlconnection` in order to see network traffic.  For `stetho-urlconnection`, see the `stetho-sample` app for a working example of how to do this.  For `Android-Universal-Image-Loader` specifically, you'll probably want to subclass `BaseImageDownloader` and wire up `StethoURLConnectionManager` to your subclass.  Disclaimer: I've not actually done this myself so YMMV :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75179140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75254742", "body": "I've noticed this bug myself but I think it's actually harmless.  The binding error appears to be the result of a logic bug that tries to bind twice, with the second time of course failing.  The first bind works and the system should remain functional.\n\nI'm going to see about fixing this properly today.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75254742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75255347", "body": "Indeed, I think this can go nicely in the Local Storage section of the Resources tab.  I tried to make this work a month back and it wasn't straight forward due to the relationship between HTTP \"origins\" and that UI.  In particular, I'd need to pretend that shared prefs files are security origins at the start of inspection which would add a blocking filesystem traversal step and could slow down initial inspect.\n\nI need to just try it and see how bad it is in practice.  If it's slow, we can try something more complex by asynchronously updating the page security origins after we scan for shared prefs files.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75255347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75256158", "body": "I think there's a much easier way to do this by subclassing the two HttpStack implementations or maybe even easier by just creating a StethoWrappingHttpStack.\n\nAlso, prefer using Volley through Maven coordinates.  We don't currently bundle any jar files.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75256158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75270602", "body": "As I think about this more, I think wrapping HttpStack is more flexible and simpler. \u00a0This can be done by replacing the entity like:\n\n``` java\n  public HttpResponse performRequest(...) {\n    mNetworkEventReporter.requestWillBeSent(new VolleyInspectorRequest(request));\n    response = mDelegate.performRequest(request);\n    mNetworkEventReporter.receivedResponseHeaders(...);\n    InputStream intercepted = mNetworkEventReporter.interpretResponseStream(...);\n    response.setEntity(new InputStreamEntity(intercepted));\n    return response;\n  }\n```\n\nThis should make it possible to do:\n\n``` java\nnew StethoInterceptingHttpStack(new HurlStack(...));\n```\n\nThe critical assumption with this approach is that `performRequest` didn't already read the response input stream.  I don't think it would, though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75270602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75271469", "body": "Facepalm: `while (retries-- > 0) { ... bind(); }`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75271469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75297228", "body": "We're working on it: https://github.com/rickbrew/stetho/commit/b87a818d6e3b6bf1e68e0e4c8aa5e76b6eabb53e :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75297228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75300362", "body": "You might be able to find it by looking at `adb shell run-as com.yourpackage ls files`.  It writes files like `network-response-body-*` which the system normally cleans up when it doesn't force close.  It will eventually delete them if you inspect again tho.\n\nUnfortunately keeping the window open isn't possible AFAICT because once the socket disconnects the window automatically closes.  The only way I can think of to fix that would be to use a proxy server of some kind so that the connection to the DevTools UI wasn't severed (just the connect to the proxy).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75300362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75300734", "body": "You can click \"Clear\" explicitly to remove entries, but I'm otherwise not aware of any way to have the entires removed automatically.  Note that due to #13 there may be other weird upstream bugs we don't know about that cause rendering glitches.\n\nAs far as preserve logs, I don't think that would help in either case.  That's designed to not clear the network traffic when navigating to another page which is a concept we don't even support currently :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75300734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75300924", "body": "Just saw #43 which might be of interest to you as well.  This is a slightly different take on the solution if you use OkHttp.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75300924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75307641", "body": "SharedPreferences are actually sharded on Android.  In other words, there can be more than 1 of them and a correct implementation visualizing them should show all that exist.  There is a \"standard\" one which is presumed by the `PreferenceManager` but it would be incomplete to treat that as the only one.\n\nThat said, the real complexity is in figuring out exactly how security origins relate to the \"Local Storage\" tab.  I tried a few random thoughts a while back and couldn't get anything meaningful to show up there.  I can try harder, tho :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75307641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75321904", "body": "@briangriffey agreed, I think the `HttpStack` wrapper works nicely for that reason too.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75321904/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75326280", "body": "Thanks that's really helpful.  I'll fix this at a lower level so the fix works for stetho-urlconnection too.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75326280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75328594", "body": "@longinoa It's not actually a Content-Type problem, it's DevTools' internal concept of `ResourceType`.  We can convert a lack of `Content-Type` header to `ResourceType.OTHER` and it should work fine.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75328594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75331091", "body": "Were you previously using okhttp 2.2.0 without problems?  This seems like just okhttp itself would fail, independent of `stetho-okhttp`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75331091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75343230", "body": "`mimeType` doesn't need to be faked but I do like using `application/octet-stream` anyway.  Just in case the DevTools folks break stuff later :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75343230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75344027", "body": "This is a bad idea.  The `~/.m2` directory is apparently not used by Gradle's dependencies, so it's somewhere in `~/.gradle`.  I think it's best to do the naive thing and cache `~/.gradle` as we do now and check back with Travis-CI for a better fix later.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75344027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75346710", "body": "Confirmed, build is actually faster this way.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75346710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75347129", "body": "Can you provide your proguard configuration?  I'm trying to repro locally and am so far unable to.  Not sure what's going on here or why adding Stetho would cause it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75347129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75379397", "body": "Interesting.  The weird thing with the way this works is that I'm really trying to declare that I can use okhttp 2.2.0+ in that module but that I don't really want to depend on it (I want the caller to make the dependency).  Gradle doesn't seem to offer a way to do this that I can see.  Perhaps this is why Square is still using Maven :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75379397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75421097", "body": ":)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75421097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75423046", "body": "@bryanstern closing now that a solution exists.  I think if we're going to merge something in it's most likely to be from #51 or something like it which more generically supports Volley.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75423046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75637910", "body": "Duplicates #49, already fixed in master.  Will be releasing 1.0.1 soon with this fix.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75637910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75638687", "body": "Updated.  :+1: or :-1: ?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75638687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75667730", "body": "Responded to feedback.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75667730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75680138", "body": "@JakeWharton awesome, thanks.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75680138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75699496", "body": "@b95505017 working on getting a release (1.0.1) out the door this week.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75699496/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75794846", "body": "Addressed the type mismatch issue:\n![type-mismatch](https://cloud.githubusercontent.com/assets/83791/6354131/5c6f2c90-bc02-11e4-857d-ed5dc9143cfd.png)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75794846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75803314", "body": "Can you confirm that `stetho-sample` works for you?  It can be installed by checking out the source and running `./gradlew installDebug`, then manually starting the app on your phone.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75803314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75804255", "body": "Leaning toward recommending this solution: http://littlerobots.nl/blog/stetho-for-android-debug-builds-only\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75804255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75880988", "body": "Curse you Chrome!!!! https://code.google.com/p/chromium/issues/detail?id=461581\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75880988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75881385", "body": "@paulirish looks like Chrome DevTools broke this recently as well.  favicon's no longer show up even for Chrome itself.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75881385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75882192", "body": "`id=\"...\"` is probably one of the first important features to add next.  It's super hard to make sense of the hierarchy otherwise :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75882192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75886008", "body": "Overall I really love this.  Awesome job.\n\nPlease do look into Travis CI build failures though :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75886008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76263164", "body": "Duplicate of #49, which is fixed in master.  A new release is expected this week to address the issue.\n\nNote however, that this is a harmless error and shows up even in the sample app.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76263164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76467229", "body": "@lynfogeek 1.0.1 just released with this feature.  Looking forward to feedback!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76467229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76488372", "body": "Err actually I'm not so sure that we fixed this issue. I referenced it only\nbecause of @JakeWharton shaming our usage of wildcard deps :)\n\nI was never able to repro the issue so I can't confirm that we fixed it...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76488372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76650910", "body": "Volley can be supported a few different ways.  There's discussion of a generic solution in #51, but the currently preferred solution for okhttp specifically is with a new `OkHttpStack` implementation: https://gist.github.com/bryanstern/4e8f1cb5a8e14c202750.  \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76650910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76651181", "body": "Can you post the stack trace?  Supporting this really depends on how OkHttp's interceptors system works with respect to WebSocket traffic.  We also don't have API support in stetho's `NetworkEventReporter` however that can be easily added.\n\nNote however that the DevTools' WebSocket inspection is fairly limited.  In particular, binary frames are not visualized so that it can be difficult in practice to use this feature with efficiently designed websocket protocols.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76651181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76839694", "body": "We wanted to avoid this in `dumpapp` because currently most of the option parsing happens on the server itself (`-p` is the only option parsed by the client).  That said, we could add more by making the parser a little more sophisticated (remember, we have to actually remove the options parsed locally before they're sent to the Stetho server).\n\nI'd be happy to accept a diff which adds `-s` / `--serial` but do note that `ANDROID_SERIAL=foo ./scripts/dumpapp -p ... blabla` would function the same without the same side effects in the shell that `export` causes.  This is how we internally use `dumpapp` for automation.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76839694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76839926", "body": "It sounds like you've not invoked `Stetho.initialize`.  For comparison, you can try installing the stetho-sample and seeing if it works.  Clone from github and run `./gradlew installDebug` then tap the launcher icon.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76839926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76986131", "body": "I believe we can solve the network issue with this pattern very nicely by making stetho-okhttp and stetho-urlconnection depend on stetho using a provided/optional dependency, then having them internally test for Class.forName(\"com.facebook.stetho.Stetho\") or something.  For instance, you could have:\n\n`stetho-okhttp`:\n\n``` java\npublic class StethoInterceptorInstaller {\n  public static void installIfPossible(OkHttpClient client) {\n    if (isStethoPresent(...)) {\n      client.networkInterceptors().add(new StethoInterceptor());\n    }\n  }\n}\n```\n\n`stetho-urlconnection`:\n\n``` java\npublic interface StethoURLConnectionManager {\n  public void preConnect();\n  public void postConnect();\n  ...\n}\n\npublic class StethoURLConnectionManagerFactory {\n  public StethoURLConnectionManager newInstance(...) {\n    if (isStethoPresent(...)) {\n      return new StethoURLConnectionManagerImpl(...);\n    } else {\n      return NoopURLConnectionManagerImpl.getInstance();\n    }\n  }\n}\n\nclass StethoURLConnectionManagerImpl implements StethoURLConnectionManager {\n}\n\nclass NoopURLConnectionManagerImpl implements StethoURLConnectionManager {\n}\n```\n\nThis will not necessarily be backwards compatible for `stetho-urlconnection`, but I think we can find a way to make it work.  Even if it involves gutting `StethoURLConnectionManager` today and moving the internals somewhere else.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76986131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77013974", "body": "We've been considering our own devtools client recorder which automagically creates HAR files and such so that it can be used to instrument runs of the app that are crashing or where problems are happening very early during initialization.  This might be a great compromise for your issue as well.  Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77013974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77021445", "body": "Can you also take a look at why Travis CI thinks this is failing?  Once we're passing the build, I think we'll be able to start merging into the elements branch.  My thought is that once we're happy with the end state we can rebase the elements branch a little and then merge the result into master.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77021445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77311291", "body": "@brennantaylor the concern is really about asking every engineer to think through the solution.  The helpers (stetho-okhttp and -urlconnection) are there to just make life easier for most devs so they might as well make the removal in release builds a convenient choice as well.  I'm not longer looking at a stub vs core architecture that would be hard to maintain so I think we have a good compromise with my above proposal.  I agree though that if the solution takes something away in terms of convenience or performance it's clearly not worth it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77311291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77440242", "body": "We have a bug today where we don't refresh the _available_ databases or SharedPreferences after you click Inspect.  Instead, try going into settings, modifying a few things, and then clicking the APOD button on the main activity.  After, click \"Inspect\" and you should see the resources appear.\n\nThis is something we'd like to address of course, but it will require jumping through a few hoops (namely `FileObserver` and a way to simulate page navigation to get new security origins).  Pull requests welcome! :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77440242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77440329", "body": "Prefer to re-open as a separate issue regarding dynamically refreshing databases and shared prefs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77440329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77440789", "body": "@semenoh interesting use case, we hadn't actually considered that.  It is theoretically possible to configure this through the `Database` module but I think you've exposed a possible gap in our API surface area.  Specifically, it's very awkward to have to provide a custom `InspectorModulesProvider` and manually override the `Database` object with your own custom configured version.  I think we need to think through this a little bit more.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77440789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77448558", "body": "Oh I see.  The method not implemented messages are harmless and can be ignored.  Not seeing the usual Stetho banner is troubling.  Can you confirm that the `stetho-sample` does indeed work?  If yes, I can only imagine that something happened within your app that would have blocked the server worker threads from proceeding.  Perhaps a debugger breakpoint?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77448558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77461028", "body": "Can you take a screenshot of exactly what the Console tab looks like?  It is starting to sound like you're inspecting the inspector itself somehow (which is what we do often to troubleshoot issues with our implementation)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77461028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77462821", "body": "Hmmmmm.  You shouldn't even be seeing that \"Not implemented\" message in the console.  I want to ask a bunch of questions about what version of Chrome and all that, but if `stetho-sample` works in the same session then I am really at a loss for what could possibly be going on.  My normal procedure for debugging this stuff locally is fairly involved, requiring that you bring up wireshark, sniff the loopback device with the capture filter `port 5037`, then filter by `websocket` and scrutinize the traffic being sent by Stetho.\n\nIf I could repro somehow I'm pretty sure we could get to the bottom of it with the above workflow, but given that the sample works for you I'm at a loss.  I'd be happy to help guide you through our debug process though if you're interested in helping us figure out what could be going on here.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77462821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77663095", "body": "This is looking great.  I think it's ready to be merged, but I'd like to do some rebasing first to clean up the diff stack.  Ideally this first check-in should expressed as a single commit.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77663095/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77716353", "body": "The captures look fairly normal but do seem to indicate that something went wrong and caused the Stetho thread to hang.  Does logcat have anything interesting to say by chance?  Also, attaching a debugger and seeing what the Stetho worker threads are up to would be interesting.  Or, perhaps more conveniently, run `adb shell run-as mypackage kill -3 mypid` then take a look at `/data/anr/traces.txt`.  See here for more info on this trick: http://elliotth.blogspot.com/2012/08/how-to-read-dalvik-sigquit-output.html\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77716353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77944022", "body": "Looks good!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77944022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77955530", "body": "Hehe, I think I have a clue here.  Are you by chance using proguard on your debug builds and/or using Stetho on a release build?  I'm almost positive that proguard is obfuscating the class and/or method names of the `ChromeDevtoolsDomain` methods which will break the protocol implementation.\n\nI recommend disabling proguard for debug builds if you can.  Otherwise, try adding the following proguard rules:\n\n```\n-keepnames class com.facebook.stetho.**\n```\n\nYou can verify this worked using:\n\n```\ndexdump MyApp.apk | grep 'Class desc' | grep stetho\n```\n\nAnd look for names like `Network`, `Runtime`, `DOMStorage`, etc.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77955530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78080795", "body": "If I may, there is now split dex support natively part of the build\ntoolchain.  You may want to check it out as a way of improving your build\ntimes.\n\nAlso to confirm, yes we do use reflection to implement the devtools\nprotocol.  The performance hit is taken only after the first peer connects\nhowever.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78080795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78104279", "body": "@Tolriq actually the multi-dex solution has backwards compatibility to pre 5.0 devices: https://developer.android.com/tools/building/multidex.html#mdex-pre-l\n\nAs for update or delete queries in SQLite, AFAIK this is just how the UI was designed to work.  There may be some opportunity for us to display status in some way, but I am not immediately aware of how.  If you're curious, the way we usually explore what the UI is capable of first is to attach the debugger to a legitimate web app using Chrome on Android and play around with the feature set.  Whatever is available there is available for us :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78104279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78104347", "body": "@Tolriq please do file a new issue for that though, this one is getting hard to track :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78104347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78123797", "body": "I just looked into this briefly and noticed that of course you can indeed return results as if it were a SQL query.  I think that's probably the right thing to do.\n\nPatches welcome? :)  You'd be looking at `Database` and `DatabasePeerManager`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78123797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78149439", "body": "@Tolriq I'll see what I can do :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78149439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78150594", "body": "The issue, I believe, is that we open the database handle ourselves rather than trying to re-use an existing connection which means that the current process may have already opened the database using different flags.  Attempting to re-open it may reconfigure details like write-ahead logging, which cannot be done while the database is locked.\n\nFor this to work, I think we'd need some way of detecting the correct configuration and applying it, but I'm not extremely familiar with this problem space and would need to investigate much deeper.  Maybe it works to just check for a `-wal` file? :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78150594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78164249", "body": "Looks good other than these minor issues.  Please address, rebase, and merge.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78164249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78370717", "body": "Please attach a screenshot to the pull request.  You can edit the pull request summary and drag-n-drop an image into it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78370717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78373421", "body": "Minor cleanup requested, then feel free to merge.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78373421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78386302", "body": "I think you've found a bug in Stetho in the same way Stetho's found a bug in your code :)\n\nThe issue here is that due to the design of our JSON-RPC/WebSocket implementation, we require that all objects sent over the wire are first constructed as POJOs.  The DevTools protocol requires that we read network response bodies as a single, typically base64-encoded, UTF-8 string.  This means that in practice if the response body is a very large binary blob, the resulting base64 UTF-8 string will be so large that the VM will be unable to allocate it as a single contiguous char[] buffer*.\n\nI suspect that rather than truly running out of memory, instead Dalvik/ART are refusing to allocate such a large buffer.  Somewhere in Logcat output this would be reflected, though it can be hard to spot sometimes.\n\nThis can be addressed by us in a couple of ways, but the more important question is: why are you downloading images that are likely much larger than the viewport size of the device?  Doing so wastes bandwidth and processing power locally, even with `BitmapFactory` downsampling the image during decoding.\n- \\- Two important details conspire to inflate the size of this allocation: 1) char is 2 bytes in Java, and 2) base64 encoding typically increases data size by ~25%.  So, if your image was 1MB, you should expect an allocation of 2.5MB.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78386302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78388394", "body": "The address already in use bug was fixed in 1.0.1 and represents a simple logic bug that always prints this error even on success (whoops).\n\nIf this is the only symptom, you can safely ignore the error or upgrade to 1.0.1 and everything should be fine.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78388394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78394242", "body": "Agreed Stetho has the wrong behaviour.  It's supposed to help you debug these kinds of issues, not crash :)\n\nI think we have two decent options:\n1. Try to read the string, catch `OutOfMemoryException` and replace the contents with an error indicating this in some fashion.\n2. Build a streaming API for our JSON-RPC encoder so that we can express potentially very large requests and responses (we have a couple other interesting places) in a streaming fashion for efficiency reasons.  I do really like this option, but unfortunately we hacked our way through a custom WebSocket and JSON-RPC implementation and neither are exactly well suited for this at the moment.\n\nI'm inclined to post a quick diff for 1, then take a deeper look after 1.1.0 to see if we can rearchitect and improve our underlying protocol implementation.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78394242/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78396891", "body": "Check the Travis build errors.  I think they're lint related, which I don't have a great way to extract from Travis-CI at the moment.  I just re-run`gradle check` and check out the XML file it generates.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78396891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78548417", "body": "Interesting, this was not automatically closed.  Apparently, the commit itself must have this information in it, not just the pull request summary.  Recommend spending more time up front to format the commit message as a result.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78548417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78572617", "body": "I'm curious for your thoughts at a high level on the API for configuring modules.  I believe at present you are writing something like:\n\n``` java\nnew InspectorModulesProvider() {\n  public Iterable<> get() {\n    HashSet<> modules = new HashSet<>();\n    Collections.add(modules, Stetho.defaultInspectorModulesProvider(context).get());\n    replaceByType(Database.class, new Database(context, new MyDatabaseProvider(...)));\n    return modules;\n  }\n}\n```\n\nWe're doing this internally in FB4A/Messenger, but I'm really unhappy with it.  Seems like these use cases should be expressed more conveniently, perhaps with some kind of pattern like:\n\n``` java\nStetho.newInspectorModulesBuilder(context)\n   .addDefaults()\n   .add(new Database(...));\n   .build();\n```\n\nInternally `addDefaults` would be a boolean which operated like:\n\n``` java\nfor (ChromeDevtoolsDomain domain : mCustomModules) {\n  modules.add(domain);\n  customModuleNames.add(InspectorUtil.getDomainName(domain));\n}\nif (mAddDefaults) {\n  if (!customModuleNames.contains(\"Database\")) {\n    modules.add(...);\n  }\n  ...\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78572617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78713703", "body": "Looks good, clean up the minor nits then rebase/squash and we can merge.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78713703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79075423", "body": "@jferlisi no, working on it tho :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79075423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79086502", "body": "Looks good, please squash into 1 commit (http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html), then `git push -f` into your github fork branch.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79086502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79096092", "body": "@semenoh does #91 solve your issue?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79096092/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79321766", "body": "Looks good except for nits.  Please update the commit message of the rebased diff to include the summary in the pull request and \"Closes #...\" at the bottom.  I recently learned that the pull request's metadata is not used for this feature, it must be in the commit itself.  In general it's better to have the meta data in the commit anyway so that it is visible in the git history later.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79321766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79442606", "body": "@paulirish any chance you have some context on this?  In particular, with: https://code.google.com/p/chromium/issues/detail?id=277984#c34?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79442606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79538032", "body": "Filed upstream as: https://code.google.com/p/chromium/issues/detail?id=467222\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79538032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/80746681", "body": "Also per https://help.github.com/articles/closing-issues-via-commit-messages/, please write \"Closes #88\" in the commit message, ideally on the last line by convention.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/80746681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82072763", "body": "Are you using proguard with obfuscation on the Stetho build?  If yes, it breaks Stetho unfortunately.  Logcat confirms this by an unusual set of \"Method not implemented\" calls (for the common things we do implement like Network, Database, etc).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82072763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82602997", "body": "Oh sorry, misread that this was failing for `stetho-sample` as well.  Does this machine have access to the Internet?  It does download the UI code from Google servers.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82602997/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83024919", "body": "Actually it does work fine in release builds its just that proguard\nobfuscation breaks our reflection based ChromeDevtoolsMethod and friends.\nIf you -keepnames in your proguard config for all stetho classes, it will\nwork.\n\nWe've been looking at fixing this (explicitly mapping methods / parameters\nto strings) but it hasn't been a high priority yet.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83024919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83067327", "body": "Yes I think `Network` should use a `JsonRpcException`.  This will cause it to show up in the Console as an error.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83067327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83215061", "body": "Why do we want this patch?  It upgrades to the latest build tools, but for what reason?  Also, it breaks our automated tests, which of course is a non-starter...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83215061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83216181", "body": "@hzsweers I debugged this issue with another user on #80 who confirmed the fix you just proposed.  I also know for sure that with obfuscation it will break.  One thing you can do just to make sure proguard is working how you expect would be to run `dexdump` as discussed in #80 to confirm that indeed the important Stetho classes (like Network, Runtime, etc) are present and their names are unobfuscated.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83216181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83216707", "body": "Looks good except the one minor issue about which `ErrorCode` you're using.  Feel free to squash/rebase into a single commit, then I can merge.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83216707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83247143", "body": "@IgorGanapolsky of course, that makes sense.  But we still need our tests working, of course :)  Any chance you can follow up as to why Robolectric testing is not working properly with the latest build tools?  AFAICT, they recommend using the plugin that you had to disable.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83247143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83267414", "body": "Oh I didn't realize that was tested to work with Robolectric as well.  Looks like the Robolectric sample was updated accordingly as well: https://github.com/robolectric/deckard-gradle/blob/master/build.gradle\n\nThough they don't use the 1.1.3 gradle plugin yet.  Can you please test that `gradle check connectedCheck` still runs all the tests?  Also note that Travis CI doesn't appear to have the latest build tools available for some reason.  We won't be able to merge without that being resolved.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83267414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83267867", "body": "Awesome, thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83267867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83777038", "body": "@fourlastor without tests working in Travis I'm inclined to just wait for them to fix this upstream and then integrate your patch.  As of now it doesn't seem the value is worth the cost of a loss of tests in CI.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83777038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83839595", "body": "@felipecsl soon..... :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83839595/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/84062903", "body": "@fourlastor Ack'd.  Curious though why the removal of `android-unit-test` would break a flaky test that was previously working.  Doesn't matter though, we can just fix the test.\n\nAs for Travis CI, there remains the more serious issue of build tools 22.0.0 being apparently missing (check the Travis CI build output).  Until that passes, we cannot merge your change.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/84062903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85263302", "body": "Any update?  I'd really love to have good Volley support for Stetho...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85263302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85619995", "body": "Can you provide a screenshot as well?  Visual changes like this are very useful to see in context.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85619995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85717930", "body": "@rickbrew can you checkout this branch locally and let me know if IntelliJ explodes?  I'm hoping this is a smooth transition once merged in.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85717930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85718213", "body": "Upstream is implementing the required changes, we're back in business!  Go Chromium team!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85718213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/86549265", "body": "Can you elaborate a bit on how you imagine this would work?  I'm not sure\nwhat kind of human interface you're proposing.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/86549265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/86715788", "body": "Looks good!  Squash/rebase into a single commit then feel free to merge.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/86715788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/86754331", "body": "Looks good, merge after Travis gives it a green light.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/86754331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87130410", "body": "@brennantaylor I wondered about this and I think you're quite right.  I was really hoping to just be able to commit the project code style settings and the copyright notice.  Do you know if it's possible to get away with just this bare minimum set and have IntelliJ pick it up?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87130410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87130490", "body": "I believe there is likely another error message being printed (the java finished with non-zero exit value 2 message is a red herring I think) further up that includes the real error.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87130490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87132831", "body": "Thanks, I'll take a look soon.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87132831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87305934", "body": "Removed unnecessary files and tested locally that this works more or less fine.  Android Studio tries to clobber the copyright template on import, but this is apparent and wrong in git and if you simply revert Android Studio's changes it will work properly.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87305934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87340018", "body": "Linked.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87340018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87340080", "body": "Replaced by #107 \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87340080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87865484", "body": "Can you give a little more context on what didn't work?  What was the output?  Did logcat or the Stetho console print anything interesting?  These code paths should be fairly well guarded against silently failing.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87865484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87949741", "body": "The styles sub-tab is next :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87949741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88301615", "body": "Will produce a follow-up diff to address these issues.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88301615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88311810", "body": "@longinoa @dreiss @rightparen Looking to get this merged in tomorrow.  Can any of you take a look? \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88311810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88317208", "body": "Hmm, good catch.  This appears to be a bug in https://github.com/facebook/stetho/blob/master/stetho/src/main/java/com/facebook/stetho/inspector/network/NetworkEventReporterImpl.java#L280.  I don't know exactly what the protocol expects us to do, but I'm betting it's probably encode the value as a JSON array.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88317208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88503288", "body": "Yes, however we provide no helpers to facilitate this.  There is a lower\nlevel \"raw\" API for hooking this up yourself called NetworkEventReporter.\nSee stetho-okhttp/urlconnection source for clues as to how you'd wire this\nup manually.\n\nHttpClient does also have an interceptor type system similar to okhttp, but\nin my experience it is much less complete and is harder to properly\ngeneralize.  That's why we didn't pursue a stetho-httpclient helper.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88503288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88634341", "body": "Resubmitting based on master now that it's merged.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88634341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88634600", "body": "Already approved as #113, merging...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88634600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88639668", "body": "Ah, I missed context when I read through this the first time.  Request compression is not technically part of the HTTP standard and as such we didn't implement it in Stetho's gzip/deflate processing (only the response path does this).\n\nThis can be added however, and I agree it makes sense that it should be transparently handled.  Stetho tries to take a practical stance where possible for convenience and this definitely applies.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88639668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88643879", "body": "Found it.  The protocol uses a `'\\n'` character to split multiple headers with the same name, according to: https://chromium.googlesource.com/chromium/blink/+/master/Source/devtools/front_end/sdk/NetworkManager.js function _headersMapToHeadersArray.  Undocumented, but whatever, I can comply :) \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88643879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88646531", "body": "I likely won't have time to address this in the next few weeks.  If anyone is interested in taking a crack at a pull request, the solution is to simply check for this both in StethoInterceptor and StethoURLConnectionManager's handling of requestWillBeSent.  A common utility is likely desired to centralize the handling.\n\nAn important gotcha to consider is what is reported to `NetworkEventReporter#dataSent`.  Right now the body size is reported both as compressed and uncompressed sizes since we don't handle the decompression, but of course that would need to be fixed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88646531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/89010802", "body": "Minimally, this code should never throw a runtime exception and should `if` guard any dangerous assumptions.  That can be improved easily so that the solution degrades naturally.  \n\nThat said, a proper fix would be to use a future proof strategy involving `Application.registerActivityLifecycleCallbacks` in `Stetho.initialize` and keeping this information available for all Stetho operations (Inspector and Dumpapp).\n\nThis bug has to be resolved for 1.1.0.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/89010802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/89032997", "body": "Mostly nits and minor fixes requested.  Feel free to ignore nits, but do address the rest.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/89032997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/9855788", "body": "What do you mean?  I had to remove this due to Gradle's usage of a lock file in the .gradle dir which screws up caching performance.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9855788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/10553286", "body": "Prefer using `containsKey`.  Reads more clearly IMO.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/10553286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/10553296", "body": "Looks good.  PR next time :P\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/10553296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/10570155", "body": "nit: prefer `HoneycombAndBeyond` to be clear.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/10570155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/10570157", "body": "Prefer `PreHoneycomb` and a separate class for clarity; but I'm fine how it is.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/10570157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23951266", "body": "Resolved this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23951266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23963657", "body": "No, it's because okio itself contains code that Android's linter thinks is dangerous (`java.nio.File` does not exist in Android).  They are trying to warn you that you may be using a library with dependencies on \"standard\" Java features that Android doesn't provide and that things will likely go horribly awry at runtime.  In okio's case, these references are intentionally guarded so that okio can be used both on Android and in standard Java environments.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23963657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23973177", "body": "I'm estimating that we'll want to enhance this with header sizes, at which point the `+=` usage will make more sense.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23973177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23973288", "body": "The reason for this is that I intend to encapsulate all relevant details inside the interceptor.  I have much better access to low-level details here and can automatically do things like count the compressed and decompressed streams separately by reconstructing the `GZIPInputStream` myself.  This is possible because okhttp explicitly documents that it automatically gzip decompresses streams whereas `HttpURLConnection` does not.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/23973288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24251307", "body": "The console feature is seemingly enabled by the invocation of `Runtime.executionContextCreated` so I placed it here knowing that it would work.  That said, maybe `Console#enable` would be more appropriate.  Not sure why you think we should put it in `Network` tho.  This doesn't have anything to do with the Network tab.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24251307/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24046532", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24046532/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24046696", "body": "Hmm?  JDK-8 doesn't mean anything to Android specifically, and according to Android the behaviour has been correct at least as far back as Jelly Bean (don't have gingerbread locally right now).  Also, I'm not sure why my filter output stream would need to solve a bug that other filter output streams don't solve?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24046696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24048705", "body": "I'm not sure that would be useful given the current state of the `Content-Encoding` standard and convention.  The current available selections are: http://en.wikipedia.org/wiki/HTTP_compression#Content-Encoding_tokens\n\nAnd personally, I've never seen anything other than `deflate` and `gzip` in use on any web site.  Supporting \"identity\" (doing nothing) may be useful since it is publicly documented in Android's `HttpURLConnection`, though.  FWIW though, I've never seen that used and didn't even know about it until recently.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24048705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104176", "body": "Not sure what you mean.  The fundamental difference between `InflaterInputStream` and `GZIPInputStream` is that the former parses the GZIP-specific header, whereas the later parses the Inflate ZLIB header.  In this sense, `InflaterOutputStream` also expects a ZLIB header, but my `GunzippingOutputStream` instead knows to expect the gzip header.  `DecompressionHelper` is only there to select which `OutputStream` variety is appropriate given what format the server told us it used.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104520", "body": "I had that originally but it required making almost the entire class leaky so that the caller could access `mNetworkEventReporter`, `mRequestId`, etc and manually invoke the `dataReceived` hook.  This design made it less clear what the intended purpose of subclassing had (that is, to ignore events and/or values not extend them)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104765", "body": "Oops.  Note that in practice this unfortunately rarely makes a difference.  The way `HttpURLConnection` is implemented, I believe, is such that both `Content-Encoding` and `Content-Length` are stripped out to prevent the caller from making silly mistakes in handling the response.  A very common misuse is to do things like:\n\n``` java\nint length = conn.getContentLength();\nbyte[] buf = conn.getInputStream.readFully(length);\n```\n\nThis of course would break terribly if transparent gzip decompression was in use.  For this reason, they make `getContentLength` return `-1`, and `getContentEncoding` returns `null` always.  The reason I've coded things differently is because this behaviour is not documented, and therefore not reliable.  If it were to change, I'd like to handle it properly.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24104765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105059", "body": "Then I would have to manually handle the exception instead of using `Future` and `Callable`'s built-in support for it.  This would look like:\n\n``` java\nfuture.get();\nmThrowingRunnable.rethrowIfApplicable();\n\n...\n\npublic void run() {\n  try {\n    doStuff();\n  } catch (IOException e) {\n    mFailure = e;\n  }\n}\n\npublic void rethrowIfApplicable() throws IOException {\n  if (mFailure != null) {\n    throw mFailure;\n  }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105122", "body": "See above.  The alternative will leak a lot more about how the class works under the hood.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105245", "body": "The layer this is operating at is immediately adjacent the `FileOutputStream` itself.  Rethrowing in this manner is a way to propagate to higher levels (in particular to `ResponseHandlingInputStream`) so that it can be shown in the console.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105481", "body": "Oops, there is a bug here.  This should be:\n\n``` java\nboolean success = false;\ntry {\n  super.close();\n  success = true;\n} finally {\n  try {\n    getAndRethrow(mCopyFuture);\n  } catch (IOException e) {\n    if (success) {\n      throw e;\n    }\n  }\n}\n```\n\nI could probably rework this to have the `Closeable` interface as well, allowing me to use `Util.closeQuietly`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24105481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24118042", "body": "Ah.  I'm referring to the actual gzip format header.  This class has nothing to do with HTTP.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24118042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24121335", "body": "What isn't obvious that the comment is trying to convey is that it is functionally like `InflaterOutputStream`.  It seemed weird to end the sentence there, since the reader might be left wondering \"well why not use `InflaterOutputStream`, then?\"\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24121335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24366071", "body": "I'm not so sure that makes sense for Stetho.  If I use a `ThreadLocal`, the first time this code becomes live it will be pinned into the heap forever.  It may make more sense to take the opposite trade and be slower in practice when Stetho is attached, but have less of an impact on the heap when it is detached.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24366071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24938718", "body": "Yeah...I fubar'd the project settings.  Sorry about that :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24938718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25192920", "body": "Ack'd, wasn't thinking...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25192920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25210366", "body": "It will.  Doesn't matter which one goes first, technically, but one will need to be rebased/updated.  Github should block automerging.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25210366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25213174", "body": "That's what this diff is intending to do.  It no longer does replacements at all.  If it applies first, the one which uses regexps will be rebased and the regexps will be removed.  If this applies last, the regexp will be replaced with nothing...\n\nI developed the diffs in such a way that they were both intentionally based off `master` so neither had to go first strictly.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25213174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215210", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214570", "body": "Ack'd, will update\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214570/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214634", "body": "No, but a URL to github seems appropriate.  There is no task filed for this yet, and I actually don't like the idea of enforcing Facebook's internal policy of all TODOs are matched with a task.  I find that incredibly annoying, personally...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214993", "body": "Multiprocess support is incomplete/poorly implemented.  It won't help us here.  We'd have to poll for updates to do it properly.  Not worth it, IMO, especially since there is a \"refresh\" button in the UI.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25214993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215018", "body": "Oops :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215121", "body": "I did.  It seems to work fine.  I tried using `domStorageItemUpdated` and that's the one that freaked out.  If you don't match the existing value correctly it ignores the update.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215480", "body": "In the scheme of things we're doing in Stetho, I'm not so sure this is our riskiest assumption.... :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25215480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25216867", "body": "Actually no, this is about making sure the data shows up only in the \"Local Storage\" group not \"Session Storage\".  I wanted to restrict the data so that it didn't appear to be duplicated.  Maybe we will use \"Session Storage\" for something else later.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25216867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217178", "body": "All frames require a security origin.  All security origins show up as subgroups in \"Local Storage\".  Therefore, the outer frame's origin is basically the first in the list.  If I do the appropriately logical thing for Andriod, a dummy row will appear that doesn't refer to SharedPreferences.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217427", "body": "Oh, good call.  I assumed `Long` was a strict superset of `Integer` for `SharedPreferences` but this is not the case.  This could cause crashes in caller code.\n\nI'll correct it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25217427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25458959", "body": "Ack'd, will throw.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25458959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308507", "body": "As discussed, this won't fly :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308573", "body": "Empty, public constructors are implied in Java\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308601", "body": "What is this comment referring to?  When what exactly goes null?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308792", "body": "This can be better expressed by a separate class which handles `mNextNodeId`, `mElementToNodeIdMap`, etc.  Easier to reason about and can be re-used later by `Console`.  Something like `ObjectIdMapper`.  Could be put into `inspector/helper`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308830", "body": "Oh, I think I misspoke previously on my advice about accepting only `Context` here.  This probably is best expressed as this generic interface :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308934", "body": "Separate class.\n\nAlso, I'm thinking you should invoke `mDOMProvider.setListener` during `onFirstPeerRegistered`.  See `DatabasePeerManager` for reference.  This could be a good opportunity to upgrade the `setListener` API to `addListener`/`removeListener` as well.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308978", "body": "This should be renamed `AndroidDOMProvider`, no?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25308978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309085", "body": "This is generally an anti-pattern on Android.  Pre-initializing a mapping data structure adds to the heap and adds init overhead.  Strongly recommend either lazily initializing on first access or using the imperative pattern (that is, a function that translates Class/Object instances to `*NodeDescriptor`)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309114", "body": "Remove dead code\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309186", "body": "This is a pretty dangerous assumption to make at such a low level.  Strongly prefer requiring the caller pass in `Application` (which moves the assumption higher up the stack).  This will make it easier for us to correct it by actually requiring the `Application` object at some point.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309250", "body": "That seems weird.  Why can't we just have `highlight` be part of the `NodeDescriptor` API?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309278", "body": "Remove\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309340", "body": "Very strangely positioned here.  Add a method to `DOMPeerManager` so that it can internally delegate to `sendNotificationToPeers`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309417", "body": "As I think a little more.  Maybe you can even shove the listener itself into `DOMPeerManager` and just have it take over ownership.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309470", "body": "style nit: avoid hanging comments; use:\n\n``` java\n// Comment here\nweirdThingHere();\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309470/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309543", "body": "style nit: inner classes are never to be defined before methods.  Push them to the end.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309571", "body": "Are you sure this works?  What does DevTools do when you return null here?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309628", "body": "What is this?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309652", "body": "Technically `required = false` is implied.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309694", "body": "Given the complexities of debugging network protocols, strongly prefer that you have an else block that sends to logcat (via `LogUtil`)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309753", "body": "I think this is fixed by moving the object id mapping into another class, but `unhook` isn't really a consistent verb here.  You're really mapping and unmapping objects.  Or adding and removing.  Not hooking and unhooking.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309835", "body": "Danger.  We haven't yet resolved #44.  I can tackle this if you want, but it needs to be a precursor.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309897", "body": "This is highly unusual nomenclature for Java.  A getter would always be expected to return something.  Instead, use: `copyAttributeAt`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309927", "body": "This has a bad design smell.  If you need to do this, then you also need `copyAttributeAt` above to return a boolean which you must test for.  Generally, you should be able to predictably depend on the attribute being fully specified after `copyAttributeAt` successfully returns.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25309927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25310020", "body": "nit: this method is probably better expressed being marked `static` and accepting the `DOMProvider`.  It clarifies that it has no real stateful side effects and could be applied generically.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25310020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25310069", "body": "Err.  What is this method hooked up to?  Isn't `@JsonValue` or whatever required?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25310069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25310108", "body": "Separate file, in `inspector/elements`.  Might even want to consider separating the Android-specific `Provider` into `inspector/elements/android`.  We may entertain generalizing Stetho at some point to not be Android specific and your design helps with that :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25310108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25310166", "body": "javadocs would be nice :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25310166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25462551", "body": "When an Activity's onCreate is called, it is attached to a window.    This is the point where you are inserting it into your structure.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25462551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25462667", "body": "Never use this on Android.  It is designed for high throughput in highly concurrent environments at the expensive of RAM.  Use `Collections.synchronizedMap(new HashMap...` instead.\n\nAs an aside, you don't need a map.  `Application` is a singleton in Android.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25462667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25462846", "body": "I just realized there is a serious bug here in that you do not run any logic in `onLastPeerUnregistered`.  This should be leaking, no?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25462846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25462982", "body": "You can't throw because this is a reasonable case.  Start the sample app, hit back to dismiss all UI, open chrome://inspect.  This case should occur.  But what actually happens in the DevTools UI?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25462982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25463017", "body": "I meant what is `showInfo`, the field.  Not important, was just curious...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25463017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25463085", "body": "I'd give Android framework engineers the same criticism :)  Though they sometimes get it right: `Cursor#copyStringToBuffer(...)`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25463085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25463162", "body": "Defensive programming is anything but here.  It would lead to subtle bugs going undetected because new fields might not be copied but the caller would expect that they were.  Document that all fields must be set so it's clear that a bug exists if this happens in practice.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25463162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25463191", "body": "Oops, missed that.  Nevermind :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25463191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25715521", "body": "This code should continue to read as one-liners.  It's intended as an extensibility point and should be terse.  Prefer:\n\n``` java\nmodules.add(new DOM(new AndroidDOMProviderFactory()));\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25715521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25715636", "body": "Prefer to remove this comment and leave a note for yourself out of band to follow-up.  It's unprofessional IMO to accidentally leave in a TODO like this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25715636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25715685", "body": "style nit: inner classes should be defined after methods.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25715685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25716149", "body": "This is at the wrong layer of inheritance.  Only `View` subclasses can be in `android.{view,widget}.*`, and only `Activity` can be in `android.app.*`.  The substitutions should be happening in `ViewDescriptor` and `ActivityDescriptor` as a result.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25716149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25716282", "body": "You probably don't want or need this.  Running indexOf/substring is almost certainly faster than maintaining and looking up in a hash map.  Remember, in order to lookup in a hash map, you must call String.equals on the key which will iterate through each character of the string.  indexOf and substring will iterate through only part of the string.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25716282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25716964", "body": "style nit again: please move class definition below methods :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25716964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25717099", "body": "Do not use `assert`.  It's tragically broken in Java.  Use `Util.throwIfNotNull`.  Also, you have a race here if you don't synchronize these two methods.  The base class doesn't do it because I was trying not to be heavy handed (maybe I should've though)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25717099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25717418", "body": "This is unnecessary FWIW.  `ObjectMapper` is basically just static functions (we should have made them static functions actually).  It has no initialization and accounts for just 1 object.  Likewise, `mObjectIdMapper` is also very small if you clear the data structure.  It's only `mDOMProvider` that's considered large and is special cased using this pattern.\n\nIt's your choice as to whether you adjust things, but you must use `@Nullable` for all fields that you deinitialization in this way which is where I think you'll find that the choice is a little uglier than I think you'd prefer (IntelliJ will start warning you all over about possible null access).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25717418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25717482", "body": "This is sloppy IMO.  There should be a `clear` method that you explicitly invoke.  This should let you continue to hold the reference safely with minimal memory usage.  See previous comment for more context.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25717482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25717930", "body": "This represents a poor API.  If you are not going to provide a working implementation for all versions, the `newInstance` method should be marked `@Nullable` and you should actually return null.  This way callers explicitly have to write:\n\n``` java\nif (mHighlighter != null) {\n  mHighlighter.highlight(...)\n}\n```\n\nAn alternative strategy is to add an `isSupported` method that `NullHighlighter` (prefer `NoopHighlighter` as well since null has no semantic context here) implements and returns false, then throws on all other methods, forcing callers to write:\n\n``` java\nif (mHighlighter.isSupported()) {\n  mHighlighter.highlight(...);\n}\n```\n\nThe reason for being explicit is so that readers of the highlighting code can see plainly that it might not be supported and that would explain why it's not working for them on a naive/quick read of the source code.  Forcing folks to dig all the way down into the implementation to see that possibility is frustrating.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25717930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25718072", "body": "nit: `final` is not needed\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25718072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25718329", "body": "There's a much simpler solution here:\n\n``` java\nmHandler = new Handler(Looper.getMainLooper());\n\nsynchronized void highlightView(...) {\n  mHandle.removeCallbacks(mHighlightOnUiThreadRunnable);\n  mHandle.postDelayed(mHighlight..., 50 /* millis */);\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25718329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25718589", "body": "Never write this imperatively without a class guarding the implementation.  Doing so causes significant performance problems when the verifier runs on this code -- it sprays logcat with warnings about having to rewrite opcodes on the fly.\n\nAlways produce a compat class using the pattern you have for `ViewHighlighter` which is designed to isolate the verifier from the illegal code on older versions.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25718589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25718772", "body": "This should be encapsulated in the `...Hack` method.  Asking callers to deal with this is crazy.  For instance, what if there's an NPE in `getAllActivitiesHack`.  Do you really want the caller to have to figure that out?\n\nThe pattern for this in Java is to divide the method in two:\n\n``` java\ngetAllActivitiesHackQuietly(...) {\n  try {\n    return getAllActivitiesHack(...);\n  } catch (ClassNotFoundException | OtherCrazyThing e) {\n    LogUtil.w(TAG, e, \"Cannot detect activities, UI inspection may not work!\");\n  }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25718772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719217", "body": "...? :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719280", "body": "Ohh I don't like this at all.... :(  Strongly prefer using `ViewTreeObserver` and doing diffing per our previous discussion.\n\nAs an aside, this kind of thing is much clearer when encapsulated in Java.  There's so much reflection boiler plate code that you want to produce a utility like:\n\n``` java\nclass HierarchyChangeUtil {\n  static {\n    // set up...\n  }\n\n  public static OnHierarchyChangeListener getOnHierarchyChangeListener(ViewGroup v) {\n    // reflection magic neatly encapsulated...\n  }\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719562", "body": "again, you don't want your hack to throw stuff like this out.  Instead have a two stage method call structure:\n\n``` java\ninnerListener = HierarchyChangeListenerUtil.isSupported() ?\n    HierarchyChangeListenerUtil.getBlaBla(mElement) : \n    null;\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719710", "body": "Glossing over this.... :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719911", "body": "nit: `ObjectIdMapper<T>` can improve convenience and generalization.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719946", "body": "This is a good candidate for unit testing...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25719946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25720229", "body": "nit: remove\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25720229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25830563", "body": "This should be an `IdentityHashMap`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25830563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25919042", "body": "I can live with that :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25919042/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25919134", "body": "Perhaps you're right.  Even the Console tab use case will treat it as `Object`.  Nevermind :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25919134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990100", "body": "here too re order\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990101", "body": "this is not relevant\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990108", "body": "This isn't a TODO really.  We shouldn't use the support library so it's not really an option.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990152", "body": "Separate class please.  Try to be discrete with class responsibility, especially when hacks or backwards compatibility is involved.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990169", "body": "A lot of these maps you're using actually should be `IdentityHashMap`. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990237", "body": "Probably want a container class for this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25990237/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26173841", "body": "Oops :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26173841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26173944", "body": "Does this spam in practice?  I want to avoid confusing folks with internal error messages.\n\nSpecifically, if this is expected and/or fires often, consider using debug or info level.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26173944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26255589", "body": "`LogUtil` -- I don't know what this means in practice; if it ever happens, I want more info :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26255589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26255677", "body": "Seems like this can be simplified as just prefix, with the concatenation happening in each case statement, no?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26255677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26255950", "body": "I really have no idea why this check exists in `View` itself.  This looks a bit like unnecessary legacy.  Specifically, even if the package id is 0x00, `Resource#getResourcePackageName` should still work.  I'd prefer to drop it and take a crash/bad result if I'm wrong :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26255950/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26255988", "body": "This comment seems a bit unnecessary.  It's easy code to read :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26255988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26256043", "body": "This special case statement is probably not needed.  I bet `r.getResourcePackageName` will yield android.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26256043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26256180", "body": "This reads better as:\n\n``` java\nswitch (resourceGetPackageId(id)) {\n  case 0x7f: ...\n}\n\nprivate static int resourceGetPackageId(int id) {\n  return (id >>> 24) & 0xff;\n}\n```\n\nAs an extra bonus, `resourceHasPackage` can be inlined as: `if (resourceGetPackageId(id) != 0) {`...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26256180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268297", "body": "I try to be pragmatic about this kind of thing.  For instance, the relative cost of this allocation is dwarfed by the relatively high cost of traversing the `Resources` system looking for string identifiers.  Your call though :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26269480", "body": "No reason, your `resourceHasPackage` method scrambled my better judgment :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26269480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332279", "body": "touch\u00e9, I didn't know about this API :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332279/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332742", "body": "Prefer a list.  `HashSet` has ordering and performance implications that are seemingly unnecessary here.  Note that Android uses a list itself assuredly for this same reason.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332840", "body": "I'm not a fan of having the default applied internally.  Instead, create a `DefaultDatabaseFilesProvider` class and modify all constructors to require an instance of `DatabaseFilesProvider`.  Then, the default will be to merely invoke:\n\n``` java\nnew Database(context, new DefaultDatabaseFilesProvider(context));\n```\n\nFor API compat, we probably should leave in `Database(Context)`, but mark it `@Deprecated` and have it internally contain the above logic.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332939", "body": "Oh, so I did.  Well that's weird, I have no memory of this at all.  _facepalm_\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332954", "body": "style: `databaseFilesProvider`.  Also, put each parameter on its own line when you have to wrap.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26332954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26333080", "body": "Prefer not having to modify this test.  I actually wanted these APIs to preserve order.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26333080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26338286", "body": "Yes.  Our style is to put each parameter, even the first, on its own line once we have to wrap.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26338286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26338311", "body": "Yeah that change is fine I think.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26338311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26357009", "body": "nit: don't need final\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26357009/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26357035", "body": "style: new line; mark `databaseFilesProvider` with `@Nullable`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26357035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26357049", "body": "nit: drop `this`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26357049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26357075", "body": "Also, mark `mDatabaseFilesProvider` with `@Nullable` and then make things not crash if it's null.  Or drop this null support :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26357075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26397243", "body": "Oops, misread :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26397243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266505", "body": "Please don't :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266588", "body": "This must be case insensitive.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266619", "body": "Out of curiosity, what was this actually doing before when `UPDATE` et al were passed?  What was the cursor?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266640", "body": "Revert.  Tell IntelliJ to stop auto formatting :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266759", "body": "Rename and clarify:\n\n``` java\nhandleSelect(Cursor result);\nhandleInsert(long lastInsertedId);\nhandleUpdateDelete(int rowsAffected);\n```\n\nThe mapping to the DevTools response and is the job of the implementer of this interface.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266821", "body": "Also, curious why we don't spell out UPDATE, DELETE, etc?  Can you short-hand these in some way otherwise?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26266821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26267075", "body": "I think this can be done in a clearer way:\n\n``` java\nString command = getFirstWord(query);\nif (\"UPDATE\".equalsIgnoreCase(command)) { ... }\n\nprivate static String getFirstWord(String s) {\n  s.trim();\n  int firstSpace = s.indexOf(' ');\n  return firstSpace >= 0 ? s.substring(0, firstSpace) : s;\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26267075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268569", "body": "Re `toUpperCase`, I missed this but prefer `equalsIgnoreCase` on the full word.  It's better performing and IMO, clearer.  Also, not applicable in this case but `a.equalsIgnoreCase(b)` is not strictly equal to `a.toUpperCase().equals(b.toUpperCase())`.  Casing is defined very differently in a lot of languages.\n\nThese are just nits tho, no big deal.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268585", "body": "I'm going to.  We have to for license headers anyway.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268616", "body": "Oops, I meant `s = s.trim()` :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26268616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26418520", "body": "This shouldn't be `Cursor`; it implies that the cursor came from `database.rawQuery`.  Instead, prefer to parse `changes(), last_insert_row_id()` into two longs (or whatever type they are?)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26418520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26418555", "body": "nit: `interface`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26418555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26442514", "body": "Way too high level of a catch.  Strongly recommend putting this in two critical places, `Network#readResponseBody` (specifically around the `readFile` call) and also `NetworkEventReporterImpl#readBodyAsString`.\n\nI prefer this strategy because it is very specific about suppressing this serious error only in call sites we expect could accidentally allocate much larger segments than we normally expect.  No other code should be doing this.  Also, catching it appropriate lower levels allows us to respond using the actual DevTools protocol so that the UI can represent the error in a discoverable fashion.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26442514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26543498", "body": "That is unfortunate.  Given this, let's catch it generically as well as specially with a comment in the general path indicating that `JSONStringer` can cause the issue as well.  That said, `JSONStringer` sucks and we really should be using a custom `JsonWriter/Reader`-based approach.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26543498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26685505", "body": "This will cause us to close the socket, dismissing the inspector window.  Instead, convert the response yourself to an error (similar to how the `catch (JsonRpcException)` clause a few lines up does it)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26685505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26715679", "body": "Use `ErrorCode.INTERNAL_ERROR`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26715679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26725303", "body": "What is this for?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26725303/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26725421", "body": "If this is truly no longer needed, please just delete the line.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26725421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26725443", "body": "Remove these as well.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26725443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27054017", "body": "Rebase, this will not be needed anymore.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27054017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27054513", "body": "Please provide a little more context.  Specifically, there are two issues at play here:\n1. The support library is needed as an optional/provided dependency, but we cannot express that today with the `maven` plugin in Gradle (I believe we need to upgrade to `maven-publish`.\n2. The class needs to be divided significantly so that the Honeycomb+ APIs can be separated in terms of the class verifier from the Support library APIs.  Once separated, we can use booleans that use `Class.forName` to detect the presence of the classes we're interested in and adjust behaviour accordingly.\n\nThat said, I'm fine proceeding as-is per our conversation offline.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27054513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27054758", "body": "Per our conversation, strongly prefer converting these to multicatches that catch all checked exceptions and rethrow using `throw new RuntimeException(ex);`.  But be careful, this advice only applies to methods that you expect exist (publicly documented, stable APIs).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27054758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27054822", "body": "The advice applies here as well on account of the fact that you've already proven the method exists.  It must be invokable else something very unusual has occurred that we want to know about.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27054822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27055107", "body": "To me, this reads more clearly as:\n\n``` java\ntry {\n  Field field = ...;\n  field.setAccessible(true);\n  sOnHierarchyChangeListenerField = field;\n} catch (...) {\n  sOnHierarchyChangeListenerField = null;\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27055107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27059150", "body": "throw :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27059150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067336", "body": "Curious why this wouldn't be part of the constructor or `beginInit`?  It's the only thing not explicitly additive...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067397", "body": "nit: use Javadocs and `{@link}`.  Because this is package private, it is safe to document it in this way.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067397/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067559", "body": "Actually I misspoke.  I didn't realize `setHost` existed twice.  The other usage is the one I'm not so sure about...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067633", "body": "This has a strange smell to me.  It seems we're missing an explicit initialization step that would take this variable and that we should require it be non-null and require that the class be initialized properly.  This way it's clearer to the reader that the class, after construction, is not yet ready to be used.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067684", "body": "This seems to me like it should be `.d`.  `.i` will log in the caller application by default\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27067684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27069640", "body": "Oops.  Perhaps:\n\n``` java\nstatic {\n  sOnHiera... = determineOnHierarchyChangeListenerField();\n}\n\n@Nullable\nprivate static Field determineOn...() { ... }\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27069640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27069800", "body": "Yes, I think it's as simple as that, though I don't have the full context like you do.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27069800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27255549", "body": "This should probably be refacotred to use `ReflectionUtil`, no?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27255549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27255574", "body": "This too, possibly\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27255574/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351674", "body": "Ack'd, this design was admittedly sloppy.  I'll tidy it up so that it's much clearer that the throw is the only thing which must be on a separate thread.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351654", "body": "`stdout` should always be used for legitimate help output, as is the case when the path is not provided.  `stderr` would only be used on unexpected input.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351658", "body": "Ack'd, though this is intending to be human readable since a proper scripted approach would hardcode the path and therefore it would know the path that was written if the command simply exited successfully.  Also note that scripts would be much better served by the `\"-\"` output path, as is the case with `hprof_dump.sh`.  Prefer to keep the language here as-is for human beings...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27536874", "body": "This is in the same directory as `adb` and all those other tools.  If someone doesn't have it in their path, odds are they're not using the command-line at all :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27536874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27538024", "body": "Hmm, seems a bit heavy handed to just toss `\"$@\"` in there but I suppose that'll do it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27538024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27538262", "body": "This is concerning manual usage as per:\n\n``` shell\ndumpapp hprof /sdcard/foo\n```\n\nIf you can't write to `/sdcard/foo`, it silently fails due to a bug in ART.  This code tests for that possibility before it calls into the system.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27538262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27693331", "body": "Removed; force pushed.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27693331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27696316", "body": "I like this pattern because it plays well with `static final` assignment (which I forgot to use above, oops).  Otherwise you have to use a temporary variable.\n\nThat said, I think @rickbrew 's `ReflectionUtil.tryGetClassForName` can bail us out here.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27696316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27696502", "body": "lol, no it can't.  Because this code is testing for Stetho's existence :P\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27696502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27697880", "body": "Ack'd.  I meant to use the member variable here but yes `mHolder` is the right call.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27697880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27688664", "body": "nit: `null /* viewSelector */`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27688664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27688710", "body": "You cannot use classes in Android's `internal` package space.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27688710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27688778", "body": "Javadoc.  Also, what does \"local coordinate space\" mean?  Is it relative to the view's `getLeft()/getTop()`?  Be specific please.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27688778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27688869", "body": "Test for `View.VISIBLE`.  You want to ignore both invisible and gone.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27688869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27689296", "body": "nit: javadoc, with `{@link}`.  This makes it clickable.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27689296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27689429", "body": "nit: because this allocates a new list each time, prefer a non-getter verb like: `collectWindows()`.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27689429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27689475", "body": "Should be private, no?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27689475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692129", "body": "nit: I consider this lambda-style pattern to be most readable if you logically think of this expression as a function definition.  In that way, it would read:\n\n``` java\npublic void enable() { ... }\n\nprivate void enableOnUiThread() { ... }\n\nprivate final Runnable mEnableRunnable = () -> {\n  // code here...\n};\n```\n\nYes it technically violates that member variables go up top, but the pattern really is about a defining a function and referring to it as a pointer.  In C/C++, for instance, do exactly that making it really unintuitive for you to declare the method inside a function body as a nested function.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692167", "body": "Use a named constant at the top of this file.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692190", "body": "named constnat again\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692316", "body": "nit: `markDecorView` which always sets it to true.  It makes it clear that you're just locating it, and that you won't be unsetting this value once marked.  It's less flexible, but on purpose.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692928", "body": "nit: I think we use `*Params` for events and `*Request/Response` for commands.  See `Network` for examples.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27692928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27693013", "body": "nit: seems like this should be `onInspectNodeClicked` or something.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27693013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27693180", "body": "Define your own.  It was added in Java 8, but that's a long ways off on Android.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27693180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27697499", "body": "Tomato, tomato.  I was thinking the direction of the verb was backwards in this case since it implied that the inspect request came from Stetho, rather than asynchronously answering an inspect request from Chrome.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27697499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27700730", "body": "No, not a big deal.  Just ignore me :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27700730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710250", "body": "Use: `Looper.myLooper() == handler.getLooper()`\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710313", "body": "Package private, methinks.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710485", "body": "While this assignment is safe because `postAndWait` locks consistently on both threads, I'd prefer clarifying that by pattern as such:\n\n``` java\nfinal AtomicReference<...> rootNode = new AtomicReference<>(...);\npostAndWait(() -> {\n  rootNode.set(theThing);\n});\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710506", "body": "This strictly adds delay per our discussion.  Prefer `highlightElement` be made safe to run on any arbitrary thread to avoid this perf hit.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710521", "body": "Is this thread safe?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710533", "body": "This probably needs to be volatile.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710611", "body": "Oh, I think I see why this is done.  Presumably so we can keep access to the `*Descriptor` system consistent on the same thread as well.  Nevermind.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27710611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742475", "body": "Ack'd, will require context with this method.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742491", "body": "Ack'd, will rename.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742886", "body": "Resources cannot be null for either View or Fragment.  In the View case, it's impossible due to the final field; in the Fragment case, it will throw before it happens due to the resources coming from Activity which also guarantees non-null resources.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742941", "body": "In both of our use cases that would make the check redundant since you don't want to even report that the attribute exists unless the id is not -1.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27742941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "lynfogeek": {"issues": [{"url": "https://api.github.com/repos/facebook/stetho/issues/68", "title": "Display the DumperPlugin in the Developer Tools", "body": "The `DumperPlugin`s are great, but it would be even better to embed them into the DevTools.\nOne solution could be to create a new tab ([like this extension does](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?utm_source=chrome-app-launcher-info-dialog)) , and list there all the enable plugins. Whenever the user click on one of them, it pulls the data and display it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/68/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75505674", "body": "Nice! It was fast!\nCan't wait to test :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75505674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "funny9527": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/19ffdf6765bbc7040172a3b8f6e0c12dc3d13b70", "message": "fix payloadData length error\n\nfix payloadData length error when it's length is more than 0xffff"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IgorGanapolsky": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/1983a5303592b33a2aed2d0e2408fa0b003742a5", "message": "Remove extra parentheses."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82922194", "body": "@hzsweers Why do you need `if (BuildConfig.DEBUG) {...` if you are specifying a <b>debug</b> buildType in Gradle anyway??\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82922194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82923808", "body": "@hzsweers ~\"Stetho appears to only work if the build's debuggable flag is enabled\".  Not true at all.  Have you looked at stetho-sample code?  They do not have a <b>debuggable</b> flag.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82923808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83219012", "body": "Latest build tools and latest SDK is what many developers have installed on\ntheir machines.  If you resist such changes and such progress, you are\nsetting your project up for friction with dev community.\n\nIgor\nOn Mar 18, 2015 6:41 PM, \"Josh Guilfoyle\" notifications@github.com wrote:\n\n> Why do we want this patch? It upgrades to the latest build tools, but for\n> what reason? Also, it breaks our automated tests, which of course is a\n> non-starter...\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/facebook/stetho/pull/95#issuecomment-83215061.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83219012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83266377", "body": "Well, jcandksolutions shouldn't be used anymore since Gradle now supports\njvm testing in projects natively.  In fact, if you check jcandksolutions\nsay on his github repo that his project is deprecated.\n\nIgor\nOn Mar 18, 2015 9:17 PM, \"Josh Guilfoyle\" notifications@github.com wrote:\n\n> @IgorGanapolsky https://github.com/IgorGanapolsky of course, that makes\n> sense. But we still need our tests working, of course :) Any chance you can\n> follow up as to why Robolectric testing is not working properly with the\n> latest build tools? AFAICT, they recommend using the plugin that you had to\n> disable.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/facebook/stetho/pull/95#issuecomment-83247143.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83266377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26725526", "body": "As far as .gitignore file, that was added by my GitEye client\nautomatically.  I'll look into it.\nOn Mar 18, 2015 10:12 PM, \"Josh Guilfoyle\" notifications@github.com wrote:\n\n> In .gitignore\n> https://github.com/facebook/stetho/pull/95#discussion_r26725303:\n> \n> > @@ -4,3 +4,4 @@\n> >  *.iml\n> >  .DS_Store\n> >  /build\n> > +/.project\n> \n> What is this for?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/facebook/stetho/pull/95/files#r26725303.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26725526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "YongdongHe": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/50ed10a51a5a1a9e3ee798492c98ee3566d4ee50", "message": "Improve code style\n\nImprove code style"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/98f1e6d04986281cbf7f3e862d63ad97a640f690", "message": "Improve README.md\n\nThe first use, the developer may not know what type jsRuntimeBuilder"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ozmium": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/653074ee1e7e8198c60089275ce1cc25f54d69a4", "message": "Fix issue #480 : Documentation to add MyApplication to AndroidManifest.xml\n\nThe MyApplication Java class must be added to the AndroidManifest.xml, otherwise there will be no \"Inspect\" button that appears in chrome://inspect/#devices\r\n\r\nAdd this explanation in the documentation of Readme.md"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "friederbluemle": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/156575f948232fff053d2619f3348a9b897ddeee", "message": "Update Gradle wrapper to 4.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c5accb83f024ae2c8d61c81067428d8d4d8a3a7a", "message": "Update Android Gradle plugin to 2.3.3"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a2ca0387be54a9c91c963fab6830996613eddcc9", "message": "Update Android Gradle plugin to 2.3.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c5e7572afe8d609d12e723fc65e5cd96468137f4", "message": "Update build tools to 25.0.2"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3ecf01eb4e954ee13372256e2d84cd9319771e31", "message": "Update Gradle wrapper to 3.4.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/53030dc4edfc214b0450368c97a1b3097d74952e", "message": "Rename helper methods for mvn repo\n\nThis would cause conflicts with later version of Gradle."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f02fe3ea6ac75d98558395fe9cc40d37bed3b7fe", "message": "Update build tools to 24.0.2"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3faabdabbdf1459c9c8dfc1663dac25a8fd54775", "message": "Update Android Gradle plug-in to 2.1.3"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2b1fad2ce55f4a303e99504d23ac9f8a4b6c4eb0", "message": "Update Android Gradle plug-in to 2.1.2"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c6397ac797b802d538dec2e0f0a9aca9a33dfcc2", "message": "Update Gradle wrapper to 2.14.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/1e1d17ad5882a802594191fd1051ecd79d80e64c", "message": "Update Android Gradle plug-in to 1.5.0"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a1f1fd6c560f044a35659bd7a6a23c06378fe835", "message": "Update Gradle wrapper to 2.9"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/b426583e45fa74f3f9c3e38e0cda4880cc314f17", "message": "Add platform-tools to .travis.yml components"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/da4314be8e36aa5b9a2dbad2e1b4d0980b536154", "message": "Update Android Gradle plug-in to 1.3.1"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/5eb898c811de4c89eb60ad15e6106f6d24dd4f6c", "message": "Update Gradle wrapper to 2.8"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "naturalwarren": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/d0afaad82235b5b5121dee1c08f0badf8033e5f8", "message": "Place nullable after private."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/68709f14486b26dfc0259fcaa44d199de2ed6000", "message": "Add @Nullable to constructor and field."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/59791f8f97f98afa106e63d6e9bc7e51a8211a61", "message": "Null check Interceptor.Chain.connection()."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zsmb13": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/bdc227f83e5672e115deb4a1e91a3f5a4fb03060", "message": "Fixed a typo in the websocket flow diagram\n\nObvious typo, a misspelled function name."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "schrnz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/c569664ebcd20a896e6e2d10cb22567fa7541377", "message": "Fixed anchor formatting + issue link\n\nThe anchor formatting was broken, now fixed. \r\nThe syntax of the linked issue does not seem to work, hence replaced by actual link."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "misakuo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/140d95dfdd107bd4996048cc3ba5adfeca257e2e", "message": "fix the missing notification on ws handshake response"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "emilsjolander": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/10fe52e24340cbdb29fdaa65b21f507455f9a87a", "message": "Fix crash when stylesheet text is empty\n\nWhen deleting the value of a style property chrome sends back an empty string instead of a key with an empty value."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e35e48396aefa0f16fd5f93cbf7d016bc9669f06", "message": "Allow hitting empty viewgroups\n\nThis was implemented previously to get around an issue with overlays.\nThis was wrong and should be implemented by making overlays\nnon-focusable instead."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e6ee51d9cd3bddcbe23cda1133e5a28aad4275e2", "message": "Some fixes to recent hit test improvements\n\n1. Tell chrome to inspect the clicked element, not the view which is\nhighlighted.\n\n2. Find child to return back to front to respect z ordering.\n\n3. Disregard hidden views and views which are not focusable."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/5adb74be99af07854e100c3005b3acc20d71af5b", "message": "Enable hit testing for non-view elements\n\nThis commit enabled hit testing for non-view elements by moving the\nlogic from stetho into the descriptors themselves. This allows non-view\ndescriptors to perform hit testing with their own logic."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/8f071b571d97d151ecfacb718b415eb021f5b54e", "message": "Fix logical error in null check."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e4fa468e2c6a33decc8e0979cea00f839e7bae07", "message": "Add support for editable style properties\n\nThis commit adds support for editable style properties based on rule\nname (previously called selector). Previously properties had to be\nimplemented as attributes to be able to be edited."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/327621fd75efaa2555bd145456452d0d9c97e4ca", "message": "Use empty rect if bounds are null, avoiding NPE"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/0b4ddfafb88ed718296141e20cb6d6c919d65112", "message": "Fix typo for DOM.attributeModified"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a8c91f351c1d420be8c775a0d69a80888016292c", "message": "Move selector naming to the descriptor\n\nCurrently two selector names are hard-coded in DOM.java.\n\"<this_element>\" and \"Accessibility Properties\". With this commit\ndescriptors are able to themselves choose what the selector name should\nbe and how their various properties should be distributed among the\nselectors.\n\nThis enables an element to have styles such as:\n\nlayout {\n  width: 100px;\n  height: 100px;\n}\n\nprops {\n  text: \"Hello World\";\n}\n\nDue to this requiring an added property in StyleAccumulator I chose to\nalso take this commit to split up styles from computed styles which are\ntwo separate concepts but up until now have been handled the same. A\nstyle may be `width: 100%` while a computed style would be `width:\n320px`."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e39bc37686ee77ac6b49773ddd0d255474b7d663", "message": "Make HighlightableDescriptor public"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/74bdb78b25c44fe1347b5d02cd94ce209a431c95", "message": "Add ability to register custom descriptors\n\nThis commit introduces the notion of a DescriptorProvider. A\nDescriptorProvider is an object which given a DescriptorMap will\nregister a number of Descriptors. A list of DescriptorProviders can be\npassed to the AndroidDocumentProviderFactory to add or override\ndescriptors for class of your choosing. This functionality enables\napplications and libraries to add their own descriptors while relying\non Stetho defaults for all other settings."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2dc6ed18c735529c415865a5c3bed45c666f7571", "message": "Add ability to highlight sub-bounds of view\n\nA descriptor may not map directly to a View. For example if a\nDescriptor was created for a Drawable it may occupy only a partial\nspace in the View. This diff solves this problem for descriptor\nhighlighting by extending HighlightableDescriptor with a method for\nreturning the bounds to highlight. Returning null will highlight the\nfull bounds of the View."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/51dc9f13274706bdf0afd67c1f000ef615987561", "message": "Make NodeDescriptor, Descriptor, and HighlightableDescriptor generic\n\nPreviously only AbstractChainedDescriptor was generic. Anyone extending\ndirectly from Descriptor or implementing HighlightableDescriptor had to\nmake sure to add casts from Object to their concrete type. This diff\nsolves that by making all descriptors generic."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ypresto": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/29a43f5db93f84112605356fb5e6317f36a825fd", "message": "Introduce nextRequestId() method to ensure its uniqueness"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "duanbouber": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/a61af2ad145f95c1228609e9380b8449d5274efc", "message": "Fixes rss url; otherwise it gets 302 status code and shows a blank list."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "viviwen123": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/c45f23663ead0043daaccb179ecd4adb88cd7c75", "message": "fix TextViewDescriptor npe"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dezfx": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/c724425ca5c9052e74aa067be6ca73680d5ebc6c", "message": "stetho_open.py should respect ANDROID_ADB_SERVER_PORT (#456)\n\nstetho_open.py should respect ANDROID_ADB_SERVER_PORT"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kikuchy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/4dbdb73ce86190c936946c3d6ae21ea02e523fbd", "message": "Update Okhttp3 to 3.4.2"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "matthewmichihara": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/6de822ef6945901a62eeca51ef6efb845eac19dd", "message": "markdown fix"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mirhoseini": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/11436575748424479097adafbf320be1d204c1ba", "message": "Updated timber version to 4.1.2"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jferlisi": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/96d87792bd6b361c03ebf6cf33916e5eacb11eba", "message": "When opening a database the DatabaseFileProvider is checked first then we fallback to the context.getDatabasePath() call."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c777bd6feaf58e1a38e1ae983ef18aeaae37956c", "message": "Fixed a couple of memory leaks.\n\n1. The map in ViewGroupDescriptor now stores WeakReference<Object> as a value instead of Object directly. Since views were stored there directly that could cause activities to be leaked through the context of the view.\n2. The highlight view field is now nulled out when the highlighting is cleared."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78648795", "body": "> I'm curious for your thoughts at a high level on the API for configuring modules.\n\nI'm still playing around with things so I haven't given it a lot of thought. Right now what I have done is copied the list of modules from the defaults and add each of them individually.\n\n``` java\nArrayList<ChromeDevtoolsDomain> modules = new ArrayList<ChromeDevtoolsDomain>();\nmodules.add(new Console());\nmodules.add(new CSS());\n...\nif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {\n  modules.add(new Database(context, myDatabaseFilesProvider));\n}\nreturn modules;\n```\n\nI do like your proposed method though.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78648795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79073631", "body": "Do you happen to have an Intellij code style file published anywhere?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79073631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79081377", "body": "@jasta Pushed changes.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79081377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79088550", "body": "@jasta Done, thanks for the help on this.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79088550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26337695", "body": "Will do.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26337695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26337839", "body": "I'm not typically a fan of hiding the default logic that way, but my sense of preserving the API won the battle.\n\nI'll create a default implementation and deprecate existing constructor.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26337839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26337898", "body": "I'll change the name.\n\nDo you mean move the parameter `Context context` to it's own line?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26337898/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26338057", "body": "Changing it to a `List` should mean that the test can pretty much go back to what it was. Are you OK with the parameter on `tidyDatabaseList` changing from an array to a list?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26338057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26396565", "body": "Certainly not anymore. I'll remove it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26396565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26396681", "body": "I'll drop the null support. Originally the `DatabaseFilesProvider` was optional and added to the `context.databaseList()`. I forgot to remove the comments once that interface became the only thing providing the file names.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26396681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26397137", "body": "> style: new line\n\nI'm not sure where you want to the new line.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26397137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26397791", "body": "It is gone.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26397791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "frett": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/f11aa878c1951aa02e4a74d1a9cd2b5e029019bb", "message": "wire database connection provider into builder"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e2d9a92f5cef617d191b7cc40df37cae755ad6bb", "message": "create a new constructor that takes a custom DatabaseConnectionProvider"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/21aaf8e2660bbca6aaea8d0ca95a78779fdc70ac", "message": "extract openDatabase logic into external interface/object"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9f3eda725e8b2a92888e84fd50147cce74d0efd3", "message": "add default proguard rules for stetho-rhino"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/39e9330ae527f568b4cba1b3792b7421eb128048", "message": "bundle default proguard rules with stetho aar"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "swankjesse": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/07174ecfa7b0b51e063c10969a6a871db53e7529", "message": "Add OkHttp 3 integration, Deprecate OkHttp 2 integration."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "colriot": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/ac80b3965be3e33cb48d53a3acf958b3d90c4b63", "message": "Display logs with ASSERT level as ERROR messages in Chrome console."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "potyl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/714d8f7e46444a8e0bf019a199017285d0a51b4f", "message": "Unit tests for stetho-js-rhino are now using jUnit4 (ditching Robolectric)\n\nTurns out that in the pull request \"Js tweaks #286\" it was mentioned that\nthe unit tests where using Robolectric for no reason.\n\nSomehow the patch with the unit tests fix wasn't merged."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9fcb50a897530412676d8beaa350a3344003cc14", "message": "Support for serialization of NaN, Inifity and -Infinity\n\nJSON has no support for NaN, Inifity and -Infinity but we can serialize them as\n\"NaN\", \"Inifity\" and \"-Infinity\" and chrome's console will be just fine.\n\nWithout this patch stetho will crash violently when these values are serialized\nback."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/1dd6942e0b936c0df628ee7704e78478375c7814", "message": "Save the last evalutate expression to $_ (as google chrome does)\n\nSee the documentation for $_ in Google Chrome - command line API reference [1].\n\n[1] https://developer.chrome.com/devtools/docs/commandline-api#_"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/22c1a583154769f63a9b0f2ecaf9dea977c1cfad", "message": "Don't evaluate twice a field's value when serializing java to JSON in ObjectMapper"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3c334e44d63d1409995f13a7efacdccecb2c5ee7", "message": "Improved JSConsole when handling \"%d\" with a float as argument\n\nIn JavaScript every number is a floating point number, even ints! This causes\nconsole.log(\"%d\", 42) to fail because the initial implemenation was using\nString.format() and it can't handle a floating point with %d.\n\nWe now have a custom formatter that mimics what google chrome does (with a few\nimprovemnts).\n\nThis patch also adds unit tests to the project stetho-js-rhino."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/47204f59d885ad0c35fd77333a74dae06d4230ff", "message": "JsConsole no longer references its JavasSript prototype\n\nTurns out that we never use the prototype so we don't need to keep it\nlying around.\n\nWe can also remove the public constructor since it will be empty and java\ndoes provide one by default."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3c59548db4e0345ae8ee13137c5ab65a259060e7", "message": "Fix a bug in Android M where the JsConsole is not being accessible\n\nIn Android M (Marshmallow 6 Preview) there's a problem instanciating the `console`\nobject.\n\nUsers will see the following error:\n\n  Failed to setup javascript console\n  com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder$StethoJsException: Failed to setup javascript console\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.importConsole(JsRuntimeReplFactoryBuilder.java:214)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.initJsScope(JsRuntimeReplFactoryBuilder.java:170)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.initJsScope(JsRuntimeReplFactoryBuilder.java:153)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.access$000(JsRuntimeReplFactoryBuilder.java:43)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder$1.newInstance(JsRuntimeReplFactoryBuilder.java:141)\n      at com.facebook.stetho.inspector.runtime.RhinoDetectingRuntimeReplFactory.newInstance(RhinoDetectingRuntimeReplFactory.java:51)\n      at com.facebook.stetho.inspector.protocol.module.Runtime$Session.getRepl(Runtime.java:271)\n      at com.facebook.stetho.inspector.protocol.module.Runtime$Session.evaluate(Runtime.java:260)\n      at com.facebook.stetho.inspector.protocol.module.Runtime.evaluate(Runtime.java:158)\n      at java.lang.reflect.Method.invoke(Native Method)\n      at com.facebook.stetho.inspector.MethodDispatcher$MethodDispatchHelper.invoke(MethodDispatcher.java:96)\n      at com.facebook.stetho.inspector.MethodDispatcher.dispatch(MethodDispatcher.java:67)\n      at com.facebook.stetho.inspector.ChromeDevtoolsServer.handleRemoteRequest(ChromeDevtoolsServer.java:129)\n      at com.facebook.stetho.inspector.ChromeDevtoolsServer.handleRemoteMessage(ChromeDevtoolsServer.java:111)\n      at com.facebook.stetho.inspector.ChromeDevtoolsServer.onMessage(ChromeDevtoolsServer.java:87)\n      at com.facebook.stetho.websocket.WebSocketSession$1.handleTextFrame(WebSocketSession.java:176)\n      at com.facebook.stetho.websocket.WebSocketSession$1.onCompleteFrame(WebSocketSession.java:136)\n      at com.facebook.stetho.websocket.ReadHandler.readLoop(ReadHandler.java:46)\n      at com.facebook.stetho.websocket.WebSocketSession.handle(WebSocketSession.java:45)\n      at com.facebook.stetho.websocket.WebSocketHandler.doUpgrade(WebSocketHandler.java:154)\n      at com.facebook.stetho.websocket.WebSocketHandler.handleSecured(WebSocketHandler.java:106)\n      at com.facebook.stetho.server.SecureHttpRequestHandler.handle(SecureHttpRequestHandler.java:52)\n      at org.apache.http.protocol.HttpService.doService(HttpService.java:248)\n      at org.apache.http.protocol.HttpService.handleRequest(HttpService.java:192)\n      at com.facebook.stetho.server.LocalSocketHttpServer$WorkerThread.run(LocalSocketHttpServer.java:233)\n  Caused by: java.lang.IllegalAccessException: java.lang.Class<com.facebook.stetho.rhino.JsConsole> is not accessible from java.lang.Class<org.mozilla.javascript.ScriptableObject>\n      at java.lang.reflect.Constructor.newInstance(Native Method)\n      at org.mozilla.javascript.ScriptableObject.buildClassCtor(ScriptableObject.java:1339)\n      at org.mozilla.javascript.ScriptableObject.defineClass(ScriptableObject.java:1279)\n      at org.mozilla.javascript.ScriptableObject.defineClass(ScriptableObject.java:1212)\n      at com.facebook.stetho.rhino.JsRuntimeReplFactoryBuilder.importConsole(JsRuntimeReplFactoryBuilder.java:210)\n      ... 24 more\n\nTurns out that with Android M we need the class JsConsole to be public."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/6d414578986ba670ce49755105a13961c09933c3", "message": "Update stetho-js-rhino's README with a more complete config snippet\n\nThe snippet shows how to plug the InspectorModulesProvider with stetho's\nWebKit inspector."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/45666054e8e4abab88ccdbf5f869cb52db317354", "message": "Document briefly the JavaScript module in the main README"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c1a30489d3fb3490276d31895c3f8f9077f18152", "message": "Add a JavaScript REPL provided by Mozilla's Rhino\n\nThis is a first draft at adding a REPL.\n\nWhat works:\n - basic JS expressions\n - evaluatied statements preserve their states (can create a variable and it will persist between successive calls)\n - return types are properly expanded by chrome's inspector\n - binding of android's Context (passed as `context`)\n - binding for classes: `System.gc()` is `Packages.java.lang.System.gc()`\n - console redirection with `console.log()`\n - `importPackage()` to import all classes under a java package\n - `importClass()` to import a single class\n - binding variables\n - binding functions\n\nFor more details see:\n - https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino/Scripting_Java\n - https://developer.mozilla.org/en-US/docs/Rhino_documentation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/18395211", "body": "Can you tell us under which circumstances loading without `Packages.` would not be  what we want?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/18395211/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/18395264", "body": "My guess is that if we try to preserve backwards compatibility with apps that might be using `Package.com.company.foo` is that we should check if `className` starts with `Package.`. If it doesn't we inject `Package.`.\n\n```\nString packageClassName = className.startsWith(\"Packages.\") ? className :  \"Packages.\" + className;\nString expression = String.format(\"importClass(%s)\", packageClassName);\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/18395264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "felipecsl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/603611a66e6b94ba1711bd908731c07be6f3d33f", "message": "Sort list afterwards"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e1a4964ee974db6df11a5a8b66870e6f4fb82020", "message": "Sort CSS properties by cssName"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3813afe30562087973c5b7c8b9593de16d31871c", "message": "Initial implementation of screencasting support"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83785104", "body": "is this merged in already?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83785104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83840191", "body": "cant wait :watch:  :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83840191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "sromku": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/18dbfc9664d3209e6394b2c709b1b9a0f9ab54a2", "message": "Refined content provider initialization based on better api."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/7a27fc7e9557c155c7103daa4a38060332ced182", "message": "Improved API to better provide DatabaseDrivers part of Stetho initialization. Refined DatabaseDriver and removed duplicated registration code."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/2e27aefa8cdab2ada1c5fd1fe407dbe20cd223dc", "message": "Merge remote-tracking branch 'upstream/master'\n\nConflicts:\n\tstetho/src/main/java/com/facebook/stetho/Stetho.java"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/44d16aa8fdf6f10a3b8c4dd0e3d114a9f1ceb3ff", "message": "Added target api annotation in content provider sample - lint error fix"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/9ddc847987fe2cf0df9c7559c5b728548c3ef8db", "message": "Cleaned redundant sample provider extension and updated to more cleaner sample"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/fe8720d09f271f54add1792f7612683e46a5a8bb", "message": "Encapsulate the content provider driver logic and provide more simple api for registering and viewing providers"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/3e93aba6f8594b0c0a84c5901b1b00fee67536d3", "message": "Sample calendar content provider extension to database domain (ticket #258)"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/f32cfb9591c3477c5d1e39a051adeeeafc770c3a", "message": "Added option to extend Database domain (ticket #258)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "VEINHORN": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/52c1d074c91bfee88d91822ecdc2180d07157c4e", "message": "Update .travis.yml"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a585920283481afc72eeb220680276669db92021", "message": "update sdk version and buildToolsVersion"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/4137f9ba7751d4dfdf702d8b6d0d17d9fa8cb548", "message": "Remove redundant modifiers from interfaces"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ichub": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/d2767ffa10ec1ead688e71a2ed9a62ccf5066d98", "message": "Added deepexport support so that margins are displayed"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/e20d0b465d91fb8eabefc07af22f77b57ac86bbb", "message": "Added the ability to inspect an element's style\n\nThis pull request adds the ability to view the style of an element that is selected in the elements tree using the same UI as what is shown in the styles tab when inspecting an element of a webpage.\n\nSome gotchas:\n\n* The names of style properties shown are not copied verbatim from the names of fields in the `View` class, but are translated to a format that Chrome understands. For example, `View` has a field called `paddingLeft`, but in order for that to be rendered correctly in Chrome, it needs to be transmitted as `padding-left`.\n\n* Default values are not transmitted, unless they are of an enum type, in which case they are *always* transmitted.\n\n* Due to inconsistencies between annotations present on certain Android SDK versions, some fields that are enums are not translated into their string representation. This is unfortunate, but the only way to get around it is by special-casing those one or two cases, which is probably not viable long-term.\n\nSome things that would be nice to add in the future:\n\n* Inferring some way the element's style 'class', so that the styles aren't all aggregated into one blob. Same with style inheritance.\n\n* In Chrome you can edit these CSS properties, but here you can't. Maybe a future project? Would probably relatively simple to add.\n\nStyle inspection of Stetho's 'Settings' button:\n\n<p align=\"center\">\n<img src=\"https://cloud.githubusercontent.com/assets/2636237/9415188/5872116c-47f2-11e5-8764-ebb2bd43bcbf.png\">\n\n<img src=\"https://cloud.githubusercontent.com/assets/2636237/9415244/ad7b3350-47f2-11e5-97de-7d84772b3021.png\">\n</p>"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/09764112b2fd0bd1b1058203efe8c24d00f5241f", "message": "Split DOM into two classes: Document and DOM\n\nDOM now handles only the communication between Chrome and Stetho, whereas Document is responsible for accessing, modifying, and maintaining information about elements on the Android side. The motivation for this change is that DOM is not the only class that needs access to information about elements - CSS also needs this information. By splitting these classes up it is possible for both DOM and CSS to be able to get and set element data."}, {"url": "https://api.github.com/repos/facebook/stetho/commits/a19c4e86924e9d92eacdf36dd9554360558008f2", "message": "Added a script for generating types and methods defined in protocol.json automatically"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mengdilin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/8dcf373c5b77d5cebe4434d58828221b8ed2c398", "message": "Add status code checking for schema download"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/38ef271e0868d90d248879db5f901ee0f5b48bba", "message": "initializing executor service for async pretty printers on first peer registered\n\naddress issue #255"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/5a6e7a7f013cd4fc679647ebc379559c20ab6a46", "message": "Update registration flow for Async Pretty Printer\n\nadd AsyncPrettyPrinterInitializer interface for populating async pretty printer's registry with pretty printers and their corresponding response header names"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/d7fae89dc6996ec0782a91fd0fe2430bf190d604", "message": "Remove TestAsyncPrettyPrinterFactory"}, {"url": "https://api.github.com/repos/facebook/stetho/commits/c21abb8f337d28169b0295afc5760ee557c0bfa8", "message": "Implement Async Pretty Printer to pretty print binary payload"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hzsweers": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/8757c9543695801023365bd8f5e8735c6129451a", "message": "Fix RequestBodyHelper body inflation"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75474125", "body": "This is awesome!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75474125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82817066", "body": "Just to chime in with an option (though it might not be the best option for the library, just tossing another idea in for inspiration).\n\nWe mark Stetho with `debugCompile`, and provided for the rest of the project. Then we have three classes:\n\n``` java\n// StethoHelper interface, AKA \"NetworkEventReporterImpl\"\npublic interface StethoHelper {\n   void init(Context context);\n\n   void configureInterceptor(OkHttpClient httpClient);\n}\n```\n\n``` java\npublic class FakeStethoHelper implements StethoHelper {\n\n    @Override\n    public void init(Context context) {\n        // Noop\n    }\n\n    @Override\n    public void configureInterceptor(OkHttpClient httpClient) {\n        // Noop\n    }\n\n}\n```\n\n``` java\npublic class RealStethoHelper implements StethoHelper {\n\n    @Override\n    public void init(Context context) {\n        Stetho.initialize(\n                Stetho.newInitializerBuilder(context)\n                        .enableDumpapp(Stetho.defaultDumperPluginsProvider(context))\n                        .enableWebKitInspector(Stetho.defaultInspectorModulesProvider(context))\n                        .build());\n    }\n\n    @Override\n    public void configureInterceptor(OkHttpClient httpClient) {\n        httpClient.networkInterceptors().add(new StethoInterceptor());\n    }\n\n}\n```\n\nWe use then these directly directly in a BuildConfig field:\n\n``` groovy\ndebug {\n    ...\n    minifyEnabled false\n    signingConfig signingConfigs.debug\n    buildConfigField 'flipboard.util.StethoHelper', 'STETHO', 'new flipboard.util.RealStethoHelper()'\n}\n\nrelease {\n    ...\n    minifyEnabled true\n    shrinkResources false\n    signingConfig signingConfigs.release\n    buildConfigField 'flipboard.util.StethoHelper', 'STETHO', 'new flipboard.util.FakeStethoHelper()'\n}\n```\n\nThis way, the packaged APK only knows about the `StethoHelper` interface, and the actual implementation used is set at compile time. Then, we can just do this in the code:\n\n``` java\n// In your application class's onCreate()\nif (BuildConfig.DEBUG) {\n    BuildConfig.STETHO.init(this);\n}\n\n// In your network stack\nif (BuildConfig.DEBUG) {\n    BuildConfig.STETHO.configureInterceptor(this.httpClient);\n}\n```\n\nYou could further abstract this in the library itself by checking if stetho is available at runtime like you suggested, but we find that this is convenient and clever solution that keeps things simple while also allowing the flexibility to easily enable it in other buildTypes\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82817066/reactions", "total_count": 16, "+1": 11, "-1": 0, "laugh": 0, "hooray": 4, "confused": 0, "heart": 1}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82923200", "body": "You don't, more of just an extra precaution :P. We have other things in\nthat block too, just seemed sensible to keep it there.\nOn Wed, Mar 18, 2015 at 4:40 AM Igor Ganapolsky notifications@github.com\nwrote:\n\n> Why do you need if (BuildConfig.DEBUG) {... if you are specifying a\n> _debug_ buildType in Gradle anyway??\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/facebook/stetho/issues/16#issuecomment-82922194.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82923200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82925996", "body": "The stetho sample code doesn't configure any buildTypes. This implicitly results in using the default \"debug\" buildType, which in turn implicitly enables the `debuggable` flag.\n\nIf you create a new buildType (say, `release`) and built that instead without setting the debug flag (or setting it to `false` to be sure), it will not work.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82925996/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83211755", "body": "Are you sure that's it? We have this in our proguard, and it's not enough for us:\n\n```\n-keep class com.facebook.stetho.** { *; }\n```\n\nUnless just \"keep\" doesn't implicitly keep names?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83211755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83241815", "body": "Huh, now that I try some more it seems to work fine. I'm wondering if maybe we still had the calls wrapped in an `if (BuildConfig.DEBUG)` call when we checked before...\n\nAnyway, thanks for the help!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83241815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88448872", "body": "Sorry for the delay. I don't see anything in logcat or console from stetho. I've attached a couple of screenshots below (host is removed since it's internal)\n\n![screenshot 2015-04-01 04 44 51](https://cloud.githubusercontent.com/assets/1361086/6940266/f422e4d0-d829-11e4-8bf6-ab70e6a56a08.png)\n\n---\n\n![screenshot 2015-04-01 04 42 35](https://cloud.githubusercontent.com/assets/1361086/6940267/f92c952a-d829-11e4-93da-3f4b580e2097.png)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88448872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dougsparling": {"issues": [], "commits": [{"url": "https://api.github.com/repos/facebook/stetho/commits/322c86eb60511b40f03e28bbdb61daf8c762f4ba", "message": "Add support for EXPLAIN queries run via Web SQL console."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thebehera": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/564", "title": "CheckCharset on PostData to prevent hanging or crashing", "body": "This should resolve the error around: https://github.com/facebook/stetho/issues/329\r\nUse CharsetDecoder to decode the byte[]. if it reports an error, bail out and report to the chrome inspector that `Charset in POST/PUT is not UTF-8. Data (length:X) cannot be represented as a string.`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dcolascione": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74345783", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74345783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87339114", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87339114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87339814", "body": "It wouldn't hurt to link to the clowny AOSP code.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87339814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "facebook-github-bot": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74932264", "body": "Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74932264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74941753", "body": "Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74941753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74942352", "body": "Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74942352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74945448", "body": "Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74945448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82517509", "body": "Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82517509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82525828", "body": "Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82525828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "paulirish": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933177", "body": "In terms of vocabulary: \n- Chrome DevTools - name of the total product\n- (Chrome) DevTools frontend - the webapp that provides the UI\n- [Chrome Debugger Protocol](https://developer.chrome.com/devtools/docs/debugger-protocol) - well, you know.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933247", "body": "> I'll leave this task open since its covering a major API. \n\nyeah seems good. Can I open a PR to update the readme?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74933247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74952232", "body": "@jasta yeah i'll jump in over at #13. Technically this is unrelated to the fork. :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74952232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74967891", "body": "The full protocol is available here: https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/devtools/protocol.json&q=protocol.json&sq=package:chromium&type=cs\n\nIt looks like `Network.requestWillBeSent`'s `type` is still optional, but it's possible the UI makes some assumptions on its presence. That'd be a bug. We could either rev protocol or address the frontend's dependence on the `type` attribute. We'd welcome a contribution from ya'll for the latter.\n\nLooking at the `Network.loadingFailed` `type` it does appear that's non-optional, and that's undocumented in 1.1. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74967891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75074379", "body": "> We've been using entirely the wrong protocol.json all this time :)\n\nHah. :) Does https://github.com/facebook/stetho/pull/34 sort you out then?\n\nI've recently updated this documentation too, btw. https://developer.chrome.com/devtools/docs/debugger-protocol\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75074379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75893855", "body": "Yup. Looks like a legit bug. Seems to be in our handler for obtaining favicons. It works through the chrome.debugger API but not when serviced over ADB\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75893855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79517013", "body": "Seems like a good bug. Can you file a new one?\nOn Mar 13, 2015 2:44 PM, \"Josh Guilfoyle\" notifications@github.com wrote:\n\n> @paulirish https://github.com/paulirish any chance you have some\n> context on this? In particular, with:\n> https://code.google.com/p/chromium/issues/detail?id=277984#c34?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/facebook/stetho/issues/92#issuecomment-79442606.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79517013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "JakeWharton": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74941902", "body": "@facebook-github-bot done brah\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74941902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75679958", "body": "You shouldn't use wildcard dependencies for anything. Just declare a dep on 2.2.0. If someone depends on 2.3.0 every dependency resolver (Gradle, Ivy, Aether) knows what to do.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75679958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75680007", "body": "Or, optionally, use a `provided` dep which is exactly what you described.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75680007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75872863", "body": "LGTM :+1: :shipit:\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75872863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24937472", "body": "Star imports?!@? C'mon...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/24937472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25304764", "body": "Can be removed\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25304764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "caoxuwen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74949932", "body": "just using the JAR\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74949932/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74952511", "body": "awesome, thanks\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74952511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74954286", "body": "yes it works now\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/74954286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "adnan-SM": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75010734", "body": "Same issue here with Gradle. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75010734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fingertricks": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75020493", "body": "You need to pass the client (with interceptors) into the RestAdapter Builder:\nsetClient(new OkClient(okHttpClient))\nshould read:\nsetClient(client)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75020493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hegazy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75026978", "body": "The issue of the same package appearing twice is also happening with me and I'm sure that I'm using only one process, but when I use the `-p` option it works just fine.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75026978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "antonkrasov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75033660", "body": "@fingertricks, that's exactly how it works. I just use dagger, so client just returned from @Provides method. And Injects as okHttpClient. \nI can't use setClient(client), as Retrofit requires OkClient, inside it I can pass my custom OkHttpClient.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75033660/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75107737", "body": "@jasta wow, thanks! I really forgot to update Retrofit, updated OkHttp to 2.2.0, but continue using Retrofit 1.7.0\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75107737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75110148", "body": "@Tremelune, seems like I need to reopen then.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75110148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75116721", "body": "Updating Retrofit to 1.9.0 didn't help, trying to add logging interceptor.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75116721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75117834", "body": "@jasta LoggingInterceptor from https://github.com/square/okhttp/wiki/Interceptors works fine for me. But Network tab still doesn't show anything.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75117834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75118202", "body": "I see:\n\n```\n00000000: 00000002 00000000 00010000 0001 01 745200 @stetho_com_<MY_PACKAGE>_devtools_remote\n00000000: 00000002 00000000 00000000 0001 03 759612 @stetho_com_<MY_PACKAGE>_devtools_remote\n00000000: 00000002 00000000 00000000 0001 03 759608 @stetho_com_<MY_PACKAGE>_devtools_remote\n```\n\nVery weird, can you suggest something?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75118202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75120302", "body": "Ok, so after `adb shell run-as com.mypackage kill pid` all works fine. But after couple of reinstalls the app, and one uninstall then install I see multiple processes again.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75120302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75123500", "body": "@jasta cloning your demo app :) will check it now\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75123500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75123954", "body": "@jasta yeah, your demo app works for me. Hmm, let me compare with my project and try to find the reason.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75123954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75126275", "body": "@jasta Wooohoo, thank you :) I found the issue, and it's quite simple: **Proguard**.\n\nI fixed this for my project by adding:\n\n```\n-keep class com.facebook.stetho.**{ *; }\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75126275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75127509", "body": "I see, nice :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75127509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "kevelbreh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75057927", "body": "I did a dirty hack to get logging functionality (i used Timber by Jake Wharton).\n\nIt appears that extending Console was a problem.  I can only assume that the classname is being used to hookup the class and methods to chrome's handles.  I recommend perhaps using a class annotation to allow for multiple handlers for each of chromes handles.\n\nHere is a little hack example in case anyone else runs into this: [StethoTree](https://gist.github.com/kevelbreh/e93c09c6b5af3339a3cb)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75057927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Tremelune": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75093770", "body": "The Interceptors he is using were not available in Retrofit 1.8.\n\nI'm having the same issue. In the logs I see:\n\nW/System.err\ufe55 java.io.IOException: Address already in use\nW/System.err\ufe55 at android.net.LocalSocketImpl.bindLocal(Native Method)\nW/System.err\ufe55 at android.net.LocalSocketImpl.bind(LocalSocketImpl.java:303)\nW/System.err\ufe55 at android.net.LocalServerSocket.<init>(LocalServerSocket.java:52)\nW/System.err\ufe55 at com.facebook.stetho.server.LocalSocketHttpServer.bindToSocket(LocalSocketHttpServer.java:278)\nW/System.err\ufe55 at com.facebook.stetho.server.LocalSocketHttpServer.listenOnAddress(LocalSocketHttpServer.java:138)\nW/System.err\ufe55 at com.facebook.stetho.server.LocalSocketHttpServer.run(LocalSocketHttpServer.java:134)\nW/System.err\ufe55 at com.facebook.stetho.Stetho$1.run(Stetho.java:80)\nE/stetho\ufe55 Could not bind to socket.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75093770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75108022", "body": "Same issue, with OkHttp 2.2.0 and Retrofit 1.9.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75108022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75115363", "body": "Yup, I'll see what I can do. I'm hoping for the ol' \"clean build\" fix...\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75115363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "clemp6r": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75111880", "body": "You have to add the following in the android section of your build.gradle:\n\n```\ncompileOptions {\n    sourceCompatibility JavaVersion.VERSION_1_7\n    targetCompatibility JavaVersion.VERSION_1_7\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75111880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bryanstern": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75112702", "body": "@jasta Thanks for suggestion. I ended up just implementing Volley's `HttpStack` interface and performing the request directly with OkHttp, doing away with `okhttp-urlconnection`. Once I feel more confident in the code, I'll post that gist up for those interested.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75112702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75281447", "body": "Here is the gist, just set the network interceptor on the OkHttpClient you pass in. https://gist.github.com/bryanstern/4e8f1cb5a8e14c202750\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75281447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75307197", "body": "How about having Stetho implement a `SharedPreferences#OnSharedPreferenceChangeListener` instead of inspecting the file directly? This would be handy if you implement your own SharedPreferences and do things like encryption or compression.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75307197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "friedger": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75138606", "body": "My preferred way to use stetho is to only have it in debug flavour src folders\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75138606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "eleventigers": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75221358", "body": "It seems that you can not have a debugger attached at the same time as having devtools open hence \"Address already in use\" error.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75221358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75377201", "body": "I would suggest excluding okhttp from stetho-okhttp dependency, worked for me:\n\n``` groovy\ncompile ('com.facebook.stetho:stetho-okhttp:1.0.0') {\n        exclude group: 'com.squareup.okhttp'\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75377201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "briangriffey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75262421", "body": "Extending HurlStack might be possible. That private static entityFromConnection might prove painful when trying to read the inputstream. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75262421/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75308526", "body": "Yea, I just think this is the only connection agnostic method to integrating with volley. Still allows you to use OkHttp or UrlConnection or HttpClient under the hood. This sits on the layer right above that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75308526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85690200", "body": "Sorry, end of the quarter is happening. I'll circle back to this beginning of April.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/85690200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "goncalossilva": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75291105", "body": "Yes, please!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75291105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "b95505017": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75324256", "body": "I found that it is causing by other issue, I filled another one #57 .\nSorry.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75324256/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75324742", "body": "I changed StethoInterceptor code these lines, then those responses appear into network tab successfully.\n\n``` java\ntry {\n    response = chain.proceed(request);\n    if (response.body().contentType() == null) {\n        response = response.newBuilder().header(\"Content-Type\", \"text/html\").build();\n    }\n} catch (IOException e) {\n    if (mEventReporter.isEnabled()) {\n        mEventReporter.httpExchangeFailed(requestId, e.toString());\n    }\n    throw e;\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75324742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75326605", "body": "Thanks, looking forward to the next release!\nGreat library!\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75326605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75692313", "body": "Thanks! May I ask when could we get this on Maven?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75692313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75713145", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75713145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bbade": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75331627", "body": "Yeah, as soon as I comment out that lib in my gradle file, it works again. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75331627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "eikaramba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75415530", "body": "sry for late answer. Actually on my very first try, nothing worked and the error was shown. However, when i tested it again it now works and the error is gone.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75415530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fdonzello": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75431399", "body": "It's working now. I don't know what was going wrong before since the database was already created when the app was launched and show in the inspector.\n\nThanks anyway\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75431399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "TigranSarkisian": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75963716", "body": "with stetho-sample inspection show correct data, the problem seems to be on my side, thank you, issue closed\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/75963716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vandyshev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76181287", "body": "``` java\nW/System.err\ufe55 java.io.IOException: Address already in use\nW/System.err\ufe55 at android.net.LocalSocketImpl.bindLocal(Native Method)\nW/System.err\ufe55 at android.net.LocalSocketImpl.bind(LocalSocketImpl.java:254)\nW/System.err\ufe55 at android.net.LocalServerSocket.<init>(LocalServerSocket.java:52)\nW/System.err\ufe55 at com.facebook.stetho.server.LocalSocketHttpServer.bindToSocket(LocalSocketHttpServer.java:278)\nW/System.err\ufe55 at com.facebook.stetho.server.LocalSocketHttpServer.listenOnAddress(LocalSocketHttpServer.java:138)\nW/System.err\ufe55 at com.facebook.stetho.server.LocalSocketHttpServer.run(LocalSocketHttpServer.java:134)\nW/System.err\ufe55 at com.facebook.stetho.Stetho$1.run(Stetho.java:80)\n```\n\nJust run https://github.com/jasta/retrofit-okhttp-stetho-demo\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76181287/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "brennantaylor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76886987", "body": "Maybe the issue is just that ANDROID_SERIAL isn't documented.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76886987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77310940", "body": "It is pretty lightweight for the project to create a Shim that is a no-op for release builds if that is what the consumer desires. Is it really worth including this work in the debug tool when there are multiple ways for the consumer to isolate itself?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77310940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87130292", "body": "Much of the data in the iml files should be inferred from the gradle model. I don't think it is appropriate to commit those files to source.\n\nAlso why commit a file that tells intellij that the files are under git version control? It will infer that immediately at startup.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87130292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87130633", "body": "Specifically these files look redundant.\n\nThe project `.iml` files also store USER configuration. Like what `buildType` the ui has selected.\n\n``` text\n.idea/.name\n.idea/compiler.xml\n.idea/encodings.xml\n.idea/gradle.xml\n.idea/modules.xml\n.idea/scopes/scope_settings.xml\n.idea/vcs.xml\nstetho-okhttp/stetho-okhttp.iml\nstetho-parent.iml\nstetho-urlconnection/stetho-urlconnection.iml\nstetho.iml\nstetho/stetho.iml\n```\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87130633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87131322", "body": "@jasta Hmmm. In our project we just have the devs install the codestyle manually. There were bugs in AndroidStudio back in the preview days that forced us to do this. It may be easier now. I can look into it.\n\n[edit] We would \"export\" the codestyle and make the devs import it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87131322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87132651", "body": "Based on this doc `.idea/codeStyleSettings.xml` should just work\n\nhttps://intellij-support.jetbrains.com/entries/23393067\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87132651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jhuska": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76912023", "body": "Thanks for your insight. I have not realized that `ANDROID_SERIAL=foo` would be sufficient in automation. That would be sufficient for me.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/76912023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "DongHyunKo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77105166", "body": "Opps. I just make a mistake. \nthank for your response.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77105166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "semenoh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77413585", "body": "In my case it does not show database if .db file is on sd-card (`/mnt/sdcard/`)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77413585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "Tolriq": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77447968", "body": "Well the sample does work and I've seen the known issue :)\n\nBut the problem is that it does never work my application, no welcome message, error message in red and nothing available at all (databases and everything is up before inspect of course)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77447968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77460412", "body": "Well my english is really bad :(\n\nSo yes the sample works perfectly (everything).\n\nOn my application it does not work when connecting I have an error message in Chrome :\n\n```\nNot implemented: Profiler.setSamplingInterval\n```\n\nInstead of the welcome banner.\n\nBut on the application logcat I have all correct messages with onConnect the messages about not implemented that does not matter (but I did know that) and I have the disconnect messages too when I close the chrome inspect window.\n\nSo no error message, from the logs server is started and talks but nothing in it.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77460412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77462133", "body": "![image](https://cloud.githubusercontent.com/assets/932609/6515620/a1ce7c88-c38b-11e4-896c-b6f512bfcf6c.png)\n\nClicking the inspect of sample open a new window that works.\n\nClicking the inspect of Yatse open this empty one.\n\n![image](https://cloud.githubusercontent.com/assets/932609/6515653/ef065bd8-c38b-11e4-8a07-3e86bb6705e7.png)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77462133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77464334", "body": "Well I do have not thousand of times but I'll try to find time to help on that, as having direct access to preferences and databases quickly and without root will make me win lot's of time.\n\nI'll try to gather the traces and upload the pcap file tomorrow, it's 11PM here :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77464334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77523954", "body": "Here's the captures : \n\nhttp://yatse.leetzone.org/Images/stetho-notworking.pcap\nhttp://yatse.leetzone.org/Images/stetho-working.pcap\n\nThey are filtered on websocket and http.\n\nFor the record Windows wireshark does not support loopback needs RawCap as external tool.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77523954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77741687", "body": "Nothing in logcat at all :(\n\nHere's the stack traces after clicking inspect on yatse that do not work: http://yatse.leetzone.org/Images/stetho-traces.txt\n\nAnd here the same stack from sample that work : \nhttp://yatse.leetzone.org/Images/stetho-traces-sample.txt\n\nThey look pretty same to me.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/77741687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78014589", "body": "Arf yes totally forget that :( I use proguard in debug due to dex limits.\n\nThere's no renaming or optimizations but I guess you use some reflection and proguard removes some needed things.\n\nFixed with : `-keep class com.facebook.stetho.** {*;}`\n\nMaybe there's better way by just forcing keep only for what extends ChromeDevtoolsDomain but I'm not a proguard expert to go this deep and it does not really matter since it's only for debug anyway.\n\nThanks for the help and maybe worth adding a line somewhere about that.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78014589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78097463", "body": "Thanks but it does trigger more problems than solutions :) Only more or less solid with native one on android 5.X but my dev process includes work on older devices due to so many .... bugs.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78097463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78097726", "body": "Since not sure it does need a new issue, but is it normal that delete or update queries does not return anything like a confirmation message ?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78097726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78105859", "body": "Ok I'll open a new one.\n\nAnd for pre L yes it's supported but not really for production and real life that why I talked about more problems than solutions.\n\nhttps://developer.android.com/tools/building/multidex.html#limitations\n\nMy app was touched by the last 3 ones, and now that I target 14 only the last 2 ones, but too much hassles currently.\n\nI'll get there when I target API 16 and most animations and rendering problems are out of my way :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78105859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78126776", "body": "If no one look into that before I have time, I'll try :)\n\nBut I must admit I'm in the middle of a big rewrite and try to gain time with tools, so hard to find time soon to learn new product to contribute.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78126776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78151958", "body": "No hurry the tool is already wonderful right now and make me win lot's of time for tests and debug.\n\nSo I can check that when I have time after the database / sync rewrite :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78151958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78153582", "body": "Well this sounds more complex indeed and in the end is not error prone due to concurrency issues :(\n\nI suppose locks would prevents database corruption and just throws errors in Stetho.\n\nMaybe for applications that needs to keep database opens add a callback in the instance builder to ask the application for the SQLiteConnection or whatever Stetho needs on target database ?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78153582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78869692", "body": "Seems my answer on original post was lost or I forget to push the button:(\n\nWhy don't you just check for no colums or count -1 in resulting cursor ? (if cursor null then it's an error)\nSince the first query should be run asynchronous there's no problem starting another one after in this thread.\n\nIf no column then start new simple query 'select changes(), last_insert_rowid()' and return a MaxtrixCursor with 1 line / 1 row containing the data. (Can handle one last case when no change no row id for create database for example).\n\nThis sounds cleaner and can handle more things like create XXX, drop, ... \nEven if less used those commands are used and should return something too.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78869692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79108153", "body": "A select without rows have the columns filled, so does not trigger this.\n\nFrom the other problem about database mode change, I suppose that the database is opened / closed on each query / access.\n\nSo changes and last insert are the values corresponding to previous query so rule would be in order :\n- Cursor is null : Error\n- Cursor have colums : return cursor\n- Cursor have no colums : Do a \"select changes(), last_insert_rowid()\"\n- If last insert  != 0 then return matrixCursor lastinsert and the id\n- If changes != 0 then return matrixCursor affectedRows and the count\n- If nothing then it's another command and since cursor is not null return a matrixCursor result and true.\n\nThis covers all cases and is simple to follow and maintain.\n\nOf course this does not work if open / close assumption is wrong.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79108153/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79140520", "body": "They return 0 if no query have made changes or insert, that why my previous post talked about != 0 to handle all known cases.\n\nAnd yes that why I suggested using MatrixCursor that are valid cursors so will be correctly handled by Stetho and Inspector UI.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/79140520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "fourlastor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78391004", "body": "You're right, plugged in a Nexus 5 and I managed to find the culprit (with Stetho :) ).\nI already proposed something like thumbor to reduce the image size as requested but currently it has low priority.\n\nJust crashing like this isn't very clear tho, maybe something like logging an error if the content lenght is over a certain value (1MB should be good enough), without actually downloading it?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/78391004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82388128", "body": "@jasta good for `ChromeDevToolsServer` and `NetworkEventReporterImpl`.\n\nI'm not sure on what to do with `Network`, is there a standard way to communicate the failure with chrome dev tools? I guess throwing a `JsonRpcException` would do the trick but I'm not sure.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82388128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83123702", "body": "Great, done. Thank you a lot for being so patient and guiding me through it :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83123702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83761833", "body": "It might help to change the script entry in the travis config to `./gradlew test --continue`.\nThis runs the unit tests and it worked for my company to have CI on Travis and the last gradle plugin.\n\nMore info here: http://tools.android.com/tech-docs/unit-testing-support\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83761833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83940851", "body": "What I'm saying is that you don't need to run the `connectedCheck` task to run the tests: stetho has only unit tests so the `test` task will do just fine.\n\nThe only test that doesn't pass is `ObjectMapperTest#testNestedProperty` because the `JSONObject#toString` method returns the keys in a different order, but the problem there is asserting equality on `JSONObject`s with the toString method.\n\nAll the suite of test (14 in the stetho project, 2 in the stetho-okhttp project) passed for me with this setup:\n- Upgrade gradle plugin to 1.1.0\n- Remove `'com.github.jcandksolutions.gradle:android-unit-test:2.1.1'` from the main build.gradle\n- Remove `apply plugin: 'android-unit-test'` from the projects build.gradle\n\nFor the `JSONObject#toString` problem I suggest using an assertion library meant for it (such as https://github.com/skyscreamer/JSONassert).\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/83940851/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/84063827", "body": "It might be that it's not working on _my_ machine, due to the JDK I'm using or whatever.\n\nIt's not my changes :P I'm not the PR author.\n\nI would suggest to split this in 2 separate PR tho:\n- unit test plugin removal (and bump of the Gradle plugin version to 1.1.x), which works and it's great to have\n- bump of build tools to 22\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/84063827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26446453", "body": "True, but I noticed that this is not always the case.\nFor example, to work on this, I was using the Stetho sample:\n- Use Picasso to download an oversized image (I used http://upload.wikimedia.org/wikipedia/commons/2/24/Willaerts_Adam_The_Embarkation_of_the_Elector_Palantine_Oil_Canvas-huge.jpg), so it won't fail due to the image size in the ImageView, only for the network request.\n- Use OkHttpClient with network interceptors to intercept Picasso's network request.\n\nThis is the code in `APODPostsAdapter#bindView`\n\n``` java\n      OkHttpClient okclient = new OkHttpClient();\n      okclient.networkInterceptors().add(new StethoInterceptor());\n\n      Picasso picasso = new Picasso.Builder(APODActivity.this)\n        .downloader(new OkHttpDownloader(okclient))\n        .build();\n\n      picasso.load(\"http://upload.wikimedia.org/wikipedia/commons/2/24/Willaerts_Adam_The_Embarkation_of_the_Elector_Palantine_Oil_Canvas-huge.jpg?\" + cursor.getPosition())\n          .fit()\n          .centerCrop()\n          .into(holder.image);\n```\n\nAfter doing that, this is the stack trace:\n\n```\n03-15 11:11:59.140    6755-7032/com.facebook.stetho.sample E/AndroidRuntime\ufe55 FATAL EXCEPTION: StethoWorker12\n    Process: com.facebook.stetho.sample, PID: 6755\n    java.lang.OutOfMemoryError\n            at java.lang.AbstractStringBuilder.enlargeBuffer(AbstractStringBuilder.java:94)\n            at java.lang.AbstractStringBuilder.append0(AbstractStringBuilder.java:132)\n            at java.lang.StringBuilder.append(StringBuilder.java:124)\n            at org.json.JSONStringer.string(JSONStringer.java:344)\n            at org.json.JSONStringer.value(JSONStringer.java:252)\n            at org.json.JSONObject.writeTo(JSONObject.java:672)\n            at org.json.JSONStringer.value(JSONStringer.java:237)\n            at org.json.JSONObject.writeTo(JSONObject.java:672)\n            at org.json.JSONObject.toString(JSONObject.java:641)\n            at com.facebook.stetho.inspector.ChromeDevtoolsServer.handleRemoteRequest(ChromeDevtoolsServer.java:135)\n            at com.facebook.stetho.inspector.ChromeDevtoolsServer.handleRemoteMessage(ChromeDevtoolsServer.java:104)\n            at com.facebook.stetho.inspector.ChromeDevtoolsServer.onMessage(ChromeDevtoolsServer.java:80)\n            at com.facebook.stetho.websocket.WebSocketSession$1.handleTextFrame(WebSocketSession.java:169)\n            at com.facebook.stetho.websocket.WebSocketSession$1.onCompleteFrame(WebSocketSession.java:129)\n            at com.facebook.stetho.websocket.ReadHandler.readLoop(ReadHandler.java:39)\n            at com.facebook.stetho.websocket.WebSocketSession.handle(WebSocketSession.java:38)\n            at com.facebook.stetho.websocket.WebSocketHandler.doUpgrade(WebSocketHandler.java:147)\n            at com.facebook.stetho.websocket.WebSocketHandler.handleSecured(WebSocketHandler.java:99)\n            at com.facebook.stetho.server.SecureHttpRequestHandler.handle(SecureHttpRequestHandler.java:45)\n            at org.apache.http.protocol.HttpService.doService(HttpService.java:243)\n            at org.apache.http.protocol.HttpService.handleRequest(HttpService.java:187)\n            at com.facebook.stetho.server.LocalSocketHttpServer$WorkerThread.run(LocalSocketHttpServer.java:255)\n```\n\nSo maybe also in `ChromeDevtoolsServer#handleRemoteRequest`?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/26446453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dannysuen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82118718", "body": "I am not using obfuscation on the build. Actually I tried both running `./gradlew installDebug` to install the `stetho-sample` or building with Android Studio. Besides the Logcat doesn't issue \"Method not implemented\" warnings when the sample is run.\n\n![73c738b1-87df-46ec-a785-410e0dac9ac7](https://cloud.githubusercontent.com/assets/806703/6681977/2408881a-ccab-11e4-88c9-4531b4a21a22.png)\n\nAs you can see, the window stays blank all the time.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82118718/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82671276", "body": "Thanks you jasta! That did resolve my issue. Google servers are blocked in China.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/82671276/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rightparen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87360492", "body": "One consideration and one question inline.  Otherwise lgtm.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/87360492/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/89025423", "body": "lgtm\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/89025423/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/89026118", "body": "Looks good.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/89026118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351567", "body": "Consider creating the Exception on the dumpapp thread and just sneakyThrowing it here.  Then any strange errors are visible to the command.  Also, then the state of the class can just be the Exception and you can be more explicit about the parameterless getDeclaredConstructor() being a fallback that intentionally leaks NoSuchMethodException.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351370", "body": "Consider just outputting the filename without the \"Wrote to \" to make it easier for tools to read the filename.  It should be pretty clear to users in the context what the filename means.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351394", "body": "Why not dumpContext.getStderr()?\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27351394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695197", "body": "Rather than a method, consider putting this in a 'static' block to avoid accidentally calling this more than once.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695361", "body": "You should add a comment that explains the purpose of the indirection through Holder.  Otherwise this looks like unnecessary complexity.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695765", "body": "Here and throughout, consider checking (mHolder != null) rather than calling isStethoPresent() or even using sIsStethoPresent.  Because the implementation already has to be robust to being called when not active, the main goal of this check is to avoid NPE.  This intention would be clearer with the null check.\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/27695765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "zourb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88522998", "body": "@jasta thanks for your info and quick reply. \n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88522998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tsuharesu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88876724", "body": "Nice! Thanks for looking at this :)\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/issues/comments/88876724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "utkindg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/9854362", "body": "Home\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9854362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "mannyman1115": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/9854832", "body": "Leave a line note\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9854832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/comments/9854835", "body": "Leave a line note\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9854835/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": [{"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25121559", "body": "Leave a line note\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25121559/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25121561", "body": "Leave a line note\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/pulls/comments/25121561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "cubanrob7": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/9854856", "body": "Tnks\n", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/9854856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "TWiStErRob": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/facebook/stetho/comments/20163618", "body": "@rickbrew is `> 0` intentional? From [`binarySearch`](https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#binarySearch(java.util.List,%20T)):\r\n\r\n> Note that this guarantees that the return value will be >= 0 if and only if the key is found.", "reactions": {"url": "https://api.github.com/repos/facebook/stetho/comments/20163618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}}}}