{"_default": {"1": {"csilvers": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/e294cc3a8dca03d3f33281f40cbaa25a18862abb", "message": "Update the README a bit to help with installing new code.\n\nAuditors: dhruv\n\nTest plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/0c6609f0dc7b42b44dc2cbe40c71ca2ddaa4c2d2", "message": "Fix some dodgy code to work with pypy2.4 (and not warn on pypy4.0).\n\nWritten by benjaminpollack\n\nAuditors: benjaminpollack\n\nTest plan:\nFingers crossed!"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/890b973f99643179cb4b5b98800cf6f8c49fc938", "message": "Get rid of unneeded logging call.\n\nAuditors: benkraft\n\nTest Plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/8a7e9aec1cad1fac4c23fe0926534be2ca6e79da", "message": "{} is not a set!\n\nAuditors: benkraft\n\nTest plan:\nFingers crossed"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/c002db4d958ac8097f1a7ed5093b97c85a88df98", "message": "Add a timeout arg.\n\nI //think// it's correct to ignore it, since fsevents file-watching is\ncontinuous and in its own thread.  But I don't know for sure.\n*shrug*.\n\nAuditors: benkraft\n\nTest plan:\nFingers crossed.  Will have to find a mac to test this on."}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/a73c1f7d839b716f97604cd5ac30ab4111e7ee8a", "message": "Change logging for the individual scanned files from info() to debug().\n\nSummary:\nWe upload 8000 files or so, and and even larger number we don't\nupload.  So that's 25000 loglines per module per deploy.  We don't\nneed that.\n\nTest Plan: Fingers crossed.\n\nReviewers: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D16813"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/dd18e21e3e11682e560eb3db4a16daec4b1a9500", "message": "Have the file-watchers ignore files that are not in skip-files.\n\nSummary:\nThe motivation is that if a file is in an app.yaml's skip_files, then\nit is not accessible to the dev-appserver, and thus we don't care if\nit changes or not.\n\nThis allows applications to store files such as the datastore inside\nthe app directory, without having to worry about constant reloads as a\nresult.  It also opens the door -- if we wanted to -- of lifting the\nassumption that we never need to watch dot-directories in\nwatcher_common.py, and instead explicitly skip the dot-directories\nthat the user puts in skip_files.\n\nAs part of this change, I removed the _IMMUTABLE_PROPERTIES part of\nModuleConfiguration.  It didn't work well with skip-files reloading,\nand I believe that's obsolete these days in any case, since we always\nspin up a new instance when the yaml files change.\n\nThe implementation mostly involves passing around the skip-files RE to\nthe watchers.  We have to do a little work on some watchers to get the\nfilenames relative to application-root, since the filenames in the\nskip-files RE are all taken to be relative to the application-root.\n\nTest Plan:\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/inotify_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/mtime_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/win32_file_watcher_test.py\n\nReviewers: chris, dylan\n\nReviewed By: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13232"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/fbc2c00ba2fd327382ce6193a3817dfac5ae0258", "message": "We need to check *every* directory component, not just the lowest one.\n\nskip_ignored_dirs() is weird in that it takes just a single directory\nname, not a full path (so it will be useless for our skip-files regexp\nstuff one day).  Ah well.\n\nAuditors: dylan\n\nTest Plan:\nDylan will test!"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/4c2161a9b9d1b30dce5ee49e161b2c05e4c1a4c1", "message": "Fix some dodgy code to work with pypy2.4 (and not warn on pypy4.0).\n\nWritten by benjaminpollack\n\nAuditors: benjaminpollack\n\nTest plan:\nFingers crossed!"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/af7a32b4547cc784c1c3ee733c832be5fd84f221", "message": "Get rid of unneeded logging call.\n\nAuditors: benkraft\n\nTest Plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/dc0ba3f3cbd09167d37a771d5e57fa0cd88747e2", "message": "A more principled fix for relative_dirpath == '.'.\n\nNow we match what inotify-file-watcher does.\n\nI also got rid of some debugging I left in.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.mtime_file_watcher_test.TestMtimeFileWatcher.test_skip_files"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/6810de4208747df545e8732935aaa60917dcbfec", "message": "Fix mtime_file_watcher_test, and a bug in the mtime-file-watcher too.\n\nThe bug was that mtime-file-watcher was using paths like './foo' but\nthe skip-files regexp was just looking for 'foo'.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.mtime_file_watcher_test"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/318d1e1b303b63541e52f8a0fba7a85d0f7c6f15", "message": "Fix the KA-added skip-files tests to use the new (GAE 1.9.25) API.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.inotify_file_watcher_test"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/311ce5c3d5ccb22a02ade4c27d7b6b3b81256bc5", "message": "{} is not a set!\n\nAuditors: benkraft\n\nTest plan:\nFingers crossed"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/644ac282f90ebc0eff7726d2c8a3762f62ea2677", "message": "Add a timeout arg.\n\nI //think// it's correct to ignore it, since fsevents file-watching is\ncontinuous and in its own thread.  But I don't know for sure.\n*shrug*.\n\nAuditors: benkraft\n\nTest plan:\nFingers crossed.  Will have to find a mac to test this on."}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/b995eb05ba316e05da294fd6c1af4ea9e1114e25", "message": "Get rid of an incorrect merge, and another incorrect merge.\n\nTest Plan:\nmake serve"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/69f998499ad477d9319657a8c5b3a5fae17f2c78", "message": "Change logging for the individual scanned files from info() to debug().\n\nSummary:\nWe upload 8000 files or so, and and even larger number we don't\nupload.  So that's 25000 loglines per module per deploy.  We don't\nneed that.\n\nTest Plan: Fingers crossed.\n\nReviewers: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D16813"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/bfd0215fe494a79b2fcdcc65355d01d2b3edf8f5", "message": "Drat, I didn't change the call to ignore_dir() when I fixed the signature.\n\nNow the code is cleaner, which is nice.\n\nAuditors: dylan\n\nTest Plan:\nDylan is running this for me. :-)"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/23264ce69a6fabc0d6233a6d64a48199b150ca61", "message": "Have the file-watchers ignore files that are not in skip-files.\n\nSummary:\nThe motivation is that if a file is in an app.yaml's skip_files, then\nit is not accessible to the dev-appserver, and thus we don't care if\nit changes or not.\n\nThis allows applications to store files such as the datastore inside\nthe app directory, without having to worry about constant reloads as a\nresult.  It also opens the door -- if we wanted to -- of lifting the\nassumption that we never need to watch dot-directories in\nwatcher_common.py, and instead explicitly skip the dot-directories\nthat the user puts in skip_files.\n\nAs part of this change, I removed the _IMMUTABLE_PROPERTIES part of\nModuleConfiguration.  It didn't work well with skip-files reloading,\nand I believe that's obsolete these days in any case, since we always\nspin up a new instance when the yaml files change.\n\nThe implementation mostly involves passing around the skip-files RE to\nthe watchers.  We have to do a little work on some watchers to get the\nfilenames relative to application-root, since the filenames in the\nskip-files RE are all taken to be relative to the application-root.\n\nTest Plan:\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/inotify_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/mtime_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/win32_file_watcher_test.py\n\nReviewers: chris, dylan\n\nReviewed By: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13232"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/4a7c95ae860ec3f3cf60ffccc20baf8955cef1a9", "message": "We need to check *every* directory component, not just the lowest one.\n\nskip_ignored_dirs() is weird in that it takes just a single directory\nname, not a full path (so it will be useless for our skip-files regexp\nstuff one day).  Ah well.\n\nAuditors: dylan\n\nTest Plan:\nDylan will test!"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/822e8b53875ec2c47ee7c1802c4ecf9fc31f4d7f", "message": "Pristine copy of 1.9.36, without patches applied\n\nTest plan:\n\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/4b7f931115ab33565fa66aa6c02ebc80c607c7fd", "message": "Update the README with the new instructions!\n\nTest Plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/f743c278fb6c3070c2f8d67b989621aff44fb758", "message": "Merge pull request #2 from timc13/patch-1\n\nupdate pyobjc"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/e13f9fbeaf1d1459c5c3fa41ef20520c64e36a43", "message": "Fix some dodgy code to work with pypy2.4 (and not warn on pypy4.0).\n\nWritten by benjaminpollack\n\nAuditors: benjaminpollack\n\nTest plan:\nFingers crossed!"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/90d2fd0377184af7ac652e004880c28a1ecb1b96", "message": "Get rid of unneeded logging call.\n\nAuditors: benkraft\n\nTest Plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/4c8dfbfc1c9faa0e0a77cf72095f2d154867ccb2", "message": "A more principled fix for relative_dirpath == '.'.\n\nNow we match what inotify-file-watcher does.\n\nI also got rid of some debugging I left in.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.mtime_file_watcher_test.TestMtimeFileWatcher.test_skip_files"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/51cdd3da2812cf7c5386abd296a3a2bef08bd5f1", "message": "Fix mtime_file_watcher_test, and a bug in the mtime-file-watcher too.\n\nThe bug was that mtime-file-watcher was using paths like './foo' but\nthe skip-files regexp was just looking for 'foo'.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.mtime_file_watcher_test"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/df468b8547f91f49833fc628f74d2b5d38c688b9", "message": "Fix the KA-added skip-files tests to use the new (GAE 1.9.25) API.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.inotify_file_watcher_test"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/ba0e63fa54255a82406d5a61b6b8e4e92c87c459", "message": "{} is not a set!\n\nAuditors: benkraft\n\nTest plan:\nFingers crossed"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/9d58c9cb381f205dcd2bbd54d22c3187b3e52642", "message": "Add a timeout arg.\n\nI //think// it's correct to ignore it, since fsevents file-watching is\ncontinuous and in its own thread.  But I don't know for sure.\n*shrug*.\n\nAuditors: benkraft\n\nTest plan:\nFingers crossed.  Will have to find a mac to test this on."}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/84918028efcc276c0b8eb40a57da9f4fbf8ce479", "message": "Get rid of an incorrect merge, and another incorrect merge.\n\nTest Plan:\nmake serve"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/d6e2611e32b1e936413ca312360249061f84a285", "message": "Change logging for the individual scanned files from info() to debug().\n\nSummary:\nWe upload 8000 files or so, and and even larger number we don't\nupload.  So that's 25000 loglines per module per deploy.  We don't\nneed that.\n\nTest Plan: Fingers crossed.\n\nReviewers: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D16813"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/79612bc162a3f867b61373f2c18e6c07427b90ab", "message": "Drat, I didn't change the call to ignore_dir() when I fixed the signature.\n\nNow the code is cleaner, which is nice.\n\nAuditors: dylan\n\nTest Plan:\nDylan is running this for me. :-)"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/4e9aa44706cb0ab1d3944284c0bebc82731b9068", "message": "Have the file-watchers ignore files that are not in skip-files.\n\nSummary:\nThe motivation is that if a file is in an app.yaml's skip_files, then\nit is not accessible to the dev-appserver, and thus we don't care if\nit changes or not.\n\nThis allows applications to store files such as the datastore inside\nthe app directory, without having to worry about constant reloads as a\nresult.  It also opens the door -- if we wanted to -- of lifting the\nassumption that we never need to watch dot-directories in\nwatcher_common.py, and instead explicitly skip the dot-directories\nthat the user puts in skip_files.\n\nAs part of this change, I removed the _IMMUTABLE_PROPERTIES part of\nModuleConfiguration.  It didn't work well with skip-files reloading,\nand I believe that's obsolete these days in any case, since we always\nspin up a new instance when the yaml files change.\n\nThe implementation mostly involves passing around the skip-files RE to\nthe watchers.  We have to do a little work on some watchers to get the\nfilenames relative to application-root, since the filenames in the\nskip-files RE are all taken to be relative to the application-root.\n\nTest Plan:\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/inotify_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/mtime_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/win32_file_watcher_test.py\n\nReviewers: chris, dylan\n\nReviewed By: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13232"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/c1d6ac73c7f3db1c9828b41018d7aac1feb72a56", "message": "We need to check *every* directory component, not just the lowest one.\n\nskip_ignored_dirs() is weird in that it takes just a single directory\nname, not a full path (so it will be useless for our skip-files regexp\nstuff one day).  Ah well.\n\nAuditors: dylan\n\nTest Plan:\nDylan will test!"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/5267717774195bd9fd78ad38399c6b414aec41c6", "message": "The first step towards creating a 1.9.28 frankenserver.\n\nThis is the 'raw' 1.9.28 tarball, as downloaded from\n   https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.28.zip\n\nNext, I will cherry-pick the google patches from master, to create a\nfrankenserver 1.9.28.\n\nTest plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/55614a00bdb95942603042d2cbafb920bd55fc67", "message": "Fix the regexp for arc lint to correctly only match a single line.\n\nAuditors: mroth\n\nTest Plan:\ncf. https://phabricator.khanacademy.org/rKLc9b1ea71"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/84a2dad7db0abb4f04c8b69f6e23c00d930e52a4", "message": "Merge branch '1.9.25'"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/a9d403898932e6602b896119a995b3123a92aae9", "message": "Get rid of unneeded logging call.\n\nAuditors: benkraft\n\nTest Plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/257af50c23086b3a967a1e16ea72249566955c48", "message": "A more principled fix for relative_dirpath == '.'.\n\nNow we match what inotify-file-watcher does.\n\nI also got rid of some debugging I left in.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.mtime_file_watcher_test.TestMtimeFileWatcher.test_skip_files"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/310b4cb724fd4d5885a35014cdc8a0fcb829a012", "message": "Fix mtime_file_watcher_test, and a bug in the mtime-file-watcher too.\n\nThe bug was that mtime-file-watcher was using paths like './foo' but\nthe skip-files regexp was just looking for 'foo'.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.mtime_file_watcher_test"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/58dab874ff16aace7bbc86c11c0ed47f49223d41", "message": "Fix the KA-added skip-files tests to use the new (GAE 1.9.25) API.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.inotify_file_watcher_test"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/71c44dae5565bdeb387f6885afd7fd77a7b4e48e", "message": "Get rid of unneeded logging call.\n\nAuditors: benkraft\n\nTest Plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/6d10fe83c3ff6596e55304ec96cb1afb9d710f81", "message": "A more principled fix for relative_dirpath == '.'.\n\nNow we match what inotify-file-watcher does.\n\nI also got rid of some debugging I left in.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.mtime_file_watcher_test.TestMtimeFileWatcher.test_skip_files"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/83faf4bc512c7ecb81e065f3c7e71e09b1f51204", "message": "Fix mtime_file_watcher_test, and a bug in the mtime-file-watcher too.\n\nThe bug was that mtime-file-watcher was using paths like './foo' but\nthe skip-files regexp was just looking for 'foo'.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.mtime_file_watcher_test"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/09d2e609d5eee3b7fb7c28ca7f09b1ca78a3b251", "message": "Fix the KA-added skip-files tests to use the new (GAE 1.9.25) API.\n\nAuditors: benkraft\n\nTest Plan:\n./run_tests.py google.appengine.tools.devappserver2.inotify_file_watcher_test"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/ccbbab0a6e1c9e1ee8a736a0d8851e6235626d7d", "message": "Track down what's causing problems with @positional.\n\nThis is at the request of\n   http://stackoverflow.com/questions/18126157/appengine-warning-during-python-app-update\n\nWe're seeing this in the logs, e.g.\n   https://jenkins.khanacademy.org/job/deploy-set-default/2072/console\n\nAuditors: benkraft\n\nTest Plan:\nFingers crossed."}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/37d9ab95855920d464cd8e352fa55b5586498faa", "message": "{} is not a set!\n\nAuditors: benkraft\n\nTest plan:\nFingers crossed"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/57905bb84885328a14669a6df7e7b8380bcf6ac0", "message": "Add a timeout arg.\n\nI //think// it's correct to ignore it, since fsevents file-watching is\ncontinuous and in its own thread.  But I don't know for sure.\n*shrug*.\n\nAuditors: benkraft\n\nTest plan:\nFingers crossed.  Will have to find a mac to test this on."}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/d817548eb1535b68e5988e9dcde155f11f28d01c", "message": "Get rid of an incorrect merge, and another incorrect merge.\n\nTest Plan:\nmake serve"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/c7a488e1a9ef5213024a771402848645cf4de16d", "message": "Change logging for the individual scanned files from info() to debug().\n\nSummary:\nWe upload 8000 files or so, and and even larger number we don't\nupload.  So that's 25000 loglines per module per deploy.  We don't\nneed that.\n\nTest Plan: Fingers crossed.\n\nReviewers: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D16813"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/6a743ca3c0d648f36557128e190b459882f14192", "message": "Drat, I didn't change the call to ignore_dir() when I fixed the signature.\n\nNow the code is cleaner, which is nice.\n\nAuditors: dylan\n\nTest Plan:\nDylan is running this for me. :-)"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/9bfa6ac25094d71f90848706f71e032ae7e7c78f", "message": "Have the file-watchers ignore files that are not in skip-files.\n\nSummary:\nThe motivation is that if a file is in an app.yaml's skip_files, then\nit is not accessible to the dev-appserver, and thus we don't care if\nit changes or not.\n\nThis allows applications to store files such as the datastore inside\nthe app directory, without having to worry about constant reloads as a\nresult.  It also opens the door -- if we wanted to -- of lifting the\nassumption that we never need to watch dot-directories in\nwatcher_common.py, and instead explicitly skip the dot-directories\nthat the user puts in skip_files.\n\nAs part of this change, I removed the _IMMUTABLE_PROPERTIES part of\nModuleConfiguration.  It didn't work well with skip-files reloading,\nand I believe that's obsolete these days in any case, since we always\nspin up a new instance when the yaml files change.\n\nThe implementation mostly involves passing around the skip-files RE to\nthe watchers.  We have to do a little work on some watchers to get the\nfilenames relative to application-root, since the filenames in the\nskip-files RE are all taken to be relative to the application-root.\n\nTest Plan:\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/inotify_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/mtime_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/win32_file_watcher_test.py\n\nReviewers: chris, dylan\n\nReviewed By: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13232"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/ff65f07237f3288f3fa4e5e6bec54b01eeef95a3", "message": "We need to check *every* directory component, not just the lowest one.\n\nskip_ignored_dirs() is weird in that it takes just a single directory\nname, not a full path (so it will be useless for our skip-files regexp\nstuff one day).  Ah well.\n\nAuditors: dylan\n\nTest Plan:\nDylan will test!"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/741008ad0eddf8670a016cd286a290c55b1ea352", "message": "The 1.9.25 SDK, without frankenserver patches.\n\nThis was obtained by downloading\n   https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.25.zip\nand copying it into this directory.  I didn't attempt to keep the old\nhistory, even though I'd like it, since I can't find it anywhere.\n\nAuditors: benkraft\n\nTest Plan:\nRan 'make serve' and loaded up localhost:8080.  It didn't do so great\nbecause of the 'bad' filewatcher code -- it kept reloading the app\nwithout actually serving the page -- but it didn't crash either."}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/0994697a087b344cb6d892146b7a8c7040a081cf", "message": "Change logging for the individual scanned files from info() to debug().\n\nSummary:\nWe upload 8000 files or so, and and even larger number we don't\nupload.  So that's 25000 loglines per module per deploy.  We don't\nneed that.\n\nTest Plan: Fingers crossed.\n\nReviewers: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D16813"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/40d0e64a14afd35b7cc04c63c10d17636d0b688b", "message": "Drat, I didn't change the call to ignore_dir() when I fixed the signature.\n\nNow the code is cleaner, which is nice.\n\nAuditors: dylan\n\nTest Plan:\nDylan is running this for me. :-)"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/5a7208bab01444ae4b26e4fbece805192e36f1ca", "message": "Have the file-watchers ignore files that are not in skip-files.\n\nSummary:\nThe motivation is that if a file is in an app.yaml's skip_files, then\nit is not accessible to the dev-appserver, and thus we don't care if\nit changes or not.\n\nThis allows applications to store files such as the datastore inside\nthe app directory, without having to worry about constant reloads as a\nresult.  It also opens the door -- if we wanted to -- of lifting the\nassumption that we never need to watch dot-directories in\nwatcher_common.py, and instead explicitly skip the dot-directories\nthat the user puts in skip_files.\n\nAs part of this change, I removed the _IMMUTABLE_PROPERTIES part of\nModuleConfiguration.  It didn't work well with skip-files reloading,\nand I believe that's obsolete these days in any case, since we always\nspin up a new instance when the yaml files change.\n\nThe implementation mostly involves passing around the skip-files RE to\nthe watchers.  We have to do a little work on some watchers to get the\nfilenames relative to application-root, since the filenames in the\nskip-files RE are all taken to be relative to the application-root.\n\nTest Plan:\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/inotify_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/mtime_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/win32_file_watcher_test.py\n\nReviewers: chris, dylan\n\nReviewed By: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13232"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/1e64b7c26305cc501ea9595aaa2d989cf3beffb0", "message": "Re-add WinFileWatcher, at least temporarily.\n\nThis will let us create a patch to send upstream, involving the\nskip-files re.  (the win_file_watcher has to at least *compile* with\nthe new code, even if it doesn't *use* it...)\n\nThis reverts parts of commit ec32094e5afaf0420190e318f0511cc99d217840.\n\nTest plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/eaceb8100669ab571987e7c702b866e9730e0a3e", "message": "We need to check *every* directory component, not just the lowest one.\n\nskip_ignored_dirs() is weird in that it takes just a single directory\nname, not a full path (so it will be useless for our skip-files regexp\nstuff one day).  Ah well.\n\nAuditors: dylan\n\nTest Plan:\nDylan will test!"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/0f3548f357843aacb360ead437c5a7aa9ff76b95", "message": "Copy over the ka-specific files from the GAE-1.9.6 branch.\n\nAuditors: dylan\n\nTest Plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/b41231e78e9bd68776e5f1d1e3ff71c56cbdf350", "message": "Comment out the 'You are missing PIL' warning.\n\nSummary:\nI think they do the right thing by silently setting the images-stub to\nbe a 'not-implemented' stub, so you get an error when you try to\nactually use the GAE images library.\n\n(That error even says \"install PIL\" so there's really *nothing* to be\ngained by having this on-init warning.  Ah well.  Good thing we've\nforked the source. :-) )\n\nThis will avoid log spam, and also avoid confusion, especially from\nnew folks, who think this is actually an error that might be causing\nthem problems.\n\nTest Plan:\nRan\n   make serve\nand didn't see any mention of PIL.\n\nReviewers: dylan\n\nReviewed By: dylan\n\nSubscribers: ayman, dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13099"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/13650261aa16b11058355fa50b88065de2ca25ff", "message": "Drat, I didn't change the call to ignore_dir() when I fixed the signature.\n\nNow the code is cleaner, which is nice.\n\nAuditors: dylan\n\nTest Plan:\nDylan is running this for me. :-)"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/949b5e3ab45ed93b20f68720ed396358d1410dd1", "message": "Have the file-watchers ignore files that are not in skip-files.\n\nSummary:\nThe motivation is that if a file is in an app.yaml's skip_files, then\nit is not accessible to the dev-appserver, and thus we don't care if\nit changes or not.\n\nThis allows applications to store files such as the datastore inside\nthe app directory, without having to worry about constant reloads as a\nresult.  It also opens the door -- if we wanted to -- of lifting the\nassumption that we never need to watch dot-directories in\nwatcher_common.py, and instead explicitly skip the dot-directories\nthat the user puts in skip_files.\n\nAs part of this change, I removed the _IMMUTABLE_PROPERTIES part of\nModuleConfiguration.  It didn't work well with skip-files reloading,\nand I believe that's obsolete these days in any case, since we always\nspin up a new instance when the yaml files change.\n\nThe implementation mostly involves passing around the skip-files RE to\nthe watchers.  We have to do a little work on some watchers to get the\nfilenames relative to application-root, since the filenames in the\nskip-files RE are all taken to be relative to the application-root.\n\nTest Plan:\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/inotify_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/mtime_file_watcher_test.py\n   env PYTHONPATH=. python google/appengine/tools/devappserver2/win32_file_watcher_test.py\n\nReviewers: chris, dylan\n\nReviewed By: chris, dylan\n\nSubscribers: dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13232"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/fabef6d9e94165af85e2bec01afadfe9a2dac328", "message": "Re-add WinFileWatcher, at least temporarily.\n\nThis will let us create a patch to send upstream, involving the\nskip-files re.  (the win_file_watcher has to at least *compile* with\nthe new code, even if it doesn't *use* it...)\n\nThis reverts parts of commit ec32094e5afaf0420190e318f0511cc99d217840.\n\nTest plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/d80e2e5c7b0c48707ef938510fa209f7f4a0cfb4", "message": "We need to check *every* directory component, not just the lowest one.\n\nskip_ignored_dirs() is weird in that it takes just a single directory\nname, not a full path (so it will be useless for our skip-files regexp\nstuff one day).  Ah well.\n\nAuditors: dylan\n\nTest Plan:\nDylan will test!"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/e15da0cf67f1d35977e593faf56d465f7b7cfe46", "message": "Copy over the ka-specific files from the GAE-1.9.6 branch.\n\nAuditors: dylan\n\nTest Plan:\nNone"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/f01124fe1fb0d84852bfad99fcf9c1b75cdf2289", "message": "Comment out the 'You are missing PIL' warning.\n\nSummary:\nI think they do the right thing by silently setting the images-stub to\nbe a 'not-implemented' stub, so you get an error when you try to\nactually use the GAE images library.\n\n(That error even says \"install PIL\" so there's really *nothing* to be\ngained by having this on-init warning.  Ah well.  Good thing we've\nforked the source. :-) )\n\nThis will avoid log spam, and also avoid confusion, especially from\nnew folks, who think this is actually an error that might be causing\nthem problems.\n\nTest Plan:\nRan\n   make serve\nand didn't see any mention of PIL.\n\nReviewers: dylan\n\nReviewed By: dylan\n\nSubscribers: ayman, dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13099"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/189787929", "body": "## Looking at the Khan forks of these repos, I see that they have changes like this:\n\n## https://github.com/Khan/pyobjc-framework-Cocoa/commit/784c9a2f8b71d67566e4d8f74d11dae0a2a6dac5\n\nI don't know anything about pyobjc, and unfortunately the person who made those forks is no longer at Khan.  Do you know if they have been obsoleted by the latest pyobjs's?  I don't want us to lose those setuptools fixes if they're still a problem.\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/189787929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/189959772", "body": "Great!\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/189959772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216003993", "body": "I'm afraid we've never done any work in Go, so it's totally possible that our fixes are incomplete for that language.\n\nI'm afraid we can't offer much help here -- but if you figure out what to fix, we're glad to accept patches!\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216003993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216389761", "body": "Sure, makes sense.  Patch welcome!\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216389761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216389796", "body": "(Oops, I guess they're pull-requests in github-land.)\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216389796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216440607", "body": "Ah, thank you for the code, that helps clarify things for me.  I hadn't realized this was in the python code and not some go-specific code.\n\nIt seems like if this is what exists upstream, the real problem is we haven't been keeping frankenserver up to date with the the upstream releases.  I think the right fix would be to just do that.  (Right now we're against 1.9.25.)  I'll see if I can carve out some time this week.\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216440607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216604253", "body": "OK, I just pushed a new 1.9.36 branch.  I haven't updated master yet since I haven't done a lot of testing, but try out the new branch and see if it fixes things for you!\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216604253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/267114156", "body": "Wow, time flies.  The project is still active, but we only do the work to update it ourselves when Khan Academy needs to update the SDK, which hasn't been for a while.  We'll do it when we have a chance; it's just a matter of finding time to test the new SDK to make sure it doesn't break anything for us.", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/267114156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/269146791", "body": "Good news! -- looking at 1.9.49, it looks like dev_appserver now includes most of the functionality from the frankenserver.  In particular, I see that the file-watcher now respects skip_files.  It also has all the IPv6 patches (with one exception which probably came after they did the mege).\r\n\r\nThere are a few minor things that frankenserver has that are not in mainline yet, including a resurrection of the fsevents file watcher, and improved pypy support.  But those are minor enough that I don't think there's much reason to recommend the frankenserver over stock appengine sdk anymore.", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/269146791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/270063243", "body": "(but see https://code.google.com/p/googleappengine/issues/detail?id=9300#c36 on how to work around a bug in google's version of this code)", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/270063243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "benjaminjkraft": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/484c4aba0626b33118653d5da9366e957b4af052", "message": "Add a license\n\nTest plan: cross fingers\n\nAuditors: csilvers"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/76449584c1638ba797fae72e3786aa4c5f273d33", "message": "Quiet read-outside-sandbox warnings\n\nUpstream recently added warnings when you try to read a file outside the\nsandbox.  They're nice, but very noisy for us since apparently we have a lot of\ncode that does that.  (My guess is it's mostly just imports checking various\nplaces on PYTHONPATH that they can't see.)  So I turned the warnings down a bit\nfor us, so they'll be off by default.  (Note that I couldn't actually figure\nout how to show them -- neither `--log_level` nor `--dev_appserver_log_level`\nseemed to work, and I gave up on shaving that yak.  Hopefully if we do want\nthem we can figure out how at that point.)\n\nTest plan: run dev server, see fewer log messages\n\nAuditors: csilvers"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/4f1f8886081e9a1680e77dc793b17bd528d3d1ba", "message": "Pristine copy of 1.9.57, without patches applied"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/2b6958c4dec5e2878253403b08536c11835426ab", "message": "Revert \"Pass down dev appserver restart time to python runtime\"\n\nIn our new version-handling behavior, we want to do something more similar to\nwhat dev_appserver already does for us, so we don't need any modifications.\nSee D33610 for details.\n\nThis reverts commit 849d79e0e57ecd59b62fdae3692c801000e39c85.\n\nAuditors: johnsullivan, csilvers"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/849d79e0e57ecd59b62fdae3692c801000e39c85", "message": "Pass down dev appserver restart time to python runtime\n\nSummary:\nWe'd like to have caches that depend on the last `dev_appserver` restart time,\nas a simulation of depending on the App Engine version in prod.  (For example,\nwe want to have caches that are expired on a new App Engine version expire\nwhenever the dev server restarts.)  `dev_appserver`'s own version is set on\nfirst start, so that won't change when we want it to, and `dev_appserver` may\nstart multiple instances, so doing something in our code at import-time will\nchange too often.  So we need to add our own.\n\nFiguring out the right place to do this was a little tricky, but it seemed like\nthere was no way to do it generally for all runtimes, since we need to hook\ninto instance creation to edit the runtime config and add the environment\nvariable.  So we do it in the python runtime, and just have it log the last\ntime it restarted (i.e. either startup or on file-change).  Then we can just\ninject it into the runtime config's environment.\n\nTest Plan:\nAdded an import-time print statement in our code (`ka_globals.py`) to print\n`os.environ['DEV_APPSERVER_LAST_RESTART_TIME']`.  Started a dev server (with\n`--max_module_instances=10` to make sure it would load a bunch of new\ninstances), and saw it print the same value several times, even after loading\nsome pages.  Touched a file, and saw it print the same new value several times.\nRestarted the dev server with `--automatic_restarts 0`, and saw it print the\nsame value several times, and not change even after touching some files and\nloading some pages.\n\nReviewers: johnsullivan, csilvers\n\nReviewed By: csilvers\n\nSubscribers: #chameleon\n\nDifferential Revision: https://phabricator.khanacademy.org/D32797"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/4705bc9e03d56c637ab77cbdeecff8c990b50b41", "message": "Revert \"Track down what's causing problems with @positional.\"\n\nSummary:\nPer http://stackoverflow.com/a/30469210/904174, the issue we were trying to\ntrack down is fixed in SDK v1.9.26, so we can remove the traceback (which makes\nlogs harder to read).\n\nThis reverts commit ccbbab0a6e1c9e1ee8a736a0d8851e6235626d7d.\n\nTest Plan: fingers crossed\n\nReviewers: csilvers\n\nReviewed By: csilvers\n\nDifferential Revision: https://phabricator.khanacademy.org/D22624"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brownhead": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/253b90785bf8d9f942a242c9b739e767f4c8b130", "message": "Ignore IPv6 zone ID in inet_pton.\n\nSummary:\n`fe80::1%lo0` is a valid IPv6 address and zone ID, however, the dev\nserver previously errored if it encountered this address.\n\nIt now ignores the scope, which doesn't seem ideal, but is much better\nthan conistently erroring.\n\nBefore this change, my dev server was consistently erroring whenever,\nI hit various endpoints, including the problem attempt endpoint. I\nthink it's due to some pecularities in how my network is configured,\nbut I haven't narrowed it down.\n\nThis change is letting me move forward with my other work in the short\nterm. If we don't want to land this change onto the Frankenserver I'm\nhappy to use this locally in the short term and then debug my network\nconfiguration once I have time, to prevent this sort of address from\never making it to this level.\n\nTest Plan:\nRun the following and see `True` printed out.\n\n```\ntools/devshell.py --script <(cat << EOM\nimport google.appengine.api.remote_socket._remote_socket_addr as _remote_socket_addr\nwith_scope = _remote_socket_addr.inet_pton(_remote_socket_addr.AF_INET6, \"fe80::1%lo0\")\nwithout_scope = _remote_socket_addr.inet_pton(_remote_socket_addr.AF_INET6, \"fe80::1\")\nprint with_scope == without_scope\nEOM)\n```\n\nReviewers: eater\n\nReviewed By: eater\n\nDifferential Revision: https://phabricator.khanacademy.org/D28065"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/ee424e1d57f24e01801ee60df5b1752745832aaa", "message": "Support IPv6 hostname.\n\nSummary:\nThe change in D12939 made our local server listen on host ::, which\nthrows off some port hunting code in dev app server. This fixes that\nport hunting code.\n\nThe impact of the bug was that search indexing couldn't get started on\nthe dev server.\n\nTest Plan: Ran a search indexing job successfully, where previously we could not.\n\nReviewers: dylan\n\nReviewed By: dylan\n\nSubscribers: alpert, eater, dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D15285"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/bd770cb453abf70c3510d6d50ab265f988fdad9e", "message": "Ignore IPv6 zone ID in inet_pton.\n\nSummary:\n`fe80::1%lo0` is a valid IPv6 address and zone ID, however, the dev\nserver previously errored if it encountered this address.\n\nIt now ignores the scope, which doesn't seem ideal, but is much better\nthan conistently erroring.\n\nBefore this change, my dev server was consistently erroring whenever,\nI hit various endpoints, including the problem attempt endpoint. I\nthink it's due to some pecularities in how my network is configured,\nbut I haven't narrowed it down.\n\nThis change is letting me move forward with my other work in the short\nterm. If we don't want to land this change onto the Frankenserver I'm\nhappy to use this locally in the short term and then debug my network\nconfiguration once I have time, to prevent this sort of address from\never making it to this level.\n\nTest Plan:\nRun the following and see `True` printed out.\n\n```\ntools/devshell.py --script <(cat << EOM\nimport google.appengine.api.remote_socket._remote_socket_addr as _remote_socket_addr\nwith_scope = _remote_socket_addr.inet_pton(_remote_socket_addr.AF_INET6, \"fe80::1%lo0\")\nwithout_scope = _remote_socket_addr.inet_pton(_remote_socket_addr.AF_INET6, \"fe80::1\")\nprint with_scope == without_scope\nEOM)\n```\n\nReviewers: eater\n\nReviewed By: eater\n\nDifferential Revision: https://phabricator.khanacademy.org/D28065"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/c99e07e47c1f8a1c3d23342fd4b3f66123f2ba2e", "message": "Support IPv6 hostname.\n\nSummary:\nThe change in D12939 made our local server listen on host ::, which\nthrows off some port hunting code in dev app server. This fixes that\nport hunting code.\n\nThe impact of the bug was that search indexing couldn't get started on\nthe dev server.\n\nTest Plan: Ran a search indexing job successfully, where previously we could not.\n\nReviewers: dylan\n\nReviewed By: dylan\n\nSubscribers: alpert, eater, dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D15285"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/2eed51e2e2d641c16aa1be59b580474f381e13dc", "message": "Support IPv6 hostname.\n\nSummary:\nThe change in D12939 made our local server listen on host ::, which\nthrows off some port hunting code in dev app server. This fixes that\nport hunting code.\n\nThe impact of the bug was that search indexing couldn't get started on\nthe dev server.\n\nTest Plan: Ran a search indexing job successfully, where previously we could not.\n\nReviewers: dylan\n\nReviewed By: dylan\n\nSubscribers: alpert, eater, dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D15285"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/537ec4ec8143c6394b484d260662cfed8ca7aa85", "message": "Support IPv6 hostname.\n\nSummary:\nThe change in D12939 made our local server listen on host ::, which\nthrows off some port hunting code in dev app server. This fixes that\nport hunting code.\n\nThe impact of the bug was that search indexing couldn't get started on\nthe dev server.\n\nTest Plan: Ran a search indexing job successfully, where previously we could not.\n\nReviewers: dylan\n\nReviewed By: dylan\n\nSubscribers: alpert, eater, dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D15285"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/df4211a4c49f5510abb71ed413cbd88d6002b766", "message": "Support IPv6 hostname.\n\nSummary:\nThe change in D12939 made our local server listen on host ::, which\nthrows off some port hunting code in dev app server. This fixes that\nport hunting code.\n\nThe impact of the bug was that search indexing couldn't get started on\nthe dev server.\n\nTest Plan: Ran a search indexing job successfully, where previously we could not.\n\nReviewers: dylan\n\nReviewed By: dylan\n\nSubscribers: alpert, eater, dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D15285"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/Khan/frankenserver/comments/8378418", "body": "Gah, bad author line. Sorry. This is me.\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/comments/8378418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "bpollack": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/6fb8d9fdf5bde022ea567a043c9dd2fba5c3141a", "message": "Do not prune system modules on PyPy\n\nSummary:\nGAE wants to do this so it can replace things like `thread` with its own\nversions. On anything but CPython, that'll be double plus ungood, so\ndon't do that.\n\nTest Plan: ran locally\n\nReviewers: csilvers\n\nReviewed By: csilvers\n\nDifferential Revision: https://phabricator.khanacademy.org/D25533"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/a13e50740ea93b0f812f0e1ad5bee863c4fd7ec0", "message": "Do not prune system modules on PyPy\n\nSummary:\nGAE wants to do this so it can replace things like `thread` with its own\nversions. On anything but CPython, that'll be double plus ungood, so\ndon't do that.\n\nTest Plan: ran locally\n\nReviewers: csilvers\n\nReviewed By: csilvers\n\nDifferential Revision: https://phabricator.khanacademy.org/D25533"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/eb34e7fd2b89407b99b15e961a73a695dd31f02a", "message": "Do not prune system modules on PyPy\n\nSummary:\nGAE wants to do this so it can replace things like `thread` with its own\nversions. On anything but CPython, that'll be double plus ungood, so\ndon't do that.\n\nTest Plan: ran locally\n\nReviewers: csilvers\n\nReviewed By: csilvers\n\nDifferential Revision: https://phabricator.khanacademy.org/D25533"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wchargin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/1b93d3be49214f948349a56fe8c5eeaa8fe07b6e", "message": "exclude vim's crazy permission probes from reload\n\nSummary:\nOn file save, vim checks for write permission to the directory.\nIt does this by trying to create an empty file.\nInstead of being called something sensible like `.vim_permission_test`,\nthe file is called `4913`.\nIf this file is taken, it's called `5036`, then `5159`, etc.\n(increasing in increments of `123`).\nThese magic numbers are hardcoded into vim.\nSee the source [here](https://github.com/jamessan/vim/blob/5bfa4c85b0d82c8830ac391cc73ffbe8f9e6feb0/src/fileio.c#L3704),\nor a discussion [here](https://groups.google.com/forum/#!msg/vim_dev/sppdpElxY44/qdYb2g_xI_oJ).\n\nThis patch prevents unnecessary reloads by excluding those files.\n\nTest Plan:\n 1. Edit `stylesheets/editor-package/search-result-preview.less`.\n 2. Observe \"Reloading instances due to change in stylesheets/editor-package/4913\".\n 3. Apply patch.\n 4. Edit `stylesheets/editor-package/search-result-preview.less`.\n 5. Observe lack of reloading and faster response time.\n\nReviewers: dylan, desmond, csilvers\n\nReviewed By: desmond, csilvers\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D19880"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/a8f07412b84d33009b2a66898002fa608eb9bfb7", "message": "exclude vim's crazy permission probes from reload\n\nSummary:\nOn file save, vim checks for write permission to the directory.\nIt does this by trying to create an empty file.\nInstead of being called something sensible like `.vim_permission_test`,\nthe file is called `4913`.\nIf this file is taken, it's called `5036`, then `5159`, etc.\n(increasing in increments of `123`).\nThese magic numbers are hardcoded into vim.\nSee the source [here](https://github.com/jamessan/vim/blob/5bfa4c85b0d82c8830ac391cc73ffbe8f9e6feb0/src/fileio.c#L3704),\nor a discussion [here](https://groups.google.com/forum/#!msg/vim_dev/sppdpElxY44/qdYb2g_xI_oJ).\n\nThis patch prevents unnecessary reloads by excluding those files.\n\nTest Plan:\n 1. Edit `stylesheets/editor-package/search-result-preview.less`.\n 2. Observe \"Reloading instances due to change in stylesheets/editor-package/4913\".\n 3. Apply patch.\n 4. Edit `stylesheets/editor-package/search-result-preview.less`.\n 5. Observe lack of reloading and faster response time.\n\nReviewers: dylan, desmond, csilvers\n\nReviewed By: desmond, csilvers\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D19880"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/008fb078be635bed36b3205e9d2ae931d43cdd94", "message": "exclude vim's crazy permission probes from reload\n\nSummary:\nOn file save, vim checks for write permission to the directory.\nIt does this by trying to create an empty file.\nInstead of being called something sensible like `.vim_permission_test`,\nthe file is called `4913`.\nIf this file is taken, it's called `5036`, then `5159`, etc.\n(increasing in increments of `123`).\nThese magic numbers are hardcoded into vim.\nSee the source [here](https://github.com/jamessan/vim/blob/5bfa4c85b0d82c8830ac391cc73ffbe8f9e6feb0/src/fileio.c#L3704),\nor a discussion [here](https://groups.google.com/forum/#!msg/vim_dev/sppdpElxY44/qdYb2g_xI_oJ).\n\nThis patch prevents unnecessary reloads by excluding those files.\n\nTest Plan:\n 1. Edit `stylesheets/editor-package/search-result-preview.less`.\n 2. Observe \"Reloading instances due to change in stylesheets/editor-package/4913\".\n 3. Apply patch.\n 4. Edit `stylesheets/editor-package/search-result-preview.less`.\n 5. Observe lack of reloading and faster response time.\n\nReviewers: dylan, desmond, csilvers\n\nReviewed By: desmond, csilvers\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D19880"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/80fc640bc894d4f14786a79c8671d9471c0ceaaa", "message": "exclude vim's crazy permission probes from reload\n\nSummary:\nOn file save, vim checks for write permission to the directory.\nIt does this by trying to create an empty file.\nInstead of being called something sensible like `.vim_permission_test`,\nthe file is called `4913`.\nIf this file is taken, it's called `5036`, then `5159`, etc.\n(increasing in increments of `123`).\nThese magic numbers are hardcoded into vim.\nSee the source [here](https://github.com/jamessan/vim/blob/5bfa4c85b0d82c8830ac391cc73ffbe8f9e6feb0/src/fileio.c#L3704),\nor a discussion [here](https://groups.google.com/forum/#!msg/vim_dev/sppdpElxY44/qdYb2g_xI_oJ).\n\nThis patch prevents unnecessary reloads by excluding those files.\n\nTest Plan:\n 1. Edit `stylesheets/editor-package/search-result-preview.less`.\n 2. Observe \"Reloading instances due to change in stylesheets/editor-package/4913\".\n 3. Apply patch.\n 4. Edit `stylesheets/editor-package/search-result-preview.less`.\n 5. Observe lack of reloading and faster response time.\n\nReviewers: dylan, desmond, csilvers\n\nReviewed By: desmond, csilvers\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D19880"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/17076c20cf761a758f5c4b0efc89524724be6c56", "message": "exclude vim's crazy permission probes from reload\n\nSummary:\nOn file save, vim checks for write permission to the directory.\nIt does this by trying to create an empty file.\nInstead of being called something sensible like `.vim_permission_test`,\nthe file is called `4913`.\nIf this file is taken, it's called `5036`, then `5159`, etc.\n(increasing in increments of `123`).\nThese magic numbers are hardcoded into vim.\nSee the source [here](https://github.com/jamessan/vim/blob/5bfa4c85b0d82c8830ac391cc73ffbe8f9e6feb0/src/fileio.c#L3704),\nor a discussion [here](https://groups.google.com/forum/#!msg/vim_dev/sppdpElxY44/qdYb2g_xI_oJ).\n\nThis patch prevents unnecessary reloads by excluding those files.\n\nTest Plan:\n 1. Edit `stylesheets/editor-package/search-result-preview.less`.\n 2. Observe \"Reloading instances due to change in stylesheets/editor-package/4913\".\n 3. Apply patch.\n 4. Edit `stylesheets/editor-package/search-result-preview.less`.\n 5. Observe lack of reloading and faster response time.\n\nReviewers: dylan, desmond, csilvers\n\nReviewed By: desmond, csilvers\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D19880"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/5b5dc96372ea46a12bf587d151c39e88abeeb191", "message": "add .arclint to appease Phabricator\n\nSummary:\nThis doesn't matter inherently because the whole repo is excluded\n(`python/` is in `lint_blacklist.txt`),\nbut `arc` doesn't let you `diff` without it.\nI just copied the file from webapp.\n\nTest Plan:\nMake some changes and try to `arc diff` without this patch.\nThen `printf 'def f():\\n  pass\\n' > test.py` and `arc lint test.py`;\nyou should get a warning that the indentation isn't a multiple of four.\n\nReviewers: csilvers, desmond\n\nReviewed By: desmond\n\nSubscribers: dylan\n\nDifferential Revision: https://phabricator.khanacademy.org/D19863"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cjfuller": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/e8195b49c56ef22ccb78cbabd422f02bfa0ddc62", "message": "Replace the devserver urlfetch CA certs with the ones from curl\n\nSummary:\nAppengine issue #13477 notes that some of the google apis certificates expired\nin Jan 2017, and this may cause connection problems with\nhttps://www.googleapis.com urls:\nhttps://code.google.com/p/googleappengine/issues/detail?id=13477\n\nI found myself unable to connect to bigquery from the devserver this morning,\nwith a certificate error.  The comments suggested the workaround of replacing\nthe certificates temporarily with the bundle from curl, which is more up to\ndate.\n\nThis commit replaces the certificates with those from curl, which I did by\nchanging to the certs directory and running:\n`curl https://curl.haxx.se/ca/cacert.pem > urlfetch_cacerts.txt`\n\nTest Plan:\n- make this change in webapp as well\n- in the devserver python console at http://localhost:8000/console, run:\n```\nimport bigquery_reports.learning_gain as lg\npl = lg.LearningGainResultsPipeline('learning_gain', [u'Growth: Emphasize content on the logged-out homepage'])\npl.start()\n```\n(which was what had been failing before on account of the certificate error)\n- verify that the pipeline now completes without a certificate error.\n\nReviewers: csilvers\n\nReviewed By: csilvers\n\nSubscribers: tom\n\nDifferential Revision: https://phabricator.khanacademy.org/D33354"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dmnd": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/e5dc8f03756f3c613cc3c5d0d8439b6ab6bbdfe9", "message": "Bracket host in URL when colon present\n\nSummary: This results in hostnames like `[::]:8080` instead of `:::8080`.\n\nTest Plan: Crossed fingers\n\nReviewers: eater\n\nReviewed By: eater\n\nSubscribers: csilvers, alpert, dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13247"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/03099a38ca0822098ffc571c53165295595707cc", "message": "Bracket host in URL when colon present\n\nSummary: This results in hostnames like `[::]:8080` instead of `:::8080`.\n\nTest Plan: Crossed fingers\n\nReviewers: eater\n\nReviewed By: eater\n\nSubscribers: csilvers, alpert, dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13247"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/c239921eca73438599889115b0a8e23d71adaaa0", "message": "Bracket host in URL when colon present\n\nSummary: This results in hostnames like `[::]:8080` instead of `:::8080`.\n\nTest Plan: Crossed fingers\n\nReviewers: eater\n\nReviewed By: eater\n\nSubscribers: csilvers, alpert, dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13247"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/dbf5d147b0b7b17167962153dfbaa78fa4496d58", "message": "Bracket host in URL when colon present\n\nSummary: This results in hostnames like `[::]:8080` instead of `:::8080`.\n\nTest Plan: Crossed fingers\n\nReviewers: eater\n\nReviewed By: eater\n\nSubscribers: csilvers, alpert, dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13247"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/d0a1f888b6bd87e6915bbd72202c71a998a3d371", "message": "Bracket host in URL when colon present\n\nSummary: This results in hostnames like `[::]:8080` instead of `:::8080`.\n\nTest Plan: Crossed fingers\n\nReviewers: eater\n\nReviewed By: eater\n\nSubscribers: csilvers, alpert, dylan\n\nDifferential Revision: http://phabricator.khanacademy.org/D13247"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "beneater": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/d3ccbd73c22a5409cddede01c544290c8db0b746", "message": "Handle IPv6 addresses in URLs correctly\n\nTest Plan: Configure kake/webapp to listen on :: instead of 0.0.0.0 (D12939), `make server`, and hit http://[::1]:8080/ or http://[2001:438:fffd:26:2cd3:abc5:1cf8:5b61]:8080/\n\nReviewers: dylan, csilvers\n\nReviewed By: dylan, csilvers\n\nSubscribers: alpert, dylan, csilvers\n\nDifferential Revision: http://phabricator.khanacademy.org/D12938"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/3e77049c2ce0590a42e221eda7d6ac48ef089b65", "message": "Handle IPv6 addresses in URLs correctly\n\nTest Plan: Configure kake/webapp to listen on :: instead of 0.0.0.0 (D12939), `make server`, and hit http://[::1]:8080/ or http://[2001:438:fffd:26:2cd3:abc5:1cf8:5b61]:8080/\n\nReviewers: dylan, csilvers\n\nReviewed By: dylan, csilvers\n\nSubscribers: alpert, dylan, csilvers\n\nDifferential Revision: http://phabricator.khanacademy.org/D12938"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/7ab4f43a33bd2417ff6d7f7f7cab686a186112dd", "message": "Handle IPv6 addresses in URLs correctly\n\nTest Plan: Configure kake/webapp to listen on :: instead of 0.0.0.0 (D12939), `make server`, and hit http://[::1]:8080/ or http://[2001:438:fffd:26:2cd3:abc5:1cf8:5b61]:8080/\n\nReviewers: dylan, csilvers\n\nReviewed By: dylan, csilvers\n\nSubscribers: alpert, dylan, csilvers\n\nDifferential Revision: http://phabricator.khanacademy.org/D12938"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/6b29fa64e43dd96341aa4eafa252c4d4362f690d", "message": "Handle IPv6 addresses in URLs correctly\n\nTest Plan: Configure kake/webapp to listen on :: instead of 0.0.0.0 (D12939), `make server`, and hit http://[::1]:8080/ or http://[2001:438:fffd:26:2cd3:abc5:1cf8:5b61]:8080/\n\nReviewers: dylan, csilvers\n\nReviewed By: dylan, csilvers\n\nSubscribers: alpert, dylan, csilvers\n\nDifferential Revision: http://phabricator.khanacademy.org/D12938"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/2d681d63304631ce8b8aa3413bda50ebd119e618", "message": "Handle IPv6 addresses in URLs correctly\n\nTest Plan: Configure kake/webapp to listen on :: instead of 0.0.0.0 (D12939), `make server`, and hit http://[::1]:8080/ or http://[2001:438:fffd:26:2cd3:abc5:1cf8:5b61]:8080/\n\nReviewers: dylan, csilvers\n\nReviewed By: dylan, csilvers\n\nSubscribers: alpert, dylan, csilvers\n\nDifferential Revision: http://phabricator.khanacademy.org/D12938"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "timc13": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/077f9e2a1be8fb7d8cc939cac35a521850860056", "message": "update pyobjc-core\n\nran into this issue on a new install on El Capitan. Google SDK 98.0.0. updating to the latest libs on PyPI fixes it.\r\n\r\nhttps://bitbucket.org/ronaldoussoren/pyobjc/issues/112/installation-on-yosemite-pyobjc-core"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/189899202", "body": "looks like it.\n\nhttps://bitbucket.org/ronaldoussoren/pyobjc/src/1d049be883bdf48a2f2ed87593a61993b01e91be/pyobjc-framework-Cocoa/pyobjc_setup.py?at=default&fileviewer=file-view-default#pyobjc_setup.py-213\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/189899202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "chrisklaiber": {"issues": [], "commits": [{"url": "https://api.github.com/repos/Khan/frankenserver/commits/1d949508f38503cd650c13182341e77070fd6ddc", "message": "Set the executable bit on runnable SDK scripts\n\nSummary:\nThis lets us set up symlinks in webapp/tools that can run as, e.g.,\ntools/appcfg.py.\n\nTest Plan: ./appcfg.py now works.\n\nReviewers: dylan\n\nReviewed By: dylan\n\nSubscribers: dylan, csilvers\n\nDifferential Revision: http://phabricator.khanacademy.org/D9865"}, {"url": "https://api.github.com/repos/Khan/frankenserver/commits/60b0e8659c0d1dc0c8b002947a4ff58ceca05329", "message": "Set the executable bit on runnable SDK scripts\n\nSummary:\nThis lets us set up symlinks in webapp/tools that can run as, e.g.,\ntools/appcfg.py.\n\nTest Plan: ./appcfg.py now works.\n\nReviewers: dylan\n\nReviewed By: dylan\n\nSubscribers: dylan, csilvers\n\nDifferential Revision: http://phabricator.khanacademy.org/D9865"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dylanvee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/64258544", "body": "I suggest cloning the repo and running `git log --author=\"@khanacademy.org\"` to see a full list of the changes made by Khan Academy. The commit history isn't as clean as it could be, but at a high level we've:\n- improved performance by making file-watching more efficient\n- improved IPv6 support\n- added a hook for installing a custom logging handler\n\nWe're also working on getting some of these patches accepted into the upstream SDK codebase.\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/64258544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "hsluo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216018826", "body": "Looked into the upstream code and found that they just check the return value and split it.\n\n``` python\n# http_runtime.py:328\nport = self._process.stdout.readline()\nif '\\t' in port:  # Split out the host if present.\n  host, port = port.split('\\t', 1)\n```\n\nMaybe we could just do the same?\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216018826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216444443", "body": "Sure. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/216444443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/217130267", "body": "The port issue is fixed, and haven't seen other things broken. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/217130267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "drewwells": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/267230899", "body": "Are you having issues with Sierra? I think support for that os upgrade was\nadded recently.\nOn Wed, Dec 14, 2016 at 12:25 PM Craig Silverstein <notifications@github.com>\nwrote:\n\n> Wow, time flies. The project is still active, but we only do the work to\n> update it ourselves when Khan Academy needs to update the SDK, which hasn't\n> been for a while. We'll do it when we have a chance; it's just a matter of\n> finding time to test the new SDK to make sure it doesn't break anything for\n> us.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/Khan/frankenserver/issues/5#issuecomment-267114156>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAOmE4MWIEnr_XQytfAPNnpxWgAhsWrBks5rIDSSgaJpZM4LNKCp>\n> .\n>\n", "reactions": {"url": "https://api.github.com/repos/Khan/frankenserver/issues/comments/267230899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}}}}