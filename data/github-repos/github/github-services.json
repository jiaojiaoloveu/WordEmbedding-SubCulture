{"_default": {"1": {"gjtorikian": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/46d8ca660a3023125e6581aa8c6b912c61fdcb34", "message": "Merge pull request #1228 from spatten/master\n\nFixing stale link in Leanpub documentation."}, {"url": "https://api.github.com/repos/github/github-services/commits/9589ab2221805fb9745dfb606100607f6da3ffff", "message": "Merge pull request #1231 from github/update-maxcdn\n\nUpdate maxcdn client gem"}, {"url": "https://api.github.com/repos/github/github-services/commits/58652da9111a81791b5de41c890ae01d295b148c", "message": "Merge pull request #1232 from github/remove-dead-services\n\nRemove dead services"}, {"url": "https://api.github.com/repos/github/github-services/commits/1063d651a70269170178b268a92d039a8ab06e24", "message": "Remove Nodejitsu"}, {"url": "https://api.github.com/repos/github/github-services/commits/7091e2e903e10eecaf0260998c4be29ce3f5b955", "message": "Remov RationalJazzHub"}, {"url": "https://api.github.com/repos/github/github-services/commits/33a35761f654f88be3dc2ace6490ff299c3c932e", "message": "Remove jquery Plugins"}, {"url": "https://api.github.com/repos/github/github-services/commits/461623da79a099fed14f766764aa75c7e2b3fde9", "message": "Merge pull request #1230 from github/vgrl-fix-415-response\n\nadd TeamCity Content-Type; 405 check; end tag"}, {"url": "https://api.github.com/repos/github/github-services/commits/e64f5491dfa79634129c555736816567abaf35a0", "message": "Merge pull request #1214 from github/oh-okay-there-s-more-than-one\n\nAttempt to fix older TeamCity versions"}, {"url": "https://api.github.com/repos/github/github-services/commits/ccaac41a25a155fd4f22972f0a7a7786a6f9e6c8", "message": "Attempt to fix older TeamCity versions"}, {"url": "https://api.github.com/repos/github/github-services/commits/1786eb429191f5681b37fc749a59f92ecd533489", "message": "Merge bcx docs into basecamp"}, {"url": "https://api.github.com/repos/github/github-services/commits/41e09b8588022dd2d14cac88acc9cd26d128c707", "message": "Go back to a regular name"}, {"url": "https://api.github.com/repos/github/github-services/commits/19e8397f77a2d23e748f191d4e06628e11fdf176", "message": "Remove docs for non-existent service\n\nThis was renamed: https://github.com/github/github-services/pull/638\n\nAnd then removed: https://github.com/github/github-services/pull/1177"}, {"url": "https://api.github.com/repos/github/github-services/commits/88411cf613fa1d0b62ccfedb4c54ba5487890ecf", "message": "Remove documentation for non-existent services\n\nThis was renamed: https://github.com/github/github-services/pull/507\n\nAnd then removed: https://github.com/github/github-services/pull/1177"}, {"url": "https://api.github.com/repos/github/github-services/commits/88ff8b774f3e4e2e72fd809c8d923896299ef25a", "message": "Merge pull request #1212 from github/python-more-like-bye-son\n\nPythonPackages no longer exists"}, {"url": "https://api.github.com/repos/github/github-services/commits/3941882a216d45307e0a18a1bd9b7808684ec4d0", "message": "Merge pull request #1211 from KanoYugoro/master\n\nBug fix for TeamCity 2017.1"}, {"url": "https://api.github.com/repos/github/github-services/commits/aba469ecff262763e3f68f7d8dc9ec670661c019", "message": "PythonPackages no longer exists"}, {"url": "https://api.github.com/repos/github/github-services/commits/55ff0e0f38cf41a46478da8fe7acddefcfaad5fc", "message": "Merge pull request #1208 from zzak/rm-circleci\n\nRemove CircleCI from Service Hooks integration"}, {"url": "https://api.github.com/repos/github/github-services/commits/9f2adf55d4ac2747f97f62b7d8140deab432e58c", "message": "Add the xmlrpc gem"}, {"url": "https://api.github.com/repos/github/github-services/commits/89becbbe0f360f9d59a41f67e583b95aa9a96c6d", "message": "Set Travis to 2.4.0"}, {"url": "https://api.github.com/repos/github/github-services/commits/76234e0200c09eb9a65adb2611d92631e8d70054", "message": "Merge pull request #1130 from felixonmars/patch-1\n\nFix a typo: langauge -> language"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/54175370", "body": "This requires a capital `H`: `X-GitHub-Event`.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/54175370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/59679247", "body": "It should be its, not it's.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/59679247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/60773537", "body": "I would suggest dropping this under `Current Status`. That way the header becomes a link and we can send a direct message to incoming requests.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/60773537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "zerowidth": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/568b942c6534f4fed339ec0bee4af1c7fcbb783e", "message": "Update vendored gems"}, {"url": "https://api.github.com/repos/github/github-services/commits/addeffad35ae6f17e78e7dd0495969395d4b4325", "message": "Update maxcdn gem version to latest\n\nThe latest version relaxes the constraint on signet, which is blocking\ndownstream dependencies for the hook delivery system."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vgrl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/d9c004a57d3397717cdf81c899e25176ad98175e", "message": "add ending buildType tag"}, {"url": "https://api.github.com/repos/github/github-services/commits/c531770876dc7a89074071e32ab6152ad2656c75", "message": "add missing pipe"}, {"url": "https://api.github.com/repos/github/github-services/commits/e3335b84b5ab0a595268e2d393ab796526ae63f3", "message": "add TeamCity Content-Type; 405 check; end tag\n\nAdded Content-Type; 405 status check; buildType closing tag"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "spatten": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/454fb6b97fa85d548e75b11ed43ff5c1ebfac11d", "message": "Fixing stale link in Leanpub documentation."}, {"url": "https://api.github.com/repos/github/github-services/commits/df371cce9d0d8fff89678dccb9e0b17f2732c680", "message": "Updating URL on Leanpub where you find your author API key"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dewski": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/4159703d573ee6f602e304ed25b5862463a2c73d", "message": "Merge pull request #1226 from github/remove-snapci\n\nRemove Snap CI"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davidcelis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/45adf94c911a04dfe20cae236573ce133a18e18e", "message": "Remove Snap CI\n\nSigned-off-by: David Celis <me@davidcel.is>"}, {"url": "https://api.github.com/repos/github/github-services/commits/d91619af3304e8f70e6ea5f7b92dc6737b6a934e", "message": "Revert \"Delete snapci.rb\"\n\nThis reverts commit d7aabbcb83dfc837290f4bd549e0e213c75f12d7."}, {"url": "https://api.github.com/repos/github/github-services/commits/d7aabbcb83dfc837290f4bd549e0e213c75f12d7", "message": "Delete snapci.rb"}, {"url": "https://api.github.com/repos/github/github-services/commits/acb92c45213b3951f3db604c11dddd7b2cc62ab8", "message": "Merge pull request #1202 from github/update-vendor-cache\n\nUpdate vendor/cache"}, {"url": "https://api.github.com/repos/github/github-services/commits/3dbe50a8fceb1b504689b9c89cef3ddf134c0377", "message": "Update vendor/cache\n\nSigned-off-by: David Celis <me@davidcel.is>"}, {"url": "https://api.github.com/repos/github/github-services/commits/749995b7a788ea5070c900866007c448e04afd8f", "message": "Merge pull request #1190 from jloh/master\n\nAllow pushbullet API keys to contain periods"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/59776601", "body": "Could we keep the text noting that we prefer the use of Atlassian's integration and not the hipchat service provided here?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/59776601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jnunemaker": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/4ea8233fcc3c46d7e3dfc5cbfdb70698e29c82a1", "message": "Merge pull request #1224 from github/strip-url\n\nStrip URL"}, {"url": "https://api.github.com/repos/github/github-services/commits/bc8be65fff3f3a61329eaf46927d1a1073af1317", "message": "Strip url in http_method and http_get\n\nOdd that http_get doesn't use http_method. Also odd that url could ever\nbe nil. How could one do an http request with a nil url."}, {"url": "https://api.github.com/repos/github/github-services/commits/5d89cf1ce871f4f6d4cb4cff1fd6390ea1962588", "message": "Add failing tests for url that needs to be stripped"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bswinnerton": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/c8675558dc838e7a771f482c0636f607e1d9d920", "message": "Merge pull request #1218 from lnussel/master\n\nAvoid appending to url in a loop"}, {"url": "https://api.github.com/repos/github/github-services/commits/8c9b3b4dd1c6d38c1a624d5eaeb00e75835d5bdf", "message": "Merge pull request #1215 from joesiewert/update-codeship\n\nUpdate Codeship documentation"}, {"url": "https://api.github.com/repos/github/github-services/commits/b626dd7db2a3f323429bb26c0e7752d5aedefbdb", "message": "Merge pull request #1148 from github/loosen-aws-sdk-requirement\n\nLoosen aws-sdk requirement"}, {"url": "https://api.github.com/repos/github/github-services/commits/b6985e8a7fdf9e6bb842ce13913efb3a76c1a58f", "message": "Updates aws-sdk version to 1.64\n\nI mistakenly thought the internal system was locked at 1.66. After\ndouble checking, it's `1.64`."}, {"url": "https://api.github.com/repos/github/github-services/commits/0133699d8a782263eb187a76c2785e36d4f7ba79", "message": "Bumping aws-sdk dependency version to 1.66"}, {"url": "https://api.github.com/repos/github/github-services/commits/bf920a427f83cf5722cf7cbaae449c2a04851058", "message": "Loosens the version requirement for aws-sdk"}, {"url": "https://api.github.com/repos/github/github-services/commits/219562f9c4933eb365525e497f6ad736e654a4de", "message": "Merge pull request #1136 from jwhitcraft/sqs-with-metadata\n\nFix to send X-GitHub-Event to SQS"}, {"url": "https://api.github.com/repos/github/github-services/commits/00a30d9975bf4de051077a5b7b48e5437aa0c860", "message": "Merge pull request #1137 from Seldaek/patch-3\n\nMake token optional"}, {"url": "https://api.github.com/repos/github/github-services/commits/7f6824acdd7dd3f649e8aba1ba48d0aec6ed9c5c", "message": "Merge pull request #1142 from github/remove-gemfile-lock\n\nRemoves Gemfile.lock"}, {"url": "https://api.github.com/repos/github/github-services/commits/4f76552bb858ddb6ef69a9b17b5efafc1174cb1e", "message": "Merge pull request #1143 from github/fixing-whitespace\n\nAdds whitespace to match upstream changes"}, {"url": "https://api.github.com/repos/github/github-services/commits/63baa3da92a64827017ad8dc6c12411d958b66ba", "message": "Adds whitespace to match upstream changes"}, {"url": "https://api.github.com/repos/github/github-services/commits/8d7bca76a9f76381868d08a17d76ae7363b0d3ac", "message": "Removes Gemfile.lock\n\nBest [stated by Yehuda Katz](http://goo.gl/ebnsUK), the `Gemfile.lock`\nshould **not** be checked into version control:\n\n> When developing a gem, use the gemspec method in your Gemfile to avoid\n> duplication. In general, a gem's Gemfile should contain the Rubygems\n> source and a single gemspec line. Do not check your Gemfile.lock into\n> version control, since it enforces precision that does not exist in\n> the gem command, which is used to install gems in practice. Even if\n> the precision could be enforced, you wouldn't want it, since it would\n> prevent people from using your library with versions of its\n> dependencies that are different from the ones you used to develop the\n> gem.\n\nIn github-services, we rely on the `github-services.gemspec` file to\nspecify the desired versions of our dependencies."}, {"url": "https://api.github.com/repos/github/github-services/commits/237c88e4c0595ca4d16f39f84919df8fa81cbf77", "message": "Merge pull request #1141 from github/update-docs-to-https\n\nUpdating URLs to use HTTPS"}, {"url": "https://api.github.com/repos/github/github-services/commits/aa50c870f1b94dccf0d037ca05af309aaceb63e1", "message": "Updating URLs to use HTTPS"}, {"url": "https://api.github.com/repos/github/github-services/commits/abb2db1a0162ea43c7502305be4fd03dbc9620fd", "message": "Merge pull request #1140 from github/silence-failing-test\n\nSilences failing test"}, {"url": "https://api.github.com/repos/github/github-services/commits/f7ab2b977f7a775343e0c914a7ce63a1e6aa6817", "message": "Silences failing test"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/54748685", "body": "It's very possible that I'm wrong, but I'm not sure that [`message_attributes`](https://github.com/aws/aws-sdk-ruby/blob/1.27.0/lib/aws/sqs/queue.rb#L87-L115) is supported in [version 1.27.0](https://github.com/github/github-services/blob/c7ebee32771af3faed36500dfe239b1605478524/github-services.gemspec#L61) of aws-sdk-ruby.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/54748685/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 1, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132225190", "body": "I think we might be missing the word \"the\" here:\r\n\r\n> Don't forget to enable **the** Github app in...", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132225190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132225432", "body": "What is meant here by \"Where find it?\", was this intended to be a link to documentation on where to find this information?", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132225432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132225859", "body": "Rather than having a nested trailing conditional, it might be slightly easier to read this if it were:\r\n\r\n```ruby\r\nif data['base_url'].to_s.empty? && data['access_token'].to_s.empty?\r\n  raise_config_error \"Access token mandatory for cloud\"\r\nend\r\n```", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132225859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132226585", "body": "Building on my comment from above, since we already have this check here, perhaps we could consolidate them all into something like:\r\n\r\n```ruby\r\nif data['access_token'].to_s.empty?\r\n  raise_config_error \"Access token mandatory for cloud\" if data['base_url'].to_s.empty?\r\n  raise_config_error \"Invalid username\" if data['username'].to_s.empty?\r\n  raise_config_error \"Invalid password\" if data['password'].to_s.empty?\r\nend\r\n```\r\n\r\nI believe this would maintain the current functionality.", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132226585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132241219", "body": "Is there value in keeping this test around to exercise https://github.com/github/github-services/pull/1219/files#diff-6b56c8a54d5e428bb9b0c89a350950d7R18?", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132241219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "nickvanw": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/4237d8b10ad31e34a52aaf9fd4cf4f5339dce57b", "message": "Merge pull request #1223 from github/nvw-active_collab_more_like_active_collNO\n\nActiveCollab: Slight Refactor to use `http_*` helpers."}, {"url": "https://api.github.com/repos/github/github-services/commits/ea09df7a9ef567dda9bcc2fa960802c7a49da7fc", "message": "rally: also use http helpers"}, {"url": "https://api.github.com/repos/github/github-services/commits/9dac33df05f3b16b848869e608fa1b35c3ea459b", "message": "active_collab: go through http_post"}, {"url": "https://api.github.com/repos/github/github-services/commits/0452d02cd5129e4f530695b7d89369cf39f64ee8", "message": "Merge pull request #1220 from github/nvw-whitelist_transports\n\nWhitelist Transports in Github Services"}, {"url": "https://api.github.com/repos/github/github-services/commits/035572b753b58269e1bd408becb437c7c2c2ad1e", "message": "service.rb: check scheme in `http_get` as well"}, {"url": "https://api.github.com/repos/github/github-services/commits/bdb47ad3cec378ed80d9a857e35cb690aaeddc86", "message": "Merge branch 'master' of github.com:github/github-services into nvw-whitelist_transports"}, {"url": "https://api.github.com/repos/github/github-services/commits/ef1e9d0fb133ec42bdd80bd9775f27a9aedad2e3", "message": "lib/service.rb: use Adressable::URI.parse vs URI"}, {"url": "https://api.github.com/repos/github/github-services/commits/9f8e92ca3d0a81c9b6e9743fc992251d7a219971", "message": "service.rb: whitelist http, https transports"}, {"url": "https://api.github.com/repos/github/github-services/commits/c9acf41bb174a81e28b18d2e9a698010411d36ae", "message": "Merge pull request #1213 from github/set-nil-aws-region\n\nEnsure default region is used when none specified"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tarebyte": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/63e74696bb105b3c4f5c1b815089edce97f3ce2e", "message": "Merge pull request #1216 from brandonkelly/patch-1\n\nFixed broken link to \"Integrations Directory\""}, {"url": "https://api.github.com/repos/github/github-services/commits/0245fc5c2b4138b668790962b49c68b5376eb96e", "message": "Merge pull request #1222 from VladRassokhin/patch-1\n\nFix link in `teamcity` service documentation"}, {"url": "https://api.github.com/repos/github/github-services/commits/8e54651d5df69be45e4970192773df74075cb433", "message": "Merge pull request #1192 from PowerDNS/nit\n\ntext nit"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "VladRassokhin": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/9fd02776b741c85a2b1287a838dad053c220dfa6", "message": "Fix link in teamcity service documentation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dbussink": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/01cf794d745410356ba8844d398f119653b11ea4", "message": "Merge pull request #1221 from github/dbussink/remove-newer-ruby-syntax\n\nRemove newer Ruby syntax"}, {"url": "https://api.github.com/repos/github/github-services/commits/073a42abc79509074f632d94da09f9ec57dce768", "message": "Remove newer Ruby syntax\n\nThis gem also needs to be backported to older GitHub Enterprise releases\nwho are not on a Ruby version that supports this syntax."}, {"url": "https://api.github.com/repos/github/github-services/commits/885b7c6bf25b648275ad18b24714b8f11bb3c625", "message": "Merge pull request #1217 from github/dbussink/fix-jabber-hooks\n\nFix sending Jabber notifications"}, {"url": "https://api.github.com/repos/github/github-services/commits/6404121f21810f46ab31bd0de85b9c6590a7a183", "message": "Fix sending Jabber notifications\n\nThis was broken due to an error that was received on sending a roster\nmessage without an id. This was an issue in the xmpp4r-simple gem, so\nthis removes that gem and implements the necessary commands directly\nwith xmpp4r.\n\nIt removes the need for the existing monkey patch and also prevents\nhaving to add even more. The code is not that much more complex by\nimplementing it directly.\n\nAlso removes the old test since it was not really exercising anything\nsince all the useful behavior was mocked. There isn't really anything\nlike VCR for XMPP to record real interactions and since github-services\nis deprecated anyway, we don't want to invest too much time."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lnussel": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/18ab77eb700818ce2bff0a225955444a1ff1bfee", "message": "Avoid appending to url in a loop\n\nIf multiple tokens are use we need to start with the original api url\nrather than appending to the previously modified one."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "brandonkelly": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/c1a2dec57cd4efd607f53054cd475d791a193e57", "message": "Fixed broken link to \"Integrations Directory\"\n\nAssuming it was replaced with the Marketplace."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joesiewert": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/539d981eb10df10f62b05021805e3af3c8ca6098", "message": "Update Codeship documentation"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ptoomey3": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/78f018199a2f4f363fc38d39e0fb91616af7ac49", "message": "Ensure default region is used when none specified\n\nThe prior behavior caused region to be set to `\"\"` when no region was\nconfigured. This ended up causing a AWS `ops_works_region` to be set to `\"\"`.\nAnd, this ended up causing the `ops_works_endpoint` to be set to\n`opsworks..amazonaws.com` instead of something like `opsworks.us-\neast-1.amazonaws.com`. So, we work around this by ensuring `nil` is passed in\nwhen no region is specified."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/34649290", "body": "I somewhat prefer the multiple/wildcard matching as is done in https://github.com/github/github-services/pull/1058/files#diff-5dc7176f8aa22691f0ae7be3dc7c2785R32. But, I don't have a strong opinion. :+1: so long as @kdaigle doesn't have a preference either. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/34649290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36668704", "body": "Do we need this method? Looking at https://developer.github.com/v3/activity/events/types/ it seems like every event type has a repository hash with a `private` key. So, it would look something like `private = payload[\"repository\"][\"private\"]`. \n\n@kdaigle, @jasonrudolph - Do you all think the `private` field will exist for all events that contain a `repository`?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36668704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36757353", "body": "Total nit, but my only suggestion here is to be a bit paranoid and explicitly check that `repo_private == false`. I don't think it would happen, but if `payload[\"repository\"][\"private\"]` was ever `nil` for some reason we would default to disclosing the repo name. It would be best to default to not showing the repo name unless we are 100% sure that it is not private. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36757353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36757465", "body": "~~Sorry..that should have been `repo_private == true`~~\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36757465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36757828", "body": "Bah..sorry..haven't had my morning coffee here. I would write this as:\n\n``` ruby\n\"GitHub IRCBot - #{repo_owner}\" + (repo_private == false ? \"/#{repo_name}\" : \"\")\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36757828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36760206", "body": "This doesn't work with `nil`:\n\n``` ruby\nnil != true ? \"foo\" : \"bar\"\n=> \"foo\"\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36760206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/37456732", "body": "Total nit, but would `[[:graph:]]` be more accurate here? For example:\n\n``` ruby\n\"foob @\\tbar\".gsub(/\\B@[^ ]+/) { |word| puts word; \"@X#{word[1..word.length]}\" }\n@   bar\n=> \"foob @X\\tbar\"\n```\n\nvs\n\n``` ruby\n\"foob @\\tbar\".gsub(/\\B@[[:graph:]]+/) { |word| puts word; \"@X#{word[1..word.length]}\" }\n=> \"foob @\\tbar\"\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/37456732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "janester": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/8dd46a8e0f41be8211ee6e1d14a59832e152f0e9", "message": "Merge pull request #1209 from babltiga/restrict-last-commit-fix\n\nAsana Integration Restrict to Last Commit Issue"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "KanoYugoro": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/20bb0cec16d15c16271fd8fb479d1f853426cc95", "message": "Merge pull request #1 from KanoYugoro/fix-tc-2017\n\nConvert TeamCity integration over to REST"}, {"url": "https://api.github.com/repos/github/github-services/commits/39e459fe041eed905991598dc3ac7585809bd8b7", "message": "Convert TeamCity integration over to REST\n\nThis should fix the issue seen with the new version of TeamCity (2017.1\nand 2017.1.1) where the httpauth/actions.html endpoint was deprecated."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "babltiga": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/4564d0e28b661d9339518cb05cfec72bbd61848c", "message": "fixed a typo which caused all the commits to be inspected for asana task definitions"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kdaigle": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/d1b7b254946236931571785f680d9f6b8cfbcb6a", "message": "Merge pull request #1206 from tombeynon/master\n\nConfigurable endpoint region"}, {"url": "https://api.github.com/repos/github/github-services/commits/c7ebee32771af3faed36500dfe239b1605478524", "message": "Merge pull request #1135 from github/deploy-hq-git-hub\n\nFix the capitalization of GitHub in DeployHQ"}, {"url": "https://api.github.com/repos/github/github-services/commits/e6dfc8b10e9073188c58240cb849bdb2aaeb0222", "message": "Fix the capitalization of GitHub in DeployHQ\n\n@darkphnx \"good\" HTTP libraries shouldn't care about the capitalization of headers but for the sake of our human readers @gjtorikian makes a good point that it should continue to be consistent. :sparkles:"}, {"url": "https://api.github.com/repos/github/github-services/commits/11809953d16a7b866f5f4247e15b60ab6ef7fea9", "message": "Merge pull request #1131 from darkphnx/master\n\nAdd an X-Github-Event header to DeployHQ service."}, {"url": "https://api.github.com/repos/github/github-services/commits/b3763f3308e43a4ce81e8a25e78ec46d421bf2b0", "message": "Merge pull request #1083 from github/make-amazon-services-titles-consistently\n\nMake Amazon services named consistently"}, {"url": "https://api.github.com/repos/github/github-services/commits/3b25ab5907966e1e6c5b443738dfa28d265a4605", "message": "Make Amazon services named consistently"}, {"url": "https://api.github.com/repos/github/github-services/commits/ad5499997af8781af81f1665b3541d972cd362c1", "message": "Merge pull request #1081 from github/update-github-ci-rbenv\n\nUpdate CI RBENV to match production"}, {"url": "https://api.github.com/repos/github/github-services/commits/e9d32a8b457774993ea3eee6d0c9eba71f12aa7d", "message": "Update CI RBENV to match production"}, {"url": "https://api.github.com/repos/github/github-services/commits/d54e099ac3108f73999fb7ea0372413189e40670", "message": "Merge pull request #1075 from parshap/twitter-whitespace\n\nTwitter: Preserve commit message whitespace"}, {"url": "https://api.github.com/repos/github/github-services/commits/071a77ec38fe44f4cd354d161c6795f489377f9f", "message": "Merge pull request #1079 from github/format-amazon-sns-file\n\nReformat code blocks in AmazonSNS file"}, {"url": "https://api.github.com/repos/github/github-services/commits/63a285d0c82eee6d666072c90612a770157791c7", "message": "Reformat code blocks in AmazonSNS file"}, {"url": "https://api.github.com/repos/github/github-services/commits/e8cd3c1b4c695a13f03309340baf94a5e7497139", "message": "Merge pull request #1078 from leelynne/sns_add_attributes\n\nUpdate Amazon SNS publisher to pass the event type as message attribute."}, {"url": "https://api.github.com/repos/github/github-services/commits/ae14791a5d615e89e6cb613c5af82a4cd6ffd65d", "message": "Merge pull request #1077 from apiaryio/master\n\nUpdated apiary documentation to reflect current implementation"}, {"url": "https://api.github.com/repos/github/github-services/commits/28fa7ef63f1996cca36d755d82d05457a36f54b4", "message": "Merge pull request #1074 from spatten/master\n\nUpdating URL on Leanpub where you find your author API key"}, {"url": "https://api.github.com/repos/github/github-services/commits/e11a7f1e7e71f32c08f66e70fae8378fd7a615d0", "message": "Merge pull request #1073 from refiito/master\n\nToggl service update"}, {"url": "https://api.github.com/repos/github/github-services/commits/a8a50882f0b089b7feab25c821bd39bf69b37751", "message": "Merge pull request #1072 from github/add-refs-to-irc-docs\n\nClarify refs can be used for IRC"}, {"url": "https://api.github.com/repos/github/github-services/commits/3a266bec3e58ad453e0f80ec0f79e34d9f792026", "message": "Clarify refs can be used for branch list\n\nFixes #773."}, {"url": "https://api.github.com/repos/github/github-services/commits/2e886f407696261bd5adfc99b16d36d5e7b50241", "message": "Merge pull request #1058 from firegurafiku/pr/obs-ref-filters\n\n[OBS] Check Git reference before triggering build"}, {"url": "https://api.github.com/repos/github/github-services/commits/847eaeb6618edf02e0fece5c6beb18ee417a9605", "message": "Merge pull request #1064 from myget/master\n\nRemoved term 'above'"}, {"url": "https://api.github.com/repos/github/github-services/commits/1ebfe54c37c495760358704aab4f2945cb539db8", "message": "Merge pull request #1066 from reiz/master\n\nUpdate the instructions for VersionEye"}, {"url": "https://api.github.com/repos/github/github-services/commits/527dc0c695b0d6637386b84546183538080c0ed6", "message": "Merge pull request #1061 from github/contributing-no-new-features\n\nRemove the word \"substantial\" from feature changes"}, {"url": "https://api.github.com/repos/github/github-services/commits/651758aeaf03a6d0502297d656d3f4a26cadfd15", "message": "Remove the word \"substantial\" from feature changes"}, {"url": "https://api.github.com/repos/github/github-services/commits/526e20aef307e59711485c7f8c0593c34bf54b3c", "message": "Remove grouptalent docs"}, {"url": "https://api.github.com/repos/github/github-services/commits/f20120e3359571ada77669a2b5e711864e05a018", "message": "Merge pull request #1059 from github/remove-leftover-docs\n\nRemove orphaned docs"}, {"url": "https://api.github.com/repos/github/github-services/commits/f05be771d27eaa3eaa739125ac7b9b1314e7a0d3", "message": "Remove orphaned docs"}, {"url": "https://api.github.com/repos/github/github-services/commits/47b8524dc7c887df17a8bf0dd4443af9c55a26fa", "message": "Merge pull request #1028 from DataDog/fail_bootstrap_if_error\n\nset flag to exit script if any command fails"}, {"url": "https://api.github.com/repos/github/github-services/commits/9e039d242b75efb34a57ae76a9848154b32e1e94", "message": "Merge pull request #1054 from Seldaek/patch-2\n\nUpdate packagist instructions"}, {"url": "https://api.github.com/repos/github/github-services/commits/c5240bff5e1d0b565166682636bc22eec8b1fbe9", "message": "Merge pull request #1055 from ibmdevops/onering/22650\n\nUpdated text for IDS Bluemix rebranding"}, {"url": "https://api.github.com/repos/github/github-services/commits/23c6105183b626cf74c045f6d53af7a178bfdb4c", "message": "Merge pull request #1052 from github/old-cleanup\n\nCleanup and remove services that are deprecated"}, {"url": "https://api.github.com/repos/github/github-services/commits/d6e2639aeb25cf60376bd26acf9eba95940d1f5e", "message": "Remove tenxer as it's offline"}, {"url": "https://api.github.com/repos/github/github-services/commits/d2f9c928434fe05d03f400aa49198795ee39aac7", "message": "Revert \"tddium webhook URL returns 404\"\n\nThis reverts commit fb7ef57cee44baf1421cf40554c58fa261b53e62."}, {"url": "https://api.github.com/repos/github/github-services/commits/08150ea99f53068edce8e778ba99402dcff9a60e", "message": "Merge branch 'master' into old-cleanup"}, {"url": "https://api.github.com/repos/github/github-services/commits/093b658fff02f9d7a0109a27081bdd81cc0bde54", "message": "Merge pull request #1050 from stof/patch-1\n\nAvoid the regex for the default packagist domain"}, {"url": "https://api.github.com/repos/github/github-services/commits/849efe4967dd4eb52bf549662bb4bcee902db1cf", "message": "Merge pull request #1033 from gerbenjacobs/packagist-docs\n\nFixed error in markdown to better visualize optional steps"}, {"url": "https://api.github.com/repos/github/github-services/commits/39b286d98b8d4a759162f6a53f695d0d729d613f", "message": "Merge pull request #1049 from Seldaek/patch-1\n\nUpdate packagist service to use TLS"}, {"url": "https://api.github.com/repos/github/github-services/commits/c5df2a8407b00aa17bc9e3e10b906a8bf6470ee5", "message": "Merge pull request #1038 from carlio/landscape-docs\n\nUpdating Landscape documentation with the correct docs website URL."}, {"url": "https://api.github.com/repos/github/github-services/commits/cca7e73d4d2a3800dc6c9c60e34f96bc21bdfa35", "message": "Merge pull request #1045 from mhama/patch-1\n\nmodified pivotaltracker doc to show the way to watch multiple branches"}, {"url": "https://api.github.com/repos/github/github-services/commits/787a3db6a00d25bf792eea2174f6afd055583039", "message": "Merge pull request #1044 from lukerollans/patch-1\n\nFix errors in Codeship docs"}, {"url": "https://api.github.com/repos/github/github-services/commits/648282fe0f5f88a8c60bc2506f0627fd483ad09e", "message": "Merge pull request #1047 from github/remove_httparty_gem\n\nRemove unused httparty gem"}, {"url": "https://api.github.com/repos/github/github-services/commits/e6759b30fbc8ac840a3fb4fb766d1e77542ba8d2", "message": "Merge pull request #1042 from github/update-contributing-guide\n\nUpdate contributions guide for no new services"}, {"url": "https://api.github.com/repos/github/github-services/commits/c9653edd82dc76d3719aa2dd3b321caa123fb546", "message": "Update contributions guide for no new services"}, {"url": "https://api.github.com/repos/github/github-services/commits/ea5da0658e682d1376cc8d8c71579df908ab3fd6", "message": "Merge pull request #1036 from github/xml-simple-instance-method\n\nFix xml-simple changes to Bamboo"}, {"url": "https://api.github.com/repos/github/github-services/commits/2f75f521cc9c442b8d01251a136570596cd23837", "message": "Use instance methods; follow the example error"}, {"url": "https://api.github.com/repos/github/github-services/commits/1e6c09220633bbd256bccd12ad2ab7731669c887", "message": "Add failing test example"}, {"url": "https://api.github.com/repos/github/github-services/commits/62dfb256824fc334ee081eebac082675cbb002f4", "message": "Merge pull request #1034 from github/bamboo-fix\n\nBamboo XML fix"}, {"url": "https://api.github.com/repos/github/github-services/commits/fa215b1013bdb189e567545db1495237c4f3c53c", "message": "Merge pull request #1030 from miyagawa/patch-1\n\nFix typo in autodeploy doc"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/5602912", "body": "This hasn't gone live yet. :soon:\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/5602912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/7343992", "body": "Can you get rid of this multi-line comment by either deleting it or making it actually test something?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7343992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7344005", "body": "Can you fix the capitalization of GitHub here? :grinning:\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7344005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7560910", "body": "For no Ruby, this is a great PR. There are a few improvements you can make though. They aren't required but I think they'd be helpful.\n\nIf you use `required_config_value` ([doc](https://github.com/github/github-services/blob/master/lib/service/http_helper.rb#L33-L39)), it will raise an error if the configuration value isn't set but it also `strip`s it.\n\nOne way to take advantage of that is to change your `user_uuid` & `api_token` methods to look like:\n\n```\ndef api_token\n  required_config_value(\"api_token\")\nend\n```\n\nWith the `required_config_value`, it will strip it, ensure it's not empty, and then return the value. If it is empty, it'll raise an error we can expose to the end user.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7560910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7764246", "body": "Since you're in the area, we have been preferring people to inherit from `Service::HttpPost` which includes the `HttpHelpers` and has a slightly different payload. It's _The Future_ of services so we're trying to get people over to it more. Take a look at the [CodeClimate](https://github.com/github/github-services/blob/master/lib/services/codeclimate.rb) as an example.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7764246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7771590", "body": "This should probably be `class Service::SkyDeskProjects < Service::HttpPost` and not `ZohoProjects`. Can you update this?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7771590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8442003", "body": "You can actually use `ALL_EVENTS` here which will cover everything we have to offer. :grinning:\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8442003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8442040", "body": "It looks like `data['room']` might also be a required config value? You might want to use the `required_config_value` like you did with `token` to make sure you don't get bad payloads.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8442040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8442124", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8442124/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/9755752", "body": "Did you mean to leave this in? I assume it may break existing functionality?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/9755752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/9802257", "body": "Very, very tiny nit: can you change `Webhook` to `webhook`? Trying to keep it a non-proper noun. Then this is good to :ship:!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/9802257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/14485693", "body": "@lloydwatkin it looks like these options are used in the code below starting on line 38. Can you clean this up and remove it everywhere if you don't want to include this in the initial release?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/14485693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15935342", "body": "So, the events you added here are actually handled under the `IssueEvent`. The 4 new symbols you added here are actually `actions` within the `IssueEvent`. Can you remove these?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15935342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15935407", "body": "Because of my previous mention about these not actually being events, you'll need to actually look at `event.to_s =~ /issue/` as well as the payload's `:action` attribute to see if it's a label/assignment or not.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15935407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15939175", "body": "Not trying to be a pain, but can you also check that the event is `issue` or `pull_request`? Just in case in the future we add a \"label\" or \"assign\" action to a different event. :cake:\n\nSomething like `return if event.to_s =~ /issue|pull_request/ && payload['action'].to_s =~ /label/ && data['quiet_labels']` should work. It's certainly not pretty but...\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15939175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/18601380", "body": "To be _more_ clear, it looks like this adds in the `username` attribute but doesn't add the `password` attribute. I believe it should based on your last comment?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/18601380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19374985", "body": "These should automatically be set by us. Is there a reason you're having to set this again?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19374985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19375017", "body": "Can you please update your PR to remove this change? Once you do, I'll merge this PR.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19375017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19382688", "body": "This is the item hat needs removal or setting to something like `divecloud`.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19382688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19374991", "body": "Is it possible to make this a little more noticeable? We don't use Markdown for these right now but maybe:\n\n```\n**NOTE: This service has been deprecated by the IBM DevOps Service. Please use the IBM DevOps Service for all new integrations.\n```\n\nAlso, is there a blog post or anything describing the deprecation you can link to?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19374991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20360148", "body": "Is there a reason you aren't just asking the for the user's account name and building the URL? It's very likely folks are going to try to use this with other Host URLs or mistyped Hosts which will add support load. Just want to make sure that's required for this service.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20360148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19984895", "body": "Could you please add a test for this? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19984895/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20360714", "body": "Heh, same feedback here as in https://github.com/github/github-services/pull/966#discussion_r20360673. :grinning:\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20360714/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20585963", "body": "I sort of wish this didn't hide the `data` attribute. That's obviously way DRYer but in terms of explicitness for contributors I figured a helper that just compared whatever was passed in would be clearer. Thoughts?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20585963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20670478", "body": "Ah, that's a really good point. Given that the existing helpers exist (and I'd love if more people would use them), I think this is good. :+1:\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20670478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20792134", "body": "Is this a note for you? Unsure if this was meant to be included or not. :grinning: \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20792134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20360673", "body": "Can you clarify this? Maybe: `If you would like to only receive messages for a specific branch, add the name (or partial name) to the \"Filter branch\" option. Otherwise, leave the field blank to receive messages for all branches.`\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20360673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20792430", "body": "Not sure this `return true` is needed here. This just accidental or was it not working without it?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20792430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/21694146", "body": "Is there a reason for this dash here? Sorry to be pedantic but I found it confusing.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/21694146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/23013618", "body": "Is there any way to require customers to have SSL setup? With this verify setting, it would be very simple to send the payload to an insecure server.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/23013618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/23842137", "body": "Should you be testing both of these in a separate test? One for the `push` event and one for the `issue` event?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/23842137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/25898752", "body": "The removal of `ibm_id` will break all existing installations of this service. Could you instead of fallback to `ibm_id` via `data[\"ibm_id\"]` if it's present and add documentation prompting users to move to the new `ibm_login` config variable?\n\nIf you agree with this, definitely add a few tests making sure nothing breaks.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/25898752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/26211993", "body": "It looks like you might want to use the new `config_boolean_false?(\"master_only\")` option. You can see that code here: https://github.com/github/github-services/blob/master/lib/service.rb#L506\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/26211993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/26387874", "body": "@ibmdevops I want to make sure you saw my comment above.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/26387874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29843692", "body": "Can you use `\\z` to denote the end of the string instead of `$`? \n\nCan you also use `\\A` to denote the beginning of the string instead of the `^` here?\n\nThank you!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29843692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29849276", "body": "@Seldaek with the `^` and `$`, it'd be possible to add a newline into the string and still get a correct match since those match per \"line\" and not \"per string\".\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29849276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29865479", "body": "The `/m` flag only changes the meaning of `.` to match newline characters. Otherwise, this is a good way to make sure we don't over match.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29865479/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/32316515", "body": "Any existing services will still send whatever they had configured. Any new services will use the new `ibm_login` fields. It does become quite confusing, unfortunately.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/32316515/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/37369911", "body": "Can you clarify if switching to `topic_arn` will break existing topic definitions?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/37369911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/44787567", "body": "Slightly confused. If the message is less than the maximum size, shouldn't we just send that _one_ message and be done? The `if end` here will still try to do the second set of messages below.\n\nWe also want to make sure the `rescue`s below work for either. I may be worth building a helper method that does the `sns.publish` to clean up the code a fair bit.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/44787567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/60777139", "body": "A test for this would make me feel more confident this change won't adversely impact existing installs.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/60777139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "zzak": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/b50937851b41dad86873ce6d730caac302e5a89a", "message": "Remove CircleCI from Service Hooks integration\n\nThere was a time when we first migrated to the Webhooks API,\nlong ago, that we still accepted callbacks from hooks setup here.\n\nWe have since stopped accepting these hooks.\n\nThis is because there is no way to properly sign them here.\n\nSo the hooks the only way to use our service is with a signed hook which we created.\n\nThis has lead to some confusion, by users who accidentally delete our hook,\nand try to recreate the hook themselves using this service.\n\nWe'd like to avoid support requests for these old hooks."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tombeynon": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/251e42fc9524e8882c316764ade73060ab6e1151", "message": "Configurable endpoint region"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "charliesome": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/92329e737e0eb5c208ba6271dd5a19ef4e7a7885", "message": "Merge pull request #1201 from github/ruby-2.4\n\nRuby 2.4"}, {"url": "https://api.github.com/repos/github/github-services/commits/f149d1740aacd1ac8f5a9a6fbf51c49a647d3218", "message": "bump .ruby-version to 2.4.0"}, {"url": "https://api.github.com/repos/github/github-services/commits/b2132115f5a0329d8582f22fb2c61dfd0c7f2b85", "message": "relax yajl-ruby dependency"}, {"url": "https://api.github.com/repos/github/github-services/commits/91c499b9e49528336eef762fea96684560e0ff74", "message": "Merge pull request #1191 from hachi-eiji/feature/fix-backlog-auth\n\nfix bad URI error, if user_id contains `@`"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "izuzak": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/e33ac4c8389d7875508c36961064d1c7be814779", "message": "Merge pull request #1198 from mikhail/patch-1\n\nUpdate conductor documentation"}, {"url": "https://api.github.com/repos/github/github-services/commits/749a8f02673ad28b53804e8e71e3fb652559c934", "message": "Merge pull request #1188 from Julia-Alexandrova/patch-1\n\nUpdate teamcity"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mikhail": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/3f6a6b99e99e89bedc34febe37bfda2c3fdad770", "message": "Update conductor"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Habbie": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/28540fb619dee40fb2f04ef0f0f95fb08986b255", "message": "text nit"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hachi-eiji": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/552064efb27f78ffdac569f8aed1b8f58a940b24", "message": "fix bad URI error, if user_id contains `@`"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jloh": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/8bf4f6e0868da5db9a0e38cf65979260aff33516", "message": "Allow pushbullet API keys to contain periods\n\nI've tested this endpoint and it still works, API keys can now just contain periods on pushbullets side."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Julia-Alexandrova": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/cb7b2a8fc8ddde9881ce5aff0eb23bcbba75aa3b", "message": "Update teamcity"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MikeMcQuaid": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/08bbfe546f72544bc0d5eea3aea0d7723dc05413", "message": "Merge pull request #1186 from reiz/master\n\nRemove Version"}, {"url": "https://api.github.com/repos/github/github-services/commits/e75164f8ed32b7701f6354d1f47848ac108bd4ad", "message": "Merge pull request #1185 from aitorciki/remove-ducksboard-service\n\nRemove the Ducksboard service"}, {"url": "https://api.github.com/repos/github/github-services/commits/19ad98c4ec6eba9575640ff6b586cba6530ab647", "message": "Merge pull request #1184 from lislis/patch-1\n\nremove `magnum` from travis-ci.com link"}, {"url": "https://api.github.com/repos/github/github-services/commits/68fd85efe1f5a8cac74ff2e695bff783d3383ebb", "message": "Merge pull request #1183 from Zarthus/irc-password-exposure\n\nirc: no longer expose NickServ password in security settings"}, {"url": "https://api.github.com/repos/github/github-services/commits/b45201ffe5b8abdb6779d70a970a3b6464473be3", "message": "Merge pull request #1181 from robinbobbitt/federated\n\nUpdate ibmdevopsservices hook doc for federated"}, {"url": "https://api.github.com/repos/github/github-services/commits/6855982184e1bfc85e447a74557bd212ab74f1f7", "message": "Merge pull request #1180 from github/remove-socialcast-service\n\nRemove the socialcast service"}, {"url": "https://api.github.com/repos/github/github-services/commits/8d4339daad8d17bccf35b8f074793b6c94eff5b6", "message": "Merge pull request #1179 from github/remove-slatebox-service\n\nRemove the slatebox service"}, {"url": "https://api.github.com/repos/github/github-services/commits/dfde7c7ccb4e1c50f0468e1699d254d65ddb7ee4", "message": "Merge pull request #1178 from github/remove-robustest-service\n\nRemove the robustest service"}, {"url": "https://api.github.com/repos/github/github-services/commits/23190ff023402b0db5284ee2c5522e7f3ee9743d", "message": "Merge pull request #1177 from github/remove-nodeci-service\n\nRemove the nodeci service"}, {"url": "https://api.github.com/repos/github/github-services/commits/9bdc24111603db23b9315926a7d641c0bb683045", "message": "Merge pull request #1176 from github/remove-nhook-service\n\nRemove the nhook service"}, {"url": "https://api.github.com/repos/github/github-services/commits/7d73dac72c4336f5488e7b9b010cfd3e5a1f9833", "message": "Merge pull request #1175 from github/remove-leanto-service\n\nRemove the leanto service"}, {"url": "https://api.github.com/repos/github/github-services/commits/1b2e9596515304ad2d332320e5c24d8b971b1696", "message": "Merge pull request #1174 from github/remove-kickoff-service\n\nRemove the kickoff service"}, {"url": "https://api.github.com/repos/github/github-services/commits/509f5a75facfea614c34c5bff915f529c16bbb0d", "message": "Merge pull request #1173 from github/remove-kato-service\n\nRemove the kato service"}, {"url": "https://api.github.com/repos/github/github-services/commits/d3bddaf4472cfc6a9ffdd83229fe81fe4c88c80f", "message": "Merge pull request #1172 from github/remove-jeapie-service\n\nRemove the jeapie service"}, {"url": "https://api.github.com/repos/github/github-services/commits/2a98eee10076ee4c95d73217aeb22288c5402a7d", "message": "Merge pull request #1171 from github/remove-grmble-service\n\nRemove the grmble service"}, {"url": "https://api.github.com/repos/github/github-services/commits/b26cabc68d8f5ceac8453167d16b39b29f1a4c6b", "message": "Merge pull request #1170 from github/remove-bugly-service\n\nRemove the bugly service"}, {"url": "https://api.github.com/repos/github/github-services/commits/0f36e851d705c59a28421c727c55131fb506269b", "message": "Merge pull request #1169 from github/remove-buddycloud-service\n\nRemove the buddycloud service"}, {"url": "https://api.github.com/repos/github/github-services/commits/3ef7c6f831c5155912c79f569091cdc9fad9b420", "message": "Merge pull request #1168 from github/remove-blimp-service\n\nRemove the blimp service"}, {"url": "https://api.github.com/repos/github/github-services/commits/16e7c9c0f0cfc77c1ddd106b77d31b616d3f50e7", "message": "Merge pull request #1167 from github/remove-basecamp_classic-service\n\nRemove the basecamp_classic service"}, {"url": "https://api.github.com/repos/github/github-services/commits/56763ce606e475a0e44cb81549dacbdb1618bec5", "message": "Merge pull request #1166 from github/remove-apoio-service\n\nRemove the apoio service"}, {"url": "https://api.github.com/repos/github/github-services/commits/133ade3d70b6fd3bc617dc3d29e3fc2ac01ba859", "message": "Merge pull request #1165 from github/remove-agile_bench-service\n\nRemove the agile_bench service"}, {"url": "https://api.github.com/repos/github/github-services/commits/f408659a5f25f3715896f90002efbe19ad226c0c", "message": "Merge pull request #1161 from zmingxie/gocd_fix\n\nAdd the new header for GoCD service API"}, {"url": "https://api.github.com/repos/github/github-services/commits/fbc0db24b8b7685b2058462181d928a5f2a0a448", "message": "Merge pull request #1159 from github/autodeploy-chomp-slash\n\nauto_deploy: remove / from end of github_api_url."}, {"url": "https://api.github.com/repos/github/github-services/commits/292b25b307a23e2eced58bc82d6c90d9d6127cd6", "message": "auto_deploy: remove / from end of github_api_url.\n\nCloses https://github.com/github/internal-developer.github.com/pull/943."}, {"url": "https://api.github.com/repos/github/github-services/commits/d2778cd6204f4b429b27cb8b6f8bd2fea59a03f7", "message": "Remove old AWS SDK gem."}, {"url": "https://api.github.com/repos/github/github-services/commits/2690ba86146672bc34386001da0fd71521120daf", "message": "Tweak Bugzilla doc wording."}, {"url": "https://api.github.com/repos/github/github-services/commits/91242b858bf66a36d009f7648485328a034c2ccc", "message": "Merge pull request #1155 from ShockwaveNN/patch-1\n\nAdd info about changing `commentonchange_resolution` option for bugzilla"}, {"url": "https://api.github.com/repos/github/github-services/commits/03040e914a315993b47460a483a759301e6256f1", "message": "Merge pull request #1156 from dgw/rip-friendfeed\n\nRemove FriendFeed hooks"}, {"url": "https://api.github.com/repos/github/github-services/commits/f4e778ae1a7cde21d6e6b1dd82abca624f0f9900", "message": "Merge pull request #1152 from github/autodeploy-fixes\n\nautodeploy: fix some bugs."}, {"url": "https://api.github.com/repos/github/github-services/commits/5d746ea4c60611e31037053dad093a2067f5560d", "message": "Merge pull request #1153 from github/improve-documentation\n\nImprove documentation"}, {"url": "https://api.github.com/repos/github/github-services/commits/befa3d46acbb2ffb1e01d41d7931dce9c8701ba1", "message": "Add payload_ref test."}, {"url": "https://api.github.com/repos/github/github-services/commits/54ede5892d6440e46a00af687720e3efa66e62f0", "message": "README: move \"no feature PRs\" to current status."}, {"url": "https://api.github.com/repos/github/github-services/commits/ab2c6d18afa3df169220bf6c7a4f5c616cfbe10c", "message": "autodeploy: fix some bugs.\n\n- Don\u2019t show status_contexts as it doesn\u2019t actually do anything.\n- Correctly handle the payload ref.\n\nCloses #1046.\nCloses #1129."}, {"url": "https://api.github.com/repos/github/github-services/commits/9ec8ff5eb59601c6d16ee7faf5e6551be6cf28c1", "message": "Improve documentation\n\nMake it (extremely) clear what types of pull-requests we will and won\u2019t\naccept."}, {"url": "https://api.github.com/repos/github/github-services/commits/81864a39bc318f6c8a4f359ad1f40239e3f95e24", "message": "Merge pull request #1151 from glasnt/topic/hipchat_doco\n\nUpdate Atlassian documentation link"}, {"url": "https://api.github.com/repos/github/github-services/commits/e1d94d27d86615e5a25e64b35624653c7856fe2c", "message": "Merge pull request #1134 from github/twitter-asterisks-again\n\ntwitter: use different character for asterisks."}, {"url": "https://api.github.com/repos/github/github-services/commits/052ed7501681d9a165d7b0923a730cfeb0d3af4a", "message": "twitter: use different character for asterisks.\n\nThis should get around the failed escaping attempt previously and allow\nthis character to be used in statuses."}, {"url": "https://api.github.com/repos/github/github-services/commits/8dc2328d0d97005e6431c7ca8c7de9466e38567e", "message": "Merge pull request #1133 from github/twitter-wildcard\n\ntwitter: encode asterisks correctly."}, {"url": "https://api.github.com/repos/github/github-services/commits/d86d42148f6d89cfb5287e3e141f98e276e516ef", "message": "twitter: encode asterisks correctly.\n\nSource: https://twittercommunity.com/t/asterisk/6343"}, {"url": "https://api.github.com/repos/github/github-services/commits/0ef9f693258c1f04cb67cd00637a9c0c065e0361", "message": "twitter_test: add failing asterisk escape test."}, {"url": "https://api.github.com/repos/github/github-services/commits/f9217746698ca1e223025ae95132fddf4ae5daeb", "message": "twitter_test: assert_match gives nicer failures."}, {"url": "https://api.github.com/repos/github/github-services/commits/02b755e083969049d8360362e525ecb4061e7a95", "message": "twitter_test: remove trailing whitespace."}, {"url": "https://api.github.com/repos/github/github-services/commits/3d8392ed381f83fb50c09ad7e43b6127e21192e6", "message": "twitter: move comment for readability."}, {"url": "https://api.github.com/repos/github/github-services/commits/2f6a46aaa2a4a847d6be70a281f230cc957abd91", "message": "twitter: remove trailing whitespace."}, {"url": "https://api.github.com/repos/github/github-services/commits/73aa1dd4e3505b5df3995c8fa21bd57cbf4dab84", "message": "`bundle install` Gemfile.lock changes."}, {"url": "https://api.github.com/repos/github/github-services/commits/97422992bc7a447058cc4bb020068ce8f645f5a3", "message": "Merge pull request #1128 from philfreo/patch-1\n\nFixing capitalization of CircleCI"}, {"url": "https://api.github.com/repos/github/github-services/commits/ac490170f6fd81225b8cbb38a4180a259807415d", "message": "Merge pull request #1105 from hudl/aws-sns-message-size-limit\n\nAmazonSNS service maximum message size"}, {"url": "https://api.github.com/repos/github/github-services/commits/0aa25b0a89cbc9359b7a7ac108400c5f94711099", "message": "Merge pull request #1120 from Tonkpils/fix&bug\n\nEnsure asana payload is www-form encoded"}, {"url": "https://api.github.com/repos/github/github-services/commits/930d4c0566fd6a03621fe3415c29eb4ce500b9f2", "message": "Merge pull request #1127 from github/gitio-ssl\n\nMake Git.io use HTTPS by default."}, {"url": "https://api.github.com/repos/github/github-services/commits/f0b0a94439a302a94f55e813c7d30615ffe6eb99", "message": "Merge pull request #1116 from Planbox/planbox-updates\n\nUpdate Planbox urls"}, {"url": "https://api.github.com/repos/github/github-services/commits/cc26371d5b8e181a3ddd0e4a9e247e510d0df919", "message": "Use Ruby 2.1.7 everywhere."}, {"url": "https://api.github.com/repos/github/github-services/commits/239f331dcbff5d98de92eb38643287f2386a2e75", "message": "Make Git.io use HTTPS by default.\n\nA little extra security never hurt anybody."}, {"url": "https://api.github.com/repos/github/github-services/commits/d084fe35ad456c7ce77ed6400bf695ae959afd07", "message": "Travis CI: use container-based infrastructure.\n\nIt's faster."}, {"url": "https://api.github.com/repos/github/github-services/commits/a7b9b2cc3f9d37cd3bc60a93df9b250feea62385", "message": "Add missing github-services gem."}, {"url": "https://api.github.com/repos/github/github-services/commits/bab7cf59a8b1a5ca81aa1a4bb0b9bb287271794b", "message": "Merge pull request #1106 from mikemcquaid/gemfile-bootstrap-update\n\nUpdate Gemfile.lock, bootstrap."}, {"url": "https://api.github.com/repos/github/github-services/commits/7e0e5e14436eddddf7ce69b65d92b811a32dd9c0", "message": "Update Gemfile.lock, bootstrap.\n\nThis fixes the build on 10.11 and gives a clean `git status` after\n`bundle install`."}, {"url": "https://api.github.com/repos/github/github-services/commits/e38ed971baa6e32eca168e4e254c41e9eb2a67a4", "message": "Merge pull request #1102 from chrismcmacken/patch-1\n\nReplacing the overly permissive policy"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/44180417", "body": "Can you change this to:\n`You will need to replace \u201cus-east-1\u201d if you are using a different region, and replace \u201c123ACCOUNTID\u201d with your AWS account ID that is found on your Account Settings page.` from the AWS docs? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/44180417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/46842281", "body": "Could you leave this named `url`? \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/46842281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/46842584", "body": "Ah, never mind, I see. Ignore me.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/46842584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/46842627", "body": "Mind leaving these as `.blank?` checks?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/46842627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/56745231", "body": "I think you can probably leave this at `1.66.0` actually and just tweak the `gemspec` below. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/56745231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/56745339", "body": "Might want to tweak the indent on this line so it's aligned and add a trailing `,` just so more lines can be modified without a diff.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/56745339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/56745345", "body": "This bit is correct though :+1: \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/56745345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/61648508", "body": "Added.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/61648508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/61640973", "body": "`If using X option you should disable the`commentonchange_resolution`option in Bugzilla's configuration` or similar\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/61640973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/61641087", "body": "`Without this option disabled when X sets bugs to the RESOLVED FIXED status this will fail with the message You have to specify a comment when changing the Resolution of a bug from (empty) to FIXED`\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/61641087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "reiz": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/6b4126880c3f1e0e567cabc6a538af442d4236b6", "message": "Remove Version"}, {"url": "https://api.github.com/repos/github/github-services/commits/55a8890763dff31aa79fbd49638b70c1653cd285", "message": "Update the instructions for VersionEye"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/7460020", "body": "OK. Will do so. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7460020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "lislis": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/6ee93e7664f2f9c51a9383089a7625837dd201c8", "message": "remove `magnum` from travis-ci.com link\n\nWe're no longer using `magnum.travis-ci.com`. It redirects do `travis-ci.com` anyway and the magnum might just confuse people."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Zarthus": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/4273b2a3becc3148d93c5eaf3f8075b1d350386c", "message": "irc: no longer expose NickServ password in security settings"}, {"url": "https://api.github.com/repos/github/github-services/commits/4ad8e4bea19dfefdd996ffb6e435d93271f87c91", "message": "irc.rb: Properly handle getting repo owner in PRs\n\nPreviously, it was assumed payload[\"repository\"][\"owner\"][\"name\"] was\nconstant for all repositories. It was noticed that this is not the case,\nand that the pull request event sends payload[\"repository\"][\"owner\"][\"login\"]\ninstead.\n\nA new method has been added to retrieve the repository owner, and\nthe tests have been amended to be more strict towards matching what\nthe realname may and may not contain.\n\nfixes #1096, ref #1070"}, {"url": "https://api.github.com/repos/github/github-services/commits/8ebafde5ab3c4f9967b9b194a473e8ca3d42f77b", "message": "irc service: Remove unnecessary #clone call on payload in tests."}, {"url": "https://api.github.com/repos/github/github-services/commits/605d76c8392913bec8d06968bb59cafc0f0f9d71", "message": "irc service: compare repo_private == false, add false to test payload for PushHelpers"}, {"url": "https://api.github.com/repos/github/github-services/commits/31b0c29bdaad58d0efd39edfc22e06a8fc1a0d8c", "message": "irc service: compare repo_private == false ? show repo name : do nothing\n\nPrevents disclosing the name if repo_private would ever be nil.\n\nFixes incorrect assumption in cd557c1"}, {"url": "https://api.github.com/repos/github/github-services/commits/cd557c1f93bc3967680c8037e0e5366330b5eed1", "message": "irc service: compare repo_private == true\n\nPrevents disclosing the name if repo_private would ever be nil."}, {"url": "https://api.github.com/repos/github/github-services/commits/f695311650a2017d4ee519b07aef531cf238f808", "message": "irc service: use the payload repo->private rather than sending an individual HTTP request."}, {"url": "https://api.github.com/repos/github/github-services/commits/d28c7acf72ec38ca62f4d38080f8ce7b593f74a5", "message": "irc service: The server returns json in string format, not a hash.\n\nCorrects the tests and the main repo_public? method"}, {"url": "https://api.github.com/repos/github/github-services/commits/fe8f8f0f715dda5856749ee0b264ad83ba62070a", "message": "irc service: Hide repo name if private repo\n\nThis commit adds a public_repo? method to irc.rb, checking if the repository can be found from GitHub's API.\n\nAdditionally, tests were added to ensure behaviour on both cases happens correctly."}, {"url": "https://api.github.com/repos/github/github-services/commits/b6421ade98c70c42736ba7639ea5691700c76df6", "message": "irc service: Ensure realname is and test checks against owner, not sender\n\nTakes feedback from PR in account, thanks @jasonrudolph!"}, {"url": "https://api.github.com/repos/github/github-services/commits/0dbd1722f6bc5b56c921416bb9175e54550eca70", "message": "irc service: Add test for including repo name & owner in IRC realname"}, {"url": "https://api.github.com/repos/github/github-services/commits/2438ee27c35af9c16f3de31a1c702fa3caa5cf3f", "message": "irc service: Move the constructing of a realname to its own method."}, {"url": "https://api.github.com/repos/github/github-services/commits/20c8ccedc73a0bee1cf8b46c40c9b1bf3218f2f8", "message": "irc service: Append GitHub username and repository to realname\n\nThis gives network and channel staff a pointer in case a github bot is at the wrong channel."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/36476216", "body": "Yes, I agree.\n\nI've added a new commit doing exactly that :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36476216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36671771", "body": "I wasn't certain. I couldn't find any other service doing a similar check, and the test payloads did not seem to contain them. \n\nHowever, I wrote a patch to verify and my tests did not fail. And it seems to function properly, I've added the commit to the PR.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36671771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36749250", "body": "When I wrote https://github.com/Zarthus/github-services/commit/f695311650a2017d4ee519b07aef531cf238f808 the tests seemed to pass, further verified by https://github.com/Zarthus/github-services/blob/master/lib/service/events/status_helpers.rb#L89 and https://github.com/Zarthus/github-services/blob/master/lib/service/events/deployment_helpers.rb#L34 having private fields, I probably just looked over them. \n\nI'm not entirely sure why the commit is not showing up in this PR. Though. Is there a way to tell github to perform a re-check?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36749250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36758099", "body": "Very nicely spotted. I've pushed the commit.\n\nEdit: On second thought, using the ruby interactive shell, that doesn't seem to change anything. I'll update with another commit\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36758099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36788640", "body": "You're right. It seems that was absolutely not necessary.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36788640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "robinbobbitt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/861ae62458d7802ea273d6c37c5826d37318117c", "message": "minor edit\n\nchange enterprise login to authentication"}, {"url": "https://api.github.com/repos/github/github-services/commits/d521a736f2f64b1f034f1346567cbd964ab47382", "message": "Update ibmdevopsservices hook doc for federated"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "seemakamath": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/0e1714ca508123108f7dde2a237ef4c4cba7a661", "message": "Remove the socialcast service"}, {"url": "https://api.github.com/repos/github/github-services/commits/0da9c0e7a70f459eb186b797c16baddbd2c2377b", "message": "Remove the slatebox service"}, {"url": "https://api.github.com/repos/github/github-services/commits/8e6c19de1bf0ecb45270a7d3d70c292d381a987e", "message": "Remove the robustest service"}, {"url": "https://api.github.com/repos/github/github-services/commits/81a7114fbc368d0f36892cd8a2fc0d9266e279bf", "message": "Remove the nodeci service"}, {"url": "https://api.github.com/repos/github/github-services/commits/339eb85464645e3d722789f047ddfd321e13d192", "message": "Remove the nhook service"}, {"url": "https://api.github.com/repos/github/github-services/commits/c51406aa16db4de378cc9b3530f95bcc5d28b472", "message": "Remove the leanto service"}, {"url": "https://api.github.com/repos/github/github-services/commits/9ac5833d56d421287622d5a290756691257cc89b", "message": "Remove the kickoff service"}, {"url": "https://api.github.com/repos/github/github-services/commits/253e08cb4f616511e4c647cb7d3f98800f14c6b1", "message": "Remove the kato service"}, {"url": "https://api.github.com/repos/github/github-services/commits/1ef6e3f85980fb99bbccc5cec5ca51fdd07aeefc", "message": "Remove the jeapie service"}, {"url": "https://api.github.com/repos/github/github-services/commits/672caeab2776e9e3cd1b99e5de80b75b991b1e05", "message": "Remove the grmble service"}, {"url": "https://api.github.com/repos/github/github-services/commits/9b957e90de9611ec897563b6a019b0eed0ffa1b4", "message": "Remove the bugly service"}, {"url": "https://api.github.com/repos/github/github-services/commits/2ef6b49c4a9ab879d90e1c4e9105e0dc7463f8b5", "message": "Remove the buddycloud service"}, {"url": "https://api.github.com/repos/github/github-services/commits/a670be5c27a70101da74453761b802eeb9504306", "message": "Remove the blimp service"}, {"url": "https://api.github.com/repos/github/github-services/commits/dcdd7019f039b6228708d30864ab211f0c821ee2", "message": "Remove the basecamp_classic service"}, {"url": "https://api.github.com/repos/github/github-services/commits/f4d4b5f408864762b6c5373dcd8cedc19edb0204", "message": "Remove the apoio service"}, {"url": "https://api.github.com/repos/github/github-services/commits/9261f64cdfc5e069fef2d31ce53a21ba0facff32", "message": "Remove the agile_bench service"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zmingxie": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/65123d62d46231dca2dc2f3bf31a4be5b5ba2c28", "message": "Adding the new header for GoCD service API"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "petros": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/63f35971a1afd3ac8beae17160121cde20304a1a", "message": "Merge pull request #1160 from github/fix-contributing-link\n\nFix contributing link in README"}, {"url": "https://api.github.com/repos/github/github-services/commits/4023f8e34ff35ec1ed521353aba6816f0baf6622", "message": "Fix contributing link in README"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ShockwaveNN": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/f6e3afca6e8a01bcb9f32bf87e93bbd20818e2ad", "message": "Add info about changing `commentonchange_resolution` option for bugzilla"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dgw": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/2a14a2af22f8c489aff60b976846060e0897872b", "message": "Remove FriendFeed hooks, dead for over a year"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "glasnt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/77f86cd12352497310ce93cd7838adfb47557b38", "message": "Update Atlassian documentation link"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/59679391", "body": "Whoops, my bad. I'll amend the commit.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/59679391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/59789649", "body": "Commit amended.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/59789649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jwhitcraft": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/224a3a603bccba6a18899635c69558d8fb7b898c", "message": "Fix to send X-GitHub-Event to SQS\n\nSend the X-GitHub-Event to SQS as a message attribute so that users of SQS can know when event is in the Queue\n\nFixes #1121"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/54767438", "body": "@bswinnerton, I just checked and i was using 1.66 locally which supports it but, 1.27.0 doesn't.  I've updated the code to use the aws-sdk-core (same as sns) and now it works correctly.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/54767438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Seldaek": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/736bf4ec63cce77e7725b4bf7722b4dcf3190626", "message": "Add test for empty token"}, {"url": "https://api.github.com/repos/github/github-services/commits/e222a69988ee5bb5b94625bc0205e2aee2e0bd8b", "message": "Make token optional"}, {"url": "https://api.github.com/repos/github/github-services/commits/cec2e825f94855882905ec858aadba18c5b8ef1a", "message": "Update packagist instructions"}, {"url": "https://api.github.com/repos/github/github-services/commits/e5f87ac47d4698ff319ec3f88cd5d9a517733974", "message": "Update regex to use absolute anchors"}, {"url": "https://api.github.com/repos/github/github-services/commits/19967bb34e9b29ddf905c4a0571dbcc5bb595c40", "message": "Verify TLS certs"}, {"url": "https://api.github.com/repos/github/github-services/commits/3059adcea61c1ddaf79e804d2f5240354db970fc", "message": "Update packagist service to use TLS"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/29843773", "body": "I don't mind doing it, but I am curious why? :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29843773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29843973", "body": "It's done BTW\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29843973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29849418", "body": "That's only true with the `m` modifier though? Unless ruby has that on by default, I don't know it much :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/29849418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "darkphnx": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/c391b10a27e0cb5537dabdbb2f579c523ccba885", "message": "Add an X-Github-Event header to DeployHQ service.\n\nTo make DeployHQ more compatible with Github webooks (now the reccomended way\nof integrating), Deploy now expects an X-Github-Event push header to be present."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "felixonmars": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/58f0ed37fee172aaeae3847d3e7fd19f78b6dab1", "message": "Fix a typo: langauge -> language"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "philfreo": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/2e61d33ec73a55399b4542881605655873787ef1", "message": "Fixing another typo"}, {"url": "https://api.github.com/repos/github/github-services/commits/7a7c08ea1e5b3b02708553df4b9bdde76d2268a3", "message": "Fixing capitalization of CircleCI\n\nI think I have brand capitalization OCD"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "damtur": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/d9875503297bf81ec5a158c323667f34c52ba80b", "message": "Skip failing tests as those are failing because of outdated aws credentials."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Tonkpils": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/80671511a14238c3a09e9ddff1fc0ea80f6a030f", "message": "Ensure asana payload is www-form encoded\n\nThis fixes the issue where the '&' symbol would be taken as a separator\nof the payload rather than payload data. Asana decodes the payload and\ndisplays it without truncating after the '&'."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mateomurphy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/6f08ea0675a510a2d9a4b21696cf8b40097afb57", "message": "Update Planbox urls"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Rostepher": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/e779a49a8aa61ed21da9a2e32dea1f0d38aeb42a", "message": "Refactored new SNS message splitting functionality and added some testing to make sure it doesn't produce an error."}, {"url": "https://api.github.com/repos/github/github-services/commits/54c1d7ff78b55bea788c7c0ddc4d60e5f457f295", "message": "Service::AmazonSNS#publish_to_sns now checks for the maximum message size of 256K. If the message exceeds the maximum size, it will split the payload into parts with some ordering information and an md5 digest of the original payload."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chrismcmacken": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/3856c4048a499a53bec119e1a599d2375304163d", "message": "PR Feedback"}, {"url": "https://api.github.com/repos/github/github-services/commits/9f8b302a06d5c462a5982080eca3572c3349d434", "message": "Replacing the overly permissive policy\n\nReplacing the overly permissive policy with the correct minimum privileges required for code deploy"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "keavy": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/eeca59b78075dd9423b208d2a2aa51721e1078bd", "message": "Merge pull request #1100 from Zarthus/fix/irc-realname-on-pr\n\nirc.rb: Properly handle getting repo owner in PRs"}, {"url": "https://api.github.com/repos/github/github-services/commits/6a5eebf4af4ed02e3968e9de7ca5d8f1edb8059d", "message": "Merge pull request #1098 from gudmundur/heroku-dashboard-rename\n\ndashboard-next -> dashboard"}, {"url": "https://api.github.com/repos/github/github-services/commits/68b4ee3db00a912abc234009d76dc307321dcb8e", "message": "Merge pull request #1097 from DanielDraganov/master\n\nKanbanize Service Doc Update"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gudmundur": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/32b258b9e59c6bc8b33f0569c9222be17254b819", "message": "dashboard-next -> dashboard"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "DanielDraganov": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/5c89fc9bd9e58f813f573b40548879caa8114ba4", "message": "Kanbanize Service Doc Update"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/23843384", "body": "I created two tests because the cases are different.\nFor the push case, we check that when a branch filter is applied the test will pass for the provided repo ref.\nFor the issue event we don't provide a \"ref\" property in the payload(which was the reason the service was failing) and I check this in a separate test case.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/23843384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jasonrudolph": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/10bef14cf5a27ce3a1232719b4bad22f96ef3275", "message": "Use consistent formatting for Zulip docs\n\nUse consistent formatting for example values and default values."}, {"url": "https://api.github.com/repos/github/github-services/commits/65c5e4bab1bb1c548a02e050cab51f912ce343b9", "message": "Use consistent punctuation in Zulip docs"}, {"url": "https://api.github.com/repos/github/github-services/commits/60787d20b77a5ad1ab9be3c19eb443c680b2f6a9", "message": "Merge pull request #1094 from timabbott/patch-1\n\nDocument alternative endpoint field needed for non-zulip.com servers."}, {"url": "https://api.github.com/repos/github/github-services/commits/60b7c9c2ecd9f650de89e92b92601dedfc161a39", "message": "Merge pull request #1070 from Zarthus/patch/irc-realname-alter\n\nirc service: Append GitHub username and repository to realname"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/36466534", "body": "@Zarthus: Similar to the approach you proposed in https://github.com/github/github-services/issues/1016#issue-55607375, I recommend extracting this logic into an intention-revealing method.\n\nWhat's a good name for the method? Perhaps `irc_realname`?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36466534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36480399", "body": "In the [payload used in the tests](https://github.com/github/github-services/blob/8ac127e018e2b8eedc14e3d823605cc2fbcfff1a/lib/service/events/helpers/helpers_with_meta.rb#L12-L16), the repository is \"mojombo/grit\". \"defunkt\" is the sender, not the repository owner. I think you want your assertion to look like [this](https://github.com/github/github-services/compare/2438ee27c35af9c16f3de31a1c702fa3caa5cf3f...8ac127e018e2b8eedc14e3d823605cc2fbcfff1a#diff-c5ef582e0e679b233de71e8fa43f5254R299).\n\n``` ruby\nassert_includes msgs, \"USER n 8 * :GitHub IRCBot - mojombo/grit\"\n```\n\nAnd to make that work, I think you want the implementation to look more like [this](https://github.com/github/github-services/compare/2438ee27c35af9c16f3de31a1c702fa3caa5cf3f...8ac127e018e2b8eedc14e3d823605cc2fbcfff1a#diff-df7cb3c7def6051de45c5de7d5b4b8a8R144):\n\n``` ruby\ndef irc_realname\n  repo_owner = payload[\"repository\"][\"owner\"][\"name\"]\n  repo_name = payload[\"repository\"][\"name\"]\n\n  \"GitHub IRCBot - #{repo_owner}/#{repo_name}\"\nend\n```\n\nWhat do you think?\n\nFeel free to cherry-pick any of [these commits](https://github.com/github/github-services/compare/2438ee27c35af9c16f3de31a1c702fa3caa5cf3f...8ac127e018e2b8eedc14e3d823605cc2fbcfff1a#diff-c5ef582e0e679b233de71e8fa43f5254R299) if you like.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36480399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36747756", "body": "> Do you all think the `private` field will exist for all events that contain a `repository`?\n\nYes. You can see all the possible event types [here](https://github.com/github/github-services/blob/2e886f407696261bd5adfc99b16d36d5e7b50241/lib/service.rb#L79-L83). And you can see an example payload for each event type [here](https://developer.github.com/v3/activity/events/types/).\n\n> I couldn't find any other service doing a similar check, and the test payloads did not seem to contain them.\n\nIt looks like the test payloads are incomplete. I recommend adding the `private` field to the test payload to support the the tests for this pull request. That will eliminate the need to make an API request to determine whether the repository is public or private.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36747756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36784297", "body": "You don't need to make a clone of the payload. Each call to `#payload` returns a new object. See:\n- https://github.com/github/github-services/blob/605d76c/test/helper.rb#L37-L40\n- https://github.com/github/github-services/blob/2e886f4/lib/service/events/push_helpers.rb#L171-L226.\n\n@Zarthus: Can I talk you into removing the `#clone` invocation from this test and the one below?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/36784297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "timabbott": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/01151191350b87b7accecfa4c437f15b1c0355dd", "message": "Document alternative endpoint field needed for non-zulip.com servers."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kevinsawicki": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/f804613a178f0f46acc53eded85308d5db25929a", "message": "Merge pull request #1089 from davegaeddert/patch-1\n\nFix small typo on docs/awscodedploy"}, {"url": "https://api.github.com/repos/github/github-services/commits/94cad017e24e2eb6c4821e4634d4e7b90391ad5b", "message": "Merge pull request #1087 from LukePeterson/patch-1\n\nFix AmazonSNS typo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davegaeddert": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/045aadd8627ee52a9ac83d5acbd03f7f22ac721a", "message": "Fix small typo on docs/awscodedploy"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "LukePeterson": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/c9cb4b367051f4b30342595c9d88b69580c85e30", "message": "Fix typo"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pengwynn": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/9eacf3f0ccfa37b1a126ba58fc6138eac3c604d1", "message": "Merge pull request #1082 from github/addressable-two-three\n\nBump Addressable gem"}, {"url": "https://api.github.com/repos/github/github-services/commits/724a987b8e485edc58d9555ddb91d16b780d48af", "message": "Bump Addressable gem"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "parshap": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/02e86b87473423eee683387cb5ae546bd198926b", "message": "Twitter: Match only a single character\n\nDon't need to match the entire word, just the first word character after\nthe `@`."}, {"url": "https://api.github.com/repos/github/github-services/commits/3a47b1c251c93a99404dd393140124f309ca05fb", "message": "Twitter: Match \uff20 U+FF20 FULLWIDTH COMMERCIAL AT\n\nTwitter matches the U+FF20 character (\uff20) in addition to the normal\nASCII @ character.\n\nSee https://github.com/twitter/twitter-text/blob/141759ce97926772d02c257dead8d27379d16dbb/rb/lib/twitter-text/regex.rb#L118"}, {"url": "https://api.github.com/repos/github/github-services/commits/a1498ec29871ece4dace73fcb002ff106727a536", "message": "Twitter: Better match @ mentions\n\nChange regex to be more specific and look for the \"@\" symbol followed by\na word character instead of any non-space character.\n\nAdd tests for this behavior.\n\nSee https://github.com/github/github-services/pull/1075/files#r37456732"}, {"url": "https://api.github.com/repos/github/github-services/commits/a7508936478342f8d1cb16596b12c1bc3ea21b60", "message": "Twitter: Preserve commit message whitespace\n\nWhen tweeting commit messages, preserve the original commit message\nwhitespace and tweet it as-is.\n\nPreviously, String#split(\" \") was used to process words, which splits on\n*any* whitespace and with runs of contiguous whitespace characters\nignored [1]. When the split array was turned back into a string with\nArray#join(\" \"), original whitespace characters were lost and replaced\nby a single space character.\n\nNow, String#gsub and a regular expression is used to process words,\nwhich will preserve original whitespace.\n\nFixes #959.\n\n[1] http://ruby-doc.org/core-2.2.0/String.html#method-i-split"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/37461331", "body": "You're right, `[^ ]` is definitely too specific. I looked at what Twitter themselves look for when matching mentions, and it looks like the `@` [must be followed by `[a-zA-Z0-9_]{1,20}`](https://github.com/twitter/twitter-text/blob/master/rb/lib/twitter-text/regex.rb#L122).\n\nI changed the regex to use `[^[:word:]]` and added tests for this behavior.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/37461331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "leelynne": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/2c13bf76a40dd8cfa338c4996b1930188c733f28", "message": "Update Amazon SNS publisher to pass the event type as message attribute."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/37377373", "body": "The original code was also using topic arn (the config just isn't called topic arn) so there is no change.  It was using:\n\n``` ruby\nns = AWS::SNS.new(config(cfg['aws_key'], cfg['aws_secret']))\ntopic = sns.topics[cfg['sns_topic']]\n```\n\nsns.topics is a topic collection indexed by the topic arn - https://docs.aws.amazon.com/AWSRubySDK/latest/AWS/SNS/TopicCollection.html\n\nThe config could be called cfg['sns_topic_arn'] to better reflect what it is.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/37377373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "refiito": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/1a9033d8cae9f4d73239c40125afcf041f87e073", "message": "fixed tests for Toggl"}, {"url": "https://api.github.com/repos/github/github-services/commits/3dde26650a01d265bca90576c2279e7307731c1d", "message": "possible port of Toggl service to Toggl API version 8"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jonrohan": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/16c6e080ee3dda16174e9bcbb050a045dc743646", "message": "Merge pull request #1068 from mrmanc/master\n\nFixes typo: verfiy_ssl -> verify_ssl"}, {"url": "https://api.github.com/repos/github/github-services/commits/4c67393cf52e6b1ff20377cd5fd23792da5359c7", "message": "Merge pull request #1062 from magical/master\n\nirc: fix grammar"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mrmanc": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/03db1fcf7cfa24e80f7d0af5333f9935d80bf6e5", "message": "Fixes typo: verfiy_ssl -> verify_ssl"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bkeepers": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/e37ebf8601dc645dfc7c3882fee8f60550865abb", "message": "Merge pull request #1065 from github/code-of-conduct\n\nAdd code of conduct to contributing guidelines"}, {"url": "https://api.github.com/repos/github/github-services/commits/7d388d90656be0bce36824cb5e80b965354b12e4", "message": "Add code of conduct to contributing guidelines"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xavierdecoster": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/f2d7733826ea20e1d3bd3b06f1b77cc2f688026b", "message": "Removed term 'above'\n\nIt was incorrectly indicating the Hook URL field would be above the instructions, whilst now it is below :)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "magical": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/f840b9504968ef472bfbe47d16d06eee1f79ffaf", "message": "irc: such grammer\n\nso verb"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "firegurafiku": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/98ab978fbd99a64d179e77635abe70eb1104d86c", "message": "Improve documentation for OBS hook.\n\nRewrite in a bit more natural language, explain parameters in\ndetails, give some examples for their values."}, {"url": "https://api.github.com/repos/github/github-services/commits/c47e9e7316ff0eef059793238b4fc494ca606d52", "message": "Support for refs filtering in OBS\n\nIntroduce a new configuration parameter \"refs\" which contains a list\nof wildcard patterns for Git reference. Hook should only trigger build\nif the reference being pushed satisfy at least one of this patterns.\n\nThis would be useful when user do not want to rebuild their packages\non every commit pushed, but only for specific branches or tags."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ibmdevops": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/2b73b5f7dc5089c6873049a8f112740299bed59a", "message": "Updated override server url description"}, {"url": "https://api.github.com/repos/github/github-services/commits/c3732fa73794598b6947baa3e479b88fef832ed9", "message": "Merge remote-tracking branch 'origin/master' into onering/22650"}, {"url": "https://api.github.com/repos/github/github-services/commits/447a100d1ac00e175b4671824c2015daff751a13", "message": "Merge remote-tracking branch 'upstream/master'"}, {"url": "https://api.github.com/repos/github/github-services/commits/9f4d938b7897118d11fefeba158705fdeb4899cc", "message": "Updated text for IDS Bluemix rebranding"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/26695003", "body": "@kdaigle Thanks for the feedback.  Just to confirm then that this change will break for any users that have already configured the service?  So the service configurations themselves will not update when this change is rolled out?  If so then we will need to fall back as you suggested.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/26695003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/26695141", "body": "Also will the service configuration display both the previous ibm_id and new ibm_login fields when this is deployed?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/26695141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "stof": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/4d0afbc899070531d4af04cb002ef7e1e4e5683f", "message": "Avoid the regex for the default packagist domain\n\nthe regex processing is not needed for the default value, only for values entered by the user"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mastahyeti": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/61845c390670d182921ffc2f4ef6104a4c1c1b6d", "message": "remove unused httparty gem"}, {"url": "https://api.github.com/repos/github/github-services/commits/080c98315b7742b85ad67411b0d1cdc6d6b9977f", "message": "s/xml_in/parse/"}, {"url": "https://api.github.com/repos/github/github-services/commits/24356e0bd42a781120c98ae6c9b83e95010d4de4", "message": "don't use XmlSimple.xml_in"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mhama": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/d72dee1442ed984d18d5223a1b19026329e33764", "message": "modified pivotaltracker doc to show the way to watch multiple branches\n\nThe feature exists on the source code but there was no way for the users to actually know how to do."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukerollans": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/2a47bcbe7309f66ede21d620ae24665f56bea0cc", "message": "Fix errors in Codeship docs"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carlio": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/40fc24f764bfc889ead3e1fe59e695e384cd6595", "message": "Updating Landscape documentation with the correct docs website URL."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gerbenjacobs": {"issues": [], "commits": [{"url": "https://api.github.com/repos/github/github-services/commits/8c61e614e29f4f067f2fe199f469be01adb9bc33", "message": "Renamed settings to service, to match github UI"}, {"url": "https://api.github.com/repos/github/github-services/commits/48d5a3132c404a8eab26bd1739a6e87a7c0945e9", "message": "Fixed error in markdown to better visualize optional steps"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tsteur": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/github/github-services/pulls/1233", "title": "Rename Piwik Plugins service to Matomo Plugins", "body": "Piwik has been renamed to Matomo see https://matomo.org/blog/2018/01/piwik-is-now-matomo . As a result also some URLs changed. The PR also fixes the logo was no longer available.\r\n\r\nWe do not want to rename the service (classname/files) itself to keep existing users.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vbarrier": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/github/github-services/pulls/1219", "title": "update and fix icescrum service", "body": "- Fix bug with access_token\r\n- update tests\r\n- update doc", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/132812954", "body": "Thank you", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132812954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132812958", "body": "Thank you", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132812958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132813021", "body": "Are you talking about this test: \"test_push_valid_custom_url ? It has been deleted already. ", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/132813021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "technoweenie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/494860", "body": "Thanks for this.  I wasn't serious when I called you out on Twitter :)  I'll let you know when this is integrated (should be this week) so you can test this out against Yammer.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/494860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/545030", "body": "I love the idea, but wouldn't you have to punch a hole in the firewall?  Do people normally have ports that speak the rabbitmq protocol open to the internet? \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/545030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/551367", "body": "Wow, thanks for your patience on this.  Busy couple of weeks :)  This is my priority today.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/551367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/552027", "body": "Added!  Please check it out and confirm it works.  Thanks for your patience.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552027/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/552028", "body": "Added!  Please check it out and confirm it works.  Thanks for your patience.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/552029", "body": "Added!  Please check it out and confirm it works.  Thanks for your patience.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/552030", "body": "Added!  Please check it out and confirm it works.  Thanks for your patience.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/552031", "body": "Added!  Please check it out and confirm it works.  Thanks for your patience.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/552032", "body": "Added!  Please check it out and confirm it works.  Thanks for your patience.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/552033", "body": "Added!  Please check it out and confirm it works.  Thanks for your patience.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/553822", "body": "I don't know, they both use the same mechanism to send out pushes.  You should get a push with the last commit...  Do you have a test account I can play with?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/553822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/554113", "body": "Ah my bad, I had to [rename the files](https://github.com/github/github-services/commit/032ec45b0a2c4765ab7ab12aabdaf4abe00cf3f3) to fit our naming convention (ContinuityApp => continuity_app).  I just forgot to redeploy.  You should be good now.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/554113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/554118", "body": "Ah, the service hook used `api_token`, but the docs said `token`.  I fixed the service hook and redeployed.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/554118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/559111", "body": "It's fixed in e6e0c8d9d3af4f59da8462d26363b9926b203958.  Not sure why it was ever ssl in the first place.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/559111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/561424", "body": "Our web server uses EventMachine, so you don't have to worry about that.  I also just realized the service hook doesn't need to worry about starting or stopping the event loop.\n\nI'm just going to cherry pick your 2 commits and push this.  I made a quick hack on the server and saw the hook requests go through without problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/561424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/564248", "body": "Already done: de6e882d8317ec3142074c4152f209b10696e27c  Thanks though :)\n\nI hope we can work something out with your setup too -- though I'd prefer to stay compliant if possible.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/564248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/659434", "body": "Thanks for the update!  [Open a support issue](http://support.github.com) if you have problems with it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/659434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/659435", "body": "Thanks for the update!  [Open a support issue](http://support.github.com) if you have problems with it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/659435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/659436", "body": "Thanks for the update!  [Open a support issue](http://support.github.com) if you have problems with it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/659436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/659437", "body": "Thanks for the update!  [Open a support issue](http://support.github.com) if you have problems with it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/659437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/715903", "body": "Deployed.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/715903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/715905", "body": "Deployed.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/715905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/715906", "body": "Deployed.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/715906/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/715909", "body": "Deployed.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/715909/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/720922", "body": "Merged!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/720922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/729867", "body": "Deployed!  Let me know if you have any problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/729867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/729876", "body": "Deployed\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/729876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/729881", "body": "Ah right, it's added.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/729881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/771526", "body": "Deployed.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/771526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/771530", "body": "Deployed.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/771530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/771551", "body": "Deployed!  Let me know if you have problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/771551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/771553", "body": "Deployed!  Let me know if you have problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/771553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/771667", "body": "Works!  Though getting a `topic_id` isn't fun.  Hopefully they can make that process better...\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/771667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/810296", "body": "Should the \"travis-ci.org/builds\" value be hard coded?  Won't people\nwant to setup private travis ci servers for private projects?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/810296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/813611", "body": "Don't worry, my question isn't a blocker.  I added the hook, so let me\nknow if you have problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/813611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/818560", "body": "I just sent you a DM with the room IDs.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/818560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/823517", "body": "Ryan tells me the campfire hook gets the compare link from the payload.  I'm just waiting for some spare cycles so I can do that and accept the two open pull requests.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/823517/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/823560", "body": "It should update the pull request if you just add to your branch.\n\nAnd you're welcome to add to the payload example too :)  Or not, I'll\nlook into it when I get a chance.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/823560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/823632", "body": "Oh just SSH into our servers and generate it yourself :) \n\nI'm looking into this right now.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/823632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/824038", "body": "I pushed this to the Services server, and updated all the keys as requested.  I also just pushed out the UI updates on the main app.  It looks like one new service was created since I gave you the original IDs.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/824038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/850766", "body": "Why did you upgrade the JSON gem too?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/850766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/854299", "body": "Ah no worries.  I'll let you know when this is in production so you\ncan try it out.\n\nOn Wed, Mar 9, 2011 at 1:08 AM, resetexistence reply@reply.github.com wrote:\n\n> Sorry, I should have explained: I upgraded the JSON gem because JSON 1.1.2 and ActiveSupport 2.2.2 weren't playing nicely when calling the hash object extension .to_json. You can see the error here - https://gist.github.com/861874\n> \n> If you have a specific dependency for this older JSON gem I can rewrite how I'm forming the JSON structure or try and come up with a fix for the two stomping on each other when calling .to_json.\n> \n> https://github.com/github/github-services/pull/70#issuecomment-850935\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/854299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/905103", "body": "Thanks for the patch.  I merged and threw this into production yesterday.  Let me know if you have any issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/905103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/905104", "body": "Thanks for the patch.  I merged and threw this into production yesterday.  Let me know if you have any issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/905104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/927642", "body": "Do you really want a message per commit?  Most pushes have a lot of commits.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/927642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1002876", "body": "Is that the only new option?  What about `send_from_author`?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1002876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1024090", "body": "Cool, it'll go out in the next push.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1024090/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1024103", "body": "Cool, it'll go out in the next push.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1024103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1024346", "body": "Cool, it'll go out in the next push.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1024346/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026784", "body": "This is live, let me know if you have issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026786", "body": "This is live, let me know if you have issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026787", "body": "This is live, let me know if you have issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026788", "body": "This is live, let me know if you have issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026788/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026789", "body": "This is live, let me know if you have issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026790", "body": "This is live, let me know if you have issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026792", "body": "This is live, let me know if you have issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1027007", "body": "@zyv: Try now.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1027007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1030175", "body": "Should be fixed now.  I don't think this code was ever run.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1030175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1033876", "body": "Thanks for following up on the bug and submitting the fix!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1033876/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1033880", "body": "@graydon: it's deployed.   Let us know if you have further issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1033880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1036102", "body": "Ah, it's in the README :)\n\nStill, it's our testing setup that's lacking here.  It's on my list...\n\nOn Wed, Apr 20, 2011 at 4:32 PM, dagwieers\nreply@reply.github.com\nwrote:\n\n> @technoweenie: Correct, the code was never run, only syntax checked. I guess I should have mentioned that. I have no clue how to run github service checks for testing :-/\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/github/github-services/pull/84#issuecomment-1035661\n\n## \n\nRick Olson\nhttp://github.com/technoweenie\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1036102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1327382", "body": "Gah, sorry about that!  We'll be adding support for hooks on every event, not just push.  No one was supposed to notice yet :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1327382/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1327391", "body": "Thanks, I should be able to get this online sometime today.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1327391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1346669", "body": "Hey would you mind re-applying this?  I've been doing a major rewrite of the service code. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1346669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1346670", "body": "Hey, would you mind resubmitting this?  I just pushed a major refactoring of the services code.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1346670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1356269", "body": "Doh, thanks for fixing my awesome bug in `#irc`.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1356269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1375273", "body": "I'm not sure about the muc support.  Does it need to keep a long lived hash of every muc connection?  Also, we run this in a setup with 3 services app servers.  I wonder if Jabber would work better by having a single jabber process that the 3 services app send messages to?  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1375273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1375280", "body": "I'm going to merge this without the mucs for now.  We can at least try the jabber connection stuff out.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1375280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1387593", "body": "Ughhh, sorry about that.  Bad translation.  I hate it when 'json' web services only take form encoded posts :) (though, all Rails apps work like that too).\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1387593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1387628", "body": "Just FYI: I had to fix a failing test:\n\n```\n  1) Error:\ntest_push(ConvoreTest):\nJSON::ParserError: A JSON text must at least contain two octets!\n    /var/lib/jenkins/jobs/github-github-services/workspace/vendor/gems/ruby/1.8/gems/json-1.5.1/lib/json/common.rb:148:in `initialize'\n    /var/lib/jenkins/jobs/github-github-services/workspace/vendor/gems/ruby/1.8/gems/json-1.5.1/lib/json/common.rb:148:in `new'\n    /var/lib/jenkins/jobs/github-github-services/workspace/vendor/gems/ruby/1.8/gems/json-1.5.1/lib/json/common.rb:148:in `parse'\n    /var/lib/jenkins/jobs/github-github-services/workspace/lib/../services/convore.rb:47:in `receive_push'\n    /var/lib/jenkins/jobs/github-github-services/workspace/lib/../services/convore.rb:41:in `each'\n    /var/lib/jenkins/jobs/github-github-services/workspace/lib/../services/convore.rb:41:in `receive_push'\n    /var/lib/jenkins/jobs/github-github-services/workspace/test/convore_test.rb:22:in `test_push'\n```\n\nI just had to make sure the convore test stub returned valid JSON:\n\n```\n--- a/test/convore_test.rb\n+++ b/test/convore_test.rb\n@@ -11,7 +11,7 @@ class ConvoreTest < Service::TestCase\n       assert_equal 'application/x-www-form-urlencoded', env[:request_headers][\"Content-Type\"]\n       assert_equal basic_auth(:rick, :monkey), env[:request_headers]['authorization']\n       assert_match /grit/, env[:body]\n-      [200, {}, '']\n+      [200, {}, '{}']\n     end\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1387628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1388077", "body": "I'm not sure how muc works, but is it really noisy if the bot enters and leaves a lot?  I think the IRC hook gets noisy like that, and people opt for the CIA hook instead.\n\nWhat do you think about having a separate jabber process to manage connections?  I don't mind having a long lived jabber connection, and some long lived muc connections if it's isolated to a single ruby process.  Ideally, the muc connections would time themselves out after 15 minutes or something too.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1388077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1396490", "body": "Blasphemous, I know!  I  guess I didn't fix all the bad indentation when I ported it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1396490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1427776", "body": "Can you add some tests for it, please?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1427776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1434959", "body": "I mean unit tests, like [these](https://github.com/github/github-services/tree/master/test).\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1434959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1467233", "body": "This is using the old services API.  Check out the [new format](https://github.com/github/github-services/blob/master/services/README.md) for services.  Let me know if you have problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1467233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1467241", "body": "Perfect, thank you!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1467241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1480060", "body": "Our server can't verify the SSL cert for some reason.  I've disabled the check for now, so it should be working.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1480060/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1611687", "body": "Can we get a test please? \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1611687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1611690", "body": "Can we get a test for this hook please?  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1611690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1714268", "body": "What's the use case?  We can think of several scary uses, and no valid ones.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1714268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1842298", "body": "Add a test :)  There are a couple other patches with no tests, so I may just do all 3 for you guys.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1842298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1842321", "body": "I really don't like the name `chatty`.  What about `send_only_ticket_commits`?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1842321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1843322", "body": "TESTS!  Thanks :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1843322/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1843366", "body": "[scrumdo test](https://github.com/github/github-services/commit/852cc33c9dd32614b17ad2d150df3aad500b2282)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1843366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1890635", "body": "Deployed.  Let me know if you still have problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1890635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1916676", "body": "On Fri, Aug 26, 2011 at 7:20 AM, JonnyFunFun\nreply@reply.github.com\nwrote:\n\n> I'm not sure if it makes sense to continue with this pull request, as TargetProcess now has a full REST API. \u00a0So all the calls currently done via SOAP (yuck) can go away...\n> \n> @technoweenie - Perhaps it makes more sense for me to close this and reopen a new pull request after migrating the entire hook away from the bloated SOAP API?\n\nOh good.  I have a branch where I tried to reorganize the code to make\nit easier to test, but it misses the point if I have to mock all of\nthe SOAP logic.  It's so much easier to test against a simple HTTP\nAPI.\n\n## \n\nRick Olson\nhttp://github.com/technoweenie\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1916676/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2016276", "body": "Can we get a test for this please?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2016276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2019797", "body": "I'd prefer a more extensive test, but at least I know that the ruby code runs :)  I'm sure you realize you're on the hook (pun!) if there are problems with this though, right? \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2019797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2021940", "body": "Sure, I happen to be working on service hooks today anyway.  \n\nThough for future reference, there's no set schedule for github-services.  We try to merge every week or so, but sometimes pull requests will stack up for several weeks.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2021940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2041865", "body": "A couple things.  You can set the default base url for all requests with `http.url_prefix = data['base_url']`.  This way you don't have to add that prefix on every call.  Also, I think I might add a `verify_ssl` option so that people can rest assured that we don't send their data to a hijacked site.  It's tougher to guarantee with services that let you plug in a full url. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2041865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2042065", "body": "If you do `get(\"/api/...\")`, it assumes that's an absolute path.  I modified the test to add a `/tp/` suffix to ensure that it gets preserved in the API calls.\n\nRe: `verify_ssl` - don't worry about it if you're busy.  I have a bunch of hooks that take some kind of base url like this hook that need the option.  \n\nAt any rate, it's live now.  Let me know if you have problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2042065/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2042077", "body": "Looks good, thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2042077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2117289", "body": "Can you add a test please?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2117289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2117948", "body": "https://github.com/github/github-services/blob/master/test/acunote_test.rb\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2117948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2124251", "body": "It's clear you haven't tried running any of the code.  Your service is named GitLive, and your test is for Acunote.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2124251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2124268", "body": "Thanks for the service.  I'll be out of town but I'll try to get it out next week.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2124268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2126980", "body": "Ah, you should be able to just run `rake` to run the tests.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2126980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2132886", "body": "Oh, I merged your patch already, everything was fine :)\n\nOn Sun, Sep 18, 2011 at 10:12 PM, Christoph Dorn\nreply@reply.github.com\nwrote:\n\n> See: https://github.com/github/github-services/pull/152\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/github/github-services/pull/148#issuecomment-2128031\n\n## \n\nRick Olson\nhttp://github.com/technoweenie\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2132886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2132889", "body": "Oh man, I should've been more clear... I merged your last pull :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2132889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2134625", "body": "Yup, but I fixed it: f0fde72d8570622570db9c8940b81d81913f7b26  I'll try and push this out sometime tomorrow.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2134625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2236957", "body": "Ah crap, I forgot to add that bit.  I'll add it today.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2236957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2240853", "body": "Ah you'll have to do a new pull because this one is closed.  Do you want me to remove the hook in the meantime?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2240853/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2250631", "body": "You can't even see the link either way, so I don't really care.  I've accepted the pull though.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2250631/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2251933", "body": "Consistency with the other hooks.  I hate when multiple hooks have the same behavior with differently-named properties.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2251933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2292000", "body": "Can you add a test for this?  There's not much logic so it should be pretty easy to do.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2292000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2293968", "body": "This is live now.  Let me know if you have issues.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2293968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2314637", "body": "I haven't updated them yet.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2314637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2351797", "body": "You really need to pull in my master before you make further changes :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2351797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2351834", "body": "Also, the tests were broken because of the version number.  I had to bump the major to v12 in 82e36e82e7515a2fd5f98dbb7020661d399cfeff\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2351834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2368026", "body": "If you want to start playing with more data than just pushes, see #166\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2368026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2374182", "body": "Updated.  Let me know if you have problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2374182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2374183", "body": "Updated.  Let me know if you have problems.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2374183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2378181", "body": "Ah no, I forgot to merge to master, and someone deployed over me.  It's back for good now :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2378181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2498795", "body": "You can iterator over a string's lines.  Thats what TargetProcess and YouTrack are doing.  May just change that to a `split(\"\\n\")` or something.\n\nGitHub Services actually is supposed to run on 1.8.7, but it's nice to know that it's not hard at all to make it 1.9 compatible.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2498795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2498999", "body": "Awesome, thanks!  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2498999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2505133", "body": "Let me know when it's launched and I'll merge it in.  It doesn't take\nmuch work on my part to do it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2505133/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2558699", "body": "Do you mind updating the docs to mention what events that Flowdock listens for by default?  Until the Hook UI updates, I want users to know exactly what they're opting in to.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2558699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2612879", "body": "Can you add tests please?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2612879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2613319", "body": "Nope.  It's all ruby, and there are plenty of examples.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2613319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687164", "body": "This change is live.  Let us know if it works.  Hopefully the SSL certs can be verified.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687642", "body": "I don't see an error for it.  Mind trying again?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687642/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687651", "body": "Or giving me a repo so I can try myself?  If you guys just don't have a valid SSL cert, you can set the `http.ssl[:verify]` option to false.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687822", "body": "This is what I get on the server:\n\n```\n$ curl -v https://foo.bug.ly\n* About to connect() to foo.bug.ly port 443 (#0)\n*   Trying 79.125.4.21... connected\n* Connected to foo.bug.ly (79.125.4.21) port 443 (#0)\n* successfully set certificate verify locations:\n*   CAfile: none\n  CApath: /etc/ssl/certs\n* SSLv3, TLS handshake, Client hello (1):\n* SSLv3, TLS handshake, Server hello (2):\n* SSLv3, TLS handshake, CERT (11):\n* SSLv3, TLS alert, Server hello (2):\n* SSL certificate problem, verify that the CA cert is OK. Details:\nerror:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\n* Closing connection #0\ncurl: (60) SSL certificate problem, verify that the CA cert is OK. Details:\nerror:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\nMore details here: http://curl.haxx.se/docs/sslcerts.html\n```\n\nI added verify=false to the service, so it'll work now.  I'd rather get the cert stuff worked out though, because it'd suck to have your customers' data go to the wrong server if something bad happened.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2778508", "body": "Thanks!\n\nI tweaked your ruby code a bit: 3dda69ed5cf28e78c55931c8581d869e4c41b5a0.  What do you normally use?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2778508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2778710", "body": "What payload do you think is needed?  The builds action doesn't take anything really.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2778710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3035446", "body": "Nice idea, but I think this is the wrong way to approach it.  I'll have to see if we can add some kind of PublishedPage event, so you can attach any of the existing services to it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3035446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3071683", "body": "Can you add a test please?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3071683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3071748", "body": "You can't just change configuration parameters willy nilly like that.  There are a lot of existing email records out there that will break.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3071748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3082782", "body": "Thanks a lot, it makes me feel much better accepting patches against all these services :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3082782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3169535", "body": "Oh nice!  We run it on 1.8.7 currently, but I'd love to get it on 1.9 at some point.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3169535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303304", "body": "Is the branch necessary?  Won't it take up precious tweet characters?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303321", "body": "Please don't change config values.  It requires us to mangle the live data, and possibly drop hooks during the upgrade.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303693", "body": "Hi, we're going to have to hold off on this for a bit.  Our hooks server is getting a bit overloaded.  I have some fixes I need to implement first.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303715", "body": "What is `#presence`?  Do the tests pass for you?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303810", "body": "Oh nevermind, some weird activesupport thing.  Went with `Hash#fetch` instead.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303922", "body": "I'm sorry, I never actually pushed this to GitHub.  I'm doing that today.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303922/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3377395", "body": "Have you tested that it works in those picky smtp servers?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3377395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3413377", "body": "If you could write up a quick [doc page](https://github.com/github/github-services/tree/master/docs), that'd be awesome.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3413377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3433854", "body": "Thanks.  It's live, but I don't see any way to set it up.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3433854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3483022", "body": "Would you mind updating the docs to mention what hooks you listen to by default?  I'm hoping we can update the Services UI at some point so users can change some of the newer Hook settings without the API.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3483022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/85085", "body": "Reverted.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/85085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/143182", "body": "lol\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/143182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/202975", "body": "Ah, even better!  I guess we have an old version of the Basecamp API lib.  Thanks.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/202975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/257916", "body": "It's a requirement of the mapping of capital words to service names.  This text isn't visible to users though.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/257916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/513549", "body": "you're making me happy too\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/513549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/673402", "body": "Yup, I added them for existing services after a big refactoring a few\nmonths ago.  It's allowed me to use the merge button and speed up the\ninclusion of service updates.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/673402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/688056", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/688056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1223838", "body": "It keeps muc references in a global `@@mucs` class var.  I'd like to have something that wasn't a memory leak.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1223838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1239526", "body": "No prob.  Sometimes I forget to merge and push the GitHub.com changes too :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1239526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1267316", "body": "@juretta: I had a conflict here.  This diff looks fine.  Be sure to update your fork's master against the source's master if you plan to send more pulls.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1267316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1267482", "body": "@CodePorting couldn't figure out where this magical 'token' variable came from.  Had to rewrite this so `#perform_login` returned it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1267482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1267483", "body": "@CodePorting Building post data manually sucks :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1267483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1267487", "body": "@CodePorting You were building the post data with magical variables like `project_name`, `repo_key`, etc.  Those didn't exist.  See my changes below.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1267487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1267490", "body": "@CodePorting You had 3 tests, passing in the exact same payload and config data.  I removed them.  Also, the tests didn't stub any requests, so they were about to hit the live app.  It's completely clear to me you never tried running the tests :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1267490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1268795", "body": "If `:token` isn't needed on the form, it needs to be removed here.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1268795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1283037", "body": "@jeremy Congrats, you're the first to actually try to use `#hook_name` on the Basecamp hooks.  Too bad it didn't work :)  The `#inherited` callback was firing before the custom `hook_name` was set, so Sinatra didn't even route the 'bcx' path.  It should be working now.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1283037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1452372", "body": "Whats your problem with it?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1452372/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1921499", "body": "> @technoweenie https://github.com/technoweenie is the sender portion of\n> the payload documented anywhere because I haven't seen it and it's not\n> here: http://developer.github.com/v3/repos/hooks/\n\nJust\nhttps://github.com/github/github-services/blob/master/lib/service/events/helpers/helpers_with_meta.rb#L6-8\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1921499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/2299973", "body": "DOH\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/2299973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/2618419", "body": "No worries.  This is a big reason why we made the policy change.  This stuff is much easier to test and deal with :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/2618419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/8417792", "body": "Added here: 38253449ef9afe2fc440e4fc2a91f5e56c770cc3\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/8417792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/8418094", "body": "So `URI.parse` always returns a port:\n\n```\n>> u=URI.parse(\"http://foo.com\")\n>> u.port\n=> 80\n>> u.to_s\n=> \"http://foo.com\"\n```\n\nThis is the behavior that internal libs like net/http expect.  Addressable, on the other hand:\n\n```\n>> u=Addressable::URI.parse(\"http://foo.com\")\n>> u.port\n=> nil\n>> u.inferred_port\n=> 80\n>> u.to_s\n=> \"http://foo.com\"\n\n# let's set #port\n>> u.port ||= u.inferred_port\n=> 80\n>> u.to_s\n=> \"http://foo.com:80\"\n```\n\nBasically, everything is terrible.\n\nPossibly a moot point since we use Typhoeus or whatever instead...\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/8418094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/35995", "body": "It looks like you changed the default to FogBugz 7.  Is this intended?  \n\nIf `fb_repoid` is required for 7, why not just assume they're using FogBugz 7 if it's set?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/35995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/40239", "body": "About 21% of the configured hooks have no version set.  Of the 79% with configured versions, all but one are 7+.\n\nI'll go ahead with the merge.  Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/40239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/236156", "body": "Push events have some pretty [elaborate helpers](https://github.com/github/github-services/blob/master/lib/events/push_helpers.rb#L19-35) for this stuff.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/236156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/273848", "body": "You can also check for `branch == \"gh-pages\"`.  Other repos on a user account can update subdirectories of the main pages repo.  So the `gh-pages` branch on `tater/foo` will update `tater.github.com/foo`.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/273848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/340419", "body": "Should that `.local` be `.com` ?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/340419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/476048", "body": "Always use https links please.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/476048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/575501", "body": "Is this hard-coded token right?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/575501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/671619", "body": "I'd prefer people not using instance variables in the service code.  But I'll fix this post-merge.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/671619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/747759", "body": "I'm confused... what is this code doing?  Does the `muc` object do something special after `#deliver_deferred` is used?  Doesn't look like this code is using `muc` at all after joining.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/747759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/755579", "body": "Lol, I understand that.  Do you by chance have experience with jabber libs in other languages?  I may just look for a good Python one or something.  http://sleekxmpp.com/ looks nice.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/755579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/834697", "body": "Love it.  I think I want this to be an optional per-service setting.  For instance, a service may support only pull/issues/issue_comment, but define just `#receive_event` for whatever reason.  \n\nAlso some tests would be nice.  You don't have to bother, I'll just do it when I get around to merging this though :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/834697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/966334", "body": "Is there any way your service can accept a bulk payload of multiple commits?  I'd love to lower the number of HTTP calls if possible.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/966334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1001587", "body": "Is there any way you can change this to a single HTTP request?  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1001587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1140910", "body": "It's fine. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1140910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1140934", "body": "Your tests don't work.  You're setting Accept, but not Content-Type above, and definitely not sending JSON.\n\nAlso, you've only stubbed the token request, and not the commits. The test fails:\n\n```\ntest_push(WorkmarketTest):\nNoMethodError: undefined method `[]' for nil:NilClass\n    /Users/rick/p/github-services/lib/service/../../services/workmarket.rb:19:in `auth_token'\n    /Users/rick/p/github-services/lib/service/../../services/workmarket.rb:27:in `receive_push'\n    test/workmarket_test.rb:19:in `test_push'\n```\n\nThe authorization stub should return `{\"response\":{\"access_token\":\"monkey\"}}` so it can parse the token out and send the commits.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1140934/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1447772", "body": "Why are you redefining the url shortener?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1447772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1577130", "body": "Please don't use net/http.  Use Faraday instead, so we can make adapter changes if necessary (such as EventMachine for non-blocking HTTP requests).\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1577130/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1639333", "body": "`sender` is part of the hook payload.  Its the same as `pull.user` in this case though.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1639333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1642735", "body": "Crap, you took the URL off this and broke all the pull hooks.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1642735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1643371", "body": "Thanks for looking at this so quickly.  Obviously the specs of `#summary_url` and `#summary_message` aren't that strict.  The only place this really seemed to matter was the Campfire hook.  It turns out the Push helper doesn't include the URL in the message, so your change actually made things more consistent.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1643371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2104413", "body": "Is it a problem that all of the old hooks still have the 'domain' property?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2104413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2102883", "body": "You should remove pull_request, there's no specific responder for it.  You can add one by defining `receive_pull_request`.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2102883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2110264", "body": "The `push` event gets triggered for every push, including merges.  There is a `pull_request` event that gets triggered, with an action value of 'merged' in the payload.  It's not necessary if you just want to receive events when the repository is updated.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2110264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2216474", "body": "I think this would be better as 3 separate tests.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2216474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2243626", "body": "I hate to keep nagging, but these seem like 2 tests.  I prefer more descriptive test names.\n- test_issues_with_blank_url\n- test_issues_with_custom_url\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2243626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2265581", "body": "It'll equal \"1\", not \"true\".\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2265581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2266584", "body": "\"1\" the string, not the integer :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2266584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2706276", "body": "Do we really want this to notify on every single push, and not just new tags or something?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2706276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2737983", "body": "Why all the big gem updates?  Does IronMQ use Faraday 0.8.x or something?  What's with Excon?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2737983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3324929", "body": "Maybe take this out until API keys are set on all the hooks.  Otherwise as soon as this gets deployed to our servers, we will start start dropping all tenxer hooks.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3324929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2521363", "body": "Is there a reason you changed these?  It'll break all old fisheye hooks.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2521363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3836250", "body": "GitHub Hook shave to take the payload as-is. See [this post](http://developer.github.com/changes/2013-2-5-changes-to-services/) for more.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3836250/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3837233", "body": "The problem is you added branch and vanity.\n\nOn Wed, Apr 17, 2013 at 10:47 AM, tu1ly notifications@github.com wrote:\n\n> In lib/services/apiary.rb:\n> \n> > +\n> > -  url \"http://apiary.io\"\n> > -  logo_url \"http://static.apiary.io/css/design2/apiary-io-symbol-1x.png\"\n> > -  maintained_by :github => 'tu1ly'\n> > -  supported_by :web => 'http://support.apiary.io/',\n> > -    :email => 'support@apiary.io'\n> >   +\n> > -  APIARY_URL = \"http://api.apiary.io/github/service-hook/\"\n> > -  #APIARY_URL = \"http://api.apiary.dev:8000/github/service-hook/\"\n> >   +\n> > -  def make_apiary_call\n> > -    return true if not domain\n> > -    http_post APIARY_URL,\n> > -      :payload => JSON.generate(payload),\n> > -      :branch => branch,\n> > -      :vanity => domain\n> \n> so should i use payload.to_json as in\n> https://github.com/github/github-services/blob/master/lib/services/codeclimate.rb( listed as acceptable in your post) (i though it is equal to\n> JSON.generate) or problem is that i add branch & vanity ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/github/github-services/pull/573/files#r3836796\n> .\n\n## \n\nRick Olson\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3837233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3895697", "body": "My mistake, I thought you were parsing the ref to get the branch name.  It's fine if you're just passing data properties through. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3895697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3896165", "body": "Sure.\n\nOn Mon, Apr 22, 2013 at 8:09 AM, tu1ly notifications@github.com wrote:\n\n> In lib/services/apiary.rb:\n> \n> > +\n> > -  url \"http://apiary.io\"\n> > -  logo_url \"http://static.apiary.io/css/design2/apiary-io-symbol-1x.png\"\n> > -  maintained_by :github => 'tu1ly'\n> > -  supported_by :web => 'http://support.apiary.io/',\n> > -    :email => 'support@apiary.io'\n> >   +\n> > -  APIARY_URL = \"http://api.apiary.io/github/service-hook/\"\n> > -  #APIARY_URL = \"http://api.apiary.dev:8000/github/service-hook/\"\n> >   +\n> > -  def make_apiary_call\n> > -    return true if not domain\n> > -    http_post APIARY_URL,\n> > -      :payload => JSON.generate(payload),\n> > -      :branch => branch,\n> > -      :vanity => domain\n> \n> @technoweenie https://github.com/technoweenie so is it ok as it was ?\n> apiaryio@3433edbhttps://github.com/apiaryio/github-services/commit/3433edb5f2363b876e352bddd62798e4bf7445d4\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/github/github-services/pull/573/files#r3895969\n> .\n\n## \n\nRick Olson\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3896165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3915483", "body": "This is a changed property.  Merging this will break everyone that sends a `custom_repository_name` property.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3915483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3215383", "body": "Why are you posting JSON when the content type is `application/x-www-form-urlencoded`\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3215383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4060455", "body": "Does Simperium track a unique ID per event?  I can pass along the internal one we use if you like.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4060455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4060566", "body": "We can keep supporting this custom header -- but there may come a time when we stop supporting custom headers.  Just FYI.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4060566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4063488", "body": "Basic auth would be best.  Something like:\n\n```\nhttp.url_prefix = \"https://token:#{token}@api.simperium.com/1/#{appid}/#{event.to_s}/i/\"\n```\n\nIf you don't want to use Basic Auth like that, I can consider supporting token authentication:\n\n```\nhttp.headers[\"Authorization\"] = \"Token #{token}\"\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4063488/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4065268", "body": "The body is still JSON, and looks [like this](https://github.com/github/github-services/compare/Simperium:simperium...simperium#L7R8).  The internal event ID is accessed through the `guid` key.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4065268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4345446", "body": "What is this?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4345446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4345461", "body": "Please mention what events you monitor.  People should know that this service is listening to every event, and not just pushes.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4345461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4345583", "body": "Ahhh right.  I have mine set to go to a totally separate directory.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4345583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4342920", "body": "Changing a key would break existing hooks.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4342920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4387738", "body": "[Inherit from Service::HttpPost](https://github.com/github/github-services/blob/a9bc40c51e4fc351a7dd8cc7afb3562da148874d/lib/services/simperium.rb#L1).\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4387738/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4387756", "body": "[Use `required_config_value`](https://github.com/github/github-services/blob/56baa4ce03e64ebf67105ee22f752bf7c2383274/lib/service/http_helper.rb#L25-L33).\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4387756/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4387763", "body": "Remove this line.  We're only sending JSON.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4387763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4387773", "body": "This is modifying the payload.  The `Service::HttpPost` class takes care of this for you.  Copy [what the Simperium hook does](https://github.com/github/github-services/blob/a9bc40c51e4fc351a7dd8cc7afb3562da148874d/lib/services/simperium.rb#L39-L40).\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4387773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4649806", "body": "Either that, or send the token as a standard Authorization header:\n\n``` ruby\nhttp.headers['Authorization'] = \"Token #{token}\"\n```\n\nThe Authorization header is pretty flexible.  If you wanted, you could probably do something like:\n\n``` ruby\nhttp.headers['Authorization'] = \"Freckle #{token}\"\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4649806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rboyd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/515748", "body": "haha no worries.  I knew you were joking, or at least, I strongly hoped.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/515748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "LegNeato": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/545995", "body": "Sure. Here at Mozilla ours is accessible to the internet of course. I would imagine most people will hang something in the DMZ and have it proxy to an internal broker...who knows :-). I just know Mozilla is using github and will eventually need visibility into these changes, hence this service hook.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/545995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zesstra": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/550422", "body": "Ah, for the background: a related discussion is at http://support.github.com/discussions/post-receive-issues/140-service-hook-mantisbt-seems-to-post-to-wrong-url\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/550422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "sampierson": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/552109", "body": "Thanks!  When does this get deployed?  I don't see the new Install notes or 'username' field on the live site yet. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/202012", "body": "Interesting.  I need to take a look at our IRC server - with it's LDAP authentication turned on, it refuses to authenticate unless USER is first and PASS is second. I see this is not RFC compliant, so I propose we back out this change.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/202012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "robotmay": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/552296", "body": "Tested - works correctly. Thanks very much for integrating it :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mborromeo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/552944", "body": "Hi, thanks for integrating!\n\nBut, sounds like i doesn't work, i don't get any request to my webservices... is there a way to check logs?\n\nThanks for your help!\nmarco.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/552944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/557347", "body": "Hi!\n\nSorry for reopen this, but i'm still having issues: can't get any notification to my webservices from the hook, could be a ssl-related problem?\n\nThanks for your help,\nmarco.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/557347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "raine": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/553046", "body": "It works on pushes, but the Test Hook button doesn't do anything, or at least we're not getting anything in our logs. What's wrong?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/553046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/554435", "body": "It works now. Thanks for all your help. :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/554435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "jreese": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/674941", "body": "I originally wrote the MantisBT service hook, and worked with JonMarkGo to correct the problems it had, and this pull request should contain all the necessary fixes. Would appreciate this getting merged as soon as possible.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/674941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "atmos": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/707947", "body": "Yo,\n\nThis made it to production yesterday.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/707947/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1704169", "body": "Hey Martin,\n\nThis is available on the site, give it a whirl.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1704169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1713741", "body": "1) Deploying shortly.\n2) Nope, we don't have any metrics around this at this time.\n3) Unfortunately we don't, sorry.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1713741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1714220", "body": "Nope, not gonna happen.  There's no sane use case for this that I can imagine.  Sorry.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1714220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2538425", "body": "Did they remove https?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2538425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/5130730", "body": "We haven't pushed the latest changes of github-services out to our service\nhooks app. It should be there in a day or two.\n\nOn Tue, Jan 21, 2014 at 6:31 AM, omnarayan notifications@github.com wrote:\n\n> @atmos https://github.com/atmos Thank you for pushing our changes, Our\n> service hook is not visible in web-service hook list (setting page). Please\n> help us to figure out why its not listed under service hook list.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/github/github-services/commit/32e8d37f4268d428bb055438199b428fc648095e#commitcomment-5129191\n> .\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/5130730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/7430565", "body": "@jansiwy is this doc'd right?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/7430565/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/8417976", "body": "Is there anything historical that I should be aware of around that?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/8417976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/73462", "body": "Is this necessary?  The SSL cert seems valid when I curl it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/73462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4649157", "body": "You should be able to extract these values out of the payload so you can avoid setting them in the headers, I think.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4649157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4758058", "body": "Maybe `Pull #1 @sha1` or something similar?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4758058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/5024080", "body": "Can you make this inherit from the HTTPService class that the newer integrations are basing things off of? It'll make shit easier long-term.\n\nhttps://github.com/github/github-services/blob/master/lib/services/simperium.rb#L1\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/5024080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/5081741", "body": "You probably want to keep the `&&` that was used previously instead of `and`.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/5081741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6136245", "body": "Can you check the CONTRIBUTING.md files in this repo for examples on the correct class you should be inheriting from?\n\nIt should be `HttpPost` now instead of `Service`.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6136245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6137394", "body": "https://github.com/github/github-services/blob/master/lib/services/simperium.rb#L1\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6137394/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6211583", "body": "Just remove the line if you're gonna comment it out.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6211583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6554487", "body": "Please take a look at the contribution guidlines, we no longer accept hooks inherit from the Service class. They now need to be children of HttpPost.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6554487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6819637", "body": "We can't switch from room name to room id easily. We have thousands of these hooks and won't do the data migration for them unless there's a great reason to.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6819637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6847056", "body": "Yeah, unfortunately this is a pretty ambitious pull request and we're sort of just letting services chug along. We're only really changing them if there's significant technical merits to the upgrades.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6847056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7438953", "body": "Please check out the CONTRIBUTING.md for examples to follow. This is the older format and we're no longer allowing new services to integrate with this. The proper base class should be `HttpPost`.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7438953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7906073", "body": "Should we just enforce an updated/sane version of the gem? I hate adding stuff like this.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7906073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7931785", "body": "Is the fallback `AWS::SNS` here some kinda default fallback to an environmentally configured sns object or what?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7931785/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7933576", "body": "Yeah, this should definitely be removed then.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7933576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7934272", "body": "If you can get these defaults done sometime today I should have time to get it out in production and test it. If not we can probably get it out into production sometime next week.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7934272/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7943344", "body": "That's fine. I'm not really too familiar with what other code is using that gem so it's probably best left alone.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7943344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7949634", "body": "Are these versions fairly compatible for other hooks?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7949634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7975388", "body": "I _think_ you can do `&lt;` and `&gt;` here if you want to preserve the old formatting.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7975388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8643083", "body": "Can you flesh out more of the information here explaining how to configure it. Looking at the other docs should help.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8643083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8709670", "body": "This comment is misleading.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8709670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8709680", "body": "Remove this.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8709680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8708119", "body": "Is this correct?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8708119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8708811", "body": "Is there any way we could enable the https endpoint?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8708811/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8709456", "body": "Not entirely. We have older services that hit http endpoints I think but I think it **might** be better to knock this out up front instead of hoping to get back to it later.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8709456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/10941154", "body": "Is there a way to couple this with a conditional to test whether it has already been closed?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/10941154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11359650", "body": "Please read the [contribution guidelines](https://github.com/github/github-services/blob/master/CONTRIBUTING.md) we don't accept new services that are based on the `Service` class anymore.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11359650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11826180", "body": "Can we change this to be a full url so people can specify http or https please?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11826180/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11826362", "body": "Something like this should do it. `http.url_prefix = host_url`\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11826362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11831937", "body": "No single quotes, just use the raw variable.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11831937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11831945", "body": "No brackets either.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11831945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/12156977", "body": "lol\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/12156977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/12070373", "body": "Please read the CONTRIBUTING.md file, we don't accept new services with parent classes of Service anymore.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/12070373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/12486564", "body": "This makes no sense.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/12486564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13348125", "body": "Is event ever used?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13348125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13348142", "body": "This whole method can be `payload['commits'].size == 0`\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13348142/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13841166", "body": "Where's this used?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13841166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15259717", "body": "The payloads are different in status events so I figured we should get push to deploy going before we start differentiating between payloads.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15259717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15421007", "body": "This is bad default. Can we make this an option?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15421007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15443553", "body": "Yup, make people explicitly disable security vs making the decision for them.\n\nThere isn't really an docs on them. Booleans are check boxes, passwords are password input, text is just text input. The ordering is based on how they're defined in the file.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15443553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15443672", "body": "We should add `insecure_ssl` docs here.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15443672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16208260", "body": "This sha doesn't match line 89 below, is this intentional? What's this for vs using `Service`?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16208260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16380753", "body": "I was wondering about that. If you deploy and configure it to use a different branch or sha, should going back through this code path modify it?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16380753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16380758", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16380758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16381325", "body": "Will that break your integrations?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16381325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16381686", "body": "I removed the app updating. This should let working integrations keep on chugging along just fine.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16381686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13790402", "body": "This is new? Can we get a test for this event?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13790402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19974544", "body": "Do you want to keep a title? It's what's displayed when searching for services while you add them.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19974544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20103384", "body": "This shouldn't be in a method.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20103384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jaxzin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/709946", "body": "Thanks atmos, I realized there was an outstanding bug so I've requested another pull that includes a fix. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/709946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/257834", "body": "TeamCity is one word, not two, and is written as one word when lowercase, ex: http://jetbrains.com/teamcity/\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/257834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jonmarkgo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/717210", "body": "Hi, when you get a chance would you mind adding the api_key field to the Mantis BT Service frontend? Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/717210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dialtone": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/729893", "body": "Seems to be working perfectly, thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/729893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "adymo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/771697", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/771697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "aezell": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/771720", "body": "I agree on the `topic_id`. I had to sort of \"walk\" the API to get the topic_id. Thanks for the merge!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/771720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mironov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/777678", "body": "Thank you, but it seems that Install Notes didn't updated.\nhttp://d.pr/BWIZ\n\nhttps://github.com/github/github-services/blob/master/docs/jaconda\n\nAm I doing something wrong?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/777678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/825063", "body": "Thank you very much, you rock!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/825063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kronn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/813076", "body": "good point. I'll work on this to make it handle that better. However, I'm gonna check back with svenfuchs et al which parts of the url will stay the same.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/813076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/979795", "body": "I integrated the improvements by @koraktor (pull-request 80) \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/979795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026893", "body": "thanks for merging, @technoweenie. everything seems to run smoothly.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1396582", "body": "`:)` and this was the only issue I could find! The new service-hook api is awesome.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1396582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/297720", "body": "Thanks for merging and correcting my typos :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/297720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jmazzi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/815672", "body": "Closed, forgot to push one of the commits :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/815672/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/815728", "body": "I just realized that the first part of the view is really where HEAD was before you committed. Is that information available at payload time?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/815728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/815749", "body": "If that's what 'before' is, added in this commit https://github.com/jmazzi/github-services/commit/255f4694bbe6210baf69b228c0965b269f14e2bc\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/815749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/822952", "body": "Are any adjustments needed to get this patch accepted?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/822952/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/823524", "body": "Sweet, thanks MR DANGER!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/823524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/823543", "body": "Yeah, I see the campfire one now. Did you want me to re-submit using the url from the payload? \n\nSide note, could the payload example data be updated?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/823543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/823618", "body": "I could update it if knew everything that was available in the _real_ payload. Where can I see that?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/823618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "rtomayko": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/816611", "body": "Yep. That's what 'before' is for. There should actually also be a compare link in the payload IIRC.\n\nThis looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/816611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/841328", "body": "Looks good to me.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/841328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/636575", "body": "Accept header should work as well here. Either `Accept: text/plain+diff` or using the `.diff` extension should work equally well. We don't only use `Accept` because there's no way to link to a content negotiated resource.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/636575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/636628", "body": "Sorry, I checked and it looks like the content negotiation was removed recently. The explicit `.diff` and `.patch` URLs are the only way to access this content.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/636628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "reset": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/850935", "body": "Sorry, I should have explained: I upgraded the JSON gem because JSON 1.1.2 and ActiveSupport 2.2.2 weren't playing nicely when calling the hash object extension .to_json. You can see the error here - https://gist.github.com/861874\n\nIf you have a specific dependency for this older JSON gem I can rewrite how I'm forming the JSON structure or try and come up with a fix for the two stomping on each other when calling .to_json.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/850935/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "sabberworm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/911768", "body": "Works for me. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/911768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mbrevoort": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/927924", "body": "Good point. Just combined all commits in the changeset into one message. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/927924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/970625", "body": "Any update on when you guys might pull this in? Hoping to use it on a current project. Thanks\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/970625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1029827", "body": "Thanks! Looks good http://plixi.com/p/94019511\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1029827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "tekkub": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/950297", "body": "A boolean would be better than an int (`if data['join_room']`).  I would probably name the setting something like `message_without_join` or such, since the default is to join since most channels require that to speak.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/950297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2293970", "body": "This is actually something we've intentionally left out because the potential for abuse is too high.  If you need to distribute emails to multiple users there are lots of wonderful distribution list tools out there, I'd suggest you use one of those.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2293970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2879892", "body": "This is actually something we've intentionally left out because the potential for abuse is too high. If you need to distribute emails to multiple users there are lots of wonderful distribution list tools out there, I'd suggest you use one of those.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2879892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2880010", "body": "Hum, that could potentially work.  The email hook is honestly one we try to push people away from.  I think most would agree that commit emails become a flood of information you can't keep up with.  Heck, even our dashboard can get that way ver easily, and at least there the user on the receiving end generally has more control than an email they may not have signed up for.\n\nTwo could work though... I'm reopening this if you'd like to amend for that.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2880010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/621537", "body": "Agreed, in fact I think we specifically removed the shortening from this hook a while back.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/621537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/73883", "body": "```\nurl = \"http://www.scrumdo.com/hooks/github/#{data[\"project_slug\"]}\"\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/73883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "DamianZaremba": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/950315", "body": "@tekkub - Very good point, makes more sense to enable not joining that disable joining C=\n\nClearly in need of some sleep.\n\nDamian\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/950315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "koraktor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/979821", "body": "See #81 which provides a more complete fix \u2013 including this one.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/979821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/979828", "body": "Thanks for that better fix. :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/979828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303661", "body": "For me, it is. Maybe it's only adequate for the digest mode?\n\nBut I'm open to suggestions.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "enriclluelles": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/996118", "body": "Nice!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/996118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "zyv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1001467", "body": "Oh, looks nice. I concur with this option.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1001467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1001484", "body": "Please note that this is only changes to the hook itself, but one would need to create interface elements to enter the key for the Approved header and checkboxes for the other optons.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1001484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1002928", "body": "Oh, you are right. Sorry for not being clear about it.\n1. The Approved: thing requires a text input field (`secret`); if it's empty, then the header will not be appended\n2. Reply-To: will be set to the commit author unconditionally and requires no extra input fields (kind of totally makes sense)\n3. Putting author's e-mail in the From: field is optional and only happens if the checkbox `send_from_author` is ticked\n\nP.S. Now that I think about it, it would actually make sense to use _committer_ instead of _author_. But I don't know which variable should be used for that. Sorry.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1002928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026841", "body": "Hmmm... no matter whether I tick the checkbox or not, I am getting the same log:\n\nCheckbox ticked:\n\n```\n* gitbot (~gitbot@sh1-ext.rs.github.com) has joined #rpmforge\n<gitbot> rpms: master Steve Huff * 8c86fca (2 files in 2 dirs): updated bzr-2.3.1 and accompanying bzrtools-2.3.0 (rfx on el6) ...\n<gitbot> rpms: master root * 3185d5f (1 files in 1 dirs): Updated to 1.0.8.\n<gitbot> rpms: master David Hrb\u00e1\u010d * 1c8a250 (1 files in 1 dirs): p7zip-9.20.1\n<gitbot> rpms: master commits b37c9e1...1c8a250 - https://github.com/repoforge/rpms/compare/b37c9e1...1c8a250\n* gitbot (~gitbot@sh1-ext.rs.github.com) has left #rpmforge\n```\n\nCheckbox not ticked:\n\n```\n* gitbot (~gitbot@sh1-ext.rs.github.com) has joined #rpmforge\n<gitbot> rpms: master Steve Huff * 8c86fca (2 files in 2 dirs): updated bzr-2.3.1 and accompanying bzrtools-2.3.0 (rfx on el6) ...\n<gitbot> rpms: master root * 3185d5f (1 files in 1 dirs): Updated to 1.0.8.\n<gitbot> rpms: master David Hrb\u00e1\u010d * 1c8a250 (1 files in 1 dirs): p7zip-9.20.1\n<gitbot> rpms: master commits b37c9e1...1c8a250 - https://github.com/repoforge/rpms/compare/b37c9e1...1c8a250\n* gitbot (~gitbot@sh1-ext.rs.github.com) has left #rpmforge\n```\n\nStrange!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1028050", "body": "Thanks, seem to work now!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1028050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1028379", "body": "Somehow I am not getting any e-mails from the e-mail hook anymore... :-( I am not sure if it's just that your queue has piled up or there's a problem with the hook.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1028379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1031093", "body": "Works for me now!\n\n@graydon: Communigate handles it just fine, but if this turns out to be a real trouble for the majority of users, maybe then setting Reply-To can be also tied to the `send_from_author` checkbox.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1031093/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1032954", "body": "@graydon: I added another pull request with 1-line change to solve this issue, which we didn't anticipate:\n\nhttps://github.com/github/github-services/pull/87\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1032954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1403298", "body": "> I'm not sure how muc works, but is it really noisy if the bot enters and leaves a lot? I think the IRC hook gets noisy like that, and people opt for the CIA hook instead.\n\nYes it is. In our case, we had to -n the channel and use the patch that you have merged earlier in order to prevent the bot from joining the channel before posting. Not everybody can -n their channel, since this exposes it to spam / flood bot attacks, but in our case it was an acceptable workaround.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1403298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "dagwieers": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1003987", "body": "Beware that the code uses commit['author'] so it does use the committer already, so it's just a matter of choosing a better name for the checkbox _send_from_author_ if that's preferred.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1003987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1035661", "body": "@technoweenie: Correct, the code was never run, only syntax checked. I guess I should have mentioned that. I have no clue how to run github service checks for testing :-/\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1035661/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1067154", "body": "Let me conclude this thread by breaking the news that Mailman 2.1.15 now provides a separate secret (rather than using the administrator or moderator password) for just this purpose ! Request https://bugs.launchpad.net/mailman/+bug/770581 and implementation http://bazaar.launchpad.net/~mailman-coders/mailman/2.1/revision/1297\n\nPS If you cannot update Mailman at this time, you can \"safely\" use the moderator password if moderation itself is not used (eg. read-only list).\n\nThanks everyone !\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1067154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "anna239": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1026828", "body": "Thank you!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1026828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/17714510", "body": "@joelmoss when PR is closed, changes are actually merged to repo, so commands should be applied at this point. But maybe there are another cases.. could you please describe your use-case?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/17714510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/17714914", "body": "@joelmoss so if I open a pull-request with comment like \"cool fix #M-34 Fixed\", you'll expect comment like \"New pull request created, <link>\" to be added to M-34, and when PR is closed, command \"Fixed\" should be applied, right?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/17714914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "pmuilu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1028188", "body": "Thanks! I'll check it out!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1028188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "pez5001": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1028576", "body": "I am not getting any emails either.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1028576/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1030265", "body": "Thanks.  Looks good on my end.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1030265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "leosmolas": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1029707", "body": "It's not working :(\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1029707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "graydon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1030810", "body": "This has broken integration with our commits mailing list. Any way we can set it back or override the reply-to setting?\n\n--edit--\n\nnever mind, figured out workaround using Approved: header.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1030810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1039730", "body": "Thanks all\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1039730/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "meh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1150991", "body": "Is it just me or the front end is still missing the branch stuff?\n\nJust making sure something on my network isn't failing with caching.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1150991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "euroelessar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1347013", "body": "I've updated the commit to fit the latest master\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1347013/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1375405", "body": "Thanks.\nThe another way is to implement muc connections at low level, we obviously don't need most of muc's stuff. Or you think that hook should join the conference only at the moment of sending the message and leave as fast as possible after it?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1375405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jrom": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1354750", "body": "No problem, new pull request in a while.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1354750/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1416941", "body": "Hm ok, I really didn't look at the changes on the new version. I'll change it in a while.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1416941/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3483468", "body": "Why you remove the link? :(\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3483468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "mdubakov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1410671", "body": "I vote up :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1410671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tmm1": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1413015", "body": "You should use the `summary_message`, `summary_url` and `commit_messages` helpers in `push_helper.rb`. See the campfire hook for an example. The advantage of `summary_message` is that it handles a lot more cases, like [tags](https://github.com/github/github-services/blob/master/test/push_test.rb#L35), [branches](https://github.com/github/github-services/blob/master/test/push_test.rb#L44) and [merges](https://github.com/github/github-services/blob/master/test/push_test.rb#L98).\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1413015/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "zohoproject": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1431557", "body": "Hi,\n     By test do you mean you want test Project Id and token?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1431557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1453617", "body": "Is the above test script ok?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1453617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1475367", "body": "Hi,\n  For the repository at https://github.com/grkumar/zprojects-bugtracker, we tried the ZohoProjects service hook, but we have not received any notification regarding the commits. Could you please let us know the reason.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1475367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "edavis10": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1508292", "body": "+1 All that the hook does is tells Redmine/ChiliProject to load the changes from the **local** git repository into the database. This won't do anything unless the changes were already pushed to the **local** git repository from the **remote** Github one.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1508292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "hanka": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1511742", "body": "Code is now updated to use new format for services\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1511742/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1646058", "body": "done, test is added\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1646058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "martindrapeau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1647349", "body": "No, you are correct. I removed that line.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1647349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1681498", "body": "How long does this generally take?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1681498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1708819", "body": "Thanks for pushing that live - it's working!\nA few things:\n1) Could you add this URL to the Install Notes for more detailed instructions?\n    http://www.planbox.com/start/help/scm_integration#github\n2) On our site there is a link back to GitHub. Do you want some query string on that for your own tracking and analytics?\n3) We will be writing a blog post to promote. Do you typically do the same on your end?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1708819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "mashiro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1663166", "body": "hello.\n\nthis patch is intended to send commit log to irc in notice.\nplease import this patch.\n\nthanks.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1663166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "sparrovv": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1719527", "body": "Hey guys, is there any chance to have this pull request merged to master in short time?\n\nThanks,\nMichal\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1719527/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "ziftendan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1720143", "body": "Really?  You cant imagine a use case for this?  We just want a server to be hit with an ssh connection everytime we make a commit to github.  If theres anything scary about that, its our problem on our end.  Nothing for you github guys to be worried about.  I dont get it?\n\n-----Original Message-----\nFrom: \"technoweenie\" reply@reply.github.com\nSent: Tuesday, August 2, 2011 6:37pm\nTo: daniel.vreeland@ziften.com\nSubject: Re: [github-services] Ssh service (#130)\n\nWhat's the use case?  We can think of several scary uses, and no valid ones.\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/github/github-services/pull/130#issuecomment-1714268\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1720143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1720590", "body": "We want to be notified immediately when a commit is made to github.  We would use the email hook, but our email is delayed and unreliable at times.  We would use the trac hook, but our repo is not public, and we have to keep it that way.  What is wrong with a simple ssh connection?  Look at the code, there are no commands actually being executed, its simply connecting, authenticating, and then hanging up.  It just lets us know that a commit has been made as soon as it is made, which is how we want it.\n\n-----Original Message-----\nFrom: \"technoweenie\" reply@reply.github.com\nSent: Tuesday, August 2, 2011 6:37pm\nTo: daniel.vreeland@ziften.com\nSubject: Re: [github-services] Ssh service (#130)\n\nWhat's the use case?  We can think of several scary uses, and no valid ones.\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/github/github-services/pull/130#issuecomment-1714268\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1720590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1722070", "body": "We want to be notified immediately when a commit is made to github.  We would use the email hook, but our email is delayed and unreliable at times.  We would use the trac hook, but our repo is not public, and we have to keep it that way.  What is wrong with a simple ssh connection?  Look at the code, there are no commands actually being executed, its simply connecting, authenticating, and then hanging up.  It just lets us know that a commit has been made as soon as it is made, which is how we want it.\n\n-----Original Message-----\nFrom: \"atmos\" reply@reply.github.com\nSent: Tuesday, August 2, 2011 6:31pm\nTo: daniel.vreeland@ziften.com\nSubject: Re: [github-services] Ssh service (#130)\n\nNope, not gonna happen.  There's no sane use case for this that I can imagine.  Sorry.\n\n## \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/github/github-services/pull/130#issuecomment-1714220\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1722070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "marc-hughes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1746132", "body": "Hi guys, is there anything else I need to do to get this accepted?  I'm really excited to get this support in.\n\nThanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1746132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/73884", "body": "That's what weeks of python development will do to you...\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/73884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "dandean": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1842902", "body": "Works for me!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1842902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "reagent": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1890884", "body": "Thanks -- it's working perfectly now.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1890884/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "ksoysal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1912391", "body": "I would like to test it too :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1912391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1915136", "body": "I was just looking forward to integrate our changes into our TargetProcess-Tickets, not for the protocol used :)\nThank you for your reply, now I understand the long time span \"nothing happening\"\nThank you for contributing\nbest regards\nKemal\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1915136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "JonnyFunFun": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1912971", "body": "I'm not sure if it makes sense to continue with this pull request, as TargetProcess now has a full REST API.  So all the calls currently done via SOAP (yuck) can go away...\n\n@technoweenie - Perhaps it makes more sense for me to close this and reopen a new pull request after migrating the entire hook away from the bloated SOAP API?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1912971/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/1915155", "body": "@ksoysal I'll be rewriting most of this hook within a week or so to utilize the new API.  After that I'll work with @technoweenie and the rest of the folks at GitHub to get it in.  In the meantime, if you want to assist in any way with the development of the hook, please let me know.\n\nI'm going to close this pull request and open a new one when the hook is rewritten and done.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1915155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2041891", "body": "I was actually attempting to use the url_prefix, but whenever I set it to something like http://localhost/tp/ then all of the subsequent http_\\* calls were stripping the tp/ part, so they were ending up like http://localhost/api/v1/(...).  So I decided to remove it and just do it the way it is now.  \n\nYou make a good point with verify_ssl...I'll work on a second runthrough of this with an option to toggle verify_ssl.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2041891/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/7188649", "body": "Hey @nzben!  To be honest, there really hasn't been much progress on this hook now that Targetprocess has a native plugin for Git.  I'd recommend checking that plugin out if you're looking to integrate your repositories with Targetprocess - it works a lot better.  In the meantime, I'll make a note here to look into fixing this when some spare time comes around :laughing: \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/7188649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "se3000": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/1913693", "body": "+1\n\nI only want master to deliver my stories.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/1913693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "michaelvillar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2016915", "body": "Done :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2016915/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2020814", "body": "Haha. Yeah don't worry.\nCan we get the thing working before tomorrow? \nWe're releasing a new version tomorrow, we really need this :)\n\nThank you for your understanding !\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2020814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2021944", "body": "Okay. Thank you very much !\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2021944/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "cadorn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2117329", "body": "I don't know ruby and cannot find an example of a very simple test.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2117329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2117334", "body": "If you paste one here I can update the PR.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2117334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2124184", "body": "Ok, test is added. I hope it is correct as I am having a hard time running it.\n\nI have the 'json' gem installed, but am getting:\n\n```\n./script/deliver_payload sourcemint\n./script/deliver_payload:5:in `require': no such file to load -- json (LoadError)\n    from ./script/deliver_payload:5\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2124184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2124300", "body": "Oops. I missed some strings to replace :) Sorry.\n\nAs I said, I am unable to run the test because the test script fails (See error above) otherwise I would have probably caught that.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2124300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2127859", "body": "Ok. Running the tests with \"rake\" works.\n\nIt would be good to have that mentioned in the README for this repo for all those of us out there who don't speak ruby.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2127859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2127861", "body": "Will have a tested PR soon.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2127861/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2128031", "body": "See: https://github.com/github/github-services/pull/152\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2128031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2134604", "body": "The lat one was broken. As you said, the adapter was named wrong etc...\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2134604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2227583", "body": "@technoweenie Any idea when this will go live?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2227583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "johnhaley81": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2231361", "body": "Will the ontime doc show up under the service fields when the user clicks on the OnTime service hook?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2231361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2239543", "body": "Ugh, turns out I have a small update to the docs to do. Should I just change it on my end and put in another pull request?\n\nI won't be able to finalize the change until they decide how they want some of the UI to look like so it might be a day or 2.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2239543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2241958", "body": "Nah, you can leave it in. It hasn't gone live yet but I can use it to test a\nfew things.\n\nOn Thu, Sep 29, 2011 at 10:33 AM, rick <\nreply@reply.github.com>wrote:\n\n> Ah you'll have to do a new pull because this one is closed.  Do you want me\n> to remove the hook in the meantime?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/github/github-services/pull/157#issuecomment-2240853\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2241958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2314323", "body": "I just checked the docs for the service hook and they are the same. Should they be updated already?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2314323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2314664", "body": "Ok cool, just wondering :)\n\nThanks man.\n\nOn Thu, Oct 6, 2011 at 1:27 PM, rick <\nreply@reply.github.com>wrote:\n\n> I haven't updated them yet.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/github/github-services/pull/163#issuecomment-2314637\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2314664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/642301", "body": "Whoops, yeah we bumped the version to 11.1 instead of 11.0.2 and didn't run the tests after we bumped the version. Sorry about that man :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/642301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "trobrock": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2245383", "body": "Pull request #158 adds the option for a long_url to follow the convention in the IRC service\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2245383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/621539", "body": "Sounds like it might make more sense to have it be optional\n\nOn Sep 29, 2011, at 6:18 PM, Tekkub\nreply@reply.github.com\nwrote:\n\n> Agreed, in fact I think we specifically removed the shortening from this hook a while back.\n> ## \n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/github/github-services/commit/c0fbacc2d6c6b3058924307e90d3e893fb0f4743#commitcomment-621537\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/621539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "eric": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2251871", "body": "Why isn't the default the way it's always been?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2251871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2252076", "body": "I agree with that concept, but it seems like different mediums would have different defaults. I wish it had just been a `short_url` option that had defaulted to off...\n\nThanks for letting me complain.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2252076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/415434", "body": "Cool stuff.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/415434/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/621530", "body": ":-1: I don't think I'm a fan of this change. I would rather go directly to the URL \u2014 campfire already shortens long URLs.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/621530/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "runesoerensen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2293348", "body": "Absolutely. I've also included the missing docs\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2293348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2296622", "body": "It works great... Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2296622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "levent": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2368127", "body": "Sweet!\nWe might look at hooking up pull requests as that could be really useful.\nI'll have a play.\nThanks.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2368127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2377198", "body": "Thanks. I managed to hook up a few repositories last night and they are still working fine.\n\nHowever the Pachube option no longer appears in the service hooks list?\nCaching or something?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2377198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "czarneckid": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2498845", "body": "Done and done.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2498845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kennethreitz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2499612", "body": ":sparkles: :+1: :sparkles:\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2499612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/541885", "body": "Badass! How long has `git.io` been around?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/541885/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stevegraham": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2499673", "body": "Awesome!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2499673/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "vlaminck": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2538448", "body": "Yes. I am building the GitHub integration into Lean-to, and we no longer accept https.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2538448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "lautis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2559764", "body": "I added information to docs about what data user can expect to be posted to Flowdock.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2559764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "laserlemon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2575493", "body": "Could we merge it in this morning? I'm not launched yet but want to wrap up some testing. Thanks, Rick!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2575493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/688052", "body": "Is this live now?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/688052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "johntdyer": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2612892", "body": "I really dont know TestUnit at all, any chance I could do them in Rspec?  :) \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2612892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "minecrafter": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2640914", "body": "Sorry, didn't make tests. >_< I'm a complete and total noob when it comes to Ruby right now.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2640914/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2640920", "body": "I believe writing a test should be simple imho however.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2640920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "edalquist": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2643627", "body": "Note that this is my first foray into Ruby and I'll be the first to admit that my approach may not be 'the ruby way'. All of the existing tests pass as does the new test. This change should be backwards compatible with all existing bamboo plugin configurations.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2643627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2778577", "body": "I'm primarily a Java developer. The cleaned up code looks great and thanks for pulling this in. I'll be able to turn off 4 more polling based Bamboo jobs once this is deployed.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2778577/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "stiang": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2687508", "body": "Thanks for the quick pull! Actually, it looks like it doesn\u2019t work :( I just performed a test push and got no requests in the log from the github machine(s). I guess we might need a more expensive wildcard cert, with better support. Do you have any more information about what we need to look for to be sure that this will work with github-services?\n\nAlso, can you revert the change or do I need to send a new pull request?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687823", "body": "I did another push and still see nothing from github. Our certificate is a valid Comodo PositiveSSL wildcard certificate, but we have had some reports that it isn\u2019t recognized by curl on a fresh server. We haven\u2019t investigated this yet, and my knowledge of SSL is spotty, but I guess it\u2019s because our CA isn\u2019t in the default CA cert bundle on misc. Linux distros.\n\nIt would be great if you could find out what goes wrong on your end. What do you need to test it? I can send you a temporary API token by email, for example, and you could just use 'bugly' as the account name.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687942", "body": "Oops, I didn\u2019t see that before I sent my comment. Yes, that looks like the problem that has been reported. \n\nThanks for adding the workaround for now. I agree that working https with no warnings or errors would be preferable. Can you add the missing CA cert if I point you in the right direction or is our only option to get a certificate with better out-of-the-box support?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2687942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kylev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2689451", "body": "Also worth noting: my new test calls @stubs.verify_stubbed_calls to ensure the stubbed HTTP call was made.  None of the other tests do that, but they probably should (at least the \"it should have done a callback\" ones).\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2689451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "davedash": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2732132", "body": "I would just do it now, for great justice, before they look.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2732132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/225353", "body": "`https`\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/225353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/225354", "body": "huh, I would have thought they'd just give us the branch name.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/225354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "progrium": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2778830", "body": "I just assumed the default payload would be passed along, but not actually used. You're right, no payload is really necessary. If it's hitting what will be a public API then whatever is necessary to make the build.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2778830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "eedeebee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/2879991", "body": "I was afraid of that.  But, running a mailing list for distributing commit emails to 2 addresses seems overkill to me.  Would abuse be an issue if you limited this to 2 (or N) addresses?  My use case, fwiw, is that I already run mailman 2.x and I need commits to go to 2 different lists for some of my projects.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/2879991/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3021236", "body": "I did amend a couple weeks ago in case you missed it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3021236/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "parshikov": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3036089", "body": "What event comes before Jekyll run? May be it's better to put this code after Jekyll finishes work?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3036089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3037755", "body": "Oops. Cheking **gh-pages** of course!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3037755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/273993", "body": "I'm working it out\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/273993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/275637", "body": "Done!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/275637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "nkohari": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3082223", "body": "There we go. Sorry about that. :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3082223/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "agh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3303847", "body": "Apologies about that, I hadn't noticed that #presence is a Rails-ism!  Glad you got the gist of the patch though.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3303847/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "benburkert": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3380338", "body": "Tested this and it's working. It still requires monkey patching Net::SMTP to make sure the MAIL FROM line only includes the email address.  Also, this makes it possible to add an html body if we want.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3380338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "KensoDev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3413905", "body": "Will do\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3413905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3416431", "body": "The previous pull request https://github.com/github/github-services/pull/213\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3416431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3418129", "body": "Added documentation in this pull request:\nhttps://github.com/github/github-services/pull/213\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3418129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "aitorciki": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3433505", "body": "Oops, right, fixin it!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3433505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3433927", "body": "Thanks!\n\nIt's new development, we needed to hook to test it (and to know the exact issues event format!). It's going to go live tomorrow or the day after.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3433927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3473700", "body": "Oh, by the way, Ducksboard's GitHub commits widget is already live and getting webhook notifications. You asked about it a couple of days ago after accepting my first pull request.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3473700/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3495364", "body": "OK, I've updated the docs to mention the default events as you asked.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3495364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3527484", "body": "Is there anything else needed for the commit to be accepted?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3527484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/340471", "body": "A new pull request fixing it is ready!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/340471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "philips": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3451084", "body": "Fixes issue #215\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3451084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "Mange": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3484349", "body": "@jrom Sorry, that was a mistake. It should be trivial to add\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3484349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "chuyeow": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3579110", "body": "@technoweenie Can you check pull request #224? It's rather annoying and useless without the URL :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3579110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/issues/comments/3579123", "body": "Yup I agree it's not very useful without the URL! See #224, essentially does the same thing.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3579123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "saimonmoore": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/github/github-services/issues/comments/3581050", "body": "Oops I missed your PR :(\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/issues/comments/3581050/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bensie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/85051", "body": "This is still not right -- it's treating commit messages as a paste now and dropping the auto-link entirely\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/85051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/comments/86329", "body": "@netguru - I opened a ticket weeks ago, no response.  I heard they got bought out by Teambox, so maybe no one's really owning support at the moment.  Couldn't we just go with dashes and not wrap the URL in parenthesis?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/86329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "netguru": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/85158", "body": "@bensie - sorry about that :( I guess we should try to get talker to fix this\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/85158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "aymerick": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/202010", "body": "This totally breaks this service with my IRC server. The PASS command MUST be the first command sent to the server...\n\nCf. RFC 1459 (4.1.1 Password message): \"The PASS command is used to set a 'connection password'.  The password can and must be set before any attempt to register the connection is made.  Currently this requires that clients send a PASS command before sending the NICK/USER combination and servers _must_ send a PASS command before any SERVER command....\"\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/202010/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "josh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/202197", "body": "Basecamp requires SSL on all accounts now. I think that last ssl arg should always be true.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/202197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "review_comments": []}, "ZoeS17": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/230109", "body": "Did you mean to comment `Returns the last unread email` here at _Line 277_ ?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/230109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "arbales": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/230277", "body": "It's the vendored RDoc from the mail gem, you might try there.  \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/230277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/comments/950812", "body": "Neato.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/950812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jbarnette": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/273734", "body": "Any reason that this couldn't be `response = speak(data, messages.join(\"\\n\"))` instead? That'd keep every line in multi-commit messages from being timestamped in Convore.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/273734/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "ognevsky": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/549116", "body": "Why can we add only one address? What about adding CC or BCC? I can commit this if somebody need.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/549116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "dmathieu": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/622731", "body": "That's interesting. But it's be cool if it could guess the repository's default branch and use it instead of hardcoding it to master.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/622731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "powdahound": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/673276", "body": "Thanks! Didn't realize tests had been added to this project.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/673276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "bbhoss": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/1223561", "body": "Why was this disabled? I would like to be able to send to MUCs.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1223561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1224320", "body": "Do you know if there is a reason it stays active? It seems like it could just hop in, post the messages, and leave. Do you see any problems with that?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1224320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/747765", "body": "I'm not 100% sure, but from what I was able to gather, this just joins the room so that deliver_deferred works. The deliver_deferred type is :groupchat, and the conference (actually a JID). It seems that you have to be joined to the room before the deliver_deferred works with MUCs.  My change was just to make it not try to maintain a connection, I assume the code before worked.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/747765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/747767", "body": "Also, Jabber::Simple is not the most idiomatic piece of Ruby out there :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/747767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "TimHeckel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/1238521", "body": "thanks!! any eta on when this will show up as a service hook? _never mind_ -- i see it now. thanks again.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1238521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "CodePorting": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/1268487", "body": "@technoweenie You are right in doing so, it was being fetched from the response to the login call. We would like to get token field removed from the settings page and be able to use it locally. Please suggest if it is a good idea at this time?\nI really do appreciate the help you have provided so far, thank you very much for being so cooperative and helpful. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1268487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1268491", "body": ":)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1268491/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "c-schmitz": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/1305104", "body": "Oh man, that's too bad. I really appreciated the new feature and it worked fine for me. Any ETA when this feature will return?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1305104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "calavera": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/1451972", "body": "I'm afraid we'd need to revert this commit, but I'd like to find a proper solution instead. I've seen xmpp4r-simple has had ruby 1.9 compatibility for 3 years but it seems a newer version never was released. \n\nWe **cannot** depend on non cached gems. There is a pull request open to release a new version with a comment recommending other xmpp gem because smpp4r-simple is abandoned:\n\nhttps://github.com/blaine/xmpp4r-simple/issues/9\n\n/cc @technoweenie, @jpmckinney\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1451972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1452089", "body": "So, btw, what are you using xmpp for? I cannot find any reference in the services core, is it required for any dependency?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1452089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1452222", "body": "I see the module is called Jabber, sorry for the confusion. Anyways GitHub doesn't use Ruby 1.9, so we don't need this for now.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1452222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1452449", "body": "GitHub Enterprise cannot install anything from github.com. Our customers don't have access to internet and bundle fails trying to setting up github-services.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1452449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/7408967", "body": "@mrb  are you sure about that `insecure_ssl: true`?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7408967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jeffweiss": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/1921450", "body": "@technoweenie ah, right on. That makes sense. We're only using `opened` where it's the same. Apologies for the extra work. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1921450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/1921469", "body": "@technoweenie is the sender portion of the payload documented anywhere because I haven't seen it and it's not here: http://developer.github.com/v3/repos/hooks/\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/1921469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/1623929", "body": "@technoweenie I see this was changed in 82ba1dd0626446affbc3e4a0efc511ec6d4b1358 to `sender`, but I don't see `sender` in the data returned by `https://api.github.com/repos/puppetlabs/facter/pulls/306`.\nSince I don't have any authoritative data on the actual payload of a pull request (since using web hook doesn't seem to work), I had to guess by the content of the pull itself.\nI'd hate for this to cause regressions for you.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1623929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1642946", "body": "@technoweenie standby, fixing.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1642946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1643012", "body": "@technoweenie see github/github-services#402\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1643012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "xu3re": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/2113790", "body": "commit\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/2113790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "aelgru": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/2367304", "body": "Excellent - thank you very much! :-)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/2367304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "prdatur": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/2618411", "body": "arg, sorry, thx for the quick fix. just tested with bundle exec command, my ruby did not work with the other methods, explained within the readme.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/2618411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "yegg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/3018089", "body": "Thanks :+1: \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/3018089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "thewoolleyman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/3133839", "body": "This broke script/bootstrap, which is referred to as the way to get started in the README.  Now can't find tinder 1.8.0.github.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/3133839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "sim0629": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/3628979", "body": "The brackets are not shown in the black background.\nirc_pull_request_summary_message, irc_issue_summary_message, etc., don't have the explicit color codes for the repo name brackets.\nHow about reverting this commit?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/3628979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Pomax": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/3636503", "body": "this will bite any number of people who use different themes. mIRC users will mostly be accustomed to black text on white background, irssi users grey text on black background; if the brackets aren't showing up, rather than reverting a \"clear color\" code so that the brackets are styled as default text would be much better.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/3636503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/comments/3649166", "body": "not off hand. There is a string pushed into \"message\" that contains the pink color code, which then persists to the next push, iirc.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/3649166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "simnalamburt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/3640145", "body": "I agree with sim0629's comment. I think it would be better to revert or make it better this part\nFirst, in the sense of that every opening color code must have its own closing(clearing) code, \\00301 without \\017 aren't good. Whether we preserve this code or not, we should give them their own Jill. Secondly, you don't want to set the plain text's color explicitly because it will let users of unconsidered environments inconvenient (in this case, irssi). I think letting it be default color so that the IRC client can find their ideal text color would be best and easiest. Also it is very importent to maintain the code's coherence consistently. The brackets of irc_pull_request_summary_message, irc_issue_summary_message, etc are not colored black but left default. We should unify them.\n\nBy the way, I've seen your pink bracket issue https://github.com/github/github-services/issues/467 and how you fixed it but I couldn't reproduce the problem. Do you know why and how the pink bracket problem had occured? I think your answer would help fixing this problem properly.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/3640145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kcm1700": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/3655200", "body": "I think \\017 is the \"clear color\" code for various irc clients, and the message already contains \\017. I've tested once with mIRC, irssi, and weechat.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/3655200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "stefanor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/3974662", "body": "Spot the non-rubyist, thanks :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/3974662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jimmynewbee": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/4050657", "body": "man this is hard\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/4050657/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "omnarayan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/5129191", "body": "@atmos  Thank you for pushing our changes, Our service hook is not visible in web-service hook list (setting page). Please help us to figure out why its not listed under service hook list. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/5129191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/8655355", "body": "I have requisite information in /docs/ robustest;\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8655355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8714981", "body": "Removed the comment \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8714981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "blackland1954": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/5450768", "body": "Thanks for all the help,im learning as fast as I can ,really appreciate everything\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/5450768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "KirstensAmazing": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/5602896", "body": "I don't see this functionality in my hipchat services hook. Is something wrong?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/5602896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Eshfeek": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/5686557", "body": "0fc7d48\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/5686557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Peeja": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/5692212", "body": "![Groundhod Day](http://i.imgur.com/Uaxm4r6.jpg)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/5692212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "steve-jansen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/6938341", "body": "@jimgolfgti :+1: \n\nDidn't event know this repo existed!  Thanks for fixing!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/6938341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nukulb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/6938424", "body": "I am a little confused here.\n\nThe reason I made the fix for the jenkins plugin was because I was already receiving 'push' for the \n\"X-GitHub-Event\" header when triggering webhook from github.\n\nAlso its been deployed on our system here for 3 months or so without an issue. Just wondering how this can continue to work for us but is failing for others? \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/6938424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/comments/6938562", "body": "I get it. The service also hits the same piece of code and hence its causing the issue.\n\nI think the fix should lie in the jenkins plugin so I will make the fix there and then you can revert this. It doesn't actually make much sense to send a \"push\" github event type.\n\nI apologize for the miss, I am fixing it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/6938562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "nzben": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/7182144", "body": "Hey @JonnyFunFun, I'm experimenting with this service against tpondemand.com but your latest change seems to have a few problems:\n- TP isn't respecting Content-Type, and instead wants ?format=json\n- Your original code around requesting valid entity states for a given entitytype is still required.\n\nAre you actively looking at this? To me it seems like a revert would get this working again.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/7182144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/comments/7195432", "body": "Yeah, the integrated GitHub plugin is a bit useless, because it polls for changes every 5 minutes, and usually misses a few, especially with a busy repo.\n\nWhat I've done instead is add a separate service that caters for TP OnDemand's unique API: https://github.com/github/github-services/pull/900\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/7195432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "ecarreras": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/7184921", "body": "Why convert to Integer? The HipChat [API](https://www.hipchat.com/docs/api/method/rooms/message) accepts the room id or the name of the room, and I think it's more easy remember the name than the room id.\n\nThe problem is if you want to send the message to more than one room per name.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/7184921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jansiwy": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/7430584", "body": "i didn't test it, but i'd say: yes.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/7430584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/16380396", "body": "shouldn't this be `update_app_revision(sha)`?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16380396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16380618", "body": "in this case, the pushed `branch_name` is already the `configured_branch_name`. so `update_app_revision(configured_branch_name)` is obsolete, right?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16380618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16381165", "body": "you are right, it makes sense... hmm... still, it requires more permissions.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16381165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16381498", "body": "yes (without updating with IAM policy files for the user having the specified AWS keys)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16381498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "sodoku": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/7774615", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/7774615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "adrianmoisey": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/9646055", "body": "This seems to send any event to jenkins as a 'push' event. Surely that's wrong?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/9646055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/comments/9646064", "body": "Oh, it's in `receive_push`, my bad.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/9646064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Jessica1118": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/10691313", "body": "thanks\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/10691313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "Electrons": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/12007687", "body": "I don't like the situation of you people.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/12007687/reactions", "total_count": 1, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 1}, "author_association": "NONE"}], "review_comments": []}, "abo-karwh": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/12458055", "body": "+This service hook triggers a deployment on deployer.vc whenever a push is made.\n+\n+Install Notes\n+-------------\n+\n-  1. **Deployment Address** - URL of the deployment to be triggered whenever a commit/push occurs, normally in the format https://<account>.deployer.vc/#/deployment/<deployment_id>\n-  2. **API Token** - An API token for your deployer.vc account, which can be created under https://<account>.deployer.vc/#/account \n  View\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/12458055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "lyoff": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/22017101", "body": "typo here (`restrict_to_last_comment` vs `restrict_to_last_commit`), which causes the restriction to always be false", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/22017101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "kalenobr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/github/github-services/comments/25994923", "body": "e3335b8", "reactions": {"url": "https://api.github.com/repos/github/github-services/comments/25994923/reactions", "total_count": 1, "+1": 0, "-1": 1, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "adambox": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/40154", "body": "yes, I changed the default to 7+. I work at Fog Creek in support and we have very few customers still using pre-7 FogBugz. I think it would be better to remove the version field and just instruct people to put in the ixRepo if they're on 7+ but I didn't want to make big changes to this script since I'm not a Ruby guy and have no way to test it ;)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/40154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tofumatt": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/225355", "body": "Well, this way you could watch for tags or whatever. Makes sense.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/225355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/236193", "body": "I'm embarrassed that I never looked. I'll fix this up to use them -- my bad!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/236193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jcs": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/575534", "body": "Yes, it should be there.  The per-user token will still be required from the user.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/575534/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dscape": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/612110", "body": "``` ruby\nstring :subdomain, :username, :branch \npassword :password\n```\n\nThis seems like it should work no?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/612110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2105447", "body": "@technoweenie we haven't announced this functionality yet, we want to do it as part of a much larger push. \n\nSo there's no problem, people using it so far have found it by chance and are unlikely to be using this, at least to our knowledge.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2105447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "caldwell": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/636603", "body": "Hmmm. I can't get it to work:\n\n```\ncurl -H 'Accept: text/plain+diff' -D-  https://github.com/mojombo/grit/commit/06f63b43050935962f84fe54473a7c5de7977325 | grep Status\n```\n\ngives me:\n\n```\nStatus: 406 Not Acceptable\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/636603/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/730120", "body": "On 4/24/12 2:55 PM, Lucas Madar wrote:\n\n> > @@ -131,6 +131,24 @@ def commit_text(commit)\n> > \n> > ```\n> >  EOH\n> > ```\n> > -    if data['show_diff']\n> > -      patch_resp = http_get commit['url'] + \".diff\" # Why doesn't this use accept headers?\n> \n> I am getting an error \"Status 406\" using the github e-mail service hook on my repositories with embedded diffs. Did something here get pushed that shouldn't have? Or is it unluckily unrelated?\n\nI _might_ be related but I'm not sure. I originally tested with curl and\nnoticed that github didn't honor the \"Accept\" header and, in fact,\nreturned \"406 Not Acceptable\" (which is what you are getting) when I\npassed in anything other than \"text/html\". But in the end I didn't set\nthe \"Accept\" header, so I don't understand why you would be seeing that.\n\nThere's a little bit of discussion of this section of the code in the\npull request here:\nhttps://github.com/github/github-services/pull/275#r636575\n\nFor an example, check out this:\n\nhttps://github.com/github/github-services/pull/275/commits\n\nvs.\n\nhttps://github.com/github/github-services/pull/275/commits.json\n\n-David\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/730120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "LucasMadar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/729436", "body": "I am getting an error \"Status 406\" using the github e-mail service hook on my repositories with embedded diffs. Did something here get pushed that shouldn't have? Or is it unluckily unrelated?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/729436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "hostalerye": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/967317", "body": "I've done the changes to send multiple commits in a single HTTP call\n\n2012/6/12 rick <\nreply@reply.github.com\n\n> > @@ -0,0 +1,27 @@\n> > +class Service::HubCI < Service\n> > -  string :token\n> >   +\n> > -  def receive_push\n> > -    http.ssl[:verify] = false\n> > -    payload['commits'].each do |commit|\n> > -        http_post hubci_url, commit.to_json\n> > -    end\n> \n> Is there any way your service can accept a bulk payload of multiple\n> commits?  I'd love to lower the number of HTTP calls if possible.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/github/github-services/pull/347/files#r966334\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/967317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "amitsnyderman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/1001664", "body": "Definitely. The push summary should suffice here anyway.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1001664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1007162", "body": "Actually, at the moment, not possible to reduce down to a single request. The existing Work Market API doesn't support a batch payload, and commit messages identify specific entities that they need to be attached to.\n\nCurrent usage is purely for internal tests at the moment. Is this something you're completely against or think it could fly with low volume?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1007162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "lloydwatkin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/1448107", "body": "Url shortener wasn't working turning tests or when I recreated the call on the command line. Therefore I implemented my own. If you are happy that the current one works ok I can drop the definition out.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/1448107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/14487071", "body": "Sure, will get this done tomorrow and push an update. Thanks.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/14487071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/14501438", "body": "@kdaigle removed the commented options. I had hoped to support the full list of events but have settled with supporting the same as the IRC service. As I think I mentioned in a previous comment it would be good to push the message generation to another class and share between IM style notification systems (XMPP/IRC/hipchat/slack/gitter/etc).  But that can come later :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/14501438/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20792663", "body": "Added so I could use the result in unit tests, i.e. everything ok I get 'true' in return.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20792663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "abhishekmunie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/2107266", "body": "I wasn't sure which event is triggered when a pull request is merged.\nI want the deploy request to be made when ever repo code changes.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2107266/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "npotternyc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/2266246", "body": "ahh, thanks. fixed and pushed.\n- Nathan\n\nOn Thu, Nov 29, 2012 at 9:59 AM, rick notifications@github.com wrote:\n\n> In services/asana.rb:\n> \n> > @@ -7,32 +9,49 @@ def receive_push\n> > \n> > ```\n> >  user = payload['pusher']['name']\n> >  branch = payload['ref'].split('/').last\n> > ```\n> > -    # rep = payload['repository']['name'] + \"/\" + payload['name']\n> >   +\n> > -    branch_restriction = data['restrict_to_branch'].to_s\n> > -    commit_restriction = data['restrict_to_last_comment'] == \"true\"\n> \n> It'll equal \"1\", not \"true\".\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/github/github-services/pull/460/files#r2265581.\n\n## \n\nNathan Potter\nVP Engineering, Chartbeat\n--------------------------------------->\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2266246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2270552", "body": "this one's the ticket. :)\n\nOn Thu, Nov 29, 2012 at 11:09 AM, rick notifications@github.com wrote:\n\n> In services/asana.rb:\n> \n> > @@ -7,32 +9,49 @@ def receive_push\n> > \n> > ```\n> >  user = payload['pusher']['name']\n> >  branch = payload['ref'].split('/').last\n> > ```\n> > -    # rep = payload['repository']['name'] + \"/\" + payload['name']\n> >   +\n> > -    branch_restriction = data['restrict_to_branch'].to_s\n> > -    commit_restriction = data['restrict_to_last_comment'] == \"true\"\n> \n> \"1\" the string, not the integer :)\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/github/github-services/pull/460/files#r2266584.\n\n## \n\nNathan Potter\nVP Engineering, Chartbeat\n--------------------------------------->\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2270552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "dwradcliffe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/2707679", "body": "> Let's continue doing every push. It provides better redundancy in case of an outage on either side.\n\n(https://github.com/jquery/plugins.jquery.com/issues/83#issuecomment-12472395)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2707679/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "treeder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/2746087", "body": "Bundle update was hanging forever with the existing Gemfile so I had to update a few of them to get it to update properly. Might be able to turn some back, but was pretty painful with all those old gems. That too much upgrading?\n\nIronMQ uses excon if it's ruby 1.8. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2746087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "miszobi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/2523120", "body": "I've changed them to get more descriptive field names in the configuration form. matching the ones in FishEye.\nBeing able to trigger a scan remotely is a new feature, and not available in a released version yet, so breaking existing hooks shouldn't affect anybody.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/2523120/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "foca": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/3776364", "body": "GitHub, not Github :)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3776364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "tu1ly": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/3836796", "body": "so should i use payload.to_json as in https://github.com/github/github-services/blob/master/lib/services/codeclimate.rb ( listed as acceptable in your post)  (i though it is equal to JSON.generate) or problem is that i add branch & vanity ?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3836796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3837908", "body": "fixed\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3837908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3890509", "body": "@jpadilla added it to url https://github.com/github/github-services/pull/573/files#L1R16\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3890509/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3895969", "body": "@technoweenie so is it ok as it was ? https://github.com/apiaryio/github-services/commit/3433edb5f2363b876e352bddd62798e4bf7445d4\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3895969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jpadilla": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/3889376", "body": "@technoweenie @tu1ly what would be an alternative? I thought \"unmodified\" payload actually meant not modifying anything inside the payload hash. On my recent pull request to add a service (https://github.com/github/github-services/pull/578) I add some extra data to the POST to be able to identify to what event the payload belongs to and pass along other values that the user has to enter when activating the service. Move and stuff them inside headers, that sounds kinda crappy. Any better ideas?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3889376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "MacSwinarski": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/3915819", "body": "but this is the actual bug fix; the form field name is generated based on property name, which always was and is \"repository_name\"; the problem is that we always received \"repository_name\", but were expecting \"custom_repository_name\";\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/3915819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "fredrocious": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/4060524", "body": "Ah that'd be perfect. Much better than the timestamp.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4060524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4060691", "body": "Thanks, we can switch to 'Authorization' if that would be more futureproof.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4060691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4065023", "body": "How do I access the internal event id?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4065023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "semipermeable": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/4345545", "body": "Those are Vim swap files.  (My apologies for omitting a note on that in a commit message!)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4345545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4346199", "body": "I've pushed a new commit with more precise description of event handling.  Let me know what you think.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4346199/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "martyngigg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/4346373", "body": "OK, I've reverted the key name\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4346373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "tcannonfodder": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/4656332", "body": "Our API standards require a header named `X-FreckleToken` with their API key to work properly. If I can extract the `project` value from the payload, then I'll use that. Thanks for the head's up.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/4656332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "adelevie": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/6136468", "body": "Hey @atmos, [`CONTRIBUTING.md`](https://github.com/github/github-services/blob/master/CONTRIBUTING.md) doesn't mention anything about which classes to inherit from. The examples just use `Service::ServiceName < Service`, so I did the same. Should/Could I update `CONTRIBUTING.md`?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6136468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6137083", "body": "Sure. Should/Can I take myself off? ~~Does this mean Iron.io is generally OK with having this Service as soon as some of the smaller issues are _ironed_ out?~~\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6137083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6137318", "body": "Resuming discussion with @atmos:\n\nRunning `test/iron_worker_test.rb` returns:\n\n``` sh\n/Users/adelevie/programming/github-services/lib/services/iron_worker.rb:1: uninitialized constant HttpPost (NameError)\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6137318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6138383", "body": "@atmos, I changed this, per the Simperium example. However, I can't get this working locally. Running the test:\n\n``` sh\nruby -itest test/iron_worker_test.rb\n/Users/adelevie/programming/github-services/lib/services/iron_worker.rb:1: uninitialized constant Service::HttpPost (NameError)\n```\n\nAnd from the console:\n\n``` sh\nscript/console\n1.8.7 :001 > svc = Service::IronWorker.new(:push, {'token' => '<censored>', 'project_id' => '52242ff648279a0005000005', 'code_name' => 'deploy'})\nNameError: uninitialized constant Service::IronWorker\n```\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6138383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "paddycarver": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/6136953", "body": "Is it possible to add multiple people for this? If only one person is able to be pinged, I feel like @treeder (our CTO) would be the appropriate person.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6136953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6136974", "body": "I think the more appropriate channel for web support would be http://get.iron.io/chat--an online chatroom staffed by our engineers.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6136974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "halfdan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/6554633", "body": "Okay. https://github.com/github/github-services/blob/master/CONTRIBUTING.md still lists Service and not HttpPost. I'll update my PR.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6554633/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "BM5k": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/6846983", "body": "I figured as much. Converting them over the vanilla campfire API is a pain. I'm not sure which is less bad.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6846983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6862216", "body": "My original goal was to add support for the new notifications. That can be done without changing from room name to room id.\n\nThe other changes were an attempt to make this plugin a better citizen wrt the latest guidelines.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/6862216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mrb": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/7409046", "body": "@calavera Hey - yeah unfortunately because we're on a bit of a deadline, we're going to defer changing the SSL story on our side for a bit. Thanks for pointing it out, though.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7409046/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "suwatch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/7483319", "body": "Sure will get rid of that.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7483319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7483323", "body": "definitely\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7483323/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Mumakil": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/7786227", "body": "Thanks! I'll update the pull request.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7786227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "davidkelley": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/7906636", "body": "Yea I think so. I will take a look into whether or not it will affect any other service hook. \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7906636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7933277", "body": "Yea, it falls back to the default AWS::SNS class. I debated removing this; however, the original author chose to write the tests by overriding this class..\n\n> On 26 Nov 2013, at 17:25, Corey Donohoe notifications@github.com wrote:\n> \n> In lib/services/amazon_sns.rb:\n> \n> >    end\n> > -  def aws_config\n> > -    {:access_key_id=>data['aws_key'], :secret_access_key=>data['aws_secret']}\n> > -  # Return a new AWS SNS Object\n> > -  def aws_sns\n> > -    @aws_sns || AWS::SNS\n> >   Is the fallback AWS::SNS here some kinda default fallback to an environmentally configured sns object or what?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7933277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7943232", "body": "I have just made a commit which removes that override on the AWS::SNS\nclass. I have re-worked the tests so that it publishes to a totally locked\ndown IAM resource with only the Publish action enabled. Hopefully I got\nthis in time for a production push!\n\nOn Tue, Nov 26, 2013 at 6:35 PM, Corey Donohoe notifications@github.comwrote:\n\n> In lib/services/amazon_sns.rb:\n> \n> >    end\n> > -  def aws_config\n> > -    {:access_key_id=>data['aws_key'], :secret_access_key=>data['aws_secret']}\n> > -  # Return a new AWS SNS Object\n> > -  def aws_sns\n> > -    @aws_sns || AWS::SNS\n> \n> If you can get these defaults done sometime today I should have time to\n> get it out in production and test it. If not we can probably get it out\n> into production sometime next week.\n> \n> \u2014\n> Reply to this email directly or view it on GitHubhttps://github.com/github/github-services/pull/741/files#r7934272\n> .\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7943232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7943309", "body": "I still need some more time to investigate if there will be any\nconsequences to updating the AWS SDK gem. I aim to get this done and pushed\nwell before the weekend though.\n\nOn Tue, Nov 26, 2013 at 11:01 PM, David Kelley <david.james.kelley@gmail.com\n\n> wrote:\n> \n> I have just made a commit which removes that override on the AWS::SNS\n> class. I have re-worked the tests so that it publishes to a totally locked\n> down IAM resource with only the Publish action enabled. Hopefully I got\n> this in time for a production push!\n> \n> On Tue, Nov 26, 2013 at 6:35 PM, Corey Donohoe notifications@github.comwrote:\n> \n> > In lib/services/amazon_sns.rb:\n> > \n> > >    end\n> > > -  def aws_config\n> > > -    {:access_key_id=>data['aws_key'], :secret_access_key=>data['aws_secret']}\n> > > -  # Return a new AWS SNS Object\n> > > -  def aws_sns\n> > > -    @aws_sns || AWS::SNS\n> > \n> > If you can get these defaults done sometime today I should have time to\n> > get it out in production and test it. If not we can probably get it out\n> > into production sometime next week.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHubhttps://github.com/github/github-services/pull/741/files#r7934272\n> > .\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/7943309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "awsmsrc": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/8442106", "body": "hey @kdaigle 'room' isn't required. In Sqwiggle there is always a default room. which has a path value of ''. Which would be tricky to enter in the text field ;)\n\nCheers for being so considerate though and pointing this out! you rock! (ps we added instructions in the doc and we will be adding an integrations page on our site with instructions for users)\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8442106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "rauhryan": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/8708466", "body": "opps that is not correct\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8708466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8708663", "body": "Should be fixed now\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8708663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8709074", "body": "Not right now, I don't have a SSL cert setup for that subdomain yet.\n\nI can send in a pull request as soon as I do.\n\nIs that a blocking issue?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/8709074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jdpace": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/11783556", "body": "Sorry, I'm not that familiar with email delivery. Wouldn't this mean all currently installed email services would start being sent with TLS? What is the current behavior? Whenever we add a know configuration field we try to have the previous state as the default value to prevent changing behavior for existing users.\n\nAlso, what's up with the `(email_config['enable_tls'] != 'false' && true)`? Why not just `email_config['enable_tls'] != 'false'`\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11783556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16208204", "body": "This is pretty nasty but wasn't sure of a better way to re-evaluate something in a test based on a class instance variable. :grimacing: \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16208204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16208493", "body": "> This sha doesn't match line 89 below, is this intentional?\n\nIt is truncated to the first 8 characters.\n\n> What's this for vs using Service?\n\n`TestService` is the subclass of `Service` used in this particular file. See [here](https://github.com/github/github-services/blob/expose-version-sha-in-headers/test/service_test.rb#L6-L9) and [here](https://github.com/github/github-services/blob/expose-version-sha-in-headers/test/service_test.rb#L103-L105).\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/16208493/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20615987", "body": "I started down that path initially until I ran across [these other config helpers](https://github.com/github/github-services/blob/master/lib/service/http_helper.rb#L25-L39) and ended up modeling my approach after them.\n\nEither works for me but we should be consistent across the board if possible.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20615987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jmickeyd": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/11784144", "body": "Derpy copapasta from above and too little sleep.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11784144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "thebenwaters": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/11826244", "body": "I'm fine with it. Not much of a ruby guy, how can you leave it to be optional?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11826244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11826393", "body": "Ah right. Stupid mistake.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/11826393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "travis": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/12070709", "body": "Ah, shoot, sorry - I read that file but didn't notice the parent class had changed. Is there a list of changes that came along with the parent class change somewhere?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/12070709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gnawux": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/13369233", "body": "Sorry, it is not used in current version, I will remove it.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13369233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13895568", "body": "it's copied from a legacy test... i will remove it and update the pull request, thank you\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/13895568/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "manojlds": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/15441641", "body": "@atmos Done. Is this what you had in mind?\n\nAlso, is there documentation on how these settings are rendered in the UI?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15441641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15448668", "body": "@atmos - missed that. Done.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15448668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "NikoRoberts": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/15939985", "body": "done :+1: \n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/15939985/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "joelmoss": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/17672349", "body": "Why are you only processing closed PR's?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/17672349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/17714693", "body": "When opening a new PR, it should be associated with a Youtrack issue when a Youtrack issue ref is mentioned in the PR description. Right now, it appears that this only happens when closing a PR.\n\nI'll send you a PR for this, but I would like a comment with a oink to the PR to be added to the issue when a PR is created\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/17714693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/github/github-services/pulls/comments/17719086", "body": "Yes, that would be perfect. It should also work without a command. So just `cool fix #M-34` will simply create a comment with a link to the PR.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/17719086/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jdennes": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/18711169", "body": "Also fixed this link in the GitHub Auto-Deployment service.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/18711169/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "Keruspe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/19383029", "body": "Probably a leftover that I could remove, indeed\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19383029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "mislav": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/19901813", "body": "So glad that this hack is gone\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19901813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "zapnap": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/19977008", "body": "It looks like it should have been defaulted to the class name if the title was removed:\n\n```\n Service::RDocInfo.title  => \"RDocInfo\" \n```\n\nBut I've gone ahead and updated it, since we're renamed the service to RubyDoc.info anyway. Thanks for taking a look at this, looking forward to getting it merged!\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19977008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "domenic": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/19422928", "body": "Add the name where?\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/19422928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "rabdill": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/20797414", "body": "Do you mean the \"(NB: Replace 'TOKEN' for the...\" line? If so, I got that phrasing form the middle of the original line 7 \"(NB: Swap TOKEN for the token from step 1, and B...\" and just make the instructions a little more clear \u2013 it's how to modify the URL to work with your Trello board, but maybe it's still not clear enough.\n\nI'm not sure what \"NB\" refers to, to be honest, but I assumed it was a usage shorthand I wasn't familiar with.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/20797414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "notnoopci": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/23014482", "body": "I removed the option with an amended changeset.  Yes - we should require them to use ssl (or use http if ssl isn't enabled).\n\nThe motivation for it was easing initial startup when instance uses self-signed certificate before dealing with ssl certs yet.\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/23014482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "adrianschroeter": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/github/github-services/pulls/comments/46920628", "body": "I find it much harder readable, but if you want ...\n", "reactions": {"url": "https://api.github.com/repos/github/github-services/pulls/comments/46920628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}