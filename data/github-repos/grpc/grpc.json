{"_default": {"1": {"kpayson64": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14128", "title": "concurrent_connectivity_test.exe", "body": "\r\n2018-01-19 12:41:29,444 START: cmake/build/Release/h2_sockpair+trace_nosec_test.exe negative_deadline\r\n\r\n2018-01-19 12:41:29,444 D0119 12:40:56.381000000  4496 test_config.cc:388] test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\n\r\n\r\nD0119 12:40:56.381000000  4496 dns_resolver.cc:294] Using native dns resolver\r\n\r\n\r\nD0119 12:40:56.381000000  4496 concurrent_connectivity_test.cc:179] Wave 1\r\n\r\n\r\nI0119 12:40:57.428000000  4144 subchannel.cc:641] Connect failed: {\"created\":\"@1516394457.428000000\",\"description\":\"OS Error\",\"file\":\"T:\\src\\github\\grpc\\workspace_c_windows_opt_native\\src\\core\\lib\\iomgr\\tcp_client_windows.cc\",\"file_line\":105,\"os_error\":\"No connection could be made because the target machine actively refused it.\\r\\n\",\"syscall\":\"ConnectEx\",\"wsa_error\":10061}\r\n\r\n\r\nD0119 12:40:58.131000000  4496 concurrent_connectivity_test.cc:190] Wave 2\r\n\r\n\r\nI0119 12:40:59.350000000  3180 subchannel.cc:603] New connected subchannel at 006C3E80 for subchannel 0BD2D4F0\r\n\r\n\r\nI0119 12:41:00.288000000  3320 subchannel.cc:603] New connected subchannel at 00687208 for subchannel 0BD2D4F0\r\n\r\n\r\nI0119 12:41:00.459000000  3396 subchannel.cc:603] New connected subchannel at 006C3DB0 for subchannel 0BD2E4F0\r\n\r\n\r\nI0119 12:41:00.459000000  3396 subchannel.cc:603] New connected subchannel at 0BD5CE80 for subchannel 0BD2E700\r\n\r\n\r\nE0119 12:41:29.350000000  3180 concurrent_connectivity_test.cc:102] assertion failed: ev.type == GRPC_OP_COMPLETE\r\n\r\n\r\nAbort handler called.\r\n\r\n\r\n*** 0: 00000000011770CC  - 0000000000000000\r\n\r\n\r\n*** 1: 0000000001176DDE  - 0000000000000000\r\n\r\n\r\n*** 2: 000000006DC04672 abort - 000000006DC04640\r\n\r\n\r\n*** 3: 0000000001121EEB abort - 000000006DC04640\r\n\r\n\r\n*** 4: 0000000001178C13 abort - 000000006DC04640\r\n\r\n\r\n*** 5: 0000000075E2336A BaseThreadInitThunk - 0000000075E23358\r\n\r\n\r\n*** 6: 0000000077759902 RtlInitializeExceptionChain - 000000007775989F\r\n\r\n\r\n*** 7: 00000000777598D5 RtlInitializeExceptionChain - 000000007775989F\r\n\r\n\r\n\r\n\r\n2018-01-19 12:41:29,444 FAILED: cmake/build/Release/concurrent_connectivity_test.exe [ret=1, pid=2808, time=33.1sec]trace, logs).\r\n \r\nhttps://sponge.corp.google.com/target?id=8d1c3404-8777-4d0b-be43-08eb63ec64c5&target=grpc/windows/pull_request/grpc_basictests_opt&searchFor=&show=FAILED&sortBy=STATUS\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13945", "title": "Checksum issue downloading node-js", "body": "```\r\ngyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR\r\ngyp WARN download NVM_NODEJS_ORG_MIRROR is deprecated and will be removed in node-gyp v4, please use NODEJS_ORG_MIRROR\r\ngyp WARN install got an error, rolling back install\r\ngyp ERR! configure error \r\ngyp ERR! stack Error: 502 status code downloading checksum\r\ngyp ERR! stack     at Request.<anonymous> (/root/.nvm/versions/node/v7.10.1/lib/node_modules/npm/node_modules/node-gyp/lib/install.js:289:18)\r\ngyp ERR! stack     at emitOne (events.js:101:20)\r\ngyp ERR! stack     at Request.emit (events.js:191:7)\r\ngyp ERR! stack     at Request.onRequestResponse (/root/.nvm/versions/node/v7.10.1/lib/node_modules/npm/node_modules/request/request.js:986:10)\r\ngyp ERR! stack     at emitOne (events.js:96:13)\r\ngyp ERR! stack     at ClientRequest.emit (events.js:191:7)\r\ngyp ERR! stack     at HTTPParser.parserOnIncomingClient (_http_client.js:522:21)\r\ngyp ERR! stack     at HTTPParser.parserOnHeadersComplete (_http_common.js:99:23)\r\ngyp ERR! stack     at TLSSocket.socketOnData (_http_client.js:411:20)\r\ngyp ERR! stack     at emitOne (events.js:96:13)\r\ngyp ERR! stack     at TLSSocket.emit (events.js:191:7)\r\ngyp ERR! System Linux 4.4.0-83-generic\r\ngyp ERR! command \"/root/.nvm/versions/node/v7.10.1/bin/node\" \"/root/.nvm/versions/node/v7.10.1/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"configure\" \"--fallback-to-build\" \"--library=static_library\" \"--module=/var/local/git/grpc-node/packages/grpc-native-core/src/node/extension_binary/node-v51-linux-x64-glibc/grpc_node.node\" \"--module_name=grpc_node\" \"--module_path=/var/local/git/grpc-node/packages/grpc-native-core/src/node/extension_binary/node-v51-linux-x64-glibc\"\r\ngyp ERR! cwd /var/local/git/grpc-node/packages/grpc-native-core\r\ngyp ERR! node -v v7.10.1\r\ngyp ERR! node-gyp -v v3.5.0\r\ngyp ERR! not ok \r\nnode-pre-gyp ERR! build error \r\nnode-pre-gyp ERR! stack Error: Failed to execute '/root/.nvm/versions/node/v7.10.1/bin/node /root/.nvm/versions/node/v7.10.1/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js configure --fallback-to-build --library=static_library --module=/var/local/git/grpc-node/packages/grpc-native-core/src/node/extension_binary/node-v51-linux-x64-glibc/grpc_node.node --module_name=grpc_node --module_path=/var/local/git/grpc-node/packages/grpc-native-core/src/node/extension_binary/node-v51-linux-x64-glibc' (1)\r\nnode-pre-gyp ERR! stack     at ChildProcess.<anonymous> (/var/local/git/grpc-node/packages/grpc-native-core/node_modules/node-pre-gyp/lib/util/compile.js:83:29)\r\nnode-pre-gyp ERR! stack     at emitTwo (events.js:106:13)\r\nnode-pre-gyp ERR! stack     at ChildProcess.emit (events.js:194:7)\r\nnode-pre-gyp ERR! stack     at maybeClose (internal/child_process.js:899:16)\r\nnode-pre-gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)\r\nnode-pre-gyp ERR! System Linux 4.4.0-83-generic\r\nnode-pre-gyp ERR! command \"/root/.nvm/versions/node/v7.10.1/bin/node\" \"/var/local/git/grpc-node/packages/grpc-native-core/node_modules/.bin/node-pre-gyp\" \"install\" \"--fallback-to-build\" \"--library=static_library\"\r\nnode-pre-gyp ERR! cwd /var/local/git/grpc-node/packages/grpc-native-core\r\nnode-pre-gyp ERR! node -v v7.10.1\r\nnode-pre-gyp ERR! node-pre-gyp -v v0.6.39\r\nnode-pre-gyp ERR! not ok \r\nFailed to execute '/root/.nvm/versions/node/v7.10.1/bin/node /root/.nvm/versions/node/v7.10.1/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js configure --fallback-to-build --library=static_library --module=/var/local/git/grpc-node/packages/grpc-native-core/src/node/extension_binary/node-v51-linux-x64-glibc/grpc_node.node --module_name=grpc_node --module_path=/var/local/git/grpc-node/packages/grpc-native-core/src/node/extension_binary/node-v51-linux-x64-glibc' (1)\r\n\r\nnpm ERR! Linux 4.4.0-83-generic\r\nnpm ERR! argv \"/root/.nvm/versions/node/v7.10.1/bin/node\" \"/root/.nvm/versions/node/v7.10.1/bin/npm\" \"install\" \"--build-from-source\" \"--unsafe-perm\"\r\nnpm ERR! node v7.10.1\r\nnpm ERR! npm  v4.2.0\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! grpc@1.9.0-dev install: `node-pre-gyp install --fallback-to-build --library=static_library`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the grpc@1.9.0-dev install script 'node-pre-gyp install --fallback-to-build --library=static_library'.\r\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\r\nnpm ERR! If you do, this is most likely a problem with the grpc package,\r\nnpm ERR! not with npm itself.\r\nnpm ERR! Tell the author that this fails on your system:\r\nnpm ERR!     node-pre-gyp install --fallback-to-build --library=static_library\r\nnpm ERR! You can get information on how to open an issue for this project with:\r\nnpm ERR!     npm bugs grpc\r\nnpm ERR! Or if that isn't available, you can get their info via:\r\nnpm ERR!     npm owner ls grpc\r\nnpm ERR! There is likely additional logging output above.\r\n\r\nnpm ERR! Please include the following file with any support request:\r\nnpm ERR!     /tmp/npm-cache/_logs/2018-01-06T03_04_42_921Z-debug.log\r\n[03:04:42] 'native.core.install' errored after 2.96 s\r\n[03:04:42] Error: Command failed: npm install --build-from-source --unsafe-perm\r\n    at Promise.all.then.arr (/var/local/git/grpc-node/node_modules/execa/index.js:236:11)\r\n    at process._tickCallback (internal/process/next_tick.js:109:7)\r\n[03:04:42] 'setup' errored after 2.97 s\r\n[03:04:42] Error in plugin \"run-sequence(native.core.install)\"\r\nMessage:\r\n    Command failed: npm install --build-from-source --unsafe-perm\r\nDetails:\r\n    code: 1\r\n    killed: false\r\n    stdout: null\r\n    stderr: null\r\n    failed: true\r\n    signal: null\r\n    cmd: npm install --build-from-source --unsafe-perm\r\n    timedOut: false\r\n```\r\nhttps://sponge.corp.google.com/invocation?id=5cfe9ba8-2cf8-4298-bb9b-66d711c1d8f2&searchFor=", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13945/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13848", "title": "py35.test.unit.beta._face_interface_test.GenericInvokerFutureInvocationAsynchronousEventServiceTest", "body": "```\r\n2017-12-20 13:19:56,953 TIMEOUT: py35.test.unit.beta._face_interface_test.GenericInvokerFutureInvocationAsynchronousEventServiceTest [pid=3080, time=300.0sec]\r\n\r\n2017-12-20 13:19:57,062 ++ dirname 'T:\\src\\github\\grpc\\workspace_python_windows_dbg_native\\tools\\run_tests\\helper_scripts\\run_python.sh'\r\n\r\n+ cd 'T:\\src\\github\\grpc\\workspace_python_windows_dbg_native\\tools\\run_tests\\helper_scripts/../../..'\r\n\r\n++ realpath 'py35\\Scripts/python.exe'\r\n\r\n+ PYTHON=/t/src/github/grpc/workspace_python_windows_dbg_native/py35/Scripts/python.exe\r\n\r\n++ pwd\r\n\r\n+ ROOT=/t/src/github/grpc/workspace_python_windows_dbg_native\r\n\r\n+ /t/src/github/grpc/workspace_python_windows_dbg_native/py35/Scripts/python.exe /t/src/github/grpc/workspace_python_windows_dbg_native/src/python/grpcio_tests/setup.py test_lite\r\n\r\nrunning test_lite\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testCancelledStreamRequestStreamResponse\r\n\r\n\r\nTesting gRPC Python...\r\n\r\n\r\nSUCCESS       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testCancelledStreamRequestStreamResponse\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testCancelledStreamRequestUnaryResponse\r\n\r\n\r\nSUCCESS       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testCancelledStreamRequestUnaryResponse\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testCancelledUnaryRequestStreamResponse\r\n\r\n\r\nSUCCESS       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testCancelledUnaryRequestStreamResponse\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testCancelledUnaryRequestUnaryResponse\r\n\r\n\r\nSUCCESS       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testCancelledUnaryRequestUnaryResponse\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testExpiredStreamRequestStreamResponse\r\n\r\n\r\nSUCCESS       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testExpiredStreamRequestStreamResponse\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testExpiredStreamRequestUnaryResponse\r\n\r\n\r\nSUCCESS       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testExpiredStreamRequestUnaryResponse\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testExpiredUnaryRequestStreamResponse\r\n\r\n\r\nSUCCESS       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testExpiredUnaryRequestStreamResponse\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testExpiredUnaryRequestUnaryResponse\r\n\r\n\r\nSUCCESS       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testExpiredUnaryRequestUnaryResponse\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testFailedStreamRequestStreamResponse\r\n\r\n\r\nSUCCESS       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testFailedStreamRequestStreamResponse\r\n\r\n\r\nRunning       unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest.testFailedStreamRequestUnaryResponse\r\n\r\n\r\n\r\n\r\n2017-12-20 13:19:57,062 TIMEOUT_FLAKE: py35.test.unit.beta._face_interface_test.DynamicInvokerFutureInvocationAsynchronousEventServiceTest [pid=740]\r\n```\r\nhttps://sponge.corp.google.com/target?id=303b4fc1-4934-4b35-80c0-c770eb80f122&target=grpc/windows/pull_request/grpc_basictests_dbg&searchFor=&show=ALL&sortBy=STATUS", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13790", "title": "Surface more detailed errors in Python", "body": "\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13790/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13536", "title": "Support Prefork Python Server Model", "body": "\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/a958664dbca7d029d2906ec4aba6ef2d8e9eb5d0", "message": "Merge pull request #14079 from kpayson64/disable_fork_support\n\nAllow turning off fork support with env variable"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/958574665161d82b5573f3ef0a1a41fee815fdae", "message": "PR feedback changes"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/51f51253bdcb4b6472bb944b40e18e377cabc544", "message": "Merge remote-tracking branch 'upstream/master' into disable_fork_support"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f91d4ef78b326f07e0ea79df524f2473d9ef6577", "message": "Merge remote-tracking branch 'upstream/master' into disable_fork_support"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e2e41ff12e9a66503472f3ffbd8abba97ebb9ad6", "message": "Allow turning off fork support with env variable"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e1e562eb171c81fad24176e898cc4e722bee227b", "message": "Merge pull request #13965 from evanj/python-abort-fix\n\npython: Context.abort should fail RPC even for StatusCode.OK"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8a9f0fff64d8f988a1ce6ee831dada55ee509491", "message": "Merge pull request #14000 from kpayson64/filter_status_code_2\n\nAdd back filter_status_code test"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/5ca71f29bc3ee804c1d28ae63cbc9a9825a66d0c", "message": "Fix issue with filter_status_code test for proxy tests."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b353297b4394a6c5fadd04ce778bed480d6d5782", "message": "Revert \"Revert \"Set error status correctly on server side\"\"\n\nThis reverts commit 951f84aea00a1f8a65cf160d7d8f342c30593000."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/43e09a5f3e5b0d46862d7e05b7eb54f660eabb89", "message": "Initialize last sent ping time"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b2c564affdc1c280abb06db4c394056ba9c30278", "message": "Merge pull request #13946 from kpayson64/fix_on_1_8\n\nFix stall bug with pollhup workaround"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8924344a54ab80861842a379d256e5c6b8a30cae", "message": "Fix stall bug with pollhup workaround"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b5f7e275489d3721bc2ee843c1511bc5addc955f", "message": "Merge pull request #13933 from kpayson64/avoid_stall\n\nAvoid stall"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/a3bfddd9580fc52e248306b2157c3d2d5f950251", "message": "Fix bug with pollhup workaround"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e374b88d491f58e2cf8dcfba778fc9fc88bc3a06", "message": "Add more control flow logging"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/77ad62e0fe119135e8897037aba5249d8729cc56", "message": "Fix a Python spinlock bug"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/2b0ab320c12cb807cf05b3295b7017d0ccbf66f5", "message": "Merge pull request #13794 from kpayson64/fix_server_streamz_stats\n\nSet error status correctly on server side"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/6535cfd14001a433f1af5da8476b9b1247fce689", "message": "Set error status correctly on server side"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14077", "title": "Expose getting/setting 'authority' field in Python", "body": "Fixes #12400", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13947", "title": "Add fd cache to epollex", "body": "This avoids calling ```epoll_ctl``` for every call.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13368", "title": "Trailing metadata status", "body": "Rough explanation of why this new logic is roughly equivalent to the old logic:\r\n\r\nThe old logic would search through a bunch of errors attached to the recv_trailing_metadata batch, looking for an error with an explicit non-ok status, and sort these errors according to their source.\r\n\r\nOne of the errors was synthesized from the ```receive_trailing_metadata``` op.  This status would always  be explicit, and had the second highest priority ```STATUS_FROM_WIRE```.  In the case of the chttp2 transport, whenever one of the other batch errors occurred, it would cause a cancellation and a fake  ```receive_trailing_metadata``` status was created, and this would be the resulting status code.  Other transports would end up failing the ```receive_trailing_metadata``` batch with this error.\r\n\r\nIn the new approach, the final status is always determined by either the receive_trailing_metadata, or the    error called with ```on_complete``` for the receive_trailing_metadata batch closure.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/grpc/grpc/13368)\n<!-- Reviewable:end -->\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13190", "title": "Add environment variable to disable cq cache for testing", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13179", "title": "Add a stats counter for cq tls fastpath", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12943", "title": "Workqueue stuff", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12773", "title": "Dynamically allocate compression filter data", "body": "Reduces about 500 bytes/call in non-compressed case", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12744", "title": "Move batch error aggregation under call combiner", "body": "This should save ~192 bytes/call", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11575", "title": "Changes", "body": "Just trying to figure out where this is at...", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11574", "title": "Repro case", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11571", "title": "Fix issue when connect() returns immediately", "body": "When connect() returns successfully (i.e. not EINPROGRESS), the fd doesn't get added to any pollsets.  This can cause hangs when doing TLS negotiations.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10350", "title": "Initial ruby fork support", "body": "Provides an API for a prefork server, as well as prefork/postfork calls to allow an application to fork.\r\n\r\nDepends on #10155", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10155", "title": "Initial C-core global fork work", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/9855", "title": "Set deployment target on OSX for Python2.7", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8651", "title": "Add channel completion queue partitioning", "body": "In AppEngine, no thread can outlive the request that created it. These are backported changes that allow partitioning \"managed calls\", in the case of AppEngine, they would be partitioned based on request ID.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vikasvashisht": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14119", "title": "mem leak in http_proxy.cc for no_proxy_str", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\n \r\nCreate new issues for bugs and feature requests. An issue needs to be actionable. General gRPC discussions and usage questions belong to:\r\n- [grpc.io mailing list](https://groups.google.com/forum/#!forum/grpc-io)\r\n- [StackOverflow, with `grpc` tag](http://stackoverflow.com/questions/tagged/grpc)\r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\nv1.8.x \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Linux\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n gcc\r\n \r\n### What did you do?\r\nIf possible, provide a recipe for reproducing the error. Try being specific and include code snippets if helpful.\r\n Val grind with a client connection to localhost with no proxy set for local host\r\n\r\n### What did you expect to see?\r\n Clean valgrind run for establishing connection and clean up\r\n \r\n### What did you see instead?\r\n Valgrind issue for mem leak in http_proxy.cc:109\r\n\r\nYou can do a quick code review to confirm the issue.\r\nLocal variable no_proxy_str is allocated memory but never freed.\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14119/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bigquant": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14111", "title": "Failed to run cythonized grpc code: TypeError: Descriptors should not be created directly, but only retrieved from their parent.", "body": "grpc version: 1.8.4\r\n\r\nIf code files are compiled with cython (always_allow_keywords=True)\uff0cit raise error when running:\r\n\r\n```\r\nTypeError: Descriptors should not be created directly, but only retrieved from their parent.\r\n```\r\n\r\nIt works well if we do not compile *_pb2.py\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cw-pratik": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14109", "title": "Getting Internal Error (GOAWAY) when server goes down", "body": "### What version of gRPC and what language are you using?\r\n \r\nUpgrading gRPC version from 1.1.0 to 1.8.0 \r\n\r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nWindows\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\nusing c# .Net framework 4.5.2\r\n \r\n### What did you do?\r\n\r\nWe were using gRPC 1.1.0 on our production servers since a long time. We had done some stress testing and found out that having multiple channels per server gave us better results. So if we have two servers A and B. Then we would create 5 Channels each for server A and server B. And then make calls to the servers in round robin fashion. This gave us a pretty good throughput.\r\n\r\nThen we upgraded our servers and clients to 1.8.0 some time back. Everything worked fine when the servers were working. But when one of the server went down we started getting Internal RPC error. \r\n\r\n```\r\nERROR [51] ExceptionHandler LogException - Grpc.Core.RpcException: Status(StatusCode=Internal, Detail=\"GOAWAY received\")\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Grpc.Core.Internal.AsyncCall`2.UnaryCall(TRequest msg)\r\n   at Grpc.Core.DefaultCallInvoker.BlockingUnaryCall[TRequest,TResponse](Method`2 method, String host, CallOptions options, TRequest request)\r\n   at Grpc.Core.Internal.InterceptingCallInvoker.BlockingUnaryCall[TRequest,TResponse](Method`2 method, String host, CallOptions options, TRequest request)\r\n   at EditCMSWindowsService.Messages.EditCMSGrpcService.EditCMSGrpcServiceClient.GetArticleViewsCount(GrpcInt request, CallOptions options)\r\n```\r\n \r\nStrangely this error did not occur every time, and when it did, it would on random clients. \r\nAnd sometimes this error is also seen when the server is actually up.\r\n\r\nThen when I was trying to recreate this error, I found out that this error was easily reproduced when I created a lot of instances (10) to the same server. Also the state of the clients was constantly idle instead of transient failure or connecting.\r\n\r\nAs soon as I created only one instance to the server the errors went away.\r\n\r\nWe also have servers and clients running on goLang. This issue is not there on those servers.\r\n\r\nI also have a few questions:\r\n\r\n1) Is using multiple instances of the channel to the same server the correct thing to do?\r\n2) If yes, the above thing needs to be fixed.\r\n3) If no. Then there is a lot of overhead in thread management when there are a large number of calls. What is the best way to mitigate that.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "coryan": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14108", "title": "High latency with services in googleapis.com when using gRPC/C++.", "body": "### Should this be an issue in the gRPC issue tracker?\r\n\r\nMost likely.  The problems only manifest with gRPC/C++, not with other implementations (so it is unlikely to be the server or something else).\r\n \r\n### What version of gRPC and what language are you using?\r\n\r\n1.9.0-dev, as-of 17a1431a37108bb55c24a2022c1db9ea9632dcc9 to be precise.  Using C++. \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n\r\nLinux.\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n\r\ngcc-7.2\r\n \r\n### What did you do?\r\n\r\nPlease see GoogleCloudPlatform/google-cloud-cpp#192\r\n \r\n### What did you expect to see?\r\n\r\nI expected the latency for a single-threaded, blocking, unary RPC call to be ~6ms.  Ideally comparable to the latency observed in other languages (Go is what I used, but reportedly Java also sees latencies in the same range).\r\n \r\n### What did you see instead?\r\n\r\nThe latency was in the 80ms range.  That limits the QPS for a client to around 12, which is not very good.\r\n\r\nThere are multiple logs a tcpdump captures attached to the bug referenced above.\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\nProbably not, but feel free to ask.  Also happy to GVC and/or IM any folks involved.\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/14103", "title": "grpc::ChannelArguments::SetSocketMutator() should either be removed or made usable.", "body": "### Should this be an issue in the gRPC issue tracker?\r\n\r\nYes.\r\n \r\n### What version of gRPC and what language are you using?\r\n\r\n1.9.0-dev \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n\r\nLinux, macOS, Windows, this applies to any OS where gRPC is supported.\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n\r\nC++. \r\n \r\n### What did you do?\r\n\r\nMostly read the documentation, but tried to use `grpc::ChannelArguments::SetSocketMutator()`\r\n\r\n\r\n### What did you expect to see?\r\n\r\nI expected the `grpc_socket_mutator` struct to be fully defined when including (a) ideally the `grpc++/grpc++.h` header, or (b) some other header installed by gRPC.  Alternatively, if the call is not supposed to be used by the application it should not be exposed through one of the public APIs, remove it completely, or move to some `internal` namespace.\r\n\r\n### What did you see instead?\r\n \r\nThe `grpc_socket_mutator` is forward declared (in `include/grpc/impl/codegen/grpc_types.h`), the definition is in a header that does not get installed with gRPC (`src/core/lib/iomgr/socket_mutator.h`).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/41723fa68f12cbe344f3bff9d3a6bad1745ba488", "message": "Fixed typo in documentation.\n\ns/opitons/options/"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ejona86": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14101", "title": "gRPC tunneling", "body": "Issue for cross-language tunneling coordination, especially reverse tunneling (where the client can become a server).\r\n\r\nhttps://github.com/grpc/grpc-java/pull/3987\r\nhttps://github.com/grpc/grpc/pull/14100", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14101/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13212", "title": "Support IDLE_TIMEOUT (client-side)", "body": "[IDLE_TIMEOUT](https://github.com/grpc/grpc/blob/master/doc/connectivity-semantics-and-api.md) is defined as a way for clients to drop unused connections after inactivity. This is generally useful, but is particularly valuable on mobile as it can be substantially more battery efficient than enabling keepalive on the channel.\r\n\r\nI recently came to the understanding that this is not implemented in C-core. Java has [had support](https://grpc.io/grpc-java/javadoc/io/grpc/ManagedChannelBuilder.html#idleTimeout-long-java.util.concurrent.TimeUnit-) since 1.0. Note that in Java, when the IDLE_TIMEOUT is reached, the NameResolver and LB are shutdown, returning the Channel to the same state as initially created. This does cause a nomenclature problem, because there are two levels of IDLEness; we've been calling the shutting down of all IO (NR and LB) \"idle mode.\"\r\n\r\nThe server-side equivalent [is MAX_CONNECTION_IDLE](https://github.com/grpc/proposal/blob/master/A9-server-side-conn-mgt.md). But both are necessary.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12434", "title": "Specify status code during TRANSIENT_FAILURE and SHUTDOWN", "body": "CC @dfawley", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8584", "title": "Add Server header to PROTOCOL-HTTP2 spec", "body": "I took a slightly lazy approach to the documentation, in that \"user-agent\" is used loosely. But I don't think it should cause too much trouble, especially since this is a standard header.\r\n\r\nCC @ctiller @iamqizhao \r\n", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72092398", "body": "For posterity, the removal of Maven was https://github.com/google/grpc-java/commit/19052499f79381551a31ccd0ccf8f37a6b8e611b\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72092398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "hollinwilkins": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14097", "title": "Channel stuck in TRANSIENT_FAILURE and no DNS Refresh", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes, this is a bug with gRPC deployed on Kubernetes using headless services.\r\n \r\n### What version of gRPC and what language are you using?\r\nRuby 2.4.3\r\ngRPC 1.8.3\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nDebian Jessie (the Docker image)\r\nSpecifically this Ruby docker image: https://github.com/docker-library/ruby/blob/1d0fe6a9d5c75d8a114fb03016f528d68c613d80/2.4/jessie/slim/Dockerfile\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n Ruby 2.4.3\r\n \r\n### What did you do?\r\n1. Created a gRPC deployment with 2 replicas\r\n2. Created a headless service that points to both replicas\r\n3. Created a client that uses a round_robin LB policy and a DNS resolver for creating subchannels\r\n4. Made a few requests to the backend server, no problems\r\n5. Destroyed the backend servers, causing 2 new servers to take their place (with different IP addresses)\r\n6. Tried to make requests to the 2 new server instances after they come back up, all channels are stuck in TRANSIENT_FAILURE\r\n\r\nGRPC_VERBOSITY=DEBUG GRPC_TRACE=client_channel,connectivity_state,round_robin GRPC_DNS_RESOLVER=ares\r\n\r\nShowed no further attempts to refresh the DNS entries after the initial connection.\r\n\r\nDNS lookup provides the following values, with a TTL of 30 seconds:\r\n```\r\nnslookup -qa=A -debug account-headless\r\n*** Invalid option: qa=A\r\nServer:\t\t10.55.240.10\r\nAddress:\t10.55.240.10#53\r\n\r\n------------\r\n    QUESTIONS:\r\n\taccount-headless.production.svc.cluster.local, type = A, class = IN\r\n    ANSWERS:\r\n    ->  account-headless.production.svc.cluster.local\r\n\tinternet address = 10.52.8.189\r\n\tttl = 30\r\n    ->  account-headless.production.svc.cluster.local\r\n\tinternet address = 10.52.9.52\r\n\tttl = 30\r\n    AUTHORITY RECORDS:\r\n    ADDITIONAL RECORDS:\r\n------------\r\nName:\taccount-headless.production.svc.cluster.local\r\nAddress: 10.52.8.189\r\nName:\taccount-headless.production.svc.cluster.local\r\nAddress: 10.52.9.52\r\n```\r\n \r\n### What did you expect to see?\r\n I would expect the connection state to go into a TRANSIENT_FAILURE and when a reconnect attempt fails, c-ares should refresh DNS entries after the TTL. All channels to stale IPs should be dropped in favor of IPs returned in the DNS refresh.\r\n \r\n### What did you see instead?\r\nThe client never attempted to refresh DNS entries and never made it out of the CONNECTING -> TRANSIENT_FAILURE loop, event after waiting and attempting RPC calls long after the DNS TTL expired.\r\n \r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n\r\nWill be happy to provide anything necessary to figure this issue out, just ask and I will get it to you promptly!\r\n \r\n### Anything else we should know about your project / environment?\r\nKubernetes 1.8.4.gke1\r\nHeadless services\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14097/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "markdroth": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14094", "title": "distribtest.cpp_linux_x64_jessie_cmake failure", "body": "https://sponge.corp.google.com/target?id=566cf013-4376-4986-8e40-082902058259&target=github/grpc&searchFor=&show=ALL&sortBy=STATUS\r\n\r\nLooks like the error is the following:\r\n\r\n```\r\nW: Failed to fetch http://ftp.debian.org/debian/dists/jessie-backports/main/binary-amd64/Packages  Hash Sum mismatch\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/14033", "title": "Tracing API should not create global objects of non-POD type", "body": "The C++ tracing API code from #13109 adds global objects of non-POD type, which violates the style guide.  We should replace this by having a function that returns a local static variable that is initialized to point to a dynamically created tracer object, so that the tracer object is never destructed.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13973", "title": "py35.test.testing._time_test.StrictRealTimeTest ", "body": "https://sponge.corp.google.com/target?id=ee46d06d-4bcb-4433-ad83-360568cf6800&target=github/grpc/python_windows_dbg_native&searchFor=&show=FAILED&sortBy=STATUS\r\n\r\nOutput:\r\n\r\n```\r\n++ dirname 'T:\\src\\github\\grpc\\workspace_python_windows_dbg_native\\tools\\run_tests\\helper_scripts\\run_python.sh'\r\n+ cd 'T:\\src\\github\\grpc\\workspace_python_windows_dbg_native\\tools\\run_tests\\helper_scripts/../../..'\r\n++ realpath 'py35\\Scripts/python.exe'\r\n+ PYTHON=/t/src/github/grpc/workspace_python_windows_dbg_native/py35/Scripts/python.exe\r\n++ pwd\r\n+ ROOT=/t/src/github/grpc/workspace_python_windows_dbg_native\r\n+ /t/src/github/grpc/workspace_python_windows_dbg_native/py35/Scripts/python.exe /t/src/github/grpc/workspace_python_windows_dbg_native/src/python/grpcio_tests/setup.py test_lite\r\nrunning test_lite\r\nRunning       testing._time_test.StrictRealTimeTest.test_call_at\r\n[95mTesting gRPC Python...\r\n[0m[92mSUCCESS       testing._time_test.StrictRealTimeTest.test_call_at\r\n[0mRunning       testing._time_test.StrictRealTimeTest.test_call_in\r\n[92mSUCCESS       testing._time_test.StrictRealTimeTest.test_call_in\r\n[0mRunning       testing._time_test.StrictRealTimeTest.test_cancel\r\n[91mFAILURE       testing._time_test.StrictRealTimeTest.test_cancel\r\n[0mRunning       testing._time_test.StrictRealTimeTest.test_many\r\n[92mSUCCESS       testing._time_test.StrictRealTimeTest.test_many\r\n[0mRunning       testing._time_test.StrictRealTimeTest.test_same_behavior_used_several_times\r\n[92mSUCCESS       testing._time_test.StrictRealTimeTest.test_same_behavior_used_several_times\r\n[0mRunning       testing._time_test.StrictRealTimeTest.test_sleep_for\r\n[92mSUCCESS       testing._time_test.StrictRealTimeTest.test_sleep_for\r\n[0mRunning       testing._time_test.StrictRealTimeTest.test_sleep_until\r\n[92mSUCCESS       testing._time_test.StrictRealTimeTest.test_sleep_until\r\n[0m7 tests finished:\r\n\t6 successful\r\n\t1 unsuccessful\r\n\t0 skipped\r\n\t0 expected failures\r\n\t0 unexpected successes\r\nInterrupted Tests:\r\n\t[]\r\n\r\nErrors/Failures: \r\n[91mtesting._time_test.StrictRealTimeTest.test_cancel[0m\r\n[1mtraceback:[0m\r\nTraceback (most recent call last):\r\n  File \"C:\\Python35\\Lib\\unittest\\case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"C:\\Python35\\Lib\\unittest\\case.py\", line 601, in run\r\n    testMethod()\r\n  File \"T:\\src\\github\\grpc\\workspace_python_windows_dbg_native\\src\\python\\grpcio_tests\\tests\\testing\\_time_test.py\", line 94, in test_cancel\r\n    self.assertFalse(call_times, msg=_PATHOLOGICAL_SCHEDULING)\r\n  File \"C:\\Python35\\Lib\\unittest\\case.py\", line 672, in assertFalse\r\n    raise self.failureException(msg)\r\nAssertionError: (1515606330.5732422,) is not false : pathological thread scheduling!\r\n\r\n[1mstdout:[0m\r\n\r\n[1mstderr:[0m\r\n\r\n\r\nUnexpected successes: []\r\nTest failure\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13600", "title": "TIMEOUT: bins/tsan/bm_chttp2_transport --benchmark_filter=BM_TransportStreamRecv/134217728$ GRPC_POLL_STRATEGY=epollex ", "body": "https://sponge.corp.google.com/target?id=07dbec2b-c6cd-445e-b309-533e95e95205&target=github/grpc/c%2B%2B_linux_tsan_native&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\nTimeout\r\nD1201 21:38:30.166846930   15246 ev_posix.cc:128]            Using polling engine: epollex\r\nD1201 21:38:30.169205038   15246 dns_resolver.cc:307]        Using native dns resolver\r\nRun on (32 X 2300 MHz CPU s)\r\n2017-12-01 21:38:30\r\n***WARNING*** Library was built as DEBUG. Timings may be affected.\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/6827d4473bc71601fdfc69cabe47a065109c416e", "message": "Merge pull request #14121 from markdroth/goaway_server_test_fix\n\nUse wait_for_ready in goaway_server_test."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/97d3d08915199e2eb45fbf2988754c889c37b9ab", "message": "Use wait_for_ready in goaway_server_test."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/cbb4f78c2f17f43f8c250dbf3da192d5f40a8762", "message": "Merge pull request #14089 from markdroth/no_plus_in_directory_names\n\nRename 'gpr++' directories to 'gprpp'."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/4f2b0fdadfb1e1eb6c796c40ec5aabfbb348aa89", "message": "Rename 'gpr++' directories to 'gprpp'."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9813858908da2e7deaa58d91f4030e6881e364e3", "message": "Merge pull request #14070 from markdroth/backoff_api_cleanup\n\nCombine BackOff Begin() and Step() methods."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9db1691c85a720ec661266dcdcc2cbf20f7146f2", "message": "Merge pull request #14051 from markdroth/reorganize_support\n\nSplit lib/support into lib/gpr and lib/gpr++."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/dbdf495f61d099521bab45cf93f6f7d8dfb5c06f", "message": "Split lib/support into lib/gpr and lib/gpr++."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/44fe6e282c848d876d516fe6cd79a008d8104604", "message": "Combine BackOff Begin() and Step() methods."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/3538efb53bd6d3bfca91aa50db7a6e1b97b9c855", "message": "Merge pull request #14048 from markdroth/fix_sanity\n\nFix sanity"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d9c288bba7ad2da82bb14ed48ff3aa5a288e609f", "message": "generate_projects"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8afe8d35e13d52fa61c72f9570bc900253ffebb9", "message": "Merge pull request #13984 from markdroth/ref_counting\n\nFix existing ref counting classes and add new ones."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/2b19f4922db21a77d43808a1f1b2e9475348b1d7", "message": "Code review changes."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f512c0d0489dc118247cdc9efef93c3c4617cc5c", "message": "Merge remote-tracking branch 'upstream/master' into ref_counting"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/69c539fd855c416fd2a2fc7406c6c854500f6a12", "message": "clang-format"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/94dad609783b0e67c9b4b1de079330e19cf813c2", "message": "Add equality operators to RefCountedPtr."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/31e99d0788f99189008f854265b1582a6ae888c5", "message": "Merge pull request #13985 from markdroth/lb_policy_ref_simplification\n\nSimply LB policy refcounting, again."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/83d5cd602a7a4469ff6aeb72903db488b8d34d0b", "message": "Don't unref null client_stats."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/473267b7e83cbedfa8902d00de8e2f12dbe62a0d", "message": "Revert \"Merge pull request #13970 from grpc/revert-13857-lb_policy_ref_simplification\"\n\nThis reverts commit 61b32965bec11f4106c729bb0a428ff03d2d03ab, reversing\nchanges made to 2eb22fd67d73a210c1f41d79efcfe52285ccb2ec."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/324703db51b43e150d9d8ffbcceb9d2096e26a9f", "message": "Fix existing ref counting classes and add new ones."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/53430532ce765aa1aa96656b00015914598838ae", "message": "Merge pull request #13676 from markdroth/inlined_vector\n\nImplement InlinedVector independently of absl."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c6406f32f626bcad9aee9582132f06bc68f4e0e5", "message": "Implement InlinedVector independently of absl."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/1acc1fca7476383f523ffe16343bbce0e8b61ca8", "message": "Merge pull request #13857 from markdroth/lb_policy_ref_simplification\n\nSimplify LB policy refcounting."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c0febd3e6494205972f711d7f6f7ce311ef6df0f", "message": "Simplify LB policy refcounting."}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14093", "title": "Fix arena to return aligned memory.", "body": "Nico, please make sure I haven't made any dumb mistakes here.  Thanks!", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14026", "title": "C++ Filter API", "body": "For now, this is a clone of Craig's WIP from #13301.  Over time, I'll flesh this out and try to push it forward.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13870", "title": "C++ LB policy API", "body": "Built on #13857 and #13684.  This is still a work in progress, but I figured I'd upload what I already have to github in case I get hit by a bus over the holidays. :)", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13684", "title": "C++ Resolver API", "body": "This is built on #13659 and #13676 (both of which have now been merged).\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/grpc/grpc/13684)\n<!-- Reviewable:end -->\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13254", "title": "Incomplete attempt at making absl actually usable in C-core.", "body": "I started working on this as part of the retry code, but it's clearly not ready.  Someone else who has more time and build knowledge than I do will need to pick this up and finish it.\r\n\r\nThe last error we ran into was the following from the python artifact build:\r\n\r\n```\r\nIn file included from third_party/abseil-cpp/absl/base/config.h:66:0,\r\n                 from third_party/abseil-cpp/absl/base/optimization.h:25,\r\n                 from third_party/abseil-cpp/absl/container/inlined_vector.h:51,\r\n                 from ./src/core/lib/support/vector.h:22,\r\n                 from src/core/ext/filters/client_channel/client_channel.cc:54:\r\nthird_party/abseil-cpp/absl/base/policy_checks.h:91:2: error: #error \"Minimum required version of glibc is 2.12.\"\r\n #error \"Minimum required version of glibc is 2.12.\"\r\n```", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11298", "title": "Change LB policy API to always return results via the closure.", "body": "There are no functional changes here, but this simplifies the LB policy API and eliminates a lot of duplicate code that we had due to supporting two different code-paths.\r\n\r\nThe only concern I have about this is whether there are performance implications, but I think this shouldn't be a big deal now that everything is running under the same combiner.  But let's see what bm_diff has to say about it.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10684", "title": "Retry support", "body": "~~This is **VERY** preliminary code.  It builds, and I don't think it breaks any existing functionality, but that's about all I can say for it at this point.  There are \"FIXME\" comments all over the place that need to be addressed before this is done, and there may yet be some issues that I have not yet identified.~~\r\n\r\n~~That having been said, I am sending it out at this point just to get a sanity check as to whether or not this approach is even moderately reasonable.  Please look at the high-level structure and let me know if it seems reasonable.  Also, please look at my use of atomics (and some of the FIXME comments about things that aren't currently atomics but may need to be) and let me know if it looks sane.~~\r\n\r\n~~Also, note that I came up with what I think is a better alternative to the `tee_byte_stream` implementation in #10448.  It will need some additional work later to support hedging, but I think the current approach is fine for retries.  If it looks good to you, I can probably revert that other PR.~~\r\n\r\n~~I would welcome any and all suggestions you may have on this.  Thanks!~~\r\n\r\nThis code is now ready for review!\r\n\r\nI would appreciate review from the following folks:\r\n- @ctiller: This code is really complex, and I am unwilling to trust it without careful review from you.\r\n- @dgquintas: Please review from the perspective of your general knowledge of the client channel code.\r\n- @ncteisen: Please review for compliance with the retry design.\r\n\r\nSome things to note:\r\n- This is a massive PR, so please let me know what I can do to make it easier to review.  There is a large block comment in client_channel.cc describing the overall approach, but I'm sure it's not enough to understand everything.  I would be happy to meet in person and do a code walk-through with some or all of you, or just answer any questions you may have.\r\n- This includes all configurable retry functionality except for the stats, which I will work on in a separate PR.  (That will require working with the Census folks to figure out the right way to expose these stats.)\r\n- This does not include transparent retry support.  That work depends on #11934 and will be added in a separate PR.\r\n- This does not include hedging support.  I've kept that use-case in mind while writing this code, but more design discussions will need to occur to figure out how to implement it without impacting performance.\r\n- I have not yet verified that all tests pass, so there will no doubt be some fixes needed before this can be merged.\r\n- I will be interested to see what the performance impact of this is.  It should hopefully be not very much, since all of the synchronization overhead is taken care of by the call combiner code, which was already merged.  There is some additional memory allocation needed for this, but that's mostly done on the arena, so it should hopefully not have a big impact.  (And the additional memory allocations can be avoided by disabling retries via a channel arg.)\r\n\r\nPlease let me know if you have any questions.  Thanks!\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/grpc/grpc/10684)\n<!-- Reviewable:end -->\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/20734333", "body": "Could just change line 86 above to GPR_ASSERT(server_uri != NULL).", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20734333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/20734923", "body": "That shouldn't be an issue, because with #9539, this should never happen.\r\n\r\nAlso, we're using GPR_ASSERT on line 104 below, which is essentially the same thing.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20734923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23417435", "body": "Because there is an existing convention to use this name, and it's followed by many different pieces of software.  We would like people to be able to use their existing environment variables instead of having to duplicate them for gRPC.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23417435/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23700966", "body": "I'll let David advise as to the best place in the code to do this.  But I will say that behavior-wise, I think we want the timer to start when the client channel actually starts an operation on the LB policy -- i.e., we start a pick, start a ping, or are asked to exit idle.  It's not clear to me how the connectivity state check fits into that -- in principle, it should be irrelevant, because this timer should not know or care about the LB channel connectivity state.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23700966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23700972", "body": "I suspect -- but David can confirm -- that `start_picking_locked()` may be the right place to do this.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23700972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23701888", "body": "Actually, now that I think about it, I suspect that we should start watching the LB channel connectivity in `glb_update_locked()` unless we've previously started picking (due to the client channel doing one of the things I mentioned above).  But that's orthogonal to this PR, so let's deal with it separately. :)", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23701888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23701910", "body": "Sorry, meant to say that we should NOT start watching in that case.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23701910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23702188", "body": "Yes, but not necessarily before github sends mail out, and I didn't want to risk confusion by having someone read the email and not look at the updated comment. :)", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23702188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24147189", "body": "Yes.  This was added in the code in #12304:\r\n\r\nhttps://github.com/grpc/grpc/commit/66f3d2b555a0e9aa2e2b74dd2201bfb0267c595f#diff-27141438b522df62782920dc4e34a900R158\r\n\r\nThe only change here is to clarify the comment.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24147189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24148845", "body": "The \"immediately\" in the first bullet is to indicate that the closure will be scheduled as soon as it's registered.  That's not the case in the second or third bullets.\r\n\r\nNote that in all of these cases, the closure gets scheduled, not run (i.e., we use `GRPC_CLOSURE_SCHED()`, not `GRPC_CLOSURE_RUN()`), so it's not like it's guaranteed to be invoked immediately in any of these cases.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24148845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "sammy-tam": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14088", "title": "client stuck with \"StatusCode.INTERNAL, GOAWAY received\" after server restarted", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes\r\n \r\n### What version of gRPC and what language are you using?\r\n 1.8.4\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Linux, OLE 7.2\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n python 3.6.4\r\n \r\n### What did you do?\r\nClient is calling RPC Server every second, and while its running normally, restart RPC Server process.  (localhost) TWICE.\r\n \r\n### What did you expect to see?\r\n Client be able to reconnect to server successfully.\r\n \r\n### What did you see instead?\r\nThe first restart, it will always return (Internal, Connect Failed), as expected. \r\n\r\nOnce this message is seen, restart the RPC Server again, it will return \r\n`<_Rendezvous of RPC that terminated with (StatusCode.INTERNAL, GOAWAY received)>`\r\n\r\nOnce it gets to this state, it is stuck forever.  I have tried all different options, including re-creating the channel and stub once this go away is received.  They seem to stay this way until I restart my client process.\r\n \r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14088/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ncteisen": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14085", "title": "Fix and Enforce Important clang-tidy Checks", "body": "https://clang.llvm.org/extra/clang-tidy/checks/list.html\r\n\r\nThe more the merrier", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13800", "title": "Stream Removal Errors Should Return UNAVAILABLE", "body": "Allows for retries", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13546", "title": "Flake: bins/tsan/client_channel_stress_test", "body": "Link: https://sponge.corp.google.com/target?id=e7ad09f8-7b8b-42ca-a779-e0f860676ca0&target=github/grpc/c%2B%2B_linux_tsan_native&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\nWARNING: ThreadSanitizer: data race (pid=30568)\r\n  Write of size 1 at 0x7d54000f3cf8 by thread T12 (mutexes: write M700029):\r\n    #0 grpc_resource_user_alloc /var/local/git/grpc/src/core/lib/iomgr/resource_quota.cc:824:33 (client_channel_stress_test+0x000000566ad3)\r\n    #1 grpc_resource_user_alloc_slices /var/local/git/grpc/src/core/lib/iomgr/resource_quota.cc:895:3 (client_channel_stress_test+0x0000005674e5)\r\n    #2 tcp_continue_read(grpc_exec_ctx*, grpc_tcp*) /var/local/git/grpc/src/core/lib/iomgr/tcp_posix.cc:474:5 (client_channel_stress_test+0x000000570989)\r\n    #3 tcp_handle_read(grpc_exec_ctx*, void*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/tcp_posix.cc:499:5 (client_channel_stress_test+0x000000570491)\r\n    #4 exec_ctx_run(grpc_exec_ctx*, grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:70:3 (client_channel_stress_test+0x000000560273)\r\n    #5 grpc_exec_ctx_flush /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:90:9 (client_channel_stress_test+0x00000055ffc7)\r\n    #6 end_worker(grpc_exec_ctx*, grpc_pollset*, grpc_pollset_worker*, grpc_pollset_worker**) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:882:9 (client_channel_stress_test+0x0000005939a7)\r\n    #7 pollset_work(grpc_exec_ctx*, grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:986:3 (client_channel_stress_test+0x00000058fc9c)\r\n    #8 grpc_pollset_work /var/local/git/grpc/src/core/lib/iomgr/ev_posix.cc:232:10 (client_channel_stress_test+0x00000055f282)\r\n    #9 cq_next(grpc_completion_queue*, gpr_timespec, void*) /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:952:23 (client_channel_stress_test+0x00000061f207)\r\n    #10 grpc_completion_queue_next /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1033:10 (client_channel_stress_test+0x00000061dab6)\r\n    #11 grpc::CompletionQueue::AsyncNextInternal(void**, bool*, gpr_timespec) /var/local/git/grpc/src/cpp/common/completion_queue_cc.cc:56:15 (client_channel_stress_test+0x0000005fcb99)\r\n    #12 grpc::CompletionQueue::NextStatus grpc::CompletionQueue::AsyncNext<gpr_timespec>(void**, bool*, gpr_timespec const&) /var/local/git/grpc/include/grpc++/impl/codegen/completion_queue.h:157:12 (client_channel_stress_test+0x0000005da8a5)\r\n    #13 grpc::Server::SyncRequestThreadManager::PollForWork(void**, bool*) /var/local/git/grpc/src/cpp/server/server_cc.cc:276:13 (client_channel_stress_test+0x0000005dc68d)\r\n    #14 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:122:30 (client_channel_stress_test+0x0000005eaee8)\r\n    #15 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:38:3 (client_channel_stress_test+0x0000005eae6e)\r\n    #16 void std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()>::operator()<, void>(grpc::ThreadManager::WorkerThread*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:569:11 (client_channel_stress_test+0x0000005ee01b)\r\n    #17 void std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1699:18 (client_channel_stress_test+0x0000005edf05)\r\n    #18 std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1688:16 (client_channel_stress_test+0x0000005ede88)\r\n    #19 std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)> >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/thread:115:13 (client_channel_stress_test+0x0000005ed9dc)\r\n    #20 <null> <null> (libstdc++.so.6+0x0000000b696f)\r\n\r\n  Previous read of size 1 at 0x7d54000f3cf8 by thread T143:\r\n    #0 ru_shutdown(grpc_exec_ctx*, void*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/resource_quota.cc:529:22 (client_channel_stress_test+0x00000056680e)\r\n    #1 closure_impl::closure_wrapper(grpc_exec_ctx*, void*, grpc_error*) /var/local/git/grpc/./src/core/lib/iomgr/closure.h:155:3 (client_channel_stress_test+0x00000054d5ae)\r\n    #2 grpc_combiner_continue_exec_ctx /var/local/git/grpc/src/core/lib/iomgr/combiner.cc:260:5 (client_channel_stress_test+0x0000005583df)\r\n    #3 grpc_exec_ctx_flush /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:93:17 (client_channel_stress_test+0x00000055ffe2)\r\n    #4 end_worker(grpc_exec_ctx*, grpc_pollset*, grpc_pollset_worker*, grpc_pollset_worker**) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:915:7 (client_channel_stress_test+0x000000593cd0)\r\n    #5 pollset_work(grpc_exec_ctx*, grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:986:3 (client_channel_stress_test+0x00000058fc9c)\r\n    #6 grpc_pollset_work /var/local/git/grpc/src/core/lib/iomgr/ev_posix.cc:232:10 (client_channel_stress_test+0x00000055f282)\r\n    #7 cq_next(grpc_completion_queue*, gpr_timespec, void*) /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:952:23 (client_channel_stress_test+0x00000061f207)\r\n    #8 grpc_completion_queue_next /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1033:10 (client_channel_stress_test+0x00000061dab6)\r\n    #9 grpc::CompletionQueue::AsyncNextInternal(void**, bool*, gpr_timespec) /var/local/git/grpc/src/cpp/common/completion_queue_cc.cc:56:15 (client_channel_stress_test+0x0000005fcb99)\r\n    #10 grpc::CompletionQueue::NextStatus grpc::CompletionQueue::AsyncNext<gpr_timespec>(void**, bool*, gpr_timespec const&) /var/local/git/grpc/include/grpc++/impl/codegen/completion_queue.h:157:12 (client_channel_stress_test+0x0000005da8a5)\r\n    #11 grpc::Server::SyncRequestThreadManager::PollForWork(void**, bool*) /var/local/git/grpc/src/cpp/server/server_cc.cc:276:13 (client_channel_stress_test+0x0000005dc68d)\r\n    #12 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:122:30 (client_channel_stress_test+0x0000005eaee8)\r\n    #13 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:38:3 (client_channel_stress_test+0x0000005eae6e)\r\n    #14 void std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()>::operator()<, void>(grpc::ThreadManager::WorkerThread*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:569:11 (client_channel_stress_test+0x0000005ee01b)\r\n    #15 void std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1699:18 (client_channel_stress_test+0x0000005edf05)\r\n    #16 std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1688:16 (client_channel_stress_test+0x0000005ede88)\r\n    #17 std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)> >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/thread:115:13 (client_channel_stress_test+0x0000005ed9dc)\r\n    #18 <null> <null> (libstdc++.so.6+0x0000000b696f)\r\n\r\n  Location is heap block of size 616 at 0x7d54000f3c00 allocated by thread T22:\r\n    #0 malloc /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:595 (client_channel_stress_test+0x00000044fc88)\r\n    #1 gpr_malloc /var/local/git/grpc/src/core/lib/support/alloc.cc:56:7 (client_channel_stress_test+0x0000005f1a7d)\r\n    #2 grpc_resource_user_create /var/local/git/grpc/src/core/lib/iomgr/resource_quota.cc:725:28 (client_channel_stress_test+0x00000056549a)\r\n    #3 grpc_tcp_create /var/local/git/grpc/src/core/lib/iomgr/tcp_posix.cc:815:24 (client_channel_stress_test+0x00000056f00a)\r\n    #4 grpc_tcp_client_create_from_fd /var/local/git/grpc/src/core/lib/iomgr/tcp_client_posix.cc:126:10 (client_channel_stress_test+0x00000056cc28)\r\n    #5 on_writable(grpc_exec_ctx*, void*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/tcp_client_posix.cc:176:13 (client_channel_stress_test+0x00000056de3a)\r\n    #6 exec_ctx_run(grpc_exec_ctx*, grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:70:3 (client_channel_stress_test+0x000000560273)\r\n    #7 grpc_exec_ctx_flush /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:90:9 (client_channel_stress_test+0x00000055ffc7)\r\n    #8 end_worker(grpc_exec_ctx*, grpc_pollset*, grpc_pollset_worker*, grpc_pollset_worker**) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:915:7 (client_channel_stress_test+0x000000593cd0)\r\n    #9 pollset_work(grpc_exec_ctx*, grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:986:3 (client_channel_stress_test+0x00000058fc9c)\r\n    #10 grpc_pollset_work /var/local/git/grpc/src/core/lib/iomgr/ev_posix.cc:232:10 (client_channel_stress_test+0x00000055f282)\r\n    #11 cq_next(grpc_completion_queue*, gpr_timespec, void*) /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:952:23 (client_channel_stress_test+0x00000061f207)\r\n    #12 grpc_completion_queue_next /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1033:10 (client_channel_stress_test+0x00000061dab6)\r\n    #13 grpc::CompletionQueue::AsyncNextInternal(void**, bool*, gpr_timespec) /var/local/git/grpc/src/cpp/common/completion_queue_cc.cc:56:15 (client_channel_stress_test+0x0000005fcb99)\r\n    #14 grpc::CompletionQueue::NextStatus grpc::CompletionQueue::AsyncNext<gpr_timespec>(void**, bool*, gpr_timespec const&) /var/local/git/grpc/include/grpc++/impl/codegen/completion_queue.h:157:12 (client_channel_stress_test+0x0000005da8a5)\r\n    #15 grpc::Server::SyncRequestThreadManager::PollForWork(void**, bool*) /var/local/git/grpc/src/cpp/server/server_cc.cc:276:13 (client_channel_stress_test+0x0000005dc68d)\r\n    #16 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:122:30 (client_channel_stress_test+0x0000005eaee8)\r\n    #17 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:38:3 (client_channel_stress_test+0x0000005eae6e)\r\n    #18 void std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()>::operator()<, void>(grpc::ThreadManager::WorkerThread*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:569:11 (client_channel_stress_test+0x0000005ee01b)\r\n    #19 void std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1699:18 (client_channel_stress_test+0x0000005edf05)\r\n    #20 std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1688:16 (client_channel_stress_test+0x0000005ede88)\r\n    #21 std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)> >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/thread:115:13 (client_channel_stress_test+0x0000005ed9dc)\r\n    #22 <null> <null> (libstdc++.so.6+0x0000000b696f)\r\n\r\n  Mutex M700029 (0x7d54000f3cb8) created at:\r\n    #0 pthread_mutex_init /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1169 (client_channel_stress_test+0x0000004431b5)\r\n    #1 gpr_mu_init /var/local/git/grpc/src/core/lib/support/sync_posix.cc:37:14 (client_channel_stress_test+0x0000005f601c)\r\n    #2 grpc_resource_user_create /var/local/git/grpc/src/core/lib/iomgr/resource_quota.cc:742:3 (client_channel_stress_test+0x0000005657b2)\r\n    #3 grpc_tcp_create /var/local/git/grpc/src/core/lib/iomgr/tcp_posix.cc:815:24 (client_channel_stress_test+0x00000056f00a)\r\n    #4 grpc_tcp_client_create_from_fd /var/local/git/grpc/src/core/lib/iomgr/tcp_client_posix.cc:126:10 (client_channel_stress_test+0x00000056cc28)\r\n    #5 on_writable(grpc_exec_ctx*, void*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/tcp_client_posix.cc:176:13 (client_channel_stress_test+0x00000056de3a)\r\n    #6 exec_ctx_run(grpc_exec_ctx*, grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:70:3 (client_channel_stress_test+0x000000560273)\r\n    #7 grpc_exec_ctx_flush /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:90:9 (client_channel_stress_test+0x00000055ffc7)\r\n    #8 end_worker(grpc_exec_ctx*, grpc_pollset*, grpc_pollset_worker*, grpc_pollset_worker**) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:915:7 (client_channel_stress_test+0x000000593cd0)\r\n    #9 pollset_work(grpc_exec_ctx*, grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:986:3 (client_channel_stress_test+0x00000058fc9c)\r\n    #10 grpc_pollset_work /var/local/git/grpc/src/core/lib/iomgr/ev_posix.cc:232:10 (client_channel_stress_test+0x00000055f282)\r\n    #11 cq_next(grpc_completion_queue*, gpr_timespec, void*) /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:952:23 (client_channel_stress_test+0x00000061f207)\r\n    #12 grpc_completion_queue_next /var/local/git/grpc/src/core/lib/surface/completion_queue.cc:1033:10 (client_channel_stress_test+0x00000061dab6)\r\n    #13 grpc::CompletionQueue::AsyncNextInternal(void**, bool*, gpr_timespec) /var/local/git/grpc/src/cpp/common/completion_queue_cc.cc:56:15 (client_channel_stress_test+0x0000005fcb99)\r\n    #14 grpc::CompletionQueue::NextStatus grpc::CompletionQueue::AsyncNext<gpr_timespec>(void**, bool*, gpr_timespec const&) /var/local/git/grpc/include/grpc++/impl/codegen/completion_queue.h:157:12 (client_channel_stress_test+0x0000005da8a5)\r\n    #15 grpc::Server::SyncRequestThreadManager::PollForWork(void**, bool*) /var/local/git/grpc/src/cpp/server/server_cc.cc:276:13 (client_channel_stress_test+0x0000005dc68d)\r\n    #16 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:122:30 (client_channel_stress_test+0x0000005eaee8)\r\n    #17 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:38:3 (client_channel_stress_test+0x0000005eae6e)\r\n    #18 void std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()>::operator()<, void>(grpc::ThreadManager::WorkerThread*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:569:11 (client_channel_stress_test+0x0000005ee01b)\r\n    #19 void std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1699:18 (client_channel_stress_test+0x0000005edf05)\r\n    #20 std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1688:16 (client_channel_stress_test+0x0000005ede88)\r\n    #21 std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)> >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/thread:115:13 (client_channel_stress_test+0x0000005ed9dc)\r\n    #22 <null> <null> (libstdc++.so.6+0x0000000b696f)\r\n\r\n  Thread T12 (tid=30630, running) created by thread T11 at:\r\n    #0 pthread_create /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:954 (client_channel_stress_test+0x000000459363)\r\n    #1 std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>) <null> (libstdc++.so.6+0x0000000b6a90)\r\n    #2 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:34:10 (client_channel_stress_test+0x0000005eadba)\r\n    #3 grpc::ThreadManager::Initialize() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:114:9 (client_channel_stress_test+0x0000005ebb53)\r\n    #4 grpc::Server::SyncRequestThreadManager::Start() /var/local/git/grpc/src/cpp/server/server_cc.cc:351:7 (client_channel_stress_test+0x0000005da739)\r\n    #5 grpc::Server::Start(grpc::ServerCompletionQueue**, unsigned long) /var/local/git/grpc/src/cpp/server/server_cc.cc:553:5 (client_channel_stress_test+0x0000005d7212)\r\n    #6 grpc::ServerBuilder::BuildAndStart() /var/local/git/grpc/src/cpp/server/server_builder.cc:344:3 (client_channel_stress_test+0x0000005c3dc5)\r\n    #7 grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::Start(std::string const&, std::mutex*, std::condition_variable*) /var/local/git/grpc/test/cpp/client/client_channel_stress_test.cc:192:17 (client_channel_stress_test+0x0000004f659b)\r\n    #8 void std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)>::operator()<std::string&, std::mutex*&, std::condition_variable*&, void>(grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string&, std::mutex*&, std::condition_variable*&) const /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:569:11 (client_channel_stress_test+0x0000004f8b00)\r\n    #9 void std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)>::__call<void, , 0ul, 1ul, 2ul, 3ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul, 2ul, 3ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1263:11 (client_channel_stress_test+0x0000004f898c)\r\n    #10 void std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)>::operator()<, void>() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1321:11 (client_channel_stress_test+0x0000004f8849)\r\n    #11 void std::_Bind_simple<std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)> ()>::_M_invoke<>(std::_Index_tuple<>) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1699:18 (client_channel_stress_test+0x0000004f87b8)\r\n    #12 std::_Bind_simple<std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)> ()>::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1688:16 (client_channel_stress_test+0x0000004f8768)\r\n    #13 std::thread::_Impl<std::_Bind_simple<std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)> ()> >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/thread:115:13 (client_channel_stress_test+0x0000004f82ac)\r\n    #14 <null> <null> (libstdc++.so.6+0x0000000b696f)\r\n\r\n  Thread T143 (tid=30952, running) created by thread T12 at:\r\n    #0 pthread_create /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:954 (client_channel_stress_test+0x000000459363)\r\n    #1 std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>) <null> (libstdc++.so.6+0x0000000b6a90)\r\n    #2 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:34:10 (client_channel_stress_test+0x0000005eadba)\r\n    #3 grpc::ThreadManager::MainWorkLoop() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:146:15 (client_channel_stress_test+0x0000005eb096)\r\n    #4 grpc::ThreadManager::WorkerThread::Run() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:38:3 (client_channel_stress_test+0x0000005eae6e)\r\n    #5 void std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()>::operator()<, void>(grpc::ThreadManager::WorkerThread*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:569:11 (client_channel_stress_test+0x0000005ee01b)\r\n    #6 void std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1699:18 (client_channel_stress_test+0x0000005edf05)\r\n    #7 std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1688:16 (client_channel_stress_test+0x0000005ede88)\r\n    #8 std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)> >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/thread:115:13 (client_channel_stress_test+0x0000005ed9dc)\r\n    #9 <null> <null> (libstdc++.so.6+0x0000000b696f)\r\n\r\n  Thread T22 (tid=30655, running) created by thread T21 at:\r\n    #0 pthread_create /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:954 (client_channel_stress_test+0x000000459363)\r\n    #1 std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>) <null> (libstdc++.so.6+0x0000000b6a90)\r\n    #2 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*) /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:34:10 (client_channel_stress_test+0x0000005eadba)\r\n    #3 grpc::ThreadManager::Initialize() /var/local/git/grpc/src/cpp/thread_manager/thread_manager.cc:114:9 (client_channel_stress_test+0x0000005ebb53)\r\n    #4 grpc::Server::SyncRequestThreadManager::Start() /var/local/git/grpc/src/cpp/server/server_cc.cc:351:7 (client_channel_stress_test+0x0000005da739)\r\n    #5 grpc::Server::Start(grpc::ServerCompletionQueue**, unsigned long) /var/local/git/grpc/src/cpp/server/server_cc.cc:553:5 (client_channel_stress_test+0x0000005d7212)\r\n    #6 grpc::ServerBuilder::BuildAndStart() /var/local/git/grpc/src/cpp/server/server_builder.cc:344:3 (client_channel_stress_test+0x0000005c3dc5)\r\n    #7 grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::Start(std::string const&, std::mutex*, std::condition_variable*) /var/local/git/grpc/test/cpp/client/client_channel_stress_test.cc:192:17 (client_channel_stress_test+0x0000004f659b)\r\n    #8 void std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)>::operator()<std::string&, std::mutex*&, std::condition_variable*&, void>(grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string&, std::mutex*&, std::condition_variable*&) const /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:569:11 (client_channel_stress_test+0x0000004f8b00)\r\n    #9 void std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)>::__call<void, , 0ul, 1ul, 2ul, 3ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul, 2ul, 3ul>) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1263:11 (client_channel_stress_test+0x0000004f898c)\r\n    #10 void std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)>::operator()<, void>() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1321:11 (client_channel_stress_test+0x0000004f8849)\r\n    #11 void std::_Bind_simple<std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)> ()>::_M_invoke<>(std::_Index_tuple<>) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1699:18 (client_channel_stress_test+0x0000004f87b8)\r\n    #12 std::_Bind_simple<std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)> ()>::operator()() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/functional:1688:16 (client_channel_stress_test+0x0000004f8768)\r\n    #13 std::thread::_Impl<std::_Bind_simple<std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)> ()> >::_M_run() /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/thread:115:13 (client_channel_stress_test+0x0000004f82ac)\r\n    #14 <null> <null> (libstdc++.so.6+0x0000000b696f)\r\n\r\nSUMMARY: ThreadSanitizer: data race /var/local/git/grpc/src/core/lib/iomgr/resource_quota.cc:824:33 in grpc_resource_user_alloc\r\n==================\r\n\r\n2017-11-29 07:27:51,675 FAILED: bins/tsan/client_channel_stress_test GRPC_POLL_STRATEGY=epoll1 [ret=66, pid=30568, time=17.7sec]\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13546/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13477", "title": "Flake: \tbins/dbg/h2_ssl_cert_test --gtest_filter=H2SslCertTest.SimpleRequestBody", "body": "Seen [here](https://sponge.corp.google.com/target?id=dea4f10b-b4d6-4ac6-a37b-173e7d8cbb50&target=github/grpc/c%2B%2B_linux_dbg_native&searchFor=&show=ALL&sortBy=STATUS)\r\n\r\n```\r\nFailure\r\n failed with fatal error SSL_ERROR_SSL: error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED.\r\nD1121 05:48:17.950075811   29395 security_handshaker.cc:131] Security handshake failed: {\"created\":\"@1511243297.950062304\",\"description\":\"Handshake failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":249,\"tsi_code\":10,\"tsi_error\":\"TSI_PROTOCOL_FAILURE\"}\r\nD1121 05:48:17.950099225   29395 chttp2_server.cc:70]        Handshaking failed: {\"created\":\"@1511243297.950062304\",\"description\":\"Handshake failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":249,\"tsi_code\":10,\"tsi_error\":\"TSI_PROTOCOL_FAILURE\"}\r\nD1121 05:48:17.950171109   29395 security_handshaker.cc:131] Security handshake failed: {\"created\":\"@1511243297.950153612\",\"description\":\"Handshake read failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":326,\"referenced_errors\":[{\"created\":\"@1511243297.950152216\",\"description\":\"Socket closed\",\"fd\":14,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":429,\"target_address\":\"ipv6:[::1]:10139\"}]}\r\nI1121 05:48:17.950236361   29395 subchannel.cc:683]          Connect failed: {\"created\":\"@1511243297.950153612\",\"description\":\"Handshake read failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":326,\"referenced_errors\":[{\"created\":\"@1511243297.950152216\",\"description\":\"Socket closed\",\"fd\":14,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":429,\"target_address\":\"ipv6:[::1]:10139\"}]}\r\nI1121 05:48:17.950251122   29395 subchannel.cc:479]          Retry in 4 milliseconds\r\nI1121 05:48:17.953425418   31134 subchannel.cc:431]          Failed to connect to channel, retrying\r\nE1121 05:48:17.960911415   29395 ssl_transport_security.cc:976] Handshake failed with fatal error SSL_ERROR_SSL: error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED.\r\nD1121 05:48:17.960957548   29395 security_handshaker.cc:131] Security handshake failed: {\"created\":\"@1511243297.960944202\",\"description\":\"Handshake failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":249,\"tsi_code\":10,\"tsi_error\":\"TSI_PROTOCOL_FAILURE\"}\r\nD1121 05:48:17.960982367   29395 chttp2_server.cc:70]        Handshaking failed: {\"created\":\"@1511243297.960944202\",\"description\":\"Handshake failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":249,\"tsi_code\":10,\"tsi_error\":\"TSI_PROTOCOL_FAILURE\"}\r\nD1121 05:48:17.961055415   29395 security_handshaker.cc:131] Security handshake failed: {\"created\":\"@1511243297.961037940\",\"description\":\"Handshake read failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":326,\"referenced_errors\":[{\"created\":\"@1511243297.961036129\",\"description\":\"Socket closed\",\"fd\":14,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":429,\"target_address\":\"ipv4:127.0.0.1:10139\"}]}\r\nI1121 05:48:17.961113758   29395 subchannel.cc:683]          Connect failed: {\"created\":\"@1511243297.961037940\",\"description\":\"Handshake read failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":326,\"referenced_errors\":[{\"created\":\"@1511243297.961036129\",\"description\":\"Socket closed\",\"fd\":14,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":429,\"target_address\":\"ipv4:127.0.0.1:10139\"}]}\r\nI1121 05:48:17.961128038   29395 subchannel.cc:479]          Retry in 1440 milliseconds\r\nI1121 05:48:19.400424755   29398 subchannel.cc:431]          Failed to connect to channel, retrying\r\nE1121 05:48:19.408623408   29395 ssl_transport_security.cc:976] Handshake failed with fatal error SSL_ERROR_SSL: error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED.\r\nD1121 05:48:19.408671635   29395 security_handshaker.cc:131] Security handshake failed: {\"created\":\"@1511243299.408658321\",\"description\":\"Handshake failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":249,\"tsi_code\":10,\"tsi_error\":\"TSI_PROTOCOL_FAILURE\"}\r\nD1121 05:48:19.408696878   29395 chttp2_server.cc:70]        Handshaking failed: {\"created\":\"@1511243299.408658321\",\"description\":\"Handshake failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":249,\"tsi_code\":10,\"tsi_error\":\"TSI_PROTOCOL_FAILURE\"}\r\nD1121 05:48:19.408784844   29395 security_handshaker.cc:131] Security handshake failed: {\"created\":\"@1511243299.408767636\",\"description\":\"Handshake read failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":326,\"referenced_errors\":[{\"created\":\"@1511243299.408765912\",\"description\":\"Socket closed\",\"fd\":14,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":429,\"target_address\":\"ipv6:[::1]:10139\"}]}\r\nI1121 05:48:19.408846014   29395 subchannel.cc:683]          Connect failed: {\"created\":\"@1511243299.408767636\",\"description\":\"Handshake read failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":326,\"referenced_errors\":[{\"created\":\"@1511243299.408765912\",\"description\":\"Socket closed\",\"fd\":14,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":429,\"target_address\":\"ipv6:[::1]:10139\"}]}\r\nI1121 05:48:19.408858915   29395 subchannel.cc:479]          Retry in 418 milliseconds\r\nI1121 05:48:19.826404226   31134 subchannel.cc:431]          Failed to connect to channel, retrying\r\nE1121 05:48:19.834100721   29395 ssl_transport_security.cc:976] Handshake failed with fatal error SSL_ERROR_SSL: error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED.\r\nD1121 05:48:19.834152612   29395 security_handshaker.cc:131] Security handshake failed: {\"created\":\"@1511243299.834138846\",\"description\":\"Handshake failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":249,\"tsi_code\":10,\"tsi_error\":\"TSI_PROTOCOL_FAILURE\"}\r\nD1121 05:48:19.834179862   29395 chttp2_server.cc:70]        Handshaking failed: {\"created\":\"@1511243299.834138846\",\"description\":\"Handshake failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":249,\"tsi_code\":10,\"tsi_error\":\"TSI_PROTOCOL_FAILURE\"}\r\nD1121 05:48:19.834247683   29395 security_handshaker.cc:131] Security handshake failed: {\"created\":\"@1511243299.834230592\",\"description\":\"Handshake read failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":326,\"referenced_errors\":[{\"created\":\"@1511243299.834229350\",\"description\":\"Socket closed\",\"fd\":14,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":429,\"target_address\":\"ipv4:127.0.0.1:10139\"}]}\r\nI1121 05:48:19.834306576   29395 subchannel.cc:683]          Connect failed: {\"created\":\"@1511243299.834230592\",\"description\":\"Handshake read failed\",\"file\":\"src/core/lib/security/transport/security_handshaker.cc\",\"file_line\":326,\"referenced_errors\":[{\"created\":\"@1511243299.834229350\",\"description\":\"Socket closed\",\"fd\":14,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":429,\"target_address\":\"ipv4:127.0.0.1:10139\"}]}\r\nI1121 05:48:19.834320892   29395 subchannel.cc:479]          Retry in 2107 milliseconds\r\nI1121 05:48:21.941395200   29398 subchannel.cc:431]          Failed to connect to channel, retrying\r\nE1121 05:48:26.950746686   29395 h2_ssl_cert_test.cc:280]    assertion failed: grpc_completion_queue_pluck(f->shutdown_cq, tag(1000), grpc_timeout_seconds_to_deadline(5), nullptr) .type == GRPC_OP_COMPLETE\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\nbins/dbg/h2_ssl_cert_test[0x5d576f]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xf890)[0x7f26cb075890]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0x37)[0x7f26ca2ad067]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x148)[0x7f26ca2ae448]\r\nbins/dbg/h2_ssl_cert_test[0x408a6b]\r\nbins/dbg/h2_ssl_cert_test[0x408ae2]\r\nbins/dbg/h2_ssl_cert_test[0x409804]\r\nbins/dbg/h2_ssl_cert_test[0x5fdaac]\r\nbins/dbg/h2_ssl_cert_test[0x5f7b76]\r\nbins/dbg/h2_ssl_cert_test[0x5dcfd8]\r\nbins/dbg/h2_ssl_cert_test[0x5dd837]\r\nbins/dbg/h2_ssl_cert_test[0x5ddefa]\r\nbins/dbg/h2_ssl_cert_test[0x5e4a9f]\r\nbins/dbg/h2_ssl_cert_test[0x5feeaa]\r\nbins/dbg/h2_ssl_cert_test[0x5f88d4]\r\nbins/dbg/h2_ssl_cert_test[0x5e366f]\r\nbins/dbg/h2_ssl_cert_test[0x4095b4]\r\nbins/dbg/h2_ssl_cert_test[0x408f23]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5)[0x7f26ca299b45]\r\nbins/dbg/h2_ssl_cert_test[0x407c19]\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/acca4a2a6d79a9465978fa9bcee4db3fc24548e3", "message": "Merge pull request #13913 from ncteisen/fix-clang-tidy-check\n\nFix Clang Tidy Check"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/479067b2b5820709c3f5c8dcb073bf066ee648de", "message": "do not fix automatically"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c4aba517a50afa868de40891bbe696947d2d50d4", "message": "s/tidy/TIDY"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/86ddb5393d452fc30ba3941a286c79c253909abc", "message": "Ensure all sanity finds clang-tidy"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e737ae9e32823e924c452e98798f3d044e4dd394", "message": "Stop building docker from inside docker"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d268793ff3ff64b2b417f2cdbf5bed71feaf3b43", "message": "Fix clang format docker"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/1adad729797df4cb8c92c26fcdb5f59a72261fd4", "message": "Add to sanity, dont fix by default"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/365ea6309bd683d384b58e05fdb58e557b20ba19", "message": "Dockerize clang tidy"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/5edcfb39c6afaabdd183da9e08fbcc56720fb92f", "message": "Dont check every single file"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/02336a29ac7c2ba8ee68a7a0bae589b713805c20", "message": "Check for failures from run clang tidy"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/157815d5cd5fc257d568bcfa87baa18325608000", "message": "Reviewer feedback"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/bddffb24b4158aeeab9814822491c05c5af29167", "message": "Fix objc compile"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/5219f3f4c13ce412312975ec5ce7d80b164a72eb", "message": "Missing s/NULL/nullptr"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/3c747f1bd8294aa11c2d9d5aa17099441c193107", "message": "Fix tsan"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/24902641d434005bee6641e62fb2b57fc0b6bd87", "message": "Merge branch 'master' of https://github.com/grpc/grpc into flow-control-part4"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d230ad086a894cc963235b27814e19bf686eb7aa", "message": "clang fmt"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14086", "title": "Clang Tidy Codebase Part1", "body": "Actually check all header files.\r\n\r\nAlso adds some google clang-tidy checks we happen to already follow.\r\n\r\nWorking towards #14085", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14039", "title": "Allow stream map to shrink", "body": "From #10160", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13992", "title": "Any", "body": "Will be useful for upcoming metadata change.\r\n\r\nTaken over from #13638 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13883", "title": "Channel Tracing Implementation; Part 1", "body": "Implements the basic channel tracing architecture.\r\n\r\nAdds channel_tracer and object_registry files. The tracers are held by channels and subchannels and only log channel creation for now. In a subsequent PR I will begin plumbing the tracing objects around and logging all of the interesting things happening\r\n\r\nPicks up work from #10259. That PR was too stale to do a merge or rebase, but I want to maintain history", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13826", "title": "Testing", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13689", "title": "Surfacing Debug Error String Python", "body": "Similar to #13413, but for Python.\r\n\r\nSurfaces debug_error_string to the application. Updates representative unit tests to test this behavior\r\n\r\nFixes #13790 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12421", "title": "Make wait-for-ready Documentation Clearer", "body": "This concept has caused much confusion, especially with regard to retries. Here is an attempt, at the risk of over explaining, to make it clearer. I've added everyone from our offline discussion plus others to ensure we are on the same page here.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/24379520", "body": "Fair enough, I'll revert. I figured this would usually be useful in conjugation with flow control, which need to be NDEBUG because it uses more memory", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24379520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "bpxeax": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14083", "title": "grpc with ssl can not connect to server on some machine", "body": "Please answer these questions before submitting your issue. \r\n \r\n### What version of gRPC and what language are you using?\r\n \r\n 1.8.0\r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\n client Windows7, server linux\r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\n client dotnet 4.5, server golang 1.9.2\r\n### What did you do?\r\nUse grpc with tls\r\n \r\n### What did you expect to see?\r\n all client can connect to server\r\n \r\n### What did you see instead?\r\nsome client can conenct to, but some others can not. Those error clients can telnet to server port, can pass ssl verify use openssl s_client and can connect to server without ssl. Here is the client grpc log:\r\n \r\n[log.txt](https://github.com/grpc/grpc/files/1645602/log.txt)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ZhouyihaiDing": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14073", "title": "FAILED: bins/tsan/h2_http_proxy_test resource_quota_server GRPC_POLL_STRATEGY=epollsig", "body": "Failed in v1.8.x at https://sponge.corp.google.com/target?id=8cc10685-899d-4077-888f-369c7d94a24b&target=github/grpc/c_linux_tsan_native&searchFor=&show=ALL&sortBy=STATUS\r\n```\r\n\r\nFailure\r\niting.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 53 stalled by transport [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-348866]\r\nD0118 00:28:12.266762886   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 55 stalled by transport [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-348866]\r\nD0118 00:28:12.266783637   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 57 stalled by transport [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-348866]\r\nD0118 00:28:12.266811959   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 59 stalled by transport [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-348866]\r\nD0118 00:28:12.266830217   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 61 stalled by transport [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-348866]\r\nD0118 00:28:12.266850858   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 63 stalled by transport [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-348866]\r\nD0118 00:28:12.266868930   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 65 stalled by transport [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=0:s_win=267989:s_delta=-80877]\r\nD0118 00:28:12.303325723   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 77 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303376411   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 79 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303405615   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 89 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303427271   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 95 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303450113   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 101 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303469936   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 103 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303483837   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 109 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303497228   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 125 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303510832   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 129 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303524229   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 135 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303537858   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 143 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303552162   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 149 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303565700   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 151 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303586340   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 167 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303600630   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 175 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303613968   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 187 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303626849   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 189 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303640637   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 191 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nD0118 00:28:12.303653731   21108 writing.cc:143]             ipv6:[::1]:17453:0x7da400000000 stream 193 stalled by stream [fc:pending=0:flowed=0:peer_initwin=4194304:t_win=1192771:s_win=0:s_delta=-1994]\r\nI0118 00:28:12.402927521   21115 http_proxy_fixture.cc:138]  HTTP proxy server write: {\"created\":\"@1516235292.394622542\",\"description\":\"OS Error\",\"errno\":32,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":587,\"grpc_status\":14,\"os_error\":\"Broken pipe\",\"syscall\":\"sendmsg\"}\r\nE0118 00:28:12.405533803   21102 resource_quota_server.cc:258] Unexpected status code: 2\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\nI0118 00:28:12.427835410   21115 http_proxy_fixture.cc:138]  HTTP proxy server read: {\"created\":\"@1516235292.403052835\",\"description\":\"FD Shutdown\",\"file\":\"src/core/lib/iomgr/lockfree_event.cc\",\"file_line\":189,\"referenced_errors\":[{\"created\":\"@1516235292.394622542\",\"description\":\"OS Error\",\"errno\":32,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":587,\"grpc_status\":14,\"os_error\":\"Broken pipe\",\"syscall\":\"sendmsg\"}]}\r\nI0118 00:28:12.428550446   21115 http_proxy_fixture.cc:138]  HTTP proxy server write: {\"created\":\"@1516235292.403109204\",\"description\":\"OS Error\",\"errno\":32,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":587,\"grpc_status\":14,\"os_error\":\"Broken pipe\",\"syscall\":\"sendmsg\"}\r\nI0118 00:28:12.433501151   21115 http_proxy_fixture.cc:138]  HTTP proxy server write: {\"created\":\"@1516235292.429127869\",\"description\":\"OS Error\",\"errno\":32,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":587,\"grpc_status\":14,\"os_error\":\"Broken pipe\",\"syscall\":\"sendmsg\"}\r\nI0118 00:28:12.434566561   21115 http_proxy_fixture.cc:138]  HTTP proxy client read: {\"created\":\"@1516235292.433380496\",\"description\":\"OS Error\",\"errno\":104,\"fd\":12,\"file\":\"src/core/lib/iomgr/tcp_posix.cc\",\"file_line\":420,\"os_error\":\"Connection reset by peer\",\"syscall\":\"recvmsg\",\"target_address\":\"ipv6:[::1]:47716\"}\r\nD0118 00:28:12.434609975   21115 http_proxy_fixture.cc:110]  endpoints: 0x7d5c0002fb00 0x7d5c0002f780\r\n==================\r\nWARNING: ThreadSanitizer: signal-unsafe call inside of a signal (pid=21102)\r\n    #0 malloc /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:595 (h2_http_proxy_test+0x0000004442a8)\r\n    #1 <null> <null> (ld-linux-x86-64.so.2+0x00000000caad)\r\n    #2 crash_handler(int, siginfo_t*, void*) /var/local/git/grpc/test/core/util/test_config.cc:245:13 (h2_http_proxy_test+0x000000931db8)\r\n    #3 __tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, bool, int, my_siginfo_t*, void*) /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1951 (h2_http_proxy_test+0x000000425026)\r\n    #4 resource_quota_server(grpc_end2end_test_config) /var/local/git/grpc/test/core/end2end/tests/resource_quota_server.cc:259:11 (h2_http_proxy_test+0x0000005066e4)\r\n    #5 grpc_end2end_tests /var/local/git/grpc/test/core/end2end/end2end_tests.cc:460:7 (h2_http_proxy_test+0x0000004b4ff6)\r\n    #6 main /var/local/git/grpc/test/core/end2end/fixtures/h2_http_proxy.cc:128:5 (h2_http_proxy_test+0x0000004b10cd)\r\n\r\nSUMMARY: ThreadSanitizer: signal-unsafe call inside of a signal (/lib64/ld-linux-x86-64.so.2+0xcaad) \r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/4b0e8858248c87b73a7ff36160554598511a1dc9", "message": "Merge pull request #14017 from ZhouyihaiDing/php_channl_memory_leak\n\nphp: fix memory leak during creating channel"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b6cdfca30a5f09975ee7789a66d5b248f92b5c50", "message": "php channel: fix memory leak"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14130", "title": "php: fix channel wrapper leak", "body": "It is split from [PR](https://github.com/ZhouyihaiDing/grpc/pull/9).\r\nThere wasn't place to free channel wrapper allocated [here](https://github.com/grpc/grpc/pull/14130/files#diff-f942bdda09aac4a837cef783506850f0R308).\r\nIn php-fpm mode, each time a channel_wrapper is created, it remains there.\r\n\r\nAnother solution is use R_SHUTDOWN function to free them after each request.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14129", "title": "php: fix channel reuse doesn't free allocated wrapper", "body": "It is split from [PR](https://github.com/ZhouyihaiDing/grpc/pull/9).\r\n\r\nThey are all allocated [here](https://github.com/grpc/grpc/pull/14129/files#diff-f942bdda09aac4a837cef783506850f0R275).", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14127", "title": "php: fix channel_credentials hashstr leak", "body": "It is split from [PR](https://github.com/ZhouyihaiDing/grpc/pull/9).\r\n\r\nhashstr create from [CreateSsl](https://github.com/grpc/grpc/blob/master/src/php/ext/grpc/channel_credentials.c#L163) method use the allocation from it's own, while createComposite use it from CallCredential, which make it hard to free.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14126", "title": "php: fix channel get_target method leak", "body": "It is split from [PR](https://github.com/ZhouyihaiDing/grpc/pull/9).\r\n\r\nPHP_GRPC_RETURN_STRING doesn't free \"target\" allocated by gpr. It need to be freed inside the function.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14125", "title": "php: fix channel persistence list leak", "body": "It is split from [PR](https://github.com/ZhouyihaiDing/grpc/pull/9).\r\nWhen the key is deleted from the persistent list, it can be freed.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13709", "title": "PHP: update readme file", "body": "For the issue #12481, https://github.com/grpc/grpc.github.io/issues/579.\r\n\r\n- Add links to grpc.io and cloud.google.com\r\n- Make the installation part the same as [grpc.io](https://github.com/grpc/grpc.github.io/pull/593)\r\n- Update the README file for php example.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13687", "title": "PHP: php_info add grpc version", "body": "For #13556, php_info() report grpc's version.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13660", "title": "PHP: unref key and value in metadata ", "body": "This is reported by Valgrind:\r\n```\r\n==17317== 1,632 bytes in 16 blocks are definitely lost in loss record 119 of 133\r\n==17317==    at 0x4C2DB2F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==17317==    by 0x9926CEE: gpr_malloc (in /usr/local/lib/libgrpc.so.5.0.0-dev)\r\n==17317==    by 0x98C8902: grpc_slice_malloc_large (in /usr/local/lib/libgrpc.so.5.0.0-dev)\r\n==17317==    by 0x98C8989: grpc_slice_malloc (in /usr/local/lib/libgrpc.so.5.0.0-dev)\r\n==17317==    by 0x98C89D2: grpc_slice_from_copied_buffer (in /usr/local/lib/libgrpc.so.5.0.0-dev)\r\n==17317==    by 0x96660F2: create_metadata_array (call.c:169)\r\n==17317==    by 0x966679C: zim_Call_startBatch (call.c:306)\r\n==17317==    by 0x3F157D: ??? (in /usr/bin/php7.0)\r\n==17317==    by 0x3ABDDA: execute_ex (in /usr/bin/php7.0)\r\n==17317==    by 0x35BDB7: zend_call_function (in /usr/bin/php7.0)\r\n==17317==    by 0x2A6B0E: zif_call_user_func_array (in /usr/bin/php7.0)\r\n==17317==    by 0x3F0A9C: ??? (in /usr/bin/php7.0)\r\n```\r\nUnref like what ruby call does can fix it.\r\nhttps://github.com/grpc/grpc/blob/e759d2ad7abdb0702970eeccc5f033ff4b2a4c7f/src/ruby/ext/grpc/rb_call.c#L652:6", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13580", "title": "php_protobuf_plugin: update checking reserved variables with protobuf 3.5.0", "body": "For the issue #13285\r\nCurrently, protobuf is bumped to 3.5.0. There are more reserved variables in this version and php plugin can use the new API provided to check reserved variables.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13465", "title": "python benchmark: scale with multi-processes and update CPU usage report", "body": "This pull request SHOULD NOT be merged until py27/bin/python support multi-process, otherwise it will fail and block the benchmark script.\r\nI use python configured by grpc.io's guide and /usr/bin/python works well, while py27/bin/python which runs benchmark will fail.\r\n\r\nCurrently, python has only 2000 QPS in the [dashboard](http://performance-dot-grpc-testing.appspot.com/explore?dashboard=5636470266134528&widget=713624174&container=1012810333) under 8-cores environment, using only 1 core in the client side. It should scale to 8 cores so that the number in that graph is comparable to other languages. Also, the cpu usage is exactly 2, which is not correct. \r\n\r\nBelow are some data tested in my local 8 core machine(streaming, 64 channel, 16 rpc/channel):\r\n```\r\nmulti-processes | QPS | server CPU | client CPU=(utime+stime)/(wtime)\r\npython client - c++ server | 16463 | 55% | 853% (processes decrease from 20% to 8% evenly)\r\npython client - python server | 2636 | 165% | 323% (93% 46% 28% 25% 22% 1% 1% 1% ...)\r\nold way\r\npython client - c++ server | 1192 | 200% | 200%\r\npython client - python server | 860 | 200% | 200%\r\n```\r\nFrom the python server we can see that all workload are from 5 clients while other clients are idle.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13342", "title": "gRPC PHP Client Interceptor", "body": "This PR adds machinery to intercept RPCs on client side to gRPC PHP.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13033", "title": "PHP benchmark: support multi-rpc/channel; scenarios for 1M payload&32 cores; ruby proxy report CPU usage", "body": "Final work to make php benchmark result show in all the graphs from the dashboard.\r\n1. support outstanding_rpc_channel;\r\n2. report CPU usages\r\n3. fill the missing scenarios\r\nGet the payload size to determine the batch length from php-client to the ruby proxy. 2000 ping-pong batch length is too large for 1M payload because 30s is too short to send such amount of ping-pong.\r\n\r\nTested in the performance_adhoc.\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/24311820", "body": "Sorry. This is merging remote master to my branch. I'll do rebase next time.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24311820/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jtattermusch": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14066", "title": "completion_queue_threading_test is flaky (GRPC_POLL_STRATEGY=epollex)", "body": "Failing 3-4% of builds.\r\n\r\n```\r\n...\r\nI0115 23:27:15.868564964    6745 completion_queue_threading_test.cc:198] consumer 106 phase 2 done\r\nI0115 23:27:15.868603191    6754 completion_queue_threading_test.cc:198] consumer 112 phase 2 done\r\nI0115 23:27:15.868564523    6743 completion_queue_threading_test.cc:198] consumer 104 phase 2 done\r\nE0115 23:27:25.868801879    6330 completion_queue_threading_test.cc:261] assertion failed: gpr_event_wait(&options[i].on_finished, ten_seconds_time())\r\n```\r\n\r\nSeeing failures in:\r\ndbg\r\nhttps://sponge.corp.google.com/target?id=0ef9db45-f533-4c10-835e-79ac8ffc766d&target=github/grpc/c_linux_dbg_native&searchFor=&show=FAILED&sortBy=STATUS\r\nhttps://sponge.corp.google.com/target?id=0a81c3e8-f823-4cfc-b106-b8b5ba3326ca&target=github/grpc/c_linux_dbg_native&searchFor=&show=FAILED&sortBy=STATUS\r\nhttps://sponge.corp.google.com/target?id=c46b2c97-27f3-46a9-afe7-d49f1e894646&target=github/grpc/c_linux_dbg_native&searchFor=&show=ALL&sortBy=STATUS\r\n\r\nasan\r\nhttps://sponge.corp.google.com/target?id=732e6887-7fc8-4b98-9a84-db571cecbffb&target=github/grpc/c_linux_asan_native&searchFor=&show=ALL&sortBy=STATUS\r\nhttps://sponge.corp.google.com/invocation?id=b311594a-c8c3-4d1f-a981-0ffff0c23579\r\nhttps://sponge.corp.google.com/invocation?id=47254cbb-2cbd-4160-a6f4-72ccfc8e0ede\r\n\r\ntsan\r\nhttps://sponge.corp.google.com/invocation?id=8f9233b8-e387-4265-a4e0-bedbdcbda1ca\r\nhttps://sponge.corp.google.com/invocation?id=a16f21b4-385a-4f45-81d6-ec616da6428c\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14066/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/14045", "title": "qps_json_driver:inproc_* test are timing out (under epollex)", "body": "Mostly happening on `opt`. Overall fails about 10% of our master builds. (the flake itself is not very common, but runs many times in a single suite, so the occurrence is amplified).\r\n\r\nSeems to be happening only with `epollex`\r\n\r\nE.g.\r\nhttps://sponge.corp.google.com/invocation?id=b1dce5f3-bf7a-4cd4-97ac-1a0039b39d3d\r\nhttps://sponge.corp.google.com/invocation?id=e54c66cc-ba99-4173-a326-247e9c129d61\r\nhttps://sponge.corp.google.com/invocation?id=9d08480e-b4af-4435-8afe-f8d191bfccc2\r\nhttps://sponge.corp.google.com/invocation?id=df7b8eee-ee38-4000-95db-087115616b9d\r\nhttps://sponge.corp.google.com/invocation?id=f2d332a9-ef59-4d0c-963c-a6e4067d13d1\r\n\r\n```\r\nqps_json_driver:inproc_cpp_generic_async_streaming_qps_unconstrained_1cq_insecure GRPC_POLL_STRATEGY=epollex\r\nqps_json_driver:inproc_cpp_protobuf_async_streaming_qps_unconstrained_1cq_insecure GRPC_POLL_STRATEGY=epollex\r\nqps_json_driver:inproc_cpp_protobuf_async_unary_qps_unconstrained_insecure GRPC_POLL_STRATEGY=epollex\r\n```\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13943", "title": "Too verbose logging when a call reaches deadline", "body": "As explained here: https://groups.google.com/forum/#!topic/grpc-io/b2bct_pgRXs, \r\nan inherent race between client-side and server-side implementation of a call sometimes causes a somewhat misleading log message to be printed:\r\n\r\n```\r\n[gRPC Warning] Exception while handling RPC. System.InvalidOperationException: Operation is not valid due to the current state of the object.\r\n   at Grpc.Core.Internal.AsyncCallServer`2.SendStatusFromServerAsync(Status status, Metadata trailers, Tuple`2 optionalWrite)\r\n   at Grpc.Core.Internal.ClientStreamingServerCallHandler`2.<HandleCall>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Grpc.Core.Server.<HandleCallAsync>d__39.MoveNext()\r\n```\r\nIt happends because the server attempts to send status to the client on a call that has already been terminated by the client (and so server's attempts fails, which gets printed in the logs).", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13674", "title": "Document thread-safety of methods in C core public API", "body": "Thread safety of some methods from grpc.h is documented (grpc_call_cancel, grpc_call_start_batch), but there are other methods where the thread safety properties are unclear.\r\n\r\nWe should either:\r\n1. document thread safety properties for all exposed functions explicitly wherever it makes sense\r\n2. add a general statement about thread-safety properties that applies to all methods unless stated otherwise.\r\n\r\nExamples of methods where thread-safety info would be useful:\r\n- grpc_channel_check_connectivity_state\r\n- grpc_channel_watch_connectivity_state\r\n...", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13623", "title": "Broken bazel test: //test/cpp/end2end:client_crash_test", "body": "https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcpp%2Fend2end:client_crash_test\r\n\r\n\"Timed out\"", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13622", "title": "Broken bazel test: //test/cpp/server:server_request_call_test", "body": "https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcpp%2Fserver:server_request_call_test?page=log\r\n\r\n```\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from ServerRequestCallTest\r\n[ RUN      ] ServerRequestCallTest.ShortDeadlineDoesNotCauseOkayFalse\r\nE1130 00:36:54.182649250      15 server_chttp2.cc:38]        {\"created\":\"@1512002214.182605102\",\"description\":\"No address added out of total 1 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":248,\"referenced_errors\":[{\"created\":\"@1512002214.182583842\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49152\"}]}\r\nSegmentation fault (core dumped)\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13621", "title": "Broken bazel test: //test/cpp/naming:resolver_component_tests_runner_invoker", "body": "https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcpp%2Fnaming:resolver_component_tests_runner_invoker?page=log\r\n\r\n```\r\n+ echo 'Retry health-check DNS query to local DNS server over tcp and udp'\r\nRetry health-check DNS query to local DNS server over tcp and udp\r\n+ RETRY=0\r\n+ dig A health-check-local-dns-server-is-alive.resolver-tests.grpctestingexp. @localhost -p 49152 +tries=1 +timeout=1\r\n+ grep 123.123.123.123\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/naming/resolver_component_tests_runner_invoker.runfiles/__main__/test/cpp/naming/resolver_component_tests_runner: line 46: dig: command not found\r\n+ RETRY=1\r\n+ grep 123.123.123.123\r\n+ dig A health-check-local-dns-server-is-alive.resolver-tests.grpctestingexp. @localhost -p 49152 +tries=1 +timeout=1 +tcp\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/naming/resolver_component_tests_runner_invoker.runfiles/__main__/test/cpp/naming/resolver_component_tests_runner: line 47: dig: command not found\r\n+ RETRY=1\r\n+ [[ 1 == 0 ]]\r\n+ sleep 0.1\r\n+ (( i++ ))\r\n+ (( i<30 ))\r\n+ echo 'Retry health-check DNS query to local DNS server over tcp and udp'\r\nRetry health-check DNS query to local DNS server over tcp and udp\r\n+ RETRY=0\r\n+ grep 123.123.123.123\r\n+ dig A health-check-local-dns-server-is-alive.resolver-tests.grpctestingexp. @localhost -p 49152 +tries=1 +timeout=1\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/naming/resolver_component_tests_runner_invoker.runfiles/__main__/test/cpp/naming/resolver_component_tests_runner: line 46: dig: command not found\r\n+ RETRY=1\r\n+ grep 123.123.123.123\r\n+ dig A health-check-local-dns-server-is-alive.resolver-tests.grpctestingexp. @localhost -p 49152 +tries=1 +timeout=1 +tcp\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/naming/resolver_component_tests_runner_invoker.runfiles/__main__/test/cpp/naming/resolver_component_tests_runner: line 47: dig: command not found\r\n+ RETRY=1\r\n+ [[ 1 == 0 ]]\r\n+ sleep 0.1\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13621/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13620", "title": "Broken bazel test: //test/cpp/naming:resolver_component_tests_runner", "body": "```\r\n++ echo ''\r\n++ cut -d = -f 2\r\n++ grep '\\--test_bin_path='\r\n+ FLAGS_test_bin_path=\r\n++ echo ''\r\n++ cut -d = -f 2\r\n++ grep '\\--dns_server_bin_path='\r\n+ FLAGS_dns_server_bin_path=\r\n++ echo ''\r\n++ cut -d = -f 2\r\n++ grep '\\--records_config_path='\r\n+ FLAGS_records_config_path=\r\n++ echo ''\r\n++ cut -d = -f 2\r\n++ grep '\\--test_dns_server_port='\r\n+ FLAGS_test_dns_server_port=\r\n+ for cmd_arg in '\"$FLAGS_test_bin_path\"' '\"$FLAGS_dns_server_bin_path\"' '\"$FLAGS_records_config_path\"' '\"$FLAGS_test_dns_server_port\"'\r\n+ [[ '' == '' ]]\r\n+ echo 'Missing a CMD arg'\r\nMissing a CMD arg\r\n+ exit 1\r\n```\r\n\r\nhttps://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcpp%2Fnaming:resolver_component_tests_runner?page=log", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13619", "title": "Broken bazel test: //test/cpp/end2end:server_crash_test_client", "body": "```\r\nE1130 00:36:13.672561293      16 server_crash_test_client.cc:73] invalid test mode ''\r\n```\r\n\r\nhttps://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcpp%2Fend2end:server_crash_test_client?page=log", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13618", "title": "Broken bazel test: //test/cpp/end2end:server_crash_test", "body": "https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcpp%2Fend2end:server_crash_test?page=log\r\n\r\n```\r\n-----------------------------------------------------------------------------\r\nD1130 00:36:13.937613010      15 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\n[==========] Running 2 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 2 tests from CrashTest\r\n[ RUN      ] CrashTest.ResponseStream\r\nE1130 00:36:13.939157473      15 subprocess_posix.cc:60]     execv '/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test_client' failed: No such file or directory\r\nE1130 00:36:13.940791900      15 server_chttp2.cc:38]        {\"created\":\"@1512002173.940753972\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002173.940734955\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49152\"}]}\r\nE1130 00:37:13.941765063      15 server_crash_test.cc:130]   assertion failed: HadOneResponseStream()\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/../../../_solib_k8/libtest_Score_Sutil_Slibgpr_Utest_Uutil.so(+0x2248)[0x7f433dce2248]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xf890)[0x7f433ce8b890]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0x37)[0x7f433c2e3067]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x148)[0x7f433c2e4448]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x4127c6]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x46f73e]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x4598e5]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x440f36]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x441bcd]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x44228c]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x449801]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x4731de]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x45bd15]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x4494d3]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x4139d1]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x41241a]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5)[0x7f433c2cfb45]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/server_crash_test.runfiles/__main__/test/cpp/end2end/server_crash_test[0x412178]\r\nAborted (core dumped)\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13617", "title": "Bazel test broken: //test/cpp/end2end:grpclb_end2end_test", "body": "https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcpp%2Fend2end:grpclb_end2end_test\r\n\r\n```\r\n[==========] Running 13 tests from 3 test cases.\r\n[----------] Global test environment set-up.\r\n[----------] 8 tests from SingleBalancerTest\r\n[ RUN      ] SingleBalancerTest.Vanilla\r\nE1130 00:36:04.526720340      19 server_chttp2.cc:38]        {\"created\":\"@1512002164.526673385\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.526623636\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49152\"}]}\r\nE1130 00:36:04.527562506      21 server_chttp2.cc:38]        {\"created\":\"@1512002164.527524239\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.527520186\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49153\"}]}\r\nE1130 00:36:04.528575235      23 server_chttp2.cc:38]        {\"created\":\"@1512002164.528552295\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.528545659\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49154\"}]}\r\nE1130 00:36:04.529239655      25 server_chttp2.cc:38]        {\"created\":\"@1512002164.529211489\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.529206617\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49155\"}]}\r\nE1130 00:36:04.529830920      27 server_chttp2.cc:38]        {\"created\":\"@1512002164.529804976\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.529800956\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49156\"}]}\r\n[       OK ] SingleBalancerTest.Vanilla (132 ms)\r\n[ RUN      ] SingleBalancerTest.InitiallyEmptyServerlist\r\nE1130 00:36:04.657421962      35 server_chttp2.cc:38]        {\"created\":\"@1512002164.657379366\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.657373470\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49157\"}]}\r\nE1130 00:36:04.657826973      37 server_chttp2.cc:38]        {\"created\":\"@1512002164.657803293\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.657799599\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49158\"}]}\r\nE1130 00:36:04.658202399      39 server_chttp2.cc:38]        {\"created\":\"@1512002164.658179966\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.658176170\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49159\"}]}\r\nE1130 00:36:04.658588387      41 server_chttp2.cc:38]        {\"created\":\"@1512002164.658566679\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.658563153\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49160\"}]}\r\nE1130 00:36:04.659409499      43 server_chttp2.cc:38]        {\"created\":\"@1512002164.659385528\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002164.659381477\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49161\"}]}\r\n[       OK ] SingleBalancerTest.InitiallyEmptyServerlist (510 ms)\r\n[ RUN      ] SingleBalancerTest.Fallback\r\nE1130 00:36:05.167183090      50 server_chttp2.cc:38]        {\"created\":\"@1512002165.167158320\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.167151875\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49162\"}]}\r\nE1130 00:36:05.167735456      52 server_chttp2.cc:38]        {\"created\":\"@1512002165.167709638\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.167705416\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49163\"}]}\r\nE1130 00:36:05.168174798      54 server_chttp2.cc:38]        {\"created\":\"@1512002165.168149307\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.168145636\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49164\"}]}\r\nE1130 00:36:05.168699698      56 server_chttp2.cc:38]        {\"created\":\"@1512002165.168674851\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.168671311\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49165\"}]}\r\nE1130 00:36:05.169551331      58 server_chttp2.cc:38]        {\"created\":\"@1512002165.169524616\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.169520836\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49166\"}]}\r\n[       OK ] SingleBalancerTest.Fallback (509 ms)\r\n[ RUN      ] SingleBalancerTest.FallbackUpdate\r\nE1130 00:36:05.676507460      65 server_chttp2.cc:38]        {\"created\":\"@1512002165.676474077\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.676468306\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49167\"}]}\r\nE1130 00:36:05.677039054      67 server_chttp2.cc:38]        {\"created\":\"@1512002165.677015400\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.677011099\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49168\"}]}\r\nE1130 00:36:05.677600748      69 server_chttp2.cc:38]        {\"created\":\"@1512002165.677577683\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.677574037\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49169\"}]}\r\nE1130 00:36:05.678108763      71 server_chttp2.cc:38]        {\"created\":\"@1512002165.678067203\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.678063463\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49170\"}]}\r\nE1130 00:36:05.679050355      73 server_chttp2.cc:38]        {\"created\":\"@1512002165.679015074\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002165.679011359\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49171\"}]}\r\n[       OK ] SingleBalancerTest.FallbackUpdate (510 ms)\r\n[ RUN      ] SingleBalancerTest.BackendsRestart\r\nE1130 00:36:06.185992998      80 server_chttp2.cc:38]        {\"created\":\"@1512002166.185967725\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002166.185962564\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49172\"}]}\r\nE1130 00:36:06.186424675      82 server_chttp2.cc:38]        {\"created\":\"@1512002166.186400949\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002166.186396969\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49173\"}]}\r\nE1130 00:36:06.186891905      84 server_chttp2.cc:38]        {\"created\":\"@1512002166.186869633\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002166.186865404\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49174\"}]}\r\nE1130 00:36:06.187310509      86 server_chttp2.cc:38]        {\"created\":\"@1512002166.187288298\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002166.187283950\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49175\"}]}\r\nE1130 00:36:06.188393735      88 server_chttp2.cc:38]        {\"created\":\"@1512002166.188370519\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002166.188364374\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49176\"}]}\r\nE1130 00:36:07.318190691      95 server_chttp2.cc:38]        {\"created\":\"@1512002167.318163559\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002167.318157440\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49177\"}]}\r\nE1130 00:36:07.319239949      97 server_chttp2.cc:38]        {\"created\":\"@1512002167.319213204\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002167.319207112\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49178\"}]}\r\nE1130 00:36:07.319897444      99 server_chttp2.cc:38]        {\"created\":\"@1512002167.319873954\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002167.319869935\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49179\"}]}\r\nE1130 00:36:07.321005581     101 server_chttp2.cc:38]        {\"created\":\"@1512002167.320978923\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002167.320974492\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49180\"}]}\r\n[       OK ] SingleBalancerTest.BackendsRestart (2138 ms)\r\n[ RUN      ] SingleBalancerTest.Drop\r\nE1130 00:36:08.323798569     108 server_chttp2.cc:38]        {\"created\":\"@1512002168.323774020\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.323768373\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49181\"}]}\r\nE1130 00:36:08.324452889     110 server_chttp2.cc:38]        {\"created\":\"@1512002168.324425949\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.324420613\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49182\"}]}\r\nE1130 00:36:08.325129833     112 server_chttp2.cc:38]        {\"created\":\"@1512002168.325105327\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.325101353\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49183\"}]}\r\nE1130 00:36:08.326247767     114 server_chttp2.cc:38]        {\"created\":\"@1512002168.326222685\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.326218139\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49184\"}]}\r\nE1130 00:36:08.326910553     116 server_chttp2.cc:38]        {\"created\":\"@1512002168.326886813\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.326882584\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49185\"}]}\r\n[       OK ] SingleBalancerTest.Drop (138 ms)\r\n[ RUN      ] SingleBalancerTest.DropAllFirst\r\nE1130 00:36:08.462158209     124 server_chttp2.cc:38]        {\"created\":\"@1512002168.462134750\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.462128484\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49186\"}]}\r\nE1130 00:36:08.462697967     126 server_chttp2.cc:38]        {\"created\":\"@1512002168.462673536\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.462669345\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49187\"}]}\r\nE1130 00:36:08.463232747     128 server_chttp2.cc:38]        {\"created\":\"@1512002168.463208282\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.463204222\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49188\"}]}\r\nE1130 00:36:08.464595128     130 server_chttp2.cc:38]        {\"created\":\"@1512002168.464571502\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.464567598\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49189\"}]}\r\nE1130 00:36:08.465170415     132 server_chttp2.cc:38]        {\"created\":\"@1512002168.465147417\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.465143799\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49190\"}]}\r\n[       OK ] SingleBalancerTest.DropAllFirst (6 ms)\r\n[ RUN      ] SingleBalancerTest.DropAll\r\nE1130 00:36:08.468007669     140 server_chttp2.cc:38]        {\"created\":\"@1512002168.467983829\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.467979819\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49191\"}]}\r\nE1130 00:36:08.468388679     142 server_chttp2.cc:38]        {\"created\":\"@1512002168.468364689\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.468360868\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49192\"}]}\r\nE1130 00:36:08.468802481     144 server_chttp2.cc:38]        {\"created\":\"@1512002168.468780530\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.468776921\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49193\"}]}\r\nE1130 00:36:08.469670987     146 server_chttp2.cc:38]        {\"created\":\"@1512002168.469645430\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.469628401\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49194\"}]}\r\nE1130 00:36:08.470294320     148 server_chttp2.cc:38]        {\"created\":\"@1512002168.470272227\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002168.470268599\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49195\"}]}\r\n[       OK ] SingleBalancerTest.DropAll (1006 ms)\r\n[----------] 8 tests from SingleBalancerTest (4949 ms total)\r\n\r\n[----------] 3 tests from UpdatesTest\r\n[ RUN      ] UpdatesTest.UpdateBalancers\r\nE1130 00:36:09.474558382     156 server_chttp2.cc:38]        {\"created\":\"@1512002169.474526907\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002169.474520682\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49196\"}]}\r\nE1130 00:36:09.474982127     158 server_chttp2.cc:38]        {\"created\":\"@1512002169.474959067\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002169.474955109\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49197\"}]}\r\nE1130 00:36:09.475348504     160 server_chttp2.cc:38]        {\"created\":\"@1512002169.475325944\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002169.475322179\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49198\"}]}\r\nE1130 00:36:09.475707964     162 server_chttp2.cc:38]        {\"created\":\"@1512002169.475684896\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002169.475680927\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49199\"}]}\r\nE1130 00:36:09.476939048     164 server_chttp2.cc:38]        {\"created\":\"@1512002169.476914924\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002169.476911038\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49200\"}]}\r\nE1130 00:36:09.477724515     166 server_chttp2.cc:38]        {\"created\":\"@1512002169.477701247\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002169.477697335\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49201\"}]}\r\nE1130 00:36:09.478262494     168 server_chttp2.cc:38]        {\"created\":\"@1512002169.478237544\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002169.478233631\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49202\"}]}\r\n[       OK ] UpdatesTest.UpdateBalancers (1703 ms)\r\n[ RUN      ] UpdatesTest.UpdateBalancersRepeated\r\nE1130 00:36:11.177761524     178 server_chttp2.cc:38]        {\"created\":\"@1512002171.177725899\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002171.177720237\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49203\"}]}\r\nE1130 00:36:11.178457549     180 server_chttp2.cc:38]        {\"created\":\"@1512002171.178425003\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002171.178419785\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49204\"}]}\r\nE1130 00:36:11.179200383     182 server_chttp2.cc:38]        {\"created\":\"@1512002171.179168664\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002171.179163521\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49205\"}]}\r\nE1130 00:36:11.180004625     184 server_chttp2.cc:38]        {\"created\":\"@1512002171.179936745\",\"description\":\"No address added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":248,\"referenced_errors\":[{\"created\":\"@1512002171.179928584\",\"description\":\"Unable to configure socket\",\"fd\":8,\"file\":\"src/core/lib/iomgr/tcp_server_utils_posix_common.cc\",\"file_line\":200,\"referenced_errors\":[{\"created\":\"@1512002171.179921564\",\"description\":\"OS Error\",\"errno\":98,\"file\":\"src/core/lib/iomgr/tcp_server_utils_posix_common.cc\",\"file_line\":173,\"os_error\":\"Address already in use\",\"syscall\":\"bind\"}]},{\"created\":\"@1512002171.179933388\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49206\"}]}\r\nE1130 00:36:11.181563104     185 server_chttp2.cc:38]        {\"created\":\"@1512002171.181528543\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002171.181522752\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49207\"}]}\r\nE1130 00:36:11.182366632     187 server_chttp2.cc:38]        {\"created\":\"@1512002171.182333420\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002171.182328057\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49208\"}]}\r\nE1130 00:36:11.183090323     189 server_chttp2.cc:38]        {\"created\":\"@1512002171.183045704\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002171.183040097\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49209\"}]}\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGSEGV\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/../../../_solib_k8/libtest_Score_Sutil_Slibgpr_Utest_Uutil.so(+0x2248)[0x7fc0dd33e248]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xf890)[0x7fc0dc4e7890]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x440ff8]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x428d37]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x41cdee]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x4b7ade]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x4a44d5]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x48c76b]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x48d3bd]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x48da7c]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x494ff1]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x4bac6e]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x4a66e5]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x494cc3]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x439af1]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x41c689]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5)[0x7fc0db92bb45]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/cpp/end2end/grpclb_end2end_test.runfiles/__main__/test/cpp/end2end/grpclb_end2end_test[0x41c208]\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13617/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13614", "title": "Broken bazel test: //test/core/surface:server_test", "body": "https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcore%2Fsurface:server_test?page=log\r\n\r\n```\r\nD1130 00:36:48.343978575      15 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nE1130 00:36:48.344806355      15 server.cc:1011]             grpc_server_register_method method string cannot be NULL\r\nE1130 00:36:48.344819133      15 server.cc:1017]             duplicate registration for m@h\r\nE1130 00:36:48.344821961      15 server.cc:1017]             duplicate registration for m2@h2\r\nE1130 00:36:48.344823797      15 server.cc:1017]             duplicate registration for m2@h2\r\nE1130 00:36:48.344891173      15 server_secure_chttp2.cc:83] {\"created\":\"@1512002208.344875912\",\"description\":\"No credentials specified for secure server port (creds==NULL)\",\"file\":\"src/core/ext/transport/chttp2/server/secure/server_secure_chttp2.cc\",\"file_line\":52}\r\nE1130 00:36:48.345335597      15 server_chttp2.cc:38]        {\"created\":\"@1512002208.345264581\",\"description\":\"No address added out of total 1 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":248,\"referenced_errors\":[{\"created\":\"@1512002208.345258977\",\"description\":\"Failed to add any wildcard listeners\",\"file\":\"src/core/lib/iomgr/tcp_server_posix.cc\",\"file_line\":340,\"referenced_errors\":[{\"created\":\"@1512002208.345242623\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::]:49152\"},{\"created\":\"@1512002208.345258455\",\"description\":\"Unable to configure socket\",\"fd\":6,\"file\":\"src/core/lib/iomgr/tcp_server_utils_posix_common.cc\",\"file_line\":200,\"referenced_errors\":[{\"created\":\"@1512002208.345252297\",\"description\":\"OS Error\",\"errno\":98,\"file\":\"src/core/lib/iomgr/tcp_server_utils_posix_common.cc\",\"file_line\":173,\"os_error\":\"Address already in use\",\"syscall\":\"bind\"}]}]}]}\r\nE1130 00:36:48.345591898      15 server_secure_chttp2.cc:83] {\"created\":\"@1512002208.345463901\",\"description\":\"No address added out of total 1 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":248,\"referenced_errors\":[{\"created\":\"@1512002208.345462186\",\"description\":\"Failed to add any wildcard listeners\",\"file\":\"src/core/lib/iomgr/tcp_server_posix.cc\",\"file_line\":340,\"referenced_errors\":[{\"created\":\"@1512002208.345387281\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::]:49152\"},{\"created\":\"@1512002208.345461594\",\"description\":\"Unable to configure socket\",\"fd\":6,\"file\":\"src/core/lib/iomgr/tcp_server_utils_posix_common.cc\",\"file_line\":200,\"referenced_errors\":[{\"created\":\"@1512002208.345456157\",\"description\":\"OS Error\",\"errno\":98,\"file\":\"src/core/lib/iomgr/tcp_server_utils_posix_common.cc\",\"file_line\":173,\"os_error\":\"Address already in use\",\"syscall\":\"bind\"}]}]}]}\r\nE1130 00:36:48.345717920      15 server_chttp2.cc:38]        {\"created\":\"@1512002208.345698485\",\"description\":\"No address added out of total 1 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":248,\"referenced_errors\":[{\"created\":\"@1512002208.345695649\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49153\"}]}\r\nE1130 00:36:48.345767631      15 server_test.cc:116]         assertion failed: grpc_server_add_insecure_http2_port(server, addr)\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/surface/server_test.runfiles/__main__/test/core/surface/../../../_solib_k8/libtest_Score_Sutil_Slibgpr_Utest_Uutil.so(+0x2248)[0x7f3710137248]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xf890)[0x7f370fabd890]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0x37)[0x7f370f12c067]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x148)[0x7f370f12d448]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/surface/server_test.runfiles/__main__/test/core/surface/server_test[0x403416]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/surface/server_test.runfiles/__main__/test/core/surface/server_test[0x403569]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/surface/server_test.runfiles/__main__/test/core/surface/server_test[0x4034f9]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5)[0x7f370f118b45]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/surface/server_test.runfiles/__main__/test/core/surface/server_test[0x402bb9]\r\nAborted (core dumped)\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13613", "title": "Broken bazel test: //test/core/iomgr:tcp_server_posix_test", "body": "https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcore%2Fiomgr:tcp_server_posix_test?page=log\r\n\r\n```\r\nD1130 00:36:31.373683241      15 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nE1130 00:36:31.376767628      15 tcp_server_posix_test.cc:328] grpc_tcp_server_add_port: {\"created\":\"@1512002191.376756324\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::]:0\"}\r\nE1130 00:36:31.376786362      15 tcp_server_posix_test.cc:328] assertion failed: GRPC_LOG_IF_ERROR( \"grpc_tcp_server_add_port\", grpc_tcp_server_add_port(s, &resolved_addr, &svr_port))\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/iomgr/tcp_server_posix_test.runfiles/__main__/test/core/iomgr/../../../_solib_k8/libtest_Score_Sutil_Slibgpr_Utest_Uutil.so(+0x2248)[0x7fe061c5b248]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xf890)[0x7fe0615e1890]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0x37)[0x7fe060c50067]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x148)[0x7fe060c51448]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/iomgr/tcp_server_posix_test.runfiles/__main__/test/core/iomgr/tcp_server_posix_test[0x404198]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/iomgr/tcp_server_posix_test.runfiles/__main__/test/core/iomgr/tcp_server_posix_test[0x4036eb]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5)[0x7fe060c3cb45]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/iomgr/tcp_server_posix_test.runfiles/__main__/test/core/iomgr/tcp_server_posix_test[0x403219]\r\nAborted (core dumped)\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13612", "title": "Broken bazel test: //test/core/http:httpcli_test", "body": "\r\nhttps://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcore%2Fhttp:httpcli_test?page=log\r\n```\r\n-----------------------------------------------------------------------------\r\nE1130 00:36:57.663156431      17 subprocess_posix.cc:60]     execv '/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/../../tools/distrib/python_wrapper.sh' failed: No such file or directory\r\nD1130 00:37:02.663023124      15 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nE1130 00:37:02.668610338      15 httpcli_test.cc:49]         assertion failed: response->status == 200\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/../../../_solib_k8/libtest_Score_Sutil_Slibgpr_Utest_Uutil.so(+0x2248)[0x7ffb2f2b5248]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xf890)[0x7ffb2ec40890]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0x37)[0x7ffb2e2af067]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x148)[0x7ffb2e2b0448]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/httpcli_test[0x403f02]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/httpcli_test(_ZN12closure_impl15closure_wrapperEP13grpc_exec_ctxPvP10grpc_error+0x5c)[0x4041dc]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/../../../_solib_k8/liblibgrpc_Ubase_Uc.so(+0x43455)[0x7ffb2ee91455]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/../../../_solib_k8/liblibgrpc_Ubase_Uc.so(grpc_exec_ctx_flush+0x9b)[0x7ffb2ee912eb]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/../../../_solib_k8/liblibgrpc_Ubase_Uc.so(+0x3409c)[0x7ffb2ee8209c]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/../../../_solib_k8/liblibgrpc_Ubase_Uc.so(+0x31e8a)[0x7ffb2ee7fe8a]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/../../../_solib_k8/liblibgrpc_Ubase_Uc.so(grpc_pollset_work+0x40)[0x7ffb2ee90c60]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/httpcli_test[0x4039cb]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/httpcli_test[0x403667]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5)[0x7ffb2e29bb45]\r\n/tmp/botexec/bazel-out/k8-fastbuild/bin/test/core/http/httpcli_test.runfiles/__main__/test/core/http/httpcli_test[0x403199]\r\nAborted (core dumped)\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13612/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13611", "title": "Broken bazel test: //test/core/end2end:h2_fakesec_test@no_logging", "body": "Please answer these questions before submitting your issue. \r\n\r\n```\r\nD1130 00:32:47.085537208      17 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nI1130 00:32:47.086022673      17 no_logging.cc:68]           Running test: test_no_logging_in_last_request/chttp2/fake_secure_fullstack\r\nI1130 00:32:47.086672022      17 socket_utils_common_posix.cc:223] Disabling AF_INET6 sockets because ::1 is not available.\r\nI1130 00:32:47.086789393      17 chttp2_server.cc:261]       WARNING: {\"created\":\"@1512001967.086764725\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512001967.086757832\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49152\"}]}\r\nE1130 00:32:47.086806506      17 server_secure_chttp2.cc:83] {\"created\":\"@1512001967.086764725\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512001967.086757832\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49152\"}]}\r\nE1130 00:32:47.089868274      17 server_secure_chttp2.cc:83] Unwanted log: {\"created\":\"@1512001967.089840756\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512001967.089835931\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49153\"}]}\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\ntest/core/end2end/h2_fakesec_test[0x6756b8]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xf890)[0x7fdab4239890]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0x37)[0x7fdab3692067]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x148)[0x7fdab3693448]\r\ntest/core/end2end/h2_fakesec_test[0x429587]\r\ntest/core/end2end/h2_fakesec_test[0x429833]\r\ntest/core/end2end/h2_fakesec_test[0x428464]\r\ntest/core/end2end/h2_fakesec_test[0x67b072]\r\ntest/core/end2end/h2_fakesec_test[0x67ace4]\r\ntest/core/end2end/h2_fakesec_test[0x499af8]\r\ntest/core/end2end/h2_fakesec_test[0x4053a1]\r\ntest/core/end2end/h2_fakesec_test[0x40513b]\r\ntest/core/end2end/h2_fakesec_test[0x428864]\r\ntest/core/end2end/h2_fakesec_test[0x4298ce]\r\ntest/core/end2end/h2_fakesec_test[0x428730]\r\ntest/core/end2end/h2_fakesec_test[0x428413]\r\ntest/core/end2end/h2_fakesec_test[0x407674]\r\ntest/core/end2end/h2_fakesec_test[0x404f98]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5)[0x7fdab367eb45]\r\ntest/core/end2end/h2_fakesec_test[0x404de4]\r\nAborted (core dumped)\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13610", "title": "Broken bazel test: //test/core/end2end:h2_compress_test@no_logging", "body": "https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcore%2Fend2end:h2_compress_test@no_logging\r\n\r\n```\r\nD1130 00:34:58.679504792      20 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nI1130 00:34:58.679848222      20 no_logging.cc:68]           Running test: test_no_logging_in_last_request/chttp2/fullstack_compression\r\nI1130 00:34:58.680519721      20 socket_utils_common_posix.cc:223] Disabling AF_INET6 sockets because ::1 is not available.\r\nI1130 00:34:58.680622967      20 chttp2_server.cc:261]       WARNING: {\"created\":\"@1512002098.680598481\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002098.680592633\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49152\"}]}\r\nE1130 00:34:58.680630833      20 server_chttp2.cc:38]        {\"created\":\"@1512002098.680598481\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002098.680592633\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49152\"}]}\r\nE1130 00:34:58.683332410      20 server_chttp2.cc:38]        Unwanted log: {\"created\":\"@1512002098.683305469\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002098.683301757\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49153\"}]}\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\ntest/core/end2end/h2_compress_test[0x674c38]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xf890)[0x7fc0e5eef890]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0x37)[0x7fc0e5348067]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x148)[0x7fc0e5349448]\r\ntest/core/end2end/h2_compress_test[0x4294a7]\r\ntest/core/end2end/h2_compress_test[0x429753]\r\ntest/core/end2end/h2_compress_test[0x428384]\r\ntest/core/end2end/h2_compress_test[0x67a5f2]\r\ntest/core/end2end/h2_compress_test[0x67a264]\r\ntest/core/end2end/h2_compress_test[0x476184]\r\ntest/core/end2end/h2_compress_test[0x405096]\r\ntest/core/end2end/h2_compress_test[0x428784]\r\ntest/core/end2end/h2_compress_test[0x4297ee]\r\ntest/core/end2end/h2_compress_test[0x428650]\r\ntest/core/end2end/h2_compress_test[0x428333]\r\ntest/core/end2end/h2_compress_test[0x407594]\r\ntest/core/end2end/h2_compress_test[0x405238]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5)[0x7fc0e5334b45]\r\ntest/core/end2end/h2_compress_test[0x404de4]\r\nAborted (core dumped)\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13609", "title": "Broken bazel test: //test/core/end2end:h2_census_test@no_logging", "body": "https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcore%2Fend2end:h2_census_test@no_logging?page=log\r\n\r\n```\r\nD1130 00:33:37.230003321      17 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nI1130 00:33:37.230327066      17 no_logging.cc:68]           Running test: test_no_logging_in_last_request/chttp2/fullstack+census\r\nI1130 00:33:37.230635858      17 socket_utils_common_posix.cc:223] Disabling AF_INET6 sockets because ::1 is not available.\r\nI1130 00:33:37.230764092      17 chttp2_server.cc:261]       WARNING: {\"created\":\"@1512002017.230730325\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002017.230724123\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49152\"}]}\r\nE1130 00:33:37.230777010      17 server_chttp2.cc:38]        {\"created\":\"@1512002017.230730325\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002017.230724123\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49152\"}]}\r\nE1130 00:33:37.233577663      17 server_chttp2.cc:38]        Unwanted log: {\"created\":\"@1512002017.233550827\",\"description\":\"Only 1 addresses added out of total 2 resolved\",\"file\":\"src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":257,\"referenced_errors\":[{\"created\":\"@1512002017.233546744\",\"description\":\"OS Error\",\"errno\":97,\"file\":\"src/core/lib/iomgr/socket_utils_common_posix.cc\",\"file_line\":256,\"os_error\":\"Address family not supported by protocol\",\"syscall\":\"socket\",\"target_address\":\"[::1]:49153\"}]}\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\ntest/core/end2end/h2_census_test[0x674c38]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0xf890)[0x7fa77afb3890]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0x37)[0x7fa77a40c067]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x148)[0x7fa77a40d448]\r\ntest/core/end2end/h2_census_test[0x4294a7]\r\ntest/core/end2end/h2_census_test[0x429753]\r\ntest/core/end2end/h2_census_test[0x428384]\r\ntest/core/end2end/h2_census_test[0x67a5f2]\r\ntest/core/end2end/h2_census_test[0x67a264]\r\ntest/core/end2end/h2_census_test[0x476184]\r\ntest/core/end2end/h2_census_test[0x40511b]\r\ntest/core/end2end/h2_census_test[0x428784]\r\ntest/core/end2end/h2_census_test[0x4297ee]\r\ntest/core/end2end/h2_census_test[0x428650]\r\ntest/core/end2end/h2_census_test[0x428333]\r\ntest/core/end2end/h2_census_test[0x407594]\r\ntest/core/end2end/h2_census_test[0x405248]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5)[0x7fa77a3f8b45]\r\ntest/core/end2end/h2_census_test[0x404de4]\r\nAborted (core dumped)\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13609/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13607", "title": "Broken bazel test: //test/core/bad_ssl:bad_ssl_cert_server", "body": "```\r\nE1130 00:36:49.964151926      15 server_common.cc:42]        assertion failed: addr\r\nAborted (core dumped)\r\n```\r\n\r\nhttps://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcore%2Fbad_ssl:bad_ssl_cert_server?page=log", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13606", "title": "Broken bazel test: //test/core/bad_ssl:bad_ssl_alpn_server", "body": "See https://source.cloud.google.com/results/invocation/05f9065e-93e5-4b35-ad1f-ab6bfa8b383a/targets/%2F%2Ftest%2Fcore%2Fbad_ssl:bad_ssl_alpn_server?page=log", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13275", "title": "Passing GPR_TIMESPAN as a timeout to C core doesn't work anymore.", "body": "We ran into that in https://github.com/grpc/grpc/issues/12886.\r\n\r\nPassing GPR_TIMESPAN to C core with a semantics of \"timeout\" has worked in the past, and it seems it stopped working after https://github.com/grpc/grpc/pull/12677.\r\n\r\nNot urgent, but might be worth fixing in the future.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/a9fc084ec1be4ab8f2071227d9affb77f713e0db", "message": "Merge pull request #14117 from jtattermusch/resultstore_cpp_results\n\nMake c++ reports display correctly in ResultStore"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/56427c01637a855a6f8c7c11c8222329088562b3", "message": "Merge pull request #14118 from grpc/v1.9.x\n\nUpmerge changes from v1.9.x"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/41d220eb4f3427ddd9865a19ee6ab2c01c8ef5ea", "message": "make c++ reports display correctly in resultstore"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c14997be8e66f5cc8910092f51ffe0ffb74eec80", "message": "fix leak caused by csharp context pooling"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/eb88bf03af7d4d441b0d6ef8127193dddefa9006", "message": "dispose requestCallContextPool on environment shutdown"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/a35899b769a7d40b0b7d1926cbaad872c8bcf3f1", "message": "Merge pull request #14072 from jtattermusch/fix_cmake_win_distrib_test\n\nFix cmake windows C++ distrib test"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/fb227b0968e668cf9a3b7b6e1e2f5445f29eafb0", "message": "improve comments on find_package(Protobuf)"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/dec076c4abe7bd5518abab7a8da4e624c49ec655", "message": "fix protobuf usage in the example"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/1e9543deb9c4f8de31dd0dce4dcc429aaa53530d", "message": "fix finding openssl"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/1c42023ae60abf0a913aa268ef1b8818b0675300", "message": "fix distribtest typo"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d4031c3b934aae20cac538124007dc3eeb3a5bff", "message": "Merge pull request #14069 from jtattermusch/macro_param_warning\n\nfix \"not enough actual parameters for macro\" warning"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b5089297dbe528c773233ed1a7bb429e880f4d5a", "message": "fix \"not enough actual parameters for macro\" warning"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/5eb6148ab4e95ea472af2033bd976317992fe18f", "message": "Merge pull request #14065 from jtattermusch/distribtests_standalone_fixup\n\ndistribtests_standalone: fixing nits"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/6a365ccc6d1557b131c86631965c448b01b1f724", "message": "Merge pull request #14046 from jtattermusch/try_fixing_dualstack_socket_test\n\nTry avoid deadline_exceeded failure in dualstack_socket_test"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/631ccc2c798a668cc3bc396dcd849cbac37b833c", "message": "distribtests_standalone: fixing nits"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/143fb810cc4c449f1faba2ba9710524627cd1793", "message": "Merge pull request #14005 from jtattermusch/fix_win_alarm_test\n\nFix alarm test flake on windows"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0f5f46109b995aab3bb5f8ffeadd96547de7e100", "message": "use grpc_timeout_milliseconds_to_deadline directly"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/7dddc2365538168331e848723106657d56e22458", "message": "Merge pull request #14047 from jtattermusch/distribtests_add_standalone\n\nAdd config files for standalone distribtests (C++ for now)."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/52e560a01eba64abd3efec8e8622ae90d5f3d03d", "message": "add standalone distribtests"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/816e8f7f43aff2f3ccba5c998587e92005645236", "message": "try avoid deadline_exceeded failure in dualstack_socket_test"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/a6ff754b93658e03e4a89b42855b8c74496b672e", "message": "fix alarm test flake on windows"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/323028304b6f864b1d0a3fed9acefd1c9374e5bd", "message": "Merge pull request #14028 from jtattermusch/cmake_include_improvements\n\ncmake build cleanup"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e8f692528aca85b98f6adf8ed1058a5523b32d5c", "message": "Merge pull request #14025 from jtattermusch/csharp_plugin_error_msg\n\nC#: Better log message when auth interceptor throws"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e5b7ddd59c9a8b7a33820197abb45e12e2b65daf", "message": "Merge pull request #13363 from grpc/revert-13346-revert-13322-oauth_failure\n\nRevert \"Revert \"Switching from UNAUTHENTICATED to UNAVAILABLE for auth metadata failure\"\""}, {"url": "https://api.github.com/repos/grpc/grpc/commits/41e58b4b1ac7e2934299e3855a1b1c5571282690", "message": "regenerate"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/586f719898486303c0c990919bfba05a3e127a16", "message": "cleanup cmake include directories"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/a41e997a8785243ee3c1e91c5dcfb73d698ac48d", "message": "cmake output to gitignore"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/4bba3187cbbeec368ecd1625359ab51834f4bf45", "message": "better log message when auth interceptor throws"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/81c0e389dfa669ae8a089826ba24c38b2264b992", "message": "Merge pull request #14004 from jtattermusch/gpr_sync_windows\n\nFix gpr_sync_test timing on Windows."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/86c17bfc7d5a191e3738038028c1cfd7b3c181cf", "message": "start with fewer iterations"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c9ec2c0888271491eaf425721a72736392f85945", "message": "Revert \"Stop using std::thread in C++ library since it can trigger exceptions\""}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b0b4555f4ca720e626f42855f2257bf598e1bf74", "message": "Merge pull request #13967 from grpc/vjpai-patch-1\n\nMention requirements for regenerating projects"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/148700a8ea4b1a6d7ac82f1ad504c4e1eaa4e263", "message": "windows needs fflush after fprintf"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/4855b226a8c20dcc77e70d2e4ce5dcbac79faf29", "message": "Merge pull request #13957 from jtattermusch/connectivity_watcher_wo_exceptions\n\nDo not throw and eat exceptions in C# connectivity watcher"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/2eb22fd67d73a210c1f41d79efcfe52285ccb2ec", "message": "Merge pull request #13964 from jtattermusch/reintroduce_13700\n\nReintroduce check_sources_and_headers optimization"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0b62b2f6ed7c068d205f82a31adf3e29dbf02c2d", "message": "reintroduce check_sources_and_headers optimization"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/7b0bca2efd6356e4d62391de2bf4698cf1dc0211", "message": "do not throw and eat exceptions in C# connectivity watcher"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ff38af7fcfd57b4c65fb8cdc436bd25bbdb0b0ce", "message": "Merge pull request #13927 from jtattermusch/csharp_sourcelink_prepare\n\nC#: Prepare for SourceLink support"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ebebb02d3f3a2fb801e90c7f964578568efe2877", "message": "try embedding sources for a start"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/cb0486adf810d991d712e26f65ac67b41b505eb4", "message": "prepare for SourceLink support"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/fb2eb5279e3979f959163261f7d25543d078e869", "message": "Merge pull request #13830 from jtattermusch/cmake_cleanup\n\nSimplify top level CMakeLists.txt"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14114", "title": " 1.9.0-pre1 is now 1.9.0-pre2", "body": "pre2 will contain https://github.com/grpc/grpc/pull/14113.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13904", "title": "Introduce cmake externalproject_add", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13772", "title": "Try fixing Grpc.Core.targets to avoid include dependencies in dependent packages", "body": "Fixes https://github.com/grpc/grpc/issues/12926.\r\n\r\nThis change is potentially dangerous because I think there was a reason why we used `Content` initially:\r\n- let's have a solution with project A that has a dependency on Grpc.Core nuget.  We also have a project B (e.g. an executable) that depends on project A, but doesn't explicitly add Grpc.Core dependency. The Grpc.Core.targets are supposed to make sure that the native libraries are copied to output all projects that transitively depend on Grpc.Core (in our case that's project B). Otherwise, when running B.exe, the native libraries won't be available in the output directory as expected and the application will crash at startup.\r\n- this is all for .NET4.5 and the \"old style\" .csproj projects. In dotnet CLI, things work without relying on Grpc.Core.targets.\r\n\r\nBecause of the reasons above, we need to check carefully if changing Content -> None won't break our users.\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13440", "title": "Avoid C# GC when deserializing large messages", "body": "Progress towards fixing https://github.com/grpc/grpc/issues/13236.\r\n\r\n- add new SegmentDeserializer field into marshaller (that takes ArraySegment instead of byte[]). the backward compatibility is maintained as the new deserializer fallbacks to older byte[] (with some overhead though) based serializer if not defined explicitly\r\n- when deserializing messages, don't always allocate a new byte array, but instead reuse a thread-local byte array that is allocated for that purpose. That byte array is always-growing, but it's a weak reference, so the runtime can free the memory if it grows too big and memory is needed (the expectation is users shouldn't really use messages larger >X MB or so at that makes little practical sense - they could always use streaming).\r\n- new ParseFrom(buffer, offset, count) API from Protobuf 3.5+ is used to allow parsing messages from byte array that is potentially larger than the message size.  Users would need to regenerate their .proto generate code to benefit from this optimization.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13416", "title": "fix some C# interop_matrix v1.0.1 tests", "body": "I locally patched the v1.0.1 interop images and pushed to GCR. Now both csharp and csharpcoreclr build fine.\r\ncsharpcoreclr tests are passing, I'm still getting some errors for csharp, but as far as I can tell, they are also present when building C# v1.0.1 from scratch manually. (so they don't have to do with the interop_matrix framework).\r\n\r\n```\r\nUnhandled Exception:\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: source\r\n  at System.Linq.Enumerable.Select[TSource,TResult] (System.Collections.Generic.IEnumerable`1[T] source, System.Func`3[T1,T2,TResult] selector) [0x0000d] in <521f3fe476f34ea88748e97b3b984d05>:0 \r\n  at CommandLine.Core.Tokenizer.ExplodeOptionList (RailwaySharp.ErrorHandling.Result`2[TSuccess,TMessage] tokenizerResult, System.Func`2[T,TResult] optionSequenceWithSeparatorLookup) [0x00014] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Core.Tokenizer+<>c__DisplayClass5_0.<ConfigureTokenizer>b__0 (System.Collections.Generic.IEnumerable`1[T] arguments, System.Collections.Generic.IEnumerable`1[T] optionSpecs) [0x00083] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Parser.Tokenize (System.Collections.Generic.IEnumerable`1[T] arguments, System.Collections.Generic.IEnumerable`1[T] optionSpecs, CommandLine.ParserSettings settings) [0x00017] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Parser.<ParseArguments>b__11_0[T] (System.Collections.Generic.IEnumerable`1[T] arguments, System.Collections.Generic.IEnumerable`1[T] optionSpecs) [0x00000] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Core.InstanceBuilder+<>c__DisplayClass0_0`1[T].<Build>b__7 () [0x00005] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Core.InstanceBuilder.Build[T] (CSharpx.Maybe`1[T] factory, System.Func`3[T1,T2,TResult] tokenizer, System.Collections.Generic.IEnumerable`1[T] arguments, System.StringComparer nameComparer, System.Boolean ignoreValueCase, System.Globalization.CultureInfo parsingCulture, System.Collections.Generic.IEnumerable`1[T] nonFatalErrors) [0x0015a] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Parser.ParseArguments[T] (System.Collections.Generic.IEnumerable`1[T] args) [0x00075] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at Grpc.IntegrationTesting.InteropClient.Run (System.String[] args) [0x00006] in <7769ed40adc44dc3a2895bd00dd0ea48>:0 \r\n  at Grpc.IntegrationTesting.Client.Program.Main (System.String[] args) [0x00001] in <53e672eeb86441af8251ff4286f59d21>:0 \r\n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentNullException: Value cannot be null.\r\nParameter name: source\r\n  at System.Linq.Enumerable.Select[TSource,TResult] (System.Collections.Generic.IEnumerable`1[T] source, System.Func`3[T1,T2,TResult] selector) [0x0000d] in <521f3fe476f34ea88748e97b3b984d05>:0 \r\n  at CommandLine.Core.Tokenizer.ExplodeOptionList (RailwaySharp.ErrorHandling.Result`2[TSuccess,TMessage] tokenizerResult, System.Func`2[T,TResult] optionSequenceWithSeparatorLookup) [0x00014] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Core.Tokenizer+<>c__DisplayClass5_0.<ConfigureTokenizer>b__0 (System.Collections.Generic.IEnumerable`1[T] arguments, System.Collections.Generic.IEnumerable`1[T] optionSpecs) [0x00083] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Parser.Tokenize (System.Collections.Generic.IEnumerable`1[T] arguments, System.Collections.Generic.IEnumerable`1[T] optionSpecs, CommandLine.ParserSettings settings) [0x00017] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Parser.<ParseArguments>b__11_0[T] (System.Collections.Generic.IEnumerable`1[T] arguments, System.Collections.Generic.IEnumerable`1[T] optionSpecs) [0x00000] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Core.InstanceBuilder+<>c__DisplayClass0_0`1[T].<Build>b__7 () [0x00005] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Core.InstanceBuilder.Build[T] (CSharpx.Maybe`1[T] factory, System.Func`3[T1,T2,TResult] tokenizer, System.Collections.Generic.IEnumerable`1[T] arguments, System.StringComparer nameComparer, System.Boolean ignoreValueCase, System.Globalization.CultureInfo parsingCulture, System.Collections.Generic.IEnumerable`1[T] nonFatalErrors) [0x0015a] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at CommandLine.Parser.ParseArguments[T] (System.Collections.Generic.IEnumerable`1[T] args) [0x00075] in <3a51da4303d24d9087548524f226a533>:0 \r\n  at Grpc.IntegrationTesting.InteropClient.Run (System.String[] args) [0x00006] in <7769ed40adc44dc3a2895bd00dd0ea48>:0 \r\n  at Grpc.IntegrationTesting.Client.Program.Main (System.String[] args) [0x00001] in <53e672eeb86441af8251ff4286f59d21>:0 \r\nFAILED: csharp__csharp_v1.0.1:csharp:grpc-test4:client_streaming [ret=1, pid=196278, time=1.0sec]\r\n```\r\n\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12266", "title": "DO NOT MERGE: Enable C++ tests on Windows", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/9357", "title": "Mingw compilation fixes", "body": "-- introduce print_format.h  that  defines GPR_PRIuPTR (and similar) macros to enable printing from C++ on Windows (where mingw's inttypes.h is broken).\r\n\r\n-- several other fixes\r\n\r\nNewly compiling targets:\r\n-- interop_client\r\n-- grpc_cli\r\n-- some C++ tests\r\n-- very close to successfully building qps_worker\r\n\r\n......", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/6842", "title": "Allow custom server handler mapping for C#.", "body": "Adds FallbackHandlerRegistry  property to Server.  If a method is not found in the list of registered services and fallback handler registry is set, the registry will be used to lookup handler based on the full method name and host.\nThat allows:\n-- choosing a handler for a call dynamically\n-- dispatching server-side call based on the \"host\" property of a server-side call (previously not possible)\n\n-- also refactoring and cleanup of ServerCallHandler.cs code.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/5290", "title": "Sketch of Mock API for AsyncUnaryCall", "body": "I've sketched how the public API for mocking client stub interface could look like and added a usage example for \"MathService\".  This still needs some thought in terms of what to do for streaming call, but I wanted to hear some early feedback from you. Would such API serve your purposes well?\n\nI tried to provide some simple wrapping around AsyncUnaryCall constructor, as its API is fairly low level and exposing it could lead to confusion and reimplementing the same boillerplate by everyone who would use it for testing.\n\n@jskeet  @chrisdunelm \n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/163679197", "body": "Seem outdated.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/163679197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72704449", "body": "First API review meeting took place on 2/2/2015\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72704449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/92419553", "body": "Hi,\n\nfor some reason, I doesn't seem your comment was added to the issue,\nstrange.\n\nCurrently we have a pre-alpha version of C# gRPC API and you can do both\nunary and streaming calls using C#. We support both client and server for\nC#, but there is still some things that are missing before gRPC C# is fully\nusable.\n\nOn Sat, Apr 11, 2015 at 6:01 AM, Kevin Avignon notifications@github.com\nwrote:\n\n> Did someone start to work on this ?\n> If I get it right, I'd need to understand the architecture of grpc and try\n> to make it work for C# ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/123#issuecomment-91839803.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/92419553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/97838833", "body": "#1422 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/97838833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/97843579", "body": "Closing this because it turns out to be too high-level. Progress will be tracked by issues with smaller granularity.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/97843579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/74313551", "body": "This has been partially done and this task is too high level to allow effective tracking, so closing this.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/74313551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72705373", "body": "I have a prototype that should work fine. It will be checked in soon along with initial gRPC C# implementation.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72705373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/97843193", "body": "Nico has a jenkins windows instance running on GCE.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/97843193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/139670741", "body": "@ctiller , should we polish this for GA or did we effectively got stuck with this forever because we made the API stable?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/139670741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72110955", "body": "ctiller, can you please review the grpc_csharp_ext.c  file?\nI will assign a reviewer for the rest of the code (but you're welcome to take a look as well).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72110955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72112179", "body": "Sure, thanks for valuable comments!\n\nOn Thu, Jan 29, 2015 at 1:51 PM, kennetatgoogle notifications@github.com\nwrote:\n\n> I'm going to bow-out of this CR. The scope of the CL is bigger than I have\n> time for right now.\n> \n> On Thu, Jan 29, 2015 at 1:47 PM, Jan Tattermusch notifications@github.com\n> \n> wrote:\n> \n> > ctiller, can you please review the grpc_csharp_ext.c file?\n> > I will assign a reviewer for the rest of the code (but you're welcome to\n> > take a look as well).\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/grpc/pull/247#issuecomment-72110955.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/247#issuecomment-72111520.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72112179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72704893", "body": "Collected initial feedback from kennetatgoogle and also decided to introduce C extension library for C# and implement fully asynchronous API (with a threadpool to poll completion queue).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72704893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72704273", "body": "Meeting took place on 2/2/2015, design discussions document now reflects the current state.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72704273/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72110955", "body": "ctiller, can you please review the grpc_csharp_ext.c  file?\nI will assign a reviewer for the rest of the code (but you're welcome to take a look as well).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72110955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72112179", "body": "Sure, thanks for valuable comments!\n\nOn Thu, Jan 29, 2015 at 1:51 PM, kennetatgoogle notifications@github.com\nwrote:\n\n> I'm going to bow-out of this CR. The scope of the CL is bigger than I have\n> time for right now.\n> \n> On Thu, Jan 29, 2015 at 1:47 PM, Jan Tattermusch notifications@github.com\n> \n> wrote:\n> \n> > ctiller, can you please review the grpc_csharp_ext.c file?\n> > I will assign a reviewer for the rest of the code (but you're welcome to\n> > take a look as well).\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/grpc/pull/247#issuecomment-72110955.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/247#issuecomment-72111520.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72112179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72763893", "body": "Please ignore this pull request, I will have newer and cleaner version of C# code to push soon.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72763893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73130338", "body": "closes #410 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73130338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/14540563", "body": "typo.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14540563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/20433973", "body": "(btw, there's a tools/distrib/clang_format_code.sh formatting script - but you need linux to run it).\r\nI needed to fix the formatting because we have a pre-submit check for correct formatting.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20433973/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21984077", "body": "Xamarin is currently not supported, one day it might be: https://github.com/grpc/grpc/issues/1620.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21984077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23005610", "body": "Ah, it seems that this only works if you are using nested-build protobuf. If you are using installed protobuf (once of the two find_package modes added recently), it seems to break.\r\nWe will need better tests for cmake to prevent breakages.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23005610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23429358", "body": "On Thu, Jan 22, 2015 at 5:25 PM, Nicolas Noble notifications@github.com\nwrote:\n\n> In tools/buildgen/plugins/generate_vsprojects.py\n> https://github.com/google/grpc/pull/40#discussion_r23426008:\n> \n> > -  We want to help the work of the visual studio generators.\n> >   +\n> > -  \"\"\"\n> >   +\n> > -  libs = dictionary.get('libs', [])\n> > -  targets = dictionary.get('targets', [])\n> >   +\n> > -  for lib in libs:\n> > -    lib['is_library'] = True\n> > -  for target in targets:\n> > -    target['is_library'] = False\n> >   +\n> > -  projects = []\n> > -  projects.extend(libs)\n> > -  projects.extend(targets)\n> > -  projects = [project for project in projects if project.get('vs_project_guid', None)]\n> \n> Figured it out actually. Tests don't have a guid because we don't want to\n> create a project file for them.\n\nOh, yes that's the point. Sorry I didn't react to this right away.\n\n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/40/files#r23426008.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23429358/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23398953", "body": "no newline at the end of the file\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23398953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23399335", "body": "indent off\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23399335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "vjpai": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14063", "title": "C++-ize inproc transport", "body": "### Should this be an issue in the gRPC issue tracker?\r\n \r\nYes\r\n\r\n### What version of gRPC and what language are you using?\r\n \r\nCore, C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nN/A\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\n N/A\r\n\r\n### What did you do?\r\n\r\nRead the code for in-process transport\r\n \r\n### What did you expect to see?\r\n \r\nClean idiomatic C++ code \r\n\r\n### What did you see instead?\r\n \r\nC-style code\r\n\r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14063/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/14062", "title": "C++-ize core transport API", "body": "### Should this be an issue in the gRPC issue tracker?\r\n \r\nYes\r\n\r\n### What version of gRPC and what language are you using?\r\n \r\nCore, C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nN/A\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\n N/A\r\n\r\n### What did you do?\r\n\r\nRead the code in `src/core/lib/transport`\r\n \r\n### What did you expect to see?\r\n \r\nIdiomatic C++ code \r\n\r\n### What did you see instead?\r\n \r\nC-style code\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14062/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/14061", "title": "C++-ize slice_buffer", "body": "### Should this be an issue in the gRPC issue tracker?\r\n \r\nYes\r\n\r\n### What version of gRPC and what language are you using?\r\n \r\nCore, C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nN/A\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\n N/A\r\n\r\n### What did you do?\r\n\r\nRead the code for grpc_slice_buffer\r\n \r\n### What did you expect to see?\r\n \r\nClean idiomatic C++ code \r\n\r\n### What did you see instead?\r\n \r\nC-style code with manually-inlined vectors\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/14059", "title": "C++-ize slice", "body": "### Should this be an issue in the gRPC issue tracker?\r\n \r\nYes\r\n\r\n### What version of gRPC and what language are you using?\r\n \r\nCore, C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nN/A\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\n N/A\r\n\r\n### What did you do?\r\n\r\nRead the code for grpc_slice\r\n \r\n### What did you expect to see?\r\n \r\nClean idiomatic C++ code \r\n\r\n### What did you see instead?\r\n \r\nC-style code with manually-inlined vectors\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/14016", "title": "Convert core end2end tests to idiomatic C++ using gtest", "body": " ### Should this be an issue in the gRPC issue tracker?\r\n \r\nYes\r\n \r\n### What version of gRPC and what language are you using?\r\n\r\nMaster, C++ \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\n N/A\r\n\r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\nN/A\r\n \r\n### What did you do?\r\n\r\nRead the code for core end2end tests\r\n \r\n### What did you expect to see?\r\n \r\nUse of gtest, idiomatic C++ code\r\n \r\n### What did you see instead?\r\n \r\nManually-created test framework with lots of extra scripts and code that uses C style\r\n\r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13761", "title": "Enable build of grpc++ using make and without building c-ares", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\n \r\nYes\r\n\r\n### What version of gRPC and what language are you using?\r\n \r\nmaster, C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nAn embedded system (sorry, don't know the details)\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\nAn embedded build system that uses make rather than bazel\r\n \r\n### What did you do?\r\n\r\nTried to build\r\n \r\n### What did you expect to see?\r\n \r\nSuccessful build\r\n\r\n### What did you see instead?\r\n \r\nc-ares won't even build in this platform and this is a problem since the Makefile-based build depends on c-ares even if it doesn't actually get used. This is contract to the bazel BUILD for which cares can be stubbed out as a dummy dependence and the grpc_no_ares config_setting will suppress the use of c-ares in the actual code. It would be nice to be able to build a library version that didn't depend on or use c-ares.\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13761/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13706", "title": "C++ exception safety", "body": "Tracking issue to determine whether or not the gRPC core/C++ layer is safe wrt exceptions thrown in application code. Although it is a [Google standard not to throw exceptions](https://google.github.io/styleguide/cppguide.html#Exceptions), we do need to make sure that gRPC doesn't interfere with application writers use of exceptions. We also need to make sure that we don't cause exceptions indirectly\r\n\r\nImplications of the above:\r\n1. Don't call libraries that can throw exceptions (e.g., `std::thread`)\r\n    - special case for `new` where an exception is essentially unrecoverable anyway\r\n1. Check places where something must be called before calling a destructor and attempt to remove those\r\n    - e.g., a ServerCompletionQueue must be explicitly drained now before its destructor is called\r\n1. If we call an application-level callback that is not in our control, `catch` any exceptions that it might throw so that we can recover safely\r\n    - e.g., if a service method handlers throws an exception, gRPC C++ should just return with a bad status rather than failing", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13686", "title": "Investigate features required for gRPC to conveniently support serverless", "body": "This is a discussion request and tracking issue. gRPC+proto could be a powerful method for supporting serverless models (as requested in, for example, fission/fission#250). That said, there are a few places where serverless needs features that are not currently part of gRPC APIs (such as dynamic registration and deregistration of services). A path around this used in, for example, OpenLambda is to use gRPC generic.\r\n\r\nPerhaps there is no strong need to provide further support. Do others consider this a topic worth discussing?\r\n\r\n\r\n\r\n ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/73e74688d686c2dc4b46a7747f333f0720b0c27b", "message": "Merge pull request #13993 from vjpai/buildown\n\nAdd me to build system owners"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/69d3e0984da394d1ea06edbe26de76d124c6eaf3", "message": "Merge pull request #13815 from vjpai/catcher\n\nC++: Catch exceptions from sync method handlers rather than crashing server"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0ee6c7343f0c560209990231d20106ffe87985ca", "message": "Merge pull request #13289 from ncteisen/flow-control-part4\n\nVirtual Flow Control"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/aebb45ef90ae5af2c11bc3a71cd1b2dea0b7d9b7", "message": "Merge pull request #14003 from grpc/revert-13697-nostdthread\n\nRevert \"Stop using std::thread in C++ library since it can trigger exceptions\""}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ae56b945e7e750f2dd2cc5ac014cb9f9cecb8c75", "message": "Merge pull request #13982 from vjpai/mkdir\n\nAvoid link warnings: remove extraneous directories from -L and change mkdir order"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/4db3b7413d35e8d4c75dc04c90338dd2d2557bbe", "message": "Merge pull request #13697 from vjpai/nostdthread\n\nStop using std::thread in C++ library since it can trigger exceptions"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/294e996a8d6fb6603134d2edb3b279eea6dcd503", "message": "Add me to build system owners"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/262d59e07c6243bce1357091472e90060e9aa78d", "message": "Update CONTRIBUTING.md\n\nUse 2 white spaces after period for consistency with rest of document"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/7b610948a9c377df8cc503d50180acd97ab8adbe", "message": "Merge branch 'master' into vjpai-patch-1"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/52338fb9eeec74da8bf10078de2f2b4b635412f2", "message": "Avoid linker warnings by removing extraneous directories from -L and making at right time"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f87d9b233f5e1d506b6e5112e9df0b546764ad17", "message": "Merge pull request #13977 from vjpai/subsurface\n\nRemove exec_ctx_fwd.h from surface public headers"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/1d91362f8124751ecfc1929df207006cabb41dae", "message": "exec_ctx_fwd.h should never have been in public headers"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b4b0ac704984be21d128924433cbe9bcd568ef83", "message": "Resolve leak by freeing request payload if resources exhausted"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/babd579449ab72fb0c21f15290ffc4832829db7d", "message": "Mention requirements for regenerating projects"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/fd4884a768a03b8c459b02e7751c072f6efd147c", "message": "Address review comments"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/92e267ec502d018eae66f04faac0f5d57eadf572", "message": "Add needed header"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/75005775938c8844d42946f92b052fd1be79a0a9", "message": "Address review feedback; stop using result of 'what'"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9d2d84382e317e5c8a149c497bfe9408af12b038", "message": "Add portability tests on Linux to make sure that build with -fno-exceptions\ncontinues to work"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b425fc79da44da1641b03cd6c35cf13b542c8e07", "message": "Comment on cpp guard"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ab0065478419c785e21012fbbeb2c28b5a37d3b3", "message": "Tag new #else and #endif blocks with comments"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/37abc4ae7b295651d739bdc1f9071af49d4831b8", "message": "Typo"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9809ce38e9f79b4e9a0b1ec1c076cce0beee1e98", "message": "Use appropriate preprocessor guards to allow building without exceptions"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9427eabf3bf9f1de14a3fabdc72e090dac7601e1", "message": "uses_polling shouldn't be false for this test"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8fc3715a17a1b764143d0b37652a07a45d1cdf01", "message": "Catch exceptions from sync method handlers without crashing server"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e3756b9cf1ee583688bbef3795900422cc1451d5", "message": "Merge pull request #13952 from vjpai/functional\n\nNeed to include functional to use std::bind"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9423c274cdfc1e9e6869cd8b64ba86aa985f902d", "message": "Need to include functional to use std::bind"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/5dd32268be62114e8a7c81d60c0dc2633fb83081", "message": "Switch C++ sync server to use gpr_thd rather than std::thread and provide resource exhaustion mechanism"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0d3314b5370b129c18d228a825f5311ad9c88642", "message": "Merge pull request #13929 from vjpai/tls-bazel2\n\nWhen building with bazel on a Mac, workaround bazelbuild/bazel#4341"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/def31f952700aad3a9da280c003ebfb3e8e14087", "message": "Merge pull request #13900 from vjpai/odr\n\nWrap duplicated-name definitions in anonymous namespace (except for iomgr)"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/91bab371297b1e53491548bbd9f3588dea93374d", "message": "When building with bazel on a Mac, workaround bazelbuild/bazel#4341"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ae3e857eb60e9f6d195a73b7c576f065a2152780", "message": "Revert unneeded changes"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/832bd00163998c143ae7123cc814183febf17337", "message": "Merge pull request #13874 from vjpai/allow_no_message\n\nC++: Allow no message on sync unary call, just like async"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/849bd73c4fe28ec880d111522fce05cda7126c93", "message": "Wrap duplicated-name definitions in anonymous namespace"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/63392f682e21543099926251b642cdcd0be2a17f", "message": "Merge pull request #13895 from vjpai/missing_prefix\n\nFix prefix in struct names"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b78df7ab779d53beb25f46099c467855f009924f", "message": "Fix struct names"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d5730c6c22f98dfb8e023c38f320a7d6d646b792", "message": "Allow no message on sync unary call, just like async"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b04499e5f00660b5818c4a3ca2de1afaf794fee1", "message": "Merge pull request #13863 from vjpai/fork\n\nFix public hdrs in 1.8.x (backported bugfix)"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/31789c46dfb52f5b2d81c20521a4c93177cdc7a3", "message": "fix public hdrs in 1.8.x"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14123", "title": "Benchmark grpc_core::MakeRefCounted vs std::allocate_shared", "body": "On my Mac:\r\n\r\n```\r\n$ bazel build -c opt //test/cpp/microbenchmarks:bm_refcount\r\n$ ./bazel-bin/test/cpp/microbenchmarks/bm_refcount\r\nRun on (8 X 2200 MHz CPU s)\r\n2018-01-22 13:00:44\r\n\r\n// grpc_core::MakeRefCounted\r\nBM_RefCountedAllocateSmall          93 ns\r\nBM_RefCountedAllocateMedium        135 ns\r\nBM_RefCountedAllocateLarge      159937 ns\r\n\r\n// std::allocate_shared\r\nBM_SharedAllocateSmall              96 ns\r\nBM_SharedAllocateMedium            136 ns\r\nBM_SharedAllocateLarge          173139 ns\r\n```\r\n\r\nI'll add more results as I get them (or y'all can feel free to add them)\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14106", "title": "C++ API review", "body": "If you liked internalization, you'll love C++ API review. The purpose of this PR is to clean up the use of breakable core structs from C++ public API. This has previously been done for the more common classes and features but we need to extend this to the less commonly-used classes as well.\r\n\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14015", "title": "Remove alarm from core, implement in C++ layer only", "body": "grpc_alarm was not exposed by the API of any wrapped languages other than C++ . It is being removed from core and implemented only at the C++ layer.\r\n\r\nThis PR allows grpc::Alarm to directly use the core timer library, and it is a step in the de-wrapping of the gRPC C++ API.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14010", "title": "Fix-forward: Stop using std::thread in C++ library since it can trigger exceptions", "body": "Reverts grpc/grpc#14003\r\nWill figure out how to deal with the races exposed the last time.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14009", "title": "Potential termination fixes for qps_test", "body": "Continues #11778 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14008", "title": "Robustness work for qps_test", "body": "Continues #13788 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14007", "title": "Simplify (a little) qps_test async server code", "body": "Continues #11230 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13990", "title": "ClosureRef proposal", "body": "Continues PR #13068 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13989", "title": "Function family implementation", "body": "Continues from PR #13083 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13988", "title": "LTO efforts", "body": "Continues from PR #9951 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13987", "title": "FunctionView implementation", "body": "Continues from PR #13374 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13069", "title": "QPS test won't stream from server until first mark", "body": "This is an attempt to fix #12510 given what we know about how it arises. It seems to be working at my desktop but want to send it for full tests.\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10929", "title": "Enable use of short-stream optimizations in qps tests", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/125335608", "body": "Numerous refactorings and PRs in the past few months have addressed this issue. We need to keep tracking this on an ongoing basis.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/125335608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71741973", "body": "It looks like VIM also uses other extensions like swo and swn if the swp is already in use - do we see this in practice? http://vimdoc.sourceforge.net/htmldoc/recover.html\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71741973/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71742329", "body": "Also, Emacs recovery files are of the form #xxx# , in addition to the familiar tilde files. Want to look at those also?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71742329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71954108", "body": "Ok, any interest in dealing with emacs recovery file #xxx# ?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71954108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/154213348", "body": "Closing....\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/154213348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72905144", "body": "If gpr_timespec is no longer a variant of struct timespec, should the change just be limited to the posix side, or should it be all pervasive? I feel like the latter, which should move its definition out of the _posix.h files.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72905144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72921686", "body": "Please do not merge this, actually. I did this in a horrendous way. I am going to clean it up.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72921686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72924321", "body": "Ok, now Nico explained to me what had happened. Please feel free to merge this if you wish.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72924321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73082951", "body": "Ok, I have reviewed this and am happy with its correct functionality. Looking forward to benchmarking it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73082951/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73084652", "body": "Otherwise everything else about this looks good.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73084652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/11602019", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11602019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12019045", "body": "LGTM on this commit. As a further optimization opportunity, it seems that mu_call is not always needed anymore; for example, I think that destroy_call_elem should only grab mu_call if the call is still on PENDING_START (which wouldn't be the case for calls that actually got processed to completion).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12019045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12021184", "body": "LGTM on this commit.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12021184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12065289", "body": "LGTM on this commit.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12065289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12477439", "body": "I'm not exactly understanding the data flow here that prevents this from having a logical race. Could the server shutdown flag possibly be set just after this load check and before this function returns? If so, would that be a problem? If it's not a problem (e.g., because the flag only gets set when there is guaranteed to be another event or something like that), then could you document that in the code?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12477439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12477441", "body": "This commit LGTM.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12477441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12477444", "body": "Please see my comment on the related commit in this PR regarding how we know that that there's no race on the shutdown_flag, or if it matters.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12477444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12800763", "body": "ugly comment paragraph; maybe clang-format?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12800763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/13798896", "body": "LGTM on this commit. It makes sense to me. Will revisit after parent PR is merged and after the conflicts here are resolved.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/13798896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/15254943", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/15254943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/16074705", "body": "This was an unsolicted const. You're welcome.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/16074705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/16074708", "body": "Unsolicited const.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/16074708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/16367081", "body": "I see the purpose is to delete the plucker before processing alarm-related stuff just as you would in the case of a timeout. So I think that this makes sense, but it's still failing on timing-related tests.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/16367081/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/17890772", "body": "Yes, I should have explicitly stated this.\nMore changes are coming soon as a new checkin has broken the rules....\n\nOn Thu, Jun 16, 2016 at 12:16 AM David G. Quintas notifications@github.com\nwrote:\n\n> Adding to your description, \"A pointer that is left without explicit\n> initialization automatically\n> gets nullptr anyway\"... is only true when the variables have static\n> linkage, which in this case do, but not true in general (this is 99%\n> statement, 1% question, because your omission has made me doubt).\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/grpc/grpc/commit/4425828d1d8a7ac882e34d76a2f26e47e8d1b22f#commitcomment-17890591,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AIdEkClFYnXCYiYdTvRnTnAXngilV9U9ks5qMPhfgaJpZM4I3Fxo\n> .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17890772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/17890936", "body": "np, I made the changes in the most recent round of commits\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17890936/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/18893668", "body": "What is the intended effect here? I believe this has no effect, as this is the destructor. If there's any use after this point it indicates a bigger problem.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/18893668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19458499", "body": "This commit LGTM.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19458499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19458524", "body": "Sorry, this commit will break portability with gcc-4.4 because of the use of a lambda capture . We have still not allowed that.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19458524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19458536", "body": "That said, this is a great idea and we should do this on all the CQ shutdowns as well.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19458536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19458560", "body": "One more thing: there is a PR #7797 that works on the server-side ending of the benchmarks. Maybe this should go there? There's the broader issue that the destructor shouldn't be invoked while we're still multi-threaded.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19458560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19459123", "body": "This commit LGTM. This PR is more important to get in than #7797 so I'll adjust that one afterward.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19459123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21400138", "body": "Whoa. LGTM.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21400138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "euroelessar": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14058", "title": "Reduce number of copies in ssl transport layer", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\n \r\nCreate new issues for bugs and feature requests. An issue needs to be actionable. General gRPC discussions and usage questions belong to:\r\n- [grpc.io mailing list](https://groups.google.com/forum/#!forum/grpc-io)\r\n- [StackOverflow, with `grpc` tag](http://stackoverflow.com/questions/tagged/grpc)\r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\n \r\n1.8.4, grpc-core (proprietary binding)\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nLinux, Ubuntu 16.04\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\ngcc-4.9\r\n \r\n### What did you do?\r\n\r\nRun a load test with the following setup (and other way around):\r\n1. Use grpc with TLS encryption enabled\r\n2. Single completion queue on both server and client\r\n3. Server and client are located on different servers in datacenter\r\n4. Client concurrently sends 16MB requests to server in a loop\r\n5. Server responds with empty body\r\n \r\n### What did you expect to see?\r\n \r\nBoth server and client spend most of their time in tcp stack, transferring data to/from tcp stack and doing actual encryption. Effectively setup should be able to handle ~600-800 MBps per cpu core. (Non-tls grpc handles ~900 MBps per cpu core on the same hardware under the same load conditions).\r\n \r\n### What did you see instead?\r\n\r\nServer spends 80% of cpu time inside BIO_read (based on pprof) and throughput is bounded by 50 MBps (~20 times performance degradation compared to disabled encryption).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\nApparently ssl_transport_security [uses BIO_s_mem](https://github.com/grpc/grpc/blob/32d077e7e18ea0164aaa78cf350a00f429cbadeb/src/core/tsi/ssl_transport_security.cc#L1110-L1111) which has potentially O(n^2) runtime complexity for reading all data from buffer by using BIO_read operation.\r\nIt can be explained by the fact that read is implemented as:\r\n1. read prefix from buffer\r\n2. move leftover to the beginning of buffer\r\n3. if buffer is not empty goto 1\r\n\r\nIt can be mitigated by using BIO_pair instead as it uses ring buffer and therefore upper bounds number of performed copies. It allows to achieve throughput of 300 MBps for the described above test.\r\n\r\nMore gains can be achieved by implementing zero copy protector interface to pass slices to boringssl directly using custom BIO implementation (similar to chrome's approach).", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14060", "title": "[ssl] Use ring buffer in ssl transport layer", "body": "BIO_pair is implemented on top ring buffer which is more efficient compared to current BIO_mem approach.\r\n\r\nSee #14058", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sreecha": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14056", "title": "Allow GRPC_ENABLE_FORK_SUPPORT environment variable to be set to 'false'", "body": "Currently we could only set the environment variable `GRPC_ENABLE_FORK_SUPPORT` to _truthy_ values (see https://github.com/grpc/grpc/blob/v1.8.4/src/core/lib/support/fork.cc#L43)\r\n\r\nThere might be some scenarios where the user might want to explicitly disable fork support (see https://github.com/grpc/grpc/issues/13998 for example). To support such cases, we should allow the environment variable to also have _falsey_ values\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/14055", "title": "Clearly document the cases where fork() is supported in grpc()", "body": "gRPC does not support `fork()` in general - i.e it is not safe for a gRPC application to call `fork()` as it can lead to undefined behavior.\r\n\r\nAs of release 1.7, we added *very limited* support to `fork()`; where it is safe for an application to call `fork()` as long as the application did not start any gRPC work (beyond calling `grpc_init()) prior to calling `fork()`\r\n\r\nWe need to do a better job at documenting this clearly - the fact that gRPC does not support fork() in general and the only time it is safe to call fork() is if the application did not start any gRPC work.\r\n\r\nWe have been noticing several issues caused due to fork()  (and this is mainly due to grpc users not realizing that fork() is not supported)\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13735", "title": "Add a warning/info message when completion_queue_destroy was called while there where still pending items", "body": "Ideally `grpc_completion_queue_destroy()` should be called after calling `grpc_completion_queue_shutdown()` and after `grpc_completion_queue_next()` returned `false`. \r\n\r\nHowever, our API's allow `grpc_completion_queue_shutdown()` to be called without calling shutdown\r\nWhile this is legal and does the right thing, it can sometimes give memory leak errors if `grpc_completion_queue_next()` was never called after `grpc_completion_queue_destroy()` to drain the queue\r\n\r\nIt would be good to log a message in `grpc_completion_queue_destroy()` if there are still some pending items in the queue.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13733", "title": "Add max_thread option to Sync server", "body": "Add a way to limit the number of threads per thread manager.  ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13143", "title": "Update combiner-explainer.md", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12849", "title": "Experimental - Mpmc cq", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12805", "title": "Fix race condition in executor", "body": "This fixes a race between `executor_push` and `grpc_executor_shutdown`\r\n\r\nPreviously it was possible that `grpc_executor_shutdown` destroyed `g_thread_state` while `executor_push` is still accessing it.  The fix is to add a ref-count to `g_thread_state`.\r\n\r\n--\r\nNOTE: Looking through the code, I see that it is possible for new threads to be created during/after `g_thread_state` is destroyed. This also needs to be addressed but perhaps in a different PR.\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12309", "title": "Schedule at-most one combiner onto exec_ctx  (will help in parallelizing reads)", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/14973049", "body": "Is it guaranteed that bs->on_next would be non-null here ? \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14973049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "sunshichao520": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14044", "title": "generate_cc.bzl BUG", "body": "\r\n### What version of gRPC and what language are you using?\r\n Tag v1.8.4\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Linux 14:04\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n Bazel 0.9.0\r\n \r\n### What did you do?\r\n\r\nWhen I try my code with Bazel, It will generate a wrong directory which missing first letter.\r\n \r\n```\r\nlabel_len = len(ctx.label.package)+1\r\nif ctx.executable.plugin:\r\n    outs += [proto.path[label_len:-len(\".proto\")] + \".grpc.pb.h\" for proto in protos]\r\n    outs += [proto.path[label_len:-len(\".proto\")] + \".grpc.pb.cc\" for proto in protos]\r\n    if ctx.attr.generate_mock:\r\n      outs += [proto.path[label_len:-len(\".proto\")] + \"_mock.grpc.pb.h\" for proto in protos]\r\n  else:\r\n    outs += [proto.path[label_len:-len(\".proto\")] + \".pb.h\" for proto in protos]\r\n    outs += [proto.path[label_len:-len(\".proto\")] + \".pb.cc\" for proto in protos]\r\n  out_files = [ctx.new_file(out) for out in outs]\r\n```\r\n\r\nbecause ctx.label.package is zero in my project, so can not add 1, or new file will miss a letter.\r\n\r\nI change some code, please refer to commit c6a757e0446837471d0b271feb14f1ee7c861c45.\r\nIf I was wrong, please fix it. Thanks\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rurounijones": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14043", "title": " Ruby gRPC server does not stop gracefully after receiving SIGINT / SIGTERM ", "body": "Since the previous issue ( https://github.com/grpc/grpc/issues/12189 ) on this was closed and appears not to be tracked. Re-opening here:\r\n\r\nPlease answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\n\r\nYes \r\n \r\n### What version of gRPC and what language are you using?\r\n \r\ngRPC rubygems 1.8.2 and 1.9.0-dev (Local build) \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nOS: Kubuntu 16.04 LTS Linux devbox 4.10.0-42-generic #46~16.04.1-Ubuntu SMP Mon Dec 4 15:57:59 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n(Previous ticket that was closed was also reporting this on Mac OS X El Capitan 10.11.6)\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\nRuby: ruby 2.3.6p384 (2017-12-14 revision 61254) [x86_64-linux]\r\nGRPC: 1.9.0.dev (built from master locally)\r\n \r\n### What did you do?\r\n\r\nRun the greeter and shut it down using CTRL-C\r\n\r\n### What did you expect to see?\r\n\r\nGraceful shutdown\r\n \r\n### What did you see instead?\r\n\r\n```\r\n> $ ./greeter_server.rb                                                                                                                                                                                                          \r\n^C/home/jjones/.rvm/gems/ruby-2.3.6@ganges-product-service/gems/grpc-1.9.0.dev/src/ruby/lib/grpc/generic/rpc_server.rb:391:in `request_call': Interrupt\r\n        from /home/jjones/.rvm/gems/ruby-2.3.6@ganges-product-service/gems/grpc-1.9.0.dev/src/ruby/lib/grpc/generic/rpc_server.rb:391:in `loop_handle_server_calls'\r\n        from /home/jjones/.rvm/gems/ruby-2.3.6@ganges-product-service/gems/grpc-1.9.0.dev/src/ruby/lib/grpc/generic/rpc_server.rb:352:in `run'\r\n        from ./greeter_server.rb:42:in `main'\r\n        from ./greeter_server.rb:45:in `<main>'\r\nE0108 07:21:46.570601746     765 completion_queue.cc:490]    assertion failed: cqd->completed_head.next == (uintptr_t)&cqd->completed_head\r\n[1]    765 abort (core dumped)  ./greeter_server.rb\r\n``` \r\n### Anything else we should know about your project / environment?\r\n\r\nNone, this is using the examples provided with grpc.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14043/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "apolcyn": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14040", "title": "FAILURE: SEGV in bins/dbg/secure_sync_unary_ping_pong_test", "body": "```\r\nE0116 23:00:00.139279743    3716 driver.cc:86]               Environment variable \"QPS_WORKERS\" does not contain a list of QPS workers to use. Set it to a comma-separated list of hostname:port pairs, starting with hosts that should act as servers. E.g. export QPS_WORKERS=\"serverhost1:1234,clienthost1:1234,clienthost2:1234\"\r\nD0116 23:00:00.139298547    3716 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nI0116 23:00:00.139451195    3716 ev_epoll1_linux.cc:95]      grpc epoll fd: 3\r\nD0116 23:00:00.139464886    3716 ev_posix.cc:128]            Using polling engine: epoll1\r\nD0116 23:00:00.139491932    3716 dns_resolver.cc:294]        Using native dns resolver\r\nI0116 23:00:00.141280595    3716 ev_epoll1_linux.cc:95]      grpc epoll fd: 3\r\nD0116 23:00:00.141294915    3716 ev_posix.cc:128]            Using polling engine: epoll1\r\nD0116 23:00:00.141303904    3716 dns_resolver.cc:294]        Using native dns resolver\r\nI0116 23:00:00.141344361    3716 server_builder.cc:269]      Synchronous server. Num CQs: 1, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI0116 23:00:00.142532352    3716 server_builder.cc:269]      Synchronous server. Num CQs: 1, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI0116 23:00:00.142643960    3716 driver.cc:272]              Starting server on localhost:17980 (worker #0)\r\nI0116 23:00:00.143759044    3742 qps_worker.cc:231]          RunServerBody: about to create server\r\nI0116 23:00:00.144150597    3742 qps_worker.cc:69]           Starting server of type SYNC_SERVER\r\nI0116 23:00:00.145404333    3742 server_builder.cc:269]      Synchronous server. Num CQs: 1, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI0116 23:00:00.146330302    3742 qps_worker.cc:239]          RunServerBody: server created\r\nI0116 23:00:00.146400968    3742 qps_worker.cc:246]          RunServerBody: creation status reported\r\nI0116 23:00:00.146494844    3716 driver.cc:328]              Starting client on localhost:27089 (worker #1)\r\nD0116 23:00:00.146554009    3716 driver.cc:350]              Client 0 gets 1 channels\r\nI0116 23:00:00.147175299    3733 qps_worker.cc:188]          RunClientBody: about to create client\r\nI0116 23:00:00.147194646    3733 qps_worker.cc:50]           Starting client of type SYNC_CLIENT UNARY 0\r\nI0116 23:00:00.147434984    3733 client.h:427]               Connecting to localhost:6230\r\nI0116 23:00:00.156036147    3733 qps_worker.cc:193]          RunClientBody: client created\r\nI0116 23:00:00.156119718    3733 qps_worker.cc:198]          RunClientBody: creation status reported\r\nI0116 23:00:00.156185640    3716 driver.cc:371]              Initiating\r\nI0116 23:00:00.156283099    3733 qps_worker.cc:200]          RunClientBody: Message read\r\nI0116 23:00:00.157224380    3733 qps_worker.cc:209]          RunClientBody: Mark response given\r\nI0116 23:00:00.157688758    3716 driver.cc:392]              Warming up\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGSEGV\r\n\r\n```\r\n\r\n\r\nhttps://sponge.corp.google.com/target?id=0225f7e8-85b3-49b0-9466-b99a167f70e2&target=github/grpc/c%2B%2B_linux_dbg_native&searchFor=&show=ALL&sortBy=STATUS", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14040/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13908", "title": "Published grpc-ruby packages aren't yet pre-built for ruby 2.5", "body": "This issue tracks progress for publishing a grpc-ruby package with a pre-built ruby 2.5 library.\r\n\r\nNote currently, it should be possible to use grpc on ruby 2.5 by installing the source-only package and building the gem from source.\r\n \r\n\r\n-----------------------------\r\n\r\n\r\nThis is planned for the 1.9 release right now.\r\n\r\nRemaining TODO's for this:\r\n* Update Mac workers to be able to build against ruby 2.5 (and 2.1.6).", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13908/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13806", "title": "TIMEOUT: build_artifact.protoc_macos_x86", "body": "\r\nhttps://sponge.corp.google.com/target?id=bf5c2dcf-a79b-4e1a-ba49-650951f5407d&target=grpc/macos/pull_request/grpc_build_artifacts&searchFor=&show=ALL&sortBy=STATUS\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13698", "title": "FAILED: cloud_to_cloud:ruby:node_server:cancel_after_first_response, with GRPC::Core::CallError", "body": "```\r\n2017-12-08 16:10:10,398 START: cloud_to_cloud:node:java_server:empty_unary\r\n2017-12-08 16:10:10,403 I, [2017-12-09T00:10:10.215669 #72]  INFO -- : ... connecting securely to localhost:32768\r\n\"OK: ping_pong 0\"\r\n/var/local/git/grpc/src/ruby/lib/grpc/generic/bidi_call.rb:127:in `run_batch': call#run_batch failed somehow (GRPC::Core::CallError)\r\n\tfrom /var/local/git/grpc/src/ruby/lib/grpc/generic/bidi_call.rb:127:in `read_using_run_batch'\r\n\tfrom /var/local/git/grpc/src/ruby/lib/grpc/generic/bidi_call.rb:187:in `block in read_loop'\r\n\tfrom /var/local/git/grpc/src/ruby/lib/grpc/generic/bidi_call.rb:184:in `loop'\r\n\tfrom /var/local/git/grpc/src/ruby/lib/grpc/generic/bidi_call.rb:184:in `read_loop'\r\n\tfrom src/ruby/pb/test/client.rb:495:in `each'\r\n\tfrom src/ruby/pb/test/client.rb:495:in `cancel_after_first_response'\r\n\tfrom src/ruby/pb/test/client.rb:758:in `call'\r\n\tfrom src/ruby/pb/test/client.rb:758:in `main'\r\n\tfrom src/ruby/pb/test/client.rb:763:in `<main>'\r\n\r\n2017-12-08 16:10:10,403 FAILED: cloud_to_cloud:ruby:node_server:cancel_after_first_response [ret=1, pid=28698, time=0.9sec]\r\n```\r\n\r\nhttps://sponge.corp.google.com/target?id=2f28184c-945d-405d-991e-fcd30658889c&target=grpc/ubuntu/pull_request/grpc_interop_tocloud&searchFor=&show=ALL&sortBy=STATUS\r\n\r\nPR: https://github.com/grpc/grpc/pull/13696\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13698/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/361b424ce0e2f455fa6d26b96dc454fed402c06c", "message": "Merge pull request #13206 from apolcyn/ruby_20_distrib_test\n\nAdd distrib tests using ruby 2.0.0"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ca3798a8cb13f13ed6dea65d0b91399c1634967d", "message": "Add ruby distrib tests that uses ruby 2.0.0"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9490b0e6bdc324b0f875abbcd1651fdb3a67cd39", "message": "Merge pull request #14011 from apolcyn/avoid_ares_on_windows\n\nCorrect a usage of select in grpc_build_system"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9df154ca32ab4bc750f58717af438cde0797e228", "message": "Correct usage of select in _get_external_deps"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/5cee830dbedad0a4bf83b57e5673257aaefc6a4f", "message": "Merge pull request #13991 from apolcyn/avoid_ares_on_windows\n\nAvoid the ares bazel dependency with grpc_no_ares=true"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f1b933ce7fe36d150d21f03ad60a88c63a92b350", "message": "Avoid building c-ares lib when grpc_no_ares is true"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d11525378858b447fcc242db133ef041348619ac", "message": "Merge remote-tracking branch 'upstream/v1.8.x' into upmerge_v18x"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/1d1086f4c244da1654bd64e39f8070800de02ab4", "message": "Merge pull request #13910 from apolcyn/ruby_25_build\n\nBase the ruby artifact-build docker file off of rake-compiler-dock's"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8065a5e73c54801ed0f6c2b6e5469c4e34a83f48", "message": "Use rake-compiler-dock's Dockerfile as a base in grpc's fork of it"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/486761d04e03a9183d8013eddd86c3134d52d459", "message": "Merge pull request #13930 from apolcyn/ruby_25_mac_build\n\nAdd ruby 2.5 to the mac package build"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9870797d41a059487b5f03b31b46a9eccb0dc721", "message": "Merge pull request #13931 from apolcyn/merge_18x\n\nMerge 1.8.x into master"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f40794953e361b2b5094fe825532498bee2f8ebd", "message": "Manual merge conflict resolve: remove exec_ctx param from tcp_free"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/522df1681a566ec4772d62ba286a6ca03765ec2a", "message": "add ruby 2.5 to package build on mac"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ce1be0c8b0fc55d3dd912152b5d116c7086d705a", "message": "Merge remote-tracking branch 'upstream/v1.8.x' into merge_18x"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/82eebafe3f1278f2333745a6bfb1dede6d17079f", "message": "Merge pull request #13921 from apolcyn/backport_distribtest_fix\n\nBackport 13793 to 1.8.x"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/a3997fa50f98ff5dd5baac9c53c2cb8543384e6e", "message": "Fix failing ruby distrib tests on ruby 2.0 images"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/4233cf20c4e31cb12adafc12b2630ae5ee766a20", "message": "Merge pull request #13829 from apolcyn/backport_bazel_changes\n\nBackport bazel changes from #13468 to 1.8.x"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14042", "title": "Ruby macos kokoro environment and package build updates", "body": "This updates kokoro tests to use ruby  2.5 and adds a sanity check that jenkins mac are configured as expected. (All jenkins mac workers are now running ruby 2.5; observably, this was needed for grpc-ruby mac binaries in mac packages to load on ruby 2.5).\r\n\r\nAlso, skipping the doc installation during `gem  update --system` cuts ~1 minute from the package build", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13961", "title": "Fix service config structures in c-ares tests", "body": "This brings out the fixes for service config JSONs from https://github.com/grpc/grpc/pull/12942, and also does a small refactoring\r\n\r\nManual changs were made to:\r\n* `test/cpp/naming/resolver_component_test_record_groups.yaml`\r\n* `test/cpp/naming/service_config_utils.py`\r\n* `test/cpp/naming/test_dns_server.py`\r\n* `test/cpp/naming/gen_build_yaml.py`\r\n* `test/cpp/naming/resolver_component_test.cc`\r\n* all `.json` files under `test/cpp/naming/service_configs/`\r\n\r\nThe rest of the changes are from regenerating projects.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13470", "title": "WIP: Run c-ares unit tests against 'named' BIND DNS server", "body": "This is an alternative to https://github.com/grpc/grpc/pull/13320, and is based on https://github.com/grpc/grpc/pull/12942/files (only the last three commits are new).\r\n\r\nNote I based this on top of https://github.com/grpc/grpc/pull/12942/files only because it seemed nice to move everything to BIND zone files if we're using named/BIND. I can combine this with that PR if wanted.\r\n\r\nThe twisted DNS server works on multiple platforms but it has some bugs and limitations, e.g. it can't follow CNAME chains. This change starts using the [named](https://linux.die.net/man/8/named) DNS server (used within BIND system) in the local unit tests on linux that run inside docker, by using the `-c config-file` and `-p port` arguments to `named`.\r\n\r\nOne weird note on this test: without extra work, the `named` tests will <i>only</i> run inside of a docker container (which should be fine sine all linux c++ tests run inside of docker). `BIND`/`named` appears to be commonly limited by `apparmor` configuration (which seems to typically prevent it from accessing any file outside of `/etc/bind/**` and a few other directories, even when running as root). docker containers apparently get their own docker-default `apparmor` configs though that happen to let `named` read whatever file we give it.\r\n\r\n\r\n-------------------------------\r\n\r\n\r\nFYI, sorry heads up, I need to make these updated docker files available for kokoro before tests on this PR will pass\r\n\r\n\r\n--------------------------------\r\n\r\n\r\nTo update, after offline chat with @jtattermusch I'm worried adding a test dependency on `BIND` might be creating too much of a hassle for running the c/c++ tests manually. Considering having a dedicated and standalone kokoro job invoke this test, if this test should be used.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13320", "title": "Add CNAME test cases to c-ares resolver tests", "body": "The changes here involve a couple of tweaks to the buildgen and python server, new test cases in the yaml file, and `regenerate_projects.sh` run (and a couple of tweaks to test logging).\r\n\r\nI uploaded the new DNS records that are in this PR, and ran the c-ares-to-GCE_DNS tests successfully with them in https://grpc-testing.appspot.com/job/gRPC_naming_Adhoc/203/console.\r\n\r\nThe CNAME chains tests need to be disabled on the local unit tests since the python DNS server in unit tests isn't able to handle them.\r\n\r\n----\r\n\r\nNoting to self, TODO: before merging, records version needs to update from 3 to 5, since 4 is latest\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/grpc/grpc/13320)\n<!-- Reviewable:end -->\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13290", "title": "Add address sorting submodule for use in c-ares wrapper", "body": "This adds code to sort IP addresses resolved by grpc/c-ares wrapper per RFC 6724. This used Android's [getaddrinfo](https://android.googlesource.com/platform/bionic/+/dba3df609436d7697305735818f0a840a49f1a0d/libc/dns/net/getaddrinfo.c) as a guide (the differences between this and Android's implementation are mostly cosmetic and based around hooking the address-sorting code into the grpc code base). So, the code is added as a custom submodule which is under Android's license.\r\n\r\nI'd like to have more end-to-end tests and cross-platform tests for this, (e.g. run the `resolver_component_tests` on IPv4-only machines, IPv6-only machines, machines with modified routing tables, Windows, etc.,and verify sorting results in those scenarios), but it looks like that involves a lot of setup, and so this tests by mocking libc functions.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/grpc/grpc/13290)\n<!-- Reviewable:end -->\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12986", "title": "Backport 12842 to 1.7.x", "body": "this fix was merged into master late and missed 1.7.x", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12942", "title": "Refactor c-ares DNS tests to use bind zone files", "body": "This should be ready for a look now, PTAL.\r\n\r\nThis adds `convert_json_records_to_bind_zone_format.py`, which can be used to create a bind zone file from a record set in a custom JSON format. (also does some file/code naming cleanups). A lot of the code for DNS record uploads that's specific to a particular DNS server is removed in this PR. Also, `convert_json_records_to_bind_zone_format` can <i>probably</i> be used to create BIND zone files with json TXT data for new types of DNS servers.\r\n\r\nA couple of odd points for this PR:\r\n* The unit tests (using python `twisted`'s DNS server), need to be compatible with older versions of `twisted` for internal reasons.\r\n* I had trouble finding a standard for how a zone file parser should handle quotation marks within TXT strings. E.g., there doesn't appear to be any format for TXT strings with quotation marks that is compatible with both the `gcloud dns` zone file parser and python's `twisted` DNS server. So, `convert_json_records_to_bind_zone_format` currently has a flag to allow controlling the \"style\" of the TXT data, with presumably at least one of these formats working for other DNS servers if it needs to be.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12774", "title": "Increase port server's listen socket backlog", "body": "Logs from tests that failed in https://github.com/grpc/grpc/issues/12595, like https://grpc-testing.appspot.com/job/gRPC_pr_win/8126/#showFailuresLink, show a lot of `10061`/`WSAECONNREFUSED` error codes, [which appear to be due to request arriving while queue backlog is full](https://msdn.microsoft.com/en-us/library/windows/desktop/ms739168(v=vs.85).aspx).\r\n\r\nIt looks like the [default listen socket backlog](https://github.com/python/cpython/blob/2.7/Lib/SocketServer.py#L440) for the port server is small, at 5. 100 is somewhat arbitrary but seems large enough. This appears to fix my repro (of the port server requests failing) in https://github.com/grpc/grpc/issues/12595.\r\n\r\n---\r\n\r\n....there is actually a port server request failure [in this PR](https://sponge.corp.google.com/target?id=e3d4d3e1-42f5-4ccd-93d7-243f0695981a&target=github/grpc/c_windows_dbg_native&searchFor=&show=FAILED&sortBy=STATUS). However, an eyeball of [CPU costs for tests in that run](https://sponge.corp.google.com/invocation?tab=Kokoro&id=546f6436-e1cf-42db-895e-a97f54d2540d&searchFor&page=1) shows ~1200 tests with 0.01 CPU cost, so it looks like we might be having up to ~800 parallel requests to the port server at once. I <i>think </i> https://github.com/grpc/grpc/pull/12777 can alleviate that  issue though.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11580", "title": "Begin running ruby unit tests under asan", "body": "Allows running unit tests (`src/ruby/**/*_spec.rb`) tests under `asan`.\r\n\r\nNot integrating this into per-PR runs yet but manual runs raise some suspicious errors. (new jenkins job is running this in https://grpc-testing.appspot.com/job/grpc_wrapped_langs_asan/1/console)\r\n\r\nRan into some issues, leading to this current state:\r\n\r\n* Compiling ruby from source with `-fsanitize=address seems possible, but there needs to be lots of manual leak suppression anyways. So this loads asan as a shared library.\r\n\r\n* Also, the leak checker needs gcc >= 4.9 to work, but some non-4.9 versions will crash under ruby with what looks similar to http://lists.llvm.org/pipermail/llvm-dev/2017-February/110343.html.\r\n\r\nthis is kind of experimental, but seems to be giving some useful errors.\r\ncc @nicolasnoble @matt-kwong\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11324", "title": "Follow up to #11267, change casts to PRIdPTR", "body": "per the mentioning of the preferred `PRIdPTR` in #11267. ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8665", "title": "Add perf saturation sweep to go", "body": "adds go into the performance sweep test, but with smaller parameters.\r\n\r\ncc @ctiller @iamqizhao ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8111", "title": "add note to credentials plugin cb header comment", "body": "attempt to partly address https://github.com/grpc/grpc/issues/8110\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8082", "title": "Add ruby profiling demo", "body": "This is lower priority/experimental.\n\nHad used RubyProf earlier when looking into ruby perf. This add a new directory, `src/ruby/profiling`, to the repo, with a hello world that makes many calls and gets profiled on server or \nclient.\n\nTo get an idea of the time spent in c-core vs. ruby, this also wraps the pluck and start_batch calls in rb_call.c as ruby functions, so that it can they can be recognized by RubyProf. For example, profiling with WALL_TIME shows that about 86% of real time gets spent within the blocking pluck call. \n\nBenchmarks don't seem to show a difference between the wrapped and pure-c versions of these functions, so I think this could be ok. \n\nI'm not sure if we want the actual code under profile to be changed, or if we might just not want this in the main repo.\n\ncc @ctiller @vjpai @murgatroid99  \n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/7588", "title": "add ruby cpu timer and usage timing in benchmarks", "body": "This adds a UsageTimer ruby class, and cpu user and system timing in the benchmarks. I tested it manually using ruby sleep method, and results made sense when compared it to unix time command.\n\nWhen used in the benchmarks, results also seem to make sense, with the client and server user and system times being very large next to the wall times, especially on the server side doing more in parrallel.\n\nMeant to be similar to a ruby version of the c++ UsageTimer in tests/cpp/qps/usage_timer.h, and using a similar usage of it in the benchmark \"mark\" methods.\n\nNote that this adds it the timer to the public classes, but could change this to be used only for tests\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/21239863", "body": "@y-zeng I think there might be a problem either with the ruby artifact build or in here.\r\nThe ruby artifact build is failing with error:\r\n\r\n```\r\n[C]       Compiling src/core/lib/support/wrap_memcpy.c\r\n[AR]      Creating /tmp/libs/opt/libz.a\r\n[AR]      Creating /tmp/libs/opt/libgpr.a\r\nsrc/core/ext/client_channel/parse_address.c: In function 'parse_ipv6':\r\nsrc/core/ext/client_channel/parse_address.c:139:35: error: passing argument 3 of 'gpr_parse_bytes_to_uint32' from incompatible pointer type [-Werror]\r\n                                   &in6->sin6_scope_id) == 0) {\r\n                                   ^\r\nIn file included from src/core/ext/client_channel/parse_address.c:47:0:\r\n./src/core/lib/support/string.h:57:5: note: expected 'uint32_t *' but argument is of type 'u_long *'\r\n int gpr_parse_bytes_to_uint32(const char *data, size_t length,\r\n     ^\r\ncc1: all warnings being treated as errors\r\nmake: *** [/tmp/objs/opt/src/core/ext/client_channel/parse_address.o] Error 1\r\nmake: *** Waiting for unfinished jobs....\r\nrake aborted!\r\n```\r\n\r\nJust before this change (before using `sin6_cope_id` as `*uint32`), the ruby artifacts were building.\r\n\r\nDo you know have an idea? I think this field might have some incompatibilities between linux versions.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21239863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21241348", "body": "cc @nicolasnoble @murgatroid99 ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21241348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21241751", "body": "it looked like all of the ruby artifact builds have been failing since this commit.\r\n\r\nsee https://grpc-testing.appspot.com/job/gRPC_build_artifacts/2948/architecture=x64,language=ruby,platform=linux/console\r\n\r\nOne guess is, saw notes on this struct that mention linux 2.4 64-bit binary incompatibilities with the introduction of the `sin6_scope_id` field", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21241751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21242490", "body": "I don't think the linux 2.4 incompatibility is the direct cause here (ruby build isn't running on old linux kernel), but something is breaking here", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21242490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21242551", "body": "actually this is noted in an issue recently posted: https://github.com/grpc/grpc/issues/10027", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21242551/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Qian-Zhang7": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14038", "title": "grpc client send stuck at epoll_pwait() forever", "body": "Grpc experters,\r\n\r\nWe have a grpc client (C++) that frequently stream data (multiple records for each stream) to the server side (server side is in a remote cluster implemented using google go).  We see client stream often stuck at epoll_pwait() for long long time.  Can anyone shed light on what it is waiting for? Is it client's fault or server's side fault?\r\n\r\nThank you very much!\r\nQian\r\n\r\n----grpc client stack trace ---\r\nLoaded symbols for /usr/lib64/libbz2.so.1\r\n0x00007fb870200a3d in poll () from /usr/lib64/libc.so.6\r\nMissing separate debuginfos, use: debuginfo-install augeas-libs-1.4.0-2.el7_4.2.x86_64 blosc-1.11.3-1.cisco.el7.centos.x86_64 bzip2-libs-1.0.6-13.el7.x86_64 elfutils-libelf-0.168-8.el7.x86_64 elfutils-libs-0.168-8.el7.x86_64 glibc-2.17-196.el7_4.2.x86_64 libattr-2.4.46-12.el7.x86_64 libcap-2.22-9.el7.x86_64 libgcc-4.8.5-16.el7_4.1.x86_64 libselinux-2.5-11.el7.x86_64 libstdc++-4.8.5-16.el7_4.1.x86_64 libxml2-2.9.1-6.el7_2.3.x86_64 libzstd-1.3.2-1.el7.x86_64 lz4-1.7.3-1.el7.x86_64 pcre-8.32-17.el7.x86_64 protobuf3-3.4.0-1.cisco.el7.centos.x86_64 qdbm-1.8.78-1.cisco.el7.centos.x86_64 snappy-1.1.0-3.el7.x86_64 systemd-libs-219-42.el7_4.4.x86_64 xz-libs-5.2.2-1.el7.x86_64 zlib-1.2.7-17.el7.x86_64\r\n(gdb) info thread\r\n  Id   Target Id         Frame \r\n  5    Thread 0x7fb86e578700 (LWP 15260) \"cdb_export\" 0x00007fb87020b587 in epoll_pwait () from /usr/lib64/libc.so.6\r\n  4    Thread 0x7fb86dd77700 (LWP 15261) \"cdb_export\" 0x00007fb870d01945 in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib64/libpthread.so.0\r\n  3    Thread 0x7fb86d576700 (LWP 15262) \"cdb_export\" 0x00007fb870d01cf2 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /usr/lib64/libpthread.so.0\r\n  2    Thread 0x7fb867bd7700 (LWP 15263) \"cdb_export\" 0x00007fb870d01945 in pthread_cond_wait@@GLIBC_2.3.2 () from /usr/lib64/libpthread.so.0\r\n* 1    Thread 0x7fb87223da80 (LWP 15259) \"cdb_export\" 0x00007fb870200a3d in poll () from /usr/lib64/libc.so.6\r\n(gdb) thread 5\r\n[Switching to thread 5 (Thread 0x7fb86e578700 (LWP 15260))]\r\n#0  0x00007fb87020b587 in epoll_pwait () from /usr/lib64/libc.so.6\r\n(gdb) bt\r\n#0  0x00007fb87020b587 in epoll_pwait () from /usr/lib64/libc.so.6\r\n#1  0x00007fb86f725481 in ?? () from /usr/lib64/libgrpc.so.4\r\n#2  0x00007fb86f741a3c in ?? () from /usr/lib64/libgrpc.so.4\r\n#3  0x00007fb86f74255b in grpc_completion_queue_pluck () from /usr/lib64/libgrpc.so.4\r\n#4  0x00007fb871e129c8 in grpc::CoreCodegen::grpc_completion_queue_pluck(grpc_completion_queue*, void*, gpr_timespec, void*) () from /usr/lib64/libgrpc++.so.1\r\n#5  0x000000000048f1a0 in Pluck (tag=0x7fb86e5775d0, this=0x7fb86809dca8) at /usr/include/grpc++/impl/codegen/completion_queue.h:224\r\n#6  ClientWriter<nam::PushResponse> (response=0x7fb86e577730, context=0x7fb86e577790, method=..., channel=0x7fb8680024e0, this=0x7fb86809dc20)\r\n    at /usr/include/grpc++/impl/codegen/sync_stream.h:282\r\n#7  nam::NamData::Stub::PushRaw (this=<optimized out>, context=context@entry=0x7fb86e577790, response=response@entry=0x7fb86e577730) at gen-cpp/nam_data.grpc.pb.cc:34\r\n#8  0x0000000000416bcd in Push (response=0x7fb86e577730, context=0x7fb86e577790, this=<optimized out>) at /home/cisco/nam/nam/protobuf-defs/gen-cpp/nam_data.grpc.pb.h:67\r\n#9  NamDataClient::stream_pages (this=0x7fb8680008c0, rec=rec@entry=0x7fb86800fc90, table_name=table_name@entry=0x70bdc8 <Schema+11656> \"ARTCltSvr\", \r\n    num_records=num_records@entry=1004, record_size=record_size@entry=508, aggr_interval=aggr_interval@entry=25, exporter_addr=..., \r\n    interval_index=interval_index@entry=45701) at nam_data_client.cc:209\r\n#10 0x000000000040e4c8 in cdbe_grpc_send (index=index@entry=1, record_buff=0x7fb86800fc90, sch_p=sch_p@entry=0x70bdc8 <Schema+11656>, num_records=1004, record_size=508, \r\n    aggr_interval=25, interval_index=interval_index@entry=45701) at cdb_export.cpp:389\r\n#11 0x000000000040e828 in cdbe_read_and_send (index=index@entry=1, read_info=read_info@entry=0x7fb86e577ac0, gen_info=gen_info@entry=0x7fb86e577ad0, \r\n    file_id=file_id@entry=1) at cdb_export.cpp:489\r\n#12 0x000000000040ec00 in cdbe_thread_run (ptr=<optimized out>) at cdb_export.cpp:673\r\n#13 0x00007fb870cfde25 in start_thread () from /usr/lib64/libpthread.so.0\r\n#14 0x00007fb87020b34d in clone () from /usr/lib64/libc.so.6\r\n(gdb) up", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Zomaka": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14034", "title": "Can't connect to multiple servers at the same time", "body": " *Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\n C++ with gRPC v1.8.x\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Linux\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n gcc 5.4\r\n \r\n### What did you do?\r\n\r\nI wanted to submit the same data to multiple servers at the same time using gRPC.\r\n\r\nI looked at the greeterAsyn2 c++ example:\r\nhttps://github.com/grpc/grpc/blob/v1.8.x/examples/cpp/helloworld/greeter_async_client2.cc\r\n\r\nFrom the example: In order to create 1 channel you can just do this:\r\n\r\n    GreeterClient greeter(grpc::CreateChannel(\r\n                \"localhost:50051\", grpc::InsecureChannelCredentials()));\r\n\r\nAs this would create the stub for the channel:\r\n\r\n    class GreeterClient {\r\n      public:\r\n        explicit GreeterClient(std::shared_ptr<Channel> channel)\r\n                : stub_(Greeter::NewStub(channel)) {}\r\n    }\r\n\r\nAnd I would be able to submit data using\r\n\r\n    greeter.SayHello(\"hello world\");  \r\n\r\nBut what if I want to submit data to 2 different servers using 2 different channels? \r\n\r\nIf I would just add another GreeterClient object called greeter2:\r\n\r\n    GreeterClient greeter2(grpc::CreateChannel(\r\n                \"10.0.0.3:9008\", grpc::InsecureChannelCredentials()));\r\n\r\nI get a segmentation fault when trying to submit the data to the second server:\r\n\r\n    greeter2.SayHello(\"hello world\");  \r\n\r\n\r\n### What did you expect to see?\r\n A program that connects to 2 gRPC servers at the same time\r\n \r\n### What did you see instead?\r\nSegmentation fault (core dumped)\r\n \r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13799", "title": "class helloworld::HelloRequestDefaultTypeInternal\u2019 has no member named \u2018Shutdown\u2019", "body": " \r\n### What version of gRPC and what language are you using?\r\n C++ with Protobuf 3.5.0\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Ubuntu 16.04\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n\r\n> gcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\n> \r\n> g++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\n\r\n \r\n### What did you do?\r\nI'm trying to compile the C++ helloworld example in grpc/examples/cpp/helloworld\r\n### What did you expect to see?\r\n Hello world.\r\n \r\n### What did you see instead?\r\n\r\n$ make\r\n\r\n> g++ -std=c++11 `pkg-config --cflags protobuf grpc`  -c -o helloworld.pb.o helloworld.pb.cc\r\n> helloworld.pb.cc: In static member function \u2018static void helloworld::protobuf_helloworld_2eproto::TableStruct::Shutdown()\u2019:\r\n> helloworld.pb.cc:82:35: error: \u2018class helloworld::HelloRequestDefaultTypeInternal\u2019 has no member named \u2018Shutdown\u2019\r\n>    _HelloRequest_default_instance_.Shutdown();\r\n>                                    ^\r\n> helloworld.pb.cc:84:33: error: \u2018class helloworld::HelloReplyDefaultTypeInternal\u2019 has no member named \u2018Shutdown\u2019\r\n>    _HelloReply_default_instance_.Shutdown();\r\n>                                  ^\r\n> <builtin>: recipe for target 'helloworld.pb.o' failed\r\n> make: *** [helloworld.pb.o] Error 1\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yashykt": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14030", "title": "C++ize proxy mapper", "body": "This is part of the effort to C++ize gRPC core", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/14029", "title": "C++ize handshaker API", "body": "This is part of the effort to C++ize gRPC core\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14029/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/83251bbfa99ed7fa3fbfc0bb5f98ba35ae91f5cb", "message": "Merge pull request #14076 from grpc/execctx_remfinish\n\nRemove extraneous Finish in ExecCtx"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/98f22c7a95936b0560feffe07efbfb1921542e1b", "message": "Merge pull request #14078 from yashykt/asan_sockaddr\n\nSolve a stack_use_after_scope issue in sockaddr_resolver_test"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/45e754a5afe955526b9309f362953c8258da1cca", "message": "Fix typo s/resolition/resolution"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f0798f91ff0cc2cbb1424dd896a91972c47a8a7f", "message": "Solve a stack_use_after_scope issue in sockaddr_resolver_test"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9cd22deaef7e168c96cfee64a3bc3e25725fad67", "message": "Remove extraneous Finish in ExecCtx"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/61b32965bec11f4106c729bb0a428ff03d2d03ab", "message": "Merge pull request #13970 from grpc/revert-13857-lb_policy_ref_simplification\n\nRevert \"Simplify LB policy refcounting.\""}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b3fa256dd5582c838b4928bb64ef2daaca5ad85a", "message": "Revert \"Simplify LB policy refcounting.\""}, {"url": "https://api.github.com/repos/grpc/grpc/commits/466e1821cd657db03e872df92c780fa38937dd64", "message": "Merge pull request #13884 from yashykt/androidtls\n\nAdd an exception in TLS to use pthread library instead of __thread fo\u2026"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/11d1ac4c0cbe66b838e2a7af4ac335fc34eda2d6", "message": "Add an exception in TLS to use pthread library instead of __thread for Android NDK with GCC as the compiler"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14112", "title": "Bad client changes Part I", "body": "This is the first part of the changes for the bad_client framework. This change enables the large_metadata test with the bad_client framework again.\r\n\r\nThis solves the issue mentioned in #11745 by passing an array of client side validators to the bad client framework as opposed to a single validator earlier. Each iteration in the test allows sending a payload from the client and running a validator on the expected response.\r\n\r\nThis avoids the race condition where the settings frame from the server is not acknowledged by the client resulting in the server accepting metadata beyond the limits set.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13562", "title": "Replace usage of gpr_cmdline with gflags, and remove gpr_cmdline from\u2026", "body": "Replace usage of gpr_cmdline with gflags, and remove gpr_cmdline from grpc", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jskeet": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14021", "title": "C# memory leak with multiple channels", "body": "- Grpc.Core v1.8.0 and 1.8.3 behave very badly; Grpc.Core v1.7.3 is somewhat better (details below)\r\n- Windows 10\r\n\r\nSimple repro using `Google.Cloud.Speech.V1` library just for the generated protos and gRPC code:\r\n\r\n```csharp\r\nusing Google.Apis.Auth.OAuth2;\r\nusing Google.Cloud.Speech.V1;\r\nusing Grpc.Auth;\r\nusing Grpc.Core;\r\nusing System;\r\n\r\npublic class Test\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        GoogleCredential googleCredential = GoogleCredential.GetApplicationDefault();\r\n        ChannelCredentials channelCreds = googleCredential.ToChannelCredentials();\r\n        for (int i = 0; i < 100; ++i)\r\n        {\r\n            var channel = new Channel(SpeechClient.DefaultEndpoint.Host, channelCreds);\r\n            var speech = new Speech.SpeechClient(channel);\r\n            var call = speech.StreamingRecognize();\r\n            call.RequestStream.CompleteAsync().Wait();\r\n            call.ResponseStream.MoveNext(System.Threading.CancellationToken.None).Wait();\r\n            channel.ShutdownAsync().Wait();\r\n            Console.WriteLine($\"{i}: {GC.GetTotalMemory(true)}\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nProject file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Google.Cloud.Speech.V1\" Version=\"1.0.0\" />\r\n    <PackageReference Include=\"Grpc.Core\" Version=\"1.8.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nOutput when using Grpc.Core v1.7.x:\r\n\r\n```text\r\n0: 376984\r\n1: 382392\r\n2: 382392\r\n3: 382960\r\n4: 382960\r\n5: 382960\r\n6: 382960\r\n7: 382960\r\n8: 382960\r\n9: 382960\r\n(stable)\r\n```\r\n\r\nWhen using Grpc.Core v1.8.x:\r\n\r\n```text\r\n0: 461312\r\n1: 553512\r\n2: 640344\r\n3: 728456\r\n4: 815368\r\n5: 902816\r\n6: 990232\r\n7: 1077648\r\n8: 1164728\r\n9: 1250880\r\n(keeps increasing)\r\n```\r\n\r\nNow even 1.7.x isn't perfect: if you comment out the call to `call.ResponseStream.MoveNext(System.Threading.CancellationToken.None).Wait();`, there's still a small leak, although it's much better than with 1.8.x:\r\n\r\n```text\r\n0: 376976\r\n1: 382504\r\n2: 383136\r\n3: 383280\r\n4: 383424\r\n5: 383648\r\n6: 383792\r\n7: 383936\r\n8: 384080\r\n9: 384224\r\n```\r\n\r\nUsing a single channel instead of multiple channels avoids the leak even with 1.8.x, and even without calling `MoveNext()` to observe the end of the stream.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/29836192", "body": "_Much_ clearer :)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/29836192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/29839409", "body": "Given that we're using optional parameters elsewhere, perhaps use them here for ServerCredentials, and just have one overload?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/29839409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/29839501", "body": "What does the Java API look like in terms of this? We might want to consider the other .NET context APIs to make a ServerCallContext implicit and flow with tasks...\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/29839501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/29859767", "body": "If they're different conceptually, I'd make the difference even _bigger_ with different names, e.g. AddInsecureListener vs AddSecureListener. But I don't have enough context at the moment to know how much I care :)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/29859767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/53297369", "body": "I would leave the word \"mock\" out here. It suggests a kind of testing which may not be the case.\nGiven how similar this is to TaskCompetionSource and CancellationTokenSource, I'd be tempted to call it AsyncUnaryCallSource.\n\nAt that point, we could add extra useful methods of SetCancelled, SetFaulted etc potentially.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/53297369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/77478059", "body": "It may well be worth using a ConcurrentDictionary - if we think that this is on a hot path, anyway.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/77478059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/77478098", "body": "Nit, here and elsewhere: use `logger` for a local variable name, not `Logger`.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/77478098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/98665525", "body": "Are you planning on putting this in the same assembly then? An alternative approach is to have a separate assembly for testing - that way:\r\n\r\n- It can take dependencies that wouldn't be suitable in production\r\n- It's easy to tell that an application doesn't depend on it", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/98665525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/129347566", "body": "Have you measured the performance impact of this vs `Task.Run`? I'm not sure whether `ThreadPool.QueueUserWorkItem` uses the same task-stealing queues. But we could change it later in a non-breaking way, of course.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/129347566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/131673370", "body": "It would be better to use a field like event here:\r\n\r\n```csharp\r\npublic static event EventHandler ShuttingDown;\r\n```\r\n\r\nThat would perform the subscribe/unsubscribe aspects in a thread-safe way - this doesn't at the moment.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/131673370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/131673844", "body": "Use `?.` to invoke the event handler only if there's a subscriber.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/131673844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/131942872", "body": "I'd just use `public Metadata Trailers { get; }` and assign directly to this in the constructor - and to the same with `Status` - unless you particularly need to be pre-C#-6 friendly.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/131942872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/134165012", "body": "It feels like it would make more sense for this to delegate to the constructor above, that could just set the fields directly. There's no point in calling GetLogLevelFromEnvironment with a constant value of false for fromEnvironmentVariable.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/134165012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142069604", "body": "Just turn this into an automatically implemented property? (Ditto for Host potentially, but that's not being changed in this PR, so it may want to be done separately.)", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142069604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142069855", "body": "I'm concerned that this already-large struct is becoming huge. The threading is also a concern... `Dictionary<,>` isn't thread-safe - what are the expected uses here, and are we satisfied they won't cause problems?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142069855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142069964", "body": "Possibly clarify that any *previous* items are effectively lost rather than merged?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142069964/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142070737", "body": "I'd quite like a way of creating an interceptor to just modify/inspect one aspect (e.g. metadata) of all calls - `Interceptor.ForMetadata(metadata => { ...})`", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142070737/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142070917", "body": "All this reflection looks inefficient to me. I haven't quite got my head round how it's all used at the moment, but it would be great to avoid it...", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142070917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142712033", "body": "This is my only concern - that if we've cancelled the token, we're ending up with an `RpcException` instead of a `TaskCanceledException`. I can see arguments for each of them, to be honest... but the latter is probably more in line with most expectations of cancellation.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142712033/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142712918", "body": "I think it's reasonable that if the cancellation comes after the read has completed, the cancellation token for just that read is irrelevant. Worth documenting, but then I think it's fine.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142712918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142713208", "body": "In fact, more than fine: desirable. I could easily pass a new cancellation token into each MoveNext invocation, which auto-cancels after a timeout. I wouldn't want an \"old\" token to cancel the whole call when we've already used the result we created it for!", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/142713208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/152914442", "body": "If upgrading an existing package radically changes the default build process, that sounds like it's not great on the compatibility front.\r\n\r\nCan I just check I understand properly: you're currently considering adding this to Grpc.Tools. Any reason not to create a new package of Grpc.Tools.MSBuild (or Google.Protobuf.Tools.MSBuild)? Yes, moving the tool locations in Grpc.Tools is already disruptive, but it's less so than requiring each project to add extra lines to disable something. Having the MSBuild task separate allows for separate versioning etc as well.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/152914442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/159866578", "body": "We use Content. Yes, it shows up in project explorer (when developing the package itself), which isn't ideal - but it does seem to work, which is probably more important.\r\nI'm hoping that \"reasonably soon\" all of this will be handled transparently. This follows the suggested format though.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/159866578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "tainguyennc": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14014", "title": "client channels do not reconnect after server crash", "body": "### What version of gRPC and what language are you using?\r\nVersion 1.8.3 C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nLinux 26ee74637e50 4.4.0-109-generic #132~14.04.1-Ubuntu SMP Tue Jan 9 21:46:42 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\ng++ (GCC) 6.4.1 20170727 (Red Hat 6.4.1-1)\r\n \r\n \r\n### What did you do?\r\nWe have 2 GRPC streaming clients in the same process connecting to a server via unix domain socket. When we shutdown the server and restart, the clients try to reestablish the connection to the server but the client channel never get into CONNECTING state.\r\nIf there is only one client then the connection is reestablished successfully\r\n \r\n### What did you expect to see?\r\nWe expect both clients are able to reconnect to the the server. \r\n \r\n### What did you see instead?\r\nclient_channel remains in IDLE state and never get into CONNECTING or READY state\r\n[grpc_issue.txt](https://github.com/grpc/grpc/files/1627819/grpc_issue.txt)\r\n \r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\nbool GrpcSubscriber::try_connect(const std::chrono::milliseconds &timeout)\r\n{\r\n    bool success = false;\r\n    int cnt = (timeout.count() + 99) / 100;\r\n    auto state = channel_->GetState(false);\r\n\r\n    while ((cnt-- > 0) && (state != GRPC_CHANNEL_READY)) {\r\n        xxx::sleep_for(std::chrono::milliseconds(100));\r\n        logging::Logger *logger = logging::getLogger(name_.c_str());\r\n        logger->info() << \"Try to connect channel \" << (void *) channel_.get();\r\n        state = channel_->GetState(true);\r\n        logger->info() << \"channel \" << (void *) channel_.get() << \" State: \"<< state;\r\n    }\r\n    if (state == GRPC_CHANNEL_READY) {\r\n        success = true;\r\n    }\r\n    return success;\r\n}\r\n\r\nbool GrpcSubscriber::create_reader()\r\n{\r\n    bool success = false;\r\n    channel_ = grpc::CreateChannel(\r\n                       address_, grpc::InsecureChannelCredentials());\r\n    if (try_connect(std::chrono::milliseconds(1000))) {\r\n        context_ = std::make_unique<grpc::ClientContext>();\r\n        stub_ = SubscribeService::NewStub(channel_);\r\n        reader_ = stub_->Read(context_.get(), request_);\r\n        if (reader_) {\r\n            reader_ready_ = true;\r\n            success = true;\r\n        }\r\n    }\r\n    reader_ready_ = success;\r\n    return success;\r\n}\r\n\r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14014/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AlexLuya": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14006", "title": "Always get StatusCode.UNKNOWN, Stream removed to python server", "body": "my data.proto likes this:\r\n\r\n```\r\nsyntax = \"proto3\";\r\npackage rpc;\r\nservice Performer {\r\n  rpc carryOut(Image) returns (Objects){}\r\n}\r\n\r\nmessage Objects{\r\n    repeated Object objects=1;\r\n}\r\n\r\nmessage Object{\r\n    string type=1;\r\n}\r\n```\r\nand implementation like this:\r\n\r\n```\r\nclass Performer(data_pb2_grpc.PerformerServicer):\r\n    def __init__(self):\r\n        pass\r\n\r\n    def carryOut(self, req, cxt):\r\n         objs=Objects()\r\n         obj=objs.objects.add()\r\n         obj.type='Person'\r\n         return objs    \r\n```\r\nclient request always get:\r\n\r\n```\r\n    self.res = self.client().carryOut(self.data()) \r\n  File \"/usr/local/lib/python2.7/dist-packages/grpc/_channel.py\", line 484, in __call__\r\n    return _end_unary_response_blocking(state, call, False, deadline)\r\n  File \"/usr/local/lib/python2.7/dist-packages/grpc/_channel.py\", line 434, in _end_unary_response_blocking\r\n    raise _Rendezvous(state, None, None, deadline)\r\ngrpc._channel._Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.UNKNOWN, Stream removed)>\r\n```\r\nand server crash with error: Segmentation fault(written dump)\r\n\r\nand it happens in a laptop with :\r\n\r\n```\r\n ubuntu 16.04\r\n python 2.7.12\r\n grpcio==1.8.4\r\n grpcio-tools==1.8.4\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "subhayu89": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/14001", "title": "Arm architecture grpc is crashing and BUS error as well as segv", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\n Yes\r\nCreate new issues for bugs and feature requests. An issue needs to be actionable. General gRPC discussions and usage questions belong to:\r\n- [grpc.io mailing list](https://groups.google.com/forum/#!forum/grpc-io)\r\n- [StackOverflow, with `grpc` tag](http://stackoverflow.com/questions/tagged/grpc)\r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\n 1.8.4\r\n and C++\r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Linux ubuntu \r\n\r\n Linux tegra-ubuntu 4.4.38 #1 SMP PREEMPT Wed Dec 20 10:09:41 IST 2017 aarch64 aarch64 aarch64 GNU/Linux\r\n\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\n gcc (Ubuntu/Linaro 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n\r\n### What did you do?\r\nIf possible, provide a recipe for reproducing the error. Try being specific and include code snippets if helpful.\r\n\r\ntry running grpc and connecting to a remote host it fails most times and crashes\r\n\r\n\r\n==4213== Thread 2:\r\n==4213== Syscall param epoll_ctl(event) points to uninitialised byte(s)\r\n==4213==    at 0x502F688: epoll_ctl (syscall-template.S:84)\r\n==4213==    by 0x48FA40F: grpc_init_epoll1_linux(bool) (in /usr/local/lib/libgrpc.so.5.0.0-dev)\r\n==4213==  Address 0x691b05c is on thread 2's stack\r\n==4213==  Uninitialised value was created by a stack allocation\r\n==4213==    at 0x48FA280: grpc_init_epoll1_linux(bool) (in /usr/local/lib/libgrpc.so.5.0.0-dev)\r\n==4213== \r\n==4213== Syscall param epoll_pwait(sigmask) points to unaddressable byte(s)\r\n==4213==    at 0x502F424: epoll_pwait (epoll_pwait.c:42)\r\n==4213==    by 0x48F9EFF: ??? (in /usr/local/lib/libgrpc.so.5.0.0-dev)\r\n==4213==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\r\n==4213== \r\n==4213== Thread 4 grpc_executor:\r\n==4213== Syscall param epoll_ctl(event) points to uninitialised byte(s)\r\n==4213==    at 0x502F688: epoll_ctl (syscall-template.S:84)\r\n==4213==    by 0x48F8523: ??? (in /usr/local/lib/libgrpc.so.5.0.0-dev)\r\n==4213==  Address 0x791b16c is on thread 4's stack\r\n==4213==  Uninitialised value was created by a stack allocation\r\n==4213==    at 0x48F8450: ??? (in /usr/local/lib/libgrpc.so.5.0.0-dev)\r\n\r\nvalgrind logs\r\n \r\n\r\n\r\ngrpc trace\r\n\r\nI0115 15:06:21.824595931    7913 ev_epoll1_linux.cc:95]      grpc epoll fd: 8\r\nD0115 15:06:21.824736543    7913 ev_posix.cc:128]            Using polling engine: epoll1\r\nD0115 15:06:21.824897316    7913 dns_resolver.cc:294]        Using native dns resolver\r\n\r\n\r\n### What did you expect to see?\r\n GRPC call should not crash\r\n \r\n### What did you see instead?\r\n it crashed\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\nwith a lower version of GRPC (v1.6.0)\r\nstill its crashing but bit more grpc logs\r\nI0119 17:43:48.275954099 24766 init.c:106] grpc_register_plugin(init=0x7f79cc83c8, destroy=0x7f79cc8488)\r\nI0119 17:43:48.276172757 24766 init.c:106] grpc_register_plugin(init=0x7f79cb3f30, destroy=0x7f79cb3f58)\r\nI0119 17:43:48.276249334 24766 init.c:106] grpc_register_plugin(init=0x7f79cd83d0, destroy=0x7f79cd83f8)\r\nI0119 17:43:48.276311767 24766 init.c:106] grpc_register_plugin(init=0x7f79ce6398, destroy=0x7f79ce63e8)\r\nI0119 17:43:48.276371703 24766 init.c:106] grpc_register_plugin(init=0x7f79ce06d0, destroy=0x7f79ce0738)\r\nI0119 17:43:48.276429048 24766 init.c:106] grpc_register_plugin(init=0x7f79ce71f0, destroy=0x7f79ce7210)\r\nI0119 17:43:48.276485912 24766 init.c:106] grpc_register_plugin(init=0x7f79cf10d0, destroy=0x7f79cf10e0)\r\nI0119 17:43:48.276542425 24766 init.c:106] grpc_register_plugin(init=0x7f79ced438, destroy=0x7f79ced478)\r\nI0119 17:43:48.276598266 24766 init.c:106] grpc_register_plugin(init=0x7f79cf2718, destroy=0x7f79cf2740)\r\nI0119 17:43:48.276653978 24766 init.c:106] grpc_register_plugin(init=0x7f79cf4388, destroy=0x7f79cf43b0)\r\nI0119 17:43:48.276710459 24766 init.c:106] grpc_register_plugin(init=0x7f79cf4f60, destroy=0x7f79cf4ff8)\r\nI0119 17:43:48.276768635 24766 init.c:106] grpc_register_plugin(init=0x7f79cf7300, destroy=0x7f79cf73c0)\r\nI0119 17:43:48.276824284 24766 init.c:106] grpc_register_plugin(init=0x7f79cf78b8, destroy=0x7f79cf78f0)\r\nI0119 17:43:48.276879484 24766 init.c:106] grpc_register_plugin(init=0x7f79cf79b8, destroy=0x7f79cf79d8)\r\nI0119 17:43:48.276934365 24766 init.c:106] grpc_register_plugin(init=0x7f79cf8fc8, destroy=0x7f79cf9058)\r\nI0119 17:43:48.276988958 24766 init.c:106] grpc_register_plugin(init=0x7f79cfbd20, destroy=0x7f79cfbd38)\r\nI0119 17:43:48.277042974 24766 init.c:106] grpc_register_plugin(init=0x7f79cfc418, destroy=0x7f79cfc470)\r\nI0119 17:43:48.277096927 24766 init.c:106] grpc_register_plugin(init=0x7f79cfc7b0, destroy=0x7f79cfc7e8)\r\nI0119 17:43:48.279344917 24766 init.c:168] grpc_init(void)\r\nI0119 17:43:48.279476983 24766 init.c:168] grpc_init(void)\r\nI0119 17:43:48.279515831 24766 channel_create.c:88] grpc_insecure_channel_create(target=10.142.138.225:17001, args=0x7f788e5048, reserved=(nil))\r\nI0119 17:43:48.279789562 24766 init.c:168] grpc_init(void)\r\nI0119 17:43:48.279826714 24766 init.c:173] grpc_shutdown(void)\r\nI0119 17:43:48.279866043 24766 init.c:173] grpc_shutdown(void)\r\nI0119 17:43:48.279901307 24766 channel.c:304] grpc_channel_register_call(channel=0x7f740197a0, method=/om.rpc.Registration/Register, host=(null), reserved=(nil))\r\nI0119 17:43:48.279932923 24766 channel.c:304] grpc_channel_register_call(channel=0x7f740197a0, method=/om.rpc.Registration/GetRegisteredDevices, host=(null), reserved=(nil))\r\nI0119 17:43:48.279961436 24766 channel.c:304] grpc_channel_register_call(channel=0x7f740197a0, method=/om.rpc.Registration/SendHeartbeat, host=(null), reserved=(nil))\r\nI0119 17:43:48.279988412 24766 channel.c:304] grpc_channel_register_call(channel=0x7f740197a0, method=/om.rpc.Registration/GetConnectedDevices, host=(null), reserved=(nil))\r\nI0119 17:43:48.280101437 24766 init.c:168] grpc_init(void)\r\nI0119 17:43:48.280139837 24766 completion_queue.c:1234] grpc_completion_queue_destroy(cq=(nil))\r\nI0119 17:43:48.280164478 24766 completion_queue.c:1227] grpc_completion_queue_shutdown(cq=(nil))\r\nSegmentation fault (core dumped)\r\n @subhayu89\r\n  \r\n            ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/14001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dgquintas": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13999", "title": "h2_census_test resource_quota_server flaky on macos since 2018-01-10", "body": "See https://screenshot.googleplex.com/PB6WVs5BkWK\r\n\r\nExample: https://sponge.corp.google.com/target?id=e7357717-490c-45ea-a279-3536834ba801&target=github/grpc/c_macos_dbg_native&searchFor=&show=FAILED&sortBy=STATUS", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13999/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13867", "title": "New Failure: head_of_line_blocking_bad_client_test", "body": "- Test: head_of_line_blocking_bad_client_test\n- Poll Strategy: poll\n- URL: https://kokoro2.corp.google.com/job/grpc/job/macos/job/master/job/grpc_basictests_opt/834", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13846", "title": "h2_ssl_proxy_test times out for several testcases", "body": "Examples:\r\n- invoke_large_request: #13214 \r\n- cancel_after_round_trip: #13160 \r\n- stream_compression_ping_pong: #13762 \r\n\r\nNew ones:\r\n- cancel_after_invoke,  http://sponge/b79df207-7faa-4a50-b999-ad999349a14c\r\n- ping_pong_streaming, http://sponge/7e0f2851-8c10-4b60-8a81-257245e45467", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13845", "title": "New Failure: h2_full_nosec_test.exe shutdown_finishes_calls", "body": "- Test: h2_full_nosec_test.exe shutdown_finishes_calls\n- Poll Strategy: None\n- URL: https://kokoro2.corp.google.com/job/grpc/job/windows/job/master/job/grpc_basictests_dbg/806", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13845/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13818", "title": "New Failure: objc-build-example-switftsample", "body": "- Test: objc-build-example-switftsample\n- Poll Strategy: None\n- URL: https://kokoro2.corp.google.com/job/grpc/job/macos/job/master/job/grpc_basictests_dbg/790", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13766", "title": "New Failure: json_run_localhost:cpp_generic_async_streaming_qps_unconstrained_1mps_secure", "body": "- Test: json_run_localhost:cpp_generic_async_streaming_qps_unconstrained_1mps_secure\n- Poll Strategy: epollex\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_c_cpp_dbg/747", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13765", "title": "New Failure: py27.test.protoc_plugin._split_definitions_test.SameProtoMid2016ProtocStyleTest", "body": "- Test: py27.test.protoc_plugin._split_definitions_test.SameProtoMid2016ProtocStyleTest\n- Poll Strategy: None\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_multilang/764", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13765/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13695", "title": "New Failure: json_run_localhost:cpp_protobuf_async_client_sync_server_streaming_qps_unconstrained_secure", "body": "- Test: json_run_localhost:cpp_protobuf_async_client_sync_server_streaming_qps_unconstrained_secure\n- Poll Strategy: epollex\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_c_cpp_dbg/675", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13692", "title": "New Failure: h2_full+trace_nosec_test invoke_large_request", "body": "- Test: h2_full+trace_nosec_test invoke_large_request\n- Poll Strategy: poll\n- URL: https://kokoro2.corp.google.com/job/grpc/job/macos/job/master/job/grpc_basictests_opt/648", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13691", "title": "New Failure: bm_fullstack_streaming_ping_pong --benchmark_filter=BM_StreamingPingPongMsgs<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>$", "body": "- Test: bm_fullstack_streaming_ping_pong --benchmark_filter=BM_StreamingPingPongMsgs<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>$\n- Poll Strategy: epollex\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/sanitizer/job/grpc_cpp_asan/186", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13664", "title": "TIMEOUT: json_run_localhost:cpp_protobuf_async_streaming_from_client_1channel_1MB GRPC_POLL_STRATEGY=epollex", "body": "https://sponge.corp.google.com/target?id=c1222ed4-15c7-4210-8d58-6cf98bd34701&target=github/grpc/c%2B%2B_linux_dbg_native&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\nTimeout\r\n0:flowed=2195753742:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.646754886   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2197850928:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.647997354   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2199948114:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.648679491   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2202045300:peer_initwin=4194304:t_win=1048593:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.650587952   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2208336858:peer_initwin=4194304:t_win=2097181:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.651233197   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by transport [fc:pending=0:flowed=2210434044:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.651420128   25659 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2210434044:peer_initwin=4194304:t_win=3145774:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.652297637   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by transport [fc:pending=0:flowed=2213579823:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.653791281   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2216725602:peer_initwin=4194304:t_win=1048525:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.654992890   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2217774195:peer_initwin=4194304:t_win=3145711:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.656032973   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by transport [fc:pending=0:flowed=2220919974:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.656595015   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2220919974:peer_initwin=4194304:t_win=4194236:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.658144130   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by transport [fc:pending=0:flowed=2225114346:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.659006700   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2227211532:peer_initwin=4194304:t_win=2096982:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.660201900   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2229308718:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.661133299   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2231405904:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.661836674   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2233503090:peer_initwin=4194304:t_win=1048593:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.662964576   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2235600276:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.663649808   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2237697462:peer_initwin=4194304:t_win=1048593:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.664807414   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2239794648:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.665727374   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2241891834:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.666668394   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2243989020:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.667386200   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2246086206:peer_initwin=4194304:t_win=1048593:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.668344983   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2248183392:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.669258387   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2250280578:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.670180075   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2252377764:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.671059492   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2254474950:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.672031933   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2256572136:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.672762670   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2258669322:peer_initwin=4194304:t_win=1048593:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.673831776   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2260766508:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.675142881   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2262863694:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.675825326   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2264960880:peer_initwin=4194304:t_win=1048593:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.677775965   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2271252438:peer_initwin=4194304:t_win=785559:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.677861134   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2271252438:peer_initwin=4194304:t_win=3145774:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.678832772   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by transport [fc:pending=0:flowed=2274398217:peer_initwin=4194304:t_win=0:s_win=0:s_delta=-4194304]\r\nI1206 19:02:01.678894367   24144 driver.cc:439]              Finishing clients\r\nI1206 19:02:01.679093402   24150 qps_worker.cc:200]          RunClientBody: Message read\r\nD1206 19:02:01.679848607   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2276495403:peer_initwin=4194304:t_win=2097118:s_win=0:s_delta=-4194304]\r\nD1206 19:02:01.680620847   25626 writing.cc:142]             ipv6:[::1]:27844:0x7ff8c80031f0 stream 1 stalled by stream [fc:pending=0:flowed=2278592589:peer_initwin=4194304:t_win=1048593:s_win=0:s_delta=-4194304]\r\nI1206 19:02:01.681002023   24150 qps_worker.cc:209]          RunClientBody: Mark response given\r\nI1206 19:02:01.681026047   24150 qps_worker.cc:212]          RunClientBody: Awaiting Threads Completion\r\nI1206 19:02:01.681761320   24144 driver.cc:453]              Received final status from client 0\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13652", "title": "New Failure: udp_server_test", "body": "- Test: udp_server_test\n- Poll Strategy: epollex\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_c_cpp_dbg/617", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13651", "title": "New Failure: End2endTest.ChannelState", "body": "- Test: End2endTest.ChannelState\n- Poll Strategy: poll\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/sanitizer/job/grpc_cpp_asan/168", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13650", "title": "New Failure: httpscli_test", "body": "- Test: httpscli_test\n- Poll Strategy: poll\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_c_cpp_dbg/611", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13528", "title": "Data race in h2_proxy_test cancel_after_invoke GRPC_POLL_STRATEGY=poll-cv ", "body": "https://sponge.corp.google.com/target?id=627454f3-767d-4513-839f-3617ffb93e8b&target=github/grpc/c_linux_tsan_native&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\nFailure\r\n_cancel_after_invoke/chttp2/fullstack+proxy/cancel [5 ops]\r\nD1128 19:04:30.036932939   29578 proxy.cc:89]                PROXY ADDR:localhost:10727 BACKEND:localhost:10932\r\nI1128 19:04:30.039800378   29578 cancel_after_invoke.cc:41]  Running test: test_cancel_after_invoke/chttp2/fullstack+proxy/deadline [5 ops]\r\nD1128 19:04:30.043136873   29578 proxy.cc:89]                PROXY ADDR:localhost:5900 BACKEND:localhost:11346\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=29578)\r\n  Write of size 8 at 0x7d900000e028 by main thread (mutexes: write M53):\r\n    #0 pthread_cond_destroy /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1157 (h2_proxy_test+0x000000450b2c)\r\n    #1 gpr_cv_destroy /var/local/git/grpc/src/core/lib/support/sync_posix.cc:72:46 (h2_proxy_test+0x000000642c18)\r\n    #2 grpc_executor_set_threading /var/local/git/grpc/src/core/lib/iomgr/executor.cc:127:7 (h2_proxy_test+0x0000005d87ae)\r\n    #3 grpc_executor_shutdown /var/local/git/grpc/src/core/lib/iomgr/executor.cc:141:3 (h2_proxy_test+0x0000005d91da)\r\n    #4 grpc_shutdown /var/local/git/grpc/src/core/lib/surface/init.cc:160:5 (h2_proxy_test+0x0000006348b9)\r\n    #5 main /var/local/git/grpc/test/core/end2end/fixtures/h2_proxy.cc:126:3 (h2_proxy_test+0x0000004b0f33)\r\n\r\n  Previous read of size 8 at 0x7d900000e028 by thread T8 (mutexes: write M105):\r\n    #0 pthread_cond_signal /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1143 (h2_proxy_test+0x0000004508c0)\r\n    #1 gpr_cv_signal /var/local/git/grpc/src/core/lib/support/sync_posix.cc:90:45 (h2_proxy_test+0x000000642e48)\r\n    #2 executor_push(grpc_exec_ctx*, grpc_closure*, grpc_error*, bool) /var/local/git/grpc/src/core/lib/iomgr/executor.cc:249:9 (h2_proxy_test+0x0000005d9953)\r\n    #3 executor_push_short(grpc_exec_ctx*, grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/executor.cc:279:3 (h2_proxy_test+0x0000005d928d)\r\n    #4 grpc_closure_sched(char const*, int, grpc_exec_ctx*, grpc_closure*, grpc_error*) /var/local/git/grpc/./src/core/lib/iomgr/closure.h:308:5 (h2_proxy_test+0x00000053be4e)\r\n    #5 resolve_address_impl(grpc_exec_ctx*, char const*, char const*, grpc_pollset_set*, grpc_closure*, grpc_resolved_addresses**) /var/local/git/grpc/src/core/lib/iomgr/resolve_address_posix.cc:185:3 (h2_proxy_test+0x0000005494e0)\r\n    #6 dns_start_resolving_locked(grpc_exec_ctx*, dns_resolver*) /var/local/git/grpc/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc:207:3 (h2_proxy_test+0x0000006cd245)\r\n    #7 dns_channel_saw_error_locked(grpc_exec_ctx*, grpc_resolver*) /var/local/git/grpc/src/core/ext/filters/client_channel/resolver/dns/native/dns_resolver.cc:117:5 (h2_proxy_test+0x0000006ccea7)\r\n    #8 grpc_resolver_channel_saw_error_locked /var/local/git/grpc/src/core/ext/filters/client_channel/resolver.cc:74:3 (h2_proxy_test+0x0000005a4a6a)\r\n    #9 on_lb_policy_state_changed_locked(grpc_exec_ctx*, void*, grpc_error*) /var/local/git/grpc/src/core/ext/filters/client_channel/client_channel.cc:271:7 (h2_proxy_test+0x0000005a1fe3)\r\n    #10 grpc_combiner_continue_exec_ctx /var/local/git/grpc/src/core/lib/iomgr/combiner.cc:260:5 (h2_proxy_test+0x0000005b474f)\r\n    #11 grpc_exec_ctx_flush /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:93:17 (h2_proxy_test+0x000000546a42)\r\n    #12 pollset_work(grpc_exec_ctx*, grpc_pollset*, grpc_pollset_worker**, long) /var/local/git/grpc/src/core/lib/iomgr/ev_poll_posix.cc:1057:22 (h2_proxy_test+0x0000005cfee1)\r\n    #13 grpc_pollset_work /var/local/git/grpc/src/core/lib/iomgr/ev_posix.cc:232:10 (h2_proxy_test+0x000000545ce2)\r\n    #14 run_poller(grpc_exec_ctx*, void*, grpc_error*) /var/local/git/grpc/src/core/ext/filters/client_channel/backup_poller.cc:116:21 (h2_proxy_test+0x0000005e1da0)\r\n    #15 exec_ctx_run(grpc_exec_ctx*, grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:70:3 (h2_proxy_test+0x000000546cd3)\r\n    #16 grpc_exec_ctx_flush /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:90:9 (h2_proxy_test+0x000000546a27)\r\n    #17 run_some_timers(grpc_exec_ctx*) /var/local/git/grpc/src/core/lib/iomgr/timer_manager.cc:129:3 (h2_proxy_test+0x00000055e322)\r\n    #18 timer_main_loop(grpc_exec_ctx*) /var/local/git/grpc/src/core/lib/iomgr/timer_manager.cc:231:9 (h2_proxy_test+0x00000055e016)\r\n    #19 timer_thread(void*) /var/local/git/grpc/src/core/lib/iomgr/timer_manager.cc:279:3 (h2_proxy_test+0x00000055df57)\r\n    #20 thread_body(void*) /var/local/git/grpc/src/core/lib/support/thd_posix.cc:42:3 (h2_proxy_test+0x0000006434ad)\r\n\r\n  Location is heap block of size 8192 at 0x7d900000e000 allocated by main thread:\r\n    #0 calloc /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:612 (h2_proxy_test+0x0000004435ad)\r\n    #1 zalloc_with_calloc(unsigned long) /var/local/git/grpc/src/core/lib/support/alloc.cc:27:53 (h2_proxy_test+0x00000063b06f)\r\n    #2 gpr_zalloc /var/local/git/grpc/src/core/lib/support/alloc.cc:68:7 (h2_proxy_test+0x00000063add1)\r\n    #3 grpc_executor_set_threading /var/local/git/grpc/src/core/lib/iomgr/executor.cc:98:24 (h2_proxy_test+0x0000005d8321)\r\n    #4 grpc_executor_init /var/local/git/grpc/src/core/lib/iomgr/executor.cc:137:3 (h2_proxy_test+0x0000005d9197)\r\n    #5 grpc_iomgr_init /var/local/git/grpc/src/core/lib/iomgr/iomgr.cc:53:3 (h2_proxy_test+0x0000005476ee)\r\n    #6 grpc_init /var/local/git/grpc/src/core/lib/surface/init.cc:130:5 (h2_proxy_test+0x0000006345cf)\r\n    #7 main /var/local/git/grpc/test/core/end2end/fixtures/h2_proxy.cc:120:3 (h2_proxy_test+0x0000004b0ea8)\r\n\r\n  Mutex M53 (0x000001a823f8) created at:\r\n    #0 pthread_mutex_init /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1169 (h2_proxy_test+0x000000437755)\r\n    #1 gpr_mu_init /var/local/git/grpc/src/core/lib/support/sync_posix.cc:37:14 (h2_proxy_test+0x0000006428ec)\r\n    #2 do_basic_init() /var/local/git/grpc/src/core/lib/surface/init.cc:65:3 (h2_proxy_test+0x00000063470d)\r\n    #3 pthread_once /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1382 (h2_proxy_test+0x0000004457fe)\r\n    #4 gpr_once_init /var/local/git/grpc/src/core/lib/support/sync_posix.cc:99:14 (h2_proxy_test+0x000000642f38)\r\n    #5 grpc_init /var/local/git/grpc/src/core/lib/surface/init.cc:119:3 (h2_proxy_test+0x000000634523)\r\n    #6 main /var/local/git/grpc/test/core/end2end/fixtures/h2_proxy.cc:120:3 (h2_proxy_test+0x0000004b0ea8)\r\n\r\n  Mutex M105 (0x7d900000e000) created at:\r\n    #0 pthread_mutex_init /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:1169 (h2_proxy_test+0x000000437755)\r\n    #1 gpr_mu_init /var/local/git/grpc/src/core/lib/support/sync_posix.cc:37:14 (h2_proxy_test+0x0000006428ec)\r\n    #2 grpc_executor_set_threading /var/local/git/grpc/src/core/lib/iomgr/executor.cc:100:7 (h2_proxy_test+0x0000005d83ac)\r\n    #3 grpc_executor_init /var/local/git/grpc/src/core/lib/iomgr/executor.cc:137:3 (h2_proxy_test+0x0000005d9197)\r\n    #4 grpc_iomgr_init /var/local/git/grpc/src/core/lib/iomgr/iomgr.cc:53:3 (h2_proxy_test+0x0000005476ee)\r\n    #5 grpc_init /var/local/git/grpc/src/core/lib/surface/init.cc:130:5 (h2_proxy_test+0x0000006345cf)\r\n    #6 main /var/local/git/grpc/test/core/end2end/fixtures/h2_proxy.cc:120:3 (h2_proxy_test+0x0000004b0ea8)\r\n\r\n  Thread T8 (tid=29651, running) created by thread T2 at:\r\n    #0 pthread_create /llvm/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:954 (h2_proxy_test+0x00000044d903)\r\n    #1 gpr_thd_new /var/local/git/grpc/src/core/lib/support/thd_posix.cc:66:21 (h2_proxy_test+0x000000643393)\r\n    #2 start_timer_thread_and_unlock() /var/local/git/grpc/src/core/lib/iomgr/timer_manager.cc:96:3 (h2_proxy_test+0x00000055deba)\r\n    #3 run_some_timers(grpc_exec_ctx*) /var/local/git/grpc/src/core/lib/iomgr/timer_manager.cc:113:5 (h2_proxy_test+0x00000055e279)\r\n    #4 timer_main_loop(grpc_exec_ctx*) /var/local/git/grpc/src/core/lib/iomgr/timer_manager.cc:231:9 (h2_proxy_test+0x00000055e016)\r\n    #5 timer_thread(void*) /var/local/git/grpc/src/core/lib/iomgr/timer_manager.cc:279:3 (h2_proxy_test+0x00000055df57)\r\n    #6 thread_body(void*) /var/local/git/grpc/src/core/lib/support/thd_posix.cc:42:3 (h2_proxy_test+0x0000006434ad)\r\n\r\nSUMMARY: ThreadSanitizer: data race /var/local/git/grpc/src/core/lib/support/sync_posix.cc:72:46 in gpr_cv_destroy\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13441", "title": "New Failure: client_channel_stress_test", "body": "- Test: client_channel_stress_test\n- Poll Strategy: poll\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/sanitizer/job/grpc_cpp_tsan/79", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13430", "title": "New Failure: qps_json_driver:inproc_cpp_generic_async_streaming_qps_unconstrained_10mps_insecure", "body": "- Test: qps_json_driver:inproc_cpp_generic_async_streaming_qps_unconstrained_10mps_insecure\n- Poll Strategy: epollex\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_c_cpp_opt/166", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13429", "title": "New Failure: bm_fullstack_streaming_pump --benchmark_filter=BM_PumpStreamServerToClient<MinSockPair>$", "body": "- Test: bm_fullstack_streaming_pump --benchmark_filter=BM_PumpStreamServerToClient<MinSockPair>$\n- Poll Strategy: epollex\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_c_cpp_opt/164", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13428", "title": "New Failure: py34.test.protoc_plugin.beta_python_plugin_test.PythonPluginTest", "body": "- Test: py34.test.protoc_plugin.beta_python_plugin_test.PythonPluginTest\n- Poll Strategy: None\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_multilang/161", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13427", "title": "New Failure: qps_json_driver:inproc_cpp_generic_async_streaming_qps_unconstrained_2waysharedcq_insecure", "body": "- Test: qps_json_driver:inproc_cpp_generic_async_streaming_qps_unconstrained_2waysharedcq_insecure\n- Poll Strategy: epollex\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_c_cpp_dbg/149", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13424", "title": "New Failure: json_run_localhost:cpp_protobuf_async_streaming_from_server_ping_pong_secure", "body": "- Test: json_run_localhost:cpp_protobuf_async_streaming_from_server_ping_pong_secure\n- Poll Strategy: poll\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_c_cpp_opt/158", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13385", "title": "cmake/build/Debug/h2_fakesec_test.exe call_creds fails", "body": "https://sponge.corp.google.com/target?id=b9d9b7fe-e116-4043-afde-1f148c01afcd&target=github/grpc/c_windows_dbg_native&searchFor=&show=FAILED&sortBy=STATUS\r\n\r\n```\r\nFailure\r\nD1109 14:58:22.948000000  4236 test_config.cc:388] test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nD1109 14:58:22.948000000  4236 dns_resolver.cc:307] Using native dns resolver\r\nI1109 14:58:22.948000000  4236 call_creds.cc:47] Running test: test_request_response_with_payload_and_call_creds/chttp2/fake_secure_fullstack\r\nI1109 14:58:25.010000000  4236 call_creds.cc:110] server peer:\r\nI1109 14:58:25.010000000  4236 call_creds.cc:111] \tauthenticated: NO\r\nI1109 14:58:25.010000000  4236 call_creds.cc:117] \tall properties:\r\nI1109 14:58:25.010000000  4236 call_creds.cc:120] \t\ttransport_security_type: fake\r\nI1109 14:58:25.010000000  4236 call_creds.cc:110] client peer:\r\nI1109 14:58:25.010000000  4236 call_creds.cc:111] \tauthenticated: NO\r\nI1109 14:58:25.010000000  4236 call_creds.cc:117] \tall properties:\r\nI1109 14:58:25.010000000  4236 call_creds.cc:120] \t\ttransport_security_type: fake\r\nE1109 14:58:25.010000000  4236 security_context.cc:46] Method is client-side only.\r\nI1109 14:58:25.010000000  4236 call_creds.cc:47] Running test: test_request_response_with_payload_and_overridden_call_creds/chttp2/fake_secure_fullstack\r\nI1109 14:58:26.245000000  4236 call_creds.cc:110] server peer:\r\nI1109 14:58:26.245000000  4236 call_creds.cc:111] \tauthenticated: NO\r\nI1109 14:58:26.245000000  4236 call_creds.cc:117] \tall properties:\r\nI1109 14:58:26.245000000  4236 call_creds.cc:120] \t\ttransport_security_type: fake\r\nI1109 14:58:26.245000000  4236 call_creds.cc:110] client peer:\r\nI1109 14:58:26.245000000  4236 call_creds.cc:111] \tauthenticated: NO\r\nI1109 14:58:26.245000000  4236 call_creds.cc:117] \tall properties:\r\nI1109 14:58:26.245000000  4236 call_creds.cc:120] \t\ttransport_security_type: fake\r\nE1109 14:58:26.245000000  4236 security_context.cc:46] Method is client-side only.\r\nI1109 14:58:26.245000000  4236 call_creds.cc:47] Running test: test_request_response_with_payload_and_deleted_call_creds/chttp2/fake_secure_fullstack\r\nI1109 14:58:27.463000000  4236 call_creds.cc:110] server peer:\r\nI1109 14:58:27.463000000  4236 call_creds.cc:111] \tauthenticated: NO\r\nI1109 14:58:27.463000000  4236 call_creds.cc:117] \tall properties:\r\nI1109 14:58:27.463000000  4236 call_creds.cc:120] \t\ttransport_security_type: fake\r\nI1109 14:58:27.463000000  4236 call_creds.cc:110] client peer:\r\nI1109 14:58:27.463000000  4236 call_creds.cc:111] \tauthenticated: NO\r\nI1109 14:58:27.463000000  4236 call_creds.cc:117] \tall properties:\r\nI1109 14:58:27.463000000  4236 call_creds.cc:120] \t\ttransport_security_type: fake\r\nE1109 14:58:27.463000000  4236 security_context.cc:46] Method is client-side only.\r\nI1109 14:58:27.463000000  4236 call_creds.cc:47] Running test: test_request_with_server_rejecting_client_creds/chttp2/fake_secure_fullstack\r\nD1109 14:58:29.557000000  4236 port_server_client.cc:141] failed port pick from server: retrying [{\"created\":\"@1510268309.557000000\",\"description\":\"Failed HTTP requests to all targets\",\"file\":\"T:\\src\\github\\grpc\\workspace_c_windows_dbg_native\\src\\core\\lib\\http\\httpcli.cc\",\"file_line\":214,\"referenced_errors\":[{\"created\":\"@1510268308.526000000\",\"description\":\"Failed HTTP/1 client request\",\"file\":\"T:\\src\\github\\grpc\\workspace_c_windows_dbg_native\\src\\core\\lib\\http\\httpcli.cc\",\"file_line\":116,\"referenced_errors\":[{\"created\":\"@1510268308.526000000\",\"description\":\"OS Error\",\"file\":\"T:\\src\\github\\grpc\\workspace_c_windows_dbg_native\\src\\core\\lib\\iomgr\\tcp_client_windows.cc\",\"file_line\":106,\"os_error\":\"No connection could be made because the target machine actively refused it.\\r\\n\",\"syscall\":\"ConnectEx\",\"target_address\":\"ipv6:[::1]:32766\",\"wsa_error\":10061},{\"created\":\"@1510268309.557000000\",\"description\":\"OS Error\",\"file\":\"T:\\src\\github\\grpc\\workspace_c_windows_dbg_native\\src\\core\\lib\\iomgr\\tcp_client_windows.cc\",\"file_line\":106,\"os_error\":\"No connection could be made because the target machine actively refused it.\\r\\n\",\"syscall\":\"ConnectEx\",\"target_address\":\"ipv4:127.0.0.1:32766\",\"wsa_error\":10061}]}]}]\r\nE1109 14:58:32.807000000  4236 call_creds.cc:452] assertion failed: status == GRPC_STATUS_UNAUTHENTICATED\r\nAbort handler called.\r\n*** 0: 0000000000EDB71F print_current_stack - 0000000000EDB680\r\n*** 1: 0000000000EDBC8B abort_handler - 0000000000EDBC60\r\n*** 2: 0000000074A5F0CB raise - 0000000074A5ED60\r\n*** 3: 0000000074A60622 abort - 0000000074A605F0\r\n*** 4: 0000000000DB6357 test_request_with_server_rejecting_client_creds - 0000000000DB5CE0\r\n*** 5: 0000000000DB664A call_creds - 0000000000DB6590\r\n*** 6: 0000000000DAD26E grpc_end2end_tests - 0000000000DAC6C0\r\n*** 7: 0000000000DAC3DA main - 0000000000DAC360\r\n*** 8: 000000000101765E invoke_main - 0000000001017640\r\n*** 9: 00000000010174C0 __scrt_common_main_seh - 0000000001017370\r\n*** 10: 000000000101735D __scrt_common_main - 0000000001017350\r\n*** 11: 0000000001017678 mainCRTStartup - 0000000001017670\r\n*** 12: 000000007696336A BaseThreadInitThunk - 0000000076963358\r\n*** 13: 0000000077599902 RtlInitializeExceptionChain - 000000007759989F\r\n*** 14: 00000000775998D5 RtlInitializeExceptionChain - 000000007759989F\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13371", "title": "C++-ize backoff code", "body": "", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13337", "title": "grpclb_end2end_test --gtest_filter=SingleBalancerWithClientLoadReportingTest.Vanilla Flaky", "body": "This has happened, so far, only under epollex:\r\n\r\nhttps://sponge.corp.google.com/target?id=a48fdbb3-0a8b-43f4-99de-4434ea682f4d&target=github/grpc/c%2B%2B_linux_dbg_native&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\nFailure\r\nD1109 16:45:28.231035420   10386 ev_posix.cc:135]            Using polling engine: epollex\r\nD1109 16:45:28.231135648   10386 dns_resolver.cc:307]        Using native dns resolver\r\nD1109 16:45:28.231185382   10386 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nNote: Google Test filter = SingleBalancerWithClientLoadReportingTest.Vanilla\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from SingleBalancerWithClientLoadReportingTest\r\n[ RUN      ] SingleBalancerWithClientLoadReportingTest.Vanilla\r\nI1109 16:45:28.233029991   10386 grpclb_end2end_test.cc:527] starting backend server on port 10844\r\nI1109 16:45:28.233675364   10396 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 16:45:28.275250697   10386 grpclb_end2end_test.cc:532] backend server startup complete\r\nI1109 16:45:28.318820467   10386 grpclb_end2end_test.cc:527] starting backend server on port 13813\r\nI1109 16:45:28.319051285   10628 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 16:45:28.375333630   10386 grpclb_end2end_test.cc:532] backend server startup complete\r\nI1109 16:45:28.376622235   10386 grpclb_end2end_test.cc:527] starting backend server on port 4845\r\nI1109 16:45:28.376796241   10824 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 16:45:28.378011996   10386 grpclb_end2end_test.cc:532] backend server startup complete\r\nI1109 16:45:28.436125418   10386 grpclb_end2end_test.cc:527] starting backend server on port 15682\r\nI1109 16:45:28.436322541   11000 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 16:45:28.437976680   10386 grpclb_end2end_test.cc:532] backend server startup complete\r\nI1109 16:45:28.441480860   10386 grpclb_end2end_test.cc:527] starting balancer server on port 18940\r\nI1109 16:45:28.442276738   11040 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 16:45:28.443835209   10386 grpclb_end2end_test.cc:532] balancer server startup complete\r\nI1109 16:45:28.445408907   11042 grpclb_end2end_test.cc:187] LB[0x1d44de0]: BalanceLoad\r\nI1109 16:45:28.445718027   11042 grpclb_end2end_test.cc:191] LB[0x1d44de0]: recv msg 'initial_request {\r\n  name: \"servername_not_used\"\r\n}\r\n'\r\nI1109 16:45:28.445833605   11042 grpclb_end2end_test.cc:303] LB[0x1d44de0]: sleeping for 0 ms...\r\nI1109 16:45:28.445871082   11042 grpclb_end2end_test.cc:309] LB[0x1d44de0]: Woke up! Sending response 'server_list {\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 10844\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 13813\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 4845\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 15682\r\n  }\r\n}\r\n'\r\nI1109 16:45:28.445951485   10386 grpclb.cc:530]              Missing LB token for backend address 'ipv4:127.0.0.1:10844'. The empty token will be used instead\r\nI1109 16:45:28.445969157   10386 grpclb.cc:530]              Missing LB token for backend address 'ipv4:127.0.0.1:13813'. The empty token will be used instead\r\nI1109 16:45:28.445973716   10386 grpclb.cc:530]              Missing LB token for backend address 'ipv4:127.0.0.1:4845'. The empty token will be used instead\r\nI1109 16:45:28.445977350   10386 grpclb.cc:530]              Missing LB token for backend address 'ipv4:127.0.0.1:15682'. The empty token will be used instead\r\nI1109 16:45:28.448449501   10386 grpclb_end2end_test.cc:432] Performed 4 warm up requests (a multiple of 1) against the backends. 4 succeeded, 0 failed, 0 dropped.\r\nI1109 16:45:30.445298813   11042 grpclb_end2end_test.cc:224] LB[0x1d44de0]: recv client load report msg: 'client_stats {\r\n  timestamp {\r\n    seconds: 1510245930\r\n    nanos: 445027618\r\n  }\r\n  num_calls_started: 404\r\n  num_calls_finished: 404\r\n  num_calls_finished_known_received: 404\r\n}\r\n'\r\nI1109 16:45:30.445352326   11042 grpclb_end2end_test.cc:249] LB[0x1d44de0]: done\r\nI1109 16:45:30.445439329   10386 grpclb_end2end_test.cc:140] Backend: shut down\r\nI1109 16:45:30.445461589   10386 grpclb_end2end_test.cc:551] backend about to shutdown\r\nI1109 16:45:30.454492229   10386 grpclb_end2end_test.cc:554] backend shutdown completed\r\nI1109 16:45:30.454523699   10386 grpclb_end2end_test.cc:140] Backend: shut down\r\nI1109 16:45:30.454531394   10386 grpclb_end2end_test.cc:551] backend about to shutdown\r\nI1109 16:45:30.461557586   10386 grpclb_end2end_test.cc:554] backend shutdown completed\r\nI1109 16:45:30.461601202   10386 grpclb_end2end_test.cc:140] Backend: shut down\r\nI1109 16:45:30.461607723   10386 grpclb_end2end_test.cc:551] backend about to shutdown\r\nI1109 16:45:30.466943582   10386 grpclb_end2end_test.cc:554] backend shutdown completed\r\nI1109 16:45:30.466970442   10386 grpclb_end2end_test.cc:140] Backend: shut down\r\nI1109 16:45:30.466978101   10386 grpclb_end2end_test.cc:551] backend about to shutdown\r\nI1109 16:45:31.806506148   11042 grpclb_end2end_test.cc:187] LB[0x1d44de0]: BalanceLoad\r\nI1109 16:45:31.806609995   11042 grpclb_end2end_test.cc:191] LB[0x1d44de0]: recv msg 'initial_request {\r\n  name: \"servername_not_used\"\r\n}\r\n'\r\nI1109 16:45:31.806695832   11042 grpclb_end2end_test.cc:303] LB[0x1d44de0]: sleeping for 0 ms...\r\nI1109 16:45:31.806736578   11042 grpclb_end2end_test.cc:309] LB[0x1d44de0]: Woke up! Sending response 'server_list {\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 10844\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 13813\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 4845\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 15682\r\n  }\r\n}\r\n'\r\nI1109 16:45:40.478322863   10386 grpclb_end2end_test.cc:554] backend shutdown completed\r\nI1109 16:45:40.478360479   10386 grpclb_end2end_test.cc:264] LB[0x1d44de0]: shut down\r\nI1109 16:45:40.478366811   10386 grpclb_end2end_test.cc:551] balancer about to shutdown\r\nI1109 16:45:40.479812211   11042 grpclb_end2end_test.cc:224] LB[0x1d44de0]: recv client load report msg: ''\r\nE1109 16:45:40.479828807   11042 grpclb_end2end_test.cc:226] assertion failed: request.has_client_stats()\r\n\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13224", "title": "New Flake: AsyncEnd2endTest.ReconnectChannel", "body": "- Test: AsyncEnd2endTest.ReconnectChannel\n- Poll Strategy: epoll1\n- URL: https://kokoro2.corp.google.com/job/grpc/job/ubuntu/job/master/job/grpc_basictests_c_cpp_dbg/56", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/a8891634d32ad9556921faed2707fb304304c900", "message": "Merge pull request #13932 from dgquintas/conn_subchannel\n\nConnected subchannel refactoring"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/4adad9997164a901cd2e5d1b7a636d940a86d581", "message": "fix BUILD"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/156d6e15bb97c803e9b6cc20f13578df6752a398", "message": "Fix bad merge"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/41d27e104fcfcf2a3c25657b99303d61fdd4d947", "message": "Merge branch 'master' of github.com:grpc/grpc into conn_subchannel"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/269ee29e032e3edc62d5b63ce44b5135979249da", "message": "PR comments, round 4"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/be1b7f986e55756ac83b3807ee1d73929fbb3546", "message": "PR comments, round 3"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/7f2eb4bd41d68da0d249299419ec7c1db35f8123", "message": "Merge pull request #13996 from grpc/revert-13794-fix_server_streamz_stats\n\nRevert \"Set error status correctly on server side\""}, {"url": "https://api.github.com/repos/grpc/grpc/commits/dfa2851462809a459dd734090c221ea322064c7d", "message": "PR comments, round 2"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/951f84aea00a1f8a65cf160d7d8f342c30593000", "message": "Revert \"Set error status correctly on server side\""}, {"url": "https://api.github.com/repos/grpc/grpc/commits/70fbe6261376f5e0bf7a9c62f3809730d8c93e3c", "message": "Merge branch 'master' of github.com:grpc/grpc into conn_subchannel"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/baf1ac7af91eab2da6024b05ddb83720d9644b94", "message": "PR comments"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0ea629c61ec70a35075e800bc3f85651f00e746f", "message": "Merge pull request #13912 from ncteisen/nullptr\n\nMissing s/NULL/nullptr"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/53bfe69f707e3729cd5845091a1282771b7e45ee", "message": "Connected subchannel refactoring"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14057", "title": "Make code consistent with backoff spec names", "body": "In particular for `GRPC_ARG_MIN_RECONNECT_BACKOFF_MS` vs [the spec's](https://github.com/grpc/grpc/blob/master/doc/connection-backoff.md) MIN_CONNECT_TIMEOUT\r\n\r\nThis change is motivated by John Hume's input from\r\nhttps://groups.google.com/d/topic/grpc-io/X5LqZM6yUW0/discussion . Thanks!", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12089", "title": "Revamp C++ helloworlds", "body": "Removed classes where unnecessary, formatting, whitespace.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11402", "title": "Fix and parsing utils for compression in C++", "body": "Plus addition of C++ utility functions for the parsing of compression levels and algorithms", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/11037641", "body": "is this a leftover?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11037641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11037868", "body": "why not reset \"count\" here instead of as part of log_report()? Having it as a side-effect of log_report() seemingly increases its responsibilities and violates its name, which signals it simply reports.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11037868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11037883", "body": "Previously, log_report() was invoked as part of the destruction process. Currently, it's only invoked every MAX_COUNT events, and there seems to be no way to retrieve the information otherwise (log_report() is static and not exposed through any public API).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11037883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11079494", "body": "Moar changes! Sorry.\n\nIt really should be ready for prime time now. I'm gonna start measuring client/server read/writes with it right now in fact.\n\nUpdated pull req. description accordingly.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11079494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11253864", "body": "This seems redundant.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11253864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11254581", "body": "There are ways to specify which files to consider via a doxygen config\nfile, but I guess \"marking\" the files themselves this way is better.\nAnyhow, the easiest way to explore the options available in this doxygen\nconfig file is to install doxygen-gui (on *buntu) , Expert tab, Input.\n\nOn Mon, May 18, 2015 at 10:30 PM, Craig Tiller notifications@github.com\nwrote:\n\n> That's what I thought...\n> But either we toggle EXTRACT_ALL on in the Doxyfile, or we annotate the\n> files we'd like documentation to be generated for, as far as I can tell.\n> \n> A long time ago I remember alternatives existing that worked by default,\n> but I haven't found them here yet.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/commit/73b66efa279e7c0eaef5cd7a6aa726d6cc9ed266#commitcomment-11254513\n> .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11254581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11254599", "body": "Ah, voila, no gui necessary:\nhttp://www.stack.nl/~dimitri/doxygen/manual/config.html#config_input\n\nOn Mon, May 18, 2015 at 10:40 PM, David Garcia Quintas dgq@google.com\nwrote:\n\n> There are ways to specify which files to consider via a doxygen config\n> file, but I guess \"marking\" the files themselves this way is better.\n> Anyhow, the easiest way to explore the options available in this doxygen\n> config file is to install doxygen-gui (on *buntu) , Expert tab, Input.\n> \n> On Mon, May 18, 2015 at 10:30 PM, Craig Tiller notifications@github.com\n> wrote:\n> \n> > That's what I thought...\n> > But either we toggle EXTRACT_ALL on in the Doxyfile, or we annotate the\n> > files we'd like documentation to be generated for, as far as I can tell.\n> > \n> > A long time ago I remember alternatives existing that worked by default,\n> > but I haven't found them here yet.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/grpc/grpc/commit/73b66efa279e7c0eaef5cd7a6aa726d6cc9ed266#commitcomment-11254513\n> > .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11254599/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11602030", "body": "This certainly shouldn't have any impact on T :) Merge at your leisure.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11602030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14255036", "body": "What's the purpose of this?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14255036/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14255425", "body": "docs on the purpose of this abstraction, where it fits and which pieces it interacts with?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14255425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14255452", "body": "wut\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14255452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14255460", "body": "append _ok to variable name to make clear the semantics of the status?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14255460/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14255477", "body": "comment needs updating wrt returned value\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14255477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14255498", "body": "I'm curious to know what guarantees a pointer won't need all the bits in gpr_uintptr. In particular we are assuming pointer addresses are always even. How strong an assumption is that?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14255498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14429152", "body": "== 0 instead of ! to be consistent?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14429152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14429226", "body": "grpc_pollset_has_workers(pollset) == 0?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14429226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14450367", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14450367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14450374", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14450374/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14451001", "body": "???\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14451001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14458380", "body": "how about for(; src_index < src->capacity; ) { ... } This would prevent bad times in the case that, for example, all slices have length 0.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14458380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14458406", "body": "LGTM other than the for(;;) comment\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14458406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14458411", "body": "LGTM other than seemingly spurious changes to gen_chttp2_stream_lists.py\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14458411/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/16307893", "body": "Was the reversion of the nanopb commit intentional?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/16307893/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/17890561", "body": "woops. To add insult to injury, those were redundant (being static vars and all) and I only added them out of pedantry :grimacing: \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17890561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/17890591", "body": "Adding to your description, \"A pointer that is left without explicit initialization automatically\ngets nullptr anyway\"... is only true when the variables have static linkage, which in this case do, but not true in general (this is 99% statement, 1% question, because your omission has made me doubt). \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17890591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/17890818", "body": "Let me know if there's anything I can do to be of assistance\n\nOn 16 Jun 2016 12:38 a.m., \"Vijay Pai\" notifications@github.com wrote:\n\n> Yes, I should have explicitly stated this.\n> More changes are coming soon as a new checkin has broken the rules....\n> \n> On Thu, Jun 16, 2016 at 12:16 AM David G. Quintas <\n> notifications@github.com>\n> wrote:\n> \n> > Adding to your description, \"A pointer that is left without explicit\n> > initialization automatically\n> > gets nullptr anyway\"... is only true when the variables have static\n> > linkage, which in this case do, but not true in general (this is 99%\n> > statement, 1% question, because your omission has made me doubt).\n> > \n> > \u2014\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly, view it on GitHub\n> > <\n> > https://github.com/grpc/grpc/commit/4425828d1d8a7ac882e34d76a2f26e47e8d1b22f#commitcomment-17890591\n> > ,\n> > or mute the thread\n> > <\n> > https://github.com/notifications/unsubscribe/AIdEkClFYnXCYiYdTvRnTnAXngilV9U9ks5qMPhfgaJpZM4I3Fxo\n> > \n> > .\n> \n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/grpc/grpc/commit/4425828d1d8a7ac882e34d76a2f26e47e8d1b22f#commitcomment-17890772,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAHVmdyspoGA5YAX6QWOq8VgX8qqWhGYks5qMP2GgaJpZM4I3Fxo\n> .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17890818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/17921718", "body": "this needs a trailing ; \n\n`src/proto/grpc/binary_log/v1alpha/log.proto:34:1: Expected \";\".`\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17921718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/17921719", "body": "@murgatroid99 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17921719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/17921741", "body": "There were other problems with this file. see #6960\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17921741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/18049615", "body": "peachy, thanks! \n\nLGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/18049615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/20734791", "body": "Yeah, but then no error message showing the offending URI string.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20734791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/20735099", "body": "ok ok :) Done. ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20735099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23689150", "body": "If the lb channel never connects (ie, never becomes READY), we'll never get to this point and start the timer. The sequence of calls that ultimately results in calling `query_for_backends` starts [here](https://github.com/grpc/grpc/blob/b48f0946a145893cb28117ef4f162c0a5050e577/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1931), when the lb channel becomes READY. If all LB servers are down, for example, a situation where we'd like to fallback, the lb channel never becomes READY and this timer is never run.\r\n\r\nThe sequence goes: [LB channel ready](https://github.com/grpc/grpc/blob/b48f0946a145893cb28117ef4f162c0a5050e577/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1931) -> [start_picking_locked](https://github.com/grpc/grpc/blob/b48f0946a145893cb28117ef4f162c0a5050e577/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1194) -> [query_for_backends](https://github.com/grpc/grpc/blob/b48f0946a145893cb28117ef4f162c0a5050e577/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1482)  \r\n\r\nI think the right place to place this timer is inside [this if](https://github.com/grpc/grpc/blob/b48f0946a145893cb28117ef4f162c0a5050e577/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1848), right before we initially subscribe to the lb channel's connectivity state.   ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23689150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23701735", "body": "@AspirinSJL you are right. We only watch the connectivity of the LB channel after an update (because we only want to switch over once the new LB channel is ready).\r\n\r\nI agree with Mark: `start_picking_locked()` seems like the most sensible place to start the timer, based on the reasoning he gives about the externally visible behavior. ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23701735/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23701969", "body": "@markdroth you can edit comments :)", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23701969/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23986992", "body": "@tandr most certainly, good catch. We'll update for the main repo.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23986992/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24146974", "body": "will it be scheduled _immediately_?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24146974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24147671", "body": "My point was it's probably a good idea to say so in the docstring, same as in the first case.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24147671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24153841", "body": "@tandr done in #12430", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24153841/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24389181", "body": "Is is always the case that `!glb_policy->fallback_timer_active` implies `glb_policy->rr_policy != NULL`. Even if that were true, I'd add it to the `if` for good measure: `if (!glb_policy->fallback_timer_active && glb_policy->rr_policy != NULL)`", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24389181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24393113", "body": "I see, I forgot that `rr_handover_locked` will create the RR instance if necessary.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24393113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/25909670", "body": "is `$(...)` a bash-ism too?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/25909670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/31953497", "body": "could we document the different roles of these two variables?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/31953497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/31974126", "body": "Braces in lieu of applying it to just gpr_tls_set? Chances are we'll forget to add them if we ever augment the file with another function.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/31974126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32065445", "body": "docstring while at it? :)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32065445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32065659", "body": "nit: given i >= 0 is more likely to be true than i < NUM..., flipping the comparisons could save the i >= 0 one if i >= NUM...\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32065659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32069448", "body": "Yeah, I imagined the compiler would be smart enough in this simple case. Good to know it actually is.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32069448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32494930", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32494930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32689677", "body": "This is some funky formatting. Why the empty lines?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32689677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32689743", "body": "Can I haz docs?\n\nAlso, very whitespace, much empty lines.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32689743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32689754", "body": "Ditto.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32689754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32689959", "body": "Docs?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32689959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690031", "body": "It seems the TODO has been fulfilled. \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690214", "body": "Just checking: is \"reason\" meant for future use? It not currently referenced anywhere in the function body.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690225", "body": "Just checking: is \"reason\" meant for future use? It not currently referenced anywhere in the function body.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690290", "body": "The comment for \"*arg\" seems to be out of date. Wouldn't it be \"grpc_client_setup_request\"?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690662", "body": "We should update the docstring to include the new \"pollset\" arg.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690662/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690723", "body": "ditto.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32690723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692100", "body": "The concept of pollset kicking isn't documented (fully) in a single place. Maybe add an overview at the beginning of the file and a few one-liner docstrings for these functions/macros?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692100/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692135", "body": "magic number 500. Turn into a #define'd constant?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692176", "body": "magic 500 again.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692176/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692271", "body": "why have we gone from a while to an if? I'm just curious.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692271/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692327", "body": "magic 500 again\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692503", "body": "nit: make the growth factor 2 into a #define constant?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692516", "body": "ditto\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32692516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699364", "body": "Update docstring, especially regarding the role of \"interested_parties\"\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699384", "body": "Update docstring to mention \"interested_parties\"'s role\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699410", "body": "docstring?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699414", "body": "docstrings?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699458", "body": "s/deactivated/deactivate? maybe docs while at it? :) \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699573", "body": "what role does the pollset play here?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32699573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32788650", "body": "Sure.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32788650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32788802", "body": "Duh. Didn't notice the \"return\", it was in the diff fold.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32788802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32878016", "body": "Nope, removing. That was a test while trying to solve the Ruby issue with Nico.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32878016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32878241", "body": "total nit: shouldn't we take \"unimplemented\" as a single word and thus remove the capital I?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32878241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32986872", "body": "`assert len(massaged_one_run) > 0, 'Must have at least one test for a -n inf run'` to give some clue as to why the assert failed.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32986872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32995571", "body": "What role does the \"user_data\" arg. play? (the 3rd arg to grpc_metadata_batch_filter one). I mean, \"user_data\" should also be mentioned in the docstring. I see it's used as an input/output arg.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32995571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32997783", "body": "I see. Got confused by the overloading of the \"user_data\" name :)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/32997783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34009902", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34009902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34009967", "body": "Refactored and addressed (see new comments).\n\nThe \"if\" is also incidentally outside the loop, which may result in better branching behavior (but that wasn't the point of the refactoring, rather to make the code more readable).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34009967/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34127681", "body": "Done, the latter option.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34127681/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34585268", "body": "True, inertia. Done.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34585268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34729917", "body": "Done. Note that msan complains about context_ not being used. It'll be used alright in a following PR.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34729917/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34733975", "body": "Actually, lemme introduce a placeholder method to be removed once an actually useful one takes its place to appease the gods of msan.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34733975/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34744555", "body": "Done. PTAL\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34744555/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34746508", "body": "Woops, tots to \"static\". However \"inline\" is not c89\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34746508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34812519", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34812519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34948814", "body": "I see. I misunderstood the initial meaning. PTAL.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34948814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34972508", "body": "accidental edit?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/34972508/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35166464", "body": "that a new awesome bug comes into existence, whereby behavior depends on the line ordering. Fixed. n00b bug shame cube.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35166464/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35170049", "body": "We should. Done.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35170049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270289", "body": "tiny nit: please use /*\\* so that the comment is picked up by doxygen.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270289/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270442", "body": "Can you add some file-level comment describing what the purpose of zookeeper is, especially in the context of grpc? \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270472", "body": "add newline to end of file.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270528", "body": "comments for the meaning of these three constants pls. What's their purpose?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270712", "body": "nit: remove space between \\* and \"resolved_addrs\"\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35270712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271055", "body": "line length\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271288", "body": "prefer GPR_ASSERT(r->next_completion == NULL)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271412", "body": "if (addresses != NULL)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271709", "body": "there's no \"name\" argument, but the docstring refers to it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271836", "body": "where are the tests? :)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35271836/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35272690", "body": "line too long\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/35272690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36820789", "body": "It'd be interested to know the back-story on this one... I'm aware of the template specialization that happens in the STL for vector<bool>, but which data-races was it causing?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36820789/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36820830", "body": "old compilers may dislike the use of \">>\". It used to be written as \"> >\" to break the ambiguity with the rightshift op\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36820830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36820863", "body": "ditto for >>\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36820863/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821028", "body": "append `// namespace runsc` to closing brace of namespace\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821152", "body": "const. Same for the following two lines also.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821166", "body": "const\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821190", "body": "maybe move line to the top? (above \"our\" .h files)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821235", "body": "const all the things!!!1 (ok, in this case it's not that useful, I just have a constant const fixation)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821802", "body": "const\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36821802/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36875608", "body": "Ah yes, I remember now. Thanks!\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36875608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36876083", "body": "Ok. In any case it's obvious to spot the problem if it were ever to occur with a really old compiler.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36876083/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36981197", "body": "How about having both? The description of this PR is a good candidate to be copy&pasted, with a reference to the document for more details.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36981197/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36982102", "body": "what does \"deinitialized\" mean? Destroyed? Unregistered? \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36982102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36982356", "body": "Actually, just reference the doc in #2560\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36982356/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36985184", "body": "why isn't \"value\" passed to zookeeper_parse_address directly? Ie, why passing the copy in \"buffer\"?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36985184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36985911", "body": "is there an upper bound to the length of r->name and children->data[i]? If there is, you could preallocate a char path[N] and construct \"path\" more efficiently, avoiding expensive heap allocations and deallocations inside a for loop.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36985911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36986282", "body": "again, I wonder why \"value\" is copied into \"buffer\" instead of being used directly: no race is avoided by copying (albeit it could be minimized).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36986282/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36986624", "body": "nit: strlen() is O(n), calculate once into a const size_t and reuse?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36986624/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36987048", "body": "!= NULL\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36987048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36987587", "body": "const string& name, const string& value\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36987587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36987637", "body": "const string& name\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36987637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36988392", "body": "std::to_string isn't supported in gcc 4.4 nor MSVC 2010 apparently :(\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36988392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36988510", "body": "why do we need to sleep? \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36988510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36998217", "body": "Done. PTAL\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/36998217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37030771", "body": "1) change \"deinitialized\" to \"destroyed\". Same for the argument \"deinit\" -> \"destroy\"\n2) Replace all but the intro line with the following:\n\n> The \\a init and \\a destroy functions will be invoked as part of \\a grpc_init() and \\a grpc_shutdown(), respectively. Note that these functions can be invoked an arbitrary number of times (and hence so will \\a init and \\a destroy). \n> It is safe to pass NULL to either argument. Plugins are destroyed in the reverse order they were initialized.\n\nThe last line is only true if you implement Nico's comment to use an array instead of the current linked list to hold the registered plugins.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37030771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37096766", "body": "unfinished comment? \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37096766/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37449260", "body": "indeed. fixed.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37449260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37467656", "body": "No, but CreateServer is a \"private\" (static) function that's always invoked with a max_message_size argument.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37467656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37478436", "body": "Oh, I see now what you meant. Fixed.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37478436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37557068", "body": "maybe this could be an assert? are we expecting keys to always be non-empty?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/37557068/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "Sakawa": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13998", "title": "gRPC poll segfault in subprocess calls", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes \r\n \r\n### What version of gRPC and what language are you using?\r\n 1.8.2, Python\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Linux\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n Python 2.7\r\n \r\n### What did you do?\r\nWe started seeing segfaults in our Dropbox code after upgrading from 1.6.0 to 1.8.2, when subprocess32 calls began intermittently segfaulting. A backtrace extracted from the core dump of a segfault is below:\r\n\r\n~~~\r\n#0 pollset_kick (exec_ctx=0x7f7c81ffae40, pollset=0x7f7d38001460, specific_worker=0x0) at src/core/lib/iomgr/ev_epoll1_linux.cc:1037\r\n#1 0x00007f7d85c521f3 in cq_end_op_for_next (exec_ctx=0x7f7c81ffae40, cq=0x7f7d38001390, tag=<optimized out>, error=0x7f7d6c00d9d0,\r\ndone=0x7f7d85c95c10 <finished_completion(grpc_exec_ctx*, void*, grpc_cq_completion*)>, done_arg=<optimized out>, storage=0x7f7d3800f280)\r\nat src/core/lib/surface/completion_queue.cc:692\r\n#2 0x00007f7d85c95de1 in partly_done (error=0x0, due_to_completion=true, w=0x7f7d3800f1a0, exec_ctx=0x7f7c81ffae40)\r\nat src/core/ext/filters/client_channel/channel_connectivity.cc:153\r\n#3 watch_complete (exec_ctx=0x7f7c81ffae40, pw=0x7f7d3800f1a0, error=<optimized out>) at src/core/ext/filters/client_channel/channel_connectivity.cc:166\r\n#4 0x00007f7d85c300d6 in exec_ctx_run (exec_ctx=<optimized out>, closure=<optimized out>, error=0x4) at src/core/lib/iomgr/exec_ctx.cc:70\r\n#5 0x00007f7d85c1d011 in grpc_combiner_continue_exec_ctx (exec_ctx=0x7f7c81ffae40) at src/core/lib/iomgr/combiner.cc:260\r\n#6 0x00007f7d85c302da in grpc_exec_ctx_flush (exec_ctx=0x7f7c81ffae40) at src/core/lib/iomgr/exec_ctx.cc:93\r\n#7 0x00007f7d85c3d583 in run_some_timers (exec_ctx=0x7f7c81ffae40) at src/core/lib/iomgr/timer_manager.cc:129\r\n#8 timer_main_loop (exec_ctx=0x7f7c81ffae40) at src/core/lib/iomgr/timer_manager.cc:231\r\n#9 timer_thread (completed_thread_ptr=completed_thread_ptr@entry=0x7f7d600086d0) at src/core/lib/iomgr/timer_manager.cc:279\r\n#10 0x00007f7d85c0f988 in thread_body (v=<optimized out>) at src/core/lib/support/thd_posix.cc:53\r\n#11 0x00007f7d8fbb9e9a in start_thread () from .../x86_64-linux-gnu/libpthread.so.0\r\n#12 0x00007f7d8f8e136d in clone () from .../x86_64-linux-gnu/libc.so.6\r\n#13 0x0000000000000000 in ?? ()\r\n~~~\r\n\r\nWe also occasionally see \r\n~~~\r\nE0105 19:43:12.164784957   50909 completion_queue.cc:697]    Kick failed: {\"created\":\"@1515181392.164703224\",\"description\":\"OS Error\",\"errno\":9,\"file\":\"src/core/lib/iomgr/wakeup_fd_eventfd.cc\",\"file_line\":61,\"os_error\":\"Bad file descriptor\",\"syscall\":\"eventfd_write\"}\r\n~~~\r\nin our logs, although this happens fairly rarely.\r\n\r\n### What did you expect to see?\r\n No segfault -- expected subprocess command to run normally\r\n \r\n### What did you see instead?\r\nSegfault\r\n \r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dcow": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13997", "title": "grpc objective-c: \"file not found\" when nesting protobufs", "body": "Originally I had protobufs flat under e.g.\r\n\r\n    protos/\r\n    +-- A.proto\r\n    +-- B.proto\r\n\r\nOutput to a `gen` directory, `header_mappings_dir = dir` etc. Everything worked fine. Now I have namespaced the protos e.g.\r\n\r\n    protos/\r\n    +--- examples/A.proto\r\n    +--- util/B.proto\r\n\r\nMy protobufs are generated correctly (I've updated the globbing in my pre-install command):\r\n\r\n    gen (dir)/\r\n    +--- examples/A.pb{objc|rpc}.{h|m}\r\n    +--- util/B.pb{objc|rpc}.{h|m}\r\n\r\nBut, when building the main app target, the framework with the protobufs (I've called `it ProtobufAPIs`) fails to build. The compiler can't find the headers when compiling the `pbrpc.m` files. \r\n\r\n> **ProtobufAPIs** issue\r\n> `gen/examples/Hello.pbrpc.m:1:9: fatal error: 'examples/Hello.pbrpc.h' file not found`\r\n\r\nI experimented with `--objc_opt=generate_for_named_framework=#{s.name}`, but I noticed that only affects the imports in the `pbobjc.m` files. And I'd assume if that was needed, the template podspec would contain it.\r\n\r\nI've also tried adding the `gen` dir to the user search paths and removing the `header_mappings_dir = dir` a la:\r\n\r\n    s.pod_target_xcconfig = {\r\n        # This is needed by all pods that depend on Protobuf:\r\n        'GCC_PREPROCESSOR_DEFINITIONS' => '$(inherited) GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1',\r\n        # This is needed by all pods that depend on gRPC-RxLibrary:\r\n        'CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES' => 'YES',\r\n\r\n        'USER_HEADER_SEARCH_PATHS' => \"$(PODS_TARGET_SRCROOT)/#{dir}\"\r\n    }\r\n\r\nThis allows the framework target to build, but then the \"user\" app target (the thing that imports the `ProtobufAPIs` framework) fails because when it sees the headers via the framework's umbrella header, it can't find the `pbobjc.h` files included by the `pbrpc.h` files since they're all flattened under `ProtobufAPIs/Headers/{A|B}...h`. This makes sense since I removed `header_mappings_dir`.\r\n\r\nSo I try adding `header_mappings_dir = dir` back in an attempt to reconstruct the folder hierarchy for the headers included in the framework. But the headers are still flattened under the `framework/Headers` path and also in the umbrella header e.g.`#import \"A.proto\"` not `#import \"examples/A.proto\"`. Is this expected?\r\n\r\nIf I add the `gen` directory to the app's user header search paths, I get duplicate definitions of things in the header files e.g. the enums, etc.\r\n\r\nSo the only option left short of some undesirable `sed` is defining  `GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO=1` for the app build. This bypasses the import statement in the headers with a forward declaration of the types needed. This works! But I'm  confused why the standard setup isn't working as intended. Right now I don't have any `.proto` files with the same name (so they can co-exist when flattened) but that won't always hold true.\r\n\r\nIs there a sample working project with protobufs that are not top-level?\r\n\r\n> I'm using `gRPC 1.8`\r\n> /cc @jcanizales ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13997/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ctiller": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13994", "title": "UDS naming for servers is handled by a hack in iomgr dns code", "body": "https://github.com/grpc/grpc/blob/0043dea25c47838513eb2266959f86b3670bdc56/src/core/lib/iomgr/resolve_address_posix.cc#L54\r\n\r\nThere ought to be a server resolver type that handles this stuff.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13502", "title": "Using gRPC from a Bazel project is too complex", "body": "It takes 1425 lines of boilerplate to integrate gRPC into a project:\r\n\r\nhttps://github.com/google/ced/commit/b55567e0479d7d441da3d5e3a901947bb7ebbc18\r\n\r\nMost of this is overhead that users of the library should never need to care about (ex: what is cares? why do *I* care?? why am I copying hundreds of lines of code into my project just to get this thing to compile!!)\r\n\r\nConcrete actions we should take:\r\n- host dependent library build configurations in their own repos (if we need to maintain these, so be it, though I'll note that bazel folks have https://github.com/bazelbuild/bazel-packages which might be ripe for populating with the bits that we need)\r\n- follow through with a change like https://github.com/grpc/grpc/pull/13468\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13502/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/cd92e3bc6bd718f77d599184368612a1277cb7bc", "message": "Merge pull request #14032 from ctiller/api-fuzz\n\nFix issue whereby fuzzer creates infinitely deep creds (since this is not actually interesting)"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/33cb50096ce04612479e8a64626e5ddc200c6db1", "message": "Add fuzzed example that found this crash"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d7ae4a1c617f319f6c8f31890bdacadc343037b7", "message": "Also stop processing input stream"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/be448700590c5995dd2bdf95223aa5de96d02160", "message": "Fix issue whereby fuzzer creates infinitely deep creds (since this is not actually interesting)"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/06fbe438a20eb09c456c4ec7fc0000a5a07967ba", "message": "Merge pull request #14012 from ctiller/1111\n\nRemove ctiller projects"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/2c1b6d253503ebf2f3ad1f2452c8dfa2de9410d7", "message": "Remove ctiller projects"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0043dea25c47838513eb2266959f86b3670bdc56", "message": "Merge pull request #13972 from ctiller/ownerz\n\nSubstitute a11r for ctiller in all OWNERS files"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c052f363bfc72be8e274df3f70687ec96502f8e5", "message": "Substitute a11r for ctiller in all OWNERS files"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14100", "title": "Rough first pass of grpc-on-grpc tunneling", "body": "", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69403274", "body": "Not yet - next week.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69403274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69699821", "body": "(Please don't merge this until the move is done!)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69699821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69700262", "body": "Don't do that again until we're done with Piper (please).\n\nI'll send out a CL in the morning to rectify this Nico.\nOn Mon Jan 12 2015 at 9:58:09 PM yang-g notifications@github.com wrote:\n\n> Merged #4 https://github.com/google/grpc/pull/4.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/4#event-217880715.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69700262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69701720", "body": "Let's check the state of things in the morning.\n\nOn Mon, Jan 12, 2015, 22:32 Nicolas Noble notifications@github.com wrote:\n\n> Aren't we done with piper ? :-) At that point, this could mark our first\n> plain-github commit.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/4#issuecomment-69701377.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69701720/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69788942", "body": "Looks like I pulled in some extraneous stuff... going to redo this.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69788942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69814281", "body": "Updated this to also fix qpstest changes this morning.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69814281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69814337", "body": "Can you take a peek now Qi?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69814337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69818693", "body": "Want to run clang-format across this?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69818693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69922293", "body": "Trying to get some census folks to look at this,\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69922293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69976701", "body": "Ping\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69976701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70124966", "body": "Nico's change gets zlib building right.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70124966/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70125278", "body": "Hang on: this doesn't build.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70125278/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70125513", "body": "make: **\\* No rule to make target `libs/msan/zlib/libz.alibs/msan/libgpr.so.0.8.0.0', needed by`libs/msan/libgrpc.so.0.8.0.0'.  Stop.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70125513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70126201", "body": "Found the bug\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70126201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70144650", "body": "Dupe of #44 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70144650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70179077", "body": "Closes #50 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70179077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70194974", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70194974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70278348", "body": "Introduced by work on #71 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70278348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70284431", "body": "make by itself doesn't build & run tests... you probably want to get in the\nhabit of:\n\ntools/run_tests/run_tests.py -c dbg\n\nto do so\n\nOn Fri Jan 16 2015 at 8:53:59 AM jboeuf notifications@github.com wrote:\n\n> Merged #83 https://github.com/google/grpc/pull/83.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/83#event-220187782.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70284431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70285396", "body": "I started a page on the wiki:\nhttps://github.com/google/grpc/wiki/C-C---development-knowhow\n\nOn Fri Jan 16 2015 at 8:59:25 AM jboeuf notifications@github.com wrote:\n\n> OK, will do. Is there a central place for documentation on these things? I\n> looks like I'm gathering bits and pieces from different sources (like the\n> fact that I have to install protobuf manually for example).\n> \n> On Fri, Jan 16, 2015 at 8:57 AM, Craig Tiller notifications@github.com\n> wrote:\n> \n> > make by itself doesn't build & run tests... you probably want to get in\n> > the\n> > habit of:\n> > \n> > tools/run_tests/run_tests.py -c dbg\n> > \n> > to do so\n> > \n> > On Fri Jan 16 2015 at 8:53:59 AM jboeuf notifications@github.com\n> > wrote:\n> > \n> > > Merged #83 https://github.com/google/grpc/pull/83.\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/google/grpc/pull/83#event-220187782.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/grpc/pull/83#issuecomment-70284431.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/83#issuecomment-70284772.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70285396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70329799", "body": "Trying to get make as the number one language?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70329799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70344361", "body": "Ping\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70344361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70346824", "body": "Is this dead?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70346824/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70347390", "body": "Yes.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70347390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70375842", "body": "Agree. Had been thinking about this but hadn't gotten there yet. Might be\nnice to also support building the various wrappers from the make file too\nto simplify the logic in runtests\n\nOn Sat, Jan 17, 2015, 01:48 Nicolas Noble notifications@github.com wrote:\n\n> The run_tests.py script's CLanguage should load build.json and parse the\n> list of the tests to run.\n> \n> In build.json, the array targets can have objects with the following\n> properties:\n> \n> \"c++\" set to true or false; if not set, default to false.\n> \"run\" set to true or false; if not set, default to true.\n> \n> So, the code should select the appropriate tests to run, based on the\n> language tag, and based on the fact it's a test that needs to be run.\n> \n> Note that we will probably need to extend the build.json file to include\n> the notion of complex tests - aka, tests that run off a shell script or\n> something similar, and that execute several binaries with arguments.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/issues/101.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70375842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70536707", "body": "Fixes #84.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70536707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70584608", "body": "Formatted\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70584608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70683704", "body": "The change in core is done by the way.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70683704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70684118", "body": "Is the ruby layer hanging onto objects after calling grpc_shutdown?\n\nWe had a similar problem in Python and solved it by forcing a GC cycle immediately prior to shutdown.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70684118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70695620", "body": "ln -s\n\nOn Tue Jan 20 2015 at 8:46:26 AM Michael Lumish notifications@github.com\nwrote:\n\n> I would prefer not to do this. I currently have tests using math.proto, so\n> I need math.proto to be somewhere in src/node so that it is included in an\n> NPM install.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/issues/119#issuecomment-70687365.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70695620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70793026", "body": "It would probably be good to get ruby and node fixes pulled into this pull request (it's doable, and the right thing in this case) so we can commit atomically.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70793026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70866958", "body": "What command are you guys running to do this?\n\nOn Tue, Jan 20, 2015, 23:46 Yang Gao notifications@github.com wrote:\n\n> I see various errors too.\n> One is it does not recognize All in line 12, setting it to true seems to\n> fix it.\n> Then there a many places of unrecognized keys. Most of them I checked\n> should be correct according to clang format 3.5 docs\n> \n> http://llvm.org/releases/3.5.0/tools/clang/docs/ClangFormatStyleOptions.html\n> .\n> \n> I am now pretty sure I did something wrong but do not know what :)\n> \n> On Tue, Jan 20, 2015 at 6:13 PM, David Klempner notifications@github.com\n> \n> wrote:\n> \n> > I see a bunch of:\n> > \n> > YAML:12:35: error: invalid boolean\n> > AllowShortFunctionsOnASingleLine: All\n> > \n> > Error reading /usr/local/google/grpc/grpc/.clang-format: Invalid\n> > argument\n> > Can't find usable .clang-format, using LLVM style\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/grpc/pull/104#issuecomment-70773037.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/104#issuecomment-70797098.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70866958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70976747", "body": "A majority of tests now pass... there's still some that'll take some more fiddling.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70976747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70976775", "body": "The next big thing to do here is a big sprintf cleanup.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70976775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71228059", "body": "I haven't been through this with a fine-tooth comb yet, but it seems @jboeuf has.\nI'm figuring giving @nicolasnoble a chance to catch up and push a new version is probably the right thing to do at this point?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71228059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71228140", "body": "Should this live instead in the go repository?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71228140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71237035", "body": "I'm fairly certain this is preventing the mac build from passing tests.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71237035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70684118", "body": "Is the ruby layer hanging onto objects after calling grpc_shutdown?\n\nWe had a similar problem in Python and solved it by forcing a GC cycle immediately prior to shutdown.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70684118/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70683704", "body": "The change in core is done by the way.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70683704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70695620", "body": "ln -s\n\nOn Tue Jan 20 2015 at 8:46:26 AM Michael Lumish notifications@github.com\nwrote:\n\n> I would prefer not to do this. I currently have tests using math.proto, so\n> I need math.proto to be somewhere in src/node so that it is included in an\n> NPM install.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/issues/119#issuecomment-70687365.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70695620/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72313446", "body": "The major work for this is in #218.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72313446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70793026", "body": "It would probably be good to get ruby and node fixes pulled into this pull request (it's doable, and the right thing in this case) so we can commit atomically.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70793026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/154215607", "body": "Close soon: the need for this is handled by port_server.py\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/154215607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/154215755", "body": "Close soon: port_server\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/154215755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71514192", "body": "Ping @yang-g \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71514192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71699447", "body": "Good catch on the missing &args.\n\nSynced to master, fixed up some stuff.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71699447/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70976775", "body": "The next big thing to do here is a big sprintf cleanup.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70976775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70976747", "body": "A majority of tests now pass... there's still some that'll take some more fiddling.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70976747/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122711311", "body": "Should this be beta?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122711311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122711463", "body": "@jboeuf, @nathanielmanistaatgoogle - should this be Beta?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122711463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122711458", "body": "@jboeuf, @nathanielmanistaatgoogle - should this be Beta?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122711458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122711450", "body": "@jboeuf, @nathanielmanistaatgoogle - should this be Beta?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122711450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71228059", "body": "I haven't been through this with a fine-tooth comb yet, but it seems @jboeuf has.\nI'm figuring giving @nicolasnoble a chance to catch up and push a new version is probably the right thing to do at this point?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71228059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71589923", "body": "I was curious about why no reader implementation in terms of gpr_slice, but #232.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71589923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71590748", "body": "Testing coverage on this CL is around 55% LOC (I just ran tools/run_tests/run_lcov.sh -- it needs an edit to run_tests.py -c gcov -l c -- will send a PR for that sometime).\n\nIf you have additional tests for this code around, I'd push for including them in the initial CL - there's significant non-trivial code that doesn't get exercised at this point.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71590748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71937337", "body": "I'm pretty happy with this.\n\nI spammed a bunch of test requests, and if we can get a majority of them covered (I suspect they will be once we have infrastructure to load in those rewrite files), then I'd be ok with merging this.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71937337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71937389", "body": "(really impressive work, btw)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71937389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71228140", "body": "Should this live instead in the go repository?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71228140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/74340869", "body": "Is this still an issue?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/74340869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72066414", "body": "ping @a11r \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72066414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72069059", "body": "The procedure is to let the reviewer do the push.\n\nPlease please don't merge your own pull requests.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72069059/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72071524", "body": "Too spammy by default I think, but see #257.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72071524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72073353", "body": "start_invoke transition LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72073353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72103231", "body": "Where should I look for the port selection logic?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72103231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72123988", "body": "I'll have a bit of latency for a day or so while I get some complex changes finished up.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72123988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72148461", "body": "Yeah... Will fix later\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72148461/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72217796", "body": "Ping @a11r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72217796/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72313259", "body": "Tracking issue: I'll break out individual leaks on Monday and try to provide some assignments.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72313259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72313446", "body": "The major work for this is in #218.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72313446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72477179", "body": "This will need to be updated after #274 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72477179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72489216", "body": "I think my async changes resolve this one.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72489216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72489725", "body": "This leak is duplicated across many tests.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72489725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72491021", "body": "This is on my radar\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72491021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72492683", "body": "Repro:\ntools/run_tests/run_tests.py -c tsan -l c\n\n# Sample race:\n\nWARNING: ThreadSanitizer: data race (pid=10699)\n  Write of size 8 at 0x7d2c0000ae80 by thread T2:\n    #0 lh_retrieve <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001af8f7)\n    #1 def_get_class <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001a3b55)\n    #2 int_free_ex_data <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001a37f9)\n    #3 CRYPTO_free_ex_data <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001a2da2)\n    #4 SSL_free <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001ef9bb)\n    #5 ssl_protector_destroy /usr/local/google/home/ctiller/grpc-ct2/src/core/tsi/ssl_transport_security.c:702 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x00000011f48f)\n    #6 tsi_frame_protector_destroy /usr/local/google/home/ctiller/grpc-ct2/src/core/tsi/transport_security.c:134 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x00000012c572)\n    #7 destroy /usr/local/google/home/ctiller/grpc-ct2/src/core/security/secure_endpoint.c:72 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001e26e8)\n    #8 secure_endpoint_unref /usr/local/google/home/ctiller/grpc-ct2/src/core/security/secure_endpoint.c:84 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001e2699)\n    #9 call_read_cb /usr/local/google/home/ctiller/grpc-ct2/src/core/security/secure_endpoint.c:109 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001e2fd0)\n    #10 on_read /usr/local/google/home/ctiller/grpc-ct2/src/core/security/secure_endpoint.c:183 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001e2e3d)\n    #11 call_read_cb /usr/local/google/home/ctiller/grpc-ct2/src/core/iomgr/tcp_posix.c:306 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x00000012aa3b)\n    #12 grpc_tcp_handle_read /usr/local/google/home/ctiller/grpc-ct2/src/core/iomgr/tcp_posix.c:327 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x00000012a8d3)\n    #13 background_callback_executor /usr/local/google/home/ctiller/grpc-ct2/src/core/iomgr/iomgr.c:71 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000f2e11)\n    #14 thread_body /usr/local/google/home/ctiller/grpc-ct2/src/core/support/thd_posix.c:57 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000002b811b)\n\n  Previous write of size 8 at 0x7d2c0000ae80 by main thread:\n    [failed to restore the stack]\n\n  Location is heap block of size 176 at 0x7d2c0000adf0 allocated by main thread:\n    #0 malloc <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x00000008b2fd)\n    #1 default_malloc_ex <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001b2946)\n    #2 CRYPTO_malloc <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001b32fc)\n    #3 lh_new <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001aea2f)\n    #4 def_get_class <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001a3ad3)\n    #5 int_get_new_index <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001a3104)\n    #6 CRYPTO_get_ex_new_index <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001a2b03)\n    #7 X509_STORE_CTX_get_ex_new_index <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x00000013c11e)\n    #8 SSL_get_ex_data_X509_STORE_CTX_idx <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001e79aa)\n    #9 SSL_CTX_new <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000001f3c0a)\n    #10 tsi_create_ssl_client_handshaker_factory /usr/local/google/home/ctiller/grpc-ct2/src/core/tsi/ssl_transport_security.c:1104 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x00000011cbc8)\n    #11 grpc_ssl_channel_security_context_create /usr/local/google/home/ctiller/grpc-ct2/src/core/security/security_context.c:360 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x000000111901)\n    #12 grpc_ssl_channel_create /usr/local/google/home/ctiller/grpc-ct2/src/core/security/security_context.c:459 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x000000111e0c)\n    #13 grpc_secure_channel_create_with_factories /usr/local/google/home/ctiller/grpc-ct2/src/core/security/security_context.c:507 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x00000011205e)\n    #14 grpc_secure_channel_create /usr/local/google/home/ctiller/grpc-ct2/src/core/security/factories.c:50 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000f1b9e)\n    #15 chttp2_init_client_secure_fullstack /usr/local/google/home/ctiller/grpc-ct2/test/core/end2end/fixtures/chttp2_simple_ssl_fullstack.c:74 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000e7a61)\n    #16 chttp2_init_client_simple_ssl_secure_fullstack /usr/local/google/home/ctiller/grpc-ct2/test/core/end2end/fixtures/chttp2_simple_ssl_fullstack.c:108 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000e7897)\n    #17 disappearing_server_test /usr/local/google/home/ctiller/grpc-ct2/test/core/end2end/tests/disappearing_server.c:146 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000e7bab)\n    #18 grpc_end2end_tests /usr/local/google/home/ctiller/grpc-ct2/test/core/end2end/tests/disappearing_server.c:165 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000e7b01)\n    #19 main /usr/local/google/home/ctiller/grpc-ct2/test/core/end2end/fixtures/chttp2_simple_ssl_fullstack.c:137 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000e772f)\n\n  Thread T2 (tid=10710, running) created by main thread at:\n    #0 pthread_create <null>:0 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x00000008f1d1)\n    #1 gpr_thd_new /usr/local/google/home/ctiller/grpc-ct2/src/core/support/thd_posix.c:71 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000002b803d)\n    #2 grpc_iomgr_init /usr/local/google/home/ctiller/grpc-ct2/src/core/iomgr/iomgr.c:93 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000f2cb3)\n    #3 grpc_init /usr/local/google/home/ctiller/grpc-ct2/src/core/surface/init.c:39 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000f2bf1)\n    #4 main /usr/local/google/home/ctiller/grpc-ct2/test/core/end2end/fixtures/chttp2_simple_ssl_fullstack.c:134 (chttp2_simple_ssl_fullstack_disappearing_server_test+0x0000000e7707)\n\n# SUMMARY: ThreadSanitizer: data race ??:0 lh_retrieve\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72492683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72492858", "body": "@nicolasnoble @dklempner if anyone has some thoughts\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72492858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72493213", "body": "I sent you a pull request with what I'm thinking.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72493213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72493883", "body": "I've done a lot of the leg-work for this (incidentally) in my async api changes.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72493883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72499198", "body": "This should include a test that we can run to verify that this remains the case.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72499198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72502990", "body": "file google/protobuf/descriptor_pb2.py (for module google.protobuf.descriptor_pb2) not found\nerror: package directory 'google/protobuf/compiler' does not exist\n\nis there another package I should install?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72502990/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72507428", "body": "I believe so.\n\nOn Mon Feb 02 2015 at 9:40:40 AM Yang Gao notifications@github.com wrote:\n\n> At least a couple of .proto files under test/cpp do not have the copyright\n> notice. Do they need it or not?\n> \n> On Mon, Feb 2, 2015 at 9:31 AM, Craig Tiller notifications@github.com\n> wrote:\n> \n> > This should include a test that we can run to verify that this remains\n> > the\n> > case.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/grpc/issues/315#issuecomment-72499198.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/issues/315#issuecomment-72500959.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72507428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72508334", "body": "@yang-g - please don't merge until everyone mentioned has taken a look at this.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72508334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72554429", "body": "Any idea why this is necessary?\n\nShould we consider fixing make instead?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72554429/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71705883", "body": "I had some success experimenting with mutrace yesterday.\n\nIt pointed to contention in the chttp2 transport lock - which points to #200 as being a worthy thing to get done.\n\n@vjpai - I haven't tried running it under higher loads, but it'd be an interesting study to find which mutexes see increased contention as load increases, in order to start targeting ways to split them first.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71705883/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/214873823", "body": "Work is ongoing, but this seems redundant.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/214873823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73652329", "body": "We probably also want a simple C++ API.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73652329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71764913", "body": "We haven't seen any of them in practice... and I'm trying to restrict this to things that we are seeing on the basis that adding too much creates a risk that we'll start missing files.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71764913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71954625", "body": "I have no interest in emacs.\n\nOn Wed Jan 28 2015 at 5:43:23 PM vjpai notifications@github.com wrote:\n\n> Ok, any interest in dealing with emacs recovery file #xxx# ?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/244#issuecomment-71954108.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71954625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72123988", "body": "I'll have a bit of latency for a day or so while I get some complex changes finished up.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72123988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71740896", "body": "We typically don't check in DEBUG logs - but I use them lots when I'm, you know, debugging.\n\nThis one slipped through.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71740896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71786918", "body": "The big problem is that we need to compute the format arguments even if they're not used.... Let's have a think about it. I'll open an issue.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71786918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71787561", "body": "Opened #257.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71787561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71772591", "body": "Please don't merge your own pull requests.\n\nOn Tue, Jan 27, 2015, 18:38 Chen Wang notifications@github.com wrote:\n\n> Merged #255 https://github.com/google/grpc/pull/255.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/255#event-225816206.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71772591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71790690", "body": "Duplicates #233.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71790690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71790746", "body": "Sorry... Duplicates #231.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71790746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72921563", "body": "You should... for now you'll get a completion of type\nGRPC_OP_COMPLETE for any of the new API's... and the accessible fields then\nare exactly the ones I described that we'll be moving to.\n\nOn Wed Feb 04 2015 at 9:44:25 AM Michael Lumish notifications@github.com\nwrote:\n\n> So, when using the new APIs, should I just use those fields? Also, if\n> event will still have a call_, why does grpc_server_request_call need a\n> call_*?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/381#issuecomment-72901728.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72921563/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72978239", "body": "Tests are still coming... I'll try to get the bulk of them tomorrow. It'd be good to get this in regardless though.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72978239/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72983280", "body": "Started sketching some additional documentation.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72983280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73003186", "body": "@dklempner may have thoughts on this also\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73003186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73185822", "body": "Added more tests and stabilized a bunch\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73185822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73187728", "body": "There's the TEMP environment variable on Windows that points to the equivalent of /tmp.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73187728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73187764", "body": "In general we can assume write permissions to cwd I guess.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73187764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73189072", "body": "s/can/can't\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73189072/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/9323982", "body": "No actual reason, more 'I don't know the Python stdlib'\n\nOn Fri Jan 16 2015 at 3:53:29 PM nathanielmanistaatgoogle <\nnotifications@github.com> wrote:\n\n> Why use the third-party \"simplejson\" library rather than the built-in\n> standard-library \"json\" library?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/commit/71735185a14ca1064472e4e7a8df9d275c762e1e#commitcomment-9323767\n> .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/9323982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/9676594", "body": "Does #454 resolve the original issue then?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/9676594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/9980026", "body": "Any reason this is desirable?\n\n(just wondering if it's a pattern that should be reflected into other languages too)\n\n... there's not much happens during this path that Ruby could possibly know about\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/9980026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11254513", "body": "That's what I thought...\nBut either we toggle EXTRACT_ALL on in the Doxyfile, or we annotate the files we'd like documentation to be generated for, as far as I can tell.\n\nA long time ago I remember alternatives existing that worked by default, but I haven't found them here yet.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11254513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11782953", "body": "Suggest bringing iOS builds under test as part of the same effort.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11782953/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11785437", "body": "Oh I don't disagree, but in terms of prioritization I'd put getting iOS\nunder Jenkins far far ahead of specifying a new build system that could\ndetect this error - iOS will be less total effort and give us additional\ncoverage that we desperately need.\n\nOn Sun, Jun 21, 2015, 11:02 AM Jorge Canizales notifications@github.com\nwrote:\n\n> Even if we had it already, I don't think it's good to leave testing of\n> build.json to dependents of the C core. If Cocoapods tomorrow changes the\n> way they handle includes, it might produce a false positive and leave the C\n> core unknowingly untested in this aspect again. In general, a library\n> should test its own contracts without relying on implementation details of\n> its dependents.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/commit/b7cf08ff73dc05af66e1f16dad03c8550a2bbc99#commitcomment-11784968\n> .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11785437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12520566", "body": "I've backed this stanza out in a later commit - it is unnecessary once all the other fixes are in place.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12520566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12550687", "body": "optional_new_state is dead... delete it\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12550687/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12550699", "body": "no pointer here\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12550699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14258790", "body": "Filters picked up a method to set the pollset. Many don't need it, so I provided a default implementation.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14258790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14258881", "body": "Any modern architecture ends up aligning to multiples of pointer sizes... So as long as pointer sizes stay powers of two we're fine.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14258881/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14262918", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14262918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14263129", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14263129/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14434181", "body": "I feel like the _has_ part makes it clear this is Boolean like, and so ! Is appropriate\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14434181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14474208", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14474208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/15015865", "body": "Can you fix the indentation here and below.\n\nI'd prefer ((gpr_atm)1) << ... for it's overly explicit obviousness about what's being cast.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/15015865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/16178528", "body": "Bugs should be corrected now.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/16178528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/16308216", "body": "Huh? No...\n\nOn Wed, Feb 24, 2016, 12:04 PM David G. Quintas notifications@github.com\nwrote:\n\n> Was the reversion of the nanopb commit intentional?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/commit/7c0715af6c5ee47fe786e9b63400961f0c3ae220#commitcomment-16307893\n> .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/16308216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/17853230", "body": "Names beginning with a single underscore followed by an uppercase character are reserved for the compiler.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17853230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19227409", "body": "I think this is actually better: it prints the on_complete that was passed down, instead of the bogus one we create when nothing was passed down.\n\nWe probably need to do some cleanup at some point to make not passing an on_complete a fatal error...\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19227409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19458606", "body": "14c836f delambdaifies this.\n\nOn Mon, Oct 17, 2016 at 1:54 PM Vijay Pai notifications@github.com wrote:\n\n> One more thing: there is a PR #7797\n> https://github.com/grpc/grpc/pull/7797 that works on the server-side\n> ending of the benchmarks. Maybe this should go there? There's the broader\n> issue that the destructor shouldn't be invoked while we're still\n> multi-threaded.\n> \n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/grpc/grpc/commit/b019d61f9a289e2f2f9323b55e4734f612649571#commitcomment-19458560,\n> or mute the thread\n> https://github.com/notifications/unsubscribe-auth/AJpudSH6khu3nsJsBRERi-2T2HabJNUIks5q0-B8gaJpZM4KZFtO\n> .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19458606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19471709", "body": "Reverted commit (but very on the ball)\n\nI misread the test: just committed the fix.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19471709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/20701146", "body": "So far we've held the standard that channel_create does not fail, and instead it returns a lame channel.\r\n\r\nThis is a departure, and means developers will need to retroactively add error checking where they didn't before.\r\n\r\nSuch an API change needs strong justification.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20701146/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21401246", "body": "Having tests is awesome.\n\nOn Mon, Mar 20, 2017 at 8:44 AM Vijay Pai <notifications@github.com> wrote:\n\n> Whoa. LGTM.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/commit/bd0af4fc6cad1f4d9b371e5cea19cf5c91d8c8c2#commitcomment-21400138>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpudS0ixE_kp9OvVFbh2mCgK4vq5Dctks5rnp7OgaJpZM4MinM->\n> .\n>\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21401246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21562280", "body": "But why?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21562280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21562366", "body": "Fix the dependency, don't break the test.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21562366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21643759", "body": "This seems to be responsible for tanking synchronous performance:\r\nhttps://grpc-testing.appspot.com/view/Performance/job/gRPC_performance_experiment/3972/changes#45a9abae95ef46d234fc194fbfaac11746c74ff7\r\nhttps://performance-dot-grpc-testing.appspot.com/explore?dashboard=5632763172487168&widget=282878712&container=1555867283&maximized", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21643759/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23172650", "body": "This looks right", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23172650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24379301", "body": "But why?\r\n\r\nWe're doing this too frequently: it clutters the code with `#ifdef`'s, and (especially in this case) there's zero performance win?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24379301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24381330", "body": "I'd also like to figure out how to get flow control available by default :)\n\nOn Mon, Sep 18, 2017 at 9:42 AM Noah Eisen <notifications@github.com> wrote:\n\n> Fair enough, I'll revert. I figured this would usually be useful in\n> conjugation with flow control, which need to be NDEBUG because it uses more\n> memory\n>\n> \u2014\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/commit/443088d48de7e3e13a0f10b1a6502589bbd0d256#commitcomment-24379520>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AJpuda2MDka7bMk7vooASHW9zTInEwJkks5sjp2AgaJpZM4PbLp8>\n> .\n>\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24381330/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997299", "body": "Line length\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997311", "body": "Line length\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997311/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997315", "body": "Probably one # will do\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997336", "body": "This needs a comment - what is it doing\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23016786", "body": "Reverse engineering:\n\n\"select projects that have a vs_project_guid tag set\"\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23016786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431957", "body": "Fixed.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431957/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431960", "body": "Fixed\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23480293", "body": "Can you delete this file please?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23480293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23474587", "body": "How about a #define GPR_MIN_LTOA_BUFSIZE?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23474587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23478308", "body": "I think I agree. I'll move this to a private interface.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23478308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23482900", "body": "It's another discussion: we have internal-only gpr_ headers that are used by grpc currently. We need to think about what we actually want to export from this library, whether it should really be free-standing, and you know, that stuff.\n\nLets setup some time to chat next week, but not hold up this PR on it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23482900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23483016", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23483016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23483020", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23483020/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23647151", "body": "I think just deleting it would be fine.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23647151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23577026", "body": "Rename to wakeup_fd_posix.h...\n\ninteger number file-descriptors are a posix concept, and trying to smear them onto Windows only ends in pain.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23577026/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23577096", "body": "Once renamed, this is a _posix dependency in a platform neutral header: we'll need to fix it, and bring back pollset_kick_posix.h, pollset_kick_windows.h.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23577096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23577126", "body": "Again, rename to wakeup_fd_posix.c.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23577126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23577161", "body": "This should probably be poll_kick_posix_test.c\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23577161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23629790", "body": "GRPC_WAKEUP_FD_GET_READ_FD?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23629790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431828", "body": "I get the point, but suspect it's flexibility that we don't need here. I'm with @jboeuf in thinking let's just specialize the code and keep it in a .c.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431860", "body": "http://www.json.org/ seems fairly clear that there are no control codes in a string.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431880", "body": "I'd actually prefer we drop the grpc_json_static_inline and just write static.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431880/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431912", "body": "Again, it's complexity we don't need, and it does seem to be leading to confusion.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23431912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23701960", "body": "Why can't we just fopen(), process, memcmp?\nI'm not sure we need to add more infrastructure for this.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23701960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23703452", "body": "No less flexible... you could write a small set of helper functions in test/core/util to help with it.\n\nThe advantage is that it's all driven from the C code, so we don't need to replicate the infrastructure in every build system we take on.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23703452/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23710601", "body": "As far as possible I want to avoid us having anything that could be called a testing framework.\nWe have binaries that return 0 on success, 1 on pass, and some utility libraries.\n\nThe utility you need is probably:\ngpr_slice load_file(const char *filename);\n\nAnd _maybe_:\nvoid for_each_match(void _user_data, const char *globexpr, void (_cb)(void *user_data, const char *filename));\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23710601/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23732907", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23732907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23732928", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23732928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23732958", "body": "The current tests always return here.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23732958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733007", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733012", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733034", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733034/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733061", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733076", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733087", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733087/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733135", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733141", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733196", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733209", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733212", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733233", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733233/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733241", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733241/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733259", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733281", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733281/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733328", "body": "Can we add a test that triggers this path?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23733328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "YuleiXiao": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13980", "title": "AsyncSendMessage not get error when network flash", "body": "### Should this be an issue in the gRPC issue tracker?\r\n No\r\n \r\n### What version of gRPC and what language are you using?\r\n 1.8.3 C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n linux ubuntu 16.04\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\ngcc version 4.8.3\r\n \r\n### What did you do?\r\nI use ```std::shared_ptr<ClientAsyncWriter<RpcMessageRequest>> writer(client.AsyncSendMessage(&ctx, &response, &cq, tag));``` to send message. At the same time server-side network flash(2s interrupt, 1s recover, about 1 min). Client sent message success, but server did not receive anything.\r\n \r\n### What did you expect to see?\r\n client can get network interrupt error\r\n \r\n### What did you see instead?\r\nNo error, send message success \r\n\r\n \r\n### Anything else we should know about your project / environment?\r\nI capture network at server side. It looks like tcp was retransmission", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13962", "title": "how to use health check?", "body": "I see the health check document, but I am confused. Is there any example code to show how to enable health check?\r\n\r\nI call ```EnableDefaultHealthCheckService(true)``` before server start, is it open health check? Do I need something else?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adelez": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13978", "title": "Add python 3.6 to interop tests", "body": "@nathanielmanistaatgoogle ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13715", "title": "Add missing build files and targets to enable bazel", "body": "I scan the c and c++ tests and found the following missing items.\r\nMicrobenchmarks, performance, qps, thread_manager: no grpc_cc_test targets\r\nChannel, client_channel, compression, http, memory_usage, security: missing some test targets.\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13680", "title": "FLAKE: tsan test json_run_localhost:cpp_protobuf_async_unary_75Kqps_600channel_60Krpcs_300Breq_50Bresp_low_thread_count", "body": "https://sponge.corp.google.com/target?id=40acf87e-9ef5-4778-b5e0-ae11af5905bc&target=github/grpc/c%2B%2B_linux_tsan_native&searchFor=&show=ALL&sortBy=STATUS\r\n\r\nFailure\r\n48.959486002    3187 report.cc:106]              SERVER[0].http2_initiate_write_due_to_flow_control_unstalled_by_update = 0\r\nD1207 00:53:48.959492834    3187 report.cc:106]              SERVER[0].http2_initiate_write_due_to_application_ping = 0\r\nD1207 00:53:48.959499459    3187 report.cc:106]              SERVER[0].http2_initiate_write_due_to_keepalive_ping = 0\r\nD1207 00:53:48.959506214    3187 report.cc:106]              SERVER[0].http2_initiate_write_due_to_transport_flow_control_unstalled = 0\r\nD1207 00:53:48.959512949    3187 report.cc:106]              SERVER[0].http2_initiate_write_due_to_ping_response = 397\r\nD1207 00:53:48.959519561    3187 report.cc:106]              SERVER[0].http2_initiate_write_due_to_force_rst_stream = 0\r\nD1207 00:53:48.959526165    3187 report.cc:106]              SERVER[0].http2_spurious_writes_begun = 0\r\nD1207 00:53:48.959532776    3187 report.cc:106]              SERVER[0].hpack_recv_indexed = 104760\r\nD1207 00:53:48.959539418    3187 report.cc:106]              SERVER[0].hpack_recv_lithdr_incidx = 0\r\nD1207 00:53:48.959546105    3187 report.cc:106]              SERVER[0].hpack_recv_lithdr_incidx_v = 1152\r\nD1207 00:53:48.959552722    3187 report.cc:106]              SERVER[0].hpack_recv_lithdr_notidx = 0\r\nD1207 00:53:48.959559252    3187 report.cc:106]              SERVER[0].hpack_recv_lithdr_notidx_v = 0\r\nD1207 00:53:48.959565800    3187 report.cc:106]              SERVER[0].hpack_recv_lithdr_nvridx = 0\r\nD1207 00:53:48.959572317    3187 report.cc:106]              SERVER[0].hpack_recv_lithdr_nvridx_v = 0\r\nD1207 00:53:48.959578802    3187 report.cc:106]              SERVER[0].hpack_recv_uncompressed = 2304\r\nD1207 00:53:48.959585102    3187 report.cc:106]              SERVER[0].hpack_recv_huffman = 0\r\nD1207 00:53:48.959591562    3187 report.cc:106]              SERVER[0].hpack_recv_binary = 0\r\nD1207 00:53:48.959597982    3187 report.cc:106]              SERVER[0].hpack_recv_binary_base64 = 0\r\nD1207 00:53:48.959604510    3187 report.cc:106]              SERVER[0].hpack_send_indexed = 58200\r\nD1207 00:53:48.959610903    3187 report.cc:106]              SERVER[0].hpack_send_lithdr_incidx = 0\r\nD1207 00:53:48.959617485    3187 report.cc:106]              SERVER[0].hpack_send_lithdr_incidx_v = 639\r\nD1207 00:53:48.959623887    3187 report.cc:106]              SERVER[0].hpack_send_lithdr_notidx = 0\r\nD1207 00:53:48.959630412    3187 report.cc:106]              SERVER[0].hpack_send_lithdr_notidx_v = 0\r\nD1207 00:53:48.959636789    3187 report.cc:106]              SERVER[0].hpack_send_lithdr_nvridx = 0\r\nD1207 00:53:48.959643159    3187 report.cc:106]              SERVER[0].hpack_send_lithdr_nvridx_v = 0\r\nD1207 00:53:48.959649464    3187 report.cc:106]              SERVER[0].hpack_send_uncompressed = 1278\r\nD1207 00:53:48.959655786    3187 report.cc:106]              SERVER[0].hpack_send_huffman = 0\r\nD1207 00:53:48.959662002    3187 report.cc:106]              SERVER[0].hpack_send_binary = 0\r\nD1207 00:53:48.959668383    3187 report.cc:106]              SERVER[0].hpack_send_binary_base64 = 0\r\nD1207 00:53:48.959675014    3187 report.cc:106]              SERVER[0].combiner_locks_initiated = 58377\r\nD1207 00:53:48.959684817    3187 report.cc:106]              SERVER[0].combiner_locks_scheduled_items = 93069\r\nD1207 00:53:48.959691741    3187 report.cc:106]              SERVER[0].combiner_locks_scheduled_final_items = 13927\r\nD1207 00:53:48.959698569    3187 report.cc:106]              SERVER[0].combiner_locks_offloaded = 0\r\nD1207 00:53:48.959705176    3187 report.cc:106]              SERVER[0].call_combiner_locks_initiated = 94160\r\nD1207 00:53:48.959711909    3187 report.cc:106]              SERVER[0].call_combiner_locks_scheduled_items = 117687\r\nD1207 00:53:48.959718694    3187 report.cc:106]              SERVER[0].call_combiner_set_notify_on_cancel = 11767\r\nD1207 00:53:48.959725309    3187 report.cc:106]              SERVER[0].call_combiner_cancelled = 0\r\nD1207 00:53:48.959731896    3187 report.cc:106]              SERVER[0].executor_scheduled_short_items = 3\r\nD1207 00:53:48.959738478    3187 report.cc:106]              SERVER[0].executor_scheduled_long_items = 0\r\nD1207 00:53:48.959744971    3187 report.cc:106]              SERVER[0].executor_scheduled_to_self = 0\r\nD1207 00:53:48.959751421    3187 report.cc:106]              SERVER[0].executor_wakeup_initiated = 3\r\nD1207 00:53:48.959757883    3187 report.cc:106]              SERVER[0].executor_queue_drained = 3\r\nD1207 00:53:48.959764360    3187 report.cc:106]              SERVER[0].executor_push_retries = 0\r\nD1207 00:53:48.959770940    3187 report.cc:106]              SERVER[0].server_requested_calls = 331789\r\nD1207 00:53:48.959777488    3187 report.cc:106]              SERVER[0].server_slowpath_requests_queued = 0\r\nD1207 00:53:48.959784418    3187 report.cc:106]              SERVER[0].cq_ev_queue_trylock_failures = 0\r\nD1207 00:53:48.959790920    3187 report.cc:106]              SERVER[0].cq_ev_queue_trylock_successes = 28583\r\nD1207 00:53:48.959797442    3187 report.cc:106]              SERVER[0].cq_ev_queue_transient_pop_failures = 0\r\nD1207 00:53:48.959811760    3187 report.cc:110]              SERVER[0].call_initial_size = 17164.6/21150.3/22370.9 (50/95/99%-ile)\r\nD1207 00:53:48.959823120    3187 report.cc:110]              SERVER[0].poll_events_returned = 0.0/0.0/0.0 (50/95/99%-ile)\r\nD1207 00:53:48.959834059    3187 report.cc:110]              SERVER[0].tcp_write_size = 85.0/114.1/200.7 (50/95/99%-ile)\r\nD1207 00:53:48.959844140    3187 report.cc:110]              SERVER[0].tcp_write_iov_size = 4.5/5.0/22.1 (50/95/99%-ile)\r\nD1207 00:53:48.959855395    3187 report.cc:110]              SERVER[0].tcp_read_size = 391.7/6334.6/14790.5 (50/95/99%-ile)\r\nD1207 00:53:48.959866887    3187 report.cc:110]              SERVER[0].tcp_read_offer = 12576.7/36606.0/57061.4 (50/95/99%-ile)\r\nD1207 00:53:48.959876364    3187 report.cc:110]              SERVER[0].tcp_read_offer_iov_size = 2.8/4.3/4.9 (50/95/99%-ile)\r\nD1207 00:53:48.959886813    3187 report.cc:110]              SERVER[0].http2_send_message_size = 50.5/56.4/56.9 (50/95/99%-ile)\r\nD1207 00:53:48.959896336    3187 report.cc:110]              SERVER[0].http2_send_initial_metadata_per_write = 0.0/0.0/0.0 (50/95/99%-ile)\r\nD1207 00:53:48.959905854    3187 report.cc:110]              SERVER[0].http2_send_message_per_write = 0.0/0.0/0.0 (50/95/99%-ile)\r\nD1207 00:53:48.959915238    3187 report.cc:110]              SERVER[0].http2_send_trailing_metadata_per_write = 0.0/0.0/0.0 (50/95/99%-ile)\r\nD1207 00:53:48.959924561    3187 report.cc:110]              SERVER[0].http2_send_flowctl_per_write = 0.0/0.0/0.0 (50/95/99%-ile)\r\nD1207 00:53:48.959939689    3187 report.cc:110]              SERVER[0].server_cqs_checked = 0.5/1.0/1.0 (50/95/99%-ile)\r\nI1207 00:53:48.959955106    3187 report.cc:119]              QPS: 0.0 (0.0/server core)\r\nI1207 00:53:48.959967612    3187 report.cc:124]              Latencies (50/90/95/99/99.9%-ile): 0.0/0.0/0.0/0.0/0.0 us\r\nI1207 00:53:48.959980662    3187 report.cc:134]              Server system time: 11.37%\r\nI1207 00:53:48.959989149    3187 report.cc:136]              Server user time:   621.09%\r\nI1207 00:53:48.959997102    3187 report.cc:138]              Client system time: 31.42%\r\nI1207 00:53:48.960007484    3187 report.cc:140]              Client user time:   176.20%\r\nI1207 00:53:48.960016924    3187 report.cc:145]              Server CPU usage: 79.12%\r\nI1207 00:53:48.960026648    3187 report.cc:150]              Client Polls per Request: -nan\r\nI1207 00:53:48.960034385    3187 report.cc:152]              Server Polls per Request: inf\r\nI1207 00:53:48.960043150    3187 report.cc:157]              Server Queries/CPU-sec: 0.00\r\nI1207 00:53:48.960050901    3187 report.cc:159]              Client Queries/CPU-sec: 0.00\r\nI1207 00:53:48.963919676    3163 json_run_localhost.cc:67]   driver: subprocess exited with status 1\r\nD1207 00:53:53.613550341    3176 ev_posix.cc:128]            Using polling engine: poll\r\nD1207 00:53:53.613625235    3176 dns_resolver.cc:307]        Using native dns resolver\r\nI1207 00:53:53.689633711    3163 json_run_localhost.cc:67]   worker: subprocess exited with status 66\r\nE1207 00:53:53.689677909    3163 json_run_localhost.cc:129]  assertion failed: driver_join_status == 0", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13591", "title": "FLAKE: json_run_localhost:cpp_protobuf_sync_streaming_from_server_qps_unconstrained_insecure_low_thread_count timed out", "body": "https://sponge.corp.google.com/target?id=47f1c081-18a1-4b74-a569-ea6e95585005&target=github/grpc/c%2B%2B_linux_tsan_native&searchFor=&show=ALL&sortBy=STATUS\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13560", "title": "Add size and/or timeout attributes to bazel targets", "body": "Currently some tests (such as //test/cpp/end2end:client_crash_test) time out because the size is medium and there's no way to configure that. @nicolasnoble ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13560/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/9849bc6a0f8a0f4b98242f2a2bb3c88d75d31538", "message": "Merge pull request #14090 from menghanl/fix_release_matrix\n\nUpdate go release versions in client_matrix.py"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0fd2d7cf35a45dc8196768acad2516c5b7d7a04f", "message": "Merge pull request #14013 from adelez/cloud_gateways\n\nAdd cloud gateways to interop tests."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0633c9fbd258d9bff2cd70bb0a24d1e6025419e0", "message": "Add cloud gateways to interop tests."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d1e802181856fc6030fd3673e16d3eab7b67724a", "message": "Merge pull request #13742 from mehrdada/interop-matrix\n\nAdd 1.8.0 for C-based languages to interop matrix"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b734fd05e87644adeb5a5ab78e2ff7d09e73e372", "message": "Merge pull request #13995 from zhangkun83/release_java_190\n\nAdd Java 1.9.0 release to client_matrix.py"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ef7e3ea1727ec45d1f761fb43ed60e15202e25a4", "message": "Merge pull request #13920 from menghanl/fix_release_matrix\n\nAdd go release versions to client_matrix.py"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12134", "title": "Add BigQuery scope to interop VMs.", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MikeSilvis": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13960", "title": "gRPC tls with Objective-c & Go", "body": "Hi!\r\n\r\nI'm trying to establish a tls connection with a golang server using the objective-c cocoapod (but bridged to swift).\r\n\r\nI'm having a difficult time finding real documentation and what could potentially be my issue and why i keep receiving the error: `Handshake failed with fatal error SSL_ERROR_SSL: `. \r\n\r\nBelow is my implementation:\r\n\r\n``` swift\r\n        let url = Bundle.main.url(\r\n            forResource: GTConstantsManager.sharedInstance.string(key: \"grpc_cert_path\"),\r\n            withExtension: \"crt\"\r\n        )\r\n\r\n        let cert = try! String(contentsOf: url!, encoding: .utf8)\r\n\r\n        print(\"Path for file: \\(GTMobi.certPath)\")\r\n        print(\"Host is: \\(GTMobi.host)\")\r\n        print(\"Cert is : \\(cert)\")\r\n\r\n\r\n        try! GRPCCall.setTLSPEMRootCerts(\r\n            cert,\r\n            forHost: GTMobi.host\r\n        )\r\n\r\n          // I've tried both of these functions to estalish a connection\r\n//        try! GRPCCall.setTLSPEMRootCerts(\r\n//            cert,\r\n//            withPrivateKey: nil,\r\n//            withCertChain: nil,\r\n//            forHost: GTMobi.host\r\n//        )\r\n```\r\n\r\nAnd then from my logs locally: \r\n\r\n```\r\nPath for file: mobile-grpc-staging.gametime.co\r\nHost is: mobile-grpc-staging.gametime.co:8000\r\nCert is : { removed for security }\r\nE0109 11:16:57.330699000 123145475719168 ssl_transport_security.c:970] Handshake failed with fatal error SSL_ERROR_SSL: error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED.\r\nE0109 11:16:57.351562000 123145475719168 ssl_transport_security.c:970] Handshake failed with fatal error SSL_ERROR_SSL: error:1000007d:SSL routines:OPENSSL_internal:CERTIFICATE_VERIFY_FAILED.\r\nResponded with error: Optional(Error Domain=io.grpc Code=13 \"(null)\")\r\n```\r\n\r\nI was able to verify my cert is being loaded correctly from disk, and our android app is connecting. Any further help, or steps to diagnose would be great.\r\n\r\nAlso do i need to set up anything specific on my Go server to work with iOS? Our Go Client and Android client both are working correctly. My cert was generated using https://github.com/square/certstrap\r\n\r\nThanks,\r\nMike", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13960/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "alexvy86": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13959", "title": "Continuous errors in client trace \"waiting for connection state change\"", "body": "As long as a client has an open channel, an `Operation failed` error is logged every second when `GRPC_TRACE` contains `op_failure`, but the message doesn't indicate (to me) any real failure, it just pollutes the logs.\r\n\r\nThis makes me think if a channel should be created and disposed of ASAP (e.g. create it at the start of a web request and shut it down when the request completes), but that goes somewhat against the documentation [here](https://grpc.io/grpc/csharp/api/Grpc.Core.Channel.html):\r\n\r\n> Represents a gRPC channel. Channels are an abstraction of long-lived connections to remote servers. More client objects can reuse the same channel. Creating a channel is an expensive operation compared to invoking a remote call so in general you should reuse a single channel for as many calls as possible.\r\n\r\nUnless the documentation is not clear, and keeping a single channel alive throughout the whole lifetime of an application is not ideal...?\r\n\r\n### What version of gRPC and what language are you using?\r\n1.8.3, C# \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nWindows 10 Pro 1709, and also happens on Docker containers on Ubuntu 16.04.2 LTS.\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\nUsing the C# libraries. \r\n \r\n### What did you do?\r\nSimplest repro: ran the Greeter sample application with `GRPC_TRACE` set to `op_failure` and added a `Console.ReadKey()` in the client before shutting down the GRPC channel.\r\nFork of the sample app with the necessary changes [here](https://github.com/alexvy86/grpc/tree/infinite-client-errors/examples/csharp/helloworld-from-cli).\r\n \r\n### What did you expect to see?\r\nNo errors.\r\n \r\n### What did you see instead?\r\nThe same error being logged each second:\r\n`E0109 13:29:51.999381 1758658132704 C:\\jenkins\\workspace\\gRPC_build_artifacts\\platform\\windows\\workspace_csharp_ext_windows_x64\\src\\core\\lib\\surface\\completion_queue.cc:659: Operation failed: tag=00000199782E1360, error={\"created\":\"@1515526191.999000000\",\"description\":\"Timed out waiting for connection state change\",\"file\":\"C:\\jenkins\\workspace\\gRPC_build_artifacts\\platform\\windows\\workspace_csharp_ext_windows_x64\\src\\core\\ext\\filters\\client_channel\\channel_connectivity.cc\",\"file_line\":133}`\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13958", "title": "Barrage of errors in trace when shutting down server cleanly", "body": "When letting a GRPC server shut down cleanly, I'm seeing a barrage of errors when `GRPC_TRACE` includes `op_failure`.\r\n \r\n### What version of gRPC and what language are you using?\r\n1.8.3, C# \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nWindows 10 Pro 1709, and also happens on Docker containers on Ubuntu 16.04.2 LTS.\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\nUsing the C# libraries.\r\n \r\n### What did you do?\r\nSimplest repro: ran the Greeter sample application with `GRPC_TRACE` set to `op_failure` and pressed Enter to stop the GreeterServer. \r\n \r\n### What did you expect to see?\r\nNo errors. I just started the server, established no connections to it, and let it shutdown.\r\n \r\n### What did you see instead?\r\nA flood of errors, all the same message:\r\n`E0109 12:50:21.757118 0 C:\\jenkins\\workspace\\gRPC_build_artifacts\\platform\\windows\\workspace_csharp_ext_windows_x64\\src\\core\\lib\\surface\\completion_queue.cc:659: Operation failed: tag=000001DD27F487A0, error={\"created\":\"@1515523821.047000000\",\"description\":\"Server Shutdown\",\"file\":\"C:\\jenkins\\workspace\\gRPC_build_artifacts\\platform\\windows\\workspace_csharp_ext_windows_x64\\src\\core\\lib\\surface\\server.cc\",\"file_line\":1249}`\r\n \r\n### Anything else we should know about your project / environment?\r\nAs stated above, I'm seeing this when running the app directly on a Windows host, or inside Linux docker containers. [Here](https://github.com/alexvy86/grpc/tree/infinite-server-errors)'s a fork of the sample app with GRPC_TRACE set. Just run the GreeterServer app from Visual Studio and press ENTER.\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13958/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "louishust": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13956", "title": "[Question] how can i install grpc(c++ library) and protoc on centos6.5?", "body": "centos6.5 with default gcc version 4.4.7, i can not update the gcc version, so is there some other way for centos6.5 with gcc 4.4.7 to use grpc and protoc?\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13956/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "0oneo": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13942", "title": "iOS EXC_BAD_ACCESS KERN_INVALID_ADDRESS 0x0000000000000008 crash", "body": "the call stack:\r\n\r\n```\r\nCrashed: Thread\r\n0  myapp                          0x100e1ef64 grpc_lb_policy_ref (lb_policy.c:53)\r\n1  myapp                          0x100dfea64 pick_callback_start_locked (client_channel.c:1133)\r\n2  myapp                          0x100dff2a4 pick_after_resolver_result_done_locked (client_channel.c:1230)\r\n3  myapp                          0x100e012dc grpc_combiner_continue_exec_ctx (combiner.c:260)\r\n4  myapp                          0x100e0ba94 grpc_exec_ctx_flush (exec_ctx.c:93)\r\n5  myapp                          0x100e0c128 run_closures (executor.c:81)\r\n6  myapp                          0x100e0bf78 executor_thread (executor.c:181)\r\n7  myapp                          0x100e41d24 thread_body (thd_posix.c:54)\r\n8  libsystem_pthread.dylib        0x18a04568c _pthread_body + 240\r\n9  libsystem_pthread.dylib        0x18a04559c _pthread_body + 282\r\n10 libsystem_pthread.dylib        0x18a042cb4 thread_start + 4\r\n\r\n// other thread stack\r\n\r\nThread\r\n0  libsystem_kernel.dylib         0x189f7ce1c __psynch_cvwait + 8\r\n1  libsystem_pthread.dylib        0x18a044814 _pthread_cond_wait + 640\r\n2  myapp                          0x100e3f4c8 gpr_cv_wait (sync_posix.c:80)\r\n3  myapp                          0x100e447e8 timer_thread (timer_manager.c:196)\r\n4  myapp                          0x100e41d24 thread_body (thd_posix.c:54)\r\n5  libsystem_pthread.dylib        0x18a04568c _pthread_body + 240\r\n6  libsystem_pthread.dylib        0x18a04559c _pthread_body + 282\r\n7  libsystem_pthread.dylib        0x18a042cb4 thread_start + 4\r\n\r\ncom.apple.root.default-qos\r\n0  libsystem_kernel.dylib         0x189f6377c poll + 8\r\n1  myapp                          0x100e093b0 pollset_work (ev_poll_posix.c:993)\r\n2  myapp                         0x100e02374 cq_next (completion_queue.c:911)\r\n3  myapp                         0x100de840c __27-[GRPCCompletionQueue init]_block_invoke_2 (GRPCCompletionQueue.m:56)\r\n4  libdispatch.dylib              0x189e3a9e0 _dispatch_call_block_and_release + 24\r\n5  libdispatch.dylib              0x189e3a9a0 _dispatch_client_callout + 16\r\n6  libdispatch.dylib              0x189e490d4 _dispatch_queue_override_invoke + 644\r\n7  libdispatch.dylib              0x189e4aa50 _dispatch_root_queue_drain + 540\r\n8  libdispatch.dylib              0x189e4a7d0 _dispatch_worker_thread3 + 124\r\n9  libsystem_pthread.dylib        0x18a043100 _pthread_wqthread + 1096\r\n10 libsystem_pthread.dylib        0x18a042cac start_wqthread + 4\r\n```\r\n\r\nthe crash happens on app start, the crash rate is like 1%\r\n  \r\n  ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "wyaron": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13939", "title": "[c++] ClientAsyncReaderWriter (async_stream.h @ 496) placement operator delete does not match placement operator new", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\n yes\r\n\r\nCreate new issues for bugs and feature requests. An issue needs to be actionable. General gRPC discussions and usage questions belong to:\r\n- [grpc.io mailing list](https://groups.google.com/forum/#!forum/grpc-io)\r\n- [StackOverflow, with `grpc` tag](http://stackoverflow.com/questions/tagged/grpc)\r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\n C++, v1.8.x\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Windows\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n VS 2015, ninja build / CMake\r\n \r\n### What did you do?\r\nIf possible, provide a recipe for reproducing the error. Try being specific and include code snippets if helpful.\r\n\r\nA similar issue to the one reported and fixed for unary call at: https://github.com/grpc/grpc/issues/11301 \r\nalso exists for streaming call in async_stream.h. \r\n \r\n### What did you expect to see?\r\n no warnings\r\n \r\n### What did you see instead?\r\n the fix is simply to add:\r\n\r\nstatic void operator delete(void*, void*) { assert(0); }\r\n\r\nat line 499. \r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13939/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stephenplusplus": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13928", "title": "ERR! Pre-built binaries not found for grpc@1.7.3 and node@6.12.2 (node-v48 ABI, musl) ", "body": "###### Copied from original issue: https://github.com/googleapis/gax-nodejs/issues/168\n\n<a href=\"/plantsmiles\"><img src=\"https://avatars2.githubusercontent.com/u/6740546?s=88&v=4\" height=44 width=44 align=left></a>@plantsmiles<br>January 5, 2018 1:51 PM\n\nI'm running `@google-cloud/language` which uses this project as direct dependency. I have not problem running `nom install` on my host computer, but this application is served in docker.\r\n\r\nAll of a sudden when building my docker images \r\n\r\n```\r\n> grpc@1.7.3 install /usr/src/app/node_modules/grpc\r\n> node-pre-gyp install --fallback-to-build --library=static_library\r\n\r\nnode-pre-gyp ERR! Tried to download(403): https://storage.googleapis.com/grpc-precompiled-binaries/node/grpc/v1.7.3/node-v48-linux-x64-musl.tar.gz \r\nnode-pre-gyp ERR! Pre-built binaries not found for grpc@1.7.3 and node@6.12.2 (node-v48 ABI, musl) (falling back to source compile with node-gyp) \r\n```\r\n\r\nThis has been working for weeks.. I do not understand why `https://storage.googleapis.com/grpc-precompiled-binaries/node/grpc/v1.7.3/node-v48-linux-x64-musl.tar.gz ` would all of a sudden would lock down that link?  Going to it in a browser \r\n\r\n```\r\n<Error>\r\n<Code>AccessDenied</Code>\r\n<Message>Access denied.</Message>\r\n<Details>\r\nAnonymous users does not have storage.objects.get access to grpc-precompiled-binaries/node/grpc/v1.7.3/node-v48-linux-x64-musl.tar.gz.\r\n</Details>\r\n</Error>\r\n```\r\n\r\nDoesn't make any sense to me .. Any ideas?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13263", "title": "Segmentation Fault in node:8.6.0-alpine Docker - grpc?", "body": "_From @glenpike on November 6, 2017 10:19_\n\nThanks for stopping by to let us know something could be better!\r\n\r\nPlease run down the following list and make sure you've tried the usual \"quick fixes\":\r\n\r\n  - Search the issues already opened: https://github.com/GoogleCloudPlatform/google-cloud-node/issues\r\n  - Search StackOverflow: http://stackoverflow.com/questions/tagged/google-cloud-platform+node.js\r\n  - Check our Troubleshooting guide: https://googlecloudplatform.github.io/google-cloud-node/#/docs/guides/troubleshooting\r\n  - Check our FAQ: https://googlecloudplatform.github.io/google-cloud-node/#/docs/guides/faq\r\n\r\nIf you are still having issues, please be sure to include as much information as possible:\r\n\r\n#### Environment details\r\n\r\n  - OS:\r\nAlpine (Docker Container)\r\n  - Node.js version:\r\n8.6.0\r\n  - npm version:\r\n5.3.0\r\n  - google-cloud-node version:\r\n@google-cloud/common 0.13.6\r\n#### Steps to reproduce\r\n\r\n  1. require `google-cloud`\r\n  2. connect to logging driver:\r\n```\r\nif (process.env.CB_LOGGER === 'google') {\r\n    const LoggingBunyan = require('@google-cloud/logging-bunyan'); // eslint-disable-line global-require\r\n    const keyConfig = {};\r\n    if (process.env.NODE_ENV === 'production') {\r\n        keyConfig.projectId = 'swoop-cmi';\r\n        keyConfig.keyFilename = '/opt/app/credentials/logging-service-account.json';\r\n    }\r\n    loggerConfig.streams.push(LoggingBunyan(keyConfig).stream());\r\n}\r\n\r\nconst logger = bunyan.createLogger(loggerConfig);\r\n\r\nexport default logger;\r\n```\r\n3. Segmentation fault\r\n\r\nThe issue seems to be due to an update in one of the native packages.  This is something I'm not sure about debugging in-situ, but it only happens on the `node:8.6.0-alpine` container, `node:8.6.0` is okay.\r\n\r\nIn the diff of the npm installed packages below, I can see grpc has had an update, so thinking it might be this.\r\n\r\n# Basic Dockerfile:\r\n```\r\nFROM node:8.6.0-alpine\r\n\r\n#For building Couchbase packages, etc. (with native bindings)\r\nRUN apk add --no-cache make gcc g++ python git libc6-compat\r\n\r\n#Cache our npm install\r\nADD repo/package.json /tmp/package.json\r\nRUN cd /tmp && npm install\r\nRUN mkdir -p /opt/app && cp -a /tmp/node_modules /opt/app\r\n\r\nADD repo/credentials /opt/app/credentials/\r\n\r\nADD repo/config /opt/app/config\r\nADD repo/src /opt/app/src\r\nADD repo/package.json /opt/app/package.json\r\nWORKDIR /opt/app\r\n\r\nEXPOSE 4000\r\nCMD [\"npm\", \"start\"]\r\n```\r\n# relevant npm installed files from broken version:\r\n\r\n```\r\n+-- @google-cloud/logging-bunyan@0.5.0\r\n| +-- @google-cloud/logging@1.1.1\r\n| | +-- @google-cloud/common@0.13.6 deduped\r\n| | +-- @google-cloud/common-grpc@0.4.2\r\n| | | +-- @google-cloud/common@0.13.6 deduped\r\n| | | +-- dot-prop@2.4.0\r\n| | | | `-- is-obj@1.0.1\r\n| | | +-- duplexify@3.5.1 deduped\r\n| | | +-- extend@3.0.1 deduped\r\n| | | +-- grpc@1.7.1\r\n| | | | +-- arguejs@0.2.3\r\n| | | | +-- lodash@4.17.4 deduped\r\n| | | | +-- nan@2.7.0 deduped\r\n| | | | +-- node-pre-gyp@0.6.39\r\n| | | | | +-- detect-libc@1.0.2\r\n| | | | | +-- hawk@3.1.3\r\n| | | | | | +-- boom@2.10.1\r\n| | | | | | | `-- hoek@2.16.3 deduped\r\n| | | | | | +-- cryptiles@2.0.5\r\n| | | | | | | `-- boom@2.10.1 deduped\r\n| | | | | | +-- hoek@2.16.3\r\n| | | | | | `-- sntp@1.0.9\r\n| | | | | |   `-- hoek@2.16.3 deduped\r\n| | | | | +-- mkdirp@0.5.1\r\n| | | | | | `-- minimist@0.0.8\r\n| | | | | +-- nopt@4.0.1\r\n| | | | | | +-- abbrev@1.0.9\r\n| | | | | | `-- osenv@0.1.4\r\n| | | | | |   +-- os-homedir@1.0.2\r\n| | | | | |   `-- os-tmpdir@1.0.2\r\n| | | | | +-- npmlog@4.1.2\r\n| | | | | | +-- are-we-there-yet@1.1.4\r\n| | | | | | | +-- delegates@1.0.0\r\n| | | | | | | `-- readable-stream@2.3.3 deduped\r\n| | | | | | +-- console-control-strings@1.1.0\r\n| | | | | | +-- gauge@2.7.4\r\n| | | | | | | +-- aproba@1.2.0\r\n| | | | | | | +-- console-control-strings@1.1.0 deduped\r\n| | | | | | | +-- has-unicode@2.0.1\r\n| | | | | | | +-- object-assign@4.1.1\r\n| | | | | | | +-- signal-exit@3.0.2\r\n| | | | | | | +-- string-width@1.0.2\r\n| | | | | | | | +-- code-point-at@1.1.0\r\n| | | | | | | | +-- is-fullwidth-code-point@1.0.0\r\n| | | | | | | | | `-- number-is-nan@1.0.1\r\n| | | | | | | | `-- strip-ansi@3.0.1 deduped\r\n| | | | | | | +-- strip-ansi@3.0.1\r\n| | | | | | | | `-- ansi-regex@2.1.1\r\n| | | | | | | `-- wide-align@1.1.2\r\n| | | | | | |   `-- string-width@1.0.2 deduped\r\n| | | | | | `-- set-blocking@2.0.0\r\n| | | | | +-- rc@1.2.2\r\n| | | | | | +-- deep-extend@0.4.2\r\n| | | | | | +-- ini@1.3.4\r\n| | | | | | +-- minimist@1.2.0\r\n| | | | | | `-- strip-json-comments@2.0.1\r\n| | | | | +-- request@2.81.0\r\n| | | | | | +-- aws-sign2@0.6.0\r\n| | | | | | +-- aws4@1.6.0\r\n| | | | | | +-- caseless@0.12.0\r\n| | | | | | +-- combined-stream@1.0.5\r\n| | | | | | | `-- delayed-stream@1.0.0\r\n| | | | | | +-- extend@3.0.1\r\n| | | | | | +-- forever-agent@0.6.1\r\n| | | | | | +-- form-data@2.1.4\r\n| | | | | | | +-- asynckit@0.4.0\r\n| | | | | | | +-- combined-stream@1.0.5 deduped\r\n| | | | | | | `-- mime-types@2.1.17 deduped\r\n| | | | | | +-- har-validator@4.2.1\r\n| | | | | | | +-- ajv@4.11.8\r\n| | | | | | | | +-- co@4.6.0\r\n| | | | | | | | `-- json-stable-stringify@1.0.1\r\n| | | | | | | |   `-- jsonify@0.0.0\r\n| | | | | | | `-- har-schema@1.0.5\r\n| | | | | | +-- hawk@3.1.3 deduped\r\n| | | | | | +-- http-signature@1.1.1\r\n| | | | | | | +-- assert-plus@0.2.0\r\n| | | | | | | +-- jsprim@1.4.1\r\n| | | | | | | | +-- assert-plus@1.0.0\r\n| | | | | | | | +-- extsprintf@1.3.0\r\n| | | | | | | | +-- json-schema@0.2.3\r\n| | | | | | | | `-- verror@1.10.0\r\n| | | | | | | |   +-- assert-plus@1.0.0\r\n| | | | | | | |   +-- core-util-is@1.0.2 deduped\r\n| | | | | | | |   `-- extsprintf@1.3.0 deduped\r\n| | | | | | | `-- sshpk@1.13.1\r\n| | | | | | |   +-- asn1@0.2.3\r\n| | | | | | |   +-- assert-plus@1.0.0\r\n| | | | | | |   +-- bcrypt-pbkdf@1.0.1\r\n| | | | | | |   | `-- tweetnacl@0.14.5 deduped\r\n| | | | | | |   +-- dashdash@1.14.1\r\n| | | | | | |   | `-- assert-plus@1.0.0\r\n| | | | | | |   +-- ecc-jsbn@0.1.1\r\n| | | | | | |   | `-- jsbn@0.1.1 deduped\r\n| | | | | | |   +-- getpass@0.1.7\r\n| | | | | | |   | `-- assert-plus@1.0.0\r\n| | | | | | |   +-- jsbn@0.1.1\r\n| | | | | | |   `-- tweetnacl@0.14.5\r\n| | | | | | +-- is-typedarray@1.0.0\r\n| | | | | | +-- isstream@0.1.2\r\n| | | | | | +-- json-stringify-safe@5.0.1\r\n| | | | | | +-- mime-types@2.1.17\r\n| | | | | | | `-- mime-db@1.30.0\r\n| | | | | | +-- oauth-sign@0.8.2\r\n| | | | | | +-- performance-now@0.2.0\r\n| | | | | | +-- qs@6.4.0\r\n| | | | | | +-- safe-buffer@5.1.1\r\n| | | | | | +-- stringstream@0.0.5\r\n| | | | | | +-- tough-cookie@2.3.3\r\n| | | | | | | `-- punycode@1.4.1\r\n| | | | | | +-- tunnel-agent@0.6.0\r\n| | | | | | | `-- safe-buffer@5.1.1 deduped\r\n| | | | | | `-- uuid@3.1.0\r\n| | | | | +-- rimraf@2.6.2\r\n| | | | | | `-- glob@7.1.1 deduped\r\n| | | | | +-- semver@5.4.1\r\n| | | | | +-- tar@2.2.1\r\n| | | | | | +-- block-stream@0.0.9\r\n| | | | | | | `-- inherits@2.0.3 deduped\r\n| | | | | | +-- fstream@1.0.11\r\n| | | | | | | +-- graceful-fs@4.1.11\r\n| | | | | | | +-- inherits@2.0.3 deduped\r\n| | | | | | | +-- mkdirp@0.5.1 deduped\r\n| | | | | | | `-- rimraf@2.6.2 deduped\r\n| | | | | | `-- inherits@2.0.3\r\n| | | | | `-- tar-pack@3.4.1\r\n| | | | |   +-- debug@2.6.8\r\n| | | | |   | `-- ms@2.0.0\r\n| | | | |   +-- fstream@1.0.11 deduped\r\n| | | | |   +-- fstream-ignore@1.0.5\r\n| | | | |   | +-- fstream@1.0.11 deduped\r\n| | | | |   | +-- inherits@2.0.3 deduped\r\n| | | | |   | `-- minimatch@3.0.4 deduped\r\n| | | | |   +-- once@1.4.0\r\n| | | | |   | `-- wrappy@1.0.2\r\n| | | | |   +-- readable-stream@2.3.3\r\n| | | | |   | +-- core-util-is@1.0.2\r\n| | | | |   | +-- inherits@2.0.3 deduped\r\n| | | | |   | +-- isarray@1.0.0\r\n| | | | |   | +-- process-nextick-args@1.0.7\r\n| | | | |   | +-- safe-buffer@5.1.1 deduped\r\n| | | | |   | +-- string_decoder@1.0.3\r\n| | | | |   | | `-- safe-buffer@5.1.1 deduped\r\n| | | | |   | `-- util-deprecate@1.0.2\r\n| | | | |   +-- rimraf@2.6.2 deduped\r\n| | | | |   +-- tar@2.2.1 deduped\r\n| | | | |   `-- uid-number@0.0.6\r\n| | | | `-- protobufjs@5.0.2\r\n| | | |   +-- ascli@1.0.1\r\n| | | |   | +-- colour@0.7.1\r\n| | | |   | `-- optjs@3.2.2\r\n| | | |   +-- bytebuffer@5.0.1\r\n| | | |   | `-- long@3.2.0 deduped\r\n| | | |   +-- glob@7.1.1\r\n| | | |   | +-- fs.realpath@1.0.0\r\n| | | |   | +-- inflight@1.0.6\r\n| | | |   | | +-- once@1.4.0 deduped\r\n| | | |   | | `-- wrappy@1.0.2 deduped\r\n| | | |   | +-- inherits@2.0.3 deduped\r\n| | | |   | +-- minimatch@3.0.4\r\n| | | |   | | `-- brace-expansion@1.1.8\r\n| | | |   | |   +-- balanced-match@1.0.0\r\n| | | |   | |   `-- concat-map@0.0.1\r\n| | | |   | +-- once@1.4.0 deduped\r\n| | | |   | `-- path-is-absolute@1.0.1\r\n| | | |   `-- yargs@3.32.0\r\n| | | |     +-- camelcase@2.1.1\r\n| | | |     +-- cliui@3.2.0 deduped\r\n| | | |     +-- decamelize@1.2.0 deduped\r\n| | | |     +-- os-locale@1.4.0 deduped\r\n| | | |     +-- string-width@1.0.2 deduped\r\n| | | |     +-- window-size@0.1.4\r\n| | | |     `-- y18n@3.2.1 deduped\r\n| | | +-- is@3.2.1 deduped\r\n| | | +-- modelo@4.2.0 deduped\r\n| | | +-- retry-request@3.1.0 deduped\r\n| | | `-- through2@2.0.3 deduped\r\n| | +-- arrify@1.0.1 deduped\r\n| | +-- eventid@0.1.2\r\n| | | +-- d64@1.0.0\r\n| | | `-- uuid@3.1.0 deduped\r\n| | +-- extend@3.0.1 deduped\r\n| | +-- gcp-metadata@0.3.1\r\n| | | +-- extend@3.0.1 deduped\r\n| | | `-- retry-request@3.1.0 deduped\r\n| | +-- google-auto-auth@0.7.2\r\n| | | +-- async@2.5.0 deduped\r\n| | | +-- gcp-metadata@0.3.1 deduped\r\n| | | +-- google-auth-library@0.10.0\r\n| | | | +-- gtoken@1.2.3\r\n| | | | | +-- google-p12-pem@0.1.2\r\n| | | | | | `-- node-forge@0.7.1\r\n| | | | | +-- jws@3.1.4 deduped\r\n| | | | | +-- mime@1.4.1 deduped\r\n| | | | | `-- request@2.83.0 deduped\r\n| | | | +-- jws@3.1.4 deduped\r\n| | | | +-- lodash.noop@3.0.1\r\n| | | | `-- request@2.83.0 deduped\r\n| | | `-- request@2.83.0 deduped\r\n| | +-- google-gax@0.14.2\r\n| | | +-- extend@3.0.1 deduped\r\n| | | +-- globby@6.1.0\r\n| | | | +-- array-union@1.0.2\r\n| | | | | `-- array-uniq@1.0.3 deduped\r\n| | | | +-- glob@7.1.2 deduped\r\n| | | | +-- object-assign@4.1.1 deduped\r\n| | | | +-- pify@2.3.0\r\n| | | | `-- pinkie-promise@2.0.1\r\n| | | |   `-- pinkie@2.0.4\r\n| | | +-- google-auto-auth@0.7.2 deduped\r\n| | | +-- google-proto-files@0.13.1 deduped\r\n| | | +-- grpc@1.7.1 deduped\r\n| | | +-- is-stream-ended@0.1.3\r\n| | | +-- lodash@4.17.4 deduped\r\n| | | +-- process-nextick-args@1.0.7\r\n| | | +-- protobufjs@6.8.0 deduped\r\n| | | +-- readable-stream@2.3.3 deduped\r\n| | | `-- through2@2.0.3 deduped\r\n| | +-- google-proto-files@0.13.1\r\n| | +-- is@3.2.1 deduped\r\n| | +-- lodash.merge@4.6.0\r\n| | +-- protobufjs@6.8.0\r\n| | | +-- @protobufjs/aspromise@1.1.2\r\n| | | +-- @protobufjs/base64@1.1.2\r\n| | | +-- @protobufjs/codegen@2.0.4\r\n| | | +-- @protobufjs/eventemitter@1.1.0\r\n| | | +-- @protobufjs/fetch@1.1.0\r\n| | | | +-- @protobufjs/aspromise@1.1.2 deduped\r\n| | | | `-- @protobufjs/inquire@1.1.0 deduped\r\n| | | +-- @protobufjs/float@1.0.2\r\n| | | +-- @protobufjs/inquire@1.1.0\r\n| | | +-- @protobufjs/path@1.1.2\r\n| | | +-- @protobufjs/pool@1.1.0\r\n| | | +-- @protobufjs/utf8@1.1.0\r\n| | | +-- @types/long@3.0.32\r\n| | | +-- @types/node@7.0.46\r\n| | | `-- long@3.2.0\r\n| | +-- pumpify@1.3.5 deduped\r\n| | +-- snakecase-keys@1.1.0\r\n| | | +-- map-obj@2.0.0\r\n| | | `-- to-snake-case@0.1.2\r\n| | |   `-- to-space-case@0.1.2\r\n| | |     `-- to-no-case@0.1.1\r\n| | +-- stream-events@1.0.2 deduped\r\n| | +-- string-format-obj@1.1.0 deduped\r\n| | `-- through2@2.0.3 deduped\r\n| `-- extend@3.0.1\r\n+-- @google-cloud/storage@1.4.0\r\n| +-- @google-cloud/common@0.13.6\r\n| | +-- array-uniq@1.0.3\r\n| | +-- arrify@1.0.1 deduped\r\n| | +-- concat-stream@1.6.0 deduped\r\n| | +-- create-error-class@3.0.2 deduped\r\n| | +-- duplexify@3.5.1 deduped\r\n| | +-- ent@2.2.0\r\n| | +-- extend@3.0.1 deduped\r\n| | +-- google-auto-auth@0.7.2 deduped\r\n| | +-- is@3.2.1 deduped\r\n| | +-- log-driver@1.2.5\r\n| | +-- methmeth@1.1.0\r\n| | +-- modelo@4.2.0\r\n| | +-- request@2.83.0\r\n| | | +-- aws-sign2@0.7.0\r\n| | | +-- aws4@1.6.0 deduped\r\n| | | +-- caseless@0.12.0 deduped\r\n| | | +-- combined-stream@1.0.5 deduped\r\n| | | +-- extend@3.0.1 deduped\r\n| | | +-- forever-agent@0.6.1 deduped\r\n| | | +-- form-data@2.3.1\r\n| | | | +-- asynckit@0.4.0 deduped\r\n| | | | +-- combined-stream@1.0.5 deduped\r\n| | | | `-- mime-types@2.1.17 deduped\r\n| | | +-- har-validator@5.0.3\r\n| | | | +-- ajv@5.3.0\r\n| | | | | +-- co@4.6.0 deduped\r\n| | | | | +-- fast-deep-equal@1.0.0\r\n| | | | | +-- fast-json-stable-stringify@2.0.0\r\n| | | | | `-- json-schema-traverse@0.3.1\r\n| | | | `-- har-schema@2.0.0\r\n| | | +-- hawk@6.0.2\r\n| | | | +-- boom@4.3.1\r\n| | | | | `-- hoek@4.2.0 deduped\r\n| | | | +-- cryptiles@3.1.2\r\n| | | | | `-- boom@5.2.0\r\n| | | | |   `-- hoek@4.2.0 deduped\r\n| | | | +-- hoek@4.2.0\r\n| | | | `-- sntp@2.1.0\r\n| | | |   `-- hoek@4.2.0 deduped\r\n| | | +-- http-signature@1.2.0\r\n| | | | +-- assert-plus@1.0.0\r\n| | | | +-- jsprim@1.4.1 deduped\r\n| | | | `-- sshpk@1.13.1 deduped\r\n| | | +-- is-typedarray@1.0.0 deduped\r\n| | | +-- isstream@0.1.2 deduped\r\n| | | +-- json-stringify-safe@5.0.1 deduped\r\n| | | +-- mime-types@2.1.17 deduped\r\n| | | +-- oauth-sign@0.8.2 deduped\r\n| | | +-- performance-now@2.1.0\r\n| | | +-- qs@6.5.1 deduped\r\n| | | +-- safe-buffer@5.1.1 deduped\r\n| | | +-- stringstream@0.0.5 deduped\r\n| | | +-- tough-cookie@2.3.3 deduped\r\n| | | +-- tunnel-agent@0.6.0\r\n| | | | `-- safe-buffer@5.1.1 deduped\r\n| | | `-- uuid@3.1.0 deduped\r\n| | +-- retry-request@3.1.0\r\n| | | +-- request@2.83.0 deduped\r\n| | | `-- through2@2.0.3 deduped\r\n| | +-- split-array-stream@1.0.3\r\n| | | +-- async@2.5.0 deduped\r\n| | | `-- is-stream-ended@0.1.3 deduped\r\n| | +-- stream-events@1.0.2 deduped\r\n| | +-- string-format-obj@1.1.0 deduped\r\n| | `-- through2@2.0.3 deduped\r\n```\r\n# npm files from working version\r\n```\r\n+-- @google-cloud/logging-bunyan@0.5.0\r\n| +-- @google-cloud/logging@1.1.1\r\n| | +-- @google-cloud/common@0.13.6 deduped\r\n| | +-- @google-cloud/common-grpc@0.4.1\r\n| | | +-- @google-cloud/common@0.13.6 deduped\r\n| | | +-- dot-prop@2.4.0\r\n| | | | `-- is-obj@1.0.1\r\n| | | +-- duplexify@3.5.1 deduped\r\n| | | +-- extend@3.0.1 deduped\r\n| | | +-- grpc@1.6.6\r\n| | | | +-- arguejs@0.2.3\r\n| | | | +-- lodash@4.17.4 deduped\r\n| | | | +-- nan@2.7.0 deduped\r\n| | | | +-- node-pre-gyp@0.6.38\r\n| | | | | +-- hawk@3.1.3\r\n| | | | | | +-- boom@2.10.1\r\n| | | | | | | `-- hoek@2.16.3 deduped\r\n| | | | | | +-- cryptiles@2.0.5\r\n| | | | | | | `-- boom@2.10.1 deduped\r\n| | | | | | +-- hoek@2.16.3\r\n| | | | | | `-- sntp@1.0.9\r\n| | | | | |   `-- hoek@2.16.3 deduped\r\n| | | | | +-- mkdirp@0.5.1\r\n| | | | | | `-- minimist@0.0.8\r\n| | | | | +-- nopt@4.0.1\r\n| | | | | | +-- abbrev@1.1.1\r\n| | | | | | `-- osenv@0.1.4\r\n| | | | | |   +-- os-homedir@1.0.2\r\n| | | | | |   `-- os-tmpdir@1.0.2\r\n| | | | | +-- npmlog@4.1.2\r\n| | | | | | +-- are-we-there-yet@1.1.4\r\n| | | | | | | +-- delegates@1.0.0\r\n| | | | | | | `-- readable-stream@2.3.3 deduped\r\n| | | | | | +-- console-control-strings@1.1.0\r\n| | | | | | +-- gauge@2.7.4\r\n| | | | | | | +-- aproba@1.2.0\r\n| | | | | | | +-- console-control-strings@1.1.0 deduped\r\n| | | | | | | +-- has-unicode@2.0.1\r\n| | | | | | | +-- object-assign@4.1.1\r\n| | | | | | | +-- signal-exit@3.0.2\r\n| | | | | | | +-- string-width@1.0.2\r\n| | | | | | | | +-- code-point-at@1.1.0\r\n| | | | | | | | +-- is-fullwidth-code-point@1.0.0\r\n| | | | | | | | | `-- number-is-nan@1.0.1\r\n| | | | | | | | `-- strip-ansi@3.0.1 deduped\r\n| | | | | | | +-- strip-ansi@3.0.1\r\n| | | | | | | | `-- ansi-regex@2.1.1\r\n| | | | | | | `-- wide-align@1.1.2\r\n| | | | | | |   `-- string-width@1.0.2 deduped\r\n| | | | | | `-- set-blocking@2.0.0\r\n| | | | | +-- rc@1.2.1\r\n| | | | | | +-- deep-extend@0.4.2\r\n| | | | | | +-- ini@1.3.4\r\n| | | | | | +-- minimist@1.2.0\r\n| | | | | | `-- strip-json-comments@2.0.1\r\n| | | | | +-- request@2.81.0\r\n| | | | | | +-- aws-sign2@0.6.0\r\n| | | | | | +-- aws4@1.6.0\r\n| | | | | | +-- caseless@0.12.0\r\n| | | | | | +-- combined-stream@1.0.5\r\n| | | | | | | `-- delayed-stream@1.0.0\r\n| | | | | | +-- extend@3.0.1\r\n| | | | | | +-- forever-agent@0.6.1\r\n| | | | | | +-- form-data@2.1.4\r\n| | | | | | | +-- asynckit@0.4.0\r\n| | | | | | | +-- combined-stream@1.0.5 deduped\r\n| | | | | | | `-- mime-types@2.1.17 deduped\r\n| | | | | | +-- har-validator@4.2.1\r\n| | | | | | | +-- ajv@4.11.8\r\n| | | | | | | | +-- co@4.6.0\r\n| | | | | | | | `-- json-stable-stringify@1.0.1\r\n| | | | | | | |   `-- jsonify@0.0.0\r\n| | | | | | | `-- har-schema@1.0.5\r\n| | | | | | +-- hawk@3.1.3 deduped\r\n| | | | | | +-- http-signature@1.1.1\r\n| | | | | | | +-- assert-plus@0.2.0\r\n| | | | | | | +-- jsprim@1.4.1\r\n| | | | | | | | +-- assert-plus@1.0.0\r\n| | | | | | | | +-- extsprintf@1.3.0\r\n| | | | | | | | +-- json-schema@0.2.3\r\n| | | | | | | | `-- verror@1.10.0\r\n| | | | | | | |   +-- assert-plus@1.0.0\r\n| | | | | | | |   +-- core-util-is@1.0.2 deduped\r\n| | | | | | | |   `-- extsprintf@1.3.0 deduped\r\n| | | | | | | `-- sshpk@1.13.1\r\n| | | | | | |   +-- asn1@0.2.3\r\n| | | | | | |   +-- assert-plus@1.0.0\r\n| | | | | | |   +-- bcrypt-pbkdf@1.0.1\r\n| | | | | | |   | `-- tweetnacl@0.14.5 deduped\r\n| | | | | | |   +-- dashdash@1.14.1\r\n| | | | | | |   | `-- assert-plus@1.0.0\r\n| | | | | | |   +-- ecc-jsbn@0.1.1\r\n| | | | | | |   | `-- jsbn@0.1.1 deduped\r\n| | | | | | |   +-- getpass@0.1.7\r\n| | | | | | |   | `-- assert-plus@1.0.0\r\n| | | | | | |   +-- jsbn@0.1.1\r\n| | | | | | |   `-- tweetnacl@0.14.5\r\n| | | | | | +-- is-typedarray@1.0.0\r\n| | | | | | +-- isstream@0.1.2\r\n| | | | | | +-- json-stringify-safe@5.0.1\r\n| | | | | | +-- mime-types@2.1.17\r\n| | | | | | | `-- mime-db@1.30.0\r\n| | | | | | +-- oauth-sign@0.8.2\r\n| | | | | | +-- performance-now@0.2.0\r\n| | | | | | +-- qs@6.4.0\r\n| | | | | | +-- safe-buffer@5.1.1\r\n| | | | | | +-- stringstream@0.0.5\r\n| | | | | | +-- tough-cookie@2.3.3\r\n| | | | | | | `-- punycode@1.4.1\r\n| | | | | | +-- tunnel-agent@0.6.0\r\n| | | | | | | `-- safe-buffer@5.1.1 deduped\r\n| | | | | | `-- uuid@3.1.0\r\n| | | | | +-- rimraf@2.6.2\r\n| | | | | | `-- glob@7.1.2 deduped\r\n| | | | | +-- semver@5.4.1\r\n| | | | | +-- tar@2.2.1\r\n| | | | | | +-- block-stream@0.0.9\r\n| | | | | | | `-- inherits@2.0.3 deduped\r\n| | | | | | +-- fstream@1.0.11\r\n| | | | | | | +-- graceful-fs@4.1.11\r\n| | | | | | | +-- inherits@2.0.3 deduped\r\n| | | | | | | +-- mkdirp@0.5.1 deduped\r\n| | | | | | | `-- rimraf@2.6.2 deduped\r\n| | | | | | `-- inherits@2.0.3\r\n| | | | | `-- tar-pack@3.4.0\r\n| | | | |   +-- debug@2.6.9\r\n| | | | |   | `-- ms@2.0.0\r\n| | | | |   +-- fstream@1.0.11 deduped\r\n| | | | |   +-- fstream-ignore@1.0.5\r\n| | | | |   | +-- fstream@1.0.11 deduped\r\n| | | | |   | +-- inherits@2.0.3 deduped\r\n| | | | |   | `-- minimatch@3.0.4 deduped\r\n| | | | |   +-- once@1.4.0\r\n| | | | |   | `-- wrappy@1.0.2\r\n| | | | |   +-- readable-stream@2.3.3\r\n| | | | |   | +-- core-util-is@1.0.2\r\n| | | | |   | +-- inherits@2.0.3 deduped\r\n| | | | |   | +-- isarray@1.0.0\r\n| | | | |   | +-- process-nextick-args@1.0.7\r\n| | | | |   | +-- safe-buffer@5.1.1 deduped\r\n| | | | |   | +-- string_decoder@1.0.3\r\n| | | | |   | | `-- safe-buffer@5.1.1 deduped\r\n| | | | |   | `-- util-deprecate@1.0.2\r\n| | | | |   +-- rimraf@2.6.2 deduped\r\n| | | | |   +-- tar@2.2.1 deduped\r\n| | | | |   `-- uid-number@0.0.6\r\n| | | | `-- protobufjs@5.0.2\r\n| | | |   +-- ascli@1.0.1\r\n| | | |   | +-- colour@0.7.1\r\n| | | |   | `-- optjs@3.2.2\r\n| | | |   +-- bytebuffer@5.0.1\r\n| | | |   | `-- long@3.2.0 deduped\r\n| | | |   +-- glob@7.1.2\r\n| | | |   | +-- fs.realpath@1.0.0\r\n| | | |   | +-- inflight@1.0.6\r\n| | | |   | | +-- once@1.4.0 deduped\r\n| | | |   | | `-- wrappy@1.0.2 deduped\r\n| | | |   | +-- inherits@2.0.3 deduped\r\n| | | |   | +-- minimatch@3.0.4\r\n| | | |   | | `-- brace-expansion@1.1.8\r\n| | | |   | |   +-- balanced-match@1.0.0\r\n| | | |   | |   `-- concat-map@0.0.1\r\n| | | |   | +-- once@1.4.0 deduped\r\n| | | |   | `-- path-is-absolute@1.0.1\r\n| | | |   `-- yargs@3.32.0\r\n| | | |     +-- camelcase@2.1.1\r\n| | | |     +-- cliui@3.2.0\r\n| | | |     | +-- string-width@1.0.2 deduped\r\n| | | |     | +-- strip-ansi@3.0.1 deduped\r\n| | | |     | `-- wrap-ansi@2.1.0\r\n| | | |     |   +-- string-width@1.0.2 deduped\r\n| | | |     |   `-- strip-ansi@3.0.1 deduped\r\n| | | |     +-- decamelize@1.2.0 deduped\r\n| | | |     +-- os-locale@1.4.0\r\n| | | |     | `-- lcid@1.0.0\r\n| | | |     |   `-- invert-kv@1.0.0\r\n| | | |     +-- string-width@1.0.2 deduped\r\n| | | |     +-- window-size@0.1.4\r\n| | | |     `-- y18n@3.2.1\r\n| | | +-- is@3.2.1 deduped\r\n| | | +-- modelo@4.2.0 deduped\r\n| | | +-- retry-request@3.1.0 deduped\r\n| | | `-- through2@2.0.3 deduped\r\n| | +-- arrify@1.0.1 deduped\r\n| | +-- eventid@0.1.2\r\n| | | +-- d64@1.0.0\r\n| | | `-- uuid@3.1.0 deduped\r\n| | +-- extend@3.0.1 deduped\r\n| | +-- gcp-metadata@0.3.1\r\n| | | +-- extend@3.0.1 deduped\r\n| | | `-- retry-request@3.1.0 deduped\r\n| | +-- google-auto-auth@0.7.2\r\n| | | +-- async@2.5.0 deduped\r\n| | | +-- gcp-metadata@0.3.1 deduped\r\n| | | +-- google-auth-library@0.10.0\r\n| | | | +-- gtoken@1.2.2\r\n| | | | | +-- google-p12-pem@0.1.2\r\n| | | | | | `-- node-forge@0.7.1\r\n| | | | | +-- jws@3.1.4 deduped\r\n| | | | | +-- mime@1.4.1\r\n| | | | | `-- request@2.83.0 deduped\r\n| | | | +-- jws@3.1.4 deduped\r\n| | | | +-- lodash.noop@3.0.1\r\n| | | | `-- request@2.83.0 deduped\r\n| | | `-- request@2.83.0 deduped\r\n| | +-- google-gax@0.14.2\r\n| | | +-- extend@3.0.1 deduped\r\n| | | +-- globby@6.1.0\r\n| | | | +-- array-union@1.0.2\r\n| | | | | `-- array-uniq@1.0.3 deduped\r\n| | | | +-- glob@7.1.2 deduped\r\n| | | | +-- object-assign@4.1.1 deduped\r\n| | | | +-- pify@2.3.0\r\n| | | | `-- pinkie-promise@2.0.1\r\n| | | |   `-- pinkie@2.0.4\r\n| | | +-- google-auto-auth@0.7.2 deduped\r\n| | | +-- google-proto-files@0.13.1 deduped\r\n| | | +-- grpc@1.6.6 deduped\r\n| | | +-- is-stream-ended@0.1.3\r\n| | | +-- lodash@4.17.4 deduped\r\n| | | +-- process-nextick-args@1.0.7\r\n| | | +-- protobufjs@6.8.0 deduped\r\n| | | +-- readable-stream@2.3.3 deduped\r\n| | | `-- through2@2.0.3 deduped\r\n| | +-- google-proto-files@0.13.1\r\n| | +-- is@3.2.1 deduped\r\n| | +-- lodash.merge@4.6.0\r\n| | +-- protobufjs@6.8.0\r\n| | | +-- @protobufjs/aspromise@1.1.2\r\n| | | +-- @protobufjs/base64@1.1.2\r\n| | | +-- @protobufjs/codegen@2.0.4\r\n| | | +-- @protobufjs/eventemitter@1.1.0\r\n| | | +-- @protobufjs/fetch@1.1.0\r\n| | | | +-- @protobufjs/aspromise@1.1.2 deduped\r\n| | | | `-- @protobufjs/inquire@1.1.0 deduped\r\n| | | +-- @protobufjs/float@1.0.2\r\n| | | +-- @protobufjs/inquire@1.1.0\r\n| | | +-- @protobufjs/path@1.1.2\r\n| | | +-- @protobufjs/pool@1.1.0\r\n| | | +-- @protobufjs/utf8@1.1.0\r\n| | | +-- @types/long@3.0.32\r\n| | | +-- @types/node@7.0.46\r\n| | | `-- long@3.2.0\r\n| | +-- pumpify@1.3.5 deduped\r\n| | +-- snakecase-keys@1.1.0\r\n| | | +-- map-obj@2.0.0\r\n| | | `-- to-snake-case@0.1.2\r\n| | |   `-- to-space-case@0.1.2\r\n| | |     `-- to-no-case@0.1.1\r\n| | +-- stream-events@1.0.2 deduped\r\n| | +-- string-format-obj@1.1.0 deduped\r\n| | `-- through2@2.0.3 deduped\r\n| `-- extend@3.0.1\r\n+-- @google-cloud/storage@1.4.0\r\n| +-- @google-cloud/common@0.13.6\r\n| | +-- array-uniq@1.0.3\r\n| | +-- arrify@1.0.1 deduped\r\n| | +-- concat-stream@1.6.0 deduped\r\n| | +-- create-error-class@3.0.2 deduped\r\n| | +-- duplexify@3.5.1 deduped\r\n| | +-- ent@2.2.0\r\n| | +-- extend@3.0.1 deduped\r\n| | +-- google-auto-auth@0.7.2 deduped\r\n| | +-- is@3.2.1 deduped\r\n| | +-- log-driver@1.2.5\r\n| | +-- methmeth@1.1.0\r\n| | +-- modelo@4.2.0\r\n| | +-- request@2.83.0\r\n| | | +-- aws-sign2@0.7.0\r\n| | | +-- aws4@1.6.0 deduped\r\n| | | +-- caseless@0.12.0 deduped\r\n| | | +-- combined-stream@1.0.5 deduped\r\n| | | +-- extend@3.0.1 deduped\r\n| | | +-- forever-agent@0.6.1 deduped\r\n| | | +-- form-data@2.3.1\r\n| | | | +-- asynckit@0.4.0 deduped\r\n| | | | +-- combined-stream@1.0.5 deduped\r\n| | | | `-- mime-types@2.1.17 deduped\r\n| | | +-- har-validator@5.0.3\r\n| | | | +-- ajv@5.2.4\r\n| | | | | +-- co@4.6.0 deduped\r\n| | | | | +-- fast-deep-equal@1.0.0\r\n| | | | | +-- json-schema-traverse@0.3.1\r\n| | | | | `-- json-stable-stringify@1.0.1 deduped\r\n| | | | `-- har-schema@2.0.0\r\n| | | +-- hawk@6.0.2\r\n| | | | +-- boom@4.3.1\r\n| | | | | `-- hoek@4.2.0 deduped\r\n| | | | +-- cryptiles@3.1.2\r\n| | | | | `-- boom@5.2.0\r\n| | | | |   `-- hoek@4.2.0 deduped\r\n| | | | +-- hoek@4.2.0\r\n| | | | `-- sntp@2.0.2\r\n| | | |   `-- hoek@4.2.0 deduped\r\n| | | +-- http-signature@1.2.0\r\n| | | | +-- assert-plus@1.0.0\r\n| | | | +-- jsprim@1.4.1 deduped\r\n| | | | `-- sshpk@1.13.1 deduped\r\n| | | +-- is-typedarray@1.0.0 deduped\r\n| | | +-- isstream@0.1.2 deduped\r\n| | | +-- json-stringify-safe@5.0.1 deduped\r\n| | | +-- mime-types@2.1.17 deduped\r\n| | | +-- oauth-sign@0.8.2 deduped\r\n| | | +-- performance-now@2.1.0\r\n| | | +-- qs@6.5.1 deduped\r\n| | | +-- safe-buffer@5.1.1 deduped\r\n| | | +-- stringstream@0.0.5 deduped\r\n| | | +-- tough-cookie@2.3.3 deduped\r\n| | | +-- tunnel-agent@0.6.0\r\n| | | | `-- safe-buffer@5.1.1 deduped\r\n| | | `-- uuid@3.1.0 deduped\r\n| | +-- retry-request@3.1.0\r\n| | | +-- request@2.83.0 deduped\r\n| | | `-- through2@2.0.3 deduped\r\n| | +-- split-array-stream@1.0.3\r\n| | | +-- async@2.5.0 deduped\r\n| | | `-- is-stream-ended@0.1.3 deduped\r\n| | +-- stream-events@1.0.2 deduped\r\n| | +-- string-format-obj@1.1.0 deduped\r\n| | `-- through2@2.0.3 deduped\r\n```\r\n\r\n\n\n_Copied from original issue: GoogleCloudPlatform/google-cloud-node#2725_", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chakradarraju": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13926", "title": "Missing com_google_protobuf_cc dependency", "body": "I'm trying to build a simple cc_binary with gRPC and it fails because some dependencies are not met, see error:\r\nevery rule of type proto_library implicitly depends upon the target '@com_google_protobuf_cc//:cc_toolchain', but this target could not be found because of: no such package '@com_google_protobuf_cc//': The repository could not be resolved.\r\n\r\nI've included this in my WORKSPACE:\r\nload(\"@com_github_grpc_grpc//bazel:grpc_deps.bzl\", \"grpc_deps\")\r\ngrpc_deps()\r\n\r\nwhich should have taken care of dependency.\r\n\r\nPlease answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\n \r\nCreate new issues for bugs and feature requests. An issue needs to be actionable. General gRPC discussions and usage questions belong to:\r\n- [grpc.io mailing list](https://groups.google.com/forum/#!forum/grpc-io)\r\n- [StackOverflow, with `grpc` tag](http://stackoverflow.com/questions/tagged/grpc)\r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\n v1.8.3\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Linux (Ubuntu 17.10)\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n I'm using bazel and compiling a cc_binary\r\n \r\n### What did you do?\r\nHere is my workspace file:\r\nhttp_archive(\r\n    name = \"com_github_grpc_grpc\",\r\n    urls = [\"https://github.com/grpc/grpc/archive/v1.8.3.zip\"],\r\n    sha256 = \"57a2c67abe789ce9e80d49f473515c7479ae494e87dba84463b10bbd0990ad62\",\r\n    strip_prefix = \"grpc-1.8.3\",\r\n)\r\n\r\nload(\"@com_github_grpc_grpc//bazel:grpc_deps.bzl\", \"grpc_deps\")\r\ngrpc_deps()\r\n\r\nBUILD file:\r\nproto_library(\r\n    name = \"test_proto\",\r\n    srcs = [\"test.proto\"],\r\n)\r\n\r\ncc_proto_library(\r\n    name = \"test_cc_proto\",\r\n    deps = [\":test_proto\"],\r\n)\r\n\r\ncc_binary(\r\n    name = \"hello\",\r\n    srcs = [\"hello.cc\"],\r\n    deps = [ \r\n        \":test_cc_proto\",\r\n        \"@com_github_grpc_grpc//:grpc++\",\r\n    ],  \r\n)\r\n\r\nmake a simple test.proto file and hello.cc files and then:\r\nbazel build :hello\r\n\r\nshould throw the error.\r\n \r\n### What did you expect to see?\r\n To build without erro\r\n \r\n### What did you see instead?\r\n every rule of type proto_library implicitly depends upon the target '@com_google_protobuf_cc//:cc_toolchain', but this target could not be found because of: no such package '@com_google_protobuf_cc//': The repository could not be resolved.\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13926/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "MDOpus": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13925", "title": "error: cannot find module 'Error: Cannot find module 'test/node_modules/grpc/src/node/extension_binary/node-v51-linux-x64-glibc/grpc_node.node''", "body": "I am trying to use google-cloud/speech. I am able to install the module @google-cloud/speech but when trying to run the program, getting this error.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "murgatroid99": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13923", "title": "json_run_localhost:cpp_protobuf_async_streaming_qps_unconstrained_insecure TIMEOUT", "body": "https://sponge.corp.google.com/target?id=1f7f506e-36c4-42a3-831f-5f8d253cf81b&target=github/grpc/c%2B%2B_linux_dbg_native&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\nTimeout\r\n:40.139694130   14933 qps_worker.cc:69]           Starting server of type ASYNC_SERVER\r\nI0105 00:05:40.141192510   14933 server_async.cc:94]         Sizing async server to 32 threads\r\nI0105 00:05:41.100177212   14933 qps_worker.cc:239]          RunServerBody: server created\r\nI0105 00:05:41.100325051   14933 qps_worker.cc:246]          RunServerBody: creation status reported\r\nI0105 00:05:41.100518902   14929 driver.cc:328]              Starting client on localhost:27539 (worker #1)\r\nD0105 00:05:41.100602690   14929 driver.cc:350]              Client 0 gets 64 channels\r\nI0105 00:05:41.101492091   14945 qps_worker.cc:188]          RunClientBody: about to create client\r\nI0105 00:05:41.101885038   14945 qps_worker.cc:50]           Starting client of type ASYNC_CLIENT STREAMING 0\r\nI0105 00:05:41.102195304   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102241720   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102291593   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102326261   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102359426   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102393497   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102425351   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102457435   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102490158   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102525121   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102557953   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102596595   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102629085   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102664647   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102697199   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102732682   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102773855   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102810790   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102847676   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102882391   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102922292   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.102975542   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103011015   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103042908   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103081995   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103116997   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103148576   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103183276   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103217506   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103248534   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103287645   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103323554   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103362498   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103400765   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103435481   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103470288   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103502315   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103536726   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103571547   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103603352   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103637898   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103672426   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103704211   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103738620   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103775184   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103811036   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103846331   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103880717   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103912270   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103946884   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.103981876   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104013845   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104049488   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104083267   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104114740   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104148944   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104180393   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104216399   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104250971   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104286475   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104322560   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104380236   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104414405   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.104450604   14945 client.h:427]               Connecting to localhost:10495\r\nI0105 00:05:41.193774535   14945 client_async.cc:224]        Sizing async client to 32 threads\r\nI0105 00:05:41.359487690   14945 qps_worker.cc:193]          RunClientBody: client created\r\nI0105 00:05:41.359600909   14945 qps_worker.cc:198]          RunClientBody: creation status reported\r\nI0105 00:05:41.359691344   14929 driver.cc:371]              Initiating\r\nI0105 00:05:41.359805221   14945 qps_worker.cc:200]          RunClientBody: Message read\r\nI0105 00:05:41.368725605   14945 qps_worker.cc:209]          RunClientBody: Mark response given\r\nI0105 00:05:41.369316209   14929 driver.cc:392]              Warming up\r\nI0105 00:05:41.369337781   14929 driver.cc:398]              Starting\r\nI0105 00:05:41.369462609   14945 qps_worker.cc:200]          RunClientBody: Message read\r\nI0105 00:05:41.369595170   14933 qps_worker.cc:248]          RunServerBody: Message read\r\nI0105 00:05:41.373887532   14945 qps_worker.cc:209]          RunClientBody: Mark response given\r\nI0105 00:05:41.377152770   14933 qps_worker.cc:257]          RunServerBody: Mark response given\r\nI0105 00:05:41.378201102   14929 driver.cc:425]              Running\r\nI0105 00:05:42.369454352   14929 driver.cc:439]              Finishing clients\r\nI0105 00:05:42.369634049   14945 qps_worker.cc:200]          RunClientBody: Message read\r\nI0105 00:05:42.371379221   14945 qps_worker.cc:209]          RunClientBody: Mark response given\r\nI0105 00:05:42.371400882   14945 qps_worker.cc:212]          RunClientBody: Awaiting Threads Completion\r\nI0105 00:05:42.371867024   14929 driver.cc:453]              Received final status from client 0\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13923/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13795", "title": "Kokoro infrastructure failure", "body": "https://sponge.corp.google.com/target?id=1eb4ff5d-8a45-4ab4-9757-631a568ddc6d&target=grpc%2Fubuntu%2Fpull_request%2Fgrpc_basictests_multilang&searchFor=\r\n\r\n```\r\n2017-12-14 21:00:07,892 START: make\r\n\r\n2017-12-14 13:59:29,328 TIMEOUT: run_tests_php_linux_dbg_native [pid=15773, time=3609.2sec]\r\n2017-12-14 13:59:29,341 FAILED: Some run_tests.py instance have failed.\r\n+ FAILED=true\r\n+ ps aux\r\n+ grep -i kbuilder\r\n\r\n\r\nERROR: Aborting VM command due to timeout of 14400 seconds\r\n\r\nWarning: Permanently added 'localhost' (ECDSA) to the list of known hosts.\r\nTimeout, server localhost not responding.\r\nrsync: connection unexpectedly closed (0 bytes received so far) [Receiver]\r\nrsync error: unexplained error (code 255) at io.c(601) [Receiver=3.0.7]\r\nnc: connection failed, SOCKS error 5\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13795/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13780", "title": "The Node Alpine Linux 32-bit build fails trying to build core", "body": "Specifically, when trying to build `src/core/lib/debug/stats_data.cc`, it outputs the following error\r\n\r\n```\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_call_initial_size(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:357:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4651092515166879744ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_poll_events_returned(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:382:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4642789003353915392ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_tcp_write_size(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:408:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4683743612465315840ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_tcp_write_iov_size(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:433:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4637863191261478912ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_tcp_read_size(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:458:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4683743612465315840ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_tcp_read_offer(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:483:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4683743612465315840ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_tcp_read_offer_iov_size(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:509:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4637863191261478912ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_http2_send_message_size(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:536:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4683743612465315840ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_http2_send_initial_metadata_per_write(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:564:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4637863191261478912ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_http2_send_message_per_write(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:592:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4637863191261478912ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_http2_send_trailing_metadata_per_write(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:620:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4637863191261478912ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_http2_send_flowctl_per_write(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:648:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4637863191261478912ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\n../deps/grpc/src/core/lib/debug/stats_data.cc: In function 'void grpc_stats_inc_server_cqs_checked(grpc_exec_ctx*, int)':\r\n../deps/grpc/src/core/lib/debug/stats_data.cc:674:17: error: comparison is always true due to limited range of data type [-Werror=type-limits]\r\n   if (_val.uint < 4625196817309499392ull) {\r\n       ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~\r\ncc1plus: all warnings being treated as errors\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13780/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13572", "title": "TIMEOUT: bins/opt/h2_census_nosec_test keepalive_timeout GRPC_POLL_STRATEGY=epollex", "body": "https://sponge.corp.google.com/target?id=da203158-a4d1-4f3c-8030-864af98095da&target=grpc/ubuntu/pull_request/grpc_basictests_c_opt&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\n2017-11-29 02:04:08,617 D1129 01:59:02.475198724   14348 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nD1129 01:59:02.475412626   14348 ev_posix.cc:131]            Using polling engine: epollex\r\nD1129 01:59:02.475434545   14348 dns_resolver.cc:307]        Using native dns resolver\r\nI1129 01:59:02.475471381   14348 keepalive_timeout.cc:42]    keepalive_timeout/chttp2/fullstack+census\r\n\r\n2017-11-29 02:04:08,617 TIMEOUT: bins/opt/h2_census_nosec_test keepalive_timeout GRPC_POLL_STRATEGY=epollex [pid=14348, time=306.2sec]\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13445", "title": "Asan C++ failure: bins/asan/bm_fullstack_unary_ping_pong --benchmark_filter=BM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>", "body": "https://sponge.corp.google.com/target?id=d52c2163-c7fd-4c76-99cb-f15daf4fa3fc&target=grpc/ubuntu/pull_request/grpc_cpp_asan&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\n2017-11-17 17:57:17,102 D1117 17:57:15.865400836    4872 ev_posix.cc:135]            Using polling engine: epollex\r\nD1117 17:57:15.865638620    4872 dns_resolver.cc:307]        Using native dns resolver\r\nRun on (32 X 2600 MHz CPU s)\r\n2017-11-17 17:57:15\r\n***WARNING*** Library was built as DEBUG. Timings may be affected.\r\n=================================================================\r\n\u001b[1m\u001b[31m--------------------------------------------------------------------------------------------------------------------------\r\nBenchmark                                                                   Time           CPU Iterations UserCounters...\r\n--------------------------------------------------------------------------------------------------------------------------\r\n\u001b[0;32mBM_UnaryPingPong<MinInProcessCHTTP2, NoOpMutator, NoOpMutator>/1/0 \u001b[m\u001b[0;33m    285696 ns     285492 ns \u001b[m\u001b[0;36m      2437\u001b[m call_initial_size-99p=15.3421k\u001b[m call_initial_size-median=9.61926k\u001b[m http2_send_flowctl_per_write-99p=0\u001b[m http2_send_flowctl_per_write-median=0\u001b[m http2_send_initial_metadata_per_write-99p=0\u001b[m http2_send_initial_metadata_per_write-median=0\u001b[m http2_send_message_per_write-99p=0\u001b[m http2_send_message_per_write-median=0\u001b[m http2_send_message_size-99p=3.98\u001b[m http2_send_message_size-median=1.5\u001b[m http2_send_trailing_metadata_per_write-99p=0\u001b[m http2_send_trailing_metadata_per_write-median=0\u001b[m poll_events_returned-99p=0\u001b[m poll_events_returned-median=0\u001b[m server_cqs_checked-99p=0.99\u001b[m server_cqs_checked-median=0.5\u001b[m tcp_read_offer-99p=0\u001b[m tcp_read_offer-median=0\u001b[m tcp_read_offer_iov_size-99p=0\u001b[m tcp_read_offer_iov_size-median=0\u001b[m tcp_read_size-99p=0\u001b[m tcp_read_size-median=0\u001b[m tcp_write_iov_size-99p=0\u001b[m tcp_write_iov_size-median=0\u001b[m tcp_write_size-99p=0\u001b[m tcp_write_size-median=0\u001b[m   3.42063kB/s\u001b[m client_calls_created/iter:1 server_calls_created/iter:1 cqs_created/iter:0.000410341 client_channels_created/iter:0.000410341 client_subchannels_created/iter:0 server_channels_created/iter:0.000410341 syscall_poll/iter:0.000820681 syscall_wait/iter:0 pollset_kick/iter:5 pollset_kicked_without_poller/iter:4.99918 pollset_kicked_again/iter:0 pollset_kick_wakeup_fd/iter:0.000820681 pollset_kick_wakeup_cv/iter:0 pollset_kick_own_thread/iter:0 histogram_slow_lookups/iter:2 syscall_write/iter:0 syscall_read/iter:0 tcp_backup_pollers_created/iter:0 tcp_backup_poller_polls/iter:0 http2_op_batches/iter:6 http2_op_cancel/iter:0 http2_op_send_initial_metadata/iter:2 http2_op_send_message/iter:2 http2_op_send_trailing_metadata/iter:2 http2_op_recv_initial_metadata/iter:2 http2_op_recv_message/iter:2 http2_op_recv_trailing_metadata/iter:2 http2_settings_writes/iter:0.000820681 http2_pings_sent/iter:0.00287238 http2_writes_begun/iter:2.00328 http2_writes_offloaded/iter:0 http2_writes_continued/iter:0 http2_partial_writes/iter:0 http2_initiate_write_due_to_initial_write/iter:0 http2_initiate_write_due_to_start_new_stream/iter:1 http2_initiate_write_due_to_send_message/iter:0 http2_initiate_write_due_to_send_initial_metadata/iter:1 http2_initiate_write_due_to_send_trailing_metadata/iter:0 http2_initiate_write_due_to_retry_send_ping/iter:0 http2_initiate_write_due_to_continue_pings/iter:0 http2_initiate_write_due_to_goaway_sent/iter:0 http2_initiate_write_due_to_rst_stream/iter:0 http2_initiate_write_due_to_close_from_api/iter:0 http2_initiate_write_due_to_stream_flow_control/iter:0 http2_initiate_write_due_to_transport_flow_control/iter:0.000820681 http2_initiate_write_due_to_send_settings/iter:0 http2_initiate_write_due_to_bdp_estimator_ping/iter:0 http2_initiate_write_due_to_flow_control_unstalled_by_setting/iter:0 http2_initiate_write_due_to_flow_control_unstalled_by_update/iter:0 http2_initiate_write_due_to_application_ping/iter:0 http2_initiate_write_due_to_keepalive_ping/iter:0 http2_initiate_write_due_to_transport_flow_control_unstalled/iter:0 http2_initiate_write_due_to_ping_response/iter:0.00246204 http2_initiate_write_due_to_force_rst_stream/iter:0 http2_spurious_writes_begun/iter:0 hpack_recv_indexed/iter:9.9959 hpack_recv_lithdr_incidx/iter:0 hpack_recv_lithdr_incidx_v/iter:0.00410341 hpack_recv_lithdr_notidx/iter:0 hpack_recv_lithdr_notidx_v/iter:0 hpack_recv_lithdr_nvridx/iter:0 hpack_recv_lithdr_nvridx_v/iter:0 hpack_recv_uncompressed/iter:0.00820681 hpack_recv_huffman/iter:0 hpack_recv_binary/iter:0 hpack_recv_binary_base64/iter:0 hpack_send_indexed/iter:9.9959 hpack_send_lithdr_incidx/iter:0 hpack_send_lithdr_incidx_v/ite==4872==ERROR: AddressSanitizer: heap-use-after-free on address 0x624000073ea0 at pc 0x0000006fd845 bp 0x7f046fbfe0b0 sp 0x7f046fbfe0a8\r\nr:0.00410341 hpack_send_lithdr_notidx/iter:0 hpack_send_lithdr_notidx_v/iter:0 hpack_send_lithdr_nvridx/iter:0 hpack_send_lithdr_nvridx_v/iter:0 hpack_send_uncompressed/iter:0.00820681 hpack_send_huffman/iter:0 hpack_send_binary/iter:0 hpack_send_binary_base64/iter:0 combiner_locks_initiated/iter:14.0033 combiner_locks_scheduled_items/iter:14.0197 combiner_locks_scheduled_final_items/iter:2.0041 combiner_locks_offloaded/iter:0 call_combiner_locks_initiated/iter:13 call_combiner_locks_scheduled_items/iter:16 call_combiner_set_notify_on_cancel/iter:2 call_combiner_cancelled/iter:0 executor_scheduled_short_items/iter:0.000410341 executor_scheduled_long_items/iter:0 executor_scheduled_to_self/iter:0 executor_wakeup_initiated/iter:0.000410341 executor_queue_drained/iter:0.000410341 executor_push_retries/iter:0 server_requested_calls/iter:1.00123 server_slowpath_requests_queued/iter:0 cq_ev_queue_trylock_failures/iter:0 cq_ev_queue_trylock_successes/iter:5.00123 cq_ev_queue_transient_pop_failures/iter:0 polls/iter:0.00123102 writes/iter:2.00328\u001b[m\r\n\u001b[m\u001b[1m\u001b[0m\u001b[1m\u001b[34mWRITE of size 8 at 0x624000073ea0 thread T1\u001b[1m\u001b[0m\r\n    #0 0x6fd844 in me_write(grpc_exec_ctx*, grpc_endpoint*, grpc_slice_buffer*, grpc_closure*) /var/local/git/grpc/test/core/util/passthru_endpoint.cc:85:3\r\n    #1 0x71903f in grpc_endpoint_write /var/local/git/grpc/src/core/lib/iomgr/endpoint.cc:28:3\r\n    #2 0x7d3f10 in write_action(grpc_exec_ctx*, void*, grpc_error*) /var/local/git/grpc/src/core/ext/transport/chttp2/transport/chttp2_transport.cc:1052:3\r\n    #3 0x728a1b in exec_ctx_run(grpc_exec_ctx*, grpc_closure*, grpc_error*) /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:73:3\r\n    #4 0x72839a in grpc_exec_ctx_flush /var/local/git/grpc/src/core/lib/iomgr/exec_ctx.cc:93:9\r\n    #5 0x8ad8ab in run_closures(grpc_exec_ctx*, grpc_closure_list) /var/local/git/grpc/src/core/lib/iomgr/executor.cc:81:5\r\n    #6 0x8ad170 in executor_thread(void*) /var/local/git/grpc/src/core/lib/iomgr/executor.cc:182:22\r\n    #7 0x981544 in thread_body(void*) /var/local/git/grpc/src/core/lib/support/thd_posix.cc:42:3\r\n    #8 0x7f05fb718063 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8063)\r\n    #9 0x7f05fad0b62c in clone (/lib/x86_64-linux-gnu/libc.so.6+0xe862c)\r\n\r\n\u001b[1m\u001b[32m0x624000073ea0 is located 7584 bytes inside of 7592-byte region [0x624000072100,0x624000073ea8)\r\n\u001b[1m\u001b[0m\u001b[1m\u001b[35mfreed by thread T0 here:\u001b[1m\u001b[0m\r\n    #0 0x50fcc0 in operator delete(void*) /llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:94\r\n    #1 0x5cc942 in grpc::testing::MinStackize<grpc::testing::InProcessCHTTP2>::~MinStackize() /var/local/git/grpc/./test/cpp/microbenchmarks/fullstack_fixtures.h:294:7\r\n    #2 0x5cd26a in std::default_delete<grpc::testing::MinStackize<grpc::testing::InProcessCHTTP2> >::operator()(grpc::testing::MinStackize<grpc::testing::InProcessCHTTP2>*) const /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/unique_ptr.h:76:2\r\n    #3 0x5cc635 in std::unique_ptr<grpc::testing::MinStackize<grpc::testing::InProcessCHTTP2>, std::default_delete<grpc::testing::MinStackize<grpc::testing::InProcessCHTTP2> > >::reset(grpc::testing::MinStackize<grpc::testing::InProcessCHTTP2>*) /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/unique_ptr.h:344:4\r\n    #4 0x5321a5 in void grpc::testing::BM_UnaryPingPong<grpc::testing::MinStackize<grpc::testing::InProcessCHTTP2>, grpc::testing::NoOpMutator, grpc::testing::NoOpMutator>(benchmark::State&) /var/local/git/grpc/./test/cpp/microbenchmarks/fullstack_unary_ping_pong.h:106:3\r\n    #5 0x619ebb in benchmark::internal::FunctionBenchmark::Run(benchmark::State&) /var/local/git/grpc/third_party/benchmark/src/benchmark_register.cc:459:42\r\n    #6 0x5e68b4 in benchmark::internal::(anonymous namespace)::RunInThread(benchmark::internal::Benchmark::Instance const*, unsigned long, int, benchmark::internal::ThreadManager*) /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:272:3\r\n    #7 0x5e3ceb in benchmark::internal::(anonymous namespace)::RunBenchmark(benchmark::internal::Benchmark::Instance const&, std::vector<benchmark::BenchmarkReporter::Run, std::allocator<benchmark::BenchmarkReporter::Run> >*) /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:315:7\r\n    #8 0x5e0bfa in benchmark::internal::(anonymous namespace)::RunBenchmarks(std::vector<benchmark::internal::Benchmark::Instance, std::allocator<benchmark::internal::Benchmark::Instance> > const&, benchmark::BenchmarkReporter*, benchmark::BenchmarkReporter*) /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:516:11\r\n    #9 0x5df6e7 in benchmark::RunSpecifiedBenchmarks(benchmark::BenchmarkReporter*, benchmark::BenchmarkReporter*) /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:630:5\r\n    #10 0x5de6e5 in benchmark::RunSpecifiedBenchmarks() /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:572:10\r\n    #11 0x59727d in main /var/local/git/grpc/test/cpp/microbenchmarks/bm_fullstack_unary_ping_pong.cc:167:141\r\n    #12 0x7f05fac44b44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\r\n\r\n\u001b[1m\u001b[35mpreviously allocated by thread T0 here:\u001b[1m\u001b[0m\r\n    #0 0x50f6c0 in operator new(unsigned long) /llvm/projects/compiler-rt/lib/asan/asan_new_delete.cc:62\r\n    #1 0x52fac6 in void grpc::testing::BM_UnaryPingPong<grpc::testing::MinStackize<grpc::testing::InProcessCHTTP2>, grpc::testing::NoOpMutator, grpc::testing::NoOpMutator>(benchmark::State&) /var/local/git/grpc/./test/cpp/microbenchmarks/fullstack_unary_ping_pong.h:43:36\r\n    #2 0x619ebb in benchmark::internal::FunctionBenchmark::Run(benchmark::State&) /var/local/git/grpc/third_party/benchmark/src/benchmark_register.cc:459:42\r\n    #3 0x5e68b4 in benchmark::internal::(anonymous namespace)::RunInThread(benchmark::internal::Benchmark::Instance const*, unsigned long, int, benchmark::internal::ThreadManager*) /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:272:3\r\n    #4 0x5e3ceb in benchmark::internal::(anonymous namespace)::RunBenchmark(benchmark::internal::Benchmark::Instance const&, std::vector<benchmark::BenchmarkReporter::Run, std::allocator<benchmark::BenchmarkReporter::Run> >*) /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:315:7\r\n    #5 0x5e0bfa in benchmark::internal::(anonymous namespace)::RunBenchmarks(std::vector<benchmark::internal::Benchmark::Instance, std::allocator<benchmark::internal::Benchmark::Instance> > const&, benchmark::BenchmarkReporter*, benchmark::BenchmarkReporter*) /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:516:11\r\n    #6 0x5df6e7 in benchmark::RunSpecifiedBenchmarks(benchmark::BenchmarkReporter*, benchmark::BenchmarkReporter*) /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:630:5\r\n    #7 0x5de6e5 in benchmark::RunSpecifiedBenchmarks() /var/local/git/grpc/third_party/benchmark/src/benchmark.cc:572:10\r\n    #8 0x59727d in main /var/local/git/grpc/test/cpp/microbenchmarks/bm_fullstack_unary_ping_pong.cc:167:141\r\n    #9 0x7f05fac44b44 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b44)\r\n\r\nThread T1 created by T0 here:\r\n    #0 0x449939 in pthread_create /llvm/projects/compiler-rt/lib/asan/asan_interceptors.cc:238\r\n    #1 0x9811c3 in gpr_thd_new /var/local/git/grpc/src/core/lib/support/thd_posix.cc:66:21\r\n    #2 0x8aba42 in grpc_executor_set_threading /var/local/git/grpc/src/core/lib/iomgr/executor.cc:108:5\r\n    #3 0x8ad9b9 in grpc_executor_init /var/local/git/grpc/src/core/lib/iomgr/executor.cc:139:3\r\n    #4 0x72c2f4 in grpc_iomgr_init /var/local/git/grpc/src/core/lib/iomgr/iomgr.cc:53:3\r\n    #5 0xa03ab3 in grpc_init /var/local/git/grpc/src/core/lib/surface/init.cc:154:5\r\n    #6 0x59f36b in grpc::internal::GrpcLibrary::init() /var/local/git/grpc/include/grpc++/impl/grpc_library.h:34:26\r\n    #7 0x59f1bf in Library::Library() /var/local/git/grpc/./test/cpp/microbenchmarks/helpers.h:46:5\r\n    #8 0x59d597 in Library::get() /var/local/git/grpc/./test/cpp/microbenchmarks/helpers.h:35:20\r\n    #9 0x425afd in __cxx_global_var_init.2 /var/local/git/grpc/test/cpp/microbenchmarks/bm_fullstack_unary_ping_pong.cc:27:38\r\n    #10 0x431511 in _GLOBAL__sub_I_bm_fullsta.tmp.f813374661c1.20850.ii /tmp/ccache/tmp/bm_fullsta.tmp.f813374661c1.20850.ii\r\n    #11 0x10fd95c in __libc_csu_init (/var/local/git/grpc/bins/asan/bm_fullstack_unary_ping_pong+0x10fd95c)\r\n\r\nSUMMARY: AddressSanitizer: heap-use-after-free /var/local/git/grpc/test/core/util/passthru_endpoint.cc:85:3 in me_write(grpc_exec_ctx*, grpc_endpoint*, grpc_slice_buffer*, grpc_closure*)\r\nShadow bytes around the buggy address:\r\n  0x0c4880006780: \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m\r\n  0x0c4880006790: \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m\r\n  0x0c48800067a0: \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m\r\n  0x0c48800067b0: \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m\r\n  0x0c48800067c0: \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m\r\n=>0x0c48800067d0: \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m[\u001b[1m\u001b[35mfd\u001b[1m\u001b[0m]\u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m\r\n  0x0c48800067e0: \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m\r\n  0x0c48800067f0: \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m\r\n  0x0c4880006800: \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m\r\n  0x0c4880006810: \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m\r\n  0x0c4880006820: \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m\r\nShadow byte legend (one shadow byte represents 8 application bytes):\r\n  Addressable:           \u001b[1m\u001b[0m00\u001b[1m\u001b[0m\r\n  Partially addressable: \u001b[1m\u001b[0m01\u001b[1m\u001b[0m \u001b[1m\u001b[0m02\u001b[1m\u001b[0m \u001b[1m\u001b[0m03\u001b[1m\u001b[0m \u001b[1m\u001b[0m04\u001b[1m\u001b[0m \u001b[1m\u001b[0m05\u001b[1m\u001b[0m \u001b[1m\u001b[0m06\u001b[1m\u001b[0m \u001b[1m\u001b[0m07\u001b[1m\u001b[0m \r\n  Heap left redzone:       \u001b[1m\u001b[31mfa\u001b[1m\u001b[0m\r\n  Heap right redzone:      \u001b[1m\u001b[31mfb\u001b[1m\u001b[0m\r\n  Freed heap region:       \u001b[1m\u001b[35mfd\u001b[1m\u001b[0m\r\n  Stack left redzone:      \u001b[1m\u001b[31mf1\u001b[1m\u001b[0m\r\n  Stack mid redzone:       \u001b[1m\u001b[31mf2\u001b[1m\u001b[0m\r\n  Stack right redzone:     \u001b[1m\u001b[31mf3\u001b[1m\u001b[0m\r\n  Stack partial redzone:   \u001b[1m\u001b[31mf4\u001b[1m\u001b[0m\r\n  Stack after return:      \u001b[1m\u001b[35mf5\u001b[1m\u001b[0m\r\n  Stack use after scope:   \u001b[1m\u001b[35mf8\u001b[1m\u001b[0m\r\n  Global redzone:          \u001b[1m\u001b[31mf9\u001b[1m\u001b[0m\r\n  Global init order:       \u001b[1m\u001b[36mf6\u001b[1m\u001b[0m\r\n  Poisoned by user:        \u001b[1m\u001b[34mf7\u001b[1m\u001b[0m\r\n  Container overflow:      \u001b[1m\u001b[34mfc\u001b[1m\u001b[0m\r\n  Array cookie:            \u001b[1m\u001b[31mac\u001b[1m\u001b[0m\r\n  Intra object redzone:    \u001b[1m\u001b[33mbb\u001b[1m\u001b[0m\r\n  ASan internal:           \u001b[1m\u001b[33mfe\u001b[1m\u001b[0m\r\n  Left alloca redzone:     \u001b[1m\u001b[34mca\u001b[1m\u001b[0m\r\n  Right alloca redzone:    \u001b[1m\u001b[34mcb\u001b[1m\u001b[0m\r\n==4872==ABORTING\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13445/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13328", "title": "Flake: grpclb_end2end_test SingleBalancerWithClientLoadReportingTest.Vanilla  GRPC_POLL_STRATEGY=poll", "body": "https://sponge.corp.google.com/target?id=c9587ad5-3258-4b70-891f-74bc463d2e4b&target=grpc/ubuntu/pull_request/grpc_cpp_tsan&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\n2017-11-09 00:38:05,961 START: bins/tsan/async_end2end_test --gtest_filter=AsyncEnd2end/AsyncEnd2endTest.AsyncNextRpc/15  GRPC_POLL_STRATEGY=poll-cv\r\n2017-11-09 00:38:06,667 D1109 00:37:58.634152558   10407 ev_posix.cc:135]            Using polling engine: poll\r\nD1109 00:37:58.634621112   10407 dns_resolver.cc:307]        Using native dns resolver\r\nD1109 00:37:58.651508854   10407 test_config.cc:388]         test slowdown factor: sanitizer=5, fixture=1, poller=1, total=5\r\nNote: Google Test filter = SingleBalancerWithClientLoadReportingTest.Vanilla\r\n[==========] Running 1 test from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from SingleBalancerWithClientLoadReportingTest\r\n[ RUN      ] SingleBalancerWithClientLoadReportingTest.Vanilla\r\nI1109 00:37:58.692685596   10407 grpclb_end2end_test.cc:527] starting backend server on port 6927\r\nI1109 00:37:58.717197500   10498 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 00:37:59.290666293   10407 grpclb_end2end_test.cc:532] backend server startup complete\r\nI1109 00:37:59.320320588   10407 grpclb_end2end_test.cc:527] starting backend server on port 10593\r\nI1109 00:37:59.343516117   10729 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 00:37:59.966680950   10407 grpclb_end2end_test.cc:532] backend server startup complete\r\nI1109 00:37:59.995630052   10407 grpclb_end2end_test.cc:527] starting backend server on port 5631\r\nI1109 00:38:00.015746929   10975 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 00:38:00.626710691   10407 grpclb_end2end_test.cc:532] backend server startup complete\r\nI1109 00:38:00.656275410   10407 grpclb_end2end_test.cc:527] starting backend server on port 6643\r\nI1109 00:38:00.667981382   11218 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 00:38:01.298656084   10407 grpclb_end2end_test.cc:532] backend server startup complete\r\nI1109 00:38:01.312457309   10407 grpclb_end2end_test.cc:527] starting balancer server on port 22353\r\nI1109 00:38:01.324031862   11486 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1109 00:38:01.938701407   10407 grpclb_end2end_test.cc:532] balancer server startup complete\r\nI1109 00:38:01.972038264   11493 grpclb_end2end_test.cc:187] LB[0x7d480000bd00]: BalanceLoad\r\nI1109 00:38:01.976192420   11493 grpclb_end2end_test.cc:191] LB[0x7d480000bd00]: recv msg 'initial_request {\r\n  name: \"servername_not_used\"\r\n}\r\n'\r\nI1109 00:38:01.990747235   11493 grpclb_end2end_test.cc:303] LB[0x7d480000bd00]: sleeping for 0 ms...\r\nI1109 00:38:01.991150149   11493 grpclb_end2end_test.cc:309] LB[0x7d480000bd00]: Woke up! Sending response 'server_list {\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 6927\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 10593\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 5631\r\n  }\r\n  servers {\r\n    ip_address: \"\\177\\000\\000\\001\"\r\n    port: 6643\r\n  }\r\n}\r\n'\r\nI1109 00:38:01.991953688   10407 grpclb.cc:530]              Missing LB token for backend address 'ipv4:127.0.0.1:6927'. The empty token will be used instead\r\nI1109 00:38:01.991995556   10407 grpclb.cc:530]              Missing LB token for backend address 'ipv4:127.0.0.1:10593'. The empty token will be used instead\r\nI1109 00:38:01.992020620   10407 grpclb.cc:530]              Missing LB token for backend address 'ipv4:127.0.0.1:5631'. The empty token will be used instead\r\nI1109 00:38:01.992042391   10407 grpclb.cc:530]              Missing LB token for backend address 'ipv4:127.0.0.1:6643'. The empty token will be used instead\r\nI1109 00:38:02.108751151   10407 grpclb_end2end_test.cc:432] Performed 4 warm up requests (a multiple of 1) against the backends. 4 succeeded, 0 failed, 0 dropped.\r\nI1109 00:38:04.703166609   11493 grpclb_end2end_test.cc:224] LB[0x7d480000bd00]: recv client load report msg: 'client_stats {\r\n  timestamp {\r\n    seconds: 1510187883\r\n    nanos: 976850881\r\n  }\r\n  num_calls_started: 290\r\n  num_calls_finished: 289\r\n  num_calls_finished_known_received: 289\r\n}\r\n'\r\nI1109 00:38:04.703283401   11493 grpclb_end2end_test.cc:249] LB[0x7d480000bd00]: done\r\ntest/cpp/end2end/grpclb_end2end_test.cc:1179: Failure\r\n      Expected: kNumRpcsPerAddress * num_backends_ + num_ok\r\n      Which is: 404\r\nTo be equal to: client_stats.num_calls_started\r\n      Which is: 290\r\ntest/cpp/end2end/grpclb_end2end_test.cc:1181: Failure\r\n      Expected: kNumRpcsPerAddress * num_backends_ + num_ok\r\n      Which is: 404\r\nTo be equal to: client_stats.num_calls_finished\r\n      Which is: 289\r\ntest/cpp/end2end/grpclb_end2end_test.cc:1184: Failure\r\n      Expected: kNumRpcsPerAddress * num_backends_ + (num_ok + num_drops)\r\n      Which is: 404\r\nTo be equal to: client_stats.num_calls_finished_known_received\r\n      Which is: 289\r\nI1109 00:38:04.719504689   10407 grpclb_end2end_test.cc:140] Backend: shut down\r\nI1109 00:38:04.719555850   10407 grpclb_end2end_test.cc:551] backend about to shutdown\r\nI1109 00:38:04.919885826   10407 grpclb_end2end_test.cc:554] backend shutdown completed\r\nI1109 00:38:04.919977538   10407 grpclb_end2end_test.cc:140] Backend: shut down\r\nI1109 00:38:04.920004044   10407 grpclb_end2end_test.cc:551] backend about to shutdown\r\nI1109 00:38:05.668859682   10407 grpclb_end2end_test.cc:554] backend shutdown completed\r\nI1109 00:38:05.668975810   10407 grpclb_end2end_test.cc:140] Backend: shut down\r\nI1109 00:38:05.669000622   10407 grpclb_end2end_test.cc:551] backend about to shutdown\r\nI1109 00:38:05.997029130   10407 grpclb_end2end_test.cc:554] backend shutdown completed\r\nI1109 00:38:05.997098273   10407 grpclb_end2end_test.cc:140] Backend: shut down\r\nI1109 00:38:05.997119865   10407 grpclb_end2end_test.cc:551] backend about to shutdown\r\nI1109 00:38:06.298592829   10407 grpclb_end2end_test.cc:554] backend shutdown completed\r\nI1109 00:38:06.298685169   10407 grpclb_end2end_test.cc:264] LB[0x7d480000bd00]: shut down\r\nI1109 00:38:06.298704412   10407 grpclb_end2end_test.cc:551] balancer about to shutdown\r\nI1109 00:38:06.403151301   10407 grpclb_end2end_test.cc:554] balancer shutdown completed\r\n[  FAILED  ] SingleBalancerWithClientLoadReportingTest.Vanilla (7833 ms)\r\n[----------] 1 test from SingleBalancerWithClientLoadReportingTest (7833 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 1 test from 1 test case ran. (7833 ms total)\r\n[  PASSED  ] 0 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] SingleBalancerWithClientLoadReportingTest.Vanilla\r\n\r\n 1 FAILED TEST\r\nD1109 00:38:06.507286177   10407 ev_posix.cc:135]            Using polling engine: poll\r\nD1109 00:38:06.507474216   10407 dns_resolver.cc:307]        Using native dns resolver\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13317", "title": "qps_json_driver timeout", "body": "https://sponge.corp.google.com/target?id=ee25caf7-2336-4357-a46a-243e261282fc&target=grpc/ubuntu/pull_request/grpc_basictests_cpp_opt&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\n2017-11-09 00:02:44,910 RUNNING SCENARIO: cpp_protobuf_async_unary_qps_unconstrained_insecure\r\nD1108 23:56:38.942589420   20597 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nD1108 23:56:38.942813397   20597 ev_posix.cc:135]            Using polling engine: epollex\r\nD1108 23:56:38.942843400   20597 dns_resolver.cc:307]        Using native dns resolver\r\nI1108 23:56:38.942910452   20597 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1108 23:56:38.943951617   20597 server_builder.cc:269]      Synchronous server. Num CQs: 32, Min pollers: 1, Max Pollers: 2, CQ timeout (msec): 10000\r\nI1108 23:56:38.944742474   20597 driver.cc:272]              Starting server on localhost:-1 (worker #0)\r\nI1108 23:56:38.944944262   20616 qps_worker.cc:231]          RunServerBody: about to create server\r\nI1108 23:56:38.944973060   20616 qps_worker.cc:69]           Starting server of type ASYNC_SERVER\r\nI1108 23:56:38.946501274   20616 server_async.cc:94]         Sizing async server to 32 threads\r\nI1108 23:56:39.222034621   20616 qps_worker.cc:239]          RunServerBody: server created\r\nI1108 23:56:39.222100176   20616 qps_worker.cc:246]          RunServerBody: creation status reported\r\nI1108 23:56:39.222136941   20597 driver.cc:328]              Starting client on localhost:-1 (worker #1)\r\nD1108 23:56:39.222197801   20597 driver.cc:350]              Client 0 gets 64 channels\r\nI1108 23:56:39.222345651   20657 qps_worker.cc:188]          RunClientBody: about to create client\r\nI1108 23:56:39.222364544   20657 qps_worker.cc:50]           Starting client of type ASYNC_CLIENT UNARY 0\r\nI1108 23:56:39.228116445   20657 client_async.cc:224]        Sizing async client to 32 threads\r\nI1108 23:56:39.391543870   20657 qps_worker.cc:193]          RunClientBody: client created\r\nI1108 23:56:39.391595777   20657 qps_worker.cc:198]          RunClientBody: creation status reported\r\nI1108 23:56:39.391622360   20597 driver.cc:371]              Initiating\r\nI1108 23:56:39.391669288   20657 qps_worker.cc:200]          RunClientBody: Message read\r\nI1108 23:56:39.401946461   20657 qps_worker.cc:209]          RunClientBody: Mark response given\r\nI1108 23:56:39.412649547   20597 driver.cc:392]              Warming up\r\nI1108 23:56:39.412666418   20597 driver.cc:398]              Starting\r\nI1108 23:56:39.413753229   20616 qps_worker.cc:248]          RunServerBody: Message read\r\nI1108 23:56:39.413782221   20657 qps_worker.cc:200]          RunClientBody: Message read\r\nI1108 23:56:39.418479616   20616 qps_worker.cc:257]          RunServerBody: Mark response given\r\nI1108 23:56:39.423815467   20657 qps_worker.cc:209]          RunClientBody: Mark response given\r\nI1108 23:56:39.424333596   20597 driver.cc:425]              Running\r\nI1108 23:56:40.412764793   20597 driver.cc:439]              Finishing clients\r\nI1108 23:56:40.414013265   20657 qps_worker.cc:200]          RunClientBody: Message read\r\nI1108 23:56:40.415423277   20657 qps_worker.cc:209]          RunClientBody: Mark response given\r\nI1108 23:56:40.415443432   20657 qps_worker.cc:212]          RunClientBody: Awaiting Threads Completion\r\nI1108 23:56:40.415770036   20597 driver.cc:453]              Received final status from client 0\r\n\r\n2017-11-09 00:02:44,911 TIMEOUT: qps_json_driver:inproc_cpp_protobuf_async_unary_qps_unconstrained_insecure GRPC_POLL_STRATEGY=epollex [pid=20597, time=366.0sec]\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/01c2334998b6f1f46df43776b458e59ab7fa32b4", "message": "Update version to v1.8.4"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ca8650adf75d0daa7639230a3c909474f28b28ee", "message": "Merge pull request #13917 from murgatroid99/uv_tcp_errors_unavailable_status\n\nMark tcp errors as UNAVAILABLE in UV tcp code"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/91b56b81d554ce911dd18dee33f23e77b4d31c61", "message": "Mark tcp errors as UNAVAILABLE in UV tcp code"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13356", "title": "Add a connectivity state test for a channel with no server", "body": "The primary goal here is to attempt to reproduce the failure in #12932 without Node. The test here is based on the `sequential_connectivity_test.cc` file in the same directory.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10679", "title": "Add tests for memory leaks", "body": "The main purpose of this is to make it easy to add regression tests for memory leaks that may be discovered in the future.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/9603", "title": "Add a core tracer for DNS requests", "body": "", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70118533", "body": "@nicolasnoble [This article](https://help.github.com/articles/commenting-on-the-diff-of-a-pull-request/) may help.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70118533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70344826", "body": "Does this just merge pull requests that were accepted on master into new_invoke_api?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70344826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70687365", "body": "I would prefer not to do this. I currently have tests using math.proto, so I need math.proto to be somewhere in src/node so that it is included in an NPM install.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70687365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70696625", "body": "How does that help if the rest of the repository isn't there?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70696625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70921511", "body": "This should be the last change needed for #44 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70921511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70687365", "body": "I would prefer not to do this. I currently have tests using math.proto, so I need math.proto to be somewhere in src/node so that it is included in an NPM install.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70687365/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70696625", "body": "How does that help if the rest of the repository isn't there?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70696625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72118790", "body": "Should this sample client just be a test suite? If not, what sort of thing are we expecting?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72118790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72119143", "body": "Where is the `.proto` file for this service? Is there a specification for the service's behavior?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72119143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71540670", "body": "Apparently that pull request did not fix the whole problem.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71540670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70921511", "body": "This should be the last change needed for #44 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70921511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/77289327", "body": "I think this is covered by #730 and number #921 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/77289327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/77397629", "body": "No, I just misunderstood.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/77397629/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71734524", "body": "To reproduce this behavior, run the server like\n\n```\ninterop_server --port=7070 --use_tls=true\n```\n\nWhere `interop_server` is the Node, Ruby, or C++ interop server. Then run the client:\n\n```\nnode src/node/interop/interop_client.js --server_host=localhost --server_port=7070 --server_host_override=foo.test.google.com --test_case=large_unary --use_tls=true\n```\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71734524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/74341002", "body": "No, that API change pull request fixes it. I'll add a note to that pull request to close this issue.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/74341002/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72094678", "body": "This was resolved by pull request #272. \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72094678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72118790", "body": "Should this sample client just be a test suite? If not, what sort of thing are we expecting?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72118790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72119143", "body": "Where is the `.proto` file for this service? Is there a specification for the service's behavior?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72119143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72281401", "body": "ping @donnadionne \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72281401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72509615", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72509615/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72094678", "body": "This was resolved by pull request #272. \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72094678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/21241562", "body": "Which build is failing? As far as I can discover, the POSIX standard does in fact specify that `sin6_scope_id` has the type `uint32_t`.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21241562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23481688", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23481688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "muxi": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13907", "title": "cpp Helloworld example does not build on Linux", "body": "To reproduce:\r\n* checkout master branch\r\n* install protobuf from `third_party/protobuf`\r\n* run `make` in `examples/cpp/helloworld`\r\n\r\nThe error message is:\r\n```\r\ng++ -std=c++11 `pkg-config --cflags protobuf grpc`  -c -o greeter_async_client.o greeter_async_client.cc\r\ngreeter_async_client.cc: In member function \u2018std::string GreeterClient::SayHello(const string&)\u2019:\r\ngreeter_async_client.cc:68:16: error: \u2018class helloworld::Greeter::Stub\u2019 has no member named \u2018PrepareAsyncSayHello\u2019\r\n         stub_->PrepareAsyncSayHello(&context, request, &cq));\r\n                ^\r\ngreeter_async_client.cc:71:10: error: \u2018class grpc::ClientAsyncResponseReader<helloworld::HelloReply>\u2019 has no member named \u2018StartCall\u2019\r\n     rpc->StartCall();\r\n          ^\r\nmake: *** [greeter_async_client.o] Error 1\r\n```\r\n  ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13907/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13627", "title": "gRPC calls hang on iOS waiting for channel setup when packet loss is ~100%", "body": "After DNS cache is flushed and network has 100% packet loss rate, a gRPC call initiated at this time will hang waiting for DNS to succeed.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13627/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13582", "title": "Distribute gRPC C++ library to mobile users", "body": "gRPC team got multiple user requests on distributing gRPC C++ library to mobile users (iOS, Android) so that they can use gRPC with the same code across multiple platforms.\r\n\r\ngRPC team is working on supporting this feature.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/47fe8507a1905c20a86df09f97c3f972d643dda5", "message": "Merge pull request #14031 from muxi/fix-boringssl-sed\n\nFix sed error in podspecs on sed 4.4"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/522d270180014b899ef5c3f4cb7d4a543eabc219", "message": "Merge pull request #14050 from grpc/update-objc-readme\n\nSpecify minimum supported versions in README.md"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/53e0b74a0aa649ca895a5d70f96848682541ad52", "message": "Specify minimum supported versions in README.md"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f3c83bfe3da285be7263920164425f110379b73c", "message": "Fix sed error in podspecs on sed 4.4"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/669900c7de64d5992c92a838e23097b27e09d0b5", "message": "Merge pull request #13936 from grpc/copyright-objc++\n\nCheck copyright of Objective-C++ source files"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/44c4c34b32a753181727935e17ca204291ef9af4", "message": "Check copyright of Objective-C++ source files"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d9c69e1963288ff6fafb930ce55ea612808931f0", "message": "Merge pull request #13865 from muxi/add-objc-compression\n\nAdd API to enable compression"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/5132bf39153e434bc726ddd909758150e82300c0", "message": "Reconcile messages.proto; abort() when an invalid compression algorithm is set"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9affc8895d08ebdb0c7ac2dff90e75d31e0e9167", "message": "Merge pull request #13869 from grpc/redirect-stderr-xcodebuild\n\nFix a nit in run_tests.sh in ObjC tests"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/3d44fc3c16b53914c08e26cf1e8ee66d88def1e5", "message": "print output when the first test succeeded"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/36abd15195775c64e92171b9dfb4014487cc4f9e", "message": "Redirect stderr of xcodebuild"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c47b3f5c3afa57ccb2bb64426f1aa91ecf6d4bfe", "message": "Add interface to API to enable compression"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/32bd0023e465df60c9bd6afa5b433bbb7bfd1cd1", "message": "Merge pull request #13849 from muxi/retry-failed-objc-code-65\n\nRetry first test when xcodebuild fails with simulator connection error"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13935", "title": "Create Cocoapods podspec for gRPC C++ repo", "body": "This is the initial PR for experimental Cocoapods podspec for gRPC C++ library. It allows users to integrate gRPC C++ library in their iOS application with Cocoapods.\r\n\r\nPart of #13582.\r\n\r\nNote: The podspec only supports build as static library (i.e. no framework support).\r\n\r\nNote: the pod only includes native gRPC-C++ without Protobuf. Protobuf support will be implemented in future PR.\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13211", "title": "Fix gRPC connectivity issue using channel ping", "body": "**THIS IS STILL WIP**\r\n\r\nWhen Wifi network switches in the background, gRPC does not get any notification in sockets, making calls hanging on the stale channel.\r\n\r\nThis PR resolves the problem by watching all network change events from Apple at Objective C layer. Any network change will trigger the watching callback (including change of cellular connection when connected to WiFi). However, gRPC should not disconnect channel upon all of the events. We need to distinguish between the following events:\r\n\r\n* Network stays on the same WiFi connection - should not disconnect\r\n* Network switched to another WiFi connection - should disconnect\r\n* Network switched to another WiFi then switched back to the original WiFi connection - should disconnect\r\n* Network stays on the same cellular connection - should not disconnect\r\n* Network switched to another cellular connection - should disconnect\r\n\r\nThere is no tool to distinguish among all these events.\r\n\r\nInstead, in this PR, when network change happens, we make a gRPC channel ping to the other channel to verify if the connectivity should be purged. A successful ping means the channel should be kept.\r\n\r\nThis approach still got some flaw. To know if ping succeeded, client must wait for a pong from server. It considers the ping to be failure if it does not receive pong after a timeout. However, it is possible that a call is attempted during the wait period using the old channel. That call is still hang for a long time currently.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13180", "title": "Fix threading problem in gRPC ObjC", "body": "GRPCCall.state is non-atomic. To access it, the code should be protected by synchronization.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12708", "title": "Modify Stream Compression Surface Interface", "body": "Modify the compression surface API so that message compression and stream compression now have a unified API that performs mutual exclusion of message/stream compression by nature.\r\n\r\nIncludes a bug fix:\r\n* Per HTTP specification, allows spaces before/after a comma in the header 'accept-encoding'.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12342", "title": "Make iOS client crash when Cronet issues 2 finishing callbacks to gRPC", "body": "Make global counter for the number of finishing callbacks (on_succeeded, on_failed, on_canceled) issued by Cronet for each Cronet stream. Crashes if Cronet issues two finishing callbacks for the same stream. This would help confirm Cronet is behaving correctly when received crash reports with only stack trace log.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12322", "title": "Split grpc_plugin_support into per-language targets with tags", "body": "In response to an internal issue.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12280", "title": "Convert SwiftSample to Swift 3 style", "body": "Xcode does not support Swift 2.3 starting from Xcode 8.3. Converting our ObjC example to Swift 3.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12277", "title": "Rename Proto-related podspecs", "body": "It seems that Cocoapods 1.3.1 is not supporting exclamation in podspec name, and causing `pod install` to fail (#12172). While we are not sure if this is intended behavior and are contacting Cocoapods, this PR is a workaround we are considering that may resolve this issue by removing the prefix.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12226", "title": "Backport #12225:Fix undefined behavior of using dispatch_once_t as instance variable", "body": "Backports #12225 ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11833", "title": "Modify the AuthSample example to test GRPCAuthorizationProtocol", "body": "This project depends only on released gRPC. Local tests against #11832 succeeded, but needs some build hacks.\r\n\r\nThe test will not be merged until next ObjC version is released on Cocoapods", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11753", "title": "Change nanopb's include style", "body": "Change all code\r\n```\r\n#include \"third_party/nanopb/xxx.h\"\r\n```\r\ninto\r\n```\r\n#include <nanopb/xxx.h>\r\n```\r\nto accomodate Cocoapods include style on ObjC side.\r\n\r\nIn order to not putting the entire `third_party/` directory in the compiler -I option, moved `third_party/nanopb` into `third_party/nanopb/nanopb` and added `-Ithird_party/nanopb` as a compiler option.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10798", "title": "Build tests with generic iOS device", "body": "Build tests on generic iOS devices instead of emulator. This helps capture problems that only appears on ARM architecture (e.g. #10689).", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10104", "title": "Add 2 streaming_error_response tests cases with large payloads", "body": "This would help with testing certain paths in cronet_transport.c.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AspirinSJL": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13905", "title": "TIMEOUT: bins/opt/h2_proxy_test no_logging GRPC_POLL_STRATEGY=epollex ", "body": "https://sponge.corp.google.com/target?id=80857545-9507-4f29-8092-c49a1f9d3fd3&target=github/grpc/c_linux_opt_native&searchFor=&show=ALL&sortBy=STATUS\r\n\r\n```\r\nTimeout\r\nD0102 17:45:37.267982080   16486 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nD0102 17:45:37.268206460   16486 ev_posix.cc:128]            Using polling engine: epollex\r\nD0102 17:45:37.268239742   16486 dns_resolver.cc:294]        Using native dns resolver\r\nI0102 17:45:37.268284051   16486 no_logging.cc:68]           Running test: test_no_logging_in_last_request/chttp2/fullstack+proxy\r\nD0102 17:45:37.270374737   16486 proxy.cc:89]                PROXY ADDR:localhost:8885 BACKEND:localhost:28240\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13812", "title": "Unsafe write in process_data_after_md()", "body": "This is found when I want to reproduce the bug in #13546.\r\n\r\nI glanced through the log and guess that it's not the stress test's fault.\r\n\r\n```\r\nI1218 10:34:39.141373133   11867 grpclb.cc:547]              Missing LB token for backend address 'ipv4:127.0.0.1:8663'. The empty token will be used instead\r\nI1218 10:34:39.141388282   11867 grpclb.cc:547]              Missing LB token for backend address 'ipv4:127.0.0.1:19722'. The empty token will be used instead\r\nI1218 10:34:39.141401893   11867 grpclb.cc:547]              Missing LB token for backend address 'ipv4:127.0.0.1:23411'. The empty token will be used instead\r\nI1218 10:34:39.141415244   11867 grpclb.cc:547]              Missing LB token for backend address 'ipv4:127.0.0.1:23411'. The empty token will be used instead\r\nI1218 10:34:39.141438341   11867 grpclb.cc:547]              Missing LB token for backend address 'ipv4:127.0.0.1:8663'. The empty token will be used instead\r\nI1218 10:34:39.145123370   11637 client_channel_stress_test.cc:198] balancer shutdown completed\r\nI1218 10:34:39.145172392   11637 client_channel_stress_test.cc:195] balancer about to shutdown\r\nI1218 10:34:39.146298159   11637 client_channel_stress_test.cc:198] balancer shutdown completed\r\nI1218 10:34:39.146323887   11637 client_channel_stress_test.cc:195] balancer about to shutdown\r\nI1218 10:34:39.149979909   11637 client_channel_stress_test.cc:198] balancer shutdown completed\r\nI1218 10:34:39.150017776   11637 client_channel_stress_test.cc:195] balancer about to shutdown\r\nI1218 10:34:39.150894223   11637 client_channel_stress_test.cc:198] balancer shutdown completed\r\nI1218 10:34:39.150922705   11637 client_channel_stress_test.cc:195] balancer about to shutdown\r\nI1218 10:34:39.156265635   11707 client_channel_stress_test.cc:80] LB[0x7d140000e6a0]: Finish BalanceLoad.\r\nI1218 10:34:39.170140544   11637 client_channel_stress_test.cc:198] balancer shutdown completed\r\nI1218 10:34:39.170169229   11637 client_channel_stress_test.cc:195] backend about to shutdown\r\nI1218 10:34:39.171805987   11637 client_channel_stress_test.cc:198] backend shutdown completed\r\nI1218 10:34:39.171831991   11637 client_channel_stress_test.cc:195] backend about to shutdown\r\nI1218 10:34:39.173270146   11637 client_channel_stress_test.cc:198] backend shutdown completed\r\nI1218 10:34:39.173295248   11637 client_channel_stress_test.cc:195] backend about to shutdown\r\nI1218 10:34:39.184808316   11867 subchannel.cc:660]          Connect failed: {\"created\":\"@1513622079.184213642\",\"description\":\"Failed to connect to remote host: OS Error\",\"errno\":111,\"file\":\"src/core/lib/iomgr/tcp_client_posix.cc\",\"file_line\":198,\"os_error\":\"Connection refused\",\"syscall\":\"connect\",\"target_address\":\"ipv4:127.0.0.1:11294\"}\r\nI1218 10:34:39.187177648   13016 subchannel.cc:466]          Retry in 405 milliseconds\r\nI1218 10:34:39.189420212   11879 subchannel.cc:660]          Connect failed: {\"created\":\"@1513622079.189143316\",\"description\":\"Failed to connect to remote host: OS Error\",\"errno\":111,\"file\":\"src/core/lib/iomgr/tcp_client_posix.cc\",\"file_line\":198,\"os_error\":\"Connection refused\",\"syscall\":\"connect\",\"target_address\":\"ipv4:127.0.0.1:24093\"}\r\nI1218 10:34:39.190957110   11669 subchannel.cc:660]          Connect failed: {\"created\":\"@1513622079.190735650\",\"description\":\"Failed to connect to remote host: OS Error\",\"errno\":111,\"file\":\"src/core/lib/iomgr/tcp_client_posix.cc\",\"file_line\":198,\"os_error\":\"Connection refused\",\"syscall\":\"connect\",\"target_address\":\"ipv4:127.0.0.1:9588\"}\r\nI1218 10:34:39.199492200   11685 subchannel.cc:660]          Connect failed: {\"created\":\"@1513622079.199196456\",\"description\":\"Failed to connect to remote host: OS Error\",\"errno\":111,\"file\":\"src/core/lib/iomgr/tcp_client_posix.cc\",\"file_line\":198,\"os_error\":\"Connection refused\",\"syscall\":\"connect\",\"target_address\":\"ipv4:127.0.0.1:8614\"}\r\nI1218 10:34:39.199570563   11685 subchannel.cc:466]          Retry in 987 milliseconds\r\n==================\r\nWARNING: ThreadSanitizer: data race (pid=11637)\r\n  Write of size 8 at 0x7d600000fa90 by thread T149:\r\n    #0 process_data_after_md(batch_control*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/surface/call.cc:1422:29 (client_channel_stress_test+0x00000060717a)\r\n    #1 receiving_stream_ready(void*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/surface/call.cc:1456:5 (client_channel_stress_test+0x000000606011)\r\n    #2 receiving_stream_ready_in_call_combiner(void*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/surface/call.cc:1468:3 (client_channel_stress_test+0x000000604b4e)\r\n    #3 exec_ctx_run(grpc_closure*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/exec_ctx.cc:38:3 (client_channel_stress_test+0x000000556f69)\r\n    #4 grpc_closure_run(char const*, int, grpc_closure*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/./src/core/lib/iomgr/closure.h:259:5 (client_channel_stress_test+0x000000560043)\r\n    #5 recv_message_ready(void*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/ext/filters/message_size/message_size_filter.cc:133:3 (client_channel_stress_test+0x0000006a4538)\r\n    #6 exec_ctx_run(grpc_closure*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/exec_ctx.cc:38:3 (client_channel_stress_test+0x000000556f69)\r\n    #7 grpc_core::ExecCtx::Flush() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/exec_ctx.cc:125:9 (client_channel_stress_test+0x000000556cf3)\r\n    #8 run_closures(grpc_closure_list) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/executor.cc:80:5 (client_channel_stress_test+0x000000557ea9)\r\n    #9 executor_thread(void*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/executor.cc:177:22 (client_channel_stress_test+0x000000557c19)\r\n    #10 thread_body(void*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/support/thd_posix.cc:67:3 (client_channel_stress_test+0x0000005e8742)\r\n\r\n  Previous read of size 8 at 0x7d600000fa90 by thread T20:\r\n    #0 lb_on_response_received_locked(void*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc:1574:19 (client_channel_stress_test+0x000000688030)\r\n    #1 grpc_combiner_continue_exec_ctx() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/combiner.cc:261:5 (client_channel_stress_test+0x00000054ef9d)\r\n    #2 grpc_core::ExecCtx::Flush() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/exec_ctx.cc:128:17 (client_channel_stress_test+0x000000556d0a)\r\n    #3 end_worker(grpc_pollset*, grpc_pollset_worker*, grpc_pollset_worker**) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:866:9 (client_channel_stress_test+0x000000587db9)\r\n    #4 pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/ev_epoll1_linux.cc:968:3 (client_channel_stress_test+0x0000005846e1)\r\n    #5 grpc_pollset_work(grpc_pollset*, grpc_pollset_worker**, long) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/ev_posix.cc:225:10 (client_channel_stress_test+0x000000555cb1)\r\n    #6 cq_next(grpc_completion_queue*, gpr_timespec, void*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/surface/completion_queue.cc:932:23 (client_channel_stress_test+0x00000060f8b9)\r\n    #7 grpc_completion_queue_next /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/surface/completion_queue.cc:1010:10 (client_channel_stress_test+0x00000060e476)\r\n    #8 grpc::CompletionQueue::AsyncNextInternal(void**, bool*, gpr_timespec) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/cpp/common/completion_queue_cc.cc:56:15 (client_channel_stress_test+0x0000005ee8d9)\r\n    #9 grpc::CompletionQueue::NextStatus grpc::CompletionQueue::AsyncNext<gpr_timespec>(void**, bool*, gpr_timespec const&) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/include/grpc++/impl/codegen/completion_queue.h:157:12 (client_channel_stress_test+0x0000005cc675)\r\n    #10 grpc::Server::SyncRequestThreadManager::PollForWork(void**, bool*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/cpp/server/server_cc.cc:276:13 (client_channel_stress_test+0x0000005ce45d)\r\n    #11 grpc::ThreadManager::MainWorkLoop() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/cpp/thread_manager/thread_manager.cc:122:30 (client_channel_stress_test+0x0000005dcab8)\r\n    #12 grpc::ThreadManager::WorkerThread::Run() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/cpp/thread_manager/thread_manager.cc:38:3 (client_channel_stress_test+0x0000005dca3e)\r\n    #13 void std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()>::operator()<, void>(grpc::ThreadManager::WorkerThread*) const /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/functional:601:11 (client_channel_stress_test+0x0000005dfbdb)\r\n    #14 void std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/functional:1731:18 (client_channel_stress_test+0x0000005dfac5)\r\n    #15 std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)>::operator()() /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/functional:1720:16 (client_channel_stress_test+0x0000005dfa48)\r\n    #16 std::thread::_Impl<std::_Bind_simple<std::_Mem_fn<void (grpc::ThreadManager::WorkerThread::*)()> (grpc::ThreadManager::WorkerThread*)> >::_M_run() /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/thread:115:13 (client_channel_stress_test+0x0000005df59c)\r\n    #17 execute_native_thread_routine /build/gcc-4.8-mW1ufQ/gcc-4.8-4.8.4/build/x86_64-linux-gnu/libstdc++-v3/src/c++11/../../../../../src/libstdc++-v3/src/c++11/thread.cc:84 (libstdc++.so.6+0x0000000b1a5f)\r\n\r\n  Location is heap block of size 1024 at 0x7d600000f800 allocated by main thread:\r\n    #0 calloc /home/development/llvm/3.8.1/final/llvm.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:612:5 (client_channel_stress_test+0x00000042b84c)\r\n    #1 zalloc_with_calloc(unsigned long) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/support/alloc.cc:27:53 (client_channel_stress_test+0x0000005e378f)\r\n    #2 gpr_zalloc /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/support/alloc.cc:68:7 (client_channel_stress_test+0x0000005e34f1)\r\n    #3 glb_create(grpc_lb_policy_factory*, grpc_lb_policy_args*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc:1908:47 (client_channel_stress_test+0x0000006821df)\r\n    #4 grpc_lb_policy_factory_create_lb_policy(grpc_lb_policy_factory*, grpc_lb_policy_args*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/ext/filters/client_channel/lb_policy_factory.cc:165:10 (client_channel_stress_test+0x00000057b54f)\r\n    #5 grpc_lb_policy_create(char const*, grpc_lb_policy_args*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/ext/filters/client_channel/lb_policy_registry.cc:68:7 (client_channel_stress_test+0x0000006377a5)\r\n    #6 on_resolver_result_changed_locked(void*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/ext/filters/client_channel/client_channel.cc:456:25 (client_channel_stress_test+0x000000633888)\r\n    #7 grpc_combiner_continue_exec_ctx() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/combiner.cc:261:5 (client_channel_stress_test+0x00000054ef9d)\r\n    #8 grpc_core::ExecCtx::Flush() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/exec_ctx.cc:128:17 (client_channel_stress_test+0x000000556d0a)\r\n    #9 grpc_core::ExecCtx::~ExecCtx() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/./src/core/lib/iomgr/exec_ctx.h:85:5 (client_channel_stress_test+0x00000050811d)\r\n    #10 grpc::testing::(anonymous namespace)::ClientChannelStressTest::SetNextResolution(std::vector<grpc::testing::(anonymous namespace)::ClientChannelStressTest::AddressData, std::allocator<grpc::testing::(anonymous namespace)::ClientChannelStressTest::AddressData> > const&) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/test/cpp/client/client_channel_stress_test.cc:234:3 (client_channel_stress_test+0x0000004ebf96)\r\n    #11 grpc::testing::(anonymous namespace)::ClientChannelStressTest::Run() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/test/cpp/client/client_channel_stress_test.cc:153:7 (client_channel_stress_test+0x0000004e96fa)\r\n    #12 main /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/test/cpp/client/client_channel_stress_test.cc:323:3 (client_channel_stress_test+0x0000004e9211)\r\n\r\n  Thread T149 'gpr_executor' (tid=13016, running) created by thread T146 at:\r\n    #0 pthread_create /home/development/llvm/3.8.1/final/llvm.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:954:3 (client_channel_stress_test+0x00000042e511)\r\n    #1 gpr_thd_new /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/support/thd_posix.cc:95:21 (client_channel_stress_test+0x0000005e8574)\r\n    #2 executor_push(grpc_closure*, grpc_error*, bool) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/executor.cc:264:9 (client_channel_stress_test+0x00000055883d)\r\n    #3 executor_push_short(grpc_closure*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/executor.cc:276:3 (client_channel_stress_test+0x000000557fcd)\r\n    #4 grpc_closure_sched(char const*, int, grpc_closure*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/./src/core/lib/iomgr/closure.h:299:5 (client_channel_stress_test+0x0000005427b2)\r\n    #5 write_action_begin_locked(void*, grpc_error*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/ext/transport/chttp2/transport/chttp2_transport.cc:981:5 (client_channel_stress_test+0x00000079061a)\r\n    #6 grpc_combiner_continue_exec_ctx() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/combiner.cc:278:7 (client_channel_stress_test+0x00000054f18b)\r\n    #7 grpc_core::ExecCtx::Flush() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/exec_ctx.cc:128:17 (client_channel_stress_test+0x000000556d0a)\r\n    #8 run_closures(grpc_closure_list) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/executor.cc:80:5 (client_channel_stress_test+0x000000557ea9)\r\n    #9 executor_thread(void*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/iomgr/executor.cc:177:22 (client_channel_stress_test+0x000000557c19)\r\n    #10 thread_body(void*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/support/thd_posix.cc:67:3 (client_channel_stress_test+0x0000005e8742)\r\n\r\n  Thread T20 (tid=11685, running) created by thread T19 at:\r\n    #0 pthread_create /home/development/llvm/3.8.1/final/llvm.src/projects/compiler-rt/lib/tsan/rtl/tsan_interceptors.cc:954:3 (client_channel_stress_test+0x00000042e511)\r\n    #1 __gthread_create /build/gcc-4.8-mW1ufQ/gcc-4.8-4.8.4/build/x86_64-linux-gnu/libstdc++-v3/include/x86_64-linux-gnu/bits/gthr-default.h:662 (libstdc++.so.6+0x0000000b1cae)\r\n    #2 std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>) /build/gcc-4.8-mW1ufQ/gcc-4.8-4.8.4/build/x86_64-linux-gnu/libstdc++-v3/src/c++11/../../../../../src/libstdc++-v3/src/c++11/thread.cc:142 (libstdc++.so.6+0x0000000b1cae)\r\n    #3 grpc::ThreadManager::WorkerThread::WorkerThread(grpc::ThreadManager*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/cpp/thread_manager/thread_manager.cc:34:10 (client_channel_stress_test+0x0000005dc98a)\r\n    #4 grpc::ThreadManager::Initialize() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/cpp/thread_manager/thread_manager.cc:114:9 (client_channel_stress_test+0x0000005dd763)\r\n    #5 grpc::Server::SyncRequestThreadManager::Start() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/cpp/server/server_cc.cc:351:7 (client_channel_stress_test+0x0000005cc509)\r\n    #6 grpc::Server::Start(grpc::ServerCompletionQueue**, unsigned long) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/cpp/server/server_cc.cc:553:5 (client_channel_stress_test+0x0000005c8f42)\r\n    #7 grpc::ServerBuilder::BuildAndStart() /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/cpp/server/server_builder.cc:344:3 (client_channel_stress_test+0x0000005b6094)\r\n    #8 grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::Start(std::string const&, std::mutex*, std::condition_variable*) /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/test/cpp/client/client_channel_stress_test.cc:190:17 (client_channel_stress_test+0x0000004eea8b)\r\n    #9 void std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)>::operator()<std::string&, std::mutex*&, std::condition_variable*&, void>(grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string&, std::mutex*&, std::condition_variable*&) const /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/functional:601:11 (client_channel_stress_test+0x0000004f0e20)\r\n    #10 void std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)>::__call<void, , 0ul, 1ul, 2ul, 3ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul, 2ul, 3ul>) /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/functional:1295:11 (client_channel_stress_test+0x0000004f0cac)\r\n    #11 void std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)>::operator()<, void>() /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/functional:1353:11 (client_channel_stress_test+0x0000004f0b69)\r\n    #12 void std::_Bind_simple<std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)> ()>::_M_invoke<>(std::_Index_tuple<>) /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/functional:1731:18 (client_channel_stress_test+0x0000004f0ad8)\r\n    #13 std::_Bind_simple<std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)> ()>::operator()() /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/functional:1720:16 (client_channel_stress_test+0x0000004f0a88)\r\n    #14 std::thread::_Impl<std::_Bind_simple<std::_Bind<std::_Mem_fn<void (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>::*)(std::string const&, std::mutex*, std::condition_variable*)> (grpc::testing::(anonymous namespace)::ClientChannelStressTest::ServerThread<grpc::testing::TestServiceImpl>*, std::string, std::mutex*, std::condition_variable*)> ()> >::_M_run() /usr/lib/gcc/x86_64-linux-gnu/4.8/../../../../include/c++/4.8/thread:115:13 (client_channel_stress_test+0x0000004f05cc)\r\n    #15 execute_native_thread_routine /build/gcc-4.8-mW1ufQ/gcc-4.8-4.8.4/build/x86_64-linux-gnu/libstdc++-v3/src/c++11/../../../../../src/libstdc++-v3/src/c++11/thread.cc:84 (libstdc++.so.6+0x0000000b1a5f)\r\n\r\nSUMMARY: ThreadSanitizer: data race /usr/local/google/home/juanlishen/wip/stress_test_tsan_bug/grpc/src/core/lib/surface/call.cc:1422:29 in process_data_after_md(batch_control*)\r\n==================\r\n\r\n2017-12-18 10:34:39,342 FAILED: bins/tsan/client_channel_stress_test GRPC_POLL_STRATEGY=epoll1 [ret=66, pid=11637, time=35.5sec]\r\n2017-12-18 10:34:39,342 FLAKE: bins/tsan/client_channel_stress_test GRPC_POLL_STRATEGY=epoll1 [1/76 runs flaked]\r\n2017-12-18 10:34:39,343 START: tools/run_tests/helper_scripts/post_tests_c.sh\r\n2017-12-18 10:34:39,360 PASSED: tools/run_tests/helper_scripts/post_tests_c.sh [time=0.0sec, retries=0:0]\r\n2017-12-18 10:34:39,361 FAILED: Some tests failed\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/fead0879460da1a7990d43472f770bb4fe8145f6", "message": "Merge pull request #13805 from AspirinSJL/lb_bug\n\nChange client_load_report_timer_pending var name"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/4ed35d17f531ad83b0553afc67adb99c6f3deb2f", "message": "Unify the timer callback bools"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/30bd91e66381d652fadc9c64784f850f3960e473", "message": "Merge pull request #13879 from AspirinSJL/client_load_report_bug\n\nRestore checking initial request sent"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f2a0ae7e3bca636a3a2a95e960a76cc266f75dd4", "message": "Restore checking initial request sent"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13911", "title": "Extract per LB-call data from the glb_policy", "body": "In grpclb policy, the LB call can be restarted/recreated. We want to put the data related to each LB call into a separate struct to make the update logic cleaner. \r\n\r\nThis change was inspired by a bug, in which the client load report callback for an old LB call may still run when the current LB policy is new, causing too many SEND_MESSAGE ops.\r\n\r\nThis PR is still in progress.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/grpc/grpc/13911)\n<!-- Reviewable:end -->\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13671", "title": "grpclb re-resolves when both balancers and backends can't be reached", "body": "Currently, grpclb will hand off the re-resolution decision to its embedded RR policy. This PR lets grpclb to be in charge of its re-resolution. The connectivity of the balancers will also be taken into consideration so that grpclb will re-resolve only when both balancers and backends have been unreachable for some timeout.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/grpc/grpc/13671)\n<!-- Reviewable:end -->\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13653", "title": "Change parameter to const reference", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13539", "title": "Fix comment in test UpdateBalancersDeadUpdate", "body": "When the third batch of RPC's are sent, the RR policy has been updated by a new serverlist.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12794", "title": "Remove experimental code", "body": "This PR reverts the changes in #11433 that are beyond reordering.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/23700778", "body": "Yes, I can understand that's a problem.\r\n\r\nBut `glb_update_locked()` is also called [after](https://github.com/grpc/grpc/blob/b48f0946a145893cb28117ef4f162c0a5050e577/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1922) the LB channel is ready. Should we actually start the time when the LB channel state is [INIT](https://github.com/grpc/grpc/blob/b48f0946a145893cb28117ef4f162c0a5050e577/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1891), or right after we [initialize the connectivity state](https://github.com/grpc/grpc/blob/b48f0946a145893cb28117ef4f162c0a5050e577/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.c#L1031)  in `glb_create()`?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23700778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24390053", "body": "Nope, and it doesn't need to. \r\n\r\nThe problem of the previous code is that it doesn't include the case when `glb_policy->rr_policy == NULL` and we do want to propagate the update. For example, the fallback backends are restarted so there is a period without valid `rr_policy`.\r\n\r\nSo the fix is to relax that condition. \r\n\r\nBut I just realize that I do need to check that fallback is not disabled. \r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24390053/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "sifan-ponyai": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13902", "title": "Any plan to remove bazel bind?", "body": "As mentioned in https://docs.bazel.build/versions/master/be/workspace.html#bind:\r\n> use of bind() is not recommended. \r\n\r\nThere's also a discussion of retiring `bind`: https://github.com/bazelbuild/bazel/issues/1952\r\n\r\nWhen we introduce grpc as third-party, we have to also introduce all the `bind` rules into our own WORKSPACE which even leads to a naming conflict with our previous libraries. I don't think `bind` is a good approach in bazel projects, is there any plan for us to remove these bind rules?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mehrdada": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13890", "title": "C# Test Failure: Grpc.Core.Tests.ClientServerTest.Channel_ConnectAsync", "body": "Test failure (likely flake) spotted on https://github.com/grpc/grpc/pull/13889 (on v1.8.x branch).\r\n\r\ntarget: `csharp.Grpc.Core.Tests.ClientServerTest` \r\n\r\nhttps://sponge.corp.google.com/target?id=3ae0831c-c295-4efe-95c4-0f0765e46bf5&target=github/grpc/csharp_linux_opt_native&searchFor=&show=FAILED&sortBy=STATUS\r\n\r\n```\r\n1) Error : Grpc.Core.Tests.ClientServerTest.Channel_ConnectAsync\r\nTearDown : System.AggregateException : One or more errors occurred.\r\n  ----> System.Exception : Shutdown check: Detected 1 pending batch completions.\r\n--TearDown\r\n  at System.Threading.Tasks.Task.ThrowIfExceptional (System.Boolean includeTaskCanceledExceptions) [0x00011] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Threading.Tasks.Task.Wait (System.Int32 millisecondsTimeout, System.Threading.CancellationToken cancellationToken) [0x00043] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Threading.Tasks.Task.Wait () [0x00000] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at Grpc.Core.Tests.ClientServerTest.Cleanup () [0x0001b] in <35cdaffe585b4b758ce0007884a23ee3>:0 \r\n  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&)\r\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in <62f5937022004555807e6c57c33f6684>:0 \r\n--Exception\r\n  at Grpc.Core.Internal.DebugStats.DebugWarning (System.String message) [0x0000b] in <0264dd581495492984f7e0ce3b01ab59>:0 \r\n  at Grpc.Core.Internal.DebugStats.CheckOK () [0x00020] in <0264dd581495492984f7e0ce3b01ab59>:0 \r\n  at Grpc.Core.GrpcEnvironment+<ShutdownAsync>d__51.MoveNext () [0x00127] in <0264dd581495492984f7e0ce3b01ab59>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult () [0x00000] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at Grpc.Core.GrpcEnvironment+<ReleaseAsync>d__20.MoveNext () [0x000bc] in <0264dd581495492984f7e0ce3b01ab59>:0 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess (System.Threading.Tasks.Task task) [0x0003e] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Threading.Tasks.Task task) [0x00028] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd (System.Threading.Tasks.Task task) [0x00008] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at System.Runtime.CompilerServices.ConfiguredTaskAwaitable+ConfiguredTaskAwaiter.GetResult () [0x00000] in <62f5937022004555807e6c57c33f6684>:0 \r\n  at Grpc.Core.Server+<ShutdownInternalAsync>d__32.MoveNext () [0x0016c] in <0264dd581495492984f7e0ce3b01ab59>:0 \r\n\r\n\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13890/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/2c5964fffcb3b3666f2cd9d3150655e969307aab", "message": "Merge pull request #14113 from jtattermusch/fix_csharp_pooling_leak\n\nFix leak caused by C# context pooling (when GrpcEnvironment is shutdown)."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/cd9db08e75ed8b57c4bfc586354446343efb9603", "message": "Merge pull request #14096 from mehrdada/upmerge19\n\nUpmerge 1.9.x into master"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/eb809c34c1901a9e8f4a93fad9169db9bf786358", "message": "Upmerge 1.9.x into master\n\nPrevents future merge conflicts upon upmerges from 1.9.x"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/fb309a966b1782a5c4afe6956344770d1ddefe71", "message": "Merge pull request #14092 from mehrdada/bump1-10\n\nBump version to 1.10"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/43884047c9619d64f6cd1775febf4af1823787b5", "message": "Regenerate projects"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d1915a988ed05559ab3cfca57d7207fa5df5a1f4", "message": "Bump version to 1.10"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/298aa8a2d98a222a17b51ed954b52166261ca940", "message": "Merge pull request #14091 from mehrdada/v1.9.x\n\nBump v1.9.x to 1.9.x-pre1"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/28d5cf33e9b53352cc6cb1e006d6ef8d3abc2797", "message": "Regenerate projects"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/22c607d2e7f002bcd3d60e5881d197221752aaed", "message": "1.9.0-dev is now 1.9.0-pre1"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/4721b5f265b2fa8fd1462b9f55a79183aff96b2a", "message": "Merge pull request #14087 from jtattermusch/dispose_requestcallcontextpool\n\nDispose RequestCallContextPool on environment shutdown"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9a4c6b31e5165a03401b84b2601ac2b0c32ef5dc", "message": "Merge pull request #14068 from coryan/patch-1\n\nFixed typo in documentation."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b58d13394ca1c56b791ad8b5c6cd2f51b4ddc9cf", "message": "Merge pull request #14071 from mehrdada/shellcheck\n\nAdd tools/run_tests/artifacts to shellcheck enforcement list"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/05668d49a6f9b28cdb6bca430c539e128a5cd578", "message": "Enforce shellcheck on tools/run_tests/artifacts"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/b24cff136466f338839d013189f81486c59084ce", "message": "Fix build_artifact_csharp.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/adf6c95ab7edea73b7c5ae921678026c27526458", "message": "Make build_artifact_ruby.sh pass shellcheck (with suppressions)"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8725b77e0b3406481bd6c8e6a7916896bc30652d", "message": "Make run_in_workspace.sh pass shellcheck (with suppressions)"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/7562c4eb6fbe7f7f1893ae7f828d1cad45aafe10", "message": "Merge pull request #14054 from mehrdada/reformat-pydocstrings\n\nReformat Python docstrings"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e607f1a42e9673bf06649f2cecbabc32d1f829ec", "message": "Merge pull request #14052 from mehrdada/legacyepoll\n\nExplicitly enable epoll1 on manylinux1"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f2a33b0e39a7cca7b2c6dc96f105a73f54702304", "message": "Reformat Python docstrings"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/fb66900a9ab7729d22aa83a0e60cb80ec8e642c6", "message": "Eliminate GRPC_LINUX_LEGACY_EPOLL\n\nRename:\n\n  GRPC_LINUX_LEGACY_EPOLL to GRPC_LINUX_EPOLL, and\n  GRPC_LINUX_EPOLL to GRPC_LINUX_EPOLL_CREATE1"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8b0e9fb17edab249f41391d877d8d03961f4f7ee", "message": "Explicitly enable epoll on manylinux1\n\nFor some reason, the glibc version check does not enable\nGRPC_LINUX_EPOLL on manylinux1. This commit:\n\n* Explicitly enables GRPC_LINUX_LEGACY_EPOLL on MANYLINUX1\n* Switches the flag to enable epoll1 IO manager to\n  GRPC_LINUX_LEGACY_EPOLL instead of GRPC_LINUX_EPOLL.\n  This is to ensure epollex and epollsig that are not yet\n  compatible with epoll_create (not epoll_create1) do not\n  get activated unintentionally."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c24630f5a5ba2e15743d2c5d0e59e1c6a014c353", "message": "Merge pull request #14041 from mehrdada/enable-epoll\n\nEnable epoll on Python manylinux1"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/1957fd0a84c674676e155665d8d26588f8e03309", "message": "Enable epoll on Python manylinux1\n\nThe Python packages built for Linux and uploaded to PyPI are required to\ntarget a standardized platform specification dubbed `manylinux1`, which\ntries to cover a vast array of Linux distributions, thereby emulating a\nlegacy lowest-common-denominator distribution, with an old `glibc` that\ndoes not support `epoll_create1`, but provides the `epoll_create`\ninterface.  While there are race condition risks associated with\nutilizing the latter interface and setting the `O_CLOEXEC` flag\nimmediately on the file descriptor returned by `epoll_create`, the\npayoff is well worth the risks for our Python users, who currently end\nup falling back on `poll` polling engine when downloading our Linux\nbinary packages."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e8b8cbd7c82fcbd2240a54e29e80637bf3419b4c", "message": "Fix build_package_ruby.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/368fa048e6e40a02745994caf592d9344823ff09", "message": "Fix build_package_python.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/919de03fc99a6e3fcbcb73db3e971ef5900258dc", "message": "Fix build_package_php.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/bcd91f835b6c2c44b7627f75b345bab708cbbbe4", "message": "Fix build_artifact_python.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/cd867112e8867b21cce65ee3e18135a6c93829ee", "message": "Fix build_artifact_protoc.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/2628664f37e1875cb4517ea3f77829198cd886d0", "message": "Fix build_artifact_php.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/37d9036e0695271fcd19350b8aa0f493ab15f182", "message": "Fix check_windows_dlls.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/7b0a3fb4f97557a50dd046eb0d7b1c79ca360b12", "message": "Fix check_nanopb_output.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8f32e729bf14616d80158ecf43465a68dbf0f890", "message": "Fix build_ruby_environment_macos.sh to pass shellcheck"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/60adb963dc9bab432bf69bb728711167b32af79b", "message": "Merge pull request #13969 from mehrdada/add-authors\n\nAdd guidance on the AUTHORS file to contributors"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c2b6bab703e12ff0ac069b08739e624b7ba3072e", "message": "Merge pull request #13971 from apolcyn/upmerge_v18x\n\nUpmerge v1.8.x into master"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/4d001386fd821eca8587b1918bc94ae5c3200139", "message": "Reformat CONTRIBUTING.md"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8616b362fd2d015dd4694d68bc54ff9231d50214", "message": "Add guidance on the AUTHORS file to contributors"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/834dabae079cc039c1903c51c54a786873154bd4", "message": "Merge pull request #13954 from mehrdada/remove-file\n\nRemove garbage file doc/md"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/32f9e98581acd8de7c5e986e6a186e5e3d2dadce", "message": "Remove garbage file doc/md\n\nDelete accidentally committed file from repo"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/7542ba6e0caee740f124dc25706287fd62f546d8", "message": "Merge pull request #13899 from mehrdada/upgrade-yapf-to-020\n\nUpgrade yapf to 0.20.0"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/69c0ff46dbc1805309cc80100ae42e8cf294ced4", "message": "Merge pull request #13898 from mehrdada/revert13665\n\nRevert \"Fix a Python spinlock bug\""}, {"url": "https://api.github.com/repos/grpc/grpc/commits/87cd994b0477e98c976e7b321b3c1f52666ab5e0", "message": "Upgrade yapf to 0.20.0\n\nUpgrade yapf version to 0.20.0 and reformat Python files."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/6dc1c50b937837414f14961fe4d1ee2c47c1d6c7", "message": "Revert \"Fix a Python spinlock bug\"\n\nThis reverts commit 2df509fc0e8628d6d4431139ce953c70796a21eb."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/730b778632e79cc3c96ad237f282d687ee325ce7", "message": "Merge pull request #13886 from armchair-philosophy/fix-wire-link-in-web-protocol-doc\n\nUse 'PROTOCOL-HTTP2.md' for reference to 'gRPC over HTTP2' document"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/3ea0e2d80443502c12203dfc5b24112c69ccda59", "message": "Merge pull request #13893 from mehrdada/upmerge183\n\nUpmerge v1.8.x branch (at v1.8.3) into master"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c71c6a7f3de6502259ea4fdb3db833601dc061fc", "message": "Merge branch v1.8.x into master\n\nUpmerge v1.8.3 into master"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f526a2164f9c1eb816eea420f7201b8dfa278a8f", "message": "Merge pull request #13889 from mehrdada/bump-183\n\nBump version to 1.8.3"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/6c9a0a1a9667451bf7747bb73096bc3c60420301", "message": "Bump version to 1.8.3"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/f9ee06e6670a57bd925909303381957794b768d6", "message": "Merge pull request #13887 from mehrdada/backport13876\n\nBackport #13876 into v1.8.x"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/77054fb794ea02319933d7804d55d0d9861c1d55", "message": "Merge pull request #13882 from mehrdada/relax-polling\n\nRelax log-level when polling engine is not defined"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/674dbf1f8db48ab9823192c351a067a3bc2aec61", "message": "Fetch boringssl-with-bazel submodule from GitHub"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/98efefcc1e4e94d97125e828b1ec99174c2ee1d4", "message": "Relax log-level when polling engines are undefined"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/2e04b2dd0c9aed66a14e6810b18e8c5b9b4f8a04", "message": "Merge pull request #13876 from mehrdada/update-boringsslWithBazel-submodule-reference-to-github\n\nFetch boringssl-with-bazel submodule from GitHub instead of GoogleSource.com"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/99e0b4bfec3409cef98bc56dc07f96858397d533", "message": "Fetch boringssl-with-bazel submodule from GitHub"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/70d1ea2962247b90c3673ed978bed4fd4d96ce44", "message": "Merge pull request #13858 from mehrdada/update-readme-copyright\n\nUpdate README.md Copyright Notice"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14105", "title": "Relax call details interface from interceptor", "body": "This is a possible solution to the interface evolution problem identified in https://github.com/grpc/grpc/pull/14077\r\n\r\nA gRPC Python client interceptor is passed an instance of a class\r\nthat implements the ClientCallDetails interface.  The interceptor\r\ncan choose to create its own object that implements the interface,\r\nand pass it back to the continuation invoked by the interceptor.\r\n\r\nTo make it easy to add additional attributes to call details,\r\nwithout breaking user code that hardcode the attributes required\r\nby the interface, instead of interospecting the object passed\r\nto the interceptor at runtime, and to ease authorship of\r\ninterceptors that want to keep some attributes intact and not\r\ncare about them, we relax the requirements on the object that\r\nis expected to get passed by the interceptor and let the user\r\nomit some attributes.  Omitted attributes will be replaced\r\nby the original value of the attribute given to the interceptor.", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/14074", "title": "Add tools/run_tests/dockerize to shellcheck enforcement list", "body": "Progress towards https://github.com/grpc/grpc/issues/11601", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12613", "title": "C# Interceptor Support", "body": "This PR adds core interceptor hooks to gRPC C# (both server side and client side).\r\n\r\nAddresses https://github.com/grpc/grpc/issues/11646\r\nRelated proposal https://github.com/grpc/proposal/pull/38", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10674", "title": "Add tests ensure reflection lists python services", "body": "Amends python gRPC reflection servicer tests to ensure\r\nit returns the proto files associated with a service\r\nwhen asked for a service name symbol.  This is to\r\nprotect against an issue in the protobuf reflection\r\npackage that did not correctly return FileDescriptor\r\nobjects when given a service name symbol.", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/280152813", "body": "#9691 is a first attempt at fixing this issue. It still needs to (1) get enabled for all grpc python packages, and (2) issues preventing pylint to cleanly pass need to be refactored and specific checks disabled in .pylintrc need to be turned on one by one.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/280152813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "gogo40": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13888", "title": "How to use protobuf 3.0.0 with grpc 1.8.2?", "body": "Hi,\r\n \r\nI`m using gRPC 1.8.2 and I am needing the C++ and python plugins, exclusively. I did a workaround to work with protobuf 3.0.0 (erasing manually the php plugin), but this is ugly, I really need a more correct solution.\r\n\r\nMy grpc server is being embedded in a separated thread running in a Qt Application (Qt 5.9 from ubuntu repository). As I am using QWebEngine (that uses chromium), I have to use protobuf 3.0.0 due a version conflict between the protobuf from operating system and the one from grpc.\r\n \r\n I am using Ubuntu 17.10 and gcc 7.2.0.\r\n\r\nTo reproduce this error, try to use protobuf 3.0.0. To \"fix\" the building problem, you have to erase the php plugin.\r\n\r\nI`m needing some flag to disable php plugin in CMakeLists.\r\n\r\n\r\nThere are some incompatibility between grpc 1.8.2 and protobuf 3.0.0?\r\n\r\nThank you in advance. ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13888/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Rasie1": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13877", "title": "C++ server hangs when sending metadata with size too big", "body": "Inside C++ grpc method implementation, if I add metadata that is larger than some number (30k characters hang already), server will not return response and leave client waiting forever.\r\n\r\n\r\n### What version of gRPC and what language are you using?\r\nC++\r\n\r\n### What operating system (Linux, Windows, \u2026) and version?\r\n\r\nLinux, 4.9.59-1-MANJARO\r\n\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\ngcc 7.2.0\r\nprotoc 3.4.0\r\n(Latest versions from AUR or git are failing to build, I will check it using latest version later and update the issue)\r\n \r\n### What did you do?\r\n\r\nAdd trailing metadata of big size when responding with server. Server, client and proto are attached to issue\r\n \r\n### What did you expect to see?\r\n \r\nSuccessful response like with grpc-go server\r\n \r\n### What did you see instead?\r\n\r\nThread hangs and server never responds\r\n\r\n### Sources to reproduce the hang\r\n- `cpp_server.cpp` -- hangs because metadata is too big.\r\n- `go_server.go` -- works perfectly\r\n- `node_client.js` -- works, but gives an error about max size exceeded (only for go server)\r\n- `go_client.go` -- works perfectly\r\n- `echo/echo.proto` -- proto file used\r\n[sources.zip](https://github.com/grpc/grpc/files/1589540/sources.zip)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13877/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yang-g": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13872", "title": "[Flake] cpp_protobuf_async_streaming_qps_unconstrained_1cq_insecure timeout with epollex", "body": "https://sponge.corp.google.com/target?id=f56f5ba7-c202-4f46-923a-35af5840940b&target=grpc/ubuntu/pull_request/grpc_basictests_cpp_opt&searchFor=&show=ALL&sortBy=STATUS", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13626", "title": "Flake: AsyncEnd2endTest SimpleRpc/8", "body": "bins/dbg/async_end2end_test --gtest_filter=AsyncEnd2end/AsyncEnd2endTest.SimpleRpc/8  GRPC_POLL_STRATEGY=poll\r\n\r\nhttps://sponge.corp.google.com/target?id=df469c78-44ca-4f98-8637-2169c01137e5&target=grpc/ubuntu/pull_request/grpc_basictests_cpp_dbg&searchFor=&show=ALL&sortBy=STATUS", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13298", "title": "poll-cv may not get events if repeatedly called with short timeout", "body": "context: #13217\r\n\r\nIf poll-cv's pollset_work is called with 0 timeout for example, the polling code does not seem to wait for a poll to return (in the polling thread) before returning 0. As a result, it does not see the events received from the poll call.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/bb2f7e28edc3e3dd663ad308aed7ed632a0a17bf", "message": "Merge pull request #14081 from yang-g/cpp17\n\nremove use of random_shuffle"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/a29d6d0d74e861883ec813e263ce90f0d3d63c03", "message": "remove use of random_shuffle"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/a01e0403ae57027a70f64de51d037d4585c4f3b3", "message": "Merge pull request #13975 from danzh2010/adjustrcvbuf\n\nchange udp_server receive/send buffer size and set SO_RXQ_OVFL"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/642eba3e67fe4c32d1f7f5d4bb2324a3e67f4cf5", "message": "Bug fix, use the last_sent ping time for next send"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/d9ab30a5b2f7b52a37322891812ad5d9666f43d9", "message": "Merge pull request #13871 from yang-g/gmock_search_path\n\nProvide a way to use custom search path for gmock.h"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9aaa284fcb067fb5c07742b6f34de0878f079ecf", "message": "Merge pull request #13844 from danzh2010/startcb\n\nChange grpc_udp_server interface"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/eb64fadfce7126da120dc0e8e7e09a13e83e9903", "message": "Provide a way to use custom search path for gmock.h"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14080", "title": "Clear pending data when stream is closed by server.", "body": "Also add a test.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12825", "title": "Mention grpc-status-details-bin in spec", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69700340", "body": "OK.\n\nOn Mon, Jan 12, 2015 at 10:15 PM, Craig Tiller notifications@github.com\nwrote:\n\n> Don't do that again until we're done with Piper (please).\n> \n> I'll send out a CL in the morning to rectify this Nico.\n> On Mon Jan 12 2015 at 9:58:09 PM yang-g notifications@github.com wrote:\n> \n> > Merged #4 https://github.com/google/grpc/pull/4.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/grpc/pull/4#event-217880715.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/4#issuecomment-69700262.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69700340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70793813", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70793813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70797098", "body": "I see various errors too.\nOne is it does not recognize All in line 12, setting it to true seems to\nfix it.\nThen there a many places of unrecognized keys. Most of them I checked\nshould be correct according to clang format 3.5 docs\nhttp://llvm.org/releases/3.5.0/tools/clang/docs/ClangFormatStyleOptions.html\n.\n\nI am now pretty sure I did something wrong but do not know what :)\n\nOn Tue, Jan 20, 2015 at 6:13 PM, David Klempner notifications@github.com\nwrote:\n\n> I see a bunch of:\n> \n> YAML:12:35: error: invalid boolean\n> AllowShortFunctionsOnASingleLine: All\n> \n> Error reading /usr/local/google/grpc/grpc/.clang-format: Invalid argument\n> Can't find usable .clang-format, using LLVM style\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/104#issuecomment-70773037.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70797098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70876943", "body": "I tried both our script in tools/clang-format/ and clang-format-3.5. My\nclang-format-3.5 seems to be a correct link to something under llvm3.5 and\nmy repo was synced before I tried.\n\nOn Wed, Jan 21, 2015 at 8:18 AM, Craig Tiller notifications@github.com\nwrote:\n\n> What command are you guys running to do this?\n> \n> On Tue, Jan 20, 2015, 23:46 Yang Gao notifications@github.com wrote:\n> \n> > I see various errors too.\n> > One is it does not recognize All in line 12, setting it to true seems to\n> > fix it.\n> > Then there a many places of unrecognized keys. Most of them I checked\n> > should be correct according to clang format 3.5 docs\n> > \n> > http://llvm.org/releases/3.5.0/tools/clang/docs/ClangFormatStyleOptions.html\n> > .\n> > \n> > I am now pretty sure I did something wrong but do not know what :)\n> > \n> > On Tue, Jan 20, 2015 at 6:13 PM, David Klempner <\n> > notifications@github.com>\n> > \n> > wrote:\n> > \n> > > I see a bunch of:\n> > > \n> > > YAML:12:35: error: invalid boolean\n> > > AllowShortFunctionsOnASingleLine: All\n> > > \n> > > Error reading /usr/local/google/grpc/grpc/.clang-format: Invalid\n> > > argument\n> > > Can't find usable .clang-format, using LLVM style\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/google/grpc/pull/104#issuecomment-70773037.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/grpc/pull/104#issuecomment-70797098.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/104#issuecomment-70866958.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70876943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70793813", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70793813/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72076792", "body": "LGTM. \nI think you need to sync up and resolve the conflict before someone can merge it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72076792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72077150", "body": "The conflict might be caused by pull request #272 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72077150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72500959", "body": "At least a couple of .proto files under test/cpp do not have the copyright\nnotice. Do they need it or not?\n\nOn Mon, Feb 2, 2015 at 9:31 AM, Craig Tiller notifications@github.com\nwrote:\n\n> This should include a test that we can run to verify that this remains the\n> case.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/issues/315#issuecomment-72499198.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72500959/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71741782", "body": "I was just finding these logs could be useful sometimes. If we want to have\nsomething like debug only log what should we use?\n\nOn Tue, Jan 27, 2015 at 2:23 PM, Craig Tiller notifications@github.com\nwrote:\n\n> We typically don't check in DEBUG logs - but I use them lots when I'm, you\n> know, debugging.\n> \n> This one slipped through.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/248#issuecomment-71740896.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71741782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72956216", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72956216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/11826355", "body": "LGTM\n\nThis should be living in a Client/ServerContext, right?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11826355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11826457", "body": "Does the server needs to do anything special to say \"I want to do mutual auth\"? Or is it the service implementer's job to look at the PeerIdentity to see whether the client has the right name?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11826457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11826476", "body": "Do we want to make it final? You are calling it base context and it looks like some kind of base too :)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11826476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/18988514", "body": "The method was added to shutdown listening fds early so that a client with many channels that keeps reconnecting will not prevent server from shutdown. I am sure what you said is right. But the deactivated_all_ports only continues when the shutdown bit is turned to true, which translates to refcount == 0. What did I miss? Thanks.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/18988514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19227344", "body": "I think you need to move block [912, 915] above line 905 for this to work?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19227344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/20052218", "body": "Very close! I think what you need here is something like \r\n```\r\ncall->Read(tag(4);\r\nverify_ok(&cli_cq_, 4, false);\r\nStatus s;\r\ncall->Finish(&s, tag(5));\r\nclient_ok(&cli_cq_, 5);\r\ngpr_log(GPR_ERROR, \"got status %d: %s\", s.error_code(), s.error_message().c_str());\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20052218/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/20052220", "body": "Let me know if it works. Thanks.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20052220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21237862", "body": "I suspect you do not want a shorter way of doing this. This is only a toy example. In a real server, you might want to have a CallDataBase to handle the common logic on the state change and have subclasses for each method.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21237862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21380771", "body": "How did you dig this up :) I have no memory of this.\r\nAnyway, what I meant is something like: https://gist.github.com/yang-g/6889905ccce930787b3f693c575ffa1b ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21380771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/22145536", "body": "LGTM\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/22145536/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23636600", "body": "All addressed. PTAL\n\nOn Tue, Jan 27, 2015 at 10:31 AM, Chen Wang notifications@github.com\nwrote:\n\n> In test/cpp/interop/client.cc\n> https://github.com/google/grpc/pull/209#discussion_r23630223:\n> \n> >    } else if (FLAGS_test_case == \"all\") {\n> > -    DoEmpty(channel);\n> > -    DoLargeUnary(channel);\n> > -    DoRequestStreaming(channel);\n> > -    DoResponseStreaming(channel);\n> > -    DoHalfDuplex(channel);\n> > -    DoPingPong(channel);\n> > -    DoEmpty();\n> > -    DoLargeUnary();\n> > -    DoRequestStreaming();\n> > -    DoResponseStreaming();\n> > -    DoHalfDuplex();\n> > -    DoPingPong();\n> > -    if (FLAGS_enable_ssl) {\n> \n> Should we always enable ssl for prod. What is story for this case?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/209/files#r23630223.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23636600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23637467", "body": "Changed to hours(1)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23637467/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23637478", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23637478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23647332", "body": "When do we log DEBUG?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23647332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23731108", "body": "You do not need this. In the test, we pass in this only to verify the returned value is correct.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23731108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "abaldeva": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13860", "title": "Feature Request: Add ability to limit plugins available on a Server", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes.\r\n\r\n### What version of gRPC and what language are you using?\r\n1.7.2 - C++ \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nLinux/Windows \r\n\r\nDetails at https://groups.google.com/forum/#!searchin/grpc-io/grpc_cli%7Csort:date/grpc-io/uSl-cC3z6jk/wccDi2EjDAAJ \r\n\r\nThanks. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13859", "title": "grpc_cli does not support enums", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes.\r\n \r\n### What version of gRPC and what language are you using?\r\n1.7.2 - C++ \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nLinux, Windows \r\n \r\n### What did you do?\r\nTried to query the type of an enum member in grpc_cli and set an enum value. \r\n \r\n### What did you expect to see?\r\nFor query of enum type, it should return a list of the possible values. When trying to set it, it should accept the value.\r\n \r\n### What did you see instead?\r\nNone of this worked. So if you want to set an enum value in the request object of grpc_cli, you can't query and even if you know the possible values in advance/through local files, you can't set it. The only workaround is to put the enum as an integer.   \r\n \r\n### Anything else we should know about your project / environment?\r\nMore details here - https://groups.google.com/forum/#!searchin/grpc-io/grpc_cli%7Csort:date/grpc-io/uUwInoVRqSQ/nx9gpOIUDAAJ \r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13781", "title": "[Feature Request] Support for multiple command in a single invocation of grpc_cli", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes. \r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\n1.7.2, C++ \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nLinux, Windows \r\n \r\ngrpc_cli currently calls an rpc and exits. If you use the reflection service, it can take considerable amount of time to populate local database. For our service(s), it takes about 5-10s. It'd be nice to be able to call multiple rpcs once the database is populated (so a single invocation of grpc_cli lasts longer than calling one rpc). Right now, there is a limited batching support using the --batch flag which allows for calling the same rpc multiple times. \r\n\r\nBroadening it, I guess what I am looking for is to instantiate grpc_cli once and execute as many commands on it as user wishes (and indicates exit by typing 'exit'). Many clis (for example, redis_cli) work this way. This improves the usability of the tool manifolds. \r\n\r\nThanks. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13781/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10919", "title": "gRPC threading model documentation", "body": "PR as discussed here - https://groups.google.com/forum/#!topic/grpc-io/DuBDpK96B14 ", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "okomarov": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13854", "title": "[NEW] gcc 7 and -Werror=implicit-fallthrough ", "body": "### What version of gRPC and what language are you using?\r\n1.8.2 \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nUbuntu 17.10\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\ngcc 7.2.0\r\n \r\n### What did you do?\r\n```\r\n $ git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc\r\n $ cd grpc\r\n $ git submodule update --init\r\n $ make\r\n```\r\n\r\n### What did you expect to see?\r\n Successful compilation of source\r\n \r\n### What did you see instead?\r\n```\r\n[C]       Compiling third_party/boringssl/crypto/bio/file.c\r\nthird_party/boringssl/crypto/bio/file.c: In function \u2018file_ctrl\u2019:\r\nthird_party/boringssl/crypto/bio/file.c:186:11: error: this statement may fall through [-Werror=implicit-fallthrough=]\r\n       num = 0;\r\n       ~~~~^~~\r\nthird_party/boringssl/crypto/bio/file.c:187:5: note: here\r\n     case BIO_C_FILE_SEEK:\r\n     ^~~~\r\ncc1: all warnings being treated as errors\r\nMakefile:2569: recipe for target '/home/oleg/Downloads/grpc/objs/opt/third_party/boringssl/crypto/bio/file.o' failed\r\nmake: *** [/home/oleg/Downloads/grpc/objs/opt/third_party/boringssl/crypto/bio/file.o] Error 1\r\n ```\r\n### Anything else we should know about your project / environment?\r\nRelated to #13640 and to closed #12536 and #12022\r\n\r\n\r\n### Workaround\r\n`make CFLAGS='-Wno-implicit-fallthrough'`\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PlacidBox": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13832", "title": "Various ODR warnings when building with LTO", "body": "### Should this be an issue in the gRPC issue tracker?\r\n \r\nYes\r\n \r\n### What version of gRPC and what language are you using?\r\n \r\nv1.8.1\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nLinux, Debian Stretch\r\n\r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\ngcc 6.3.0\r\n \r\n### What did you do?\r\n\r\nBuilding grpc in our project, from source, using `add_subdirectory(path/to/grpc )`. When we build with lto turned on, we get a bunch of warnings about ODR violations. \r\n \r\n### What did you expect to see?\r\n \r\nNo warnings when building with lto\r\n \r\n### What did you see instead?\r\n\r\nThe following warnings:\r\n\r\n```\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/channel_connectivity.cc:74:3: warning: type \u2018struct state_watcher\u2019 violates the C++ One Definition Rule [-Wodr]\r\n } state_watcher;\r\n   ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/subchannel.cc:63:3: note: a different type is defined in another translation unit\r\n } state_watcher;\r\n   ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/channel_connectivity.cc:62:10: note: the first difference of corresponding definitions is field \u2018mu\u2019\r\n   gpr_mu mu;\r\n          ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/subchannel.cc:60:16: note: a field with different name is defined in another translation unit\r\n   grpc_closure closure;\r\n                ^\r\ngrpc-1.8.1/src/core/lib/surface/server.cc:95:8: warning: type \u2018struct channel_data\u2019 violates the C++ One Definition Rule [-Wodr]\r\n struct channel_data {\r\n        ^\r\ngrpc-1.8.1/src/core/ext/filters/http/message_compress/message_compress_filter.cc:67:16: note: a different type is defined in another translation unit\r\n typedef struct channel_data {\r\n                ^\r\ngrpc-1.8.1/src/core/lib/surface/server.cc:96:16: note: the first difference of corresponding definitions is field \u2018server\u2019\r\n   grpc_server* server;\r\n                ^\r\ngrpc-1.8.1/src/core/ext/filters/http/message_compress/message_compress_filter.cc:69:30: note: a field with different name is defined in another translation unit\r\n   grpc_compression_algorithm default_compression_algorithm;\r\n                              ^\r\ngrpc-1.8.1/src/core/ext/filters/http/message_compress/message_compress_filter.cc:47:16: warning: type \u2018struct call_data\u2019 violates the C++ One Definition Rule [-Wodr]\r\n typedef struct call_data {\r\n                ^\r\ngrpc-1.8.1/src/core/ext/filters/http/server/http_server_filter.cc:34:16: note: a different type is defined in another translation unit\r\n typedef struct call_data {\r\n                ^\r\ngrpc-1.8.1/src/core/ext/filters/http/message_compress/message_compress_filter.cc:49:22: note: the first difference of corresponding definitions is field \u2018compression_algorithm_storage\u2019\r\n   grpc_linked_mdelem compression_algorithm_storage;\r\n                      ^\r\ngrpc-1.8.1/src/core/ext/filters/http/server/http_server_filter.cc:37:22: note: a field with different name is defined in another translation unit\r\n   grpc_linked_mdelem status;\r\n                      ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc:238:16: warning: type \u2018struct pending_pick\u2019 violates the C++ One Definition Rule [-Wodr]\r\n typedef struct pending_pick {\r\n                ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc:34:16: note: a different type is defined in another translation unit\r\n typedef struct pending_pick {\r\n                ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/lb_policy/grpclb/grpclb.cc:242:28: note: the first difference of corresponding definitions is field \u2018pick_args\u2019\r\n   grpc_lb_policy_pick_args pick_args;\r\n                            ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/lb_policy/pick_first/pick_first.cc:36:12: note: a field with different name is defined in another translation unit\r\n   uint32_t initial_metadata_flags;\r\n            ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epoll1_linux.cc:410:45: warning: type \u2018worker_remove_result\u2019 violates the C++ One Definition Rule [-Wodr]\r\n typedef enum { EMPTIED, NEW_ROOT, REMOVED } worker_remove_result;\r\n                                             ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epollex_linux.cc:855:57: note: an enum with different value name is defined in another translation unit\r\n typedef enum { WRR_NEW_ROOT, WRR_EMPTIED, WRR_REMOVED } worker_remove_result;\r\n                                                         ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epoll1_linux.cc:149:8: warning: type \u2018struct grpc_pollset_worker\u2019 violates the C++ One Definition Rule [-Wodr]\r\n struct grpc_pollset_worker {\r\n        ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epollsig_linux.cc:213:8: note: a different type is defined in another translation unit\r\n struct grpc_pollset_worker {\r\n        ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epoll1_linux.cc:150:14: note: the first difference of corresponding definitions is field \u2018state\u2019\r\n   kick_state state;\r\n              ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epollsig_linux.cc:215:13: note: a field with different name is defined in another translation unit\r\n   pthread_t pt_id;\r\n             ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epoll1_linux.cc:198:8: warning: type \u2018struct grpc_pollset_set\u2019 violates the C++ One Definition Rule [-Wodr]\r\n struct grpc_pollset_set {\r\n        ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epollsig_linux.cc:237:8: note: a different type is defined in another translation unit\r\n struct grpc_pollset_set {\r\n        ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epoll1_linux.cc:199:8: note: the first difference of corresponding definitions is field \u2018unused\u2019\r\n   char unused;\r\n        ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epollsig_linux.cc:238:12: note: a field with different name is defined in another translation unit\r\n   poll_obj po;\r\n            ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epoll1_linux.cc:173:8: warning: type \u2018struct grpc_pollset\u2019 violates the C++ One Definition Rule [-Wodr]\r\n struct grpc_pollset {\r\n        ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epollsig_linux.cc:223:8: note: a different type is defined in another translation unit\r\n struct grpc_pollset {\r\n        ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epoll1_linux.cc:174:10: note: the first difference of corresponding definitions is field \u2018mu\u2019\r\n   gpr_mu mu;\r\n          ^\r\ngrpc-1.8.1/src/core/lib/iomgr/ev_epollsig_linux.cc:224:12: note: a field with different name is defined in another translation unit\r\n   poll_obj po;\r\n            ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/backup_poller.cc:36:16: warning: type \u2018struct backup_poller\u2019 violates the C++ One Definition Rule [-Wodr]\r\n typedef struct backup_poller {\r\n                ^\r\ngrpc-1.8.1/src/core/lib/iomgr/tcp_posix.cc:101:16: note: a different type is defined in another translation unit\r\n typedef struct backup_poller {\r\n                ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/backup_poller.cc:37:14: note: the first difference of corresponding definitions is field \u2018polling_timer\u2019\r\n   grpc_timer polling_timer;\r\n              ^\r\ngrpc-1.8.1/src/core/lib/iomgr/tcp_posix.cc:102:11: note: a field with different name is defined in another translation unit\r\n   gpr_mu* pollset_mu;\r\n           ^\r\ngrpc-1.8.1/src/core/lib/iomgr/wakeup_fd_cv.h:53:16: warning: type \u2018struct fd_node\u2019 violates the C++ One Definition Rule [-Wodr]\r\n typedef struct fd_node {\r\n                ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc:38:16: note: a different type is defined in another translation unit\r\n typedef struct fd_node {\r\n                ^\r\ngrpc-1.8.1/src/core/lib/iomgr/wakeup_fd_cv.h:54:7: note: the first difference of corresponding definitions is field \u2018is_set\u2019\r\n   int is_set;\r\n       ^\r\ngrpc-1.8.1/src/core/ext/filters/client_channel/resolver/dns/c_ares/grpc_ares_ev_driver_posix.cc:40:24: note: a field with different name is defined in another translation unit\r\n   grpc_ares_ev_driver* ev_driver;\r\n                        ^\r\n```\r\n\r\nThese seem to be introduced by 83062842c3601faeddcae8f901c515e3c78f3661 changing some files to be built with c++? \r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13809", "title": "Connections fail to server running openssl 1.1.0 on debian stretch", "body": "### Should this be an issue in the gRPC issue tracker?\r\n\r\nYes\r\n\r\nIt seems to be a similar issue to https://github.com/grpc/grpc/issues/11935, but they resolved the issue by switching their code to boringssl, something that is non-trivial for us. We're also running as a server, rather than a client.\r\n\r\n### What version of gRPC and what language are you using?\r\n\r\nGrpc version v1.8.1, using C++\r\n\r\n### What operating system (Linux, Windows, \u2026) and version?\r\n\r\nLinux, Debian Stretch,\r\n\r\nOpenSSL 1.1.0f\r\n\r\nprotoc not installed\r\n\r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n\r\nGCC 6.3.0\r\n\r\n### What did you do?\r\nIf possible, provide a recipe for reproducing the error. Try being specific and include code snippets if helpful.\r\n\r\n```\r\ngit clone https://github.com/grpc/grpc.git\r\ngit checkout v1.8.1\r\ngit submodule update --init\r\nEMBED_OPENSSL=false CFLAGS=\"-Wno-error\" CXXFLAGS=\"-Wno-error\" make -j4 install-plugins install-static install-headers prefix=$(pwd)/install\r\n./tools/run_tests/start_port_server.py\r\nEMBED_OPENSSL=false CFLAGS=\"-Wno-error\" CXXFLAGS=\"-Wno-error\" make test\r\n```\r\n\r\n### What did you expect to see?\r\n\r\nAll tests pass\r\n\r\n### What did you see instead?\r\n\r\nThe `handshake_client` test seems to always fail, and `dualstack_socket_test` seems a bit flaky\r\n\r\n```\r\n[RUN]     Testing handshake_client\r\nE1218 10:00:13.334619327    7019 client_ssl.cc:308]          assertion failed: client_ssl_test(const_cast<char*>(\"grpc-exp\"))\r\nAborted\r\ntest handshake_client failed\r\n```\r\n\r\n```\r\n[RUN]     Testing dualstack_socket_test\r\nD1218 10:03:48.345552112   10284 test_config.cc:388]         test slowdown factor: sanitizer=1, fixture=1, poller=1, total=1\r\nE1218 10:04:03.273825154   10284 dualstack_socket_test.cc:239] assertion failed: status == GRPC_STATUS_UNAVAILABLE\r\n\r\n\r\n\r\n*******************************\r\nCaught signal SIGABRT\r\n/home/chris/grpc/bins/opt/dualstack_socket_test(+0x96ede)[0x560357f80ede]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x110c0)[0x7f215d2b90c0]\r\n/lib/x86_64-linux-gnu/libc.so.6(gsignal+0xcf)[0x7f215c83cfcf]\r\n/lib/x86_64-linux-gnu/libc.so.6(abort+0x16a)[0x7f215c83e3fa]\r\n/home/chris/grpc/bins/opt/dualstack_socket_test(+0x11d30)[0x560357efbd30]\r\n/home/chris/grpc/bins/opt/dualstack_socket_test(+0x10abc)[0x560357efaabc]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf1)[0x7f215c82a2b1]\r\n/home/chris/grpc/bins/opt/dualstack_socket_test(+0x110fa)[0x560357efb0fa]\r\nAborted\r\ntest dualstack_socket_test failed\r\nMakefile:1759: recipe for target 'test_c' failed\r\nmake: *** [test_c] Error 1\r\n```\r\n\r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "HCeskoV4": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13827", "title": "ResponseStream ending before completion of sending data", "body": " gRPC Version 1.7.1\r\nOS: Windows 10\r\nUsing Visual Studio\r\n\r\nI am trying to chunk and send a large byte array across gRPC using a server-side streaming call. I am using Nunit to test the implementation and cannot get my tests to pass. I am reading in the data from one stream and then writing it to the gRPC response stream. \r\nThis is a simplified snippet of how I am doing my gRPC calls:\r\nSERVER SIDE\r\n\r\n\tvar imageStream = storage.GetImageStream(imageId);\r\n\tvar sendByte = new byte[1024 * 16];\r\n\tint bytesRead;\r\n\r\n\twhile ((bytesRead = await imageStream.ReadAsync(sendByte, 0, sendByte.Length)) > 0)\r\n\t{\r\n\t\tvar message = new ImageResponse\r\n\t\t{\r\n\t\t\tImageExtension = fileExtension,\r\n\t\t\tImage = ByteString.CopyFrom(sendByte, 0, bytesRead)\r\n\t\t};\r\n\t\tawait responseStream.WriteAsync(message);\r\n\t}\r\n\t\t\t\t\r\n\r\nCLIENT SIDE\r\n\r\n\tusing (var call = _textExtractorClient.GetImage(imageRequest, callOptions))\r\n\t{\r\n\t\tvar responseStream = call.ResponseStream;\r\n\t\twhile (await responseStream.MoveNext())\r\n\t\t{ \r\n\t\t\tvar imageExt = responseStream.Current.ImageExtension;\r\n\r\n\t\t\tBuffer.BlockCopy(responseStream.Current.Image.ToByteArray(), 0, imageData, offset, call.ResponseStream.Current.Image.ToByteArray().Length);\r\n\t\t\toffset += responseStream.Current.Image.ToByteArray().Length;\r\n\t\t}\r\n\t}\t\t        \t\t\t\t\t\t\t\t\t\r\n\r\nIt is difficult to debug due to the streams timing out and sending the test into teardown.\r\n\r\nI expect to have an byte array of about 0.5Mb size or higher, but instead it only sends about half of the byte array or less. When I did some logging I found the exception that is occurring in the implementation is this:\r\nEXCEPTION HAPPENED == Response stream has already been completed.\r\n\r\nI notice that the problem becomes worse as the total size of the byte array that I am trying to pass increases. The outcomes of my tests are also inconsistent. Different amounts of data are being passed each time that I run it. \r\n\r\nI am looking for some consistency from the code and would love any help that could be offered. I couldn't find anything online about this exception.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cpzhang": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13819", "title": "wrong expression in msvc_static_runtime.cmake", "body": "if(${flag_var} MATCHES \"/MD\") should be if(\"${${flag_var}}\" MATCHES \"/MD\")", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13819/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "duelinmarkers": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13814", "title": "Can't build grpc 1.8.0 ruby gem with --platform ruby", "body": "### What version of gRPC and what language are you using?\r\n \r\nTrying to install 1.8.0, having previously used 1.6.7 and 1.7.3 successfully. The `--platform ruby` is because our project uses bundler, and our Gemfile.lock only specifies the `ruby` platform.\r\n\r\n### What operating system (Linux, Windows, \u2026) and version?\r\n\r\n`Linux ... 3.16.0-0.bpo.4-amd64 #1 SMP Debian 3.16.39-1+deb8u1~bpo70+1 (2017-02-24) x86_64 GNU/Linux`\r\n\r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n\r\n`g++ (Debian 4.7.2-5) 4.7.2`\r\n\r\n### What did you do?\r\n\r\n`gem install grpc -v 1.8.0 --platform=ruby`\r\n\r\n### What did you expect to see?\r\n\r\nSomething like this output from installing 1.7.3:\r\n\r\n```\r\n% gem install grpc -v 1.7.3 --platform ruby\r\nFetching: google-protobuf-3.5.0.gem (100%)\r\nBuilding native extensions.  This could take a while...\r\nSuccessfully installed google-protobuf-3.5.0\r\nFetching: grpc-1.7.3.gem (100%)\r\nBuilding native extensions.  This could take a while...\r\nSuccessfully installed grpc-1.7.3\r\nParsing documentation for google-protobuf-3.5.0\r\nInstalling ri documentation for google-protobuf-3.5.0\r\nParsing documentation for grpc-1.7.3\r\nInstalling ri documentation for grpc-1.7.3\r\nDone installing documentation for google-protobuf, grpc after 4 seconds\r\n2 gems installed\r\n``` \r\n \r\n### What did you see instead?\r\n\r\nFull build output is [available in a gist](https://gist.github.com/duelinmarkers/8117c91adc43b9452faaaa9ee25a09bc). Hopefully useful highlights:\r\n\r\n```\r\n...\r\nsrc/core/lib/iomgr/error.cc:150:18: error: \u2018UINT8_MAX\u2019 was not declared in this scope\r\n...\r\nsrc/core/lib/iomgr/ev_epoll1_linux.cc:570:17: error: \u2018INTPTR_MAX\u2019 was not declared in this scope\r\n...\r\nsrc/core/lib/iomgr/exec_ctx.cc:120:11: error: \u2018INTPTR_MAX\u2019 was not declared in this scope\r\n...\r\n```\r\n\r\n### Anything else we should know about your project / environment?\r\n\r\nLet me know if further information could be helpful.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "masterX244": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13810", "title": "Grpc protoc generates invalid code for Message containing a Message type", "body": "### What version of gRPC and what language are you using?\r\n GRPC-C# V1.7.1 with Protobuf 3.5.0 with C#6.0\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nWindows 10\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\nC#6.0 Dotnet Framework 4.7\r\n \r\n### What did you do?\r\nRunning a protofile like this through the Compiler\r\n\r\n\r\n```\r\nsyntax = \"proto3\";\r\npackage Bug;\r\n\r\nservice Bug {\r\n    rpc Bug(BugParameters) returns(BugResponse) { };\r\n}\r\n\r\nmessage BugParameters {\r\n    \r\nint64 requestId=1;\r\n}\r\n\r\nmessage BugResponse {\r\n    \r\nstring deviceId=1;\r\nDateTime bugme=6;\r\n}\r\n\r\nmessage Date {\r\nint64 day=1;\r\nint64 month=2;\r\nint64 year=3;\r\n}\r\n\r\nmessage Time{\r\nint64 second=1;\r\nint64 minute=2;\r\nint64 hour=3;\r\n}\r\n\r\nmessage DateTime{\r\nDate date=1;\r\nTime time=2;\r\n}\r\n```\r\n\r\n and then through the C# compiler\r\n\r\n### What did you expect to see?\r\n \r\nCompilation finishing successfully\r\n \r\n### What did you see instead?\r\n \r\nGetting a CS0453 compiler error `(The type 'DateTime' must be a non-nullable value type in order to use it as parameter  in the generic type or method \"Nullable<T>\" )`\r\noriginal message in german:\r\n`Fehler\tCS0453\tDer Typ \"DateTime\" darf keine NULL-Werte zulassen, wenn er als T-Parameter im generischen Typ oder in der generischen Methode \"Nullable<T>\" verwendet werden soll.\t`\r\n \r\n \r\n \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13810/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nathanielmanistaatgoogle": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13782", "title": "Reconsider metadata types?", "body": "In gRPC Python 1.8.0 we [eliminated de facto allowance of formally unsupported metadata being passed to gRPC](https://github.com/grpc/grpc/commit/80516e884a8cd03daaa1f4a40d2bb284d5cc1be6) and [broke... our users, and our tests, and our users' tests](https://github.com/grpc/grpc/issues/13752).\r\n\r\nConsidering the question outside the context of a release cycle: do we want to reject in code metadata values that don't conform to [our formal specification](https://grpc.io/grpc/python/grpc.html#term-metadata) and that match the type of metadata passed out of gRPC Python on the other side of the RPC? Do we want to change the type of metadata passed out of gRPC?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13782/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13602", "title": "Pick an end-of-2.7-support date.", "body": "After almost ten long years, Python 3 has finally won. Hooray!\r\n\r\n[Everyone else is picking dates for when they will drop support for Python 2](https://pythonclock.org); we should as well.\r\n\r\nI'm thinking 2020-01-01, which is just over twenty-four months away. 2020 sounds like it's in the future, but it's not nearly as far in the future as once it was.\r\n\r\nIf you're still using Python 2: **start making your plan to migrate to Python 3 and executing that plan now**.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13566", "title": "Add test for \"metadata plugin asynchronously invokes callback long after channel has been shut down\"", "body": "This will be a small work item to be done with or after [issue 12531](https://github.com/grpc/grpc/issues/12531). The success condition of the test would of course be \"system does not crash\" and not that anything particularly useful occurs.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13505", "title": "Run performance tests with Python 3.6", "body": "Python 3.6 is what our users _should_ be using, so Python 3.6 should be [the interpreter used in measuring how our system behaves](https://github.com/grpc/grpc/blob/de93112a3f70afa39d3e9aa87da165f9f737fdef/tools/run_tests/performance/run_worker_python.sh#L20).", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13481", "title": "Rename \"SSL\" code elements \"TLS\"?", "body": "Over in [pull request 13479](https://github.com/grpc/grpc/pull/13479) @mehrdada suggested renaming (well, \"introducing new aliases of\", because we wouldn't want to break anyone) the \"SSL\" code elements of the gRPC Python API \"TLS\" (so that `ssl_server_credentials` becomes `tls_server_credentials` and so forth). What do you think?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13481/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13340", "title": "grpc_reflection documentation not available at https://grpc.io/grpc/python/grpc_reflection.html", "body": "I don't think we're yet serving anywhere the documentation of our `grpc_<more stuff>` packages.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/56d2bfc6ba56e2cd85747cde1a4e6a47debede29", "message": "Merge pull request #13974 from nathanielmanistaatgoogle/12531\n\nElide cygrpc.Timespec."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/31ddbff8cfed36d77ad34ec892af812dff614ce6", "message": "Elide cygrpc.Timespec"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e1d592a999bb7780d436c62e20d3fd2366090dda", "message": "Merge pull request #13891 from nathanielmanistaatgoogle/12531\n\nReform cygrpc.OperationTag and cygrpc.Event."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/7b9c0233914a70fe20139fe5604b3b9b73a20e3c", "message": "Reform cygrpc.OperationTag and cygrpc.Event\n\nRather than single classes they are now broken up into class families\nwith each class containing only those fields and methods that are\nneeded in the context in which the class is used."}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14107", "title": "Elide cygrpc.ChannelArg and cygrpc.ChannelArgs", "body": "Further progress on [issue 12531](https://github.com/grpc/grpc/issues/12531).", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/7076", "title": "RPC association", "body": "(Non-breaking) API change so wide set of reviewers.\n\nThis addresses [issue 2515](https://github.com/grpc/grpc/issues/2515).\n\nDNM-labeled as I wanted to start the conversation about the API before completing the implementation.\n", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70335437", "body": "Woot!\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70335437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70345594", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70345594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71093849", "body": "@nicolasnoble, please review.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71093849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72707340", "body": "This is done in Python as of the merge of #274.\n\nIs there anything left to be done here or should this be closed?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72707340/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72702579", "body": "This is done as of the merge of #274.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72702579/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/136450286", "body": "This was fixed in 9e4d0610ea5e2bb3.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/136450286/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71093849", "body": "@nicolasnoble, please review.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71093849/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72071636", "body": "Also please take a look @soltanmm.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72071636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72281338", "body": "@ctiller port selection logic is exposed via the (Python) server's add_http2_addr method and the Fore's start method.\n\n@craigcitro Please also take a look and merge if satisfied?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72281338/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72281489", "body": "@craigcitro This should be a very simple review after the merge of 274.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72281489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72298525", "body": "(All outstanding comments addressed.)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72298525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72476573", "body": "Ping to those reviewers with permissions to merge this - I believe all outstanding comments have been addressed.\n\nAlso I used the process outlined at http://stackoverflow.com/questions/1186535/how-to-modify-a-specified-commit to remove the TODO in setup.py as it never actually applies at any stage of the history of this branch.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72476573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72494231", "body": "This has now been updated and is ready for review. I believe @craigcitro intends to lead review?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72494231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72498666", "body": "(This is now ready for merge, I believe.)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72498666/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72506694", "body": "@ctiller:\n\nThis failure is happening at \"python2.7_virtual_environment/bin/pip install third_party/protobuf/python\" in build_python.sh, right?\n\nI think that what needs to happen before that is attempted is:\n(1) third_party/protobuf gets built and installed (this already happens, right?),\n(2) \"python setup.py build\" is executed from inside the third_party/protobuf/python directory (I seem to have forgotten this - what's the best way to add it?).\n\nI think (2) shouldn't be necessary because installation into the virtual environment should perform a build if a build is necessary, but protobuf's setup.py file may not be structured to do this properly. Running some exercises now to confirm.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72506694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72531674", "body": "Perhaps this usually goes without saying but: you intend to squash these commits, right? LGTM in that case.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72531674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/9323767", "body": "Why use the third-party \"simplejson\" library rather than the built-in standard-library \"json\" library?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/9323767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12474684", "body": "One entry per line, please.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12474684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12474693", "body": "Comma following last entry, please.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12474693/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/18457783", "body": "@thunderboltsid and I came across this today - what's the reason for it? It looks stray - the method it decorates even takes a `self` parameter.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/18457783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/19471653", "body": "If we hope to replace this test with something very similar, isn't `@unittest.skip('TODO(<bug reference>): re\u00ebnable this test.')` the right thing to do rather than delete it?\n\nDoes the test violate the Core API? Did the Core API guarantee something it shouldn't have guaranteed? Did this test rely on Core behavior that wasn't guaranteed?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19471653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23412927", "body": "Please change \"till\" to \"until\"?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23412927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23413054", "body": "\"Synchronous\" and \"async\" look weird next to each other in prose - make one decision about whether or not they are proper nouns that deserve a capitalized first letter, and make another decision about whether or not they should be abbreviated, and then consistently apply those decisions.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23413054/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "zhulika": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13751", "title": "Throwing a TaskCanceledException from WaitForStateChangedAsync is a poor design", "body": "The fact that you have chosen to cancel the task when it times out makes it very hard to use grpc in Windows because the output window floods with TaskCanceledException messages, I understand that so wish to claim that this is a feature specific to Visual Studio (#11328) but, if you want to say that you support Windows, I feel that you should conform to standard development environment for that operating system.\r\n\r\nIMO, an \"expected\" condition, such as expiring code by reaching some sort of deadline should not throw an exception; exceptions are for exceptional (i.e. unexpected) conditions. In this case, I believe that the standard thing to do it to return a `bool` from this function and set it to false to indicate that it timed out. This the way that other similar functions in the .Net framework seem to behave.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13751/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vlad7777": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13746", "title": "Python GRPC blocks when connection drops", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes\r\n \r\n### What version of gRPC and what language are you using?\r\nPython\r\ngrpcio 1.7.3\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nLinux 4.13.12-1-ARCH\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\nPython 2.7.14\r\n \r\n \r\n### What did you do?\r\nEstablished stream-stream connection from client to the server, then disabled network for the client and tried to interrupt the client with ctrl+c.\r\n \r\n### What did you expect to see?\r\nFirst of all, I expected grpc to throw an exception saying that there's no network. When that didn't  happen, I expected the program to exit because of KeyboardInterrupt.\r\n \r\n### What did you see instead?\r\nThe client blocked, and I couldn't exit with ctrl+c. I had to ctrl+\\ instead.\r\n \r\nTo reproduce:\r\n1. docker pull vladocker/grpcclient; docker pull vladocker/grpcserver. These include just the slightly modified code from the RouteGuide examples.\r\n1. docker run -ti --name grpcserver vladocker/grpcserver\r\n2. docker run -ti --link grpcserver:grpcserver --name grpcclient vladocker/grpcclient\r\n3. see the messages appear on the screen\r\n4. docker network disconnect bridge grpcclient\r\n5. Try to do Ctrl+C the client, nothing happens\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Mainian": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13726", "title": "C# code gen \"file_extension\" option is not applied to grpc service files", "body": "When generating C# classes using grpc tools 1.7.1 or 1.7.3 with google protobuf tools 3.4.0 and the grpc_csharp_plugin, I cannot get the csharp option file extension to apply to the grpc service classes, but does get applied to the reflection class.\r\n\r\nBelow is the command I am running with all the paths removed:\r\n\r\n1.7.3\\tools\\windows_x64 protoc -I.\\Proto\\;[3.4.0 tools] --csharp_out Proto Proto/myProto.proto --csharp_opt=file_extension=.g.cs --grpc_out=Proto --plugin=protoc-gen-grpc=[1.7.3\\tools\\windows_x64 \\grpc_csharp_plugin.exe]\r\n \r\nI would expect the .g.cs to be applied to the service files. \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Falco20019": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13724", "title": "[C# / Feature Request] Adding base_namespace option", "body": "### What version of gRPC and what language are you using?\r\nGrpc.Tools v1.7.3 from the C# NuGet\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nWindows 10 64-bit\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\nMicrosoft Visual Studio Professional 2017 v15.4.3\r\n \r\n### What did you do?\r\nTried providing protoc with `--grpc_out=%output_path% --grpc_opt=base_namespace` and `--grpc_out=base_namespace:%output_path%`.\r\n \r\n### What did you expect to see?\r\nGet the generated service files sorted into the same folder structure analogous to `--csharp_opt=base_namespace`.\r\n \r\n### What did you see instead?\r\nThe option is not available. Without the option, every service file is put into the base output folder without any structure, leading to conflicts in more complex projects with a lot of services. Also leading to a not very nice overview.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13724/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13639", "title": "Added resolver for grpclb", "body": "This is a fix for #11879 that allows directly contacting an GRPCLB using the common name resolver scheme that is also used for c-ares.  This also allows using GRPCLB without a DNS server in cases of a simple infrastructure or if running multiple GRPC services on premise. Since #12416 is not merged yet, that's also the only way to get GRPCLB usage on windows platforms with C#.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BusyJay": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13723", "title": "qps drops in benchmark from 1.6.0 to 1.7.2", "body": "Hi, I run following command for version v1.6.0 and version 1.7.2:\r\n```\r\n$ python2.7 tools/run_tests/run_performance_tests.py -l c++ -r generic_async_streaming_ping_pong\r\n```\r\n\r\nThe results show that qps drops from 33k to 22k on my machine. This can be reproduced reliably. Is it expected?\r\n\r\n```\r\n$ uname -a\r\nLinux 4.14.3-300.fc27.x86_64 #1 SMP Mon Dec 4 17:18:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13705", "title": "exposing grpc_stats_collect as public C API", "body": "There are a lots of stats we are interested to push to our monitor system. However, it seems that `grpc_stats_collect` and its related APIs are private for now. Do you have any plan to expose those as public C API? Or is there any alternatives?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13601", "title": "support/cpu: avoid out of bound access", "body": "When using `rr` to reproduce some bugs, `gpr_cpu_num_cores` always returns 1. However `gpr_cpu_current_cpu` will return the actual CPU index. So add a check to avoid out of bound access.\r\n\r\n/cc mozilla/rr#2141", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thassss": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13712", "title": "unable to compile gRPC + CronetFramework for iOS", "body": "### Environment\r\n- macOS 10.13.2\r\n- gRPC 1.7.1\r\n- Swift 4\r\n- Xcode 9.2\r\n- Cocoapods 1.3.1\r\n\r\n### Problem\r\nWe are interested in integrating CronetFramework into our app for use with gRPC. I'm having some trouble getting it to compile. When I set the `GRPC_COMPILE_WITH_CRONET` flag, the compiler complains that `stream_engine` is not defined in `GRPCCall+Cronet.h`.\r\n\r\nBelow is the Podfile I am using. I wasn't able to find an example Podfile for using Cronet with gRPC. Does one exist?\r\n```\r\nplatform :ios, '11.0'\r\n\r\nsource 'https://github.com/Cocoapods/specs.git'\r\n\r\ntarget 'MyApp' do\r\n\tpod 'CronetFramework'\r\n\tpod 'gRPC-ProtoRPC'\r\nend\r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "SurferJeffAtGoogle": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13685", "title": "run_tests.py fails on Windows", "body": "Please answer these questions before submitting your issue. \r\n \r\n### What version of gRPC and what language are you using?\r\ncommit 5cf4b44fff8755edc9bdc46284d6cd270bc4a162 (HEAD -> v1.7.x, tag: v1.7.2, origin/v1.7.x, fork/v1.7.x)\r\nlanguage: c\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n\r\nWindows 10\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n\r\nVisual Studio 2017\r\n \r\n### What did you do?\r\n\r\n```\r\n(env) PS C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\tools\\run_tests> python .\\run_tests.py -l c\r\n```\r\n \r\n### What did you expect to see?\r\n \r\nTests running.\r\n \r\n### What did you see instead?\r\n```\r\nUnexpected error getting flaky tests: <type 'exceptions.ImportError'>\r\n2017-12-07 16:23:06,673 START: tools\\run_tests\\helper_scripts\\pre_build_cmake.bat\r\n2017-12-07 16:23:07,206\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>setlocal\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set GENERATOR=\"Visual Studio 14 2015\"\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set ARCHITECTURE=Win32\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd /d C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\tools\\run_tests\\helper_scripts\\\\..\\..\\..\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>mkdir cmake\r\nA subdirectory or file cmake already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd cmake\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>mkdir build\r\nA subdirectory or file build already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>cd build\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>yasm --version   || set USE_HARDCODED_YASM_PATH_MAYBE=-DCMAKE_ASM_NASM_COMPILER=\"C:/Program Files (x86)/yasm/yasm.exe\"\r\nyasm 1.2.0\r\nCompiled on Oct 31 2011.\r\nCopyright (c) 2001-2011 Peter Johnson and other Yasm developers.\r\nRun yasm --license for licensing overview and summary.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>cmake -G \"Visual Studio 14 2015\" -A Win32 -DgRPC_BUILD_TESTS=ON  ../..   || goto :error\r\nCMake Error at CMakeLists.txt:31 (project):\r\n  Failed to run MSBuild command:\r\n\r\n    C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe\r\n\r\n  to get the value of VCTargetsPath:\r\n\r\n    Microsoft (R) Build Engine version 14.0.25420.1\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Build started 12/7/2017 4:23:07 PM.\r\n    Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" on node 1 (default targets).\r\n    C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    Done Building Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\r\n\r\n    Build FAILED.\r\n\r\n    \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default target) (1) ->\r\n      C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\n        0 Warning(s)\r\n        1 Error(s)\r\n\r\n    Time Elapsed 00:00:00.01\r\n\r\n\r\n  Exit code: 1\r\n\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"C:/Users/Jeffrey Rennie/gitrepos/grpc/cmake/build/CMakeFiles/CMakeOutput.log\".\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>echo Failed!\r\nFailed!\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>exit /b 1\r\n\r\n2017-12-07 16:23:07,206 FLAKE: tools\\run_tests\\helper_scripts\\pre_build_cmake.bat [ret=1, pid=8248]\r\n2017-12-07 16:23:07,723\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>setlocal\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set GENERATOR=\"Visual Studio 14 2015\"\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set ARCHITECTURE=Win32\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd /d C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\tools\\run_tests\\helper_scripts\\\\..\\..\\..\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>mkdir cmake\r\nA subdirectory or file cmake already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd cmake\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>mkdir build\r\nA subdirectory or file build already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>cd build\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>yasm --version   || set USE_HARDCODED_YASM_PATH_MAYBE=-DCMAKE_ASM_NASM_COMPILER=\"C:/Program Files (x86)/yasm/yasm.exe\"\r\nyasm 1.2.0\r\nCompiled on Oct 31 2011.\r\nCopyright (c) 2001-2011 Peter Johnson and other Yasm developers.\r\nRun yasm --license for licensing overview and summary.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>cmake -G \"Visual Studio 14 2015\" -A Win32 -DgRPC_BUILD_TESTS=ON  ../..   || goto :error\r\nCMake Error at CMakeLists.txt:31 (project):\r\n  Failed to run MSBuild command:\r\n\r\n    C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe\r\n\r\n  to get the value of VCTargetsPath:\r\n\r\n    Microsoft (R) Build Engine version 14.0.25420.1\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Build started 12/7/2017 4:23:07 PM.\r\n    Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" on node 1 (default targets).\r\n    C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    Done Building Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\r\n\r\n    Build FAILED.\r\n\r\n    \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default target) (1) ->\r\n      C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\n        0 Warning(s)\r\n        1 Error(s)\r\n\r\n    Time Elapsed 00:00:00.03\r\n\r\n\r\n  Exit code: 1\r\n\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"C:/Users/Jeffrey Rennie/gitrepos/grpc/cmake/build/CMakeFiles/CMakeOutput.log\".\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>echo Failed!\r\nFailed!\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>exit /b 1\r\n\r\n2017-12-07 16:23:07,723 FLAKE: tools\\run_tests\\helper_scripts\\pre_build_cmake.bat [ret=1, pid=10496]\r\n2017-12-07 16:23:08,256\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>setlocal\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set GENERATOR=\"Visual Studio 14 2015\"\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set ARCHITECTURE=Win32\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd /d C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\tools\\run_tests\\helper_scripts\\\\..\\..\\..\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>mkdir cmake\r\nA subdirectory or file cmake already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd cmake\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>mkdir build\r\nA subdirectory or file build already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>cd build\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>yasm --version   || set USE_HARDCODED_YASM_PATH_MAYBE=-DCMAKE_ASM_NASM_COMPILER=\"C:/Program Files (x86)/yasm/yasm.exe\"\r\nyasm 1.2.0\r\nCompiled on Oct 31 2011.\r\nCopyright (c) 2001-2011 Peter Johnson and other Yasm developers.\r\nRun yasm --license for licensing overview and summary.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>cmake -G \"Visual Studio 14 2015\" -A Win32 -DgRPC_BUILD_TESTS=ON  ../..   || goto :error\r\nCMake Error at CMakeLists.txt:31 (project):\r\n  Failed to run MSBuild command:\r\n\r\n    C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe\r\n\r\n  to get the value of VCTargetsPath:\r\n\r\n    Microsoft (R) Build Engine version 14.0.25420.1\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Build started 12/7/2017 4:23:08 PM.\r\n    Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" on node 1 (default targets).\r\n    C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    Done Building Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\r\n\r\n    Build FAILED.\r\n\r\n    \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default target) (1) ->\r\n      C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\n        0 Warning(s)\r\n        1 Error(s)\r\n\r\n    Time Elapsed 00:00:00.02\r\n\r\n\r\n  Exit code: 1\r\n\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"C:/Users/Jeffrey Rennie/gitrepos/grpc/cmake/build/CMakeFiles/CMakeOutput.log\".\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>echo Failed!\r\nFailed!\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>exit /b 1\r\n\r\n2017-12-07 16:23:08,256 FLAKE: tools\\run_tests\\helper_scripts\\pre_build_cmake.bat [ret=1, pid=9936]\r\n2017-12-07 16:23:08,789\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>setlocal\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set GENERATOR=\"Visual Studio 14 2015\"\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set ARCHITECTURE=Win32\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd /d C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\tools\\run_tests\\helper_scripts\\\\..\\..\\..\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>mkdir cmake\r\nA subdirectory or file cmake already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd cmake\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>mkdir build\r\nA subdirectory or file build already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>cd build\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>yasm --version   || set USE_HARDCODED_YASM_PATH_MAYBE=-DCMAKE_ASM_NASM_COMPILER=\"C:/Program Files (x86)/yasm/yasm.exe\"\r\nyasm 1.2.0\r\nCompiled on Oct 31 2011.\r\nCopyright (c) 2001-2011 Peter Johnson and other Yasm developers.\r\nRun yasm --license for licensing overview and summary.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>cmake -G \"Visual Studio 14 2015\" -A Win32 -DgRPC_BUILD_TESTS=ON  ../..   || goto :error\r\nCMake Error at CMakeLists.txt:31 (project):\r\n  Failed to run MSBuild command:\r\n\r\n    C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe\r\n\r\n  to get the value of VCTargetsPath:\r\n\r\n    Microsoft (R) Build Engine version 14.0.25420.1\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Build started 12/7/2017 4:23:08 PM.\r\n    Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" on node 1 (default targets).\r\n    C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    Done Building Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\r\n\r\n    Build FAILED.\r\n\r\n    \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default target) (1) ->\r\n      C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\n        0 Warning(s)\r\n        1 Error(s)\r\n\r\n    Time Elapsed 00:00:00.02\r\n\r\n\r\n  Exit code: 1\r\n\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"C:/Users/Jeffrey Rennie/gitrepos/grpc/cmake/build/CMakeFiles/CMakeOutput.log\".\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>echo Failed!\r\nFailed!\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>exit /b 1\r\n\r\n2017-12-07 16:23:08,789 FLAKE: tools\\run_tests\\helper_scripts\\pre_build_cmake.bat [ret=1, pid=7292]\r\n2017-12-07 16:23:09,315\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>setlocal\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set GENERATOR=\"Visual Studio 14 2015\"\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set ARCHITECTURE=Win32\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd /d C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\tools\\run_tests\\helper_scripts\\\\..\\..\\..\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>mkdir cmake\r\nA subdirectory or file cmake already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd cmake\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>mkdir build\r\nA subdirectory or file build already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>cd build\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>yasm --version   || set USE_HARDCODED_YASM_PATH_MAYBE=-DCMAKE_ASM_NASM_COMPILER=\"C:/Program Files (x86)/yasm/yasm.exe\"\r\nyasm 1.2.0\r\nCompiled on Oct 31 2011.\r\nCopyright (c) 2001-2011 Peter Johnson and other Yasm developers.\r\nRun yasm --license for licensing overview and summary.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>cmake -G \"Visual Studio 14 2015\" -A Win32 -DgRPC_BUILD_TESTS=ON  ../..   || goto :error\r\nCMake Error at CMakeLists.txt:31 (project):\r\n  Failed to run MSBuild command:\r\n\r\n    C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe\r\n\r\n  to get the value of VCTargetsPath:\r\n\r\n    Microsoft (R) Build Engine version 14.0.25420.1\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Build started 12/7/2017 4:23:09 PM.\r\n    Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" on node 1 (default targets).\r\n    C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    Done Building Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\r\n\r\n    Build FAILED.\r\n\r\n    \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default target) (1) ->\r\n      C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\n        0 Warning(s)\r\n        1 Error(s)\r\n\r\n    Time Elapsed 00:00:00.01\r\n\r\n\r\n  Exit code: 1\r\n\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"C:/Users/Jeffrey Rennie/gitrepos/grpc/cmake/build/CMakeFiles/CMakeOutput.log\".\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>echo Failed!\r\nFailed!\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>exit /b 1\r\n\r\n2017-12-07 16:23:09,315 FLAKE: tools\\run_tests\\helper_scripts\\pre_build_cmake.bat [ret=1, pid=8332]\r\n2017-12-07 16:23:09,855\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>setlocal\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set GENERATOR=\"Visual Studio 14 2015\"\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>set ARCHITECTURE=Win32\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd /d C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\tools\\run_tests\\helper_scripts\\\\..\\..\\..\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>mkdir cmake\r\nA subdirectory or file cmake already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc>cd cmake\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>mkdir build\r\nA subdirectory or file build already exists.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake>cd build\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>yasm --version   || set USE_HARDCODED_YASM_PATH_MAYBE=-DCMAKE_ASM_NASM_COMPILER=\"C:/Program Files (x86)/yasm/yasm.exe\"\r\nyasm 1.2.0\r\nCompiled on Oct 31 2011.\r\nCopyright (c) 2001-2011 Peter Johnson and other Yasm developers.\r\nRun yasm --license for licensing overview and summary.\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>cmake -G \"Visual Studio 14 2015\" -A Win32 -DgRPC_BUILD_TESTS=ON  ../..   || goto :error\r\nCMake Error at CMakeLists.txt:31 (project):\r\n  Failed to run MSBuild command:\r\n\r\n    C:/Program Files (x86)/MSBuild/14.0/bin/MSBuild.exe\r\n\r\n  to get the value of VCTargetsPath:\r\n\r\n    Microsoft (R) Build Engine version 14.0.25420.1\r\n    Copyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n    Build started 12/7/2017 4:23:09 PM.\r\n    Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" on node 1 (default targets).\r\n    C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n    Done Building Project \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default targets) -- FAILED.\r\n\r\n    Build FAILED.\r\n\r\n    \"C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj\" (default target) (1) ->\r\n      C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build\\CMakeFiles\\3.10.0\\VCTargetsPath.vcxproj(15,2): error MSB4019: The imported project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\n        0 Warning(s)\r\n        1 Error(s)\r\n\r\n    Time Elapsed 00:00:00.02\r\n\r\n\r\n  Exit code: 1\r\n\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"C:/Users/Jeffrey Rennie/gitrepos/grpc/cmake/build/CMakeFiles/CMakeOutput.log\".\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>echo Failed!\r\nFailed!\r\n\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\cmake\\build>exit /b 1\r\n\r\n2017-12-07 16:23:09,855 FAILED: tools\\run_tests\\helper_scripts\\pre_build_cmake.bat [ret=1, pid=6580]\r\n2017-12-07 16:23:09,855 FAILED: Some tests failed\r\n(env) PS C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\tools\\run_tests>\r\n```\r\n  \r\n### Anything else we should know about your project / environment?\r\n\r\nHere's my path:\r\n```\r\n(env) PS C:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\tools\\run_tests> $env:PATH.split(\";\")\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\env/Scripts\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.11.25503\\bin\\HostX64\\x64\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\VC\\VCPackages\r\nC:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\2.3\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\bin\\Roslyn\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Team Tools\\Performance Tools\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\Common\\VSPerfCollectionTools\\\r\nC:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\x64\\\r\nC:\\Program Files (x86)\\Microsoft SDKs\\F#\\4.1\\Framework\\v4.0\\\r\nC:\\Program Files (x86)\\Windows Kits\\10\\bin\\x64\r\nC:\\Program Files (x86)\\Windows Kits\\10\\bin\\10.0.16299.0\\x64\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\\\MSBuild\\15.0\\bin\r\nC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\Tools\\\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\grpc\\env/Scripts\r\nC:\\Perl64\\site\\bin\r\nC:\\Perl64\\bin\r\nC:\\WINDOWS\\system32\r\nC:\\WINDOWS\r\nC:\\WINDOWS\\System32\\Wbem\r\nC:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\\r\nC:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\\r\nC:\\phantomjs-2.1.1-windows\\bin\r\nC:\\n1k0-casperjs-76fc831\\batchbin\r\nC:\\Program Files (x86)\\Google\\Cloud SDK\\google-cloud-sdk\\bin\r\nC:\\ProgramData\\chocolatey\\bin\r\nC:\\Program Files\\dotnet\\\r\nC:\\Program Files (x86)\\IIS Express\r\nC:\\Program Files\\CMake\\bin\r\nC:\\tools\\go\\bin\r\nC:\\Program Files\\Git\\cmd\r\nC:\\ProgramData\\chocolatey\\lib\\yasm\\tools\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\r\nC:\\Python27\r\nC:\\Python27\\Scripts\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Bin\r\nC:\\Users\\Jeffrey Rennie\\gitrepos\\codeformatter\\bin\\CodeFormatter\\Debug\r\nC:\\Program Files\\Microsoft VS Code\\bin\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Web\\External\r\nC:\\Users\\Jeffrey Rennie\\AppData\\Local\\Microsoft\\WindowsApps\r\nC:\\Users\\Jeffrey Rennie\\AppData\\Roaming\\KokoroSecrets\\codeformatter\\bin\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13447", "title": "I could use a Windows named pipe transport.", "body": "Please answer these questions before submitting your issue. \r\n \r\n### What version of gRPC and what language are you using?\r\nCurrent.  C++.\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nWindows.\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n VC 2017\r\n  \r\n### What did you expect to see?\r\n \r\nI would like to build gRPC clients and servers that communicate over Windows named pipes.  Named pipes are very similar to unix domain sockets.  They use access control lists to allow fine grained control over access.  They can also be used to impersonate the caller.\r\n\r\nThe application I have in mind is a cross-platform desktop application.  The backend process is written in C++.  The code is shared across platforms, compiled for each platform.  A separate UI process will be written for each platform, in differing languages.  The UI process calls the backend process via gRPC.\r\n\r\nFor this application, Unix domain sockets work nicely on Linux and Mac.  But for Windows, they're unavailable.  TCP/IP Sockets are infeasible for this situation because:\r\n1. The user may get a security warning when the application opens a socket.\r\n2. I have to implement some kind of secure handshake between the UI and backend so that other users on the same machine can't hijack my process.\r\n3. If the machine has no network card, opening a socket will fail.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13447/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stephanemoore": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13683", "title": "GRPCCall calls dispatch_async in dealloc", "body": "Calling dispatch_async in dealloc seems highly irrregular.\r\n\r\nhttps://github.com/grpc/grpc/blob/master/src/objective-c/GRPCClient/GRPCCall.m", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "StefanStokic": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13673", "title": "Installing @google-cloud & grpc fails via npm", "body": " ### What version of gRPC and what language are you using?\r\nTrying to install google-cloud/pubsub, and it's dependent on gRPC. Using NPM 4.2 and Node.js 7.8 \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Ubuntu 16.04, running in Docker\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n NPM\r\n \r\n### What did you do?\r\n\r\nSimply running NPM install on @google-cloud/pubsub or grpc directly results in this error:\r\n\r\n```\r\n> grpc@1.7.2 install /root/folder/node_modules/grpc\r\n> node-pre-gyp install --fallback-to-build --library=static_library\r\n\r\nnode-pre-gyp ERR! Tried to download(undefined): https://storage.googleapis.com/grpc-precompiled-binaries/node/grpc/v1.7.2/node-v51-linux-x64-glibc.tar.gz \r\nnode-pre-gyp ERR! Pre-built binaries not found for grpc@1.7.2 and node@7.8.0 (node-v51 ABI, glibc) (falling back to source compile with node-gyp) \r\ngyp ERR! build error \r\ngyp ERR! stack Error: not found: make\r\ngyp ERR! stack     at getNotFoundError (/usr/local/nvm/versions/node/v7.8.0/lib/node_modules/npm/node_modules/which/which.js:13:12)\r\ngyp ERR! stack     at F (/usr/local/nvm/versions/node/v7.8.0/lib/node_modules/npm/node_modules/which/which.js:68:19)\r\ngyp ERR! stack     at E (/usr/local/nvm/versions/node/v7.8.0/lib/node_modules/npm/node_modules/which/which.js:80:29)\r\ngyp ERR! stack     at /usr/local/nvm/versions/node/v7.8.0/lib/node_modules/npm/node_modules/which/which.js:89:16\r\ngyp ERR! stack     at /usr/local/nvm/versions/node/v7.8.0/lib/node_modules/npm/node_modules/which/node_modules/isexe/index.js:44:5\r\ngyp ERR! stack     at /usr/local/nvm/versions/node/v7.8.0/lib/node_modules/npm/node_modules/which/node_modules/isexe/access.js:8:5\r\ngyp ERR! stack     at FSReqWrap.oncomplete (fs.js:114:15)\r\ngyp ERR! System Linux 4.4.0-101-generic\r\ngyp ERR! command \"/usr/local/nvm/versions/node/v7.8.0/bin/node\" \"/usr/local/nvm/versions/node/v7.8.0/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js\" \"build\" \"--fallback-to-build\" \"--library=static_library\" \"--module=/root/folder/node_modules/grpc/src/node/extension_binary/node-v51-linux-x64-glibc/grpc_node.node\" \"--module_name=grpc_node\" \"--module_path=/root/folder/node_modules/grpc/src/node/extension_binary/node-v51-linux-x64-glibc\"\r\ngyp ERR! cwd /root/folder/node_modules/grpc\r\ngyp ERR! node -v v7.8.0\r\ngyp ERR! node-gyp -v v3.5.0\r\ngyp ERR! not ok \r\nnode-pre-gyp ERR! build error \r\nnode-pre-gyp ERR! stack Error: Failed to execute '/usr/local/nvm/versions/node/v7.8.0/bin/node /usr/local/nvm/versions/node/v7.8.0/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js build --fallback-to-build --library=static_library --module=/root/folder/node_modules/grpc/src/node/extension_binary/node-v51-linux-x64-glibc/grpc_node.node --module_name=grpc_node --module_path=/root/folder/node_modules/grpc/src/node/extension_binary/node-v51-linux-x64-glibc' (1)\r\nnode-pre-gyp ERR! stack     at ChildProcess.<anonymous> (/root/folder/node_modules/grpc/node_modules/node-pre-gyp/lib/util/compile.js:83:29)\r\nnode-pre-gyp ERR! stack     at emitTwo (events.js:106:13)\r\nnode-pre-gyp ERR! stack     at ChildProcess.emit (events.js:194:7)\r\nnode-pre-gyp ERR! stack     at maybeClose (internal/child_process.js:899:16)\r\nnode-pre-gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)\r\nnode-pre-gyp ERR! System Linux 4.4.0-101-generic\r\nnode-pre-gyp ERR! command \"/usr/local/nvm/versions/node/v7.8.0/bin/node\" \"/root/folder/node_modules/grpc/node_modules/.bin/node-pre-gyp\" \"install\" \"--fallback-to-build\" \"--library=static_library\"\r\nnode-pre-gyp ERR! cwd /root/folder/node_modules/grpc\r\nnode-pre-gyp ERR! node -v v7.8.0\r\nnode-pre-gyp ERR! node-pre-gyp -v v0.6.39\r\nnode-pre-gyp ERR! not ok \r\nFailed to execute '/usr/local/nvm/versions/node/v7.8.0/bin/node /usr/local/nvm/versions/node/v7.8.0/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js build --fallback-to-build --library=static_library --module=/root/folder/node_modules/grpc/src/node/extension_binary/node-v51-linux-x64-glibc/grpc_node.node --module_name=grpc_node --module_path=/root/folder/node_modules/grpc/src/node/extension_binary/node-v51-linux-x64-glibc' (1)\r\n\r\nnpm ERR! argv \"/usr/local/nvm/versions/node/v7.8.0/bin/node\" \"/usr/local/nvm/versions/node/v7.8.0/bin/npm\" \"i\"\r\nnpm ERR! node v7.8.0\r\nnpm ERR! npm  v4.2.0\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\n\r\nnpm ERR! grpc@1.7.2 install: `node-pre-gyp install --fallback-to-build --library=static_library`\r\nnpm ERR! Exit status 1\r\nnpm ERR! \r\nnpm ERR! Failed at the grpc@1.7.2 install script 'node-pre-gyp install --fallback-to-build --library=static_library'.\r\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\r\nnpm ERR! If you do, this is most likely a problem with the grpc package,\r\nnpm ERR! not with npm itself.\r\nnpm ERR! Tell the author that this fails on your system:\r\nnpm ERR!     node-pre-gyp install --fallback-to-build --library=static_library\r\nnpm ERR! You can get information on how to open an issue for this project with:\r\nnpm ERR!     npm bugs grpc\r\nnpm ERR! Or if that isn't available, you can get their info via:\r\nnpm ERR!     npm owner ls grpc\r\nnpm ERR! There is likely additional logging output above.\r\n\r\nnpm ERR! Please include the following file with any support request:\r\nnpm ERR!     /root/.npm/_logs/2017-12-07T08_52_12_285Z-debug.log\r\nExited with code 1\r\n```\r\n\r\n### Anything else we should know about your project / environment?\r\nSeeing the error in CircleCI when trying to deploy to Docker, but works fine locally in similar enviroment\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13673/reactions", "total_count": 4, "+1": 4, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "torfhub": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13657", "title": "npm install grpc Failed!  Win10", "body": "npm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! grpc@1.7.2 install: `node-pre-gyp install --fallback-to-build --library=static_library`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the grpc@1.7.2 install script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13657/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "csenanda": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13656", "title": "gRPC client does not unblock when server becomes unreachable", "body": "I am using grpc v1.0.0\r\nHere is how my code goes\r\n\r\nClientContext context;\r\nstd::unique_ptrConsumer::Stub stub_ = Consumer::NewStub(channel);\r\nThreadEventReader = stub_->GetDataStream(&context, Filter); //streaming rpc call\r\n// blocked read - until stream closed\r\nwhile (ThreadEventReader->Read(&StreamedData))\r\n{\r\ncout << \"UpdateStream: \" << StreamedData.displayvalue() << endl;\r\n}\r\n\r\nIf the connection to the server drops out, the thread gets blocked in Read indefinitely.\r\nIts easy to reproduce consistently if the server is a remote node. Let me know if you need additional info.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13656/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Serapke": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13640", "title": "grpc c++ fails to compile (zlib)", "body": "I'm trying to install gRPC for C++ by building from sources. I followed the steps but when I try to run 'make', I get a compilation error.\r\n \r\n### What version of gRPC and what language are you using?\r\n \r\nTried 1.7.x\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nCompute Engine\r\nGNU/Linux\r\nUbuntu 17.10\r\n\r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\nC++\r\n \r\n### What did you do?\r\n\r\n```\r\n $ git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc\r\n $ cd grpc\r\n $ git submodule update --init\r\n $ make\r\n```\r\n \r\n### What did you expect to see?\r\n \r\nI expected the code to compile.\r\n \r\n### What did you see instead?\r\n \r\n[C]       Compiling third_party/zlib/infback.c\r\nthird_party/zlib/infback.c: In function \u2018inflateBack\u2019:\r\nthird_party/zlib/infback.c:479:25: error: this statement may fall through [-Werror=implicit-fallthrough=]\r\n             state->mode = LEN;\r\n             ~~~~~~~~~~~~^~~~~\r\nthird_party/zlib/infback.c:481:9: note: here\r\n         case LEN:\r\n         ^~~~\r\ncc1: all warnings being treated as errors\r\nMakefile:2564: recipe for target '/home/serapinas_m1/grpc/objs/opt/third_party/zlib/infback.o' failed\r\nmake: *** [/home/serapinas_m1/grpc/objs/opt/third_party/zlib/infback.o] Error 1", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13640/reactions", "total_count": 3, "+1": 3, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "matt-kwong": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13628", "title": "Performance profile broken", "body": "CC @ctiller \r\n\r\nFrom https://grpc-testing.appspot.com/view/Performance/job/gRPC_performance_profile_master/8957/console\r\n\r\n```\r\n00:10:22.527 BigQuery error in load operation: Error processing job\r\n00:10:22.527 'grpc-testing:bqjob_r31be4e626e7c318a_0000016022c76404_1': Error while reading\r\n00:10:22.527 data, error message: CSV table encountered too many errors, giving up. Rows: 1;\r\n00:10:22.527 errors: 1.\r\n00:10:22.527 Failure details:\r\n00:10:22.527 - file-00000000: Error while reading data, error message: CSV table\r\n00:10:22.527 references column position 1, but line starting at position:0\r\n00:10:22.527 contains only 1 columns.\r\n00:10:22.576 Traceback (most recent call last):\r\n00:10:22.576   File \"tools/run_tests/run_microbenchmark.py\", line 215, in <module>\r\n00:10:22.577     collectors[collect](bm_name, args)\r\n00:10:22.577   File \"tools/run_tests/run_microbenchmark.py\", line 181, in collect_summary\r\n00:10:22.577     subprocess.check_call(['bq', 'load', 'microbenchmarks.microbenchmarks', '%s.csv' % bm_name])\r\n00:10:22.577   File \"/usr/lib/python2.7/subprocess.py\", line 541, in check_call\r\n00:10:22.577     raise CalledProcessError(retcode, cmd)\r\n00:10:22.577 subprocess.CalledProcessError: Command '['bq', 'load', 'microbenchmarks.microbenchmarks', 'bm_fullstack_unary_ping_pong.csv']' returned non-zero exit status 1\r\n00:10:22.589 Build step 'Execute shell' marked build as failure\r\n```\r\n\r\nThe performance profile job has been broken for almost 2 months. It looks like one of the microbenchmarks schemas might have been changed. ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13948", "title": "Update BoringSSL submodule", "body": "Work in progress", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13861", "title": "Upgrade xcode version for testing to 8.3.3", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13760", "title": "Fix macOS PHP tests on Sierra", "body": "Testing to see if this works", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13397", "title": "Add UV iomgr_platform to core basictests suite", "body": "Core tests are far from the bottleneck of testing latency, so adding more tests should be ok. Adding libuv coverage will stop Node-breaking changes from being merged. ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11175", "title": "Add Python3.5 to portability tests", "body": "Portability testing python3.5 without `--build_only` flag worked fine locally. Built using #10113. ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/20981710", "body": "There's a fix being worked on and it should be out today or tomorrow. ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20981710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jart": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13590", "title": "Please document disadvantages to unsecurity", "body": "I noticed TensorFlow depends on `@grpc//:grpc++_unsecure` via `//external:grpc_lib` so I tried to figure out why the build label says we are insecure. It seems a design decision was made to allow the user to swap out the definitions of [init_unsecure.cc](https://github.com/grpc/grpc/blob/44c143c587c219ddae4ec3dbce003c0bd6c6c9e6/src/core/lib/surface/init_unsecure.cc) (see also [init.h](https://github.com/grpc/grpc/blob/44c143c587c219ddae4ec3dbce003c0bd6c6c9e6/src/core/lib/surface/init.h)) at build time. If the gRPC authors consider it insecure to not define those functions, maybe they should be documented.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13590/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhipengli0524": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13588", "title": "compile error INT32_MAX not declared int this scope", "body": "/usr/bin/make64 MAC=64 HAS_SYSTEM_PROTOBUF=false -s -j8 static grpc_cpp_plugin\r\nPackage libcares was not found in the pkg-config search path.\r\nPerhaps you should add the directory containing `libcares.pc'\r\nto the PKG_CONFIG_PATH environment variable\r\nNo package 'libcares' found\r\nPackage libcares was not found in the pkg-config search path.\r\nPerhaps you should add the directory containing `libcares.pc'\r\nto the PKG_CONFIG_PATH environment variable\r\nNo package 'libcares' found\r\n[MAKE]    Generating cache.mk\r\n[CXX]     Compiling src/core/lib/support/time.cc\r\n[CXX]     Compiling src/core/lib/support/time_posix.cc\r\n[CXX]     Compiling src/core/lib/iomgr/error.cc\r\n[CXX]     Compiling src/core/lib/iomgr/ev_epoll1_linux.cc\r\n[CXX]     Compiling src/core/lib/iomgr/ev_epollex_linux.cc\r\n[CXX]     Compiling src/core/lib/iomgr/ev_epollsig_linux.cc\r\n[CXX]     Compiling src/core/lib/iomgr/ev_poll_posix.cc\r\n[CXX]     Compiling src/core/lib/iomgr/ev_windows.cc\r\nIn file included from src/core/lib/support/time_posix.cc:30:0:\r\nsrc/core/lib/support/time_posix.cc: In function ???imespec timespec_from_gpr(gpr_timespec)??:\r\nsrc/core/lib/support/time_posix.cc:37:30: error: ???NT32_MAX?? was not declared in this scope\r\n     GPR_ASSERT(gts.tv_sec <= INT32_MAX && gts.tv_sec >= INT32_MIN);\r\n                              ^\r\ninclude/grpc/support/log.h:93:11: note: in definition of macro ???PR_ASSERT??\r\n     if (!(x)) {                                       \\\r\n           ^\r\nsrc/core/lib/support/time_posix.cc:37:57: error: ???NT32_MIN?? was not declared in this scope\r\n     GPR_ASSERT(gts.tv_sec <= INT32_MAX && gts.tv_sec >= INT32_MIN);\r\n                                                         ^\r\ninclude/grpc/support/log.h:93:11: note: in definition of macro ???PR_ASSERT??\r\n     if (!(x)) {                                       \\\r\n           ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/support/time_posix.o] Error 1\r\nmake64[3]: *** Waiting for unfinished jobs....\r\nsrc/core/lib/support/time.cc: In function ???nt gpr_time_cmp(gpr_timespec, gpr_timespec)??:\r\nsrc/core/lib/support/time.cc:30:31: error: ???NT64_MAX?? was not declared in this scope\r\n   if (cmp == 0 && a.tv_sec != INT64_MAX && a.tv_sec != INT64_MIN) {\r\n                               ^\r\nsrc/core/lib/support/time.cc:30:56: error: ???NT64_MIN?? was not declared in this scope\r\n   if (cmp == 0 && a.tv_sec != INT64_MAX && a.tv_sec != INT64_MIN) {\r\n                                                        ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_inf_future(gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:54:16: error: ???NT64_MAX?? was not declared in this scope\r\n   out.tv_sec = INT64_MAX;\r\n                ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_inf_past(gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:62:16: error: ???NT64_MIN?? was not declared in this scope\r\n   out.tv_sec = INT64_MIN;\r\n                ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec to_seconds_from_sub_second_time(int64_t, int64_t, gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:72:24: error: ???NT64_MAX?? was not declared in this scope\r\n   if (time_in_units == INT64_MAX) {\r\n                        ^\r\nsrc/core/lib/support/time.cc:74:31: error: ???NT64_MIN?? was not declared in this scope\r\n   } else if (time_in_units == INT64_MIN) {\r\n                               ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec to_seconds_from_above_second_time(int64_t, int64_t, gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:95:24: error: ???NT64_MAX?? was not declared in this scope\r\n   if (time_in_units >= INT64_MAX / secs_per_unit) {\r\n                        ^\r\nsrc/core/lib/support/time.cc:97:31: error: ???NT64_MIN?? was not declared in this scope\r\n   } else if (time_in_units <= INT64_MIN / secs_per_unit) {\r\n                               ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_time_add(gpr_timespec, gpr_timespec)??:\r\nsrc/core/lib/support/time.cc:141:19: error: ???NT64_MAX?? was not declared in this scope\r\n   if (a.tv_sec == INT64_MAX || a.tv_sec == INT64_MIN) {\r\n                   ^\r\nsrc/core/lib/support/time.cc:141:44: error: ???NT64_MIN?? was not declared in this scope\r\n   if (a.tv_sec == INT64_MAX || a.tv_sec == INT64_MIN) {\r\n                                            ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_time_sub(gpr_timespec, gpr_timespec)??:\r\nsrc/core/lib/support/time.cc:174:19: error: ???NT64_MAX?? was not declared in this scope\r\n   if (a.tv_sec == INT64_MAX || a.tv_sec == INT64_MIN) {\r\n                   ^\r\nsrc/core/lib/support/time.cc:174:44: error: ???NT64_MIN?? was not declared in this scope\r\n   if (a.tv_sec == INT64_MAX || a.tv_sec == INT64_MIN) {\r\n                                            ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_convert_clock_type(gpr_timespec, gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:232:19: error: ???NT64_MAX?? was not declared in this scope\r\n   if (t.tv_sec == INT64_MAX || t.tv_sec == INT64_MIN) {\r\n                   ^\r\nsrc/core/lib/support/time.cc:232:44: error: ???NT64_MIN?? was not declared in this scope\r\n   if (t.tv_sec == INT64_MAX || t.tv_sec == INT64_MIN) {\r\n                                            ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/support/time.o] Error 1\r\nsrc/core/lib/iomgr/error.cc: In function ???oid unref_errs(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:150:18: error: ???INT8_MAX?? was not declared in this scope\r\n   while (slot != UINT8_MAX) {\r\n                  ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid unref_strs(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:168:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nIn file included from src/core/lib/iomgr/error.cc:29:0:\r\nsrc/core/lib/iomgr/error.cc: In function ???int8_t get_placement(grpc_error**, size_t)??:\r\nsrc/core/lib/iomgr/error.cc:208:26: error: ???INT8_MAX?? was not declared in this scope\r\n         (uint8_t)GPR_MIN(UINT8_MAX - 1, (3 * (*err)->arena_capacity / 2));\r\n                          ^\r\ninclude/grpc/support/useful.h:24:25: note: in definition of macro ???PR_MIN??\r\n #define GPR_MIN(a, b) ((a) < (b) ? (a) : (b))\r\n                         ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid internal_set_int(grpc_error**, grpc_error_ints, intptr_t)??:\r\nsrc/core/lib/iomgr/error.cc:233:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot == UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid internal_set_str(grpc_error**, grpc_error_strs, grpc_slice)??:\r\nsrc/core/lib/iomgr/error.cc:248:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot == UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid internal_set_time(grpc_error**, grpc_error_times, gpr_timespec)??:\r\nsrc/core/lib/iomgr/error.cc:268:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot == UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid internal_add_error(grpc_error**, grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:283:42: error: ???INT8_MAX?? was not declared in this scope\r\n   grpc_linked_error new_last = {new_err, UINT8_MAX};\r\n                                          ^\r\nsrc/core/lib/iomgr/error.cc: In function ???rpc_error* grpc_error_create(const char*, int, grpc_slice, grpc_error**, size_t)??:\r\nsrc/core/lib/iomgr/error.cc:338:20: error: ???INT8_MAX?? was not declared in this scope\r\n   err->first_err = UINT8_MAX;\r\n                    ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid ref_strs(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:369:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid ref_errs(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:377:18: error: ???INT8_MAX?? was not declared in this scope\r\n   while (slot != UINT8_MAX) {\r\n                  ^\r\nsrc/core/lib/iomgr/error.cc: In function ???ool grpc_error_get_int(grpc_error*, grpc_error_ints, intptr_t*)??:\r\nsrc/core/lib/iomgr/error.cc:469:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot != UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???ool grpc_error_get_str(grpc_error*, grpc_error_strs, grpc_slice*)??:\r\nsrc/core/lib/iomgr/error.cc:501:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot != UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid collect_ints_kvs(grpc_error*, kv_pairs*)??:\r\nsrc/core/lib/iomgr/error.cc:608:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid collect_strs_kvs(grpc_error*, kv_pairs*)??:\r\nsrc/core/lib/iomgr/error.cc:632:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid collect_times_kvs(grpc_error*, kv_pairs*)??:\r\nsrc/core/lib/iomgr/error.cc:667:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid add_errs(grpc_error*, char**, size_t*, size_t*)??:\r\nsrc/core/lib/iomgr/error.cc:677:18: error: ???INT8_MAX?? was not declared in this scope\r\n   while (slot != UINT8_MAX) {\r\n                  ^\r\nsrc/core/lib/iomgr/error.cc: In function ???onst char* grpc_error_string(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:746:25: error: ???INT8_MAX?? was not declared in this scope\r\n   if (err->first_err != UINT8_MAX) {\r\n                         ^\r\nsrc/core/lib/iomgr/error.cc: In function ???ool grpc_error_get_str(grpc_error*, grpc_error_strs, grpc_slice*)??:\r\nsrc/core/lib/iomgr/error.cc:507:1: error: control reaches end of non-void function [-Werror=return-type]\r\n }\r\n ^\r\ncc1plus: all warnings being treated as errors\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/error.o] Error 1\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n                 from ./src/core/lib/debug/trace.h:22,\r\n                 from ./src/core/lib/iomgr/ev_posix.h:24,\r\n                 from ./src/core/lib/iomgr/ev_epoll1_linux.h:22,\r\n                 from src/core/lib/iomgr/ev_epoll1_linux.cc:25:\r\nsrc/core/lib/iomgr/ev_epoll1_linux.cc: In function ???nt poll_deadline_to_millis_timeout(grpc_exec_ctx*, grpc_millis)??:\r\nsrc/core/lib/iomgr/ev_epoll1_linux.cc:570:17: error: ???NTPTR_MAX?? was not declared in this scope\r\n   if (millis == GRPC_MILLIS_INF_FUTURE) return -1;\r\n                 ^\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n                 from ./src/core/lib/debug/trace.h:22,\r\n                 from ./src/core/lib/iomgr/ev_posix.h:24,\r\n                 from ./src/core/lib/iomgr/ev_poll_posix.h:22,\r\n                 from src/core/lib/iomgr/ev_poll_posix.cc:23:\r\nsrc/core/lib/iomgr/ev_poll_posix.cc: In function ???nt poll_deadline_to_millis_timeout(grpc_exec_ctx*, grpc_millis)??:\r\nsrc/core/lib/iomgr/ev_poll_posix.cc:1127:19: error: ???NTPTR_MAX?? was not declared in this scope\r\n   if (deadline == GRPC_MILLIS_INF_FUTURE) return -1;\r\n                   ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/ev_epoll1_linux.o] Error 1\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/ev_poll_posix.o] Error 1\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n                 from ./src/core/lib/debug/trace.h:22,\r\n                 from ./src/core/lib/iomgr/ev_posix.h:24,\r\n                 from ./src/core/lib/iomgr/ev_epollex_linux.h:22,\r\n                 from src/core/lib/iomgr/ev_epollex_linux.cc:26:\r\nsrc/core/lib/iomgr/ev_epollex_linux.cc: In function ???nt poll_deadline_to_millis_timeout(grpc_exec_ctx*, grpc_millis)??:\r\nsrc/core/lib/iomgr/ev_epollex_linux.cc:694:17: error: ???NTPTR_MAX?? was not declared in this scope\r\n   if (millis == GRPC_MILLIS_INF_FUTURE) return -1;\r\n                 ^\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n                 from ./src/core/lib/debug/trace.h:22,\r\n                 from ./src/core/lib/iomgr/ev_posix.h:24,\r\n                 from ./src/core/lib/iomgr/ev_epollsig_linux.h:22,\r\n                 from src/core/lib/iomgr/ev_epollsig_linux.cc:27:\r\nsrc/core/lib/iomgr/ev_epollsig_linux.cc: In function ???nt poll_deadline_to_millis_timeout(grpc_exec_ctx*, grpc_millis)??:\r\nsrc/core/lib/iomgr/ev_epollsig_linux.cc:1101:17: error: ???NTPTR_MAX?? was not declared in this scope\r\n   if (millis == GRPC_MILLIS_INF_FUTURE) return -1;\r\n                 ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/ev_epollex_linux.o] Error 1\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/ev_epollsig_linux.o] Error 1\r\nmake64[2]: *** [third_party/grpc/src/extern_grpc-stamp/extern_grpc-build] Error 2\r\nmake64[1]: *** [CMakeFiles/extern_grpc.dir/all] Error 2\r\nmake64: *** [all] Error 2\r\n(paddle.c_api) [lizhipeng@cp01-lizhipeng02-linux build]$ make\r\n/usr/bin/make64 MAC=64\r\n[  1%] Built target zlib\r\n[  2%] Built target extern_protobuf\r\n[  2%] Performing build step for 'extern_grpc'\r\n/usr/bin/make64 MAC=64 HAS_SYSTEM_PROTOBUF=false -s -j8 static grpc_cpp_plugin\r\nPackage libcares was not found in the pkg-config search path.\r\nPerhaps you should add the directory containing `libcares.pc'\r\nto the PKG_CONFIG_PATH environment variable\r\nNo package 'libcares' found\r\nPackage libcares was not found in the pkg-config search path.\r\nPerhaps you should add the directory containing `libcares.pc'\r\nto the PKG_CONFIG_PATH environment variable\r\nNo package 'libcares' found\r\n[MAKE]    Generating cache.mk\r\n[CXX]     Compiling src/core/lib/support/time.cc\r\n[CXX]     Compiling src/core/lib/support/time_posix.cc\r\n[CXX]     Compiling src/core/lib/iomgr/error.cc\r\n[CXX]     Compiling src/core/lib/iomgr/ev_epoll1_linux.cc\r\n[CXX]     Compiling src/core/lib/iomgr/ev_epollex_linux.cc\r\n[CXX]     Compiling src/core/lib/iomgr/ev_epollsig_linux.cc\r\n[CXX]     Compiling src/core/lib/iomgr/ev_poll_posix.cc\r\n[CXX]     Compiling src/core/lib/iomgr/exec_ctx.cc\r\nIn file included from src/core/lib/support/time_posix.cc:29:0:\r\nsrc/core/lib/support/time_posix.cc: In function ???imespec timespec_from_gpr(gpr_timespec)??:\r\nsrc/core/lib/support/time_posix.cc:36:30: error: ???NT32_MAX?? was not declared in this scope\r\n     GPR_ASSERT(gts.tv_sec <= INT32_MAX && gts.tv_sec >= INT32_MIN);\r\n                              ^\r\ninclude/grpc/support/log.h:93:11: note: in definition of macro ???PR_ASSERT??\r\n     if (!(x)) {                                       \\\r\n           ^\r\nsrc/core/lib/support/time_posix.cc:36:57: error: ???NT32_MIN?? was not declared in this scope\r\n     GPR_ASSERT(gts.tv_sec <= INT32_MAX && gts.tv_sec >= INT32_MIN);\r\n                                                         ^\r\ninclude/grpc/support/log.h:93:11: note: in definition of macro ???PR_ASSERT??\r\n     if (!(x)) {                                       \\\r\n           ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/support/time_posix.o] Error 1\r\nmake64[3]: *** Waiting for unfinished jobs....\r\nsrc/core/lib/support/time.cc: In function ???nt gpr_time_cmp(gpr_timespec, gpr_timespec)??:\r\nsrc/core/lib/support/time.cc:30:31: error: ???NT64_MAX?? was not declared in this scope\r\n   if (cmp == 0 && a.tv_sec != INT64_MAX && a.tv_sec != INT64_MIN) {\r\n                               ^\r\nsrc/core/lib/support/time.cc:30:56: error: ???NT64_MIN?? was not declared in this scope\r\n   if (cmp == 0 && a.tv_sec != INT64_MAX && a.tv_sec != INT64_MIN) {\r\n                                                        ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_inf_future(gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:54:16: error: ???NT64_MAX?? was not declared in this scope\r\n   out.tv_sec = INT64_MAX;\r\n                ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_inf_past(gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:62:16: error: ???NT64_MIN?? was not declared in this scope\r\n   out.tv_sec = INT64_MIN;\r\n                ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec to_seconds_from_sub_second_time(int64_t, int64_t, gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:72:24: error: ???NT64_MAX?? was not declared in this scope\r\n   if (time_in_units == INT64_MAX) {\r\n                        ^\r\nsrc/core/lib/support/time.cc:74:31: error: ???NT64_MIN?? was not declared in this scope\r\n   } else if (time_in_units == INT64_MIN) {\r\n                               ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec to_seconds_from_above_second_time(int64_t, int64_t, gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:95:24: error: ???NT64_MAX?? was not declared in this scope\r\n   if (time_in_units >= INT64_MAX / secs_per_unit) {\r\n                        ^\r\nsrc/core/lib/support/time.cc:97:31: error: ???NT64_MIN?? was not declared in this scope\r\n   } else if (time_in_units <= INT64_MIN / secs_per_unit) {\r\n                               ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_time_add(gpr_timespec, gpr_timespec)??:\r\nsrc/core/lib/support/time.cc:141:19: error: ???NT64_MAX?? was not declared in this scope\r\n   if (a.tv_sec == INT64_MAX || a.tv_sec == INT64_MIN) {\r\n                   ^\r\nsrc/core/lib/support/time.cc:141:44: error: ???NT64_MIN?? was not declared in this scope\r\n   if (a.tv_sec == INT64_MAX || a.tv_sec == INT64_MIN) {\r\n                                            ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_time_sub(gpr_timespec, gpr_timespec)??:\r\nsrc/core/lib/support/time.cc:174:19: error: ???NT64_MAX?? was not declared in this scope\r\n   if (a.tv_sec == INT64_MAX || a.tv_sec == INT64_MIN) {\r\n                   ^\r\nsrc/core/lib/support/time.cc:174:44: error: ???NT64_MIN?? was not declared in this scope\r\n   if (a.tv_sec == INT64_MAX || a.tv_sec == INT64_MIN) {\r\n                                            ^\r\nsrc/core/lib/support/time.cc: In function ???pr_timespec gpr_convert_clock_type(gpr_timespec, gpr_clock_type)??:\r\nsrc/core/lib/support/time.cc:232:19: error: ???NT64_MAX?? was not declared in this scope\r\n   if (t.tv_sec == INT64_MAX || t.tv_sec == INT64_MIN) {\r\n                   ^\r\nsrc/core/lib/support/time.cc:232:44: error: ???NT64_MIN?? was not declared in this scope\r\n   if (t.tv_sec == INT64_MAX || t.tv_sec == INT64_MIN) {\r\n                                            ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/support/time.o] Error 1\r\nsrc/core/lib/iomgr/error.cc: In function ???oid unref_errs(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:150:18: error: ???INT8_MAX?? was not declared in this scope\r\n   while (slot != UINT8_MAX) {\r\n                  ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid unref_strs(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:168:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nIn file included from src/core/lib/iomgr/error.cc:29:0:\r\nsrc/core/lib/iomgr/error.cc: In function ???int8_t get_placement(grpc_error**, size_t)??:\r\nsrc/core/lib/iomgr/error.cc:208:26: error: ???INT8_MAX?? was not declared in this scope\r\n         (uint8_t)GPR_MIN(UINT8_MAX - 1, (3 * (*err)->arena_capacity / 2));\r\n                          ^\r\ninclude/grpc/support/useful.h:24:25: note: in definition of macro ???PR_MIN??\r\n #define GPR_MIN(a, b) ((a) < (b) ? (a) : (b))\r\n                         ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid internal_set_int(grpc_error**, grpc_error_ints, intptr_t)??:\r\nsrc/core/lib/iomgr/error.cc:233:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot == UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid internal_set_str(grpc_error**, grpc_error_strs, grpc_slice)??:\r\nsrc/core/lib/iomgr/error.cc:248:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot == UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid internal_set_time(grpc_error**, grpc_error_times, gpr_timespec)??:\r\nsrc/core/lib/iomgr/error.cc:268:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot == UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid internal_add_error(grpc_error**, grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:283:42: error: ???INT8_MAX?? was not declared in this scope\r\n   grpc_linked_error new_last = {new_err, UINT8_MAX};\r\n                                          ^\r\nsrc/core/lib/iomgr/error.cc: In function ???rpc_error* grpc_error_create(const char*, int, grpc_slice, grpc_error**, size_t)??:\r\nsrc/core/lib/iomgr/error.cc:338:20: error: ???INT8_MAX?? was not declared in this scope\r\n   err->first_err = UINT8_MAX;\r\n                    ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid ref_strs(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:369:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid ref_errs(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:377:18: error: ???INT8_MAX?? was not declared in this scope\r\n   while (slot != UINT8_MAX) {\r\n                  ^\r\nsrc/core/lib/iomgr/error.cc: In function ???ool grpc_error_get_int(grpc_error*, grpc_error_ints, intptr_t*)??:\r\nsrc/core/lib/iomgr/error.cc:469:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot != UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???ool grpc_error_get_str(grpc_error*, grpc_error_strs, grpc_slice*)??:\r\nsrc/core/lib/iomgr/error.cc:501:15: error: ???INT8_MAX?? was not declared in this scope\r\n   if (slot != UINT8_MAX) {\r\n               ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid collect_ints_kvs(grpc_error*, kv_pairs*)??:\r\nsrc/core/lib/iomgr/error.cc:608:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid collect_strs_kvs(grpc_error*, kv_pairs*)??:\r\nsrc/core/lib/iomgr/error.cc:632:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid collect_times_kvs(grpc_error*, kv_pairs*)??:\r\nsrc/core/lib/iomgr/error.cc:667:17: error: ???INT8_MAX?? was not declared in this scope\r\n     if (slot != UINT8_MAX) {\r\n                 ^\r\nsrc/core/lib/iomgr/error.cc: In function ???oid add_errs(grpc_error*, char**, size_t*, size_t*)??:\r\nsrc/core/lib/iomgr/error.cc:677:18: error: ???INT8_MAX?? was not declared in this scope\r\n   while (slot != UINT8_MAX) {\r\n                  ^\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n                 from ./src/core/lib/debug/trace.h:22,\r\n                 from ./src/core/lib/iomgr/ev_posix.h:24,\r\n                 from ./src/core/lib/iomgr/ev_poll_posix.h:22,\r\n                 from src/core/lib/iomgr/ev_poll_posix.cc:23:\r\nsrc/core/lib/iomgr/ev_poll_posix.cc: In function ???nt poll_deadline_to_millis_timeout(grpc_exec_ctx*, grpc_millis)??:\r\nsrc/core/lib/iomgr/ev_poll_posix.cc:1127:19: error: ???NTPTR_MAX?? was not declared in this scope\r\n   if (deadline == GRPC_MILLIS_INF_FUTURE) return -1;\r\n                   ^\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n                 from ./src/core/lib/iomgr/exec_ctx.h:22,\r\n                 from src/core/lib/iomgr/exec_ctx.cc:19:\r\nsrc/core/lib/iomgr/exec_ctx.cc: In function ???pr_atm timespec_to_atm_round_down(gpr_timespec)??:\r\nsrc/core/lib/iomgr/exec_ctx.cc:120:11: error: ???NTPTR_MAX?? was not declared in this scope\r\n   if (x > GPR_ATM_MAX) return GPR_ATM_MAX;\r\n           ^\r\nsrc/core/lib/iomgr/exec_ctx.cc: In function ???pr_atm timespec_to_atm_round_up(gpr_timespec)??:\r\nsrc/core/lib/iomgr/exec_ctx.cc:130:11: error: ???NTPTR_MAX?? was not declared in this scope\r\n   if (x > GPR_ATM_MAX) return GPR_ATM_MAX;\r\n           ^\r\nsrc/core/lib/iomgr/exec_ctx.cc: In function ???pr_timespec grpc_millis_to_timespec(grpc_millis, gpr_clock_type)??:\r\nsrc/core/lib/iomgr/exec_ctx.cc:150:17: error: ???NTPTR_MAX?? was not declared in this scope\r\n   if (millis == GRPC_MILLIS_INF_FUTURE) {\r\n                 ^\r\nsrc/core/lib/iomgr/exec_ctx.cc:153:17: error: ???NTPTR_MIN?? was not declared in this scope\r\n   if (millis == GRPC_MILLIS_INF_PAST) {\r\n                 ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/exec_ctx.o] Error 1\r\nsrc/core/lib/iomgr/error.cc: In function ???onst char* grpc_error_string(grpc_error*)??:\r\nsrc/core/lib/iomgr/error.cc:746:25: error: ???INT8_MAX?? was not declared in this scope\r\n   if (err->first_err != UINT8_MAX) {\r\n                         ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/ev_poll_posix.o] Error 1\r\nsrc/core/lib/iomgr/error.cc: In function ???ool grpc_error_get_str(grpc_error*, grpc_error_strs, grpc_slice*)??:\r\nsrc/core/lib/iomgr/error.cc:507:1: error: control reaches end of non-void function [-Werror=return-type]\r\n }\r\n ^\r\ncc1plus: all warnings being treated as errors\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/error.o] Error 1\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n   if (err->first_err != UINT8_MAX) {\r\n                         ^\r\nsrc/core/lib/iomgr/error.cc: In function \u2018bool grpc_error_get_str(grpc_error*, grpc_error_strs, grpc_slice*)\u2019:\r\nsrc/core/lib/iomgr/error.cc:507:1: error: control reaches end of non-void function [-Werror=return-type]\r\n }\r\n ^\r\ncc1plus: all warnings being treated as errors\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/error.o] Error 1\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/ev_epollex_linux.o] Error 1\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n                 from ./src/core/lib/debug/trace.h:22,\r\n                 from ./src/core/lib/iomgr/ev_posix.h:24,\r\n                 from ./src/core/lib/iomgr/ev_epollsig_linux.h:22,\r\n                 from src/core/lib/iomgr/ev_epollsig_linux.cc:27:\r\nsrc/core/lib/iomgr/ev_epollsig_linux.cc: In function \u2018int poll_deadline_to_millis_timeout(grpc_exec_ctx*, grpc_millis)\u2019:\r\nsrc/core/lib/iomgr/ev_epollsig_linux.cc:1101:17: error: \u2018INTPTR_MAX\u2019 was not declared in this scope\r\n   if (millis == GRPC_MILLIS_INF_FUTURE) return -1;\r\n                 ^\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n                 from ./src/core/lib/debug/trace.h:22,\r\n                 from ./src/core/lib/iomgr/ev_posix.h:24,\r\n                 from ./src/core/lib/iomgr/ev_poll_posix.h:22,\r\n                 from src/core/lib/iomgr/ev_poll_posix.cc:23:\r\nsrc/core/lib/iomgr/ev_poll_posix.cc: In function \u2018int poll_deadline_to_millis_timeout(grpc_exec_ctx*, grpc_millis)\u2019:\r\nsrc/core/lib/iomgr/ev_poll_posix.cc:1127:19: error: \u2018INTPTR_MAX\u2019 was not declared in this scope\r\n   if (deadline == GRPC_MILLIS_INF_FUTURE) return -1;\r\n                   ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/ev_epollsig_linux.o] Error 1\r\nIn file included from include/grpc/impl/codegen/atm.h:73:0,\r\n                 from include/grpc/support/atm.h:22,\r\n                 from ./src/core/lib/debug/trace.h:22,\r\n                 from ./src/core/lib/iomgr/ev_posix.h:24,\r\n                 from ./src/core/lib/iomgr/ev_epoll1_linux.h:22,\r\n                 from src/core/lib/iomgr/ev_epoll1_linux.cc:25:\r\nsrc/core/lib/iomgr/ev_epoll1_linux.cc: In function \u2018int poll_deadline_to_millis_timeout(grpc_exec_ctx*, grpc_millis)\u2019:\r\nsrc/core/lib/iomgr/ev_epoll1_linux.cc:570:17: error: \u2018INTPTR_MAX\u2019 was not declared in this scope\r\n   if (millis == GRPC_MILLIS_INF_FUTURE) return -1;\r\n                 ^\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/ev_poll_posix.o] Error 1\r\nmake64[3]: *** [/home/lizhipeng/tools/paddle.c_api/Paddle/build/third_party/grpc/src/extern_grpc/objs/opt/src/core/lib/iomgr/ev_epoll1_linux.o] Error 1\r\nmake64[2]: *** [third_party/grpc/src/extern_grpc-stamp/extern_grpc-build] Error 2\r\nmake64[1]: *** [CMakeFiles/extern_grpc.dir/all] Error 2\r\nmake64: *** [all] Error 2\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ndandanov": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13586", "title": "Official Wireshark gRPC dissector ", "body": "Dear All,\r\n\r\n*This is a repost of a comment in a protobuf issue located here, as requested by @xfxyjwf:\r\nhttps://github.com/google/protobuf/issues/3303*\r\n\r\nI found out, that in the official Wireshark repo on GitHub, there is a gRPC dissector - namely the *wireshark/epan/dissectors/packet-grpc.c* located here: https://github.com/wireshark/wireshark/blob/master/epan/dissectors/packet-grpc.c\r\n\r\n**In this comment, I will try to summarize how I got it to work with actual gRPC packets.**\r\nThe following two videos show how I tried to repeat the same steps under Ubuntu 16.04, however with a slightly newer development version of Wireshark. The end result was not as functional as described below, but I think this would be a nice introduction on the topic.\r\n\r\n**gRPC Wireshark dissector - Part 1: https://youtu.be/LoGArC58Row**\r\n**gRPC Wireshark dissector - Part 2: https://youtu.be/Wj9VoJQf-qc**\r\n\r\n\r\n\r\nIt seems that the gRPC dissector was officially added in the end of September this year:\r\nhttps://github.com/wireshark/wireshark/commits/master/epan/dissectors/packet-grpc.c\r\n\r\n*Note that the original Wireshark repo is located on their website. Please check https://www.wireshark.org/develop.html.*\r\n\r\n\r\nI opted to see how this dissector is working and cloned the Wireshark repo:\r\n```\r\ngit clone https://code.wireshark.org/review/wireshark\r\n```\r\n\r\nMy system is a 64-bit Arch Linux, so I built Wireshark with the following commands:\r\n\r\n```\r\n./autogen.sh \r\n./configure \r\nmake\r\n```\r\n(using this as a reference: https://www.wireshark.org/docs/wsdg_html_chunked/ChSrcBuildFirstTime.html)\r\n\r\nIt took around 20-30 minutes to build. The Wireshark version is:\r\n![screenshot_2017-11-30_17-09-00](https://user-images.githubusercontent.com/17270267/33437663-5337f27c-d5f1-11e7-9197-6869b0e6e1b3.png)\r\n\r\nI then ran it as `root` (in order to be able to capture any traffic) and started capturing the loopback interface.\r\n\r\nI cloned, built and started the official gRPC `hello world` server and client from the grpc-java repo:\r\nhttps://github.com/grpc/grpc-java/tree/master/examples\r\n\r\nThe console outputs are, as expected:\r\n![screenshot_2017-11-30_16-38-16](https://user-images.githubusercontent.com/17270267/33437171-c5d39982-d5ef-11e7-8edc-d77c72b72e8f.png)\r\n\r\nThe captured packets in Wireshark are:\r\n![screenshot_2017-11-30_16-39-16](https://user-images.githubusercontent.com/17270267/33437212-e490d52e-d5ef-11e7-9df5-ef71e814774d.png)\r\n\r\nYou can download the .pcapng file from my repo:\r\nhttps://github.com/ndandanov/wireshark-grpc/blob/master/grpc-hello-world.pcapng\r\n\r\nHere you can see that they are decoded as TCP packets.\r\n\r\nI clicked with the right mouse button on a packet and selected `Decode As...`:\r\n![screenshot_2017-11-30_16-39-39-1](https://user-images.githubusercontent.com/17270267/33437237-fc74da3c-d5ef-11e7-800a-c73dcdf9dc1b.png)\r\n\r\nAnd configured the packets as HTTP2:\r\n![screenshot_2017-11-30_16-40-24](https://user-images.githubusercontent.com/17270267/33437305-2dcb4ada-d5f0-11e7-9493-74ab70197933.png)\r\n\r\nAnd the packets are now correctly recognized as either HTTP2 or gRPC:\r\n![screenshot_2017-11-30_16-40-37](https://user-images.githubusercontent.com/17270267/33437328-40904cb0-d5f0-11e7-8534-e712ef73ac73.png)\r\n\r\nLet's take a look at the packet which carries the actual gRPC `hello world` request: \r\n![screenshot_2017-11-30_16-45-49](https://user-images.githubusercontent.com/17270267/33437346-50059826-d5f0-11e7-981f-9b7b62757d8c.png)\r\n\r\nI had also opened the `.proto` file (located here https://github.com/grpc/grpc-java/blob/master/examples/src/main/proto/helloworld.proto) for reference.\r\n\r\nThe actual value of field 1 from the `message HelloRequest`, which is `string name`, is \"world\" (or 77 6f 72 6c 64 in hex):\r\n\r\n![screenshot_2017-11-30_16-49-54](https://user-images.githubusercontent.com/17270267/33437430-8ff506d8-d5f0-11e7-8c1c-e5853acafa0d.png)\r\n\r\nAnd we can verify this:\r\n![screenshot_2017-11-30_16-49-39](https://user-images.githubusercontent.com/17270267/33437477-c1a6f48e-d5f0-11e7-9582-6953704f26ab.png)\r\n\r\nThe gRPC `hello world` response was of course \"Hello world\":\r\n![screenshot_2017-11-30_16-50-18](https://user-images.githubusercontent.com/17270267/33437502-d0d1bbf6-d5f0-11e7-94f4-f6bdf06fb4cf.png)\r\n\r\n\r\nThe Wireshark interpretation of fields and their values could definitely be extended. I did not come across any option to specify and input `.proto` file to extract the field names and correct value types. This leads to some `double`s represented as just `uint64` in Wireshark.\r\n\r\nNevertheless, I think this is a significant improvement in the right direction.\r\n\r\nPlease share your opinion on this dissector. Has anyone else tried it and published some results/improvements?\r\nIs there any public information regarding the release of this dissector?\r\nKind regards!", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "henry8366": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13585", "title": "grpc_csharp_ext.x86.dll crash some times.", "body": "\r\n### What version of gRPC and what language are you using?\r\n gRPC 1.6 C# for client,nodjs for server. Both use grpc 1.6\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nClient: Windows7 x64 ,Windows10 x64\r\nServer:Center os7\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n VS2015 .net4.5\r\n \r\n### What did you do?\r\nIf possible, provide a recipe for reproducing the error. Try being specific and include code snippets if helpful.\r\n Just Connected the Nodejs GRPC server,and do some ping operation by Ping method what difined via grpc\uff0creceive the push data form nodejs grpc server\u3002\r\n### What did you expect to see?\r\n do not crash my c# App.\r\n \r\n### What did you see instead?\r\n Error module name: grpc_csharp_ext.x86.dll, version: 0.0.0.0, timestamp: 0x59bbb7e1\r\nException code: 0xc0000409\r\nError offset: 0x000cdc8f\r\nand this exception can not catch in C# program.\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n  Error module name: grpc_csharp_ext.x86.dll, version: 0.0.0.0, timestamp: 0x59bbb7e1\r\nException code: 0xc0000409\r\nError offset: 0x000cdc8f\r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rlubke": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13569", "title": "Need more control on when the client side of the stream is closed", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\n \r\nCreate new issues for bugs and feature requests. An issue needs to be actionable. General gRPC discussions and usage questions belong to:\r\n- [grpc.io mailing list](https://groups.google.com/forum/#!forum/grpc-io)\r\n- [StackOverflow, with `grpc` tag](http://stackoverflow.com/questions/tagged/grpc)\r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\n \r\nPython / gRPC 1.7.1\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n\r\nMacOS High Sierra\r\n \r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n \r\nPython 3.6\r\n \r\n### What did you do?\r\nIf possible, provide a recipe for reproducing the error. Try being specific and include code snippets if helpful.\r\n\r\nCurrently, on the client side, after the generator completes it sends a close for the client's send channel. This is perfectly legal, however, it seems to cause some issues with with a gRPC server in Java, or perhaps it's how it's been implemented in this particular case. In this case, the server assumes, when it receives a half close from the client, that the client is done and no longer interested in receiving events from the server.\r\n\r\nThere seems to be no issues using go or node clients with this particular server.\r\n \r\n### What did you expect to see?\r\n \r\n \r\n### What did you see instead?\r\n \r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tmatsuo": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13556", "title": "PHP: ext-grpc should report its version on phpinfo", "body": "`phpinfo()` shows all the information about your PHP runtime, including the extension options and versions.\r\nNow grpc extension only reports that it's enabled. I think it should report its version too.\r\n\r\nFYI @chingor13 added it for the opencensus extension\r\nhttps://github.com/census-instrumentation/opencensus-php/pull/42/files\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sKolar42": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13553", "title": "ServerBuilder.SetMaxReceiveMessageSize(-1) doesn't set receive size to unlimited", "body": "On CentOS 7, gRPC/C++ 1.6.6, compiled with gcc 4.8.5\r\n\r\nI attempted to use ServerBuilder to construct a server with a max receive size of unlimited, like so:\r\n```\r\ngrpc::ServerBuilder builder;\r\nbuilder.SetMaxReceiveMessageSize(-1);\r\nserver = builder.BuildAndStart();\r\n```\r\n\r\nThen sent a request to it, and got the following response:\r\n> Received message larger than max (633346913 vs. 4194304)\r\n\r\nDigging through the gRPC code, I see that the default receive size is set to 4MiB: \r\n`#define GRPC_DEFAULT_MAX_RECV_MESSAGE_LENGTH (4 * 1024 * 1024)`\r\n\r\nFurther, ServerBuilder won't set its max receive size if said value is -1:\r\n```\r\n if (max_receive_message_size_ >= 0) {\r\n    args.SetInt(GRPC_ARG_MAX_RECEIVE_MESSAGE_LENGTH, max_receive_message_size_);\r\n  }\r\n```\r\nThus, message_size_filter won't set the receive limit:\r\n\r\n```\r\n    if (strcmp(channel_args->args[i].key,\r\n               GRPC_ARG_MAX_RECEIVE_MESSAGE_LENGTH) == 0) {\r\n      const grpc_integer_options options = {lim.max_recv_size, -1, INT_MAX};\r\n      lim.max_recv_size =\r\n          grpc_channel_arg_get_integer(&channel_args->args[i], options);\r\n    }\r\n```\r\n\r\nWhich ultimately results in the above error.  When I set the max message size to -1, I expect it to be unlimited, not some different default value.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "A-Mendi": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13537", "title": "Make fails with #error \"system call number for getrandom is not the expected value\"", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes\r\n \r\nCreate new issues for bugs and feature requests. An issue needs to be actionable. General gRPC discussions and usage questions belong to:\r\n- [grpc.io mailing list](https://groups.google.com/forum/#!forum/grpc-io)\r\n- [StackOverflow, with `grpc` tag](http://stackoverflow.com/questions/tagged/grpc)\r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\n 1.6 (current), C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Linux 4.4.0-0 SMP Debian 4.4.16-1\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n  g++ --version\r\ng++ (Debian 4.9.2-10) 4.9.2\r\n\r\n \r\n### What did you do?\r\nIf possible, provide a recipe for reproducing the error. Try being specific and include code snippets if helpful.\r\nFollowing the installation instructions, the \"Make\" command fails with error\r\n \r\n### What did you expect to see?\r\n Make successful\r\n \r\n### What did you see instead?\r\nthird_party/boringssl/crypto/rand/urandom.c:62:2: error: #error \"system call number for getrandom is not the expected value\"\r\n #error \"system call number for getrandom is not the expected value\"\r\n  ^\r\nIn file included from /usr/include/x86_64-linux-gnu/sys/syscall.h:31:0,\r\n                 from third_party/boringssl/crypto/rand/urandom.c:32:\r\nthird_party/boringssl/crypto/rand/urandom.c: In function \u2018init_once\u2019:\r\nthird_party/boringssl/crypto/rand/urandom.c:128:15: error: \u2018__NR_getrandom\u2019 undeclared (first use in this function)\r\n       syscall(SYS_getrandom, &dummy, sizeof(dummy), GRND_NONBLOCK);\r\n               ^\r\nthird_party/boringssl/crypto/rand/urandom.c:128:15: note: each undeclared identifier is reported only once for each function it appears in\r\nthird_party/boringssl/crypto/rand/urandom.c: In function \u2018fill_with_entropy\u2019:\r\nthird_party/boringssl/crypto/rand/urandom.c:258:21: error: \u2018__NR_getrandom\u2019 undeclared (first use in this function)\r\n         r = syscall(SYS_getrandom, out, len, 0 /* no flags */);\r\n                     ^\r\nMakefile:2564: recipe for target '/home/usrnm/grpc/objs/opt/third_party/boringssl/crypto/rand/urandom.o' failed\r\nmake: *** [/home/usrnm/grpc/objs/opt/third_party/boringssl/crypto/rand/urandom.o] Error 1\r\n\r\n \r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\n \r\n### Anything else we should know about your project / environment?\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "PhoenixMage": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13503", "title": "-Werror in Makefile", "body": "### What version of gRPC and what language are you using?\r\n1.6.x\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nLinux - Arm though the issue shouldnt be arm specific\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n gcc-7\r\n \r\n### What did you do?\r\ngem install grpc -v '1.6.6'\r\n \r\n### What did you expect to see?\r\n grpc gem to compile successfully\r\n \r\n### What did you see instead?\r\ngprc failing to compile due to using -Werror and the zlib source files used generating a fall through warning due to case statements not having a break or return\r\n\r\n\r\nIs it possible to modify the Makefile so that -Werror is no longer present? There are no compiler errors only warnings. I can compile successfully if I manually remove -Werror (sed -i -e 's|-Werror||') however this doesnt help with bundles as it untars the source everytime overwriting any changes.\r\n\r\nI have lodged a bug with zlib to fix the underlying problem.\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "davissp14": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13501", "title": "Ruby: Problems establishing secure connection", "body": "grpc version: 1.7.2\r\nOS: MacOS High Sierra\r\n\r\nI am getting `Handshake failed with fatal error SSL_ERROR_SSL: error:10000410:SSL routines:OPENSSL_internal:SSLV3_ALERT_HANDSHAKE_FAILURE.` every time I try and connect securely to a locally run Etcd v3 instance.  \r\n\r\nI am able to use `curl` and the `etcdctl` just fine, but I am unable to connect using  `GRPC::Core::ChannelCredentials`. \r\n\r\n**Steps:** \r\n\r\n1. I generated certificates using the following documentation: \r\nhttps://coreos.com/os/docs/latest/generate-self-signed-certificates.html\r\n_Note: No peer certificates are being used_\r\n\r\n2. Spun up an Etcd node specifying the cert, key and ca. \r\n```\r\netcd  --name=node --initial-advertise-peer-urls=http://127.0.0.1:2380 --listen-peer-urls=http://127.0.0.1:2380 --listen-client-urls=https://127.0.0.1:2379 --advertise-client-urls=https://127.0.0.1:2379 --initial-cluster=node=http://127.0.0.1:2380  --cert-file=spec/fixtures/cert.pem --key-file=spec/fixtures/key.pem --trusted-ca-file=spec/fixtures/cacert.pem\r\n```\r\n\r\n3. Tested the connection using the etcdctl and curl:\r\n```\r\nETCDCTL_API=3 etcdctl put name test  --endpoints='https://127.0.0.1:2379' --cacert spec/fixtures/cacert.pem --cert spec/fixtures/cert.pem --key spec/fixtures/key.pem\r\nOK\r\n\r\ncurl --cacert spec/fixtures/cacert.pem --cert spec/fixtures/cert.pem --key spec/fixtures/key.pem https://127.0.0.1:2379/metrics\r\n[metrics data]\r\n```\r\n\r\n4. Use grpc to securely connect.\r\n```\r\nfiles = ['spec/fixtures/cacert.pem', 'spec/fixtures/key.pem', 'spec/fixtures/cert.pem']\r\ncerts = files.map { |f| File.open(f).read }\r\ncreds = GRPC::Core::ChannelCredentials.new(*certs)\r\nstub = Etcdserverpb::Maintenance::Stub.new('127.0.0.1:2379', creds)\r\nstub.status(Etcdserverpb::StatusRequest.new)\r\n\r\nE1125 07:53:34.467619000 123145402527744 ssl_transport_security.c:970] Handshake failed with fatal error SSL_ERROR_SSL: error:10000410:SSL routines:OPENSSL_internal:SSLV3_ALERT_HANDSHAKE_FAILURE.\r\nGRPC::Unavailable: 14:Connect Failed\r\n\tfrom /Users/shaun/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/grpc-1.7.2-universal-darwin/src/ruby/lib/grpc/generic/active_call.rb:31:in `check_status'\r\n\tfrom /Users/shaun/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/grpc-1.7.2-universal-darwin/src/ruby/lib/grpc/generic/active_call.rb:180:in `attach_status_results_and_complete_call'\r\n\tfrom /Users/shaun/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/grpc-1.7.2-universal-darwin/src/ruby/lib/grpc/generic/active_call.rb:372:in `request_response'\r\n\tfrom /Users/shaun/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/grpc-1.7.2-universal-darwin/src/ruby/lib/grpc/generic/client_stub.rb:178:in `block in request_response'\r\n\tfrom /Users/shaun/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/grpc-1.7.2-universal-darwin/src/ruby/lib/grpc/generic/interceptors.rb:170:in `intercept!'\r\n\tfrom /Users/shaun/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/grpc-1.7.2-universal-darwin/src/ruby/lib/grpc/generic/client_stub.rb:177:in `request_response'\r\n\tfrom /Users/shaun/.rbenv/versions/2.4.1/lib/ruby/gems/2.4.0/gems/grpc-1.7.2-universal-darwin/src/ruby/lib/grpc/generic/service.rb:170:in `block (3 levels) in rpc_stub_class'\r\n\tfrom (irb):8\r\n\tfrom /Users/shaun/.rbenv/versions/2.4.1/bin/irb:11:in `<main>'\r\n\r\n```\r\n\r\n\r\nI'm hoping it's just a small detail i'm missing...\r\n\r\nAny ideas what's going on?\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13501/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "AngryLemonn": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13495", "title": "Large amount of memory consumed [C++]", "body": "### What version of gRPC and what language are you using?\r\n **Language**: C++ (client and server)\r\n**Grpc version**: Current master branch (but this bug comes from the 1.1.0 version)\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Debian Jessie 8.8\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n g++ 4.9.2\r\n \r\n### What did you do?\r\nI created one sync server and one sync client to prove memory consumption with a simply rpc call. The client and server shared one proto with only one function called \"login\". This function pass two strings from the client to the server, and the server responds with one boolean (a simply login function).\r\n \r\n### What did you expect to see?\r\n 0.0~0.1 memory consumption.\r\n \r\n### What did you see instead?\r\n 1K of requests, 0.7 of the entire memory (56M of 8GB). Up to 100K requests, the memory consumption increase exponentially.\r\n\r\nAfter this, I used valgrind to see where the memory leak was. Protobuf and grpc/grpc++ lost a little of memory per call, but the problem is not here.\r\n\r\nUsing pmap after the memory consumption test suite, I saw that the server process had a lot of **anon blocks** of 4K to 6MB. Depending on the program, you may have up to a few dozen of these, but if you are seeing thousands, it means **you have a problem with threading**. In my test suite, I do not manage any thread. However, my grpc server has a thread pool that I can't manage because grpc does this job for me. Only I can set the max/min pollers. If I set this options to 1, the memory consumption increase less, but does not stop.\r\n \r\n### Anything else we should know about your project / environment?\r\nNope, the project is very very simply. If you need to see my test code, just ask me.\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "namrata-ibm": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13458", "title": "Error while running helloworld example", "body": "### What version of gRPC and what language are you using? \r\n- grpc v1.7.2\r\n  \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n - Linux s390x Ubuntu 16.04 \r\n  \r\n### What runtime / compiler are you using (e.g. python version or version of gcc) \r\n- gcc version 5.4.0 \r\n  \r\n### What did you do?\r\nBuilt grpc 1.7.2 from source and ran `helloworld` example\r\n \r\n### What did you expect to see?\r\n hello world output\r\n \r\n### What did you see instead?\r\n```\r\ntest@c379f028000f:~/grpc/examples/cpp/helloworld$ ./greeter_server\r\nE1120 06:05:52.276953417    4630 sockaddr_utils.c:239]       Unknown socket family 0 in grpc_sockaddr_get_port\r\nE1120 06:05:52.277093292    4630 tcp_server_utils_posix_common.c:90] assertion failed: port > 0\r\nAborted (core dumped)\r\n``` \r\n### Anything else we should know about your project / environment?\r\n\r\ngrpc 1.7.2 on s390x along with protobuf 3.4.0 built successfully, however while running the `hello world` example, i am facing the error mentioned above. I also tried running unit_tests in c, observed multiple failures with the same error.\r\n\r\nPart of test log:\r\n```\r\nbins/dbg/server_chttp2_test(+0x2d404)[0x2aa007ed404]\r\nFAILED: bins/dbg/server_chttp2_test GRPC_POLL_STRATEGY=epollsig [ret=-6, pid=53558]\r\n\r\nD1120 09:30:25.593451605   53561 test_config.c:388]          test slowdown factor: sanitizer=1, fixture=1, poller=5, total=5\r\nD1120 09:30:25.593996668   53561 ev_posix.c:107]             Using polling engine: poll-cv\r\nD1120 09:30:25.594065543   53561 dns_resolver.c:301]         Using native dns resolver\r\nI1120 09:30:25.594153293   53561 cancel_with_status.c:42]    Running test: test_invoke_simple_request/chttp2/fullstack+load_reporting [1 ops]\r\nE1120 09:30:25.674839604   53561 sockaddr_utils.c:239]       Unknown socket family 0 in grpc_sockaddr_get_port\r\nE1120 09:30:25.674860291   53561 tcp_server_utils_posix_common.c:90] assertion failed: port > 0\r\n```\r\n\r\nAny pointers in resolving this would be helpful.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13458/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tanyifeng": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13457", "title": "Tcp client connect failed under high concurrency", "body": "### What version of gRPC and what language are you using?\r\n C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Linux\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n gcc 5.4.0\r\n \r\n### What did you do?\r\nSending more than 2000 tcp connect to the same grpc server, some of tcp connect failed, \r\n\r\nThis is some of logs:\r\n\r\n```\r\nD tcp_client_posix.c:120 CLIENT_CONNECT: unix:/var/run/grpc_c_lcrd.sock: on_alarm: error=\"Cancelled\"\r\n      ].        },.        {.            \"source\": \"/sys/kernel/security\",.            \"destination\": \"/sys/kernel/security\",.            \"type\": \"bind\",.            \"options\": [.                \"rbind\".            ].        },.        {.            \"source\": \"/sys/fs/pstore\",.            \"destination\": \"/sys/fs/pstore\",.            \"type\": \"bind\",.            \"options\": [.                \"rbind\".            ].        },.        {.            \"source\": \"mqueue\",.            \"destination\": \"/dev/mqueue\",.            \"type\": \"mqueue\",.            \"options\": [.                \"nosuid\",.                \"noexec\",.                \"nodev\".            ].        }.    ],.    \"ociVersion\": \"1.0.0-rc5-dev\",.    \"root\": {.        \"path\": \"rootfs\".    }.}..\".docker.io/amd64/centos:latest*.lcr2.no'\r\nD tcp_posix.c:457 WRITE 0x216cfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 40 02 '@.'\r\nD tcp_posix.c:457 WRITE 0x1a54d10 (peer=unix:/var/run/grpc_c_lcrd.sock): 75 73 65 72 2d 61 67 65 6e 74 'user-agent'\r\nD tcp_posix.c:457 WRITE 0x10afd10 (peer=unix:/var/run/grpc_c_lcrd.sock): 40 05 '@.'\r\nD tcp_posix.c:457 WRITE 0x1afcfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 00 00 04 08 00 00 00 00 00 00 0f 00 01 '.............'\r\nD tcp_posix.c:457 WRITE 0x216cfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 74 65 'te'\r\nD tcp_posix.c:457 WRITE 0x1a54d10 (peer=unix:/var/run/grpc_c_lcrd.sock): 22 '\"'\r\nD tcp_posix.c:457 WRITE 0x10afd10 (peer=unix:/var/run/grpc_c_lcrd.sock): 3a 70 61 74 68 ':path'\r\nD tcp_posix.c:457 WRITE 0x216cfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 08 '.'\r\nD tcp_posix.c:487 write: {\"created\":\"@1511194350.864533104\",\"description\":\"OS Error\",\"errno\":107,\"fd\":8,\"file\":\"src/core/lib/iomgr/tcp_posix.c\",\"file_line\":386,\"os_error\":\"Transport endpoint is not connected\",\"syscall\":\"sendmsg\",\"target_address\":\"unix:/var/run/grpc_c_lcrd.sock\"}\r\nD tcp_posix.c:457 WRITE 0x1a54d10 (peer=unix:/var/run/grpc_c_lcrd.sock): 67 72 70 63 2d 63 2f 32 2e 30 2e 30 20 28 6c 69 6e 75 78 3b 20 63 68 74 74 70 32 3b 20 67 6f 6f 64 29 'grpc-c/2.0.0 (linux; chttp2; good)'\r\nD tcp_posix.c:457 WRITE 0x10afd10 (peer=unix:/var/run/grpc_c_lcrd.sock): 18 '.'\r\nD tcp_posix.c:457 WRITE 0x216cfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 74 72 61 69 6c 65 72 73 'trailers'\r\nD tcp_posix.c:457 WRITE 0x1a54d10 (peer=unix:/var/run/grpc_c_lcrd.sock): 00 00 04 08 00 00 00 00 01 00 00 ff ff 00 18 '...............'\r\nD tcp_posix.c:487 write: {\"created\":\"@1511194350.864547844\",\"description\":\"OS Error\",\"errno\":107,\"fd\":8,\"file\":\"src/core/lib/iomgr/tcp_posix.c\",\"file_line\":386,\"os_error\":\"Transport endpoint is not connected\",\"syscall\":\"sendmsg\",\"target_address\":\"unix:/var/run/grpc_c_lcrd.sock\"}\r\nD tcp_posix.c:457 WRITE 0x216cfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 40 0c '@.'\r\nD tcp_posix.c:457 WRITE 0x10afd10 (peer=unix:/var/run/grpc_c_lcrd.sock): 2f 43 6f 6e 74 61 69 6e 65 72 53 65 72 76 69 63 65 2f 43 72 65 61 74 65 '/ContainerService/Create'\r\nD tcp_posix.c:457 WRITE 0x1a54d10 (peer=unix:/var/run/grpc_c_lcrd.sock): b9 00 01 00 00 00 01 00 00 00 18 b4 '............'\r\nD tcp_posix.c:183 read: error={\"created\":\"@1511194350.864578056\",\"description\":\"OS Error\",\"errno\":22,\"fd\":8,\"file\":\"src/core/lib/iomgr/tcp_posix.c\",\"file_line\":242,\"os_error\":\"Invalid argument\",\"syscall\":\"recvmsg\",\"target_address\":\"unix:/var/run/grpc_c_lcrd.sock\"}\r\nD tcp_posix.c:457 WRITE 0x216cfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 63 6f 6e 74 65 6e 74 2d 74 79 70 65 'content-type'\r\nD tcp_posix.c:457 WRITE 0x10afd10 (peer=unix:/var/run/grpc_c_lcrd.sock): 40 0a '@.'\r\nD tcp_posix.c:183 read: error={\"created\":\"@1511194350.864585785\",\"description\":\"OS Error\",\"errno\":22,\"fd\":8,\"file\":\"src/core/lib/iomgr/tcp_posix.c\",\"file_line\":242,\"os_error\":\"Invalid argument\",\"syscall\":\"recvmsg\",\"target_address\":\"unix:/var/run/grpc_c_lcrd.sock\"}\r\nD tcp_posix.c:457 WRITE 0x216cfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 10 '.'\r\nD tcp_posix.c:457 WRITE 0x10afd10 (peer=unix:/var/run/grpc_c_lcrd.sock): 3a 61 75 74 68 6f 72 69 74 79 ':authority'\r\nD tcp_posix.c:487 write: \"No Error\"\r\nD tcp_posix.c:457 WRITE 0x216cfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 61 70 70 6c 69 63 61 74 69 6f 6e 2f 67 72 70 63 'application/grpc'\r\nD tcp_posix.c:457 WRITE 0x10afd10 (peer=unix:/var/run/grpc_c_lcrd.sock): 1e '.'\r\nD tcp_posix.c:457 WRITE 0x216cfd0 (peer=unix:/var/run/grpc_c_lcrd.sock): 40 0a '@.'\r\n```\r\n \r\n### What did you expect to see?\r\n All tcp connections success\r\n \r\n### What did you see instead?\r\n Some tcp connections failed\r\n \r\n### Anything else we should know about your project / environment?\r\nI found that the reason maybe grpc server init [listen](https://github.com/grpc/grpc/blob/b0bad8f3864dc9c8745736fe68efe513b2b84932/src/core/lib/iomgr/tcp_server_utils_posix_common.cc#L177) with `get_max_accept_queue_size()` which is 128 in default, , if there are too many tcp connect request in the same time, `listen()` will ignore some tcp connect.\r\n\r\nThe client will received errno `EAGAIN` or `ECONNREFUSED`, but grpc client didn't handle this in\r\n[client connect](https://github.com/grpc/grpc/blob/master/src/core/lib/iomgr/tcp_client_posix.cc#L284), still try to set socket fd and write or read.\r\n\r\nOne of solution is set the value in `/proc/sys/net/core/somaxconn` and `/proc/sys/net/ipv4/tcp_max_syn_backlog` to a larger one. I want to know another method  to fix this issue and do not need to change the default value.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13457/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ababo": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13456", "title": "Cannot drain completion queue for async. client.", "body": "There's no problem to shut down a server, as well as to free allocated tasks. But I experience problems while trying to do the same for a client. Since the client can have multiple simultaneous tasks running I need to shut down it gracefully and to free all the allocated tasks. But I can't do that. Calling `Shutdown` on the client's completion queue makes long-running streaming tasks to be finished after a long time period, while still no immediate queue draining happens (neither `AsyncNext` returns cancelled tasks with `!ok`, nor `SHUTDOWN` status is returned).", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "CPPZombie": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13436", "title": "Cannot cross-compile gRPC and Protobuf for ARM", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\n This is a cross-compiler problem.\r\n I'm trying to cross-compile and linking all required libs statically.\r\n\r\nCreate new issues for bugs and feature requests. An issue needs to be actionable. General gRPC discussions and usage questions belong to:\r\n- [grpc.io mailing list](https://groups.google.com/forum/#!forum/grpc-io)\r\n- [StackOverflow, with `grpc` tag](http://stackoverflow.com/questions/tagged/grpc)\r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\n\r\n git branch v1.7.x   date: (2017-11-02 01:41:15) \r\n \r\nC/C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n Host on Linux (x86) Ubuntu 16.04.3 LTS\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n arm-linux-gnueabi-gcc and arm-linux-gnueabi-g++\r\n \r\n### What did you do?\r\n\r\nTried to follow instructions of cross-compiling from several issues from gitHub.\r\n\r\nThis is what i have so far and what i'm trying to make work.\r\n\r\n$ git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc\r\n$ cd grpc\r\n$ git submodule update --init\r\n$ git clean -xdf\r\n$ git submodule foreach 'git clean -xdf'\r\n$ cd /grpc/third_party/protobuf/\r\n$ ./autogen.sh && ./configure && make && make check && sudo make install && sudo ldconfig\r\n\r\ncd back to grpc/\r\n$ cd ../../\r\n$ export GRPC_CROSS_COMPILE=false\r\n$ make clean && make && sudo make install && sudo ldconfig\r\n\r\n$ make clean && make plugins\r\n\r\n$ export GRPC_CROSS_COMPILE=true\r\n$ export GRPC_CROSS_AROPTS=\"cr --target=elf32-little\"\r\n$ make HAS_PKG_CONFIG=false CC=arm-linux-gnueabi-gcc CXX=arm-linux-gnueabi-g++ RANLIB=arm-linux-gnueabi-ranlib LD=arm-linux-gnueabi-ld LDXX=arm-linux-gnueabi-g++ AR=arm-linux-gnueabi-ar PROTOBUF_CONFIG_OPTS=\"--host=arm-linux-gnueabi --with-protoc=/usr/local/bin/protoc\" static\r\n\r\n\r\n\r\nSo this works and i think i have manage to cross-compile gRPC.\r\nBut the problem is when i build the hello_world example.\r\n\r\n\r\nModefied Makefile for the hello_world example \"/grpc/examples/cpp/helloworld/\":\r\n\r\nMakefile:\r\nCXX = arm-linux-gnueabi-g++\r\nCPPFLAGS += -I/usr/local/include -pthread -static\r\nCXXFLAGS += -std=c++11\r\nLDFLAGS +=  -L/usr/local/lib\\\r\n\t\t\t-L/home/myhome/myrepo/rcs-hwtest/prototype/grpc/grpc/libs/opt -L/home/myhome/myrepo/rcs-hwtest/prototype/grpc/grpc/libs/opt/protobuf `pkg-config --libs protobuf grpc++ grpc` -Wl,--no-as-needed -lgrpc++_reflection -Wl,--as-needed -ldl\r\nall: greeter_server\r\ngreeter_server: helloworld.pb.o helloworld.grpc.pb.o greeter_server.o\r\n\t$(CXX) $^ $(LDFLAGS) -o $@\r\nclean:\r\n\trm -f *.o *.pb.cc *.pb.h greeter_server   \r\n\r\n\r\n\r\n\r\n\r\n### What did you expect to see?\r\n Compiling greeter_server for embedded-system (arm7).\r\n \r\n### What did you see instead?\r\n~/myrepo/rcs-hwtest/prototype/grpc/grpc/examples/cpp/helloworld$ make clean\r\nrm -f *.o *.pb.cc *.pb.h greeter_server\r\n~/myrepo/rcs-hwtest/prototype/grpc/grpc/examples/cpp/helloworld$ protoc -I ../../protos --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_cpp_plugin` helloworld.proto\r\n ~/myrepo/rcs-hwtest/prototype/grpc/grpc/examples/cpp/helloworld$ protoc -I ../../protos --cpp_out=. helloworld.proto\r\n~/myrepo/rcs-hwtest/prototype/grpc/grpc/examples/cpp/helloworld$ make\r\n\r\narm-linux-gnueabi-g++ helloworld.pb.o helloworld.grpc.pb.o greeter_server.o -L/usr/local/lib -L/home/myhome/myrepo/rcs-hwtest/prototype/grpc/grpc/libs/opt -L/home/myhome/myrepo/rcs-hwtest/prototype/grpc/grpc/libs/opt/protobuf `pkg-config --libs protobuf grpc++ grpc` -Wl,--no-as-needed -lgrpc++_reflection -Wl,--as-needed -ldl -o greeter_server\r\nhelloworld.pb.o: file not recognized: File format not recognized\r\ncollect2: error: ld returned 1 exit status\r\nMakefile:16: recipe for target 'greeter_server' failed\r\nmake: *** [greeter_server] Error 1\r\n\r\n\r\n$ ll /usr/local/lib/libprotobuf.so\r\nlrwxrwxrwx 1 root root 21 nov 22 12:00 /usr/local/lib/libprotobuf.so -> libprotobuf.so.14.0.0*\r\n\r\n\r\n### Anything else we should know about your project / environment?\r\n\r\nI'm building this on this computer:\r\n$ lscpu\r\nArchitecture:          x86_64\r\nCPU op-mode(s):        32-bit, 64-bit\r\nByte Order:            Little Endian\r\nCPU(s):                4\r\nOn-line CPU(s) list:   0-3\r\nThread(s) per core:    2\r\nCore(s) per socket:    2\r\nSocket(s):             1\r\nNUMA node(s):          1\r\nVendor ID:             GenuineIntel\r\nCPU family:            6\r\nModel:                 69\r\nModel name:            Intel(R) Core(TM) i7-4510U CPU @ 2.00GHz\r\nStepping:              1\r\nCPU MHz:               800.007\r\nCPU max MHz:           3100,0000\r\nCPU min MHz:           800,0000\r\nBogoMIPS:              5187.74\r\nVirtualization:        VT-x\r\nL1d cache:             32K\r\nL1i cache:             32K\r\nL2 cache:              256K\r\nL3 cache:              4096K\r\nNUMA node0 CPU(s):     0-3\r\nFlags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm epb tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13436/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/13400", "title": "Missing simple real life Hello-world Example on two different platforms", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes, this is crucial. I have only seen examples where both server and clients are running on the same machine and/or platform. I could not find proper makefiles or other explanation/tutorial explaining how to build for two different systems. Only finding issues from users trying to solve this exact problems.\r\nThis is not a bug, but a request to have additional examples with real-life use-cases.\r\nFrom a computer (x86)(Linux) building a server for another platform, from the same computer building clients on other different plattform(s) than the server. Server and Client(s) using the same auto-generated protobuf+grpc files.\r\n\r\nCreate new issues for bugs and feature requests. An issue needs to be actionable. General gRPC discussions and usage questions belong to:\r\n- [grpc.io mailing list](https://groups.google.com/forum/#!forum/grpc-io)\r\n- [StackOverflow, with `grpc` tag](http://stackoverflow.com/questions/tagged/grpc)\r\n \r\n*Please don't double post your questions in more locations; we are monitoring both channels, and the time spent de-duplicating questions is better spent answering more user questions.*\r\n \r\n### What version of gRPC and what language are you using?\r\nC for the server. (ARM).\r\nC++ for clients. (x86).\r\n\r\n$protoc --version\r\n     libprotoc 2.6.1\r\n\r\n$ git branch\r\n     * v1.7.x\r\n\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nFor example:\r\n* Server on Raspberry PI (Linux)\r\n* Server on a ARM embedded system (Linux).\r\n* Client on x86 (Windows)\r\n* Client on x86 (Linux)\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n $ gcc --version\r\n     gcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\n$ g++ --version\r\n     g++ (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\n\r\n \r\n### What did you do?\r\nIf possible, provide a recipe for reproducing the error. Try being specific and include code snippets if helpful.\r\nN/A\r\n \r\n### What did you expect to see?\r\n N/A\r\n \r\n### What did you see instead?\r\n N/A\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\nN/A\r\n \r\n### Anything else we should know about your project / environment?\r\nN/A\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zackangelo": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13412", "title": "PHP gRPC extension breaks fork functions", "body": "Please answer these questions before submitting your issue. \r\n \r\n### What version of gRPC and what language are you using?\r\n\r\nLatest on PECL, 1.7.0\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n \r\nMac OS X, 10.12.6\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n\r\n```\r\n\u21d2  cc -v\r\nApple LLVM version 9.0.0 (clang-900.0.38)\r\nTarget: x86_64-apple-darwin16.7.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\n``` \r\n### What did you do?\r\n\r\nScript to reproduce: \r\n\r\n```php\r\n<?php \r\n\r\n$pid = pcntl_fork(); \r\n\r\nif($pid === -1) { \r\n\techo \"error forking\\n\"; \r\n} elseif ($pid) { //parent \r\n\techo \"parent: waiting for child...\\n\"; \r\n\tpcntl_waitpid(0, $status);\r\n\techo \"parent: child exited successfully\\n\"; \r\n} elseif ($pid === 0) { //child\r\n\techo \"child: sleeping for 1s...\\n\";\r\n\tsleep(1); \r\n\techo \"child: exiting...\\n\";\r\n\texit(0); \r\n}\r\n\r\necho \"parent: finished.\\n\"; \r\n```\r\n\r\n \r\n### What did you expect to see?\r\n\r\nThis is the script output with gRPC extension disabled:\r\n```\r\n\u21d2  php grpc-fork-bug.php\r\nparent: waiting for child...\r\nchild: sleeping for 1s...\r\nchild: exiting...\r\nparent: child exited successfully\r\nparent: finished.\r\n```\r\n \r\n### What did you see instead?\r\n\r\nThis is the script output with the extension enabled: \r\n```\r\n\u21d2  php grpc-fork-bug.php\r\nparent: waiting for child...\r\nchild: sleeping for 1s...\r\nchild: exiting...\r\n[HANG]\r\n```\r\n\r\nHere's a syscall trace of the process while its hung: \r\n\r\n```\r\n\u21d2  sudo dtruss -af php grpc-fork-bug.php\r\nPassword:\r\n\tPID/THRD  RELATIVE  ELAPSD    CPU SYSCALL(args) \t\t = return\r\nparent: waiting for child...\r\nchild: sleeping for 1s...\r\n98193/0xff925:      4990      62      1 madvise(0x10895E000, 0x2000, 0x5)\t\t = 0 0\r\n98193/0xff925:      5430      61      0 madvise(0x1086D7000, 0x7000, 0x5)\t\t = 0 0\r\n98193/0xff925:      5496      26     23 open(\"/dev/dtracehelper\\0\", 0x2, 0x107C69000)\t\t = 3 0\r\n98193/0xff925:      8026    2766   2528 ioctl(0x3, 0x80086804, 0x7FFF57F956F8)\t\t = 0 0\r\n98193/0xff925:      8042      17     13 close(0x3)\t\t = 0 0\r\n98193/0xff925:      8175       3      0 thread_selfid(0x3, 0x80086804, 0x7FFF57F956F8)\t\t = 1046821 0\r\n98193/0xff925:      8178       4      1 bsdthread_register(0x7FFFD3854080, 0x7FFFD3854070, 0x2000)\t\t = 1073741919 0\r\n98193/0xff925:      8220       2      0 ulock_wake(0x1, 0x7FFF57F93CFC, 0x0)\t\t = -1 Err#2\r\n98193/0xff925:      8231       2      0 issetugid(0x1, 0x7FFF57F93CFC, 0x0)\t\t = 0 0\r\n98193/0xff925:      8377       4      2 mprotect(0x1087C3000, 0x88, 0x1)\t\t = 0 0\r\n98193/0xff925:      8381       2      1 mprotect(0x108CDA000, 0x1000, 0x0)\t\t = 0 0\r\n98193/0xff925:      8382       2      0 mprotect(0x108CF0000, 0x1000, 0x0)\t\t = 0 0\r\n98193/0xff925:      8393       2      0 mprotect(0x108CF1000, 0x1000, 0x0)\t\t = 0 0\r\n98193/0xff925:      8394       2      0 mprotect(0x108D07000, 0x1000, 0x0)\t\t = 0 0\r\n98193/0xff925:      8409       2      0 mprotect(0x1089AF000, 0x1000, 0x1)\t\t = 0 0\r\n98193/0xff925:      8411       3      1 mprotect(0x1087C3000, 0x88, 0x3)\t\t = 0 0\r\n98193/0xff925:      8423       2      1 mprotect(0x1087C3000, 0x88, 0x1)\t\t = 0 0\r\n98193/0xff925:      9149      70      0 getpid(0x1087C3000, 0x88, 0x1)\t\t = 98193 0\r\n98193/0xff925:      9154       4      2 stat64(\"/AppleInternal/XBS/.isChrooted\\0\", 0x7FFF57F93BB8, 0x1)\t\t = -1 Err#2\r\n98193/0xff925:      9157       2      0 stat64(\"/AppleInternal\\0\", 0x7FFF57F93C50, 0x1)\t\t = -1 Err#2\r\n98193/0xff925:      9240       3      1 csops(0x17F91, 0x7, 0x7FFF57F936E0)\t\t = -1 Err#22\r\n98193/0xff925:      9265      28     23 sysctl([CTL_KERN, 14, 1, 98193, 0, 0] (4), 0x7FFF57F93838, 0x7FFF57F93830, 0x0, 0x0)\t\t = 0 0\r\n98193/0xff925:      9280       6      0 ulock_wake(0x1, 0x7FFF57F93C60, 0x0)\t\t = -1 Err#2\r\n98193/0xff925:      9315       5      2 csops(0x17F91, 0x7, 0x7FFF57F92FC0)\t\t = -1 Err#22\r\n98193/0xff925:      9465       4      0 getuid(0x17F91, 0x7, 0x7FFF57F92FC0)\t\t = 0 0\r\n98193/0xff925:      9831       2      0 getuid(0x17F91, 0x7, 0x7FFF57F92FC0)\t\t = 0 0\r\n98193/0xff925:     10374      25     20 stat64(\"/System/Library/PrivateFrameworks/Heimdal.framework/Heimdal\\0\", 0x7FFF57F931E8, 0x7FFF57F92FC0)\t\t = 0 0\r\n98193/0xff925:     10526     132     16 stat64(\"/System/Library/Frameworks/GSS.framework/GSS\\0\", 0x7FFF57F931E8, 0x7FFF57F92FC0)\t = 0 0\r\n98193/0xff925:     10818       4      0 sigaction(0xD, 0x7FFF57F96898, 0x7FFF57F968C0)\t\t = 0 0\r\n98193/0xff925:     10836       1      0 sigaction(0x1, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10837       1      0 sigaction(0x2, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10837       1      0 sigaction(0x3, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10837       1      0 sigaction(0x4, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10838       1      0 sigaction(0x5, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10838       1      0 sigaction(0x6, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10839       2      0 sigaction(0x7, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10839       1      0 sigaction(0x8, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10840       1      0 sigaction(0xA, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10840       1      0 sigaction(0xB, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10840       1      0 sigaction(0xC, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10841       1      0 sigaction(0xD, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10841       1      0 sigaction(0xE, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10842       1      0 sigaction(0xF, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10842       1      0 sigaction(0x10, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10842       1      0 sigaction(0x12, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10843       1      0 sigaction(0x13, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10843       1      0 sigaction(0x14, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10844       2      0 sigaction(0x15, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10844       2      0 sigaction(0x16, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10845       2      0 sigaction(0x17, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10846       1      0 sigaction(0x18, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10846       1      0 sigaction(0x19, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10846       1      0 sigaction(0x1A, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10847       1      0 sigaction(0x1B, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10847       1      0 sigaction(0x1C, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10847       1      0 sigaction(0x1D, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10848       1      0 sigaction(0x1E, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10848       1      0 sigaction(0x1F, 0x0, 0x7FFF57F968B8)\t\t = 0 0\r\n98193/0xff925:     10927       9      3 mmap(0x0, 0x200000, 0x3, 0x1002, 0xFFFFFFFF, 0x0)\t\t = 0x108D08000 0\r\n98193/0xff925:     10934       4      1 munmap(0x108D08000, 0x200000)\t\t = 0 0\r\n98193/0xff925:     10935       2      0 mmap(0x0, 0x3FF000, 0x3, 0x1002, 0xFFFFFFFF, 0x0)\t\t = 0x108D08000 0\r\n98193/0xff925:     10937       2      1 munmap(0x108D08000, 0xF8000)\t\t = 0 0\r\n98193/0xff925:     10938       2      0 munmap(0x109000000, 0x107000)\t\t = 0 0\r\n98193/0xff925:     10951       7      3 sysctl([CTL_HW, 7, 0, 0, 0, 0] (2), 0x7FFFDC53BE00, 0x7FFF57F96270, 0x0, 0x0)\t\t = 0 0\r\n98193/0xff925:     10963       9      6 open_nocancel(\".\\0\", 0x0, 0x1)\t\t = 3 0\r\n98193/0xff925:     10965       3      1 fstat64(0x3, 0x7FFF57F95D00, 0x1)\t\t = 0 0\r\n98193/0xff925:     10968       4      2 fcntl_nocancel(0x3, 0x32, 0x7FFF57F95F00)\t\t = 0 0\r\n98193/0xff925:     10973       6      4 close_nocancel(0x3)\t\t = 0 0\r\n98193/0xff925:     10978       5      3 stat64(\"/Users/zack.angelo/git/grpc-fork-bug\\0\", 0x7FFF57F95C70, 0x7FFF57F95F00)\t\t = 0 0\r\n98193/0xff925:     11142      17     15 open_nocancel(\"/usr/share/locale/en_US.UTF-8/LC_CTYPE\\0\", 0x0, 0x5)\t\t = 3 0\r\n98193/0xff925:     11143       2      0 fcntl_nocancel(0x3, 0x3, 0x0)\t\t = 0 0\r\n98193/0xff925:     11145       2      0 getrlimit(0x1008, 0x7FFF57F95D38, 0x0)\t\t = 0 0\r\n98193/0xff925:     11152       4      1 fstat64(0x3, 0x7FFF57F95DF8, 0x0)\t\t = 0 0\r\n98193/0xff925:     11155       2      0 fstat64(0x3, 0x7FFF57F95BE8, 0x0)\t\t = 0 0\r\n98193/0xff925:     11157       2      0 lseek(0x3, 0x0, 0x1)\t\t = 0 0\r\n98193/0xff925:     11158       1      0 lseek(0x3, 0x0, 0x0)\t\t = 0 0\r\n98193/0xff925:     11167      11      8 read_nocancel(0x3, \"RuneMagAUTF-8\\0\", 0x1000)\t\t = 4096 0\r\n98193/0xff925:     11177       3      1 read_nocancel(0x3, \"\\0\", 0x1000)\t\t = 4096 0\r\n98193/0xff925:     11194       3      1 read_nocancel(0x3, \"\\0\", 0x1000)\t\t = 4096 0\r\n98193/0xff925:     11209       2      1 read_nocancel(0x3, \"\\0\", 0x1000)\t\t = 4096 0\r\n98193/0xff925:     11225       2      1 read_nocancel(0x3, \"\\0\", 0x1000)\t\t = 4096 0\r\n98193/0xff925:     11240       2      1 read_nocancel(0x3, \"\\0\", 0x1000)\t\t = 4096 0\r\n98193/0xff925:     11285      37     36 read_nocancel(0x3, \"@\\004\\031\\0\", 0xDE80)\t\t = 56960 0\r\n98193/0xff925:     11299       5      3 close_nocancel(0x3)\t\t = 0 0\r\n98193/0xff925:     11335      27     25 access(\"/etc/localtime\\0\", 0x4, 0xDE80)\t\t = 0 0\r\n98193/0xff925:     11353      19     17 open_nocancel(\"/etc/localtime\\0\", 0x0, 0x0)\t\t = 3 0\r\n98193/0xff925:     11355       3      1 fstat64(0x3, 0x7FFF57F933E0, 0x0)\t\t = 0 0\r\n98193/0xff925:     11357       3      1 read_nocancel(0x3, \"TZif\\0\", 0x2A64)\t\t = 791 0\r\n98193/0xff925:     11358       2      1 close_nocancel(0x3)\t\t = 0 0\r\n98193/0xff925:     11490       8      5 shm_open(0x7FFFD3847DE7, 0x0, 0x0)\t\t = 3 0\r\n98193/0xff925:     11495       7      4 mmap(0x0, 0x1000, 0x1, 0x1, 0x3, 0x0)\t\t = 0x1089B0000 0\r\n98193/0xff925:     11497       3      1 close_nocancel(0x3)\t\t = 0 0\r\n98193/0xff925:     11569       7      4 lstat64(\"/Users/zack.angelo/.rvm/gems/ruby-2.2.4/bin/php\\0\", 0x7FFF57F95990, 0x1)\t\t = -1 Err#2\r\n98193/0xff925:     11583       9      7 lstat64(\"/Users/zack.angelo/.rvm/gems/ruby-2.2.4@global/bin/php\\0\", 0x7FFF57F95990, 0x1)\t = -1 Err#2\r\n98193/0xff925:     11585       3      1 lstat64(\"/Users/zack.angelo/.rvm/rubies/ruby-2.2.4/bin/php\\0\", 0x7FFF57F95990, 0x1)\t\t = -1 Err#2\r\n98193/0xff925:     11589       5      3 lstat64(\"/Users/zack.angelo/.nvm/versions/node/v4.4.7/bin/php\\0\", 0x7FFF57F95990, 0x1)\t\t = -1 Err#2\r\n98193/0xff925:     11592       3      1 lstat64(\"/Users/zack.angelo/google-cloud-sdk/bin/php\\0\", 0x7FFF57F95990, 0x1)\t\t = -1 Err#2\r\n98193/0xff925:     11594       3      1 lstat64(\"/usr/local/sbin/php\\0\", 0x7FFF57F95990, 0x1)\t\t = -1 Err#2\r\n98193/0xff925:     11599       5      4 lstat64(\"/usr/local/bin/php\\0\", 0x7FFF57F95990, 0x1)\t\t = 0 0\r\n98193/0xff925:     11609       3      1 readlink(\"/usr/local/bin/php\\0\", 0x7FFF57F95AE0, 0x400)\t\t = 33 0\r\n98193/0xff925:     11618       6      5 lstat64(\"/usr/local/bin/../Cellar/php71/7.1.11_22/bin/php\\0\", 0x7FFF57F95860, 0x400)\t\t = 0 0\r\n98193/0xff925:     11622       3      1 lstat64(\"/usr/local/bin/../Cellar/php71/7.1.11_22/bin\\0\", 0x7FFF57F95730, 0x400)\t\t = 0 0\r\n98193/0xff925:     11626       3      1 lstat64(\"/usr/local/bin/../Cellar/php71/7.1.11_22\\0\", 0x7FFF57F95600, 0x400)\t\t = 0 0\r\n98193/0xff925:     11628       2      1 lstat64(\"/usr/local/bin/../Cellar/php71\\0\", 0x7FFF57F954D0, 0x400)\t\t = 0 0\r\n98193/0xff925:     11631       2      1 lstat64(\"/usr/local/bin/../Cellar\\0\", 0x7FFF57F953A0, 0x400)\t\t = 0 0\r\n98193/0xff925:     11633       2      1 lstat64(\"/usr/local/bin\\0\", 0x7FFF57F95140, 0x400)\t\t = 0 0\r\n98193/0xff925:     11636       2      1 lstat64(\"/usr/local\\0\", 0x7FFF57F95010, 0x400)\t\t = 0 0\r\n98193/0xff925:     11638       2      1 lstat64(\"/usr\\0\", 0x7FFF57F94EE0, 0x400)\t\t = 0 0\r\n98193/0xff925:     11660      16     14 access(\"/usr/local/Cellar/php71/7.1.11_22/bin/php\\0\", 0x1, 0x400)\t\t = 0 0\r\n98193/0xff925:     11667       3      1 stat64(\"/usr/local/Cellar/php71/7.1.11_22/bin/php\\0\", 0x7FFF57F963F0, 0x400)\t\t = 0 0\r\n98193/0xff925:     11702       5      3 open_nocancel(\"/usr/local/Cellar/php71/7.1.11_22/bin/php-cli.ini\\0\", 0x0, 0x1B6)\t\t = -1 Err#2\r\n98193/0xff925:     11706       5      3 open_nocancel(\"/usr/local/etc/php/7.1/php-cli.ini\\0\", 0x0, 0x1B6)\t\t = -1 Err#2\r\n98193/0xff925:     11709      12      2 open_nocancel(\"/usr/local/Cellar/php71/7.1.11_22/bin/php.ini\\0\", 0x0, 0x1B6)\t\t = -1 Err#2\r\n98193/0xff925:     11714       6      4 open_nocancel(\"/usr/local/etc/php/7.1/php.ini\\0\", 0x0, 0x1B6)\t\t = 3 0\r\n98193/0xff925:     11729       3      1 ioctl(0x3, 0x4004667A, 0x7FFF57F95B3C)\t\t = -1 Err#25\r\n98193/0xff925:     11729       1      0 ioctl(0x3, 0x40487413, 0x7FFF57F95B40)\t\t = -1 Err#25\r\n98193/0xff925:     11737       3      1 fstat64(0x3, 0x7FFF57F95BB0, 0x7FFF57F95B40)\t\t = 0 0\r\n98193/0xff925:     11743       8      5 mmap(0x0, 0x1162B, 0x1, 0x2, 0x3, 0x0)\t\t = 0x108D08000 0\r\n98193/0xff925:     11748       2      0 lseek(0x3, 0x0, 0x1)\t\t = 0 0\r\n98193/0xff925:     12086      10      6 munmap(0x108D08000, 0x1162B)\t\t = 0 0\r\n98193/0xff925:     12097       8      5 close_nocancel(0x3)\t\t = 0 0\r\n98193/0xff925:     12114      12      9 open_nocancel(\"/usr/local/etc/php/7.1/conf.d\\0\", 0x1100004, 0x0)\t\t = 3 0\r\n98193/0xff925:     12117       5      2 fstatfs64(0x3, 0x7FFF57F953D8, 0x0)\t\t = 0 0\r\n98193/0xff925:     12140      23     20 getdirentries64(0x3, 0x7F814F002C00, 0x1000)\t\t = 136 0\r\n98193/0xff925:     12145       6      3 getdirentries64(0x3, 0x7F814F002C00, 0x1000)\t\t = 0 0\r\n98193/0xff925:     12148       3      1 close_nocancel(0x3)\t\t = 0 0\r\n98193/0xff925:     12162       6      4 stat64(\"/usr/local/etc/php/7.1/conf.d/ext-intl.ini\\0\", 0x7FFF57F95E70, 0x1000)\t\t = 0 0\r\n98193/0xff925:     12167       5      3 open_nocancel(\"/usr/local/etc/php/7.1/conf.d/ext-intl.ini\\0\", 0x0, 0x1B6)\t\t = 3 0\r\n98193/0xff925:     12169       3      0 ioctl(0x3, 0x4004667A, 0x7FFF57F95B3C)\t\t = -1 Err#25\r\n98193/0xff925:     12169       1      0 ioctl(0x3, 0x40487413, 0x7FFF57F95B40)\t\t = -1 Err#25\r\n98193/0xff925:     12171       2      0 fstat64(0x3, 0x7FFF57F95BB0, 0x7FFF57F95B40)\t\t = 0 0\r\n98193/0xff925:     12176       8      4 mmap(0x0, 0x14F, 0x1, 0x2, 0x3, 0x0)\t\t = 0x1089B1000 0\r\n98193/0xff925:     12177       2      0 lseek(0x3, 0x0, 0x1)\t\t = 0 0\r\n98193/0xff925:     12226       7      3 munmap(0x1089B1000, 0x14F)\t\t = 0 0\r\n98193/0xff925:     12231       7      4 close_nocancel(0x3)\t\t = 0 0\r\n98193/0xff925:     13270      16     12 stat64(\"/usr/local/Cellar/php71/7.1.11_22/lib/php/extensions/no-debug-non-zts-20160303/grpc.so\\0\", 0x7FFF57F95778, 0x1)\t\t = 0 0\r\n98193/0xff925:     13281       7      5 open(\"/usr/local/Cellar/php71/7.1.11_22/lib/php/extensions/no-debug-non-zts-20160303/grpc.so\\0\", 0x0, 0x0)\t\t = 3 0\r\n98193/0xff925:     13330     219     47 pread(0x3, \"\\317\\372\\355\\376\\a\\0\", 0x1000, 0x0)\t\t = 4096 0\r\n98193/0xff925:     13386      47     42 mmap(0x109000000, 0x219000, 0x5, 0x12, 0x3, 0x0)\t\t = 0x109000000 0\r\n98193/0xff925:     13391       7      4 mmap(0x109219000, 0x1A000, 0x3, 0x12, 0x3, 0x219000)\t\t = 0x109219000 0\r\n98193/0xff925:     13394       4      2 mmap(0x109239000, 0x51BDC, 0x1, 0x12, 0x3, 0x233000)\t\t = 0x109239000 0\r\n98193/0xff925:     13404       4      1 madvise(0x109239000, 0x2000, 0x2)\t\t = 0 0\r\n98193/0xff925:     13408       4      2 close(0x3)\t\t = 0 0\r\n98193/0xff925:     13957       4      0 madvise(0x109239000, 0x2000, 0x5)\t\t = 0 0\r\n98193/0xff925:     14224      15     12 stat64(\"/usr/local/opt/php71-intl/intl.so\\0\", 0x7FFF57F95778, 0x5)\t\t = 0 0\r\n98193/0xff925:     14233       8      5 open(\"/usr/local/opt/php71-intl/intl.so\\0\", 0x0, 0x0)\t\t = 3 0\r\n98193/0xff925:     14239       9      5 pread(0x3, \"\\317\\372\\355\\376\\a\\0\", 0x1000, 0x0)\t\t = 4096 0\r\n98193/0xff925:     14269      26     23 mmap(0x108D57000, 0x3F000, 0x5, 0x12, 0x3, 0x0)\t\t = 0x108D57000 0\r\n98193/0xff925:     14273       5      2 mmap(0x108D96000, 0xA000, 0x3, 0x12, 0x3, 0x3F000)\t\t = 0x108D96000 0\r\n98193/0xff925:     14276       5      2 mmap(0x108DA1000, 0x1D520, 0x1, 0x12, 0x3, 0x49000)\t\t = 0x108DA1000 0\r\n98193/0xff925:     14283       2      0 madvise(0x108DA1000, 0x4000, 0x2)\t\t = 0 0\r\n98193/0xff925:     14286       4      2 close(0x3)\t\t = 0 0\r\n98193/0xff925:     14300      12     10 stat64(\"/usr/local/opt/icu4c/lib/libicui18n.59.dylib\\0\", 0x7FFF57F95538, 0x2)\t\t = 0 0\r\n98193/0xff925:     14307       6      4 open(\"/usr/local/opt/icu4c/lib/libicui18n.59.dylib\\0\", 0x0, 0x0)\t\t = 3 0\r\n98193/0xff925:     14310       5      3 pread(0x3, \"\\317\\372\\355\\376\\a\\0\", 0x1000, 0x0)\t\t = 4096 0\r\n98193/0xff925:     14332      20     17 mmap(0x10928B000, 0x15E000, 0x5, 0x12, 0x3, 0x0)\t\t = 0x10928B000 0\r\n98193/0xff925:     14335       4      2 mmap(0x1093E9000, 0xF000, 0x3, 0x12, 0x3, 0x15E000)\t\t = 0x1093E9000 0\r\n98193/0xff925:     14337       4      1 mmap(0x1093F8000, 0xCE03C, 0x1, 0x12, 0x3, 0x16D000)\t\t = 0x1093F8000 0\r\n98193/0xff925:     14342       2      0 madvise(0x1093F8000, 0x2000, 0x2)\t\t = 0 0\r\n98193/0xff925:     14347       3      1 close(0x3)\t\t = 0 0\r\n98193/0xff925:     14355       7      6 stat64(\"/usr/local/opt/icu4c/lib/libicuuc.59.dylib\\0\", 0x7FFF57F95538, 0x2)\t\t = 0 0\r\n98193/0xff925:     14361       5      3 open(\"/usr/local/opt/icu4c/lib/libicuuc.59.dylib\\0\", 0x0, 0x0)\t\t = 3 0\r\n98193/0xff925:     14364       5      2 pread(0x3, \"\\317\\372\\355\\376\\a\\0\", 0x1000, 0x0)\t\t = 4096 0\r\n98193/0xff925:     14384      18     16 mmap(0x1094C7000, 0x103000, 0x5, 0x12, 0x3, 0x0)\t\t = 0x1094C7000 0\r\n98193/0xff925:     14387       4      2 mmap(0x1095CA000, 0x12000, 0x3, 0x12, 0x3, 0x103000)\t\t = 0x1095CA000 0\r\n98193/0xff925:     14389       4      2 mmap(0x1095DD000, 0x58EA4, 0x1, 0x12, 0x3, 0x115000)\t\t = 0x1095DD000 0\r\n98193/0xff925:     14398       3      1 close(0x3)\t\t = 0 0\r\n98193/0xff925:     14404       5      4 stat64(\"/usr/local/opt/icu4c/lib/libicudata.59.1.dylib\\0\", 0x7FFF57F95538, 0x1)\t\t = 0 0\r\n98193/0xff925:     14409       4      3 open(\"/usr/local/opt/icu4c/lib/libicudata.59.1.dylib\\0\", 0x0, 0x0)\t\t = 3 0\r\n98193/0xff925:     14412       5      2 pread(0x3, \"\\317\\372\\355\\376\\a\\0\", 0x1000, 0x0)\t\t = 4096 0\r\n98193/0xff925:     14433      19     17 mmap(0x109636000, 0x1914000, 0x5, 0x12, 0x3, 0x0)\t\t = 0x109636000 0\r\n98193/0xff925:     14435       4      1 mmap(0x10AF4A000, 0x60, 0x1, 0x12, 0x3, 0x1914000)\t\t = 0x10AF4A000 0\r\n98193/0xff925:     14445       3      1 close(0x3)\t\t = 0 0\r\n98193/0xff925:     14452       7      5 stat64(\"/usr/local/opt/icu4c/lib/libicuio.59.dylib\\0\", 0x7FFF57F95538, 0x1)\t\t = 0 0\r\n98193/0xff925:     14458       5      3 open(\"/usr/local/opt/icu4c/lib/libicuio.59.dylib\\0\", 0x0, 0x0)\t\t = 3 0\r\n98193/0xff925:     14460       4      2 pread(0x3, \"\\317\\372\\355\\376\\a\\0\", 0x1000, 0x0)\t\t = 4096 0\r\n98193/0xff925:     14483      21     19 mmap(0x108DBF000, 0x9000, 0x5, 0x12, 0x3, 0x0)\t\t = 0x108DBF000 0\r\n98193/0xff925:     14486       4      2 mmap(0x108DC8000, 0x2000, 0x3, 0x12, 0x3, 0x9000)\t\t = 0x108DC8000 0\r\n98193/0xff925:     14488       4      1 mmap(0x108DCA000, 0x3DA0, 0x1, 0x12, 0x3, 0xB000)\t\t = 0x108DCA000 0\r\n98193/0xff925:     14497       3      1 close(0x3)\t\t = 0 0\r\n98193/0xff925:     14509       3      1 stat64(\"/\\0\", 0x7FFF57F93780, 0x1)\t\t = 0 0\r\n98193/0xff925:     14518       6      4 getattrlist(\"/usr\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14521       4      2 getattrlist(\"/usr/local\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14524       3      2 getattrlist(\"/usr/local/opt\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14527       4      2 getattrlist(\"/usr/local/opt/icu4c\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14529       4      1 readlink(\"/usr/local/opt/icu4c\\0\", 0x7FFF57F94490, 0x3FF)\t\t = 22 0\r\n98193/0xff925:     14532       4      2 getattrlist(\"/usr/local/Cellar\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14535       4      2 getattrlist(\"/usr/local/Cellar/icu4c\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14538       4      2 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14541       3      2 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1/lib\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14544       4      2 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1/lib/libicui18n.59.dylib\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14546       2      1 readlink(\"/usr/local/Cellar/icu4c/59.1_1/lib/libicui18n.59.dylib\\0\", 0x7FFF57F94490, 0x3FF)\t = 21 0\r\n98193/0xff925:     14549       4      2 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1/lib/libicui18n.59.1.dylib\\0\", 0x114ED1364, 0x7FFF57F95090)\t\t = 0 0\r\n98193/0xff925:     14557       6      4 stat64(\"/usr/local/opt/icu4c/lib/libicudata.59.dylib\\0\", 0x7FFF57F953C8, 0x7FFF57F95090)\t = 0 0\r\n98193/0xff925:     14563       3      1 getattrlist(\"/usr\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14565       3      2 getattrlist(\"/usr/local\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14567       3      1 getattrlist(\"/usr/local/opt\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14571       4      2 getattrlist(\"/usr/local/opt/icu4c\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14572       3      1 readlink(\"/usr/local/opt/icu4c\\0\", 0x7FFF57F94380, 0x3FF)\t\t = 22 0\r\n98193/0xff925:     14575       3      1 getattrlist(\"/usr/local/Cellar\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14577       4      1 getattrlist(\"/usr/local/Cellar/icu4c\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14579       3      1 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14582       3      2 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1/lib\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14585       4      2 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1/lib/libicuuc.59.dylib\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14587       2      1 readlink(\"/usr/local/Cellar/icu4c/59.1_1/lib/libicuuc.59.dylib\\0\", 0x7FFF57F94380, 0x3FF)\t = 19 0\r\n98193/0xff925:     14590       3      2 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1/lib/libicuuc.59.1.dylib\\0\", 0x114ED1364, 0x7FFF57F94F80)\t\t = 0 0\r\n98193/0xff925:     14596       4      3 stat64(\"/usr/local/opt/icu4c/lib/libicudata.59.dylib\\0\", 0x7FFF57F952B8, 0x7FFF57F94F80)\t = 0 0\r\n98193/0xff925:     14603       3      1 getattrlist(\"/usr\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14605       3      1 getattrlist(\"/usr/local\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14608       3      1 getattrlist(\"/usr/local/opt\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14610       3      1 getattrlist(\"/usr/local/opt/icu4c\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14611       2      1 readlink(\"/usr/local/opt/icu4c\\0\", 0x7FFF57F94470, 0x3FF)\t\t = 22 0\r\n98193/0xff925:     14614       3      1 getattrlist(\"/usr/local/Cellar\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14616       3      1 getattrlist(\"/usr/local/Cellar/icu4c\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14618       3      1 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14621       3      1 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1/lib\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14624       4      2 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1/lib/libicuio.59.dylib\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14625       2      1 readlink(\"/usr/local/Cellar/icu4c/59.1_1/lib/libicuio.59.dylib\\0\", 0x7FFF57F94470, 0x3FF)\t = 19 0\r\n98193/0xff925:     14628       3      2 getattrlist(\"/usr/local/Cellar/icu4c/59.1_1/lib/libicuio.59.1.dylib\\0\", 0x114ED1364, 0x7FFF57F95070)\t\t = 0 0\r\n98193/0xff925:     14634       4      2 stat64(\"/usr/local/opt/icu4c/lib/libicudata.59.dylib\\0\", 0x7FFF57F953A8, 0x7FFF57F95070)\t = 0 0\r\n98193/0xff925:     15262       5      0 madvise(0x1093F8000, 0x2000, 0x5)\t\t = 0 0\r\n98193/0xff925:     22471       9      2 madvise(0x108DA1000, 0x4000, 0x5)\t\t = 0 0\r\n98193/0xff925:     23425      27     20 stat64(\"/usr/lib/libz.dylib\\0\", 0x7FFF57F95658, 0x5)\t\t = 0 0\r\n98193/0xff925:     25263      39     33 socket(0x1E, 0x2, 0x0)\t\t = 3 0\r\n98193/0xff925:     25275      12     10 close(0x3)\t\t = 0 0\r\n98193/0xff925:     26714      13      5 sysctl([CTL_KERN, 8, 0, 0, 0, 0] (2), 0x7FFF57F961E4, 0x7FFF57F961E8, 0x0, 0x0)\t\t = 0 0\r\n98193/0xff925:     29304      12      8 open_nocancel(\"grpc-fork-bug.php\\0\", 0x0, 0x1B6)\t\t = 3 0\r\n98193/0xff925:     29310       3      1 fstat64(0x3, 0x7FFF57F960D8, 0x1B6)\t\t = 0 0\r\n98193/0xff925:     29360     249     49 read_nocancel(0x3, \"<?php \\n\\n$pid = pcntl_fork(); \\n\\nif($pid === -1) { \\n\\techo \\\"error forking\\\\n\\\"; \\n} elseif ($pid) { //parent \\n\\techo \\\"parent: waiting for child...\\\\n\\\"; \\n\\tpcntl_waitpid(0, $status);\\n\\techo \\\"parent: child exited successfully\\\\n\\\"; \\n} elseif ($pid === 0) { //child\\n\\techo\", 0x1000)\t\t = 371 0\r\n98193/0xff925:     29370       3      0 lseek(0x3, 0x0, 0x1)\t\t = 371 0\r\n98193/0xff925:     29377       8      5 open_nocancel(\".\\0\", 0x0, 0x1)\t\t = 4 0\r\n98193/0xff925:     29379       3      1 fstat64(0x4, 0x7FFF57F95C40, 0x1)\t\t = 0 0\r\n98193/0xff925:     29381       4      2 fcntl_nocancel(0x4, 0x32, 0x7FFF57F95E50)\t\t = 0 0\r\n98193/0xff925:     29384       4      1 close_nocancel(0x4)\t\t = 0 0\r\n98193/0xff925:     29387       5      3 stat64(\"/Users/zack.angelo/git/grpc-fork-bug\\0\", 0x7FFF57F95BB0, 0x7FFF57F95E50)\t\t = 0 0\r\n98193/0xff925:     29397       4      2 lstat64(\"/Users/zack.angelo/git/grpc-fork-bug/grpc-fork-bug.php\\0\", 0x7FFF57F958B0, 0x7FFF57F95E50)\t\t = 0 0\r\n98193/0xff925:     29399       2      1 lstat64(\"/Users/zack.angelo/git/grpc-fork-bug\\0\", 0x7FFF57F95780, 0x7FFF57F95E50)\t\t = 0 0\r\n98193/0xff925:     29401       3      1 lstat64(\"/Users/zack.angelo/git\\0\", 0x7FFF57F95650, 0x7FFF57F95E50)\t\t = 0 0\r\n98193/0xff925:     29403       2      1 lstat64(\"/Users/zack.angelo\\0\", 0x7FFF57F95520, 0x7FFF57F95E50)\t\t = 0 0\r\n98193/0xff925:     29404       2      1 lstat64(\"/Users\\0\", 0x7FFF57F953F0, 0x7FFF57F95E50)\t\t = 0 0\r\n98193/0xff925:     29425       4      1 sigaction(0x1B, 0x0, 0x7FFF57F96138)\t\t = 0 0\r\n98193/0xff925:     29426       1      0 sigaction(0x1B, 0x7FFF57F96108, 0x0)\t\t = 0 0\r\n98193/0xff925:     29426       1      0 sigaction(0x1, 0x0, 0x7FFF57F96138)\t\t = 0 0\r\n98193/0xff925:     29427       1      0 sigaction(0x1, 0x7FFF57F96108, 0x0)\t\t = 0 0\r\n98193/0xff925:     29427       1      0 sigaction(0x2, 0x0, 0x7FFF57F96138)\t\t = 0 0\r\n98193/0xff925:     29428       1      0 sigaction(0x2, 0x7FFF57F96108, 0x0)\t\t = 0 0\r\n98193/0xff925:     29428       1      0 sigaction(0x3, 0x0, 0x7FFF57F96138)\t\t = 0 0\r\n98193/0xff925:     29429       1      0 sigaction(0x3, 0x7FFF57F96108, 0x0)\t\t = 0 0\r\n98193/0xff925:     29430       1      0 sigaction(0xF, 0x0, 0x7FFF57F96138)\t\t = 0 0\r\n98193/0xff925:     29431       1      0 sigaction(0xF, 0x7FFF57F96108, 0x0)\t\t = 0 0\r\n98193/0xff925:     29431       1      0 sigaction(0x1E, 0x0, 0x7FFF57F96138)\t\t = 0 0\r\n98193/0xff925:     29432       1      0 sigaction(0x1E, 0x7FFF57F96108, 0x0)\t\t = 0 0\r\n98193/0xff925:     29432       1      0 sigaction(0x1F, 0x0, 0x7FFF57F96138)\t\t = 0 0\r\n98193/0xff925:     29432       1      0 sigaction(0x1F, 0x7FFF57F96108, 0x0)\t\t = 0 0\r\n98193/0xff925:     29433       1      0 sigaction(0x1B, 0x7FFF57F96098, 0x0)\t\t = 0 0\r\n98193/0xff925:     29441       2      0 sigprocmask(0x2, 0x7FFF57F960CC, 0x0)\t\t = 0x0 0\r\n98193/0xff925:     29521      10      4 mmap(0x0, 0x10000, 0x3, 0x1002, 0xFFFFFFFF, 0x0)\t\t = 0x10AF6F000 0\r\n98193/0xff925:     30217      10      5 pipe(0x0, 0x10000, 0x3)\t\t = 4 0\r\n98193/0xff925:     30229       3      0 fcntl(0x4, 0x3, 0x0)\t\t = 0 0\r\n98193/0xff925:     30230       2      0 fcntl(0x4, 0x4, 0x4)\t\t = 0 0\r\n98193/0xff925:     30231       1      0 fcntl(0x5, 0x3, 0x0)\t\t = 1 0\r\n98193/0xff925:     30231       1      0 fcntl(0x5, 0x4, 0x5)\t\t = 0 0\r\n98193/0xff925:     30243       4      2 close(0x4)\t\t = 0 0\r\n98193/0xff925:     30244       2      1 close(0x5)\t\t = 0 0\r\n98193/0xff925:     30747      25     20 bsdthread_create(0x109010800, 0x7F814DC719C0, 0x80000)\t\t = 10268672 0\r\n98193/0xffb51:         6      69      0 thread_selfid(0x0, 0x0, 0x0)\t\t = 1047377 0\r\n98193/0xffb51:       102      13      0 gettimeofday(0x7000009CAD58, 0x0, 0x0)\t\t = 0 0\r\n98193/0xff925:     30936       5      2 fstat64(0x0, 0x7FFF57F96060, 0x80000)\t\t = 0 0\r\n98193/0xff925:     30952       2      0 fstat64(0x0, 0x108E72038, 0x80000)\t\t = 0 0\r\n98193/0xff925:     30954       2      0 lseek(0x0, 0x0, 0x1)\t\t = 3311256 0\r\n98193/0xff925:     30956       2      0 fstat64(0x1, 0x7FFF57F96060, 0x1)\t\t = 0 0\r\n98193/0xff925:     30957       1      0 fstat64(0x1, 0x108E72118, 0x1)\t\t = 0 0\r\n98193/0xff925:     30958       1      0 lseek(0x1, 0x0, 0x1)\t\t = 3311256 0\r\n98193/0xff925:     30959       2      0 fstat64(0x2, 0x7FFF57F96060, 0x1)\t\t = 0 0\r\n98193/0xff925:     30960       1      0 fstat64(0x2, 0x108E721F8, 0x1)\t\t = 0 0\r\n98193/0xff925:     30961       1      0 lseek(0x2, 0x0, 0x1)\t\t = 3311256 0\r\n98193/0xff925:     30976      10      8 open_nocancel(\".\\0\", 0x0, 0x1)\t\t = 4 0\r\n98193/0xff925:     30978       2      1 fstat64(0x4, 0x7FFF57F95600, 0x1)\t\t = 0 0\r\n98193/0xff925:     30981       5      2 fcntl_nocancel(0x4, 0x32, 0x7FFF57F95820)\t\t = 0 0\r\n98193/0xff925:     30984       4      2 close_nocancel(0x4)\t\t = 0 0\r\n98193/0xff925:     30988       5      3 stat64(\"/Users/zack.angelo/git/grpc-fork-bug\\0\", 0x7FFF57F95570, 0x7FFF57F95820)\t\t = 0 0\r\n98193/0xff925:     31000       2      0 ioctl(0x3, 0x4004667A, 0x7FFF57F957BC)\t\t = -1 Err#25\r\n98193/0xff925:     31001       1      0 ioctl(0x3, 0x40487413, 0x7FFF57F957C0)\t\t = -1 Err#25\r\n98193/0xff925:     31003       2      1 fstat64(0x3, 0x7FFF57F95830, 0x7FFF57F957C0)\t\t = 0 0\r\n98193/0xff925:     31011      10      7 mmap(0x0, 0x193, 0x1, 0x2, 0x3, 0x0)\t\t = 0x1089B2000 0\r\n98193/0xff925:     31125       8      5 munmap(0x1089B2000, 0x193)\t\t = 0 0\r\n98193/0xff925:     31131       7      5 close_nocancel(0x3)\t\t = 0 0\r\n98193/0xff925:     33667    2512   2495 fork()\t\t = 98238 0\r\n98238/0xffb52:        80:        0:       0 fork()\t\t = 0 0\r\n98238/0xffb52:        80       4      0 thread_selfid(0x0, 0x0, 0x0)\t\t = 1047378 0\r\n98238/0xffb52:        85       6      3 bsdthread_register(0x7FFFD3854080, 0x7FFFD3854070, 0x2000)\t\t = -1 Err#22\r\n98193/0xff925:     33858      15     10 write(0x1, \"parent: waiting for child...\\n\\0\", 0x1D)\t\t = 29 0\r\n98238/0xffb52:       192       3      0 getpid(0x7FFFD3854080, 0x7FFFD3854070, 0x2000)\t\t = 98238 0\r\n98238/0xffb52:       197       4      1 __mac_syscall(0x7FFFD385FC46, 0x4, 0x7FFF57F95578)\t\t = -1 Err#45\r\n98238/0xffb52:       199       3      1 csops(0x17FBE, 0xB, 0x7FFF57F955B8)\t\t = -1 Err#22\r\n98238/0xffb52:       685      14      9 write(0x1, \"child: sleeping for 1s...\\n\\b\\0\", 0x1A)\t\t = 26 0\r\nchild: exiting...\r\n98238/0xffb52:       760 1000905     10 __semwait_signal(0x703, 0x0, 0x1)\t\t = -1 Err#60\r\n98193/0xffb51:       112 1004731      9 psynch_cvwait(0x109236098, 0x100000100, 0x0)\t\t = -1 Err#316\r\n98238/0xffb52:       793     111     16 write(0x1, \"child: exiting...\\n\\0\", 0x12)\t\t = 18 0\r\n98193/0xffb51:       196      75      0 gettimeofday(0x7000009CAD58, 0x0, 0x0)\t\t = 0 0\r\n98238/0xffb52:      1457      71      2 close_nocancel(0x2)\t\t = 0 0\r\n98238/0xffb52:      1480       3      0 close_nocancel(0x1)\t\t = 0 0\r\n98238/0xffb52:      1502       3      0 close_nocancel(0x0)\t\t = 0 0\r\n98238/0xffb52:      2089      16     13 munmap(0x108D96000, 0xB000)\t\t = 0 0\r\n98238/0xffb52:      2093       5      2 munmap(0x108DA1000, 0x1E000)\t\t = 0 0\r\n98238/0xffb52:      2097       6      3 munmap(0x108D57000, 0x3F000)\t\t = 0 0\r\n98238/0xffb52:      2119       4      2 munmap(0x1093E9000, 0xF000)\t\t = 0 0\r\n98238/0xffb52:      2121       3      1 munmap(0x1093F8000, 0xCF000)\t\t = 0 0\r\n98238/0xffb52:      2125       6      4 munmap(0x10928B000, 0x15E000)\t\t = 0 0\r\n98238/0xffb52:      2135       3      1 munmap(0x1095CA000, 0x13000)\t\t = 0 0\r\n98238/0xffb52:      2137       2      0 munmap(0x1095DD000, 0x59000)\t\t = 0 0\r\n98238/0xffb52:      2140       5      3 munmap(0x1094C7000, 0x103000)\t\t = 0 0\r\n98238/0xffb52:      2149       3      1 munmap(0x10AF4A000, 0x1000)\t\t = 0 0\r\n98238/0xffb52:      2154       7      4 munmap(0x109636000, 0x1914000)\t\t = 0 0\r\n98238/0xffb52:      2168       3      1 munmap(0x108DC8000, 0x2000)\t\t = 0 0\r\n98238/0xffb52:      2169       3      0 munmap(0x108DCA000, 0x4000)\t\t = 0 0\r\n98238/0xffb52:      2172       4      2 munmap(0x108DBF000, 0x9000)\t\t = 0 0\r\n98238/0xffb52:      2302       6      2 psynch_cvbroad(0x109236098, 0x100, 0x100)\t\t = 2 0\r\n98193/0xffb51:       207 1005369     10 psynch_cvwait(0x109236098, 0x10100000200, 0x0)\t\t = -1 Err#316\r\n98193/0xffb51:       238      69      0 gettimeofday(0x7000009CAD58, 0x0, 0x0)\t\t = 0 0\r\n98193/0xffb51:       247 1001302      8 psynch_cvwait(0x109236098, 0x20100000300, 0x0)\t\t = -1 Err#316\r\n98193/0xffb51:       286      72      0 gettimeofday(0x7000009CAD58, 0x0, 0x0)\t\t = 0 0\r\n98193/0xffb51:       298 1004393     11 psynch_cvwait(0x109236098, 0x30100000400, 0x0)\t\t = -1 Err#316\r\n98193/0xffb51:       335     139      3 gettimeofday(0x7000009CAD58, 0x0, 0x0)\t\t = 0 0\r\n98193/0xffb51:       347 1002852     10 psynch_cvwait(0x109236098, 0x40100000500, 0x0)\t\t = -1 Err#316\r\n98193/0xffb51:       377      67      9 gettimeofday(0x7000009CAD58, 0x0, 0x0)\t\t = 0 0\r\n^C\r\n98193/0xffb51:       403 1002432     22 psynch_cvwait(0x109236098, 0x50100000600, 0x0)\t\t = -1 Err#316\r\n98193/0xffb51:       442      84      0 gettimeofday(0x7000009CAD58, 0x0, 0x0)\t\t = 0 0\r\n98193/0xff925:     33973 6645911      6 wait4(0x0, 0x7FFF57F95984, 0x0)\t\t = -1 Err#4\r\n98238/0xffb52:      2319 5642539      6 psynch_cvwait(0x1092360C8, 0x100000100, 0x0)\t\t = -1 Err#260\r\n```\r\n\r\n(it basically keeps calling `gettimeofday` and `psynch_cvwait`). \r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13412/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bshaffer": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13410", "title": "Remove src/php/lib in favor of grpc/grpc-php via composer?", "body": "The [`grpc/grpc-php`](https://github.com/grpc/grpc-php) repository no represents the PHP native gRPC library component. So why are those classes still in this repository? The `grpc-php` repo says it's a mirror, but it isn't a true mirror. Wouldn't it make a lot more sense to make this repo pull in the `grpc/grpc-php` package via composer?\r\n\r\nIssues can still be tracked in this repo if you'd like but it would be cleaner and more reliable to keep the code in only one place.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12522", "title": "moves composer into the PHP directory and requires protobuf", "body": "The `composer.json` should not be in the root when the repo is not registered with packagist. Because the subdirectory gets copied over, it makes sense to have the `composer.json` in there.\r\n\r\nAdditionally, because the autoload error is fixed with `google/protobuf`, we should now be requiring that library as a hard dependency in composer, and the users can install the protobuf C extension optionally for better performance.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cauthu": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13384", "title": "deprecate old C-core API for creating server credentials", "body": "PR #12644 introduced new API for creating server credentials. this issue is to track deprecation of the old API as discussed in that PR (https://github.com/grpc/grpc/pull/12644#issuecomment-339404267). the two functions to deprecate:\r\n* `grpc_ssl_server_credentials_create()`\r\n* `grpc_ssl_server_credentials_create_ex()`\r\n\r\ncc @justinburke @jboeuf @markdroth ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/24666138", "body": "wondering if it's better to have an \"options_release()\" function take care of releasing its members?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24666138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24666168", "body": "add comment on who owns the `*certificate_store`?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24666168/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24666206", "body": "the `certificate_store_fetcher` here is a pointer, whereas it is not in `server_credentials` and in `server_security_connector`. it's not clear to me why the difference?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24666206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24818304", "body": "super nit :) remove `it is the caller's responsibility to release the options struct.` because it might not be something that needs to be freed, e.g.,\r\n```options;\r\noptions.x =...;\r\noptions.y =...;\r\ncreate_with_options(&options);\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24818304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24969012", "body": "ah looks like you're going for the approach where the \"create_credentials\" will take ownership of the passed in options, and the \"create_options\" will take ownership of the passed in config?\r\nif so, i have a slight preference for the style where the functions take double pointers, so that they can nullify them once they have taken ownership, e.g.,:\r\n```\r\noptions* create_options(..., grpc_cert_config **config)\r\n{\r\n...\r\noptions->config = *config;\r\n*config = NULL;\r\nreturn options;\r\n}\r\n```\r\nthat way, it's easier to catch callers who erroneously use the config pointer after calling create_options().\r\ndon't know if grpc coding style does that or not.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24969012/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24971376", "body": "i _think_ that usually with this approach, you'll want to do `*o = NULL` somewhere afterwards when it's a success before returning, i.e., so that caller can be assured of something like:\r\n```\r\noptions *o = ...;\r\n... = grpc_ssl_server_credentials_create_with_options(&o);\r\n// if success, then o is now NULL\r\n// if error, then o is intact\r\n```\r\ni'm not sure if grpc code base uses this style or not though.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24971376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24971377", "body": "similar comment as for the `grpc_ssl_server_credentials_create_with_options()` function below....", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24971377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24971399", "body": "with my comment about this style:\r\n```\r\noptions *o = ...;\r\n... = grpc_ssl_server_credentials_create_with_options(&o);\r\n// if success, then o is now NULL\r\n// if error, then o is intact\r\n```\r\nthen here we would do something like:\r\n```\r\ngrpc_server_credentials *ret_creds = grpc_ssl_server_credentials_create_with_options(&options);\r\ngpr_free(options); // assuming that gpr_free() just ignores NULL pointers.... this will work whether grpc_ssl_server_credentials_create_with_options() succeeds or fails\r\nreturn ret_creds;\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24971399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/24971426", "body": "would also want to `gpr_free(cert_config);` before returning... would work in either success or failure, like `gpr_free(options);` would", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24971426/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "beckjin": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13378", "title": "Grpc.Core.RpcException: Status(StatusCode=Unavailable, Detail=\"Endpoint read failed\")", "body": "The service does not automatically connect, free after a period of time, the first call will appear the following error, next to normal.\r\n\r\nThe program is based on.Net Framework, The Grpc.Core version is 1.4.1.\r\n\r\n```\r\nGrpc.Core.RpcException: Status(StatusCode=Unavailable, Detail=\"Endpoint read failed\")\r\n   \u5728 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   \u5728 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   \u5728 Grpc.Core.Internal.AsyncCall`2.UnaryCall(TRequest msg)\r\n   \u5728 Grpc.Core.Calls.BlockingUnaryCall[TRequest,TResponse](CallInvocationDetails`2 call, TRequest req)\r\n   \u5728 Grpc.Core.DefaultCallInvoker.BlockingUnaryCall[TRequest,TResponse](Method`2 method, String host, CallOptions options, TRequest request)\r\n   \u5728 Grpc.Core.Internal.InterceptingCallInvoker.BlockingUnaryCall[TRequest,TResponse](Method`2 method, String host, CallOptions options, TRequest request)\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13378/reactions", "total_count": 2, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 2, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lizan": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13360", "title": "JWT with nbf = 0 considered as BAD_FORMAT", "body": "More context: https://github.com/cloudendpoints/esp/issues/308\r\n\r\nThe [JWT verifier](https://github.com/grpc/grpc/blob/master/src/core/lib/security/credentials/jwt/jwt_verifier.cc#L270) considers 0 as invalid value, but some JWT issuer (Keycloak) include nbf=0 as claims.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ohade": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13355", "title": "Question: Is there a plan to support qos in grpc?", "body": "I previously worked with a system similar to grpc - DDS from rti - and one of their strongest features - for me - is QOS, when a client disconnect for some reason and reconnect he gets the message he missed.\r\nYou can control the window of message he lost and other features around that.\r\nIs it something that grpc supports now? or thinking about supporting in the future?\r\nThanks", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "IDIHTD": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13345", "title": "enum type not serializing", "body": "i work with c# ,i want to replace wfc with grpc ,and i wote an demo,there is an questioin,the enum type not serializing,it bother me,code like this:\r\nhelloRequest.SingleMaHuiEntity = new MaHuiMessage()\r\n            {\r\n                Ma1 = \"ma1\",\r\n                Ma2 = 32,\r\n                Single2Enum = MaHuiMessage.Types.ma2Enum.Ma2Item1,\r\n               \r\n                SingleEnum = MaHuiMessage.Types.ma1Enum.Ma1Item1\r\n            };\r\n var actualText = JsonFormatter.Default.Format(helloRequest);\r\n\r\nthe Single2Enum and SingleEnum are enum type, the actualText not show,i think they not sucessful serialized", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "edgartanaka": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13327", "title": "Segmentation fault in python google cloud libraries", "body": "Please answer these questions before submitting your issue. \r\n \r\n### What version of gRPC and what language are you using?\r\nI'm using Python. We are using several python gcloud libs:\r\ngoogle-api-core==0.1.1\r\ngoogle-auth==1.1.1\r\ngoogle-cloud==0.29.0\r\ngoogle-cloud-bigquery==0.27.0\r\ngoogle-cloud-bigtable==0.28.1\r\ngoogle-cloud-core==0.27.1\r\ngoogle-cloud-datastore==1.4.0\r\ngoogle-cloud-dns==0.28.0\r\ngoogle-cloud-error-reporting==0.28.0\r\ngoogle-cloud-firestore==0.28.0\r\ngoogle-cloud-language==0.31.0\r\ngoogle-cloud-logging==1.4.0\r\ngoogle-cloud-monitoring==0.28.0\r\ngoogle-cloud-pubsub==0.29.0\r\ngoogle-cloud-resource-manager==0.28.0\r\ngoogle-cloud-runtimeconfig==0.28.0\r\ngoogle-cloud-spanner==0.29.0\r\ngoogle-cloud-speech==0.30.0\r\ngoogle-cloud-storage==1.6.0\r\ngoogle-cloud-trace==0.16.0\r\ngoogle-cloud-translate==1.3.0\r\ngoogle-cloud-videointelligence==0.28.0\r\ngoogle-cloud-vision==0.28.0\r\ngoogle-gax==0.15.15\r\ngoogle-resumable-media==0.3.1\r\ngoogleapis-common-protos==1.5.3\r\ngrpc-google-iam-v1==0.11.4\r\ngrpcio==1.7.0\r\n\r\n### What operating system (Linux, Windows, \u2026) and version?\r\n (venv) tanakaed@triage-bot:~/server$  lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 16.04.3 LTS\r\nRelease:        16.04\r\nCodename:       xenial\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n Python info:\r\n`{noformat}\r\n(venv) tanakaed@triage-bot:~/server$ python --version\r\nPython 3.6.2 :: Anaconda, Inc.\r\n(venv) tanakaed@triage-bot:~/server$ conda info\r\nCurrent conda install:\r\n\r\n               platform : linux-64\r\n          conda version : 4.3.27\r\n       conda is private : False\r\n      conda-env version : 4.3.27\r\n    conda-build version : 3.0.23\r\n         python version : 3.6.2.final.0\r\n       requests version : 2.18.4\r\n       root environment : /home/tanakaed/anaconda3  (writable)\r\n    default environment : /home/tanakaed/anaconda3/envs/venv\r\n       envs directories : /home/tanakaed/anaconda3/envs\r\n                          /home/tanakaed/.conda/envs\r\n          package cache : /home/tanakaed/anaconda3/pkgs\r\n                          /home/tanakaed/.conda/pkgs\r\n           channel URLs : https://repo.continuum.io/pkgs/main/linux-64\r\n                          https://repo.continuum.io/pkgs/main/noarch\r\n                          https://repo.continuum.io/pkgs/free/linux-64\r\n                          https://repo.continuum.io/pkgs/free/noarch\r\n                          https://repo.continuum.io/pkgs/r/linux-64\r\n                          https://repo.continuum.io/pkgs/r/noarch\r\n                          https://repo.continuum.io/pkgs/pro/linux-64\r\n                          https://repo.continuum.io/pkgs/pro/noarch\r\n            config file : None\r\n             netrc file : None\r\n           offline mode : False\r\n             user-agent : conda/4.3.27 requests/2.18.4 CPython/3.6.2 Linux/4.10.0-38-generic debian/stretch/sid glibc/2.23    \r\n                UID:GID : 1001:1002\r\n\r\ntanakaed@triage-bot:~$ gcc --version\r\ngcc (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\r\nCopyright (C) 2015 Free Software Foundation, Inc.\r\nThis is free software; see the source for copying conditions.  There is NO\r\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.`\r\n\r\n\r\n \r\n### What did you do?\r\nWe have python code to both publish and pull messages from pubsub. We also have python that interfaces with google datastore and google logging. I don't know which one of these codes is triggering this segmentation fault. My code runs fine for a while but after ~60 mins running and processing some cases, a segfault is raised. \r\nI ran my python script inside gdb and this is what I got:\r\n\r\nThread 9 \"python\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7ffff054a700 (LWP 29398)]\r\ngpr_ref_non_zero (r=0x0) at src/core/lib/support/sync.c:93\r\n93      src/core/lib/support/sync.c: No such file or directory.\r\n(gdb) backtrace\r\n#0  gpr_ref_non_zero (r=0x0) at src/core/lib/support/sync.c:93\r\n#1  0x00007ffff12c8365 in grpc_stream_ref (refcount=<optimized out>) at src/core/lib/transport/transport.c:50\r\n#2  0x00007ffff12f3490 in send_security_metadata (batch=0x7fff8c0820f0, elem=0x7fff8c0821a0, exec_ctx=0x7ffff0549ec0)\r\n    at src/core/lib/security/transport/client_auth_filter.c:216\r\n#3  on_host_checked (exec_ctx=exec_ctx@entry=0x7ffff0549ec0, arg=arg@entry=0x7fff8c0820f0, error=<optimized out>)\r\n    at src/core/lib/security/transport/client_auth_filter.c:231\r\n#4  0x00007ffff12f396f in auth_start_transport_stream_op_batch (exec_ctx=0x7ffff0549ec0, elem=0x7fff8c0821a0, batch=0x7fff8c0820f0)\r\n    at src/core/lib/security/transport/client_auth_filter.c:316\r\n#5  0x00007ffff1300f68 in waiting_for_pick_batches_resume (elem=<optimized out>, elem=<optimized out>, exec_ctx=0x7ffff0549ec0)\r\n    at src/core/ext/filters/client_channel/client_channel.c:953\r\n#6  create_subchannel_call_locked (error=0x0, elem=<optimized out>, exec_ctx=0x7ffff0549ec0)\r\n    at src/core/ext/filters/client_channel/client_channel.c:1016\r\n#7  pick_done_locked (exec_ctx=0x7ffff0549ec0, elem=<optimized out>, error=0x0) at src/core/ext/filters/client_channel/client_channel.c:1042\r\n#8  0x00007ffff12932f3 in grpc_combiner_continue_exec_ctx (exec_ctx=exec_ctx@entry=0x7ffff0549ec0) at src/core/lib/iomgr/combiner.c:259\r\n#9  0x00007ffff129bdf8 in grpc_exec_ctx_flush (exec_ctx=exec_ctx@entry=0x7ffff0549ec0) at src/core/lib/iomgr/exec_ctx.c:93\r\n#10 0x00007ffff129c3c1 in run_closures (exec_ctx=0x7ffff0549ec0, list=...) at src/core/lib/iomgr/executor.c:81\r\n#11 executor_thread (arg=arg@entry=0x5555565d3e00) at src/core/lib/iomgr/executor.c:181\r\n#12 0x00007ffff1285c37 in thread_body (v=<optimized out>) at src/core/lib/support/thd_posix.c:53\r\n#13 0x00007ffff7bc16ba in start_thread (arg=0x7ffff054a700) at pthread_create.c:333\r\n#14 0x00007ffff78f73dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n(gdb) \r\n\r\n \r\n### What did you expect to see?\r\nNo segmentation fault\r\n \r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Rhysol": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13319", "title": "grpc memory leak and connection problem", "body": " My grpc version is  1.7.2 And running my program on centos7. \r\nHere is my demo code: https://github.com/Rhysol/GrpcDemo\r\n1. First ,I send 100k requests to my grpc server. Then I saw my server use almost 22% memory and did not release these memory before client disconnect. And I am sure these request has been responsed. After that I continue send the request  100k every time and did not disconnect from server. I send about 900k requests then my client been killed and the server release the memory .The server used almost 60% memory.\r\n\r\n2. I can run client and server in one system, it runs ok. But when I run client in another centos7 system, it can not connect to server and returns error code 14 and error message 'connect failed'.\r\n\r\nI don't know what's happend and I can't find too much useful information about connection in the grpc document. So I submit this issue.\r\n\r\n  ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13319/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "magick93": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13305", "title": "\"grpc_message\":\"Did not read entire message\"", "body": " \r\n### Should this be an issue in the gRPC issue tracker?\r\n \r\nYes\r\n \r\n\r\n \r\n### What version of gRPC and what language are you using?\r\n I have tried with 1.7.2 and 1.6.1 \r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nUbuntu 17.10\r\n \r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n Have tried with Python 2.7.14 and Python 3.6.3\r\n \r\n### What did you do?\r\n\r\nTried to call a simple grpc method. I can make the equivilant call in Java, and it works perfectly.\r\n\r\n```proto\r\nservice NewChartBasesService {\r\n\trpc ChartRequest (ChartRequestRequestMessage) returns (ChartRequestResponseMessage){}\r\n}\r\n```\r\n\r\nand\r\n```python\r\nchannel = grpc.insecure_channel(\"10.5.0.5:50051\")\r\n\r\n    stub = NewChartBasesService_pb2_grpc.NewChartBasesServiceStub(channel)\r\n\r\n\r\n  \r\n\r\n    crrm = ChartRequestRequestMessage_pb2\r\n    request = crrm.ChartInfo__pb2.ChartInfo(symbol='HELLO', period=1, timesign=1, start=None, end=None)\r\n    response = stub.ChartRequest(request)\r\n\r\n\r\n    print(\"printing results\")\r\n    for ri in response.rate_info:\r\n        print(ri)\r\n\r\n```\r\n\r\n \r\n### What did you expect to see?\r\n I expected to get a result back from the server.\r\n \r\n### What did you see instead?\r\n \r\nHere is the full verbose log:\r\n\r\n```\r\n           \r\nD1108 22:22:12.070899086   13595 ev_posix.c:111]             Using polling engine: poll\r\nD1108 22:22:12.071947506   13595 dns_resolver.c:301]         Using native dns resolver\r\nD1108 22:22:12.072055639   13595 timer_manager.c:82]         Spawn timer thread\r\nI1108 22:22:12.072178672   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.072223668   13595 metadata_array.c:27]        grpc_metadata_array_init(array=0x7fcf990f5c18)\r\nD1108 22:22:12.081615538   13598 timer_generic.c:538]        TIMER CHECK BEGIN: now=6776.681088675 [10] next=9223372036854775807.000000000 [9223372036854775807] tls_min=0 glob_min=0\r\nD1108 22:22:12.081672094   13598 timer_generic.c:452]          .. shard[0]->min_deadline = 1\r\nD1108 22:22:12.081686442   13598 timer_generic.c:393]          .. shard[0]: heap_empty=true\r\nD1108 22:22:12.081697659   13598 timer_generic.c:368]          .. shard[0]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.081710510   13598 timer_generic.c:470]          .. result --> 1, shard[0]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.081722983   13598 timer_generic.c:393]          .. shard[1]: heap_empty=true\r\nD1108 22:22:12.081733894   13598 timer_generic.c:368]          .. shard[1]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.081745142   13598 timer_generic.c:470]          .. result --> 1, shard[1]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.081756354   13598 timer_generic.c:393]          .. shard[2]: heap_empty=true\r\nD1108 22:22:12.081767494   13598 timer_generic.c:368]          .. shard[2]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.081779276   13598 timer_generic.c:470]          .. result --> 1, shard[2]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.081790168   13598 timer_generic.c:393]          .. shard[3]: heap_empty=true\r\nD1108 22:22:12.081799723   13598 timer_generic.c:368]          .. shard[3]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.081810519   13598 timer_generic.c:470]          .. result --> 1, shard[3]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082107160   13598 timer_generic.c:393]          .. shard[4]: heap_empty=true\r\nD1108 22:22:12.082124113   13598 timer_generic.c:368]          .. shard[4]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082136519   13598 timer_generic.c:470]          .. result --> 1, shard[4]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082147685   13598 timer_generic.c:393]          .. shard[5]: heap_empty=true\r\nD1108 22:22:12.082157693   13598 timer_generic.c:368]          .. shard[5]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082168372   13598 timer_generic.c:470]          .. result --> 1, shard[5]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082178563   13598 timer_generic.c:393]          .. shard[6]: heap_empty=true\r\nD1108 22:22:12.082188005   13598 timer_generic.c:368]          .. shard[6]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082198414   13598 timer_generic.c:470]          .. result --> 1, shard[6]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082208346   13598 timer_generic.c:393]          .. shard[7]: heap_empty=true\r\nD1108 22:22:12.082218805   13598 timer_generic.c:368]          .. shard[7]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082230245   13598 timer_generic.c:470]          .. result --> 1, shard[7]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082241254   13598 timer_generic.c:393]          .. shard[8]: heap_empty=true\r\nD1108 22:22:12.082251890   13598 timer_generic.c:368]          .. shard[8]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082262939   13598 timer_generic.c:470]          .. result --> 1, shard[8]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082274617   13598 timer_generic.c:393]          .. shard[9]: heap_empty=true\r\nD1108 22:22:12.082285668   13598 timer_generic.c:368]          .. shard[9]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082296661   13598 timer_generic.c:470]          .. result --> 1, shard[9]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082308105   13598 timer_generic.c:393]          .. shard[10]: heap_empty=true\r\nD1108 22:22:12.082319220   13598 timer_generic.c:368]          .. shard[10]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082330690   13598 timer_generic.c:470]          .. result --> 1, shard[10]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082342219   13598 timer_generic.c:393]          .. shard[11]: heap_empty=true\r\nD1108 22:22:12.082352635   13598 timer_generic.c:368]          .. shard[11]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082363971   13598 timer_generic.c:470]          .. result --> 1, shard[11]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082375114   13598 timer_generic.c:393]          .. shard[12]: heap_empty=true\r\nD1108 22:22:12.082384756   13598 timer_generic.c:368]          .. shard[12]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082395573   13598 timer_generic.c:470]          .. result --> 1, shard[12]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082405802   13598 timer_generic.c:393]          .. shard[13]: heap_empty=true\r\nD1108 22:22:12.082416210   13598 timer_generic.c:368]          .. shard[13]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082426949   13598 timer_generic.c:470]          .. result --> 1, shard[13]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082443146   13598 timer_generic.c:393]          .. shard[14]: heap_empty=true\r\nD1108 22:22:12.082457979   13598 timer_generic.c:368]          .. shard[14]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082472898   13598 timer_generic.c:470]          .. result --> 1, shard[14]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082487983   13598 timer_generic.c:393]          .. shard[15]: heap_empty=true\r\nD1108 22:22:12.082502426   13598 timer_generic.c:368]          .. shard[15]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082538111   13598 timer_generic.c:470]          .. result --> 1, shard[15]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082554404   13598 timer_generic.c:393]          .. shard[16]: heap_empty=true\r\nD1108 22:22:12.082569011   13598 timer_generic.c:368]          .. shard[16]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082584395   13598 timer_generic.c:470]          .. result --> 1, shard[16]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082600018   13598 timer_generic.c:393]          .. shard[17]: heap_empty=true\r\nD1108 22:22:12.082614646   13598 timer_generic.c:368]          .. shard[17]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082629306   13598 timer_generic.c:470]          .. result --> 1, shard[17]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082644052   13598 timer_generic.c:393]          .. shard[18]: heap_empty=true\r\nD1108 22:22:12.082658465   13598 timer_generic.c:368]          .. shard[18]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082673328   13598 timer_generic.c:470]          .. result --> 1, shard[18]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082687068   13598 timer_generic.c:393]          .. shard[19]: heap_empty=true\r\nD1108 22:22:12.082700742   13598 timer_generic.c:368]          .. shard[19]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082714987   13598 timer_generic.c:470]          .. result --> 1, shard[19]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082728283   13598 timer_generic.c:393]          .. shard[20]: heap_empty=true\r\nD1108 22:22:12.082741926   13598 timer_generic.c:368]          .. shard[20]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082756835   13598 timer_generic.c:470]          .. result --> 1, shard[20]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082771376   13598 timer_generic.c:393]          .. shard[21]: heap_empty=true\r\nD1108 22:22:12.082785153   13598 timer_generic.c:368]          .. shard[21]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082799051   13598 timer_generic.c:470]          .. result --> 1, shard[21]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082812917   13598 timer_generic.c:393]          .. shard[22]: heap_empty=true\r\nD1108 22:22:12.082827194   13598 timer_generic.c:368]          .. shard[22]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082841286   13598 timer_generic.c:470]          .. result --> 1, shard[22]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082855067   13598 timer_generic.c:393]          .. shard[23]: heap_empty=true\r\nD1108 22:22:12.082868909   13598 timer_generic.c:368]          .. shard[23]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082882964   13598 timer_generic.c:470]          .. result --> 1, shard[23]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082897455   13598 timer_generic.c:393]          .. shard[24]: heap_empty=true\r\nD1108 22:22:12.082910626   13598 timer_generic.c:368]          .. shard[24]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082924504   13598 timer_generic.c:470]          .. result --> 1, shard[24]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082939111   13598 timer_generic.c:393]          .. shard[25]: heap_empty=true\r\nD1108 22:22:12.082953715   13598 timer_generic.c:368]          .. shard[25]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.082967154   13598 timer_generic.c:470]          .. result --> 1, shard[25]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.082980708   13598 timer_generic.c:393]          .. shard[26]: heap_empty=true\r\nD1108 22:22:12.082994197   13598 timer_generic.c:368]          .. shard[26]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.083007288   13598 timer_generic.c:470]          .. result --> 1, shard[26]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.083022578   13598 timer_generic.c:393]          .. shard[27]: heap_empty=true\r\nD1108 22:22:12.083036132   13598 timer_generic.c:368]          .. shard[27]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.083050055   13598 timer_generic.c:470]          .. result --> 1, shard[27]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.083064169   13598 timer_generic.c:393]          .. shard[28]: heap_empty=true\r\nD1108 22:22:12.083077030   13598 timer_generic.c:368]          .. shard[28]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.083090773   13598 timer_generic.c:470]          .. result --> 1, shard[28]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.083105020   13598 timer_generic.c:393]          .. shard[29]: heap_empty=true\r\nD1108 22:22:12.083118301   13598 timer_generic.c:368]          .. shard[29]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.083133234   13598 timer_generic.c:470]          .. result --> 1, shard[29]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.083147636   13598 timer_generic.c:393]          .. shard[30]: heap_empty=true\r\nD1108 22:22:12.083161539   13598 timer_generic.c:368]          .. shard[30]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.083175347   13598 timer_generic.c:470]          .. result --> 1, shard[30]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.083189231   13598 timer_generic.c:393]          .. shard[31]: heap_empty=true\r\nD1108 22:22:12.083202790   13598 timer_generic.c:368]          .. shard[31]->queue_deadline_cap --> 1010\r\nD1108 22:22:12.083217392   13598 timer_generic.c:470]          .. result --> 1, shard[31]->min_deadline 1 --> 1011, now=10\r\nD1108 22:22:12.083232886   13598 timer_generic.c:564]        TIMER CHECK END: r=1; next=6777.681259568 [1011]\r\nD1108 22:22:12.083248743   13598 timer_manager.c:181]        sleep for a 0.998518086 seconds\r\nI1108 22:22:12.082079797   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.083297098   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.083317735   13595 channel_create.c:88]        grpc_insecure_channel_create(target=10.5.0.5:50051, args=0x7fcf990fa458, reserved=(nil))\r\nD1108 22:22:12.083356566   13595 combiner.c:84]              C:0x2b98f20 create\r\nI1108 22:22:12.083414470   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.083432138   13595 completion_queue.c:417]     grpc_completion_queue_create_internal(completion_type=0, polling_type=0)\r\nI1108 22:22:12.085079846   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085110209   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085122232   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085140031   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085152765   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085164029   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085174147   13595 metadata_array.c:27]        grpc_metadata_array_init(array=0x7fcf9911d348)\r\nI1108 22:22:12.085189035   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085199422   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085210908   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085221519   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085230735   13595 metadata_array.c:27]        grpc_metadata_array_init(array=0x7fcf9911d378)\r\nI1108 22:22:12.085245838   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085256476   13595 completion_queue.c:417]     grpc_completion_queue_create_internal(completion_type=0, polling_type=0)\r\nI1108 22:22:12.085276100   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085303520   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085321160   13595 init.c:168]                 grpc_init(void)\r\nI1108 22:22:12.085362139   13595 call.c:1780]                grpc_call_start_batch(call=0x2b9bd38, ops=0x2b9ca20, nops=6, tag=0x7fcf980c3320, reserved=(nil))\r\nI1108 22:22:12.085375297   13595 call.c:1426]                ops[0]: SEND_INITIAL_METADATA(nil)\r\nI1108 22:22:12.085385328   13595 call.c:1426]                ops[1]: SEND_MESSAGE ptr=0x2b98c10\r\nI1108 22:22:12.085393802   13595 call.c:1426]                ops[2]: SEND_CLOSE_FROM_CLIENT\r\nI1108 22:22:12.085402814   13595 call.c:1426]                ops[3]: RECV_INITIAL_METADATA ptr=0x7fcf9911d348\r\nI1108 22:22:12.085411791   13595 call.c:1426]                ops[4]: RECV_MESSAGE ptr=0x7fcf9d727d90\r\nI1108 22:22:12.085422998   13595 call.c:1426]                ops[5]: RECV_STATUS_ON_CLIENT metadata=0x7fcf9911d378 status=0x7fcf990f98a0 details=0x7fcf990f98a8\r\nI1108 22:22:12.085451645   13595 client_channel.c:1383]      OP[client-channel:0x2b9c3f0]:  SEND_INITIAL_METADATA{key=3a 70 61 74 68 ':path' value=2f 69 6f 2e 70 72 69 63 65 69 6e 73 69 67 68 74 2e 6d 74 34 6d 61 6e 61 67 65 72 2e 4e 65 77 43 68 61 72 74 42 61 73 65 73 53 65 72 76 69 63 65 2f 43 68 61 72 74 52 65 71 75 65 73 74 '/io.priceinsight.mt4manager.NewChartBasesService/ChartRequest', key=3a 61 75 74 68 6f 72 69 74 79 ':authority' value=31 30 2e 35 2e 30 2e 35 3a 35 30 30 35 31 '10.5.0.5:50051'} SEND_MESSAGE:flags=0x00000000:len=22 SEND_TRAILING_METADATA{} RECV_INITIAL_METADATA RECV_MESSAGE RECV_TRAILING_METADATA\r\nD1108 22:22:12.085463969   13595 client_channel.c:1421]      chand=0x2b98df0 calld=0x2b9c410: entering combiner\r\nD1108 22:22:12.085474306   13595 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x2b9c6c0 last=1\r\nD1108 22:22:12.085484898   13595 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=1 time_to_execute_final_list=0\r\nD1108 22:22:12.085494641   13595 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=0x2b9c6c0\r\nD1108 22:22:12.085504236   13595 client_channel.c:298]       chand=0x2b98df0: starting name resolution\r\nD1108 22:22:12.085552335   13595 client_channel.c:1108]      chand=0x2b98df0 calld=0x2b9c410: deferring pick pending resolver result\r\nD1108 22:22:12.085565301   13595 combiner.c:284]             C:0x2b98f20 finish old_state=3\r\nI1108 22:22:12.085577920   13595 init.c:173]                 grpc_shutdown(void)\r\nD1108 22:22:12.085581308   13597 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x2b98a80 last=1\r\nI1108 22:22:12.085608938   13595 completion_queue.c:833]     grpc_completion_queue_next(cq=0x2b9b2a0, deadline=gpr_timespec { tv_sec: 1510132932, tv_nsec: 285604582, clock_type: 1 }, reserved=(nil))\r\nD1108 22:22:12.085614129   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.085635250   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=0x2b98a80\r\nD1108 22:22:12.085655706   13597 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x2b98e40 last=3\r\nI1108 22:22:12.085654726   13599 channel_connectivity.c:38]  grpc_channel_check_connectivity_state(channel=0x2b98d30, try_to_connect=0)\r\nD1108 22:22:12.085664751   13597 combiner.c:284]             C:0x2b98f20 finish old_state=5\r\nD1108 22:22:12.085677411   13599 connectivity_state.c:84]    CONWATCH: 0x2b98e68 client_channel: get IDLE\r\nD1108 22:22:12.085687544   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.085704218   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=0x2b98e40\r\nD1108 22:22:12.085712836   13597 client_channel.c:370]       chand=0x2b98df0: got resolver result: error=\"No Error\"\r\nD1108 22:22:12.085723549   13597 pick_first.c:687]           Pick First 0x7fcf94001470 created.\r\nI1108 22:22:12.085729416   13597 pick_first.c:335]           Pick First 0x7fcf94001470 received update with 1 addresses\r\nI1108 22:22:12.085776068   13597 pick_first.c:416]           Pick First 0x7fcf94001470 created subchannel 0x7fcf94001a70 for address uri ipv4:10.5.0.5:50051\r\nD1108 22:22:12.085789435   13597 client_channel.c:477]       chand=0x2b98df0: resolver result: lb_policy_name=\"pick_first\" (changed), service_config=\"(null)\"\r\nD1108 22:22:12.085800177   13597 client_channel.c:559]       chand=0x2b98df0: initializing new LB policy\r\nD1108 22:22:12.085808176   13597 connectivity_state.c:96]    CONWATCH: 0x7fcf94001510 (null): get IDLE\r\nD1108 22:22:12.085815483   13597 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x2b86840 last=3\r\nD1108 22:22:12.085822948   13597 connectivity_state.c:121]   CONWATCH: 0x7fcf94001510 (null): from IDLE [cur=IDLE] notify=0x7fcf94001548\r\nD1108 22:22:12.085829578   13597 client_channel.c:248]       chand=0x2b98df0: setting connectivity state to IDLE\r\nD1108 22:22:12.085837481   13597 connectivity_state.c:171]   SET: 0x2b98e68 client_channel: IDLE --> IDLE [new_lb+resolver] error=(nil) \"No Error\"\r\nD1108 22:22:12.085844512   13597 combiner.c:284]             C:0x2b98f20 finish old_state=5\r\nD1108 22:22:12.085851633   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.085859308   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=0x2b86840\r\nD1108 22:22:12.085866019   13597 client_channel.c:1092]      chand=0x2b98df0 calld=0x2b9c410: resolver returned, doing pick\r\nD1108 22:22:12.085873073   13597 client_channel.c:940]       chand=0x2b98df0 calld=0x2b9c410: applying service config to call\r\nD1108 22:22:12.085880010   13597 client_channel.c:1178]      chand=0x2b98df0 calld=0x2b9c410: starting pick on lb_policy=0x7fcf94001470\r\nD1108 22:22:12.085889027   13597 connectivity_state.c:121]   CONWATCH: 0x7fcf94001b40 subchannel: from IDLE [cur=IDLE] notify=0x2b9d118\r\nD1108 22:22:12.085898531   13597 connectivity_state.c:171]   SET: 0x7fcf94001b40 subchannel: IDLE --> CONNECTING [state_change] error=(nil) \"No Error\"\r\nD1108 22:22:12.085906071   13597 connectivity_state.c:198]   NOTIFY: 0x7fcf94001b40 subchannel: 0x2b9d118\r\nD1108 22:22:12.086250713   13597 tcp_client_posix.c:321]     CLIENT_CONNECT: ipv4:10.5.0.5:50051: asynchronously connecting fd 0x7fcf940024f0\r\nD1108 22:22:12.086270834   13597 timer_generic.c:248]        TIMER 0x7fcf94002650: SET 6796.685390789 [20016] now 6776.685761027 [15] call 0x7fcf94002678[0x7fcf9bc187f0]\r\nD1108 22:22:12.086281744   13597 timer_generic.c:281]          .. add to shard 22 with queue_deadline_cap=1010 => is_first_timer=false\r\nD1108 22:22:12.086296484   13597 combiner.c:284]             C:0x2b98f20 finish old_state=3\r\nD1108 22:22:12.086306677   13597 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x7fcf940014b0 last=1\r\nD1108 22:22:12.086315346   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.086323664   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=0x7fcf940014b0\r\nD1108 22:22:12.086332680   13597 pick_first.c:469]           Pick First 0x7fcf94001470 connectivity changed. Updating selected: 0; Updating subchannels: 0; Checking 0 index (1 total); State: 1; \r\nD1108 22:22:12.086342928   13597 connectivity_state.c:171]   SET: 0x7fcf94001510 (null): IDLE --> CONNECTING [connecting_changed] error=(nil) \"No Error\"\r\nD1108 22:22:12.086350812   13597 connectivity_state.c:198]   NOTIFY: 0x7fcf94001510 (null): 0x7fcf94001548\r\nD1108 22:22:12.086358411   13597 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x7fcf94001548 last=3\r\nD1108 22:22:12.086368003   13597 connectivity_state.c:121]   CONWATCH: 0x7fcf94001b40 subchannel: from CONNECTING [cur=CONNECTING] notify=0x2b9d118\r\nD1108 22:22:12.086376276   13597 combiner.c:284]             C:0x2b98f20 finish old_state=5\r\nD1108 22:22:12.086406709   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.086418206   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=0x7fcf94001548\r\nD1108 22:22:12.086426461   13597 client_channel.c:262]       chand=0x2b98df0: lb_policy=0x7fcf94001470 state changed to CONNECTING\r\nD1108 22:22:12.086434772   13597 client_channel.c:248]       chand=0x2b98df0: setting connectivity state to CONNECTING\r\nD1108 22:22:12.086443589   13597 connectivity_state.c:171]   SET: 0x2b98e68 client_channel: IDLE --> CONNECTING [lb_changed] error=(nil) \"No Error\"\r\nD1108 22:22:12.086451894   13597 connectivity_state.c:121]   CONWATCH: 0x7fcf94001510 (null): from CONNECTING [cur=CONNECTING] notify=0x7fcf94002838\r\nD1108 22:22:12.086459464   13597 combiner.c:284]             C:0x2b98f20 finish old_state=3\r\nD1108 22:22:12.086485488   13595 tcp_client_posix.c:142]     CLIENT_CONNECT: ipv4:10.5.0.5:50051: on_writable: error=\"No Error\"\r\nD1108 22:22:12.086497308   13595 timer_generic.c:332]        TIMER 0x7fcf94002650: CANCEL pending=true\r\nI1108 22:22:12.086277793   13599 init.c:168]                 grpc_init(void)\r\nD1108 22:22:12.086525982   13595 combiner.c:84]              C:0x2b9d2e0 create\r\nI1108 22:22:12.086540307   13599 completion_queue.c:417]     grpc_completion_queue_create_internal(completion_type=0, polling_type=0)\r\nD1108 22:22:12.086549959   13595 tcp_client_posix.c:104]     CLIENT_CONNECT: ipv4:10.5.0.5:50051: on_alarm: error=\"Cancelled\"\r\nI1108 22:22:12.086589114   13599 channel_connectivity.c:209] grpc_channel_watch_connectivity_state(channel=0x2b98d30, last_observed_state=0, deadline=gpr_timespec { tv_sec: 1510132932, tv_nsec: 286559581, clock_type: 1 }, cq=0x7fcf88002400, tag=0x7fcf980c3250)\r\nD1108 22:22:12.086590347   13595 timer_generic.c:248]        TIMER 0x2b9d680: SET 6796.685390789 [20016] now 6776.686081383 [15] call 0x2b9d6a8[0x7fcf9bc05a40]\r\nD1108 22:22:12.086612688   13595 timer_generic.c:281]          .. add to shard 4 with queue_deadline_cap=1010 => is_first_timer=false\r\nD1108 22:22:12.086623861   13595 timer_generic.c:332]        TIMER 0x2b9d680: CANCEL pending=true\r\nD1108 22:22:12.086643083   13595 combiner.c:84]              C:0x2ba1ec0 create\r\nD1108 22:22:12.086721770   13595 chttp2_transport.c:841]     W:0x2b9e940 CLIENT state IDLE -> WRITING [initial_write]\r\nD1108 22:22:12.086732264   13595 combiner.c:332]             C:0x2ba1ec0 grpc_combiner_execute_finally c=0x2b9e9f0; ac=(nil)\r\nD1108 22:22:12.086737406   13595 combiner.c:161]             C:0x2ba1ec0 grpc_combiner_execute c=0x2b80cb0 last=1\r\nD1108 22:22:12.086746183   13595 chttp2_transport.c:841]     W:0x2b9e940 CLIENT state WRITING -> WRITING+MORE [init]\r\nD1108 22:22:12.086751054   13595 combiner.c:161]             C:0x2b9d2e0 grpc_combiner_execute c=0x2b55330 last=1\r\nD1108 22:22:12.086756015   13595 combiner.c:161]             C:0x2ba1ec0 grpc_combiner_execute c=0x2b9ea68 last=3\r\nD1108 22:22:12.086778884   13595 combiner.c:161]             C:0x2ba1ec0 grpc_combiner_execute c=0x2996f30 last=5\r\nD1108 22:22:12.086785003   13595 connectivity_state.c:171]   SET: 0x7fcf94001b40 subchannel: CONNECTING --> READY [connected] error=(nil) \"No Error\"\r\nD1108 22:22:12.086789792   13595 connectivity_state.c:198]   NOTIFY: 0x7fcf94001b40 subchannel: 0x2b9d118\r\nD1108 22:22:12.086795663   13595 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x7fcf940014b0 last=1\r\nD1108 22:22:12.086801474   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.086806300   13595 combiner.c:239]             C:0x2ba1ec0 maybe_finish_one n=0x2b80cb0\r\nD1108 22:22:12.086810824   13595 combiner.c:332]             C:0x2ba1ec0 grpc_combiner_execute_finally c=0x2b9e9f0; ac=0x2ba1ec0\r\nD1108 22:22:12.086815308   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=9\r\nD1108 22:22:12.086819936   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.086824458   13595 combiner.c:239]             C:0x2ba1ec0 maybe_finish_one n=0x2b9ea68\r\nD1108 22:22:12.086836182   13595 bdp_estimator.c:67]         bdp[ipv4:10.5.0.5:50051]:sched acc=0 est=65536\r\nD1108 22:22:12.086845850   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=7\r\nD1108 22:22:12.086851282   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.086856095   13595 combiner.c:239]             C:0x2ba1ec0 maybe_finish_one n=0x2996f30\r\nD1108 22:22:12.086861347   13595 connectivity_state.c:121]   CONWATCH: 0x2b9eb90 client_transport: from READY [cur=READY] notify=0x2ba2480\r\nD1108 22:22:12.086866047   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=5\r\nD1108 22:22:12.086870657   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=1\r\nD1108 22:22:12.086875410   13595 combiner.c:265]             C:0x2ba1ec0 execute_final[0] c=0x2b9e9f0\r\nD1108 22:22:12.086883899   13595 chttp2_transport.c:841]     W:0x2b9e940 CLIENT state WRITING+MORE -> WRITING [begin writing]\r\nD1108 22:22:12.086888621   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=3\r\nD1108 22:22:12.086895325   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 50 52 49 20 2a 20 48 54 54 50 2f 32 2e 30 0d 0a 0d 0a 53 4d 0d 0a 0d 0a 'PRI * HTTP/2.0....SM....'\r\nD1108 22:22:12.086901946   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 00 00 24 04 00 00 00 00 00 00 02 00 00 00 00 00 03 00 00 00 00 00 04 00 00 ff ff 00 05 00 01 00 0f 00 06 00 00 20 00 fe 03 00 00 00 01 '..$.................................. .......'\r\nD1108 22:22:12.086954507   13595 tcp_posix.c:523]            write: \"No Error\"\r\nD1108 22:22:12.086962935   13595 combiner.c:161]             C:0x2ba1ec0 grpc_combiner_execute c=0x2b9ea40 last=1\r\nD1108 22:22:12.086968821   13595 combiner.c:221]             C:0x2b9d2e0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.086973561   13595 combiner.c:239]             C:0x2b9d2e0 maybe_finish_one n=0x2b55330\r\nD1108 22:22:12.086978216   13595 combiner.c:284]             C:0x2b9d2e0 finish old_state=3\r\nD1108 22:22:12.086982894   13595 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.086987406   13595 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=0x7fcf940014b0\r\nD1108 22:22:12.086992383   13595 pick_first.c:469]           Pick First 0x7fcf94001470 connectivity changed. Updating selected: 0; Updating subchannels: 0; Checking 0 index (1 total); State: 2; \r\nD1108 22:22:12.086998056   13595 connectivity_state.c:171]   SET: 0x7fcf94001510 (null): CONNECTING --> READY [connecting_ready] error=(nil) \"No Error\"\r\nD1108 22:22:12.087002619   13595 connectivity_state.c:198]   NOTIFY: 0x7fcf94001510 (null): 0x7fcf94002838\r\nD1108 22:22:12.087006946   13595 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x7fcf94002838 last=3\r\nI1108 22:22:12.087012223   13595 pick_first.c:573]           Pick First 0x7fcf94001470 selected subchannel 0x7fcf94001a70 (connected 0x2b9d880)\r\nI1108 22:22:12.087022177   13595 pick_first.c:586]           Servicing pending pick with selected subchannel 0x2b9d880\r\nD1108 22:22:12.087027065   13595 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x2b9c500 last=5\r\nD1108 22:22:12.087033177   13595 combiner.c:161]             C:0x2ba1ec0 grpc_combiner_execute c=0x2996f30 last=3\r\nD1108 22:22:12.087037869   13595 combiner.c:284]             C:0x2b98f20 finish old_state=7\r\nD1108 22:22:12.087042673   13595 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.087047247   13595 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=0x7fcf94002838\r\nD1108 22:22:12.087051825   13595 client_channel.c:262]       chand=0x2b98df0: lb_policy=0x7fcf94001470 state changed to READY\r\nD1108 22:22:12.087056600   13595 client_channel.c:248]       chand=0x2b98df0: setting connectivity state to READY\r\nD1108 22:22:12.087061387   13595 connectivity_state.c:171]   SET: 0x2b98e68 client_channel: CONNECTING --> READY [lb_changed] error=(nil) \"No Error\"\r\nD1108 22:22:12.087066358   13595 connectivity_state.c:121]   CONWATCH: 0x7fcf94001510 (null): from READY [cur=READY] notify=0x2b83028\r\nD1108 22:22:12.087071052   13595 combiner.c:284]             C:0x2b98f20 finish old_state=5\r\nD1108 22:22:12.087075665   13595 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.087080096   13595 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=0x2b9c500\r\nD1108 22:22:12.087084511   13595 client_channel.c:1160]      chand=0x2b98df0 calld=0x2b9c410: pick completed asynchronously\r\nD1108 22:22:12.087096753   13595 client_channel.c:983]       chand=0x2b98df0 calld=0x2b9c410: create subchannel_call=0x2ba2e48: error=\"No Error\"\r\nD1108 22:22:12.087102147   13595 client_channel.c:921]       chand=0x2b98df0 calld=0x2b9c410: sending 1 pending batches to subchannel_call=0x2ba2e48\r\nI1108 22:22:12.087115690   13595 http_client_filter.c:305]   OP[http-client:0x2ba2ec0]:  SEND_INITIAL_METADATA{key=3a 70 61 74 68 ':path' value=2f 69 6f 2e 70 72 69 63 65 69 6e 73 69 67 68 74 2e 6d 74 34 6d 61 6e 61 67 65 72 2e 4e 65 77 43 68 61 72 74 42 61 73 65 73 53 65 72 76 69 63 65 2f 43 68 61 72 74 52 65 71 75 65 73 74 '/io.priceinsight.mt4manager.NewChartBasesService/ChartRequest', key=3a 61 75 74 68 6f 72 69 74 79 ':authority' value=31 30 2e 35 2e 30 2e 35 3a 35 30 30 35 31 '10.5.0.5:50051'} SEND_MESSAGE:flags=0x00000000:len=22 SEND_TRAILING_METADATA{} RECV_INITIAL_METADATA RECV_MESSAGE RECV_TRAILING_METADATA\r\nI1108 22:22:12.087140656   13595 connected_channel.c:55]     OP[connected:0x2ba2ef0]:  SEND_INITIAL_METADATA{key=3a 73 63 68 65 6d 65 ':scheme' value=68 74 74 70 'http', key=3a 6d 65 74 68 6f 64 ':method' value=50 4f 53 54 'POST', key=3a 70 61 74 68 ':path' value=2f 69 6f 2e 70 72 69 63 65 69 6e 73 69 67 68 74 2e 6d 74 34 6d 61 6e 61 67 65 72 2e 4e 65 77 43 68 61 72 74 42 61 73 65 73 53 65 72 76 69 63 65 2f 43 68 61 72 74 52 65 71 75 65 73 74 '/io.priceinsight.mt4manager.NewChartBasesService/ChartRequest', key=3a 61 75 74 68 6f 72 69 74 79 ':authority' value=31 30 2e 35 2e 30 2e 35 3a 35 30 30 35 31 '10.5.0.5:50051', key=74 65 'te' value=74 72 61 69 6c 65 72 73 'trailers', key=63 6f 6e 74 65 6e 74 2d 74 79 70 65 'content-type' value=61 70 70 6c 69 63 61 74 69 6f 6e 2f 67 72 70 63 'application/grpc', key=75 73 65 72 2d 61 67 65 6e 74 'user-agent' value=67 72 70 63 2d 70 79 74 68 6f 6e 2f 31 2e 36 2e 30 20 67 72 70 63 2d 63 2f 34 2e 30 2e 30 20 28 6d 61 6e 79 6c 69 6e 75 78 3b 20 63 68 74 74 70 32 3b 20 67 61 72 63 69 61 29 'grpc-python/1.6.0 grpc-c/4.0.0 (manylinux; chttp2; garcia)', key=67 72 70 63 2d 61 63 63 65 70 74 2d 65 6e 63 6f 64 69 6e 67 'grpc-accept-encoding' value=69 64 65 6e 74 69 74 79 2c 64 65 66 6c 61 74 65 2c 67 7a 69 70 'identity,deflate,gzip'} SEND_MESSAGE:flags=0x00000000:len=22 SEND_TRAILING_METADATA{} RECV_INITIAL_METADATA RECV_MESSAGE RECV_TRAILING_METADATA\r\nD1108 22:22:12.098483127   13595 chttp2_transport.c:1524]    perform_stream_op[s=0x2ba33c0]:  SEND_INITIAL_METADATA{key=3a 73 63 68 65 6d 65 ':scheme' value=68 74 74 70 'http', key=3a 6d 65 74 68 6f 64 ':method' value=50 4f 53 54 'POST', key=3a 70 61 74 68 ':path' value=2f 69 6f 2e 70 72 69 63 65 69 6e 73 69 67 68 74 2e 6d 74 34 6d 61 6e 61 67 65 72 2e 4e 65 77 43 68 61 72 74 42 61 73 65 73 53 65 72 76 69 63 65 2f 43 68 61 72 74 52 65 71 75 65 73 74 '/io.priceinsight.mt4manager.NewChartBasesService/ChartRequest', key=3a 61 75 74 68 6f 72 69 74 79 ':authority' value=31 30 2e 35 2e 30 2e 35 3a 35 30 30 35 31 '10.5.0.5:50051', key=74 65 'te' value=74 72 61 69 6c 65 72 73 'trailers', key=63 6f 6e 74 65 6e 74 2d 74 79 70 65 'content-type' value=61 70 70 6c 69 63 61 74 69 6f 6e 2f 67 72 70 63 'application/grpc', key=75 73 65 72 2d 61 67 65 6e 74 'user-agent' value=67 72 70 63 2d 70 79 74 68 6f 6e 2f 31 2e 36 2e 30 20 67 72 70 63 2d 63 2f 34 2e 30 2e 30 20 28 6d 61 6e 79 6c 69 6e 75 78 3b 20 63 68 74 74 70 32 3b 20 67 61 72 63 69 61 29 'grpc-python/1.6.0 grpc-c/4.0.0 (manylinux; chttp2; garcia)', key=67 72 70 63 2d 61 63 63 65 70 74 2d 65 6e 63 6f 64 69 6e 67 'grpc-accept-encoding' value=69 64 65 6e 74 69 74 79 2c 64 65 66 6c 61 74 65 2c 67 7a 69 70 'identity,deflate,gzip'} SEND_MESSAGE:flags=0x00000000:len=22 SEND_TRAILING_METADATA{} RECV_INITIAL_METADATA RECV_MESSAGE RECV_TRAILING_METADATA\r\nD1108 22:22:12.098537808   13595 combiner.c:161]             C:0x2ba1ec0 grpc_combiner_execute c=0x2b9c6c0 last=5\r\nD1108 22:22:12.098558022   13595 combiner.c:284]             C:0x2b98f20 finish old_state=5\r\nD1108 22:22:12.098575829   13595 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.098588922   13595 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.098600039   13595 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.098621256   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.098647880   13595 combiner.c:239]             C:0x2ba1ec0 maybe_finish_one n=0x2b9ea40\r\nD1108 22:22:12.098662794   13595 chttp2_transport.c:841]     W:0x2b9e940 CLIENT state WRITING -> IDLE [finish writing]\r\nD1108 22:22:12.098679110   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=7\r\nD1108 22:22:12.098696322   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.098710427   13595 combiner.c:239]             C:0x2ba1ec0 maybe_finish_one n=0x2996f30\r\nD1108 22:22:12.098727604   13595 connectivity_state.c:121]   CONWATCH: 0x2b9eb90 client_transport: from READY [cur=READY] notify=0x7fcf940014b0\r\nD1108 22:22:12.098742052   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=5\r\nD1108 22:22:12.098761473   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.098775803   13595 combiner.c:239]             C:0x2ba1ec0 maybe_finish_one n=0x2b9c6c0\r\nD1108 22:22:12.098818995   13595 chttp2_transport.c:1263]    perform_stream_op_locked:  SEND_INITIAL_METADATA{key=3a 73 63 68 65 6d 65 ':scheme' value=68 74 74 70 'http', key=3a 6d 65 74 68 6f 64 ':method' value=50 4f 53 54 'POST', key=3a 70 61 74 68 ':path' value=2f 69 6f 2e 70 72 69 63 65 69 6e 73 69 67 68 74 2e 6d 74 34 6d 61 6e 61 67 65 72 2e 4e 65 77 43 68 61 72 74 42 61 73 65 73 53 65 72 76 69 63 65 2f 43 68 61 72 74 52 65 71 75 65 73 74 '/io.priceinsight.mt4manager.NewChartBasesService/ChartRequest', key=3a 61 75 74 68 6f 72 69 74 79 ':authority' value=31 30 2e 35 2e 30 2e 35 3a 35 30 30 35 31 '10.5.0.5:50051', key=74 65 'te' value=74 72 61 69 6c 65 72 73 'trailers', key=63 6f 6e 74 65 6e 74 2d 74 79 70 65 'content-type' value=61 70 70 6c 69 63 61 74 69 6f 6e 2f 67 72 70 63 'application/grpc', key=75 73 65 72 2d 61 67 65 6e 74 'user-agent' value=67 72 70 63 2d 70 79 74 68 6f 6e 2f 31 2e 36 2e 30 20 67 72 70 63 2d 63 2f 34 2e 30 2e 30 20 28 6d 61 6e 79 6c 69 6e 75 78 3b 20 63 68 74 74 70 32 3b 20 67 61 72 63 69 61 29 'grpc-python/1.6.0 grpc-c/4.0.0 (manylinux; chttp2; garcia)', key=67 72 70 63 2d 61 63 63 65 70 74 2d 65 6e 63 6f 64 69 6e 67 'grpc-accept-encoding' value=69 64 65 6e 74 69 74 79 2c 64 65 66 6c 61 74 65 2c 67 7a 69 70 'identity,deflate,gzip'} SEND_MESSAGE:flags=0x00000000:len=22 SEND_TRAILING_METADATA{} RECV_INITIAL_METADATA RECV_MESSAGE RECV_TRAILING_METADATA; on_complete = 0x2ba3050\r\nI1108 22:22:12.098846764   13595 chttp2_transport.c:1245]    HTTP:0:HDR:CLI: :scheme: http\r\nI1108 22:22:12.098860479   13595 chttp2_transport.c:1245]    HTTP:0:HDR:CLI: :method: POST\r\nI1108 22:22:12.098873366   13595 chttp2_transport.c:1245]    HTTP:0:HDR:CLI: :path: /io.priceinsight.mt4manager.NewChartBasesService/ChartRequest\r\nI1108 22:22:12.098886778   13595 chttp2_transport.c:1245]    HTTP:0:HDR:CLI: :authority: 10.5.0.5:50051\r\nI1108 22:22:12.098903192   13595 chttp2_transport.c:1245]    HTTP:0:HDR:CLI: te: trailers\r\nI1108 22:22:12.098916576   13595 chttp2_transport.c:1245]    HTTP:0:HDR:CLI: content-type: application/grpc\r\nI1108 22:22:12.098929708   13595 chttp2_transport.c:1245]    HTTP:0:HDR:CLI: user-agent: grpc-python/1.6.0 grpc-c/4.0.0 (manylinux; chttp2; garcia)\r\nI1108 22:22:12.098943903   13595 chttp2_transport.c:1245]    HTTP:0:HDR:CLI: grpc-accept-encoding: identity,deflate,gzip\r\nD1108 22:22:12.098959459   13595 chttp2_transport.c:1047]    HTTP:CLI: Allocating new grpc_chttp2_stream 0x2ba33c0 to id 1\r\nD1108 22:22:12.098973626   13595 combiner.c:161]             C:0x2b9d2e0 grpc_combiner_execute c=0x2b55358 last=1\r\nD1108 22:22:12.098989211   13595 chttp2_transport.c:841]     W:0x2b9e940 CLIENT state IDLE -> WRITING [new_stream]\r\nD1108 22:22:12.099003721   13595 combiner.c:332]             C:0x2ba1ec0 grpc_combiner_execute_finally c=0x2b9e9f0; ac=0x2ba1ec0\r\nD1108 22:22:12.099020631   13595 chttp2_transport.c:841]     W:0x2b9e940 CLIENT state WRITING -> WRITING+MORE [op.send_message]\r\nD1108 22:22:12.099039713   13595 chttp2_transport.c:1113]    complete_closure_step: 0x2ba3050 refs=4 flags=0x0003 desc=op->on_complete err=\"No Error\"\r\nD1108 22:22:12.099053888   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=5\r\nD1108 22:22:12.099068620   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=1\r\nD1108 22:22:12.099082984   13595 combiner.c:265]             C:0x2ba1ec0 execute_final[0] c=0x2b9e9f0\r\nD1108 22:22:12.099099283   13595 writing.c:226]              W:0x2b9e940 CLIENT[1] im-(sent,send)=(0,1) announce=5\r\nD1108 22:22:12.099122359   13595 hpack_encoder.c:417]        Encode: ':path: /io.priceinsight.mt4manager.NewChartBasesService/ChartRequest', elem_interned=0 [2], k_interned=1, v_interned=0\r\nD1108 22:22:12.099150328   13595 chttp2_transport.c:841]     W:0x2b9e940 CLIENT state WRITING+MORE -> WRITING [begin writing]\r\nD1108 22:22:12.145577517   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=3\r\nD1108 22:22:12.145613470   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 00 01 1b 01 04 00 00 00 01 40 07 '.........@.'\r\nD1108 22:22:12.145624954   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 3a 73 63 68 65 6d 65 ':scheme'\r\nD1108 22:22:12.145634347   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 04 '.'\r\nD1108 22:22:12.145644461   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 68 74 74 70 'http'\r\nD1108 22:22:12.145653686   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 40 07 '@.'\r\nD1108 22:22:12.145663328   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 3a 6d 65 74 68 6f 64 ':method'\r\nD1108 22:22:12.145672746   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 04 '.'\r\nD1108 22:22:12.145681996   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 50 4f 53 54 'POST'\r\nD1108 22:22:12.145691190   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 00 05 '..'\r\nD1108 22:22:12.145700476   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 3a 70 61 74 68 ':path'\r\nD1108 22:22:12.145709865   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 3d '='\r\nD1108 22:22:12.145721333   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 2f 69 6f 2e 70 72 69 63 65 69 6e 73 69 67 68 74 2e 6d 74 34 6d 61 6e 61 67 65 72 2e 4e 65 77 43 68 61 72 74 42 61 73 65 73 53 65 72 76 69 63 65 2f 43 68 61 72 74 52 65 71 75 65 73 74 '/io.priceinsight.mt4manager.NewChartBasesService/ChartRequest'\r\nD1108 22:22:12.145732446   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 40 0a '@.'\r\nD1108 22:22:12.145742657   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 3a 61 75 74 68 6f 72 69 74 79 ':authority'\r\nD1108 22:22:12.145753414   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 0e '.'\r\nD1108 22:22:12.145763860   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 31 30 2e 35 2e 30 2e 35 3a 35 30 30 35 31 '10.5.0.5:50051'\r\nD1108 22:22:12.145774653   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 40 02 '@.'\r\nD1108 22:22:12.145783912   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 74 65 'te'\r\nD1108 22:22:12.145792516   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 08 '.'\r\nD1108 22:22:12.145800996   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 74 72 61 69 6c 65 72 73 'trailers'\r\nD1108 22:22:12.145809088   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 40 0c '@.'\r\nD1108 22:22:12.145817390   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 63 6f 6e 74 65 6e 74 2d 74 79 70 65 'content-type'\r\nD1108 22:22:12.145825490   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 10 '.'\r\nD1108 22:22:12.145834735   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 61 70 70 6c 69 63 61 74 69 6f 6e 2f 67 72 70 63 'application/grpc'\r\nD1108 22:22:12.145843706   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 40 0a '@.'\r\nD1108 22:22:12.145852466   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 75 73 65 72 2d 61 67 65 6e 74 'user-agent'\r\nD1108 22:22:12.145860946   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 3a ':'\r\nD1108 22:22:12.145871465   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 67 72 70 63 2d 70 79 74 68 6f 6e 2f 31 2e 36 2e 30 20 67 72 70 63 2d 63 2f 34 2e 30 2e 30 20 28 6d 61 6e 79 6c 69 6e 75 78 3b 20 63 68 74 74 70 32 3b 20 67 61 72 63 69 61 29 'grpc-python/1.6.0 grpc-c/4.0.0 (manylinux; chttp2; garcia)'\r\nD1108 22:22:12.145882841   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 40 14 '@.'\r\nD1108 22:22:12.145894246   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 67 72 70 63 2d 61 63 63 65 70 74 2d 65 6e 63 6f 64 69 6e 67 'grpc-accept-encoding'\r\nD1108 22:22:12.145903756   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 15 '.'\r\nD1108 22:22:12.145913168   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 69 64 65 6e 74 69 74 79 2c 64 65 66 6c 61 74 65 2c 67 7a 69 70 'identity,deflate,gzip'\r\nD1108 22:22:12.145922849   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 00 00 04 08 00 00 00 00 01 00 00 00 05 00 00 '...............'\r\nD1108 22:22:12.145931720   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 1b 00 01 00 00 00 01 00 00 00 00 16 '............'\r\nD1108 22:22:12.145941144   13595 tcp_posix.c:491]            WRITE 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 0a 06 45 55 52 55 53 44 18 b0 ae 8f a5 05 20 b0 d2 b7 b5 05 28 01 '..EURUSD...... .....(.'\r\nD1108 22:22:12.098636805   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146275960   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146287524   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146298342   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146306187   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146313381   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146321638   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146329516   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146334268   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146339684   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146346433   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146353217   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146358036   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146364289   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146368812   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146374306   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146379902   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146388849   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146398320   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146407358   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146415399   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146423985   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146432349   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146440182   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146448723   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146457347   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146464391   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146471936   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146479370   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146486294   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146495012   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146502942   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146533421   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146544608   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146553047   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146560035   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146567893   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146576404   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146582931   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146591965   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146598799   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146604194   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146613489   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146621605   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146628090   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146636657   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146643826   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146650993   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146659436   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146667787   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146674656   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146682948   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146690694   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146697793   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146705920   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146715077   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146721764   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146729705   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146740182   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146745453   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146763194   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146798593   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146812791   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146825867   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146839386   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146853180   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146879311   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146897102   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146917539   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146933692   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146947889   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.146961504   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.146975836   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.146989854   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147002927   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147017208   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.147031434   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147044908   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147059115   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.147073896   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147086871   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147100857   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.147115225   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147127987   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147140739   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.147153092   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147164842   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147178883   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.147192938   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147204738   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147217963   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.147230838   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147245194   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147259974   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.147274966   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147289306   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147302856   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.147315485   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147327105   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147340017   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.147352637   13597 combiner.c:239]             C:0x2b98f20 maybe_finish_one n=(nil)\r\nD1108 22:22:12.147364582   13597 combiner.c:199]             C:0x2b98f20 queue_offload\r\nD1108 22:22:12.147377855   13597 combiner.c:221]             C:0x2b98f20 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.087314000   13599 combiner.c:161]             C:0x2b98f20 grpc_combiner_execute c=0x7fcf88001990 last=3\r\nI1108 22:22:12.197575213   13599 completion_queue.c:833]     grpc_completion_queue_next(cq=0x7fcf88002400, deadline=gpr_timespec { tv_sec: 1510132932, tv_nsec: 397562599, clock_type: 1 }, reserved=(nil))\r\nD1108 22:22:12.197657077   13599 resource_quota.c:776]       RQ anonymous_pool_2af8240 ipv4:10.5.0.5:50051: alloc 8192; free_pool -> -8192\r\nD1108 22:22:12.197678372   13599 combiner.c:161]             C:0x2b9d2e0 grpc_combiner_execute c=0x2b55268 last=3\r\nD1108 22:22:12.146785999   13595 tcp_posix.c:523]            write: \"No Error\"\r\nD1108 22:22:12.197707242   13595 combiner.c:161]             C:0x2ba1ec0 grpc_combiner_execute c=0x2b9ea40 last=1\r\nD1108 22:22:12.197723416   13595 combiner.c:221]             C:0x2b9d2e0 grpc_combiner_continue_exec_ctx contended=1 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.197730354   13595 combiner.c:239]             C:0x2b9d2e0 maybe_finish_one n=0x2b55358\r\nD1108 22:22:12.197736908   13595 combiner.c:284]             C:0x2b9d2e0 finish old_state=5\r\nD1108 22:22:12.197743170   13595 combiner.c:221]             C:0x2b9d2e0 grpc_combiner_continue_exec_ctx contended=1 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.197748944   13595 combiner.c:239]             C:0x2b9d2e0 maybe_finish_one n=0x2b55268\r\nD1108 22:22:12.197755425   13595 combiner.c:332]             C:0x2b9d2e0 grpc_combiner_execute_finally c=0x2af8278; ac=0x2b9d2e0\r\nD1108 22:22:12.197761273   13595 combiner.c:284]             C:0x2b9d2e0 finish old_state=5\r\nD1108 22:22:12.197770991   13595 combiner.c:221]             C:0x2b9d2e0 grpc_combiner_continue_exec_ctx contended=1 exec_ctx_ready_to_finish=0 time_to_execute_final_list=1\r\nD1108 22:22:12.197780222   13595 combiner.c:265]             C:0x2b9d2e0 execute_final[0] c=0x2af8278\r\nD1108 22:22:12.197790415   13595 resource_quota.c:297]       RQ anonymous_pool_2af8240 ipv4:10.5.0.5:50051: grant alloc 8192 bytes; rq_free_pool -> 9223372036854767615\r\nD1108 22:22:12.197799800   13595 combiner.c:284]             C:0x2b9d2e0 finish old_state=3\r\nD1108 22:22:12.197827348   13595 tcp_posix.c:219]            read: error=\"No Error\"\r\nD1108 22:22:12.197847965   13595 tcp_posix.c:224]            READ 0x2b9d3b0 (peer=ipv4:10.5.0.5:50051): 00 00 18 04 00 00 00 00 00 00 04 00 00 ff ff 00 05 00 01 01 93 00 06 00 00 20 00 fe 03 00 00 00 01 00 00 00 04 01 00 00 00 00 00 00 66 01 05 00 00 00 01 40 07 3a 73 74 61 74 75 73 03 32 30 30 40 0c 63 6f 6e 74 65 6e 74 2d 74 79 70 65 10 61 70 70 6c 69 63 61 74 69 6f 6e 2f 67 72 70 63 00 0b 67 72 70 63 2d 73 74 61 74 75 73 02 31 33 00 0c 67 72 70 63 2d 6d 65 73 73 61 67 65 1b 44 69 64 20 6e 6f 74 20 72 65 61 64 20 65 6e 74 69 72 65 20 6d 65 73 73 61 67 65 '......................... ..................f......@.:status.200@.content-type.application/grpc..grpc-status.13..grpc-message.Did not read entire message'\r\nD1108 22:22:12.197863171   13595 combiner.c:161]             C:0x2ba1ec0 grpc_combiner_execute c=0x2b9ea68 last=3\r\nD1108 22:22:12.197873207   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.197883763   13595 combiner.c:239]             C:0x2ba1ec0 maybe_finish_one n=0x2b9ea40\r\nD1108 22:22:12.197894285   13595 chttp2_transport.c:841]     W:0x2b9e940 CLIENT state WRITING -> IDLE [finish writing]\r\nD1108 22:22:12.197906345   13595 chttp2_transport.c:1113]    complete_closure_step: 0x2ba3050 refs=3 flags=0x0003 desc=send_initial_metadata_finished err=\"No Error\"\r\nD1108 22:22:12.197917133   13595 chttp2_transport.c:1113]    complete_closure_step: 0x2ba3050 refs=2 flags=0x0003 desc=finish_write_cb err=\"No Error\"\r\nD1108 22:22:12.197927005   13595 chttp2_transport.c:1113]    complete_closure_step: 0x2ba3050 refs=1 flags=0x0003 desc=send_trailing_metadata_finished err=\"No Error\"\r\nD1108 22:22:12.197941278   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=5\r\nD1108 22:22:12.197952038   13595 combiner.c:221]             C:0x2ba1ec0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=0 time_to_execute_final_list=0\r\nD1108 22:22:12.197960951   13595 combiner.c:239]             C:0x2ba1ec0 maybe_finish_one n=0x2b9ea68\r\nD1108 22:22:12.197974971   13595 frame_settings.c:215]       CHTTP2:CLI:ipv4:10.5.0.5:50051: got setting INITIAL_WINDOW_SIZE = 65535\r\nD1108 22:22:12.197985398   13595 frame_settings.c:215]       CHTTP2:CLI:ipv4:10.5.0.5:50051: got setting MAX_FRAME_SIZE = 65939\r\nD1108 22:22:12.197994709   13595 frame_settings.c:215]       CHTTP2:CLI:ipv4:10.5.0.5:50051: got setting MAX_HEADER_LIST_SIZE = 8192\r\nD1108 22:22:12.198003805   13595 frame_settings.c:215]       CHTTP2:CLI:ipv4:10.5.0.5:50051: got setting GRPC_ALLOW_TRUE_BINARY_METADATA = 1\r\nI1108 22:22:12.198015369   13595 parsing.c:621]              parsing Trailers-Only\r\nI1108 22:22:12.198032911   13595 parsing.c:496]              HTTP:1:TRL:CLI: :status: 32 30 30 '200'\r\nI1108 22:22:12.198049785   13595 parsing.c:496]              HTTP:1:TRL:CLI: content-type: 61 70 70 6c 69 63 61 74 69 6f 6e 2f 67 72 70 63 'application/grpc'\r\nD1108 22:22:12.198064301   13595 hpack_parser.c:656]         Decode: 'grpc-status: 13', elem_interned=0 [2], k_interned=1, v_interned=0\r\nI1108 22:22:12.198075098   13595 parsing.c:496]              HTTP:1:TRL:CLI: grpc-status: 31 33 '13'\r\nD1108 22:22:12.198086337   13595 hpack_parser.c:656]         Decode: 'grpc-message: Did not read entire message', elem_interned=0 [2], k_interned=1, v_interned=0\r\nI1108 22:22:12.198098334   13595 parsing.c:496]              HTTP:1:TRL:CLI: grpc-message: 44 69 64 20 6e 6f 74 20 72 65 61 64 20 65 6e 74 69 72 65 20 6d 65 73 73 61 67 65 'Did not read entire message'\r\nD1108 22:22:12.198119435   13595 chttp2_transport.c:1113]    complete_closure_step: 0x2ba3050 refs=0 flags=0x0003 desc=recv_trailing_metadata_finished err=\"No Error\"\r\nD1108 22:22:12.198140495   13595 call.c:695]                 get_final_status CLI\r\nD1108 22:22:12.198165446   13595 call.c:698]                   1: {\"created\":\"@1510132932.198137263\",\"description\":\"Error received from peer\",\"file\":\"src/core/lib/surface/call.c\",\"file_line\":989,\"grpc_message\":\"Did not read entire message\",\"grpc_status\":13}\r\nI1108 22:22:12.198180951   13595 completion_queue.c:620]     cq_end_op_for_next(exec_ctx=0x7ffd26cda6d0, cq=0x2b9b2a0, tag=0x7fcf980c3320, error=\"No Error\", done=0x7fcf9bc29c90, done_arg=0x2b9c618, storage=0x2b9c620)\r\nD1108 22:22:12.198202981   13595 combiner.c:284]             C:0x2ba1ec0 finish old_state=3\r\nD1108 22:22:12.198214182   13595 resource_quota.c:776]       RQ anonymous_pool_2af8240 ipv4:10.5.0.5:50051: alloc 8192; free_pool -> -8192\r\nD1108 22:22:12.198223860   13595 combiner.c:161]             C:0x2b9d2e0 grpc_combiner_execute c=0x2b55268 last=1\r\nD1108 22:22:12.198234417   13595 combiner.c:221]             C:0x2b9d2e0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=1 time_to_execute_final_list=0\r\nD1108 22:22:12.198243794   13595 combiner.c:239]             C:0x2b9d2e0 maybe_finish_one n=0x2b55268\r\nD1108 22:22:12.198252431   13595 combiner.c:332]             C:0x2b9d2e0 grpc_combiner_execute_finally c=0x2af8278; ac=0x2b9d2e0\r\nD1108 22:22:12.198261200   13595 combiner.c:284]             C:0x2b9d2e0 finish old_state=5\r\nD1108 22:22:12.198305253   13595 combiner.c:221]             C:0x2b9d2e0 grpc_combiner_continue_exec_ctx contended=0 exec_ctx_ready_to_finish=1 time_to_execute_final_list=1\r\nD1108 22:22:12.198320349   13595 combiner.c:265]             C:0x2b9d2e0 execute_final[0] c=0x2af8278\r\nD1108 22:22:12.198335555   13595 resource_quota.c:297]       RQ anonymous_pool_2af8240 ipv4:10.5.0.5:50051: grant alloc 8192 bytes; rq_free_pool -> 9223372036854759423\r\nD1108 22:22:12.198352133   13595 combiner.c:284]             C:0x2b9d2e0 finish old_state=3\r\nI1108 22:22:12.198392592   13595 completion_queue.c:937]     RETURN_EVENT[0x2b9b2a0]: OP_COMPLETE: tag:0x7fcf980c3320 OK\r\nI1108 22:22:12.198432388   13595 metadata_array.c:27]        grpc_metadata_array_init(array=0x7ffd26cda5e0)\r\nI1108 22:22:12\r\n```\r\n### Anything else we should know about your project / environment?\r\n\r\nServer is written in c++", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sigmonsays": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13295", "title": "grpc_cli reflection does not work with proto import public", "body": "\r\n \r\n\r\n \r\n### What version of gRPC and what language are you using?\r\n v1.7.x, specifically v1.7.1-4-g5cf4b44\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n linux\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\nlatest  go-grpc server\r\ngrpc_cli on client\r\n\r\n### What did you do?\r\nmake a grpc_cli call to a TestApi with imports\r\n\r\n```\r\n$ grpc_cli call localhost:5500 api.TestApi.Ping \"Message: 'hi'\"   \r\n[libprotobuf ERROR google/protobuf/descriptor.cc:3457] Invalid proto descriptor for file \"api/service.proto\":\r\n[libprotobuf ERROR google/protobuf/descriptor.cc:3460]   api/service.proto: Import \"api/primitives/primitives.proto\" was not found or had errors.\r\n[libprotobuf ERROR google/protobuf/descriptor.cc:3460]   api/service.proto: Import \"api/session/session.proto\" was not found or had errors.\r\n[libprotobuf ERROR google/protobuf/descriptor.cc:3460]   api.GetConfigResponse.User: \"primitives.User\" seems to be defined in \"api/primitives/primitives.proto\", which is not imported by \"api/service.proto\".  To use it here, please add the necessary import.\r\nMethod name not found\r\n```\r\n\r\nHowever if I make the call with the appropriate --protofiles and --proto_path flags, everything works. It \r\nappears reflection does not work with \"import public\" statements.\r\n\r\n```\r\n$ grpc_cli call --proto_path=$PROTO_PATH --protofiles=api/service.proto  localhost:5500 api.TestApi.Ping \"Message: 'hi'\"   \r\nconnecting to localhost:5500\r\nMessage: \"hi\"\r\n\r\nRpc succeeded with OK status\r\n```\r\n\r\n### What did you expect to see?\r\n grpc_cli should be capable of using reflection with import\r\n \r\n### What did you see instead?\r\nproto file  include errors\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13295/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "idcmp": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13285", "title": "gprc_php_plugin - Incorrect handling for google.protobuf.Empty", "body": " * libprotoc 3.4.0 (built from master)\r\n* grpc_php_plugin (built from master, using protobuf built above)\r\n\r\nMy example proto, living in `/project/example.proto`:\r\n\r\n```syntax = \"proto3\";\r\npackage example;\r\n\r\nimport \"google/api/annotations.proto\";\r\nimport \"google/protobuf/empty.proto\";\r\n\r\nservice Example {\r\n  rpc Example(google.protobuf.Empty) returns (ExampleResponse) {\r\n    option (google.api.http) = {\r\n      get: \"/testing\"\r\n    };\r\n  }\r\n}\r\n\r\nmessage ExampleResponse {\r\n  string body = 1;\r\n}\r\n```\r\n\r\nThen run (season -I's and plugin path to taste):\r\n\r\n```\r\nprotoc --grpc_out=\"target/src\" \\\r\n                -I ~/protobuf/src \\ \r\n                -I /project \\\r\n                --plugin=protoc-gen-grpc=/usr/bin/grpc_php_plugin \\\r\n                --php_out=\"target/src\" \\\r\n                /project/example.proto\r\n```\r\n\r\nGenerates ExampleClient.php:\r\n\r\n```\r\n     * @param \\Google\\Protobuf\\Empty $argument input argument\r\n     * @param array $metadata metadata\r\n     * @param array $options call options\r\n     */\r\n    public function Example(\\Google\\Protobuf\\Empty $argument,\r\n```\r\n\r\nThis should be `\\Google\\Protobuf\\GPBEmpty`, shouldn't it?\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13285/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dllhlx": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13262", "title": "Can grpc support host or ip whitelist", "body": "As desc as title, can grpc support host or ip whitelist to filter out some incoming requests.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13262/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kopiro": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13258", "title": "Compatibility with Raspberry PI Zero", "body": "Hi,\r\nit seems that the compatibility for the RPI zero is broken.\r\n\r\nAfter some researches, it seems that the broken file is the precompiled download binary (/root/grpc/src/node/extension_binary/node-v57-linux-arm/grpc_node.node).\r\n\r\nThe problem is:\r\n\"illegal hardware instruction\"\r\n\r\n```\r\nroot@kopi:~/otto/ai/node_modules/grpc|master\u26a1\r\n\u21d2  node index.js\r\n[1]    8171 illegal hardware instruction  node index.js\r\n```\r\n\r\n---\r\n\r\nI launched a compilation using `./node_modules/.bin/node-pre-gyp install --build-from-source`, but I think that is a long running task; I'll let you know.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "suhacen": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13249", "title": "Error \"[libprotobuf ERROR google/protobuf/descriptor_database.cc:58] File already exists in database: google/protobuf/descriptor.proto\" when I cross compile helloworld", "body": "I add grpc and protobuf to my yocto project, they are compiled fine, and I also add the helloworld demo under examples/cpp/ to the yotcto build, but when I run  greeter_server and greeter_client on my board,  there is an error:\r\n\r\n`\r\n[libprotobuf ERROR google/protobuf/descriptor_database.cc:58] File already exists in database: google/protobuf/descriptor.proto\r\n[libprotobuf FATAL google/protobuf/descriptor.cc:1394] CHECK failed: generated_database_->Add(encoded_file_descriptor, size):\r\nterminate called after throwing an instance of 'google::protobuf::FatalException'\r\n  what():  CHECK failed: generated_database_->Add(encoded_file_descriptor, size):\r\nAborted (core dumped)\r\n`\r\n\r\nI can't really understand what is the meaning of this error.\r\n\r\nI google a little bit, people said compile grpc and helloworld  statically would fix this issue, so I add try to build the code statically, but it doesn't solve the problem.\r\n\r\nMaybe someone can give me hints so I can move forward. \r\n\r\nThanks!\r\nJ.S.\r\n\r\n\r\nHere is my recipe for grpc:\r\n`DESCRIPTION = \"An RPC library and framework\"\r\nAUTHOR = \"Google Inc.\"\r\nHOMEPAGE = \"http://www.grpc.io\"\r\nLICENSE = \"Apache-2.0\"\r\nLIC_FILES_CHKSUM = \"file://LICENSE;md5=3b83ef96387f14655fc854ddc3c6bd57\"\r\n\r\ninherit autotools-brokensep pkgconfig\r\n\r\nDEPENDS = \"\\\r\n\tprotobuf \\\r\n\tzlib \\\r\n\topenssl \\\r\n\tc-ares \\\r\n\"\r\n\r\nSRC_URI = \"gitsm://github.com/grpc/grpc.git;protocol=http;branch=v1.6.x\"\r\nSRCREV = \"3747ce3803b13fa3273523cf71f51c93239f9363\"\r\n\r\nPR = \"r0\"\r\n\r\nS = \"${WORKDIR}/git\"\r\n\r\n#Fix static library generation\r\n#AR += \"rcs\"\r\nCXXFLAGS += \" -std=c++11 -static\"\r\nOUTDIR = \"${S}/libs/opt/\"\r\n\r\ndo_compile () {\r\n    export GRPC_CROSS_COMPILE=true\r\n    export GRPC_CROSS_AROPTS=\"crs --target=elf32-littlearm\"\r\n    export PROTOBUF_CONFIG_OPTS=\"--host=arm-poky-linux-gnueabi --with-protoc=/usr/local/bin/protoc\"\r\n    export HAS_PKG_CONFIG=false\r\n\texport HAS_SYSTEM_PROTOBUF=false\r\n    export LDXX=\"${CXX}\"\r\n    export LD=\"${CC}\"\r\n    export AR=\"${AR}\"\r\n    export RANLIB=\"${RANLIB}\"\t\t\r\n    #oe_runmake clean\r\n    oe_runmake plugins\r\n    oe_runmake prefix=${exec_prefix} shared static PROTOC_PLUGINS_DIR=\"/usr/local/bin\"\r\n}\r\n\r\ndo_install () {\r\n\toe_runmake prefix=${D}${exec_prefix} install-headers\r\n\r\n\t#oe_libinstall -C ${OUTDIR} -so -a libgpr ${D}${libdir}\r\n\t#oe_libinstall -C ${OUTDIR} -so -a libgrpc ${D}${libdir}\r\n\t#oe_libinstall -C ${OUTDIR} -so -a libgrpc_cronet ${D}${libdir}\r\n\t#oe_libinstall -C ${OUTDIR} -so -a libgrpc_unsecure ${D}${libdir}\r\n\t#oe_libinstall -C ${OUTDIR} -so -a libgrpc++ ${D}${libdir}\r\n\t#oe_libinstall -C ${OUTDIR} -so -a libgrpc++_cronet ${D}${libdir}\r\n\t#oe_libinstall -C ${OUTDIR} -so -a libgrpc++_error_details ${D}${libdir}\r\n\t#oe_libinstall -C ${OUTDIR} -so -a libgrpc++_reflection ${D}${libdir}\r\n\t#oe_libinstall -C ${OUTDIR} -so -a libgrpc++_unsecure ${D}${libdir}\r\n\t\r\n\toe_libinstall -C ${OUTDIR} -a libgpr ${D}${libdir}\r\n\toe_libinstall -C ${OUTDIR} -a libgrpc ${D}${libdir}\r\n\toe_libinstall -C ${OUTDIR} -a libgrpc_cronet ${D}${libdir}\r\n\toe_libinstall -C ${OUTDIR} -a libgrpc_unsecure ${D}${libdir}\r\n\toe_libinstall -C ${OUTDIR} -a libgrpc++ ${D}${libdir}\r\n\toe_libinstall -C ${OUTDIR} -a libgrpc++_cronet ${D}${libdir}\r\n\toe_libinstall -C ${OUTDIR} -a libgrpc++_error_details ${D}${libdir}\r\n\toe_libinstall -C ${OUTDIR} -a libgrpc++_reflection ${D}${libdir}\r\n\toe_libinstall -C ${OUTDIR} -a libgrpc++_unsecure ${D}${libdir}\r\n\r\n\tinstall -d ${D}${libdir}/pkgconfig\r\n\tinstall -m 0644 ${OUTDIR}/pkgconfig/*.pc ${D}${libdir}/pkgconfig/\r\n}\r\n\r\nINSANE_SKIP_${PN} = \"already-stripped rpaths\"\r\n`\r\n\r\n\r\nAnd here is my Makefile for helloworld:\r\n`\r\nHOST_SYSTEM = $(shell uname | cut -f 1 -d_)\r\nSYSTEM ?= $(HOST_SYSTEM)\r\n#CXX = g++\r\nCPPFLAGS += `pkg-config --cflags protobuf grpc grpc++` -static -pthread\r\nCXXFLAGS += -std=c++11\r\nifeq ($(SYSTEM),Darwin)\r\nLDFLAGS += -L/usr/local/lib `pkg-config --libs protobuf grpc++ grpc`\\\r\n           -lgrpc++_reflection\\\r\n           -ldl\r\nelse\r\nLDFLAGS += `pkg-config --libs protobuf grpc++ grpc`\\\r\n           -Wl,--no-as-needed -lgrpc++_reflection -Wl,--as-needed\\\r\n           -ldl -lgrpc -lgrpc++ -lprotobuf -lpthread\r\nendif\r\n\r\nPROTOC = protoc\r\nGRPC_CPP_PLUGIN = grpc_cpp_plugin\r\nGRPC_CPP_PLUGIN_PATH ?= `which $(GRPC_CPP_PLUGIN)`\r\n\r\nPROTOS_PATH = ./protos\r\n\r\nvpath %.proto $(PROTOS_PATH)\r\n\r\nall: system-check greeter_client greeter_server greeter_async_client greeter_async_client2 greeter_async_server\r\n\r\ngreeter_client: helloworld.pb.o helloworld.grpc.pb.o greeter_client.o\r\n\t$(CXX) $^ $(LDFLAGS) -o $@\r\n\r\ngreeter_server: helloworld.pb.o helloworld.grpc.pb.o greeter_server.o\r\n\t$(CXX) $^ $(LDFLAGS) -o $@\r\n\r\ngreeter_async_client: helloworld.pb.o helloworld.grpc.pb.o greeter_async_client.o\r\n\t$(CXX) $^ $(LDFLAGS) -o $@\r\n\r\ngreeter_async_client2: helloworld.pb.o helloworld.grpc.pb.o greeter_async_client2.o\r\n\t$(CXX) $^ $(LDFLAGS) -o $@\r\n\r\ngreeter_async_server: helloworld.pb.o helloworld.grpc.pb.o greeter_async_server.o\r\n\t$(CXX) $^ $(LDFLAGS) -o $@\r\n\r\n.PRECIOUS: %.grpc.pb.cc\r\n%.grpc.pb.cc: %.proto\r\n\t$(PROTOC) -I $(PROTOS_PATH) --grpc_out=. --plugin=protoc-gen-grpc=$(GRPC_CPP_PLUGIN_PATH) $<\r\n\r\n.PRECIOUS: %.pb.cc\r\n%.pb.cc: %.proto\r\n\t$(PROTOC) -I $(PROTOS_PATH) --cpp_out=. $<\r\n\r\nclean:\r\n\trm -f *.o *.pb.cc *.pb.h greeter_client greeter_server greeter_async_client greeter_async_client2 greeter_async_server\r\n\r\n\r\n#The following is to test your system and ensure a smoother experience.\r\n#They are by no means necessary to actually compile a grpc-enabled software.\r\n\r\nPROTOC_CMD = which $(PROTOC)\r\nPROTOC_CHECK_CMD = $(PROTOC) --version | grep -q libprotoc.3\r\nPLUGIN_CHECK_CMD = which $(GRPC_CPP_PLUGIN)\r\nHAS_PROTOC = $(shell $(PROTOC_CMD) > /dev/null && echo true || echo false)\r\nifeq ($(HAS_PROTOC),true)\r\nHAS_VALID_PROTOC = $(shell $(PROTOC_CHECK_CMD) 2> /dev/null && echo true || echo false)\r\nendif\r\nHAS_PLUGIN = $(shell $(PLUGIN_CHECK_CMD) > /dev/null && echo true || echo false)\r\n\r\nSYSTEM_OK = false\r\nifeq ($(HAS_VALID_PROTOC),true)\r\nifeq ($(HAS_PLUGIN),true)\r\nSYSTEM_OK = true\r\nendif\r\nendif\r\n\r\nsystem-check:\r\nifneq ($(HAS_VALID_PROTOC),true)\r\n\t@echo \" DEPENDENCY ERROR\"\r\n\t@echo\r\n\t@echo \"You don't have protoc 3.0.0 installed in your path.\"\r\n\t@echo \"Please install Google protocol buffers 3.0.0 and its compiler.\"\r\n\t@echo \"You can find it here:\"\r\n\t@echo\r\n\t@echo \"   https://github.com/google/protobuf/releases/tag/v3.0.0\"\r\n\t@echo\r\n\t@echo \"Here is what I get when trying to evaluate your version of protoc:\"\r\n\t@echo\r\n\t-$(PROTOC) --version\r\n\t@echo\r\n\t@echo\r\nendif\r\nifneq ($(HAS_PLUGIN),true)\r\n\t@echo \" DEPENDENCY ERROR\"\r\n\t@echo\r\n\t@echo \"You don't have the grpc c++ protobuf plugin installed in your path.\"\r\n\t@echo \"Please install grpc. You can find it here:\"\r\n\t@echo\r\n\t@echo \"   https://github.com/grpc/grpc\"\r\n\t@echo\r\n\t@echo \"Here is what I get when trying to detect if you have the plugin:\"\r\n\t@echo\r\n\t-which $(GRPC_CPP_PLUGIN)\r\n\t@echo\r\n\t@echo\r\nendif\r\nifneq ($(SYSTEM_OK),true)\r\n\t@false\r\nendif`\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13249/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chrisalexander55": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13248", "title": "[Node.js] gRPC Map<string, string> Results in Empty Object", "body": "Please answer these questions before submitting your issue. \r\n \r\n### Should this be an issue in the gRPC issue tracker?\r\nYes\r\n \r\n### What version of gRPC and what language are you using?\r\n \"grpc\": \"^1.6.6\",\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\n OSX, Sierra\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n gcc\r\nConfigured with: --prefix=/Library/Developer/CommandLineTools/usr --with-gxx-include-dir=/usr/include/c++/4.2.1\r\nApple LLVM version 9.0.0 (clang-900.0.38)\r\nTarget: x86_64-apple-darwin16.7.0\r\n \r\n### What did you do?\r\nClient reads a Msg protobuf type definition from server. No errors but Msg#map produces an empty {}, not an array of key:value pairs.\r\n\r\n```\r\n.proto\r\nmessage Msg {\r\n  int32 code = 1;\r\n  string text = 2;\r\n  map<string, string> data = 3;\r\n}\r\n```\r\n\r\nClient code:\r\n```\r\nconst map = new Map<string, string>();\r\nif (addr.addr == undefined) return Utils.buildMsg(-1, \"Addr.addr\", map.set(\"\", \"An email address is required.\"));\r\n```\r\n\r\nServer code:\r\n```\r\nthis._client.add(gRpcAddrMsg, (err: any, result: any) => {\r\n          if (err) {\r\n            console.log(err);\r\n            reject(err);\r\n            return;\r\n          }\r\n          else {\r\n            console.log(result);\r\n            resolve(this.addAddr_gRpc_To_Type(result));\r\n          }\r\n        });\r\n\r\nprivate addAddr_gRpc_To_Type(gRpcMsg: any): AddressEntry|Msg {\r\n    if (gRpcMsg.msg != undefined) {\r\n      const msg: Msg = new Msg();\r\n      msg.code = (gRpcMsg.msg.code != undefined) ? gRpcMsg.msg.code : undefined;\r\n      msg.text = (gRpcMsg.msg.text != undefined) ? gRpcMsg.msg.text : undefined;\r\n      msg.data = (gRpcMsg.msg.data != undefined) ? gRpcMsg.msg.data : undefined;\r\n      return msg;\r\n    }\r\n    ...\r\n}\r\n```\r\n### What did you expect to see?\r\n `gRpcMsg.msg.data` should be `Map` containing `\"\", \"An email address is required.\"`\r\n \r\n### What did you see instead?\r\n`gRpcMsg.msg.data = {}` This happens regardless how many key:value pair populate map.\r\nHere is the JSON returned, reflecting the empty map\r\n\r\n```\r\n{\r\n    \"code\": -100,\r\n    \"text\": \"Addr.addr\",\r\n    \"data\": {}\r\n}\r\n```\r\n\r\nMake sure you include information that can help us debug (full error message, exception listing, stack trace, logs).\r\nNone\r\n \r\n### Anything else we should know about your project / environment?\r\nNone\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13248/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "azyobuzin": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13236", "title": "Too many full GCs when receive big responses", "body": "I found that a lot of full GCs are run when the client receives big responses (about 100KB).\r\n\r\nHere is an example code: https://gist.github.com/azyobuzin/7fee0a968a8780fc56b7e8a829c60d9b#file-grpcmemorytest-cs\r\n\r\nIn the example, the client will receive 100KB responses every 0.1 seconds.\r\n\r\nI ran the code, profiling with [CLR Profiler](http://clrprofiler.codeplex.com/). Then I found that full(gen 2) GCs were run about every 3 seconds, and a lot of allocation happened in [`BatchContextSafeHandle.GetReceivedMessage`](https://github.com/grpc/grpc/blob/256333d6b0f452af739f3a72012445174988b793/src/csharp/Grpc.Core/Internal/BatchContextSafeHandle.cs#L79).\r\n\r\n![when GCs happen](https://user-images.githubusercontent.com/1000655/32313756-c4819c46-bfe7-11e7-896a-ec88a41c5caa.png)\r\n\r\n![where allocations happen](https://user-images.githubusercontent.com/1000655/32313871-3d4fb7d4-bfe8-11e7-9535-c514f8fc6b0c.png)\r\n\r\nThe result of profiling: https://gist.github.com/azyobuzin/7fee0a968a8780fc56b7e8a829c60d9b#file-grpcmemorytest-log\r\n\r\nI think the situation where full GCs are run many times is not good. I would suggest it use an object pool, for example `System.Buffers.ArrayPool`.\r\n\r\n### What version of gRPC and what language are you using?\r\ngRPC C# 1.7.1 from NuGet\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nWindows (.NET Framework 4.7)\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13236/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sgreenstein": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13202", "title": "Problem building with Bazel on Windows: \"Cannot open include file ares_config.h\"", "body": "### What version of gRPC and what language are you using?\r\nv1.6.4, C++\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nWindows 10 \r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\nBazel 0.6.1 build system\r\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.00.24215.1 (cl.exe)\r\n \r\n### What did you do?\r\n`bazel build //<target that depends on grpc>`\r\n \r\n### What did you expect to see?\r\n Successful build.\r\n \r\n### What did you see instead?\r\n```\r\nERROR: C:/users/sgreens/appdata/local/temp/_bazel_sgreens/ih0nwrox/external/submodule_cares/BUILD.bazel:10:1: C++ compilation of rule '@submodule_cares//:ares' failed (Exit 2): msvc_cl.bat failed: error executing command\r\n  cd C:/users/sgreens/appdata/local/temp/_bazel_sgreens/ih0nwrox/execroot/myproj\r\n  SET INCLUDE=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\INCLUDE;C:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.10240.0\\ucrt;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um;C:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\shared;C:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\um;C:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\winrt;\r\n    SET LIB=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\LIB\\amd64;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\LIB\\amd64;C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.10240.0\\ucrt\\x64;C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\lib\\um\\x64;C:\\Program Files (x86)\\Windows Kits\\8.1\\lib\\winv6.3\\um\\x64;\r\n    SET PATH=C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\amd64;C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\VCPackages;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Performance Tools\\x64;C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Team Tools\\Performance Tools;C:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x64;C:\\Program Files (x86)\\Windows Kits\\8.1\\bin\\x86;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6.1 Tools\\x64\\;;C:\\WINDOWS\\system32\r\n    SET PWD=/proc/self/cwd\r\n    SET TEMP=C:\\Users\\sgreens\\AppData\\Local\\Temp\r\n    SET TMP=C:\\Users\\sgreens\\AppData\\Local\\Temp\r\n  external/local_config_cc/wrapper/bin/msvc_cl.bat /c external/submodule_cares/cares/ares_create_query.c /Fobazel-out/msvc_x64-fastbuild/bin/external/submodule_cares/_objs/ares/external/submodule_cares/cares/ares_create_query.o /nologo /DCOMPILER_MSVC /DNOMINMAX /D_WIN32_WINNT=0x0600 /D_CRT_SECURE_NO_DEPRECATE /D_CRT_SECURE_NO_WARNINGS /D_SILENCE_STDEXT_HASH_DEPRECATION_WARNINGS /bigobj /Zm500 /J /Gy /GF /EHsc /wd4351 /wd4291 /wd4250 /wd4996 -Xcompilation-mode=fastbuild -DOS_WINDOWS -DUNICODE -D_UNICODE -DGFLAGS_DLL_DECL= -DGFLAGS_DLL_DECLARE_FLAG= -DGFLAGS_DLL_DEFINE_FLAG= -DGOOGLE_GLOG_DLL_DECL= -DGOOGLE_GLOG_IS_A_DLL=1 /Iexternal/submodule_cares /Ibazel-out/msvc_x64-fastbuild/genfiles/external/submodule_cares /Iexternal/bazel_tools /Ibazel-out/msvc_x64-fastbuild/genfiles/external/bazel_tools /Iexternal/submodule_cares /Ibazel-out/msvc_x64-fastbuild/genfiles/external/submodule_cares /Iexternal/submodule_cares/cares /Ibazel-out/msvc_x64-fastbuild/genfiles/external/submodule_cares/cares /Iexternal/bazel_tools/tools/cpp/gcc3 /showIncludes /MT /Od /Z7 -D_GNU_SOURCE -D_HAS_EXCEPTIONS=0 -DNOMINMAX -DHAVE_CONFIG_H /wd4273.\r\nc:\\users\\sgreens\\appdata\\local\\temp\\_bazel_sgreens\\ih0nwrox\\execroot\\myproj\\external\\submodule_cares\\cares\\ares_setup.h(32): fatal error C1083: Cannot open include file: 'ares_config.h': No such file or directory\r\n```", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13202/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13006", "title": "Don't pass -pthread and -std=c99 on Windows.", "body": "These flags are ignored by the MSVC linker, but cause lots of spam in\r\nthe build logs. Add a config_setting in BUILD to enable windows-specific\r\nconfiguration.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13002", "title": "Add windows config_setting for cares", "body": "Don't define HAVE_CONFIG_H on Windows.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shindoknight": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13183", "title": "can't build the example", "body": "I am studying gRPC.!\r\nI am building the example Helloworld for C++ by command make in dir /grpc/examples/cpp/helloworld by it error:\r\nDEPENDENCY ERROR\r\n\r\nYou don't have the grpc c++ protobuf plugin installed in your path.\r\nPlease install grpc. You can find it here:\r\n\r\n   https://github.com/grpc/grpc\r\n\r\nHere is what I get when trying to detect if you have the plugin:\r\n\r\nwhich grpc_cpp_plugin\r\nMakefile:104: recipe for target 'system-check' failed\r\nmake: [system-check] Error 1 (ignored)\r\n\r\n\r\nMakefile:104: recipe for target 'system-check' failed\r\nmake: *** [system-check] Error 1\r\n\r\nhow to fix it?? I tried a lot of way and  have done the correct guide of grpc installation but not successful", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "capone212": {"issues": [{"url": "https://api.github.com/repos/grpc/grpc/issues/13181", "title": "Request for Public Key Pinning and TOFU support", "body": "### What version of gRPC and what language are you using?\r\n C++ gRPC v1.6.6\r\n \r\n### What operating system (Linux, Windows, \u2026) and version?\r\nLinux, Windows\r\n \r\n### What runtime / compiler are you using (e.g. python version or version of gcc)\r\n MSVC, GCC\r\n \r\nCurrent C++ grpc API does not allow to implement public key / certificate pinning on client side.  \r\nOpenSSL has **SSL_CTX_set_verify**  which can be used to implement this. Having such callback would be very nice, because it also can be used to implement another popular concept - TOFU\r\nPlease see also my question in https://groups.google.com/forum/#!topic/grpc-io/hzIFN-F9MDE for more detail about TOFU use-case.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/13181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "stanley-cheung": {"issues": [], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/5b48dc737151464c1d863df6e4318ff3d766ddbc", "message": "Merge pull request #14098 from stanley-cheung/php-smarter-gen-proj\n\nPHP: make generate_projects.sh smarter for package.xml"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/ac3c69b99e88110938c22643d1fc4677b6b56173", "message": "PHP: make generate_projects.sh smarter for package.xml"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "menghanl": {"issues": [], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/63efbc639c084bedfaff13267dddbda1546498a5", "message": "Update go release versions in client_matrix.py"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/2146b3aec114649319314ef4c5b18ca3affb640e", "message": "Add go release versions to client_matrix.py"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "evanj": {"issues": [], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/145b199c4ddcd5e7b985585f3e733ae5092adbbb", "message": "python: Context.abort should fail RPC even for StatusCode.OK\n\ngrpc.ServicerContext.abort is documented to always raise an exception\nto terminate the RPC. The code argument \"must not be StatusCode.OK.\"\nHowever, if you do pass StatusCode.OK, the RPC terminates successfully\non the client side, but returns None.\n\n_server.py: If the user accidentally passes StatusCode.OK, treat it as\n    StatusCode.UNKNOWN. This is what happens if the user accidentally\n    passes something that is not a StatusCode instance. Additionally\n    set details to ''.\n\n_metadata_code_details_test.py: update test to verify the behavior of\n    abort with invalid codes."}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhangkun83": {"issues": [], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/07fb6b521836e27d684361238faddc9fb1b5002a", "message": "Add Java 1.9.0 release to client_matrix.py"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danzh1989": {"issues": [], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/a06720bab85239e34bc42caefd6191284061a311", "message": "format"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e2a6ca835c5163075a11f0c1e78fb98378298eb7", "message": "%zd->%d"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/3742b724c9deac411b51dfc7b1ac6818f61550e3", "message": "change to int type"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/a6efb9cec7a81b6d2a26d1c5466458b432ebfbd9", "message": "fix portability errors"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/9ee9c924d8f23604a8ab78089b1706b5b00e971a", "message": "change to pass in value"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0e50b94b5be32e7bd0bde6fab5ae1997ae9f2464", "message": "Adjust receiv buffer via setsockopt for udp_server's listening socket.\nSince this socket is used for all incoming traffic, its current buffer\n1MB is appearantly too small. Change it to 10 MB for now."}, {"url": "https://api.github.com/repos/grpc/grpc/commits/0c2fc922a62eedf02e0e3ad070685b8265347ec7", "message": "fix data race in shutdown_and_destroy_pollset"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/40ebe9af7f5f5a918b14286ffdebdf55c7f0c74b", "message": "fix typo"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/8fba583796d9480c376cfb0ff7e25fd0ce6fdea0", "message": "fix udp_server_test flakiness"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "y-zeng": {"issues": [], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/77ec6c94ad58bedfdf8f28682914e9893e318be0", "message": "Merge pull request #13950 from y-zeng/backport_13655\n\nBackport PR13599 and PR13655 to v1.8.x"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/32d077e7e18ea0164aaa78cf350a00f429cbadeb", "message": "Merge pull request #13922 from y-zeng/openssl_1_1_0\n\nSilence openssl 1.1.0 warnings"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/6e42c0d33783be4b8eb65955ae8eb5d45f1565cd", "message": "Merge pull request #13934 from murgatroid99/v1.8.4_bump\n\nUpdate version to v1.8.4"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/c6ae9b562bc14780c1b4022e1851a9a843e5e145", "message": "Silence openssl 1.1.0 warnings"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/e33d0272fd5b16521848535a98b6dbc8bd83233a", "message": "Merge pull request #13864 from y-zeng/keepalive_permit_without_calls\n\nSeparate client and server keepalive_permit_without_calls"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/1e522efa411fb27b841c3ac888ca2006ea77a5dd", "message": "Separate client and server keepalive_permit_without_calls"}], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14122", "title": "Backport #13594 to v1.9.x", "body": "The previous implementation is faulty:\r\nAssume we have one active call.\r\n- When it ends, `decrease_call_count` will be invoked,  `gpr_atm_full_fetch_add` decreases `call_count` from 1 to 0.\r\n- At this time, a new call arrives,  `increase_call_count` is called, `gpr_atm_full_fetch_add` sees that `call_count` is 0. It then cancels the timer.\r\n- `decrease_call_count` then continues its operation, and uses `grpc_timer_init` to set up the timer.\r\n\r\nAfter these operations, there is still an active call, but the `max_idle timer` is set. At the time this remaining call ends, it will cause the crash reported in #12257.\r\n\r\nThe new implementation does not cancel `max_idle_timer` (unless the channel is shutting down). Instead, it uses `idle_state` to record if `max_idle_timer` is still valid. If the timer callback is called when the `max_idle_timer` is valid (i.e. `idle_state` is `MAX_IDLE_STATE_TIMER_SET`), the channel will be closed due to idleness, otherwise the channel won't be changed.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13796", "title": "Report more error messages in grpc_cli", "body": "Fixes #10578", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13594", "title": "Refactor max idle filter", "body": "The previous implementation is faulty:\r\nAssume we have one active call.\r\n- When it ends, `decrease_call_count` will be invoked,  `gpr_atm_full_fetch_add` decreases `call_count` from 1 to 0.\r\n- At this time, a new call arrives,  `increase_call_count` is called, `gpr_atm_full_fetch_add` sees that `call_count` is 0. It then cancels the timer.\r\n- `decrease_call_count` then continues its operation, and uses `grpc_timer_init` to set up the timer.\r\n\r\nAfter these operations, there is still an active call, but the `max_idle timer` is set. At the time this remaining call ends, it will cause the crash reported in #12257.\r\n\r\nThe new implementation does not cancel `max_idle_timer` (unless the channel is shutting down). Instead, it uses `idle_state` to record if `max_idle_timer` is still valid. If the timer callback is called when the `max_idle_timer` is valid (i.e. `idle_state` is `MAX_IDLE_STATE_TIMER_SET`), the channel will be closed due to idleness, otherwise the channel won't be changed.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13195", "title": "Per-call thread switch counter", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13113", "title": "Test backup poller with the http2 connector fix", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11934", "title": "Plumb \"not yet seen by server\" bit up from transport layer", "body": "On the client side, chttp2_transport will set GRPC_ERROR_INT_NOT_SEEN_BY_SERVER to 1 in the stream_op_batch closures' error, when it meets one of the following conditions\r\n\r\n- the write of initial metadata is not successful\r\n- the transport receives GOAWAY from the server, and the last stream id in the GOAWAY frame is smaller than the current stream id \r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10506", "title": "Fix the atomic counter for max idle timer", "body": "The previous implementation seems faulty:\r\nAssume we have one active call.\r\n- When it ends, `decrease_call_count` will be invoked,  `gpr_atm_full_fetch_add` decreases `call_count` from 1 to 0.\r\n- At this time, a new call arrives,  `increase_call_count` is called, `gpr_atm_full_fetch_add` sees that `call_count` is 0. It then cancels the timer.\r\n- `decrease_call_count` then continues its operation, and uses `grpc_timer_init` to set up the timer.\r\n\r\nAfter these operations, there is an active call, but the max_idle timer is set.\r\n\r\nThe new implementation turns `call_count` from 2 to 1, which can be seen as a transient state. In this state, no one else can set or cancel the timer (`call_count` is an odd number in this state, the timer can be set or canceled only when `call_count` is 2 or 0).\r\nAfter setting the timer, `decrease_call_count` checks if `call_count` is still 1:\r\n- If it is 1, there's no other active call, and the timer should stay set.\r\n- If it's not 1, someone else may have established a new call, we need to cancel the timer, and try decreasing `call_count` again.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8660", "title": "Single thread token fetching simulation", "body": "Simulate the token fetching process without creating a new thread.", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/244197748", "body": "The no-logging test is added in #7936 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/244197748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "otofune": {"issues": [], "commits": [{"url": "https://api.github.com/repos/grpc/grpc/commits/cc57ab5e08c301150fc3d4470c0694043f731e05", "message": "fix PROTOCOL-HTTP2 to PROTOCOL-HTTP2.md\n\nforget .md"}, {"url": "https://api.github.com/repos/grpc/grpc/commits/1dfd8746d7a474a60271b7cdc7a8c1b182d03298", "message": "Use 'PROTOCOL-HTTP2.md' as 'gRPC over HTTP2' link"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "toanju": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14124", "title": "remove core_stats.h from installed headers", "body": "core_stats.h is installed in a non standard directory and originates\r\nfrom the source directory. Hence this PR removes it from beeing\r\ninstalled.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12820", "title": "check for protobuf 3.4.0", "body": "in case protobuf is installed on the system and pkg-config can be used\r\nthe version check has to be against 3.4.0. Otherwise you run into:\r\n\r\n```\r\n./src/compiler/php_generator_helpers.h: In function \u2018grpc::string grpc_php_generator::GetPHPServiceFilename(const FileDescriptor*, const ServiceDescriptor*, const string&)\u2019:\r\n./src/compiler/php_generator_helpers.h:51:23: error: \u2018const class google::protobuf::FileOptions\u2019 has no member named \u2018has_php_namespace\u2019; did you mean \u2018has_csharp_namespace\u2019?\r\n   if (file->options().has_php_namespace()) {\r\n                       ^~~~~~~~~~~~~~~~~\r\n                       has_csharp_namespace\r\n./src/compiler/php_generator_helpers.h:52:39: error: \u2018const class google::protobuf::FileOptions\u2019 has no member named \u2018php_namespace\u2019; did you mean \u2018csharp_namespace\u2019?\r\n     oss << ReplaceAll(file->options().php_namespace(), \"\\\\\", \"/\");\r\n                                       ^~~~~~~~~~~~~\r\n                                       csharp_namespace\r\nsrc/compiler/php_generator.cc: In function \u2018grpc::string grpc_php_generator::{anonymous}::PackageName(const FileDescriptor*)\u2019:\r\nsrc/compiler/php_generator.cc:47:23: error: \u2018const class google::protobuf::FileOptions\u2019 has no member named \u2018has_php_namespace\u2019; did you mean \u2018has_csharp_namespace\u2019?\r\n   if (file->options().has_php_namespace()) {\r\n                       ^~~~~~~~~~~~~~~~~\r\n                       has_csharp_namespace\r\nsrc/compiler/php_generator.cc:48:28: error: \u2018const class google::protobuf::FileOptions\u2019 has no member named \u2018php_namespace\u2019; did you mean \u2018csharp_namespace\u2019?\r\n     return file->options().php_namespace();\r\n                            ^~~~~~~~~~~~~\r\n                            csharp_namespace\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jakobr-google": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14120", "title": "Add Dart support in interop test suite", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pva": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14064", "title": "Fix /lib/ path for multilib systems", "body": "Multilib allows to run applications built for various ABIs on the same\r\nsystems. For example this requires to keep all amd64 libraries in\r\n/usr/lib64 instead of /usr/lib. This patch adds this possibility.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "chenkan1994": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14023", "title": "fix: generate_cc_impl() presumes all BUILD files were in some subdire\u2026", "body": "### Bug FIxes:\r\n* generate_cc_impl() presumes all BUILD files were in some subdirectory", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hacst": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/14019", "title": "Fix cmake export for grpc", "body": "This patch fixes two issues with the targets exported by the\r\ngrpc cmake build:\r\n\r\n- Install directories are now given relative instead of absolute.\r\n  Previously the exported targets would contain absolute paths to\r\n  their created targets when they should be relative. The actual\r\n  installation location stays the same as cmake automatically\r\n  interprets the paths relative to CMAKE_INSTALL_PREFIX\r\n\r\n- ZLIB and OpenSSL are now linked using targets instead of the\r\n  legacy library variables if possible. Using the legacy paths\r\n  produces absolute paths to those dependencies in the export.\r\n  With this change cmake inserts the target names instead.\r\n\r\nWith these changes no more absolute paths are inserted into the\r\nexport allowing the install location to be used as an artifact\r\nthat can be moved or transfered to another machine and used there.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rongjiecomputer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13963", "title": "[Bazel] Do not use -pthread on Windows", "body": "Doing the same thing as Tensorflow, Protobuf and GoogleTest so that build console output is cleaner.\r\n\r\n- https://github.com/tensorflow/tensorflow/blob/master/tensorflow/BUILD#L108\r\n- https://github.com/google/protobuf/blob/master/BUILD#L32\r\n- https://github.com/google/googletest/blob/master/BUILD.bazel#L39", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bmarkons": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13840", "title": "Ruby: Make user able to instantiate RpcServer with pool_size as string", "body": "This is more convenient for a user since most of the time pool_size is passed from the environment variable which is a string. There is no need to put the burden on a user to do the conversion.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "peterebden": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13821", "title": "Defer import of pkg_resources if / until it is needed.", "body": "`pkg_resources` can be a fairly heavy dependency and, in our setup at least, isn't generally available. It's only actually needed on one code path which is often not executed anyway.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "yihuazhang": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13820", "title": "Rename GTS to ALTS for TSI plugin", "body": "Rename GTS to ALTS (Application Layer Transport Security) for the TSI plugin. There are no functional changes in this PR.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12179", "title": "Add minimum frame size support for fake TSI", "body": "In the current fake TSI implementation, if the caller provided frame size is not NULL, the code will take whatever value that caller provides and use it to set the maximum frame size. It will be problematic if the value is smaller than or equal to the frame header size - 4 bytes. This PR aims to resolve the issue by setting the maximum frame size to be a valid value in the case when the caller provides invalid frame size for it. The default minimum value for max frame size is set to be the same value used in LOAS2. ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12112", "title": "changed shutdown order of iomgr and plugins", "body": "This PR changes the order of iomgr and plugin shutdowns in init.c ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gislan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13779", "title": "Fix the ownership comment on grpc_lb_addresses_set_address() function.", "body": "It does not take ownership of balancer_name since commit\r\n53af23cfbf3b1fd4579ec084dbcb7b89a7ae2e96", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hassox": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13634", "title": "Updates the ruby generator RubyTypeOf to correctly account for underscores in packages", "body": "Prior to this change, when the ruby generator tried to reference an entity that was not part of the same package (or a direct parent package) and the package contains underscores, the result would simply uppercase the first character. It should however uppercase each letter that proceeds an underscore and remove underscores.\r\n\r\ni.e.\r\n\r\n```\r\npackage my_package.service;\r\n\r\nimport \"my_package/data.proto\";\r\n\r\nservice MyService {\r\n  rpc Test (data.Request) returns data.Response {}\r\n}\r\n```\r\n\r\nWas\r\n\r\n```ruby\r\n   # ...\r\n   rpc :Test, My_package::Data::Request, My_package::Data::Response\r\n   # ...\r\n```\r\n\r\nShould be:\r\n\r\n```ruby\r\n   # ...\r\n   rpc :Test, MyPackage::Data::Request, My_package::Data::Response\r\n   # ...\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dhermes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13578", "title": "Adding names to all Python threads created.", "body": "Forgive me for not following protocol and filing an issue first.\r\n\r\nAlso, since \"naming things\" is one of the hard problems in computer science, I fully acknowledge that I may have chosen bad names and am open to suggestions.\r\n\r\nTo give some context, I'm currently debugging the `google-cloud-python` implementation of Pub / Sub, which heavily uses threads (bidirectional streaming is quite complex to implement). To track zombie threads, it's quite helpful to give each thread a name.\r\n\r\n/cc @jonparrott @lukesneeringer", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Kunde21": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13541", "title": "php: Removed opts checks in BaseStub when the elements aren't being used.", "body": "Re-organized the $opts checks in BaseStub constructor, to make channel re-use easier and cleaner.  Channel-specific tests aren't useful when the channel is provided via parameter.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vosst": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13522", "title": "Fix build issue due to missing symbol 'RSA_set0_key' with libressl", "body": "Enable builds against libressl, which:\r\n\r\n - does not have `RSA_set0_key`\r\n - is not recognized by the OPENSSL_VERSION_NUMBER conditional\r\n\r\nI did a fair amount of testing with this patch applied and haven't encountered any problems thus far.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abdulhannanali": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13520", "title": "Correct the link to the Streams Spec Repo", "body": "Streams Specification is being worked on in it's own repository under WHATWG", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "driazati": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13517", "title": "Added support for environments that do not support SO_REUSEPORT", "body": "If an environment does not support SO_REUSEPORT but still disables\r\nthe option via channel arguments, the socket no longer closes.\r\n\r\nThis is mainly to support GRPC on [WSL](https://github.com/Microsoft/WSL) which has [no plans (currently) to support SO_REUSEPORT](https://github.com/Microsoft/WSL/issues/1419). This change will allow these clients to run so long as they disable the `grpc.so_reuseport` option.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sgleizes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13500", "title": "Fix Makefile incorrect shared lib major version for install", "body": "Trivial change to parameterize the soname used when installing libraries.\r\n\r\nFixes #10299 #10942 #11868 #12764", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lipka": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13498", "title": "Objective-C: UTF8 encoding for error messages and metadata values", "body": "We have run into the same issue as mentioned in https://github.com/grpc/grpc/issues/11617. We need to send a localized string from our backend but the Objective-C client coerces the received string to ASCII which breaks some of the extended characters.\r\n\r\nOther clients we tested (such as https://github.com/njpatel/grpcc) seemed to handle this correctly.\r\n\r\nIs this change a good idea or is there some sort of limitation I'm not aware of?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "nicolasnoble": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13370", "title": "Add logic to work around buggy Android NDKs", "body": "Taking #13173 over.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12771", "title": "Adding code for hermetic testing.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12416", "title": "Making c-ares work under Windows.", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8546", "title": "Better JSON number parsing.", "body": "Added some tweaks in the json number parsing to better support valid and invalid cases.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/7631", "title": "Compiling protobuf twice to enable msan in C++, and let cross compilation be a thing.", "body": "This still won't allow us to get msan for C++ just yet, but it gets us one step closer.\n\nThis builds the protobuf submodule twice. Once to build protoc without msan, and once to build the rest (libprotoc and libprotobuf) with msan, and while overriding the protoc with the one we just compiled before.\n\nNow failures lies within the plugins themselves, as they get compiled and linked with msan options.\n\n@tengyifei\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/6249", "title": "Initial memory counter for unary client.", "body": "There's a couple of memory leaks server-side however:\n\n```\n==12456== 40 bytes in 1 blocks are possibly lost in loss record 1 of 2\n==12456==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==12456==    by 0x403BED: guard_malloc (memory_counters.c:59)\n==12456==    by 0x403C35: guard_realloc (memory_counters.c:67)\n==12456==    by 0x4135D0: gpr_realloc (alloc.c:75)\n==12456==    by 0x4AEC9C: add_epoll_fd_to_global_list (ev_poll_and_epoll_posix.c:1490)\n==12456==    by 0x4AF5A3: epoll_become_multipoller (ev_poll_and_epoll_posix.c:1718)\n==12456==    by 0x4AE624: basic_do_promote (ev_poll_and_epoll_posix.c:1080)\n==12456==    by 0x41E49B: grpc_exec_ctx_flush (exec_ctx.c:54)\n==12456==    by 0x4AE09E: pollset_work (ev_poll_and_epoll_posix.c:942)\n==12456==    by 0x41E233: grpc_pollset_work (ev_posix.c:108)\n==12456==    by 0x40A0BA: grpc_completion_queue_next (completion_queue.c:342)\n==12456==    by 0x4039A3: main (memory_server.c:227)\n==12456==\n==12456== 520 bytes in 1 blocks are definitely lost in loss record 2 of 2\n==12456==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==12456==    by 0x403BED: guard_malloc (memory_counters.c:59)\n==12456==    by 0x403C35: guard_realloc (memory_counters.c:67)\n==12456==    by 0x4135D0: gpr_realloc (alloc.c:75)\n==12456==    by 0x406429: publish_app_metadata (call.c:859)\n==12456==    by 0x406588: recv_initial_filter (call.c:885)\n==12456==    by 0x4119B1: grpc_metadata_batch_filter (metadata_batch.c:154)\n==12456==    by 0x406E04: receiving_initial_metadata_ready (call.c:1082)\n==12456==    by 0x40CD8C: server_on_recv_initial_metadata (server.c:718)\n==12456==    by 0x41C70B: hs_on_recv (http_server_filter.c:175)\n==12456==    by 0x41E49B: grpc_exec_ctx_flush (exec_ctx.c:54)\n==12456==    by 0x4AE09E: pollset_work (ev_poll_and_epoll_posix.c:942)\n```\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/5322", "title": "Proof of concept of a bare-metal soc implementation.", "body": "This is more work in progress than anything else, and this doesn't compile yet. There's things to clean up in grpc, for instance, the fact we assume that sockaddr exists in the name resolver.\n\nIdeally, we should be able to link a dummy binary with LWIP-like API calls, and leave that as a build test for Jenkins.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69701377", "body": "Aren't we done with piper ? :-) At that point, this could mark our first plain-github commit.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69701377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69956528", "body": "In fact, don't mind me. I may have overreacted. Smaller GCE instances may be able to run the test after all, it just takes a long time to do so. I'll confirm that in a moment.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69956528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69956699", "body": "Yep, it works nonetheless. Closing this one.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69956699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70209646", "body": "Sure, why not. I simply mass-modified occurrences of map, vector and string, but I can also clean the inclusions a bit.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70209646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70210741", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70210741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70335048", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70335048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70346882", "body": "Careful: your editor is set up to use tabs. This commit introduces a few tabs in some files.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70346882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70347003", "body": "No. Will do this during the week-end :-P\n\nOn Fri, Jan 16, 2015 at 5:01 PM, Craig Tiller notifications@github.com\nwrote:\n\n> Is this dead?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/40#issuecomment-70346824.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70347003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70348772", "body": "You're missing a few other spots :-) My pull request #99 addresses all of the tabs.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70348772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70422554", "body": "LGTM otherwise.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70422554/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70581892", "body": "You'll want to clang-format this too now.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70581892/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71115240", "body": "This is preventing @donnadionne from proceeding with her work.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71115240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71121704", "body": "I'm assigning @ctiller on it, but several pairs of eyes are more than welcome. Especially @jboeuf's.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71121704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133433", "body": "Careful: you modified build.json without regenerating the project files.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133591", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71134459", "body": "Good point. I'll write up some documentation for this.\n\nIn the meantime, what you basically have to do is this:\n\n1) install grpc:\n    --> make && sudo make install\n2) if you're going to use protobuf in your hello world, compile the protoc plugins:\n    -->  make cpp_plugin (note that it's not installed by default by make install - that's a known issue)\n3) compile your protobufs using that plugin:\n    -->  protoc --cpp_out=some/path/out --grpc_out=some/path/out --plugin=protoc-gen-grpc=path/to/cpp_plugin services.proto\n4) compile your code by linking with -lgrpc and -lgrpc++\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71134459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71142152", "body": "Yes, looks good; I don't see any more internal URLs or references.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71142152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71157170", "body": "The codebase already has a clang-format definition file, and that code actually went through it, mind you.\n\nThere are unit tests that are still on my drive, and they are not present because 1) this is indeed pretty big already, and 2) your own json tests are still there, and have been adapted to test this code instead of cJSON: https://github.com/nicolasnoble/grpc/blob/614c2bf99b1865761e5a05a56faf1ad8f26138ff/test/core/security/json_token_test.c\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71157170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/139677018", "body": "\"win32\" is the commonly accepted suffix for anything using the modern (post Windows 3.1) Windows API. It IS in fact the name of the Windows API. Compiling in 64 bits means you have to define both _WIN32 and _WIN64 for it to work.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/139677018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71699873", "body": "Yeah, it doesn't send e-mails when code is updated. I usually ping the PR thread whenever I push an update worthy of re-check.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71699873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133433", "body": "Careful: you modified build.json without regenerating the project files.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133433/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71115240", "body": "This is preventing @donnadionne from proceeding with her work.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71115240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71121704", "body": "I'm assigning @ctiller on it, but several pairs of eyes are more than welcome. Especially @jboeuf's.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71121704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71157170", "body": "The codebase already has a clang-format definition file, and that code actually went through it, mind you.\n\nThere are unit tests that are still on my drive, and they are not present because 1) this is indeed pretty big already, and 2) your own json tests are still there, and have been adapted to test this code instead of cJSON: https://github.com/nicolasnoble/grpc/blob/614c2bf99b1865761e5a05a56faf1ad8f26138ff/test/core/security/json_token_test.c\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71157170/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71572567", "body": "And we have a new version.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71572567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71591752", "body": "Yes, there's tests that exercise most if not all of the code. These few commits are already ~2kloc, I didn't want to add more to it. Let's go on with rounds of comments, and I'll attach tests to that PR as another commit in the chain - which may or may not be trivial. I already know I have to change them to be fair.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71591752/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71740872", "body": "Code updated.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71740872/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71774184", "body": "And now with tests. And merges.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71774184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71967755", "body": "How about this ?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71967755/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71134459", "body": "Good point. I'll write up some documentation for this.\n\nIn the meantime, what you basically have to do is this:\n\n1) install grpc:\n    --> make && sudo make install\n2) if you're going to use protobuf in your hello world, compile the protoc plugins:\n    -->  make cpp_plugin (note that it's not installed by default by make install - that's a known issue)\n3) compile your protobufs using that plugin:\n    -->  protoc --cpp_out=some/path/out --grpc_out=some/path/out --plugin=protoc-gen-grpc=path/to/cpp_plugin services.proto\n4) compile your code by linking with -lgrpc and -lgrpc++\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71134459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/76349598", "body": "By the way, we've made efforts to improve that documentation, and created example projects here: https://github.com/grpc/grpc-common/tree/master/cpp - could you see if this seems better for you or if you still have comments about it ?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/76349598/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71142152", "body": "Yes, looks good; I don't see any more internal URLs or references.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71142152/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72070690", "body": "That's the second time already. Please stop. \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72070690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72119606", "body": "I don't really have any concern with this PR.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72119606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72137641", "body": "Pull request updated.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72137641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72151348", "body": "These files were created by Visual Studio directly, and I didn't change them. Poking at these details would mean Visual Studio will try to rewrite them every time it opens them.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72151348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72255779", "body": "Also, mentioning @dklempner for double-checking what I am doing here.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72255779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72298733", "body": "So I am superseding this PR with #306.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72298733/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72521076", "body": "Done :-)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72521076/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71776539", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71776539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72956035", "body": "New version of that PR, with a few improvements to the windows code. Client code now is good enough to run the echo_client test binary, so I feel this warrants an actual pull into master.\n\nI'll assign @ctiller to it, but anyone should feel free to comment on it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72956035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73101641", "body": "And second update of that PR, this time with server code :-)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73101641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/11783126", "body": "Mac on Jenkins should happen next week.\n\nOn Sat, Jun 20, 2015 at 11:41 PM, Jorge Canizales notifications@github.com\nwrote:\n\n> Ideally iOS builds would be already automatically tested and would have\n> caught this instead of us manually. But pragmatically, that still has a\n> dependency on Jenkins Macs which we don't control: Instead having a script\n> that checks build.json's integrity has no risk, plus makes refactoring\n> the C core safer for any build system in general (one of the goals of\n> having the JSON list was also to let people use build systems we aren't\n> currently using).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/commit/b7cf08ff73dc05af66e1f16dad03c8550a2bbc99#commitcomment-11783106\n> .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11783126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12116485", "body": "Lulz.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12116485/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21562302", "body": "Circular dependencies FTL.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21562302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21562395", "body": "That would've been impossible then, since only Bazel would've detected all\nof them, taking ages of back and forth to fix everything. Also, now, we\nshould be able to rely on Bazel.\n\nOn Thu, Mar 30, 2017 at 10:08 AM, Craig Tiller <notifications@github.com>\nwrote:\n\n> Fix the dependency, don't break the test.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/grpc/grpc/commit/055b920828e873f617635c2b489c70b36affec15#commitcomment-21562366>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AG8bpuDFXBfXwV4WQXHrRAiOd2Ac9wgGks5rq-GigaJpZM4MupP0>\n> .\n>\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21562395/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997544", "body": "Good question - I don't know :-D\n\nThis is me moving and de-duplicating code from @jtattermusch at that point. But I too was wondering what that was.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/22997544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23022920", "body": "Myeah.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23022920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23426008", "body": "Figured it out actually. Tests don't have a guid because we don't want to create a project file for them.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23426008/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23399396", "body": "I would add a link to http://github.com/google/grpc so that if someone ends up with the code handed up to him by a third party, he'd have a pointer as to where this comes from.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23399396/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424497", "body": "\"unsigned\" is an actual type by itself.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424497/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424690", "body": "It would tolerate this, indeed, and I've done it on purpose. This seems to be kind of a gray area in the json specs that I haven't been able to fully get an answer to.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424728", "body": "The point here is that we can implement different readers for different inputs.\n\nThe logic of the reader works independently of the actual input, and independently of the output objects. The json-string.c file makes use of it by implementing a parser using strings, but the same code can be included again to define a parser using file descriptors instead.\n\nThis is very akin to https://github.com/nothings/stb\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424728/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424787", "body": "You'll have to be more precise.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424839", "body": "That's not how this system actually works. CF my other comment above.\n\nDefining a parser that works on file descriptors, say json_fd.c, would go through the same list of includes, with different base definitions, to explain the reader / writer how to read or emit data.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424839/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23700703", "body": "We're missing proper testing framework to use that one; aka, something where we can call a file with arguments, such a shell script. But it's planned to have one, so once we do, we already have the test ready for it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23700703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23702321", "body": "_mumbles_ less flexible _mumbles_ _mumbles_\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23702321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23710329", "body": "And that's my point exactly. I'm _kind of_ fine writing a small binary that harcodes the paths and all, but I don't want to go down that route of starting the C-core testing framework, which is a whole different task.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23710329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23712141", "body": "Humf.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23712141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23735230", "body": "Hmm, this one is pretty atypical. It's if the user wants to destroy a portion of the tree. But can be tested by parsing something like [[],[]], then destroying top->child.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23735230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23735268", "body": "\"\\ud812\\n\"\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23735268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "Auxilus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13265", "title": "update to check for termux", "body": "", "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/13052", "title": "Update extconf.rb to check for termux ", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "abacaphiliac": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13228", "title": "Update Composer and PHPUnit installation", "body": "* Replaces Composer installation instructions with link to source material, which is a more secure way to install.\r\n* Installs PHPUnit via Composer, and removes global/system docs and installation commands.\r\n* Ignores log folder which is generated by running PHPUnit, per config.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "netroby": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13209", "title": "Fix #12229, php hello world not working", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kkm000": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13207", "title": "Integrate Grpc.Tools into msbuild system (C# only)", "body": "When Grpc.Tools is added to a C# project, the project recognizes .proto files. These .proto are compiled into .cs files placed in the object directory (under obj/...), and are not shown in Visual Studio, but are available to Intellisense nevertheless.\r\n\r\nThe scripts support both \"classic\" projects and the new dotnet style projects. In line with the latter ones (when .cs files are just dropped into the directory are picked up and compiled), .proto files are handled the same way, so just placing a .proto file into the folder is enough to compile it, and compile its protoc outputs into the project target assembly.\r\n\r\nThe \"classic\" project requires adding .proto files by one, and they are assigned a correct build action automatically. To manually add proto files to msbuild script, use 'ProtoBuf' item type.\r\n\r\nFor native code C++ projects, there is no added support beyond just dropping the compiler as before. For all other project types, an error message is generated on an attempted build. More C++ support is on the way.\r\n\r\nDependency change: the package now adds a dependency on Grpc.Tools of a matching version for managed projects only. This is naturally skipped for native C++, as the managed runtime is not required.\r\n\r\nAlso packaged are proto includes for well-known types.\r\n\r\n----\r\nValidated and confirmed working:\r\n * Windows (VS, classic C#, dotnet C#, C++)\r\n * Linux/Mono (both classic C# and dotnet C#)\r\n * Linux/dotnet  (dotnet C# project only)\r\n----\r\nThere are quite a few questions I wanted to discuss. If anyone could help me with proper decicions, I would appreciate it.\r\n\r\n1. The captialization of generated .cs files. When I compile `fooBar.proto`, the resulting .cs file is called `FooBar.proto`. Is there a way around that? This does not seem to make sense in the build like this, when the .cs files are treated at best as temporary. I can certainly script around the issue in msbuild scripts, but why have it in the first place?\r\n\r\n2. If `x.proto` does not contain any RPC services. the corresponding `xGrpc.cs` is not generated (FWIW, the cpp plugin does not do that). This is not good for the build. While it is certainly possible to see if the file *is* there after compilation, it is impossible to learn if it was *actually* produced by it. In other words, if I take a service definition out of x.proto after having previously compiled it, I end up with a stale `xGrpc.cs` that is added to compilation. Of course, it is possible to write some msbuild incantations about this issue as well, but it would be much cleaner just to create a nearly empty xGrpc.cs stub even if no services are defined. So options I am asking about here are \r\n - a) Leave it as is and script some very ugly transformations around it.\r\n - b) Add a plugin option to do always generate the stub.\r\n - c) In fact, forget the option and just always generate the stub.\r\n\r\n3. I want to package cpp plugins also, and support to integrate gRPC into the build process. (I already have it packaged internally). This will cover the build process in Visual Studio. Should we do that?\r\n\r\n4. I am adding a bunch of files to the root of `src/chsarp` that only go into the nuget package. Is it better to place them into a subdirectory? Is `Grpc.Tools` subdirectory good?\r\n\r\n----\r\n/cc @jskeet @hcoona  \r\nCloses #4805  \r\nCloses #13098\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Parad0X": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13174", "title": "Removes unused SIGNAL_CHECK_PERIOD constant", "body": "Code that was using this constant is long gone.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "illicitonion": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13105", "title": "Update boringssl submodule version", "body": "This includes several fixes for compiling with old versions of gcc, and\r\none for building with clang on OSX.\r\n\r\nWith this change, I was able to successfully run `make grpc_cli`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "justinburke": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13046", "title": "Example mTLS client/server in C++", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/24971533", "body": "Good catch... PTAL.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24971533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "alanctgardner": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13018", "title": "Fixes for basic profiling", "body": "I tried to build the Ruby gem with basic profiling enabled (`GRPC_CONFIG=basicprof`) on OS X 10.12.5 and ran into two issues:\r\n- setting `GRPC_TIMERS_RDTSC` doesn't compile on my system\r\n- `GPR_TIMER_BEGIN` in `grpc_error_string` is in the wrong place, which leads to unclosed spans in the latency profile", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thinkerou": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/13009", "title": "remove unused package and add used package", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12775", "title": "PHP: complete some todo", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12703", "title": "PHP: attempt to fix bug", "body": "ref #12697", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12360", "title": "PHP: remove invalid include-file and adjust include-file sort", "body": "The pr remove some invalid or duplicate include files and adjust these files sort:\r\n- first part is the correspond include file of source file,\r\n- second part is php standard include file,\r\n- third part is grpc include file,\r\n- last part is some include files on php-grpc ext directory.\r\n\r\nPlease @stanley-cheung review the pr, thanks!", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10456", "title": "PHP: update run_php_cs_fixer shell script and update the result for run it", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8693", "title": "Use range-based for loops on c++11", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8692", "title": "use nullptr instead of NULL", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8138", "title": "Add json directory for delete duplicate route_guide_db.json", "body": "Because all of `route_guide_db.json` are the same.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8044", "title": "PHP: change the php ssl server credentials API so that a server can have multiple key/cert pairs", "body": "Fixed #1122.\nThe same as #7566 because it have conflict.\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/7977", "title": "Update gitignore file", "body": "Because `npm install` will generate the two directories: `build` and `node_modules` on mac os.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lukesneeringer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12976", "title": "Install enum34 on all Python < 3.4", "body": "I am filing this PR on behalf of the author of GoogleCloudPlatform/google-cloud-python#4115.\r\n\r\nIn grpc's [`setup.py`, on line 229](https://github.com/grpc/grpc/blob/5253c8f9a899450397a5e46e4923d01ac9a66a27/setup.py#L229), you specify the inclusion of `enum34` as a dependency if the user is running in Python 2. However, the `enum` package was not added to the standard library until Python 3.4.\r\n\r\nThe correct syntax in `setup.py` to do the right thing all the time is:\r\n\r\n```\r\n    extras_require={\r\n        ':python_version<\"3.0\"': ('futures >= 2.2.0',),\r\n        ':python_version<\"3.4\"': ('enum34 >= 1.0.4',),\r\n    },\r\n```\r\n\r\nI recognize that (like us) you likely do not officially support Python 3.3 anymore. However, this is an easy low-hanging fruit item, and it seems reasonably plausible that Python 3.3 will work. Since this is so low-hanging, it seems reasonable to change.\r\n\r\nThis is also more correct for other reasons (in principle, you can not rely on `setup.py` to be executed at install time).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "minorhacks": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12973", "title": " Fix Makefile template generation for C++ lib symlinks", "body": "Makefile lines generating shared object names appear more multiple times: once for generating linker command-line options, and again while generating symlink command arguments. The template used to generate the .so suffix is not the same in these two cases, leading to an issue where C++ libraries are linked as e.g. `.so.1` but then symlinked as `.so.5`. This will cause binaries linked against the C++ shared objects to fail at runtime as they will not be able to find e.g. libgrpc++.so.1 (as it is symlinked erroneously as libgrpc++.so.5)\r\n\r\nThis change fixes this issue (#12764) by making sure the suffix template is identical in both places, using the version that correctly generates the suffix by doing a language-specific lookup.\r\n\r\nThis change was tested by regenerating the project files, running a `make`, and confirming that the C++ libs in libs/opt had symlinks ending in `.so.1` rather than `.so.5`.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "annasapek": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12937", "title": "Allow TSI handshaker to send an alert to peer on protocol failure", "body": "This change introduces a new tsi_result, TSI_SEND_ALERT_AND_CLOSE. This error code is used by a TSI handshaker to indicate that a protocol error occurred and that a final alert message is to be sent to the peer. This behavior is implemented in security_handshaker.cc.\n\n<!-- Reviewable:start -->\n---\nThis change is\u2002[<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/grpc/grpc/12937)\n<!-- Reviewable:end -->\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pavel-pimenov": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12900", "title": "V601 The 'true' value is implicitly cast to the integer type.", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NanXiao": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12795", "title": "Fix compile error on ArchLinux", "body": "Fix build error on ArchLinux:  \r\n\r\n```\r\nsrc/core/ext/transport/cronet/transport/cronet_transport.c: In function \u2018create_grpc_frame\u2019:\r\nsrc/core/ext/transport/cronet/transport/cronet_transport.c:693:10: error: conversion to \u2018uint8_t {aka unsigned char}\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\r\n   *p++ = (flags & GRPC_WRITE_INTERNAL_COMPRESS) ? 1 : 0;\r\n          ^\r\ncc1: all warnings being treated as errors\r\n```\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "c252496": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12790", "title": "V1.6.x", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "waffles": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12667", "title": "Fixing Broken API Reference Link", "body": "The proposed url was sourced from https://grpc.io/docs/reference/.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JackOfMostTrades": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12656", "title": "Add TLS verify callback for Python and JS", "body": "Release 1.6.0 of grpc-java [added support](https://github.com/grpc/grpc-java/pull/3205) for using a custom TLS hostname verifier with clients. This feature parity doesn't exist for gRPC clients in other languages, which this PR tries to address (although an \"override hostname\" can be specified, support for an arbitrary callback is missing). In particular this adds support for a verification callback in JavaScript and Python. As an example, callbacks in JS look like:\r\n\r\n    grpc.credentials.createSsl(\r\n        fs.readFileSync(\"truststore.pem\"),\r\n        fs.readFileSync(\"client.pem.key\"),\r\n        fs.readFileSync(\"clent.pem.crt\"),\r\n        {\r\n          \"insecureSkipHostnameVerify\": true,\r\n          \"checkServerIdentity\": function(host, cert) {\r\n            authContext = newAuthContextFromPem(cert);\r\n            if (authContext.name != expectedName || (authContext.environment != myEnvironment) {\r\n              throw \"Invalid server certificate presented\";\r\n            }\r\n          }\r\n        });\r\n\r\nThe \"checkServerIdentity\" idiom was chosen to match the [same option](https://nodejs.org/api/tls.html#tls_tls_connect_options_callback) available to TLS clients with the built-in node library. (InsecurySkipHostnameVerify was inspired by [golang's InsecureSkipVerify option](https://golang.org/pkg/crypto/tls/#Config).)\r\n\r\nIn Python it looks like this:\r\n\r\n    def checkServerIdentity(host, cert):\r\n         authContext = newAuthContextFromPem(cert)\r\n         if authContext.name != expectedName or authContext.environment != myEnvironment:\r\n            return False\r\n         return True\r\n\r\n    grpc.ssl_channel_credentials(\r\n        clientTrust.encode('utf-8'),\r\n        open(clientKeystore[1]).read().encode('utf-8'),\r\n        open(clientKeystore[0]).read().encode('utf-8'),\r\n        {\r\n          \"insecureSkipHostnameVerify\": True,\r\n          \"checkServerIdentity\": checkServerIdentity\r\n        })\r\n\r\nFor better context, the motivation for having callbacks like this stems from our internal PKI infrastructure where multidimensional identity information is added to various proprietary X.509 extensions. The policy on exactly which dimensions are relevant and should be checked varies from client to client so it's important that each client be able to supply verification logic.\r\nIn a less proprietary context, custom verifiers are often used as a supplemental check to do things like certificate or CA pinning.\r\n\r\nWe've been using an internal fork based on this PR for a few months now, so at least for JS and Python I have some practical confidence that this works as intended.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "liyunshan123": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12611", "title": "change google.protobuf.Empty to google.protobuf.GPBEmpty", "body": "the genrated code of google/protobuf/empty.proto is GPBEmpty.php, but the generated class of customized proto which used the google.protobuf.Empy is \\Google\\Protobuf\\Empty.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haf": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12471", "title": "F# example", "body": "Tested on macOS 10.12 w/ mono and .net core 2.0.\r\n\r\nWishlist for using gRPC with F#:\r\n\r\n - `fsharp` folder in examples\r\n - `fsharp` kept up to date with new versions of gRPC\r\n - F#-native codegen, e.g. with Froto (see referenced issue in Froto)\r\n - Hopac jobs and Concurrent ML programming style rather than the ogres that are hot/push Tasks aka Futures.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "giganumber": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12429", "title": "Fix misleading documentation", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dfawley": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12390", "title": "doc: add missing condition to statuscodes.md", "body": "Also, mention status code returned in wait-for-ready.md.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ericgribkoff": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12361", "title": "Interop tests for full-stream compression", "body": "This PR adds full-stream compression interop tests between a C++ server and Java client.\r\n\r\nThe following interop scenarios from [interop-test-descriptions.md](https://github.com/grpc/grpc/blob/master/doc/interop-test-descriptions.md) are run with gzip stream compression enabled, currently only in the server-to-client direction:\r\n\r\n- [empty_unary](https://github.com/grpc/grpc/blob/master/doc/interop-test-descriptions.md#empty_unary)\r\n- [large_unary](https://github.com/grpc/grpc/blob/master/doc/interop-test-descriptions.md#large_unary)\r\n- [server_streaming](https://github.com/grpc/grpc/blob/master/doc/interop-test-descriptions.md#server_streaming)\r\n- [ping_pong](https://github.com/grpc/grpc/blob/master/doc/interop-test-descriptions.md#ping_pong)\r\n\r\nThese tests depend on https://github.com/grpc/grpc-java/pull/3403 on the Java side and the presence of a C++ API for enabling stream compression, which is patched into this PR from @muxi 's stream_compression_config_with_cpp branch. Once the C++ API is checked in, this PR will be rebased.\r\n\r\ncc @makdharma ", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/12092", "title": "Use grpc-payload-bin= key for gRPC GET requests", "body": "To future proof support for GET queries, this changes the GET query string to the format `?grpc-payload-bin=<base64EncodedGrpcMessage>`, leaving open the potential to have other keys in the query string in the future.\r\n\r\n@makdharma https://github.com/grpc/grpc/commit/178f4bc24da2b1d4d9f52c010be5a1f63d1c4224 added `grpc-payload-bin` to `tools/codegen/core/gen_static_metadata.py`, but it looks like nothing is using the generated constant now. I just defined the \"grpc-payload-bin=\" string in the client/server filter directly.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dzbarsky": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12293", "title": "Set grpc CleanUpThread to daemon", "body": "We are experiencing deadlock on shutdown in the cleanup code (see stack below). Setting thread to daemon should be fine, all it does is prevent blocking on the thread exiting but the interpreter is quitting anyway. @nathanielmanistaatgoogle \r\n\r\n```\r\n  File \"/usr/drte/v1/python-2.7.7/lib/python2.7/threading.py\", line 1107, in _exitfunc\r\n    t.join()\r\n  File \"/home/ubuntu/bazel_output/bazel-sandbox/8317233754796682900/execroot/__main__/bazel-out/local-fastbuild/bin/metaserver/controllers/api_v2/tests/seen_state/seen_state_tests.runfiles/__main__//metaserver/controllers/api_v2/tests/seen_state/seen_state_tests_bin-piplib/grpc/_common.py\", line 177, in join\r\n    super(CleanupThread, self).join(timeout)\r\n  File \"/usr/drte/v1/python-2.7.7/lib/python2.7/threading.py\", line 949, in join\r\n    self.__block.wait()\r\n  File \"/usr/drte/v1/python-2.7.7/lib/python2.7/threading.py\", line 339, in wait\r\n    waiter.acquire()\r\n```", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tenderlove": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12283", "title": "Convert GRPC::Core::Call#metadata to Ruby", "body": "Convert the metadata accessor to Ruby.  It doesn't need to be written in\r\nC, so we can convert it to Ruby and make it easier for Rubyists to work\r\non.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135078731", "body": "TBH I would like to remove this check completely, but the original C code had type checks, and there were tests for it.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135078731/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135085140", "body": "@inkel changing to `unless val.is_a?(::Hash)` would not be the same logic.  The current conditional allows `nil` *or* `Hash` (and the tests specify that `nil` is an acceptable value).", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135085140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135091528", "body": "This PR is just to convert C to Ruby, as pure Ruby should be a little easier to work on.  It made no changes in the API surface area.  If the intention is that the `metatdata=` method is not public API, it should probably be a private method or at the very least `nodoc`.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135091528/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135096912", "body": "@inkel no problem! \ud83e\udd17", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135096912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "deepaklukose": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12193", "title": "Update the ssl client certificate validation.", "body": "We require the server to provide a valid client CA certificate whenever\r\nthe server is started with\r\nGRPC_SSL_REQUEST_AND_REQUIRE_CLIENT_CERTIFICATE_AND_VERIFY or\r\nGRPC_SSL_REQUEST_CLIENT_CERTIFICATE_AND_VERIFY.\r\n\r\nIn all other cases, we ignore the client ca certificates provided since\r\ngrpc server is not responsible for authenticating the client\r\ncertificates (the grpc server only verifies that the client presents the\r\ncorrect key pair for the ssl connection).\r\n\r\nThis commit fixes #12146 ", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mdsteele": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12186", "title": "Make ChannelInterface virtual methods protected instead of private", "body": "I'd like to be able to implement a `ChannelInterface` subclass that delegates to another `ChannelInterface` instance.  This isn't currently possible, because most of the virtual `ChannelInterface` methods that I would need to delegate to are marked private, and so can't be called by the subclass.  Changing these methods from private to protected allows for delegation.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jdeepee": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/12062", "title": "grpc.beta.implementations can now accept options parameter", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "timonwong": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11983", "title": "Add utf8 encoding line to generated python code", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jcanizales": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11953", "title": "Update versions in README.md from 1.0 to 1.4", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/11782646", "body": "This commit (https://github.com/ctiller/grpc/commit/b7cf08ff73dc05af66e1f16dad03c8550a2bbc99) failed to add `pollset_set.h` to `build.json`. Commits https://github.com/grpc/grpc/commit/928cd7710f6289586729f19488d275d02284601c, https://github.com/grpc/grpc/commit/00d5b5cf90c62f421c7029f2b1be7fcd0386e222, and https://github.com/grpc/grpc/commit/fe4ba36625c8870e1d24f2c7bb67ec4e53f5f957 included it elsewhere in the codebase too.\n\nWe need to have a test that the files in `build.json` are sufficient to compile the C core. Not having it could result in no less breakages than ignoring `build.json`.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11782646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11783106", "body": "Ideally iOS builds would be already automatically tested and would have caught this instead of us manually. But pragmatically, that still has a dependency on Jenkins Macs which we don't control: Instead having a script that checks `build.json`'s integrity has no risk, plus makes refactoring the C core safer for any build system in general (one of the goals of having the JSON list was also to let people use build systems we aren't currently using).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11783106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11784968", "body": "Even if we had it already, I don't think it's good to leave testing of `build.json` to dependents of the C core. If Cocoapods tomorrow changes the way they handle includes, it might produce a false positive and leave the C core unknowingly untested in this aspect again. In general, a library should test its own contracts without relying on implementation details of its dependents.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11784968/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11785586", "body": "> specifying a new build system that could detect this error\n\nI was thinking of a script that iterates the list of files and checks that every #included file is named in the list. An alternative is a script that checks that all files under `include/grpc` and `src/core` are named in the list. Either should be minimal effort, and without scheduling uncertainties (testing iOS on Jenkins, even once we have the Macs, can have a number of blockers we aren't counting on yet).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11785586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12554212", "body": "Done (pushed https://github.com/grpc/grpc/commit/0607bae87e0f3417972bc221a5c4f8dc6bec5fef to this pull request).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12554212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12554214", "body": "Done (pushed https://github.com/grpc/grpc/commit/0607bae87e0f3417972bc221a5c4f8dc6bec5fef to this pull request).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12554214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12554217", "body": "It should just have stayed readonly! Fixed here: https://github.com/grpc/grpc/commit/56c6574652ce261370582fec7decd4a8e6ce1cb3\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12554217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12554561", "body": "Done (pushed https://github.com/grpc/grpc/commit/83b7971c10d18fcc1c04056a028860283b2be051 to this pull request).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12554561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12554625", "body": "The intention here was to provide a default port when the user didn't specify any (specifying port 0 should have us keep 0). I've added a comment stating so: https://github.com/grpc/grpc/commit/cceeb515927d72e3cfb24ecce4af89a9eed3b42b\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12554625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12554692", "body": "Cool! Thanks. Done: https://github.com/grpc/grpc/commit/82fb883bec8eef4f396723d259ceea06fa2771ea\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12554692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12555193", "body": "Done: https://github.com/grpc/grpc/commit/d7f2ab31258a0972eb08e9fac0cac5b64b2a7919\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12555193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12555195", "body": "Good idea. Done: https://github.com/grpc/grpc/commit/d7f2ab31258a0972eb08e9fac0cac5b64b2a7919\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12555195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12555267", "body": "Note: fixups here https://github.com/grpc/grpc/commit/d13bbed8becc2f3564734399012c09660ceed303 and here https://github.com/grpc/grpc/commit/145f865ce04659bf8759ac66f80ae9ef1c029d74.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12555267/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12556104", "body": "Totally agreed. PTAL here: https://github.com/grpc/grpc/commit/8c5318a6d122e9b933abc43780c131838cebac80\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12556104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12556117", "body": "Done (https://github.com/grpc/grpc/commit/8c5318a6d122e9b933abc43780c131838cebac80). The files we expect here are of PEM format, which is actually ASCII; thanks for noticing. I've restricted the encoding accordingly.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12556117/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12556261", "body": "Done (https://github.com/grpc/grpc/commit/8c5318a6d122e9b933abc43780c131838cebac80).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12556261/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12556535", "body": "Well, it's the designated initializer of the superclass (`GRPCChannel`). I reckon the design of these three classes show my Java background, as `initWithChannel:` would there be a protected constructor.\n\nI think a better design would be for `GRPCChannel` to swallow `GRPCSecureChannel` and `GRPCUnsecuredChannel`, and just have two convenience initializers to choose one or the other.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12556535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12556928", "body": "The lifetime is fine, because the args structure is just immediately passed to `grpc_*_channel_create`, which guarantees that the values only need to be valid until the invocation returns. I've added a comment specifying it: https://github.com/grpc/grpc/commit/77723b127a2eafd1f99a7a3362371be310d5df29\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12556928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12556948", "body": "I've added a TODO to make that change: https://github.com/grpc/grpc/commit/7e90745b3c609d12dfc63ca6cdddac9446b3d5e5\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12556948/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12557011", "body": "As you see, forward-declaring one of the types from the C gRPC library caused trouble because it wasn't a `typedef struct <name> {...} <name>;`, but a typedef of an anonymous struct. Similarly, it would have caused problems if it were a typedef of an enum or of a primitive type. The strategy I'm leaning to for my headers is: forward-declare the classes/struct of my own library, import/include the headers of the other libraries.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12557011/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12602614", "body": "Fixup: 578ab16.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12602614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/13012902", "body": "This line broke the build for Objective-C. It should have been `#include <grpc/census.h>`\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/13012902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/18014336", "body": "@ctiller `udp_server.c` needs to be adjusted to use this new signature (and, of course, needs tests).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/18014336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "hesmar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11795", "title": "when cross-compiling, the host grpc_cpp_plugin should be used", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "varshanbp": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11767", "title": "Update INSTALL.md for Cross Compile Instructions", "body": "Added Linux Cross Compilation Instructions on INSTALL.md", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "calderonth": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11699", "title": "Add TLS 1.2 ECDSA ciphersuites to gRPC defaults", "body": "More and more PKI frameworks are generating certificates using\r\nECDSA keypairs, enabling the ciphersuites in gRPC avoids having\r\nto define the environment variable.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "choleraehyq": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11675", "title": "Make GCC 7.1.1 happy", "body": "Fix https://github.com/grpc/grpc/issues/11376 and several other warnings:\r\n```\r\nsrc/core/lib/security/credentials/jwt/jwt_verifier.c: In function \u2018pkey_from_jwk\u2019:\r\nsrc/core/lib/security/credentials/jwt/jwt_verifier.c:483:10: error: dereferencing pointer to incomplete type \u2018RSA {aka struct rsa_st}\u2019\r\n       rsa->n =\r\n          ^~\r\nmake: *** [Makefile:2496: /home/cholerae/cxcode/grpc/objs/opt/src/core/lib/security/credentials/jwt/jwt_verifier.o] Error 1\r\n[cholerae@x240s grpc]$ vim src/core/lib/security/credentials/jwt/jwt_verifier.c\r\n[cholerae@x240s grpc]$ make\r\n[MAKE]    Generating cache.mk\r\n[C]       Compiling src/core/lib/security/credentials/jwt/jwt_verifier.c\r\nsrc/core/lib/security/credentials/jwt/jwt_verifier.c: In function \u2018pkey_from_jwk\u2019:\r\nsrc/core/lib/security/credentials/jwt/jwt_verifier.c:484:25: error: \u2018r\u2019 undeclared (first use in this function)\r\n       if (!RSA_set0_key(r, bignum_from_base64(exec_ctx, validate_string_field(key_prop, \"n\")), NULL, NULL)) {\r\n                         ^\r\nsrc/core/lib/security/credentials/jwt/jwt_verifier.c:484:25: note: each undeclared identifier is reported only once for each function it appears in\r\nsrc/core/lib/security/credentials/jwt/jwt_verifier.c:493:10: error: dereferencing pointer to incomplete type \u2018RSA {aka struct rsa_st}\u2019\r\n   if (rsa->e == NULL || rsa->n == NULL) {\r\n          ^~\r\n```\r\nSee https://github.com/openssl/openssl/issues/1491\r\n\r\n```\r\nsrc/core/tsi/ssl_transport_security.c: In function \u2018tsi_create_ssl_client_handshaker_factory\u2019:\r\nsrc/core/tsi/ssl_transport_security.c:1285:3: error: \u2018TLSv1_2_method\u2019 is deprecated [-Werror=deprecated-declarations]\r\n   ssl_context = SSL_CTX_new(TLSv1_2_method());\r\n   ^~~~~~~~~~~\r\nIn file included from /usr/include/openssl/opensslconf.h:42:0,\r\n                 from /usr/include/openssl/ct.h:13,\r\n                 from /usr/include/openssl/ssl.h:61,\r\n                 from src/core/tsi/ssl_transport_security.c:45:\r\n/usr/include/openssl/ssl.h:1629:1: note: declared here\r\n DEPRECATEDIN_1_1_0(__owur const SSL_METHOD *TLSv1_2_method(void)) /* TLSv1.2 */\r\n ^\r\nsrc/core/tsi/ssl_transport_security.c: In function \u2018tsi_create_ssl_server_handshaker_factory_ex\u2019:\r\nsrc/core/tsi/ssl_transport_security.c:1393:7: error: \u2018TLSv1_2_method\u2019 is deprecated [-Werror=deprecated-declarations]\r\n       impl->ssl_contexts[i] = SSL_CTX_new(TLSv1_2_method());\r\n       ^~~~\r\nIn file included from /usr/include/openssl/opensslconf.h:42:0,\r\n                 from /usr/include/openssl/ct.h:13,\r\n                 from /usr/include/openssl/ssl.h:61,\r\n                 from src/core/tsi/ssl_transport_security.c:45:\r\n/usr/include/openssl/ssl.h:1629:1: note: declared here\r\n DEPRECATEDIN_1_1_0(__owur const SSL_METHOD *TLSv1_2_method(void)) /* TLSv1.2 */\r\n ^\r\nAt top level:\r\n```\r\n\r\n```\r\nsrc/core/tsi/ssl_transport_security.c:118:22: error: \u2018openssl_thread_id_cb\u2019 defined but not used [-Werror=unused-function]\r\n static unsigned long openssl_thread_id_cb(void) {\r\n                      ^~~~~~~~~~~~~~~~~~~~\r\nsrc/core/tsi/ssl_transport_security.c:110:13: error: \u2018openssl_locking_cb\u2019 defined but not used [-Werror=unused-function]\r\n static void openssl_locking_cb(int mode, int type, const char *file, int line) {\r\n             ^~~~~~~~~~~~~~~~~~\r\n```\r\nDon't know why.\r\n\r\n```\r\nsrc/core/ext/transport/cronet/transport/cronet_transport.c: In function \u2018create_grpc_frame\u2019:\r\nsrc/core/ext/transport/cronet/transport/cronet_transport.c:652:10: error: conversion to \u2018uint8_t {aka unsigned char}\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\r\n   *p++ = (flags & GRPC_WRITE_INTERNAL_COMPRESS) ? (uint8_t)(1) : (uint8_t)(0);\r\n          ^\r\n```\r\n\r\nI'm using fedora 26 and GCC 7.1.1.\r\n\r\n\r\nSigned-off-by: Cholerae Hu <huyingqian@pingcap.com>", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dylanswiggett": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11558", "title": "Changes templates/Makefile.template to install grpc with correct .so version numbers.", "body": "Fixes a bug where Makefile.template would install every generated .so file at <name>.so.<settings.core_version.major>. This is not the correct so version for any c++ libs, and would produce shared libs that have a different SONAME and filename, causing builds that link them to break!", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "RyanGordon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11553", "title": "HHVM Extension Support", "body": "This adds support for running gRPC with HHVM as a native extension. This ports over all of the methods and code from the PHP extension with the same interface. This is apart of getting Cloud Spanner to run on HHVM using the official PHP library which requires gRPC.\r\n\r\nThis still is a WIP, and not ready for production.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "admcrae": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11525", "title": "Fix warnings with GCC 7.", "body": "This fixes various warnings that I got with GCC 7.1.1.\r\n\r\nNote that the changes to  src/core/tsi/ssl_transport_security.c are only relevant for OpenSSL 1.1 (#10589); this change alone will not let it compile with OpenSSL 1.1, but it will compile after #11495 and #11496 are merged.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "agc-sec": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11496", "title": "Transitioning from the deprecated TLSv1_2_*method functions to instea\u2026", "body": "Instead of using TLSv1_2_*method() calls, use TLS_*method as appropriate and follow up with a set_min/max version call in order to ensure we continue to use version 1.2 (and do not default to an older less secure TLS version.)\r\n\r\nTLSv1_2_*methods are deprecated in OpenSSL 1.1.\r\n\r\nThis is part 2 of 2 for addressing https://github.com/grpc/grpc/issues/10589", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jynnantonix": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11476", "title": "Make cross-compiling great again", "body": "Fixes #11475 ", "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/11448", "title": "Fix *_unsecure.pc files", "body": "Both the grpc_unsecure.pc and the grpc++_unsecure.pc files still link against\r\nlibgrpc and libgrpc++, respectively.  Fix them to link against the unsecure\r\nlibraries instead.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hellishfire": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11463", "title": "Simplify CallOpSet with variadic template", "body": "Now that C++11 feature is allowed, CallOpSet can be refactored to take advantage of the variadic template feature. This will make the code cleaner and eliminate a few unnecessary no-ops. Since we cannot use fold expression yet, a temporary list-initializer with side effect is declared in order to invoke member functions of each CallOp.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "makdharma": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11458", "title": "guards against #1187", "body": "not a fix but at least will catch the problem when building with CDPATH\r\ndefined.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/10931", "title": "Update implementations.py", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "joexue": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11390", "title": "Change the grpc_resolved_address len to socklen_t", "body": "Fix the issue that can't getsockname and peer_name on big Endian system such as mips64.\r\n\r\nThe socket APIs accept/getsockname take the socklen_t pointer as a parameter.\r\nIf we cast a size_t value to a socklen_t pointer, the initialized value will be\r\nlost on big endian system and those APIs will not give back the sockaddr to\r\ncaller.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gkelly": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11380", "title": "Generate outputs with complete paths (#11351)", "body": "When generating the path for output files in generate_cc don't assume\r\nthat the output directory is rooted inside of the local workspace, as is\r\nthe case when gRPC is being built as a nested bazel repository.  This\r\nprevents corrupting the path, having assumed that label_len is relative\r\nto the start of the string, when it is actually relative to the root of\r\nthe containing workspace.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rcoscali": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11364", "title": "Handle setting of prefix_libdir for installing with arch specific libs", "body": "Added definition of prefix_libdir as $(prefix)/lib\r\nReplaced occurences of $(prefix)/lib with $(prefix_libdir)\r\n\r\nInstalling in /usr/lib/x86_64-linux-gnu (as for ubuntu) was not possible because of the way the Makefile install in libdir: fix value being $(prefix)/lib.\r\nThis patch defines a prefix_libdir var initialized to $(prefix)/lib that can be customized for specific installs.\r\nMakefile and template has been modified.\r\nDidn't checked if other build system are able to support such installs... something to do next\r\n\r\nAlso added a change for .pc files modification: Compute the libdir suffix to add to prefix and set it in PC files template (either lib or lib/somethinng). If the libdir is not under prefix it could give bad results... Is it worth testing ?", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "styleex": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11361", "title": "Add next_nowait method for nonblock wait response", "body": "In an application working with etcd, there is a need to wait for events from the stream_stream (watch) channel with a timeout, to periodically send LeaseKeepAlive messages. Waiting with timeouts avoids creating a separate thread for sending KeepAlive messages.\r\n\r\nExample code:\r\n\r\n``` python\r\nresp_iter = etcd_client.watch_prefix(my_prefix)  # resp_iter is grpc._channel._Rendezvous\r\nwhile True:\r\n    resp = resp_iter.next_nowait(lease_ttl/4)\r\n    if resp is not None:\r\n        handle_watch_events(resp)\r\n        continue\r\n\r\n    etcd_client.lease_keep_alive(lease_id)\r\n```\r\n\r\nI could not adapt the existing `_next` method to work with the timeout, because in python2 `threading.Condition.wait()` does not allow to distinguish the normal return from the return by timeout.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Fixfire": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11329", "title": "Native C++ cross-compilation for Android platform", "body": "Due to various issues during C++ cross-compilation towards Android platform, these commits aim to remove some problems. The intervention comprises a refactoring of the general makefile by adding a specific section for Android target. Moreover, some hard-coded directory addresses were improved using settable flags (i.e., plugin_prefix) to maintain backward compatibility and also for future platform extensions.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "dwforbes": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11316", "title": "Update ares project file to enable turnkey builds", "body": "Added a prebuild step to copy necessary include file. Updated include\r\ndirectories to include ares include folder given system include\r\nnomenclature. Added current library define. Disabled warnings for\r\ndeprecated ASCII Win32 functions, and for signed/unsigned mismatch, both\r\nof which were causing build errors.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Cloudef": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11293", "title": "Make grpc_cli more useful", "body": "Fixes issue https://github.com/grpc/grpc/issues/11290\r\nMakes it actually possible to deal with stream responses.\r\n\r\nI'm sort of sad with the state of GRPC tools, documentations (especially on the wire level) and the quality of implementation. Doesn't really make me feel like it's mature or ready for anything at all.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kkishore1839": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11292", "title": "fixing a mem leak in dealloc send message grpc_byte_buffer's slice memory", "body": "grpc_byte_buffer's slice memory is not being freed when GRPCOpSendMessage's object is going out of scope.\r\nIn the dealloc function, only gpr_free(_op.data.send_message); is being called.\r\ngpr_slice_unref(*_op.data.send_message->data.raw.slice_buffer.slices); needs to be called for clearing the memory associated with it.\r\nWithout this code, we are seeing a lot of unreleased malloc of 3.5KB in size in the memory graph. Within few minutes, the number of such memory blocks increase to multiple thousands thereby creating a big memory leak in the app.\r\n\r\n<img width=\"1234\" alt=\"screen shot 2017-05-24 at 1 15 10 am\" src=\"https://cloud.githubusercontent.com/assets/25527296/26400527/fa313b30-409e-11e7-9360-a0c68becfd0d.png\">\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "7anner": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11221", "title": "begin protobuf decoupling for C# code generator", "body": "PR for review.\r\nMostly looking for help at locations marked with ERR", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jmuk": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11107", "title": "Fix the namespace detection pattern.", "body": "As I tried with protobufjs 6.7.3, message types (Type) also has\r\n'nested' field, but the value is undefined. It should check\r\nthis pattern too, otherwise non-namespace ones become an empty\r\nobject. That causes the failure of googleapis/gax-nodejs#135", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "shisya": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/11103", "title": "V1.3.x", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Shizmob": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10923", "title": "Fix incorrectly installed shared library version", "body": "This fixes a mismatch between the SONAME in the C++ and C# libraries and the\r\nactually installed shared library name: in the former case it uses the\r\nlanguage-specific major version, and in the latter case it uses the core major\r\nmajor version. Switch to using the language-specific major version in the\r\ninstalled shared library name as well to fix this mismatch.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "haorenfsa": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10859", "title": "fix: while using eventfd, a random fd will be closed when error occurs during creating eventfd", "body": "read_fd should have a certain value when create error occurs, because `polling_island_delete()` will be invoked when error occurs, and a random fd will be closed. in my practice, a working fd might closed due to the magic random value.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zhimingxie": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10789", "title": "Fix  abort bug issue caused by rst stream interrupt the writing", "body": "The detail of the problem I've written in the issue[https://github.com/grpc/grpc/issues/10516](url)", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Slonegg": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10681", "title": "fixes for cross-compilation from Windows to Android", "body": "I'm working on GRPC for Android. Here are changes to build gRPC with CMake for Android. Instructions (MSVS + Ninja), related to [this PR](https://github.com/google/protobuf/pull/2980). Note that @podsvirov is working on more elegant solution for cross-compiling protobuf.\r\n\r\nInstructions (MSVS + Ninja):\r\n1. Install Android SDK\r\n2. Install Android NDK. Generally only NDK is necessary, SDK just may be useful for other purposes.\r\n3. Set environment variable ANDROID_NDK\r\n4. Install Ninja. Just drop ninja.exe somewhere where it can be accessed from command line, for example, alongside cmake binaries.\r\n5. Build gRPC for host, because we will need protoc and grpc executables that we can run on host:\r\n```\r\n    mkdir _host_build\r\n    cd _host_build\r\n    \"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\" x86_amd64\r\n    cmake .. -G Ninja\r\n    cmake --build .\r\n```\r\n6. Build gRPC for android:\r\n```\r\n    mkdir _android_build\r\n    cd _android_build\r\n    cmake .. -G Ninja -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=21 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_STL_TYPE=gnustl_static -Dprotobuf_BUILD_TESTS=OFF -DgRPC_ZLIB_PROVIDER=package -DRUN_HAVE_STD_REGEX=0 -DRUN_HAVE_POSIX_REGEX=0 -DRUN_HAVE_STEADY_CLOCK=0 -Dprotobuf_IMPORT_EXECUTABLES=../_host_build/protobuf_ImportExecutables.cmake -DgRPC_IMPORT_EXECUTABLES=../_host_build/gRPC_ImportExecutables.cmake\r\n    cmake --build .\r\n```\r\n\r\nPartially resolves https://github.com/grpc/grpc/issues/8398", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ahoenselaar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10529", "title": "Ruby example for mutual client/server auth", "body": "Forked from the greeter example. Illustrates client and server auth with\r\ndifferent CAs and shows how to inspect specific certificate properties.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "boneskull": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10215", "title": "fix headers in INSTALL.md for gfm compatibility", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "rjshade": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10166", "title": "Authority supported test flag now DOES_NOT_SUPPORT", "body": "Renames FEATURE_MASK_SUPPORTS_AUTHORITY_HEADER to FEATURE_MASK_DOES_NOT_SUPPORT_AUTHORITY_HEADER. This simplifies the vast majority of fixtures as they no longer need to mention this flag: the only fixture that doesn't support authority header is the Cronet fixture.\r\n\r\nInspired by comments in https://github.com/grpc/grpc/pull/10090", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "lyuxuan": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10143", "title": "add a test for AsyncNotifyWhenDone", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/9781", "title": "[Build Fixit] Adding bazel build files", "body": "core/memory_usage - done\r\ncpp/test - done\r\ncpp/thread_manager - depend on gflags\r\n\r\nInclude changes to have exeternal:gflags", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thunderboltsid": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10113", "title": "Add new python interpreters to portability and basictests matrices", "body": "Adding Python3.5, Python3.6, and PyPy to test matrices.", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pszemus": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/10089", "title": "Add 'uninstall' make target", "body": "[follow-up from #4914]\r\n\r\nRecently I was getting strange build errors that were caused by some old versions of installed include files and libraries. This patch introduces `make uninstall` target to remove those files.\r\nIt can also be used to remove e.g. shared libraries (`make uninstall-shared`) when one wishes to use static linking.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/15882736", "body": "there's no `pr` target in this Makefile\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/15882736/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "aquinofb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/9852", "title": "Add route_guide_db.json to Ruby examples", "body": "Just add the file route_guide_db.json to `exampes/ruby/route_guide/`", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "kskalski": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/9715", "title": "Add Cygwin platform definitions. Allows compiling with both g++ and clang 3.8.", "body": "Refreshed version of https://github.com/grpc/grpc/pull/9218#issuecomment-270782951", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/22969982", "body": "This causes error for me:\r\nCMake Error at CMakeLists.txt:336 (add_custom_command):\r\n  Error evaluating generator expression:\r\n\r\n    $<TARGET_FILE:/usr/bin/protoc>\r\n\r\n  Expression syntax not recognized.\r\n\r\nany idea what might be happening here?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/22969982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/23209184", "body": "Yap, this should fix it: https://github.com/grpc/grpc/pull/11891#issuecomment-316782796", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23209184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "mzhaom": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/9325", "title": "Add version_cc.cc and thread_manager.cc into grpc++_base bazel rule", "body": "Add version_cc.cc and thread_manager.cc into grpc++_base bazel rule to deal with link error when building a grpc application with bazel.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "farcaller": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/9213", "title": "Added support for custom ssl client cert in grpc_cli", "body": "This extends grpc_cli with support for client cert auth (a very naive, but functional implementation).", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96730425", "body": "Done.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96730425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96730553", "body": "Done.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96730553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96730726", "body": "Done.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96730726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96731018", "body": "Done.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96731018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96731768", "body": "Done. Also added error message below.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/96731768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/113046391", "body": "oops, it dropped off my radar. I'll fix that tomorrow.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/113046391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "perumaalgoog": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/8934", "title": "    C++ Async bidi streaming sample", "body": "    A detailed sample for async bidi streaming client/server with multiple threads.\r\n    Also fixed the Makefile to not include the grpc-reflection or pthread as it causes a crash in grpc completion queue.\r\n    \r\n    (Sending this as I have not found a simple, working example for an async streaming server with proper multi-threaded completion queue handling in C++ yet)\r\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "malexzx": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/8572", "title": "Hpux port (was port GRPC to HPUX 11.31 OS (ia64))", "body": "after coming  #8125, I'm implemented this port to hpux 11.31 OS\r\n\r\nmost tests passed.\r\nto build this port, we need bootstrap gcc 4.8.5 (it is possible, see gcc bugzilla).\r\nTo compile whole project, you need\r\n* openssl 1.0.2j\r\n* zlib\r\n\r\nthen set next environment variables:\r\n```\r\n SSLFLAGS=\" -I/usr/ssl-102/include \"\r\n SSLLDFLAGS=\" -L/usr/ssl-102/lib \"\r\n xARCH_FLAGS=\" -mlp64 -gdwarf-2 \\\r\n          -D_INCLUDE_STDC__SOURCE_199901 \\\r\n          -D_REENTRANT  \\\r\n          -D_INCLUDE_XOPEN_SOURCE_EXTENDED \\\r\n          -D_INCLUDE_HPUX_SOURCE \\\r\n          -D_INCLUDE_XOPEN_SOURCE_520 \\\r\n          -D_INCLUDE_XOPEN_SOURCE_600 -D_GLIBCXX_USE_C99 \"\r\n\r\n CXXFLAGS=\"${xARCH_FLAGS} ${SSLFLAGS} -mlp64 -gdwarf-2 -D_REENTRANT -D_INCLUDE_HPUX_SOURCE  \"\r\n LDFLAGS=\"${SSLLDFLAGS} -mlp64 -gdwarf-2 \"\r\n CFLAGS=${CXXFLAGS}\r\n CPPFLAGS=${CXXFLAGS}\r\n CCFLAGS=${CXXFLAGS}\r\n\r\n EMBED_OPENSSL=false\r\n PKG_CONFIG_PATH=/usr/ssl-102/lib/pkgconfig\r\n\r\n```\r\nI'm test it only on 64 build.\r\nWhile porting, I'm faced with how to do with grpc_resolved_address.len filed. Converting it to \r\nsmallest unsigned type (uint32_t) - solve this with minimal code changes.\r\nInstead folloving code won't work: \r\n\r\n```\r\ngrpc_resolved_addres addr;\r\naddr.len = sizeof .. ;\r\ngetsockaddr(fd,.., (grpc_socklen_t *)&addr.len);\r\n\r\n```\r\nsinse hpux -is big endian, and grpc_socklen_t - 4 bytes type and in original grpc_resolved_address.len - 8 bytes type - function see 0 on it argument (instead of len), and can't assign sa_family filed.\r\n\r\n\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mintar": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/8105", "title": "Add pkgconfig results to LDFLAGS", "body": "Without this patch, the linker doesn't find `-lprotobuf` when protobuf\nis installed to a location that is not on the linker's default search\npath.\n### How to reproduce:\n- install protobuf 3 to non-standard location\n  \n  ```\n  sudo apt-get install -qq -y autoconf automake libtool curl make g++ unzip\n  git clone https://github.com/google/protobuf.git\n  cd protobuf\n  ./autogen.sh\n  mkdir -p $HOME/install\n  ./configure --prefix=$HOME/install\n  make\n  make install  # no sudo required for installing to home dir\n  ```\n- set up environment variables properly\n  \n  ```\n  export PATH=$HOME/install/bin:$PATH\n  export CMAKE_PREFIX_PATH=$HOME/install:$CMAKE_PREFIX_PATH\n  export CPATH=$HOME/install:$CPATH\n  export LD_LIBRARY_PATH=$HOME/install/lib:$LD_LIBRARY_PATH\n  export PKG_CONFIG_PATH=$HOME/install/lib/pkgconfig:$PKG_CONFIG_PATH\n  ```\n- try to build grpc normally\n  \n  ```\n  git clone https://github.com/grpc/grpc.git\n  cd grpc\n  git submodule update --init\n  V=1 make\n  ```\n### Without this patch, the build fails:\n\n```\necho \" HAS_PKG_CONFIG = true, HAS_SYSTEM_OPENSSL_NPN = true, HAS_SYSTEM_ZLIB = true, HAS_SYSTEM_PROTOBUF = true, HAS_PROTOC = true, HAS_VALID_PROTOC = true,\" | tr , '\\n' >cache.mk\nmkdir -p `dirname /home/martin/odil/src/grpc/bins/opt/grpc_cpp_plugin`\nc++ -g  -fPIC -Llibs/opt -pthread    /home/martin/odil/src/grpc/objs/opt/src/compiler/cpp_plugin.o /home/martin/odil/src/grpc/libs/opt/libgrpc_plugin_support.a  -lprotoc -lprotobuf -ldl -lrt -lm -lpthread -lz -lprotoc -lprotobuf -o /home/martin/odil/src/grpc/bins/opt/grpc_cpp_plugin\n/usr/bin/ld: cannot find -lprotoc\ncollect2: error: ld returned 1 exit status\nmake: *** [/home/martin/odil/src/grpc/bins/opt/grpc_cpp_plugin] Error 1\n```\n\nThe bug is both present at current master and `v1.0.0`.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "xyzzyz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/8055", "title": "Remove grpc_base from uses clause of grpc++_base filegroup", "body": "The grpc++ targets link with grpc targets, but not at the level of object files. \n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/8051", "title": "Set O_NONBLOCK on grpc_server_add_insecure_channel_from_fd", "body": "Otherwise, if someone passes a file descriptor where it is not set yet, the server will block. It matches the grpc_insecure_channel_create_from_fd, where we already set the flag.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "amaurymedeiros": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/7966", "title": "Add //external:zlib to grpc_unsecure deps", "body": "The grpc_unsecure rule has message_compress.c in its srcs list.\nThis file depends on zlib.h and such dependency should be covered\nby the BUILD file.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eagletmt": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/7954", "title": "Fix Ruby sample codes to make them work", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zzo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/7902", "title": "Allow protobufjs objects to be used for client calls", "body": "Allows clients to use protobufjs objects when making rpc calls.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "zinuga": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/7751", "title": "Adding mobile-benchmarks doc", "body": "Adding \"how to build mobile benchmarks\" doc here - which we can refer to from the blog showing results of mobile benchmarking.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tengyifei": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/7670", "title": "[C-API] server", "body": "This PR contains all of the client additions, and serves as a starting point for async server API in C.\n\nThis PR implements all blocking APIs and a async unary call and server support for unary async. It has tests for the basic API wrapping layer and for generated code. It supersedes https://github.com/grpc/grpc/pull/7386.\n\nTo reviewers:\n- `include/grpc_c` contains the public headers that the final user could see.\n- `include/grpc_c/codgen` contains the private headers that must be visible to generated code, but shall not be referenced directly in user code.\n- `src/c` contains the implementations of those methods defined in `include`.\n- `src/compiler/c_generator.cpp` contains the bulk of `grpc_c_plugin` code generator.\n- `test/c/end2end` contains end-to-end tests for the APIs.\n- `examples/c` contains the `helloworld` and `routeguide` example ported to C demonstrating the usage of the API.\n\nThe tests are written in C++, since it depends on a server implementation which the C runtime does not provide yet. As a result they are subsumed under C++ tests and can be run by specifying `-l c++` in the test script.\n\nSince this is a huge PR, I hope to split it into different functional components and have multiple reviewers each going over a section:\n- Unary blocking call: `src/c/unary_blocking_call.c`\n- Client streaming block call: `src/c/client_streaming_blocking_call.c`\n- Server streaming block call: `src/c/server_streaming_blocking_call.c`\n- Bidi streaming block call: `src/c/bidi_streaming_blocking_call.c`\n- Unary async call: `src/c/unary_async_call.c`\n\nSome useful files:\n- `src/c/completion_queue.c` handles unwrapping of tags. A `call_op_set` is always used as tag during async operations. The user tag is stored in the set and is what `completion_queue_next` returns.\n- `src/c/call_ops.c` handles filling a `grpc_op` array using operations specified in `call_op_set`. The library can declaratively indicate the actions to be performed in a `call_start_batch`, much like C++.\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/7531", "title": "[C-API] client", "body": "This PR implements all blocking APIs and a async unary call. It has tests for the basic API wrapping layer and for generated code. It supersedes https://github.com/grpc/grpc/pull/7386.\n\nTo reviewers:\n- `include/grpc_c` contains the public headers that the final user could see.\n- `include/grpc_c/codgen` contains the private headers that must be visible to generated code, but shall not be referenced directly in user code.\n- `src/c` contains the implementations of those methods defined in `include`.\n- `src/compiler/c_generator.cpp` contains the bulk of `grpc_c_plugin` code generator.\n- `test/c/end2end` contains end-to-end tests for the APIs.\n- `examples/c` contains the `helloworld` and `routeguide` example ported to C demonstrating the usage of the API.\n\nThe tests are written in C++, since it depends on a server implementation which the C runtime does not provide yet. As a result they are subsumed under C++ tests and can be run by specifying `-l c++` in the test script.\n\nSince this is a huge PR, I hope to split it into different functional components and have multiple reviewers each going over a section:\n- Unary blocking call: `src/c/unary_blocking_call.c`\n- Client streaming block call: `src/c/client_streaming_blocking_call.c`\n- Server streaming block call: `src/c/server_streaming_blocking_call.c`\n- Bidi streaming block call: `src/c/bidi_streaming_blocking_call.c`\n- Unary async call: `src/c/unary_async_call.c`\n\nSome useful files:\n- `src/c/completion_queue.c` handles unwrapping of tags. A `call_op_set` is always used as tag during async operations. The user tag is stored in the set and is what `completion_queue_next` returns.\n- `src/c/call_ops.c` handles filling a `grpc_op` array using operations specified in `call_op_set`. The library can declaratively indicate the actions to be performed in a `call_start_batch`, much like C++.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "cv": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/7042", "title": "Uses require_relative to load protobuf messages.", "body": "This assumes message files generated by protoc will live alongside - or at least relative - to the grpc-generated services, and avoids having to do any load path manipulation in order to accommodate the common use case.\n\nFixes https://github.com/grpc/grpc/issues/6164.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "tbetbetbe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69679082", "body": "LGTM. Will merge it once the switch is completed\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69679082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69852455", "body": "the only thing is the typo in the comment.  Assign back to me once that fixed and I'll merge it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/69852455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70774033", "body": "closes #136\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70774033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70897942", "body": "this change is part of #140\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70897942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71128581", "body": "There is already a final GC cycle happening before shutdown:\n- ruby gRPC calls grpc_shutdown in [an_exit](https://github.com/google/grpc/blob/dec1a71f91b1a65cf826f1f628fc6b6162728c5c/src/ruby/ext/grpc/rb_grpc.c#L241) hook:  [rb_vm_at_exit](http://rxr.whitequark.org/mri/source/vm.c#235)\n- the atexit hooks are run in [rb_vm_destruct](http://rxr.whitequark.org/mri/source/vm.c#1595) as the VM is being shut down, after a final GC.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71128581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71192260", "body": "Please merge the pull the request if you're OK with the change\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71192260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71254525", "body": "For now, no.  There are tools in this repo that automate testing on docker.  They currently rely on the dockerfiles to all be in the same repo. \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71254525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/82477335", "body": "IUC, this has been fixed and should be closed.  If there is still outstanding work, feel free to reopen it. \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/82477335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71527466", "body": "So after further investigation, there is nothing to fix in the ruby implementation.  However this issue will be kept open for tracking.\n\nThe issue happens when the Java client accesses a ruby server and the java implementation where the test response has a PayloadType field.\n- the Java server is defined and implemented using proto2\n- Ruby gRPC requires proto3, as that it uses the official google-protobuf proto implementation\n  hence the two implement\n\nOne of the key differences b/w proto2 and proto3 is how they treat default values; what's happening is that the \n- the response value of the PayloadType fields is the same as its default value\n- ruby (proto3) does not include a field in it's serialized form if it's value is the same as the default value\n- java (proto2) assumes that the field is missing\n- so the test fails, as java believes that the received message is incorrect.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71527466/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72517459", "body": "Closing this: there is nothing to fix, and the earlier comment makes it clear where the issue lies\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72517459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70774033", "body": "closes #136\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70774033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70897942", "body": "this change is part of #140\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70897942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/85528572", "body": "#135 addresses this\n- the credentials are now associated with the port\n- it's possible to have multiple ports\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/85528572/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71192260", "body": "Please merge the pull the request if you're OK with the change\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71192260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71254525", "body": "For now, no.  There are tools in this repo that automate testing on docker.  They currently rely on the dockerfiles to all be in the same repo. \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71254525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72072865", "body": "This pull request can't be merged automatically, it means that there other changes that already pushed that conflict with this.\n- can you get fetch from master and rebase ?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72072865/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72115184", "body": "Fixed in #287 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72115184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72516818", "body": "Fixed in #340 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72516818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72517459", "body": "Closing this: there is nothing to fix, and the earlier comment makes it clear where the issue lies\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72517459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71760539", "body": "Rejecting as recommended\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71760539/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/95323033", "body": "This has been fixed, please reopen if that's not so.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/95323033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73086484", "body": "LGTM: As discussed, since this is a good baseline on which to begin the C# layer.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73086484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23740416", "body": "keep the spacing consistent please\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23740416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23740422", "body": "keep the spacing consistent please\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23740422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23740451", "body": "keep the spacing\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23740451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "iamqizhao": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70003149", "body": "lgtm. Sorry about the delay. I thought I had clicked already.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70003149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133031", "body": "tools/dockerfile/grpc_go/Dockerfile looks good to me. I am changing the\ndirectory structure now so that once my change is in some paths here need\nto be updated. If this cl goes in before my cl, I will handle the change.\nOtherwise, I will leave the specific comments to the file in this pull\nrequest.\n\nOn Thu, Jan 22, 2015 at 5:19 PM, Tim Emiola notifications@github.com\nwrote:\n\n> Assigned #169 https://github.com/google/grpc/pull/169 to @iamqizhao\n> https://github.com/iamqizhao.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/169#event-223436855.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133031", "body": "tools/dockerfile/grpc_go/Dockerfile looks good to me. I am changing the\ndirectory structure now so that once my change is in some paths here need\nto be updated. If this cl goes in before my cl, I will handle the change.\nOtherwise, I will leave the specific comments to the file in this pull\nrequest.\n\nOn Thu, Jan 22, 2015 at 5:19 PM, Tim Emiola notifications@github.com\nwrote:\n\n> Assigned #169 https://github.com/google/grpc/pull/169 to @iamqizhao\n> https://github.com/iamqizhao.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/169#event-223436855.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71133031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "jboeuf": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70214611", "body": "Looks like my git workflow is not working. Closing this pull request to restart a fresh one...\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70214611/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70283812", "body": "Sorry about that... I kicked a build after my changes and everything was fine... I don't really understand, maybe I was on the wrong branch....\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70283812/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70284772", "body": "OK, will do. Is there a central place for documentation on these things? I\nlooks like I'm gathering bits and pieces from different sources (like the\nfact that I have to install protobuf manually for example).\n\nOn Fri, Jan 16, 2015 at 8:57 AM, Craig Tiller notifications@github.com\nwrote:\n\n> make by itself doesn't build & run tests... you probably want to get in\n> the\n> habit of:\n> \n> tools/run_tests/run_tests.py -c dbg\n> \n> to do so\n> \n> On Fri Jan 16 2015 at 8:53:59 AM jboeuf notifications@github.com wrote:\n> \n> > Merged #83 https://github.com/google/grpc/pull/83.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/grpc/pull/83#event-220187782.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/83#issuecomment-70284431.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70284772/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70286448", "body": "OK, I added the other steps to it.\n\nOn Fri, Jan 16, 2015 at 9:03 AM, Craig Tiller notifications@github.com\nwrote:\n\n> I started a page on the wiki:\n> https://github.com/google/grpc/wiki/C-C---development-knowhow\n> \n> On Fri Jan 16 2015 at 8:59:25 AM jboeuf notifications@github.com wrote:\n> \n> > OK, will do. Is there a central place for documentation on these things?\n> > I\n> > looks like I'm gathering bits and pieces from different sources (like\n> > the\n> > fact that I have to install protobuf manually for example).\n> > \n> > On Fri, Jan 16, 2015 at 8:57 AM, Craig Tiller notifications@github.com\n> > \n> > wrote:\n> > \n> > > make by itself doesn't build & run tests... you probably want to get\n> > > in\n> > > the\n> > > habit of:\n> > > \n> > > tools/run_tests/run_tests.py -c dbg\n> > > \n> > > to do so\n> > > \n> > > On Fri Jan 16 2015 at 8:53:59 AM jboeuf notifications@github.com\n> > > wrote:\n> > > \n> > > > Merged #83 https://github.com/google/grpc/pull/83.\n> > > > \n> > > > \u2014\n> > > > Reply to this email directly or view it on GitHub\n> > > > https://github.com/google/grpc/pull/83#event-220187782.\n> > > \n> > > \u2014\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/google/grpc/pull/83#issuecomment-70284431.\n> > \n> > \u2014\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/google/grpc/pull/83#issuecomment-70284772.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/83#issuecomment-70285396.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70286448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70722248", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70722248/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70790800", "body": "@murgatroid99 , @tbetbetbe @nathanielmanistaatgoogle \nCan you have a look as well? This will break node, ruby and python. I can try to fix it myself but the node setup is giving me trouble (I haven't tried ruby yet).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70790800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70901798", "body": "Node and ruby are now fixed.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70901798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71154302", "body": "This is impressive work. Sorry for all the comments on style issues but I think that it is important that we have a consistent code base. I would actually be in favor of having a style guide before we go opensource so that we have something to point to for external contributors.\n\n~~I didn't see any unit tests for the json parser in this pull request. Did you not include them because it was already very big?~~\nI just saw in the description that you were planning to add tests...\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71154302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71236128", "body": "@ctiller: I did a first pass and my comb was not so fine-grain but we should definitely let @nicolasnoble catch up, I agree. The parts I didn't review very carefully are everything that has to do with unicode.\n\n@nicolasnoble, 2 points:\n- Testing: My tests are only intended to unit-test the particular json objects I am parsing to verify that my usage of the json parser is correct. They are by no means unit tests for the json parser itself.\n- Style guide: clang-format can only go so far and won't do anything for naming and idioms used in the C code base for example. If I'm not too lazy, I'll try to start one on the wiki tonight.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71236128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71260114", "body": "Awesome.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71260114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71269179", "body": "Please define a minimum size for grpc_chttp2_encode_timeout as well.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71269179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70790800", "body": "@murgatroid99 , @tbetbetbe @nathanielmanistaatgoogle \nCan you have a look as well? This will break node, ruby and python. I can try to fix it myself but the node setup is giving me trouble (I haven't tried ruby yet).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70790800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70901798", "body": "Node and ruby are now fixed.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70901798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/77311982", "body": "Thanks for making this change with respect to add_sercure_port vs. server\nbut I'm not sure that this issue is actually fixed (but I may be wrong).\n\nThe issue here is that a server may have multiple key/cert pairs for (now)\nthe same port in order to support SNI (see\nhttp://en.wikipedia.org/wiki/Server_Name_Indication)\n\nThe change should be done on the server credentials to accept multiple key\npairs and I don't see that here:\nhttps://github.com/ctiller/grpc/pull/2/files\n\nAm I missing something?\n\nOn Wed, Mar 4, 2015 at 5:35 PM, Michael Lumish notifications@github.com\nwrote:\n\n> Closed #161 https://github.com/grpc/grpc/issues/161.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/161#event-246471737.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/77311982/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122732037", "body": "I should probably fix #2527 before (assigned for beta).\n\nOn Sun, Jul 19, 2015 at 3:26 PM, Craig Tiller notifications@github.com\nwrote:\n\n> @jboeuf https://github.com/jboeuf, @nathanielmanistaatgoogle\n> https://github.com/nathanielmanistaatgoogle - should this be Beta?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/161#issuecomment-122711463.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122732037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/85553375", "body": "You should be able to have multiple SSL key/cert pairs on the same port (see http://en.wikipedia.org/wiki/Server_Name_Indication). #135 does not address this part.\nCan you check:\nhttps://github.com/grpc/grpc/blob/master/include/grpc/grpc_security.h#L171\nand see if you can call this function from ruby with multiple key pairs?\nThanks much.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/85553375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122731910", "body": "I should probably fix #2527 before (assigned for beta).\n\nOn Sun, Jul 19, 2015 at 3:26 PM, Craig Tiller notifications@github.com\nwrote:\n\n> @jboeuf https://github.com/jboeuf, @nathanielmanistaatgoogle\n> https://github.com/nathanielmanistaatgoogle - should this be Beta?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/issues/162#issuecomment-122711458.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122731910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122731784", "body": "I should probably fix #2527 before (assigned for beta).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/122731784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71154302", "body": "This is impressive work. Sorry for all the comments on style issues but I think that it is important that we have a consistent code base. I would actually be in favor of having a style guide before we go opensource so that we have something to point to for external contributors.\n\n~~I didn't see any unit tests for the json parser in this pull request. Did you not include them because it was already very big?~~\nI just saw in the description that you were planning to add tests...\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71154302/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71236128", "body": "@ctiller: I did a first pass and my comb was not so fine-grain but we should definitely let @nicolasnoble catch up, I agree. The parts I didn't review very carefully are everything that has to do with unicode.\n\n@nicolasnoble, 2 points:\n- Testing: My tests are only intended to unit-test the particular json objects I am parsing to verify that my usage of the json parser is correct. They are by no means unit tests for the json parser itself.\n- Style guide: clang-format can only go so far and won't do anything for naming and idioms used in the C code base for example. If I'm not too lazy, I'll try to start one on the wiki tonight.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71236128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71584017", "body": "I know have this warm and fuzzy feeling when I read the code :). I could probably do another pass but I think Craig should go first. @ctiller, your turn!\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71584017/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71940424", "body": "+1\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71940424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71269179", "body": "Please define a minimum size for grpc_chttp2_encode_timeout as well.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71269179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72503680", "body": "We haven't hooked these up:\nhttps://www.openssl.org/docs/crypto/CRYPTO_lock.html\n\nI definitely think it's worth a try which I plan on doing this week.\n\nCheers,\n\n```\nJulien.\n```\n\nOn Mon, Feb 2, 2015 at 8:57 AM, Craig Tiller notifications@github.com\nwrote:\n\n> @nicolasnoble https://github.com/nicolasnoble @dklempner\n> https://github.com/dklempner if anyone has some thoughts\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/issues/319#issuecomment-72492858.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72503680/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72902398", "body": "Addressed initial comments from @nicolasnoble.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72902398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73187004", "body": "I'm happy to do it in /tmp but does that work with windows?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73187004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73188304", "body": "So I currently use cwd, however, the files are not cleaned up if the test\nfails (GPR_ASSERT exits before the remove call) which is why you see them\nin your current dir...\n\nOn Thu, Feb 5, 2015 at 10:14 PM, Craig Tiller notifications@github.com\nwrote:\n\n> In general we can assume write permissions to cwd I guess.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/issues/416#issuecomment-73187764.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73188304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/11826391", "body": "Correct!\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11826391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/11833444", "body": "There are multiple ways to do client-auth: you can do it with a client certificate or with a JWT token for example. Checking that _the client has the right name_ is an authorization concern and yes, this API is the base for implementing authorization logic.\n\nAs for the `final`, I call it base context in my comment only and its probably unfortunate... The design I have for extension (and that I will use for auth related metadata) is by composition/decoration as opposed to inheritance.\nSee the `chained` field in the C struct: https://github.com/grpc/grpc/blob/master/src/core/security/security_context.h#L45\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11833444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14161300", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14161300/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/14721296", "body": "LGTM.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14721296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23473210", "body": "I would prefer to have a parameter with the size of the output so that we're not vulnerable to buffer overflows.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23473210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23477775", "body": "This is slightly better but definitely not as safe as passing the length. I thought about it some more and I really think that the functions exposed in our runtime should meet a high standard (even if that means having to pass another parameter). I would not have as strong an opinion if this were a private function.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23477775/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23481144", "body": "Minimum\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23481144/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23481187", "body": "all these functions should now have grpc_ prefix and not gpr_, right?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23481187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23481245", "body": "Please add a comment that the output must at least have GRPC_LTOA_MIN_BUFSIZE available.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23481245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23485217", "body": "OK... that kind of makes me nervous though since I could totally see that we decide to put that in public/support again and me forgetting about this :(. Please add me to the discussion next week.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23485217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421557", "body": "Can we use an underscore instead? That would be more consistent with our code base.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421585", "body": "underscore.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421585/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421632", "body": "How about GRPC_JSON_TOP_LEVEL_NONE then?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421632/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421671", "body": "unsigned int? unsigned char?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421671/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421856", "body": "We don't use _t suffixes for types in the code base. We should be consistent here as well.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421889", "body": "typedef that?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421896", "body": "typedef that?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421896/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421977", "body": "json_defs.h\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23421977/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422000", "body": "json_reader_defs.h\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422000/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422112", "body": "'enum' not needed if we typedef it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422145", "body": "'struct' not needed if we typedef it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422192", "body": "Why do we have so much code in a header? It would be cleaner to have that in a .c file, right?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422284", "body": "Do we really need that? I would prefer to not have function definitions in the header file.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422405", "body": "It feels like this macro (and the following one) should be upper case. I realize that they may conflict with other constants defined but we could namespace them: GRPC_JSON_READER_EOF and so on...\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23422405/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23423003", "body": "I think that this will tolerate:\n{\"fo\no\": \"bar\"}\nwhere it shouldn't.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23423003/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23423380", "body": "json_writer_defs.h\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23423380/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23423410", "body": "json_reader\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23423410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424164", "body": "typedef that.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424171", "body": "json_writer_defs.h\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424222", "body": "emits\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424245", "body": "or json_writer?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424296", "body": "I think these should be upper case.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424296/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424379", "body": "surely an idiom I am not familiar with. I would much prefer something more readable though.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424455", "body": "I would prefer to have all the includes at the top.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424571", "body": "remove '*/' at the end of line.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424622", "body": "looks like it should be `unsigned int c` (see add_wchar function below).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424622/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424744", "body": "stateless\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424744/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424848", "body": "Why not at the top: it's definitely more readable as we can have an overview of the dependencies without scanning through the file + it's a google convention.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424938", "body": "Have a constant for 0x7fffffff. \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23424938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23425039", "body": "Again, I don't see the benefits of having a header with some definitions in it. We don't do that anywhere else. Let's put this is a .c file.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23425039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23425111", "body": "cast not needed.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23425111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23432805", "body": "yes I know but it is actually unsigned int. I would be explicit here.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23432805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23432993", "body": "sorry :).\n`x = (x -y + 0xff) & ~0xff;`\nIt's hard for me to compute `x`.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23432993/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23433058", "body": "Inconsistent `*` position here and below with the rest of the code. This ought to be fixed by clang-format though.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23433058/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23433071", "body": "drop the `_t`, it's cleaner :)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23433071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23433717", "body": "Just so that this is consistent with the rest of this code:\n\n```\nfor (child = json->child; child != NULL; child = child->next) {\n  if (!strcmp(child->key, prop_name)) break;\n}\n```\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23433717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23668979", "body": "Filed #258. @ctiller, feel free to reassign (but not to me!).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23668979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23669099", "body": "I didn't see test code that uses this file. Did I miss something?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23669099/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "dklempner": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70764360", "body": "This was fixed with the kick pipe refactor from #96 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70764360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70773037", "body": "I see a bunch of:\n\nYAML:12:35: error: invalid boolean\nAllowShortFunctionsOnASingleLine: All\n\nError reading /usr/local/google/grpc/grpc/.clang-format: Invalid argument\nCan't find usable .clang-format, using LLVM style\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/70773037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71276758", "body": "As I see it, we've got three parts:\n1. Filedescriptor kick logic, including the locking to handle kick when there's no fd\n2. A file descriptor free list\n3. The mechanics of actually kicking/draining an FD.\n\n3 has basically no logic, and I firmly believe 1 and 2 should be shared. If anything I'd lean towards pulling the pipe logic out into its own separate file too (which is basically how things look in google3 -- WakeupFileDescriptor is basically the same thing as \"grpc_pollset_kick_vtable\") My guess is that multipolling (especially epoll) doesn't want the full fancy kick mechanism anyway.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71276758/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71565018", "body": "Okay, that should generally address things. PTAL.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71565018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71574549", "body": "Okay, done.\n\nNote that I haven't actually tried building this under windows.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71574549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71759414", "body": "Done.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71759414/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72551919", "body": "This was fixed by pull #348 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72551919/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72942690", "body": "Done -- I've nuked the headers and moved gpr_timespec into our time.h\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72942690/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72946156", "body": "These issues are all fixed with #385 and #380 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72946156/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72961739", "body": "Fixed by #401 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72961739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72962320", "body": "I believe this is fixed by #397 \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72962320/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72965473", "body": "I believe this are all fixed.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72965473/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/9997407", "body": "This email looks like it is from 2001? \"looking at it\" seems a little optimistic here...\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/9997407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "a11r": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71236163", "body": "Addressed all comments. Please take another look.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71236163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71236163", "body": "Addressed all comments. Please take another look.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71236163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72926469", "body": "A README was added in #160 .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72926469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23467376", "body": "On second thoughts, I am fixing the text to use synchronous and asynchronous consistently.\nI will drop the capitalization as suggested.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23467376/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "jayantkolhe": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/127409317", "body": "Now Split into two issues #1121 and #1122 \n\nClosing this since those two cover all things covered in this issue.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/127409317/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/126829521", "body": "done\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/126829521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "maxwell-demon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71519998", "body": "email trigger test\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71519998/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73158039", "body": "Thanks for review, Craig and Alistair.\nPTAL\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73158039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/13014364", "body": "sorry for the breakage.\npr/3194 should fix this.\n\nOn Tue, Sep 1, 2015 at 6:03 PM, Jorge Canizales notifications@github.com\nwrote:\n\n> This line broke the build for Objective-C. It should have been #include\n> <grpc/census.h>\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/grpc/grpc/commit/3c9b87396f17b48e714f07432b733b45ee612812#commitcomment-13012902\n> .\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/13014364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "a-veitch": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71765259", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/71765259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73150938", "body": "This looks good, but I'll wait on finishing the prior review before merging.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73150938/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "donnadionne": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72090704", "body": "fixed by pulling and resolving\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72090704/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73093856", "body": "Fixed up builder.sh after comments.  PTAL thank you donna\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/73093856/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kennetatgoogle": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72111520", "body": "I'm going to bow-out of this CR. The scope of the CL is bigger than I have\ntime for right now.\n\nOn Thu, Jan 29, 2015 at 1:47 PM, Jan Tattermusch notifications@github.com\nwrote:\n\n> ctiller, can you please review the grpc_csharp_ext.c file?\n> I will assign a reviewer for the rest of the code (but you're welcome to\n> take a look as well).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/247#issuecomment-72110955.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72111520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72111520", "body": "I'm going to bow-out of this CR. The scope of the CL is bigger than I have\ntime for right now.\n\nOn Thu, Jan 29, 2015 at 1:47 PM, Jan Tattermusch notifications@github.com\nwrote:\n\n> ctiller, can you please review the grpc_csharp_ext.c file?\n> I will assign a reviewer for the rest of the code (but you're welcome to\n> take a look as well).\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/google/grpc/pull/247#issuecomment-72110955.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72111520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "craigcitro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72298974", "body": "one comment on a TODO, otherwise LGTM. (i can't merge the PR, since i don't have write access to the repo.)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72298974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72495978", "body": "LGTM -- i'm always happy to see docstrings get shorter and easier to read. `:)`\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/issues/comments/72495978/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "mattn": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/9980540", "body": "When the memory is not enough to allocate, gc is started on this part.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/9980540/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/9980776", "body": "I'm asking this to ruby core developer. So please wait a moment.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/9980776/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "rookect": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/10005255", "body": "It's too long for me,I'm a rooky,I can't read at once right now.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/10005255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "zeliard": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/11019101", "body": "cool! I was going to prepare this patch, but you already did it!\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/11019101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "DavidPhillipOster": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/12529451", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12529451/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12529494", "body": "since the point of this change is to encapsulate grpc_channel, consider leaving the original forward declaration, and writing below:\n- (instancetype)initWithChannel:(struct grpc_channel *)unmanagedChannel\n  hostName:(NSString *)hostName NS_DESIGNATED_INITIALIZER;\n\nbelow. Save the #include <grpc/grpc.h> for the headers that need it.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12529494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12529606", "body": "Needs a comment that this initializer will take ownership of the channel, grpc_channel_destroy() the channel when this object is dealloc'ed\n\n(What happens if the same grpc_channel is passed in the initWithChannel: to two different GRPCChannel instances? is it legal to grpc_channel_destroy() it twice? is the channel still valid after the first destroy? Is it a programmer error to pass the same grpc_channel to multiple GRPCChannels?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12529606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12529686", "body": "LG\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12529686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12529729", "body": "Would it make more sense to have this be a read-only property in the .h file, and redeclare it as read-write in the .m file? as it is, client code could setUnmanagedChannel: a different grpc_channel *\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12529729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12529771", "body": "Instead of #import \"GRPCCompletionQueue.h\"\nWouldn't it be better to keep your imports thin, just forward declaring in the .h file:\n\n@class GRPCCompletionQueue;\nstruct grpc_call ;\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12529771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12529887", "body": "This line looks a bit peculiar to me. if the port is zero, then hostURL.port is allowed to return @0, which is not NULL, so ?: will return it. If that's what you meant, it needs a comment.\n\nIt would be more common to write:\nint port = [hostURL.port intValue];\nif (0 == port) {\n  port = scheme isEqualToString:@\"https\"] ? 443 : 80;\n}\naddress = [NSString stringWithFormat:@\"%@:%d\", hostURL.host, port];\n\nbut then you couldn't pass:  \"http://testserver.com:0/myTest\"  and get a zero as the port.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12529887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12529942", "body": "// my attempt at thread safety: All readers and writers are serialized so only one can be in the critical section at a time (other threads block) serialization queue is has as its key the unique hostCache\n\n@synchronized(hostCache) {\n  GRPCHost *host = hostCache[address];\n  if (host) {\n    return host;\n  }\n  if ((self = [super init])) {\n    _address = address;\n    _secure = [scheme isEqualToString:@\"https\"];\n    hostCache[address] = self;\n  }\n  return self;\n}\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12529942/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12529970", "body": "As mentioned previously, in the apps I've worked on, it's standard practice to forward declare structs and @class s unless you need parameters of enum types in this .h file. I don't know the convention of _this_ project.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12529970/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12530024", "body": "This doesn't seem right - Assets are usually for client programmers calling APIs incorrectly, here you are reading a file from disk. Your forcing your client programmers to discover (since it isn't documented) that passing a path to a non0existent or unreadable certificate is a fatal error, forcing them to do some kind of exists check before they can call your API. a more Obj-C way of doing this would be to return NULL on failure and write to an NSError *\\* parameter, passing on the NSData 's \ndataWithContentsOfFile:options:error: error parameter.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12530024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12530045", "body": "better - use NSString's initWithContentsOfFile:encoding:error and skip the NSData step entirely.\n\nIs a legal cert guaranteed to be legal UTF8? Cert's I've seen have binary data in them\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12530045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12530075", "body": "See! if you were returning NULL and an NSError here, you could have a much nicer Assert here.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12530075/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12530102", "body": "Does this need a comment that it is for testing only?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12530102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12530182", "body": "Modification is not the problem. The problem is lifetimes: hostNameOverride might be a temporary that will be dealloc'ed at the next spin of the event loop, when the autorelease pool is drained. UTF8String is already a temporary like that.\n\nYou should probably be copying the UTF8String into an NSData or a malloc'ed buffer, something you know the lifetime of.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12530182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12530193", "body": "Should this initializer even exist?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12530193/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12530194", "body": "Should this initializer even exist?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12530194/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/12556368", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/12556368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "jgeewax": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/14331342", "body": "This variable (`RUBY_TYPED_FREE_IMMEDIATELY`) was only added for Ruby 2.1.0, so using it means Ruby 2.0.0 won't be able to use gRPC. :(\n\nSee https://github.com/ruby/ruby/commit/52811ab159e7a9927eba9aa30bc14684ff0852fe for the change where it was introduced.\n\nI wonder if it'd work if we were to `#ifndef` this to 0 (which is what it was earlier on...)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/14331342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "morteza54dp": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/15494126", "body": "This fix causes an error message that doesn't seem to be an error because census is always disabled.\n\nrun grpc/examples/cpp/helloworld$ ./greeter_server \nE0117 08:14:22.482067339    7446 init.c:123]                 Could not initialize census.\nServer listening on 0.0.0.0:50051\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/15494126/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "pmarks-net": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/15749030", "body": "Per our chat, this change should not be necessary.  If you find a place that constructs host:port strings without using `gpr_join_host_port` or something analogous, then that's a bug that we should fix.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/15749030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "douglasc-nflx": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/17585224", "body": "SECURITY.md still references this document.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17585224/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "topillar": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/17666327", "body": "but .gitmodules is not updated.\nbranch = v3.0.0-beta-2 line should be removed\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17666327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "chrsmith": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/17862416", "body": "Why is GRPC using a `ConsoleLogger` at all? That isn't going to be available on all platforms, and in error cases is still going to spam the console output.\n\nNowhere in the .NET base class libraries does anything touch the console. The default logger for GRPC should be a noop. @jskeet \n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/17862416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "soltanmm": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/18052592", "body": "I haven't followed any recent stuff w.r.t. `six`. Just curious: why 1.5**.2**, specifically?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/18052592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "slash-lib": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/18239362", "body": "FYI Adding a completion queue tag to Alarm - as was done by this commit - means that it is not safe to delete an Alarm before its tag has been removed from the completion queue. The comments should be updated to reflect this.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/18239362/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "daniel-j-born": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/18989363", "body": "You're right about the shutdown bit. I missed that part.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/18989363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "amitwaisel": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/19443056", "body": "@apolcyn `grpc_plugin_support.vcxproj` build fails (on VisualStudio) because `uint` is not defined.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19443056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "tudor": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/19947519", "body": "Due to the call to GeneratorContext::OpenForAppend(), this breaks the Python code generator, as OpenForAppend returns NULL:\r\n\r\nhttps://github.com/google/protobuf/blob/5a76e633ea9b5adb215e93fdc11e1c0c08b3fc74/src/google/protobuf/compiler/code_generator.cc#L78\r\n\r\n(The concrete class is GeneratorResponseContext, but that doesn't override OpenForAppend, so the implementation from the base class (return NULL) remains in effect. https://github.com/google/protobuf/blob/5a76e633ea9b5adb215e93fdc11e1c0c08b3fc74/src/google/protobuf/compiler/plugin.cc#L63)", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/19947519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "emmenlau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/20433940", "body": "I will try to follow your coding style!", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20433940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Dor1s": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/20960524", "body": "Hey @ctiller,\r\n\r\nLooks like this change had broken grpc fuzzing build at OSS-Fuzz: https://oss-fuzz-build-logs.storage.googleapis.com/build_logs/grpc/latest.txt\r\n\r\n```\r\n<...>\r\n\r\n\u001b[1A\u001b[K\u001b[31m\u001b[1mERROR: \u001b[0m/src/grpc/test/cpp/util/BUILD:32:1: C++ compilation of rule '//test/cpp/util:test_config' failed: clang failed: error executing command /usr/local/bin/clang -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/local/bin -B/usr/bin -fcolor-diagnostics -fno-omit-frame-pointer -fno-omit-frame-pointer -gline-tables-only '-fsanitize=address' ... (remaining 30 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\r\n\r\n\u001b[1mtest/cpp/util/test_config_cc.cc:35:10: \u001b[0m\u001b[0;1;31mfatal error: \u001b[0m\u001b[1m'gflags/gflags.h' file not found\u001b[0m\r\n#include <gflags/gflags.h>\r\n\u001b[0;1;32m         ^~~~~~~~~~~~~~~~~\r\n\u001b[0m1 error generated.\r\n<...>\r\n```\r\n\r\nMay I ask you please to take a look at that?\r\n\r\n//cc @inferno-chromium @kcc\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20960524/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "inferno-chromium": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/20960691", "body": "+cc @matt-kwong ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/20960691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "eduherminio": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/21209024", "body": "Hi @yang-g,\r\nFirst of all, thanks for the example.\r\nSo, as far as I can understand, using a service with multiple rpcs would require choosing in both\r\n`status_ == CREATE` && `status_ == PROCESS`\r\namong our different rpcs (using, for instance, two switch-case statements).\r\nAm I missing a shorter way of doing this?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21209024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21326074", "body": "Could you please elaborate further?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21326074/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/comments/21384638", "body": "hmm I see, thank you!\r\n\r\nI'm working on the implementation of an async streaming server (related to PR #8934) and, while doing some research, I found the link to this gist [here](https://groups.google.com/forum/#!topic/grpc-io/JpGURpAANss) ;)\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21384638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "Takika": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/21711955", "body": "Please create a new release with this fix. Without this grpc can't compile on a FreeBSD. I got this error:\r\nmake: illegal argument to -j -- must be positive integer!\r\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21711955/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "soumikshah": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/21937253", "body": "Can I use this [Library](https://www.nuget.org/packages/Grpc.Core/library ) with Xamarin Android/Monodroid? I tried using it but it's giving me System.NotImplementedException: The method or operation is not implemented, at part of code where I initialize Channel.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/21937253/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "fengli79": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/23417402", "body": "@markdroth \r\nOther gRPC environment variable comes with a GRPC_ prefix and in uppercase.\r\nWhy this one doesn't follow the same naming convention?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23417402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "tandr": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/23959056", "body": "README.md in the root of this repo referencing 1.0 in the status column, should it be updated as well, or it is \"something else\" ?", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/23959056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "yongni": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/24817886", "body": "I would not mentioned master here as example, given that master is meant for framework development purpose where as this instruction is for gRPC dev to reproduce a problem against a real older release.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/24817886/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": []}, "jemele": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/grpc/grpc/comments/25164503", "body": "The monotonic start time is needed to handle changes in time. If a time change occurs, some time domains are no longer useful and will result in scheduling/deadline failure.", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/comments/25164503/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "review_comments": []}, "chad": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135073618", "body": "Because he's already in an 'if' to avoid nil", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135073618/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135082558", "body": "Ah I get you. ", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/135082558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "haberman": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/25458189", "body": "Ideally this could call ModuleName() directly instead of re-implementing it:\n\nhttps://github.com/google/protobuf/blob/v3.0.0-alpha-1/src/google/protobuf/compiler/python/python_generator.cc#L87\n\nBut if that's not possible, it seems better to copy that function verbatim to this file, so it's easier to verify that both contain the same logic.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/25458189/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "bdotdub": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/44494393", "body": "I was unsure whether to change this one. There is no `protoc` binary at that path for me. I couldn't find a built `protoc` binary after running `make` in the root of the project or in the `third_party/protobuf` directory.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/44494393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/44581409", "body": "> The Podfile of this sample should just point to that one (as the Podfile for the SwiftSample does).\n\nI can do this!\n\n> And ideally we should move generated_libraries/RemoteTestClient/\\* into tests/RemoteTestClient/\\* to eliminate confusion. (And also eliminate generated_libraries/RouteGuideClient, which isn't used anymore.)\n\nI can send this over in a separate PR. Sound good?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/44581409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "stapelberg": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/25054581", "body": "It is customary to use dpkg-buildpackage within Debian, which operates on a higher level. Is it intentional that you don\u2019t use it (if so: why?) or were you not aware of it?\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/25054581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/25121207", "body": "Fair enough. Using dpkg-buildpackage allows you to make use of debhelper, which comes with a vast collection of helpers for all sorts of stuff you\u2019d want to do in a Debian package. Using them generally allows you to arrive at a higher-quality package with less effort, plus it\u2019s easier for other Debian folks to contribute to your package (or apply Debian-wide cleanups, refactorings, etc.) when you\u2019re using standard infrastructure.\n\nCheck out e.g. https://wiki.debian.org/IntroDebianPackaging or possibly http://meetings-archive.debian.net/pub/debian-meetings/2013/debconf13/high/1009_Packaging_for_beginners.ogv (have not watched the latter, but I assume it\u2019s high-quality).\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/25121207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "adriancole": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50069916", "body": "maybe be more specific about printable? `that may be printable (ex. UTF-8 decoded).`\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50069916/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070174", "body": "maybe a concrete example instead? Ex. grpc defaults to maximum of 64KiB propagated tags on the wire.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070226", "body": "suggestion: using realistic key and values in tests, especially with flags like CENSUS_TAG_STATS, will teach more people how these are used.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070594", "body": "nit: At first I read this as length of the pair. maybe \"Maximum length of a tag's key or value.\"\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070594/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070710", "body": "Binary tags (share the same struct, but )are encoded seperately from non-binary tags.\n\nor similar. When I first read this, I later scrolled up and down to see how they are encoded differently.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070773", "body": "could use a code doc overviewing anything interesting in the below block\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50070773/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50215837", "body": "Ah OK I see what you mean\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/50215837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/77102803", "body": "interesting. in zipkin we actually need to pass both parent and current id, since an id is shared between the client and server side of an RPC span\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/77102803/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "miselin": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/58803351", "body": "Good point. I'll move this into the sanity test Dockerfile (or does it need to be in a wider set?)\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/58803351/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/58803371", "body": "Oops! I'll fix that up.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/58803371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "chen-wang": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23741696", "body": "deleted.\n", "reactions": {"url": "https://api.github.com/repos/grpc/grpc/pulls/comments/23741696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}}}}