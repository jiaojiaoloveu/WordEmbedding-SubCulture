{"_default": {"1": {"ThijsvOers": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/441", "title": "[11ce] Error when entering a vendor which has 2 banks on a supplier invoice ", "body": "Steps to reproduce:\r\nCreate a vendor with 2 bank numbers AND fill in the standard  payment mode field. Then create a new invoice and enter the name of the vendor, you will get the following error:\r\n\r\nOdoo Server Error\r\n\r\nTraceback (most recent call last):\r\n  File \"/opt/odoo/odoo-11.0/odoo/http.py\", line 646, in _handle_exception\r\n    return super(JsonRequest, self)._handle_exception(exception)\r\n  File \"/opt/odoo/odoo-11.0/odoo/http.py\", line 307, in _handle_exception\r\n    raise pycompat.reraise(type(exception), exception, sys.exc_info()[2])\r\n  File \"/opt/odoo/odoo-11.0/odoo/tools/pycompat.py\", line 87, in reraise\r\n    raise value\r\n  File \"/opt/odoo/odoo-11.0/odoo/http.py\", line 683, in dispatch\r\n    result = self._call_function(**self.params)\r\n  File \"/opt/odoo/odoo-11.0/odoo/http.py\", line 339, in _call_function\r\n    return checked_call(self.db, *args, **kwargs)\r\n  File \"/opt/odoo/odoo-11.0/odoo/service/model.py\", line 97, in wrapper\r\n    return f(dbname, *args, **kwargs)\r\n  File \"/opt/odoo/odoo-11.0/odoo/http.py\", line 332, in checked_call\r\n    result = self.endpoint(*a, **kw)\r\n  File \"/opt/odoo/odoo-11.0/odoo/http.py\", line 927, in __call__\r\n    return self.method(*args, **kw)\r\n  File \"/opt/odoo/odoo-11.0/odoo/http.py\", line 512, in response_wrap\r\n    response = f(*args, **kw)\r\n  File \"/opt/odoo/odoo-server/addons/web/controllers/main.py\", line 930, in call_kw\r\n    return self._call_kw(model, method, args, kwargs)\r\n  File \"/opt/odoo/odoo-server/addons/web/controllers/main.py\", line 922, in _call_kw\r\n    return call_kw(request.env[model], method, args, kwargs)\r\n  File \"/opt/odoo/odoo-11.0/odoo/api.py\", line 689, in call_kw\r\n    return call_kw_multi(method, model, args, kwargs)\r\n  File \"/opt/odoo/odoo-11.0/odoo/api.py\", line 680, in call_kw_multi\r\n    result = method(recs, *args, **kwargs)\r\n  File \"/opt/odoo/odoo-11.0/odoo/models.py\", line 4995, in onchange\r\n    record._onchange_eval(name, field_onchange[name], result)\r\n  File \"/opt/odoo/odoo-11.0/odoo/models.py\", line 4891, in _onchange_eval\r\n    method_res = method(self)\r\n  File \"/opt/odoo/custom/addons/account_banking_mandate/models/account_invoice.py\", line 76, in _onchange_partner_id\r\n    super(AccountInvoice, self)._onchange_partner_id()\r\n  File \"/opt/odoo/odoo-server/addons/purchase/models/account_invoice.py\", line 111, in _onchange_partner_id\r\n    res = super(AccountInvoice, self)._onchange_partner_id()\r\n  File \"/opt/odoo/custom/addons/account_payment_partner/models/account_invoice.py\", line 38, in _onchange_partner_id\r\n    lambda b: b.company_id == self.company_id or not\r\n  File \"/opt/odoo/odoo-11.0/odoo/fields.py\", line 969, in __set__\r\n    value = self.convert_to_cache(value, record)\r\n  File \"/opt/odoo/odoo-11.0/odoo/fields.py\", line 1982, in convert_to_cache\r\n    raise ValueError(\"Wrong value for %s: %r\" % (self, value))\r\nValueError: Wrong value for account.invoice.partner_bank_id: res.partner.bank(6114, 5684)", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "astirpe": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/439", "title": "[11.0][BUG] account_banking_sepa_direct_debit: error printing \"Sepa mandate\"", "body": "Steps to reproduce in Runbot:\r\n\r\n- Invoicing > Payments > Banking mandates\r\n- Select some records\r\n- Print > Sepa mandate\r\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/a761667e5b3f3f45ae221de5cf4983e4ca4c5fbf", "message": "[11.0][FIX] account_payment_order: printing report"}], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/444", "title": "[11.0][FIX] account_banking_sepa_direct_debit: printing report", "body": "Fixes https://github.com/OCA/bank-payment/issues/439", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/442", "title": "[11.0][FIX] account_payment_partner: onchange if more than one bank", "body": "Fixes https://github.com/OCA/bank-payment/issues/441", "author_association": "MEMBER"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sbidoul": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/428", "title": "[10.0] payment orders not compatible with bank statement matching", "body": "When you pay through a payment.order with a payment mode to configure to put the counterpart move line on the bank account, the bank statement reconciliation does not work.\r\n\r\n**How to reproduce**\r\n\r\n- Create a payment mode with the option of creating transfer move the the bank account.\r\n- Create and confirm a payment order for amount A.\r\n- Create a bank statement with amount -A on the same bank account.\r\n- Reconcile\r\n\r\n**Expected behaviour**\r\n\r\n- a blue line is visible corresponding to the payment\r\n\r\n**Current behaviour (the issue)**\r\n\r\n- the blue line does not appear\r\n\r\nThe problem comes from Odoo that explicitly checks that account.move.line->payment_id is set for showing blue lines for reconciliation. Since our bank.payment.line is not an account.payment this does not work.\r\n\r\nThe Odoo code is impossible to extend to work around this.\r\nhttps://github.com/odoo/odoo/blob/02b9dbac3250abd942e8f9f9e06621ef829315fe/addons/account/models/account_bank_statement.py#L567\r\n\r\nNow I'm wondering: would it make sense for bank.payment.line to actually be an account.payment?\r\n\r\n@alexis-via @pedrobaeza have you seen the same issue? ", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/428/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/288", "title": "[9.0] payment order: wizard domain bug", "body": "How to reproduce:\n- create a payment order\n- click \"create payment lines from journal items\" to open the wizard\n- populate the wizard to your liking\n- in the move line list: clilck \"add items\": the list is filtered according to the wizard criteria\n- in the wizard: click \"add all move lines\"\n- in the move line list: clilck \"add items\" again: **the list is not filtered**\n\nThis is apparently due to the `populate` method returning a new action on the same transient record. In that case, the framework does not trigger `move_line_filter_change` to initialize the domain.\n\nI don't know how to fix this.\n\ncc/ @alexis-via @pedrobaeza @chrisdec\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/2763263db6a0ed749244fd1a31c0850ce47fec7d", "message": "remove en.po that was erroneously created by transbot"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/56f9dfec6e9e29d59ecb6b76e8ff2ab530ed3608", "message": "pep8 long line"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/278e019177753c27afb2da1ed715d8e6e06ade6d", "message": "prefix versions with 8.0"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/df0afac3f40d512b6301a443e99709c27e103790", "message": "sepa attachments migration fix\n\nSometimes sepa file could have been detached\nfrom the corresponding payment order."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/e0026cda62a7e0c609da0cedbb892e8940281f1e", "message": "sepa credit tfr: get BIC from bank account if not available on bank\n\nSince the bank is optional on bank accounts and the BIC can be set\non the bank account if there is no bank, we allow the system to\nget the BIC from the bank account in case it is not on the bank.\n\nWe give priority to the BIC indicated on the bank, keeping\nthe same behaviour with existing data where the bank BIC is\navailable."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/6d29e2a6ed7395f41bed25a3c8f8c5e2fe8fb721", "message": "avoid generating invalid sepa credit transfer files when bank accounts have no BIC"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/543958abc849fe23cd1743fa582aa430382987ca", "message": "whitespace and pep8"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b780c85555070852e58a7ea22fdd9fe1ea327b9d", "message": "clarified comment about workflow in account_banking_sepa_credit_transfer"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/294c345a4bfa22759ce0d6309984392ce2780105", "message": "account_banking_payment refactoring to make payment export features available without pulling bank statement features\n\n- introduce account_banking_payment_export module with all features from account_banking_payment that do not involve changing the payment order workflow or depend on bank statement changes\n- account_banking_payment_export does not depend on account_banking\n- account_banking_payment is consequently stripped of above features\n- account_banking_sepa_credit_transfer depend on account_banking_payment_export and is compatible with the default payment order workflow"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/622bf25ddc2f6f65d9af8370c8c2c2d0e98dbc38", "message": "remove en.po that was erroneously created by transbot"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/328bc86fd39fd1a5b2d9f153061a876290992eb7", "message": "prefix versions with 8.0"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d41e641403f5efefcc74b85a7365846c23b03fa8", "message": "sepa direct debit: get BIC from bank account if not available on bank"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/bc565493c89b950cbd086ae0aa02223dd461b3a3", "message": "flake8 W503"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/3ec35340859f9d4f764eb7b90baf60161e2f73bc", "message": "move SEPA direct debit menu entries to a menu that does not depend on the core account_banking"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b7875596dbbf402524b60cc8106054fe6ba131e9", "message": "[FIX] remove en.po that was erroneously created by transbot"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/0f7a8f8f81508bf7b7dab83ef0a2ca12b4633770", "message": "[UPD] prefix versions with 8.0"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/7a29f7a4746d507b6b045f17731c361eda81e520", "message": "[IMP] pain: do not use InstrPrty for Direct Debit"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/2c05a79eb0627c31b435e87ec23fa0be4dfebdb0", "message": "[IMP] help text for bank and BIC fields\n\nCourtesy Alexis de Lattre"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/96d2ba0318b4446bbe489e6cb68a5c1eed546d7a", "message": "[IMP] use new style to make selection extendable"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/5b4a5e343201871333db3aa8a76b07b22e1e71dd", "message": "[IMP] sepa: make it easier to extend structured communication types"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/6855968fe60b9dccf4eeaacf353a8c84fc118df7", "message": "[FIX] trivial bug fix"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55722410", "body": "@pedrobaeza in account_banking_payment_export, there seem to be duplicate code in the model and models directories. At least payment_mode.py, payment_mode_type.py, account_move_line.py, account_payment.py.\n\nCan you check?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55722410/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55725994", "body": "Thanks!\n\nI'm having issue with the manual payment mode. When I click on \"Make Payment\", then \"Ok\" in the wizard, I get \"TypeError: create() takes exactly 2 arguments (5 given)\".\n\nRestoring the old api create() in bank_payment_manual.py seems to help. Not sure if the fault lies in the migrated code or in an odoo bug.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55725994/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55730814", "body": "@pedrobaeza so in my test, the new API version of bank_payment_manual does not work. Can you reproduce on your side?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55730814/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57336542", "body": "Hi @pedrobaeza,\n\nTwo other things I discovered in my tests today:\n- calls to netsvc.LocalService('workflow') are deprecated. Can you replace with openerp import workflow?\n- it seems there are still duplicate files in account_banking_pain_base, account_sepa_credit_transfer, account_sepa_direct_debit\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57336542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57603933", "body": "@pedrobaeza there is a pylint error in account_direct_debit/models/account_move_line.py:30 which makes Travis Fail\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57603933/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57932064", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57932064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57932127", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57932127/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57998483", "body": "For the record, the branch with the refactoring of account_banking_payment is here https://github.com/acsone/banking/tree/8.0-refactor-account_banking_payment-sbi\n\nIt is build on top of this PR and includes the port of account_banking_tests.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57998483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58249787", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58249787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59252688", "body": ":+1: \n\n@pedrobaeza do you track these changes to forward-port to your 8.0 branch?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59252688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59882483", "body": "@pedrobaeza there are new flake8 errors (E123) ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59882483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59907767", "body": ":+1: \n\nThanks for this effort, Pedro.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59907767/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60212608", "body": "@pedrobaeza @alexis-via I'd suggest keeping the same behaviour as the 7.0 branch in this PR, and move the discussion about the payment_mode domain to another PR.\n\nRegarding modularity I agree with @alexis-via and @rvalyi: account_payment_sale must not depend on stock.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60212608/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60512413", "body": "@pedrobaeza @alexis-via Regarding point 2, both point of views look valid and debit|payment is not a valid filter to cover for all use cases. Perhaps should we add a new field on payment mode to let the user select explicitly to what type of transaction the payment mode applies (sale|purchase|both, or even something finer grained taking refunds into account)? \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60512413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60513614", "body": "@pedrobaeza there is another duplicate file to be removed: account_payment_purchase/view/purchase.xml\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60513614/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60595986", "body": "@NL66278 thanks! \n\nFollowing thread [1], I think we should create another OCA project named OCA/bank-statement-import for these modules. That will help ensuring all concepts (payment, bank statement import, bank statement enrichment and reconcile) are kept as orthogonal as possible.\n\nThere was not much feedback on my proposal, except @jgrandguillaume who agreed. Perhaps the time has come.\n\n[1] https://lists.launchpad.net/banking-addons-drivers/msg00120.html\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60595986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60597102", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60597102/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60598178", "body": "Then there is the flake8 issue. In this case, I believe we must exclude these modules from flake8/pylint checks as we want them to remain as close as possible to upstream, in order to facilitate maintenance if/when upstream evolves.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60598178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60600214", "body": "@NL66278 if you do the pep8 changes, it will be much more difficult to compare with upstream, and copy upstream changes during the lifetime of 8.0.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60600214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60760556", "body": "@pedrobaeza if you agree, would you reply to my email on the banking-addons-drivers mailing list se we can push the OCA board with the implementation of the guidelines?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60760556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61363370", "body": "Hi @pedrobaeza,\n\nThanks for this work!\n\nI only had a quick look so far, but I'm pretty sure it won't work like that. Most modules expect payment_mode_type.payment_order_type to be either 'payment' or 'debit' but nothing else, so they will break.\n\nWhat I had in mind is a field named 'applies_to' on _payment_mode_ (not payment_mode_type) with possible values 'sale|purchase|both'. Or even more flexible, if we want to take refunds into accounts, a set of 4 flags: applies_to_sale, applies_to_sale_refund, applies_to_purchase, applies_to_purchase_refund.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61363370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61405726", "body": "@pedrobaeza in my understanding, payment_order_type must have the same value on the payment.order, payment.mode and payment.mode.type.\n\nSee for example this filter: https://github.com/OCA/banking/pull/35/files#diff-b5d41850b1a9531fb0e8567b9c3066b2R48\n\nTo me this field really defines what the payment mode type is: a payment or a direct debit. It cannot be both at the same time.\n\nThat's why I suggested in comment https://github.com/OCA/banking/pull/35#issuecomment-60512413 that we add a new field on payment mode, to cover the use case of @alexis-via (ie saying that a sale order will be paid via credit transfer by the customer).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61405726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61854725", "body": ":+1: (code review)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61854725/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22932232", "body": "Interesting bug. The fix looks good to me.\n\nCan you add a space after the comma for pep8 compliance?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22932232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22947449", "body": "@alexis-via's change in return True mimicks the behaviour of the super method.\nActually, it's the return in the super method that should be removed as that method has no meaningful return value.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22947449/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22952822", "body": "Thanks for the reminder about XMLRPC. I had forgotten that one. I agree returning the result of super is a good habit to have.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22952822/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23003575", "body": "@alexis-via can you look after this one? It comes from the new api conversion you did, and now that I look at it again, test_done() looks suspicious indeed especially since _get_transfer_move_lines can return False which is not iterable. \n\nThe test suite works, though and it must go through this, I'll check.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23003575/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23209753", "body": "@lmignon very interesting, thanks!\n\nCan you add a commit to the branch to try if this works?\n\nWould `@api.returns('payment.mode.type')` help avoiding the `or self.env['payment.mode.type']` ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23209753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23220946", "body": "@adrienpeiffer could find a scenario where it broke. So he partially reverted the new api change in https://github.com/acsone/bank-payment/commit/c4aa30a6a8e73acb4bbfe20fd5fe3e0241a05d16\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23220946/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22315204", "body": "Since this can reveal a input data format error, I'd suggest a raise instead of assert\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22315204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23437827", "body": "@StefanRijnhart replacing de element by (1,'=',1) would be slightly more robust. That said, if the domain as been modified too much by other addons, the mechanisme is fragile anyway. But I see no other way. @adrienpeiffer can you make this last change?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23437827/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23438716", "body": "Can you elaborate the scenario that causes problems for you? In my understanding credit or debit can never be negative in Odoo.\n\nSo we have the following:\n- supplier invoice: credit > 0 on payable account\n- supplier refund: not something to be paid on a credit transfer order\n- customer invoice: not something to be paid on a credit transfer order\n- customer refund: credit > 0 on receivable account\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23438716/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/25512098", "body": "For BE, it was there before, but it is indeed optional in several countries. So I also think raising an exception here is too abrupt.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/25512098/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/25512246", "body": "And it breaks the test suite :smile: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/25512246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/25596628", "body": "Perhaps \"You must fill initiating party identifier and issuer on the company form\", so the user easiky understands knows how to fix the error.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/25596628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26891833", "body": "should be _check_sepa_creditor_identifier and go into account_banking_sepa_direct_debit\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26891833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26891842", "body": "remove oldname\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26891842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26891844", "body": "preserve sepa_creditor_identifier\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26891844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26891846", "body": "preserve sepa_creditor_identifier\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26891846/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/18503297", "body": "Probably a matter of taste, but I would prefer to have this field simply named 'blocked'.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/18503297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/18503342", "body": "nitpicking, but can you move the search for the move line in a separate method to avoid duplicate code in _get and _set?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/18503342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26439213", "body": "Now that I read it again, I realize this will build in memory the list of all move lines not linked to an invoice. \nThat would break with a very large number of moves. So I'm afraid it's a :-1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26439213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26445741", "body": "@pedrobaeza I've several database where this query returns more than 1 million ids. This cannot possibly work.\nPerharps if you further filter on payable|receivable and reconcile_id is null this could work?\n\nBTW, have you tried Alexis' fix for https://github.com/odoo/odoo/issues/4857?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26445741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27750333", "body": "@pedrobaeza I was talking about this: https://github.com/OCA/OCB/pull/139\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27750333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27751033", "body": "Yes... I suggest you extend your SELECT to filter on payable/receivable accounts and reconcile_id=False. That should limit the number of id's returned to a more reasonable size.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27751033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28765583", "body": "I'd say it's a matter of taste. I personally find @adrienpeiffer 's version a tad easier to read.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28765583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369377", "body": "If this sentence is true, then this method must not be ported to V8\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369377/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369403", "body": "decorate api.model to preserve compatibility with old api overrides\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369703", "body": "@pedrobaeza that's true but we need to preserve a stable API for downstream extensions. So these kind a changes should be postponed to a next major upgrade.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33412389", "body": "I think you can use payment_lines[0].date in this part too, because lines will be grouped by execution date.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33412389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33130746", "body": "I think you can write line.debit_reconcile() in new api, so no need for pl_obj\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33130746/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33130786", "body": "Use 'auto' ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33130786/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33131007", "body": "I think this trigger can be removed as it is called by reconcile().\nhttps://github.com/odoo/odoo/blob/8.0/addons/account/account_move_line.py#L1074\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33131007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33654487", "body": "@adrienpeiffer would it work by decorating debit_reconcile with @api.cr_uid_id_context ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33654487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420023", "body": "remove description field\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420025", "body": "Add Odoo Community Association (OCA) as author.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420025/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420028", "body": "This usage seems unrelated to the module description?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420028/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/39161363", "body": "why `('payment_order_type', '!=', 'payment')`?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/39161363/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/39161391", "body": "s/Move lines/Journal items/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/39161391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/39161406", "body": "s/move lines/journal items/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/39161406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40317379", "body": "I'm not sure. What if, for instance, a payment order is sent/done, but for some reason (partially) rejected by the bank. The user will unreconcile some move lines and expect to be able to add the move line to another payment order. For reference, this domain has been defined after discussion in #110, #93 and related issues and PR. So I'd say :-1: but requires further thinking.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40317379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40323490", "body": "Moving payment lines out of a sent payment order does not look right to me, as then the payment order would not reflect what has been sent to the bank.\n\n@ecino I think there is a state on payment.order.line too, perhaps it can be used in the filter? \n\n@alexis-via you may be interested in this conversation.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40323490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "pedrobaeza": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/394", "title": "Migration to version 11.0", "body": "# Todo\r\n\r\nhttps://github.com/OCA/maintainer-tools/wiki/Migration-to-version-11.0\r\n\r\n# Modules to migrate\r\n\r\n- [x] account_banking_mandate - By @etobella - #404 \r\n- [ ] account_banking_mandate_sale\r\n- [x] account_banking_pain_base - By @etobella - #405 \r\n- [x] account_banking_sepa_credit_transfer - By @etobella - #406 \r\n- [x] account_banking_sepa_direct_debit - By @etobella - #407 \r\n- [ ] account_banking_tests\r\n- [ ] account_import_line_multicurrency_extension\r\n- [ ] account_payment_blocking\r\n- [x] account_payment_mode - By @etobella - #399 \r\n- [ ] account_payment_mode_term\r\n- [x] account_payment_order - By @etobella - #401 \r\n- [x] account_payment_partner - By @etobella - #400 \r\n- [ ] account_payment_sale - By @arkostyuk - #434 \r\n- [ ] account_voucher_killer\r\n- [ ] bank_statement_instant_voucher\r\n- [ ] portal_payment_mode", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/394/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/304", "title": "Migration to version 10.0", "body": "# Todo\r\n\r\nhttps://github.com/OCA/maintainer-tools/wiki/Migration-to-version-10.0\r\n# Modules to migrate\r\n- [x] account_banking_mandate - By @alexis-via - #305\r\n- [x] account_banking_mandate_sale - By @alexis-via - #305\r\n- [x] account_banking_pain_base - By @alexis-via - #305\r\n- [x] account_banking_sepa_credit_transfer - By @alexis-via - #305\r\n- [x] account_banking_sepa_direct_debit - By @alexis-via - #305\r\n- [ ] account_banking_tests\r\n- [ ] account_import_line_multicurrency_extension\r\n- [ ] account_payment_blocking\r\n- [x] account_payment_mode - By @alexis-via - #305\r\n- [ ] account_payment_mode_term\r\n- [x] account_payment_order - By @alexis-via - #305\r\n- [x] account_payment_partner - By @alexis-via - #305\r\n- [ ] account_payment_purchase - By @GillesTephaneMeyomesse - #352 \r\n- [x] account_payment_sale - By @alexis-via - #305\r\n- [ ] account_voucher_killer\r\n- [ ] bank_statement_instant_voucher\r\n- [ ] portal_payment_mode\r\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/222", "title": "Migration to version 9.0", "body": "# Todo\r\n\r\nhttps://github.com/OCA/maintainer-tools/wiki/Migration-to-version-9.0\r\n# Modules to migrate\r\n- [x] account_banking_sepa_direct_debit - By @alexis-via - #270\r\n- [x] account_payment_purchase - By @cubells - #355 \r\n- [x] ~~account_payment_include_draft_move~~ - Removed - By @alexis-via - #270\r\n- [x] ~~account_banking_payment_export~~ > Merged with Odoo's v8 _account_payment_ module in _account_payment_order_ - By @alexis-via - #270\r\n- [x] account_payment_partner - By @alexis-via - #270\r\n- [x] account_payment_transfer_reconcile_batch - By @sergio-teruel - #323 \r\n- [x] ~~account_direct_debit~~ > Merged in _account_payment_order_ - By @alexis-via - #270\r\n- [ ] bank_statement_instant_voucher\r\n- [x] account_banking_pain_base - By @alexis-via - #270\r\n- [ ] account_voucher_killer\r\n- [x] ~~account_banking_payment_transfer~~ > Merged in _account_payment_order_ - By @alexis-via - #270\r\n- [x] account_banking_sepa_credit_transfer - By @alexis-via - #270\r\n- [x] account_payment_sale - By @alexis-via - #270\r\n- [x] ~~account_payment_sale_stock~~ - Not needed anymore - By @alexis-via - #270\r\n- [x] account_banking_tests - By @alexis-via - #270\r\n- [ ] account_import_line_multicurrency_extension\r\n- [ ] account_payment_mode_term\r\n- [x] account_banking_mandate - By @alexis-via - #270\r\n- [x] account_payment_blocking (included in account_payment_order and https://github.com/OCA/account-invoicing/tree/9.0/account_invoice_blocking)\r\n- [x] portal_payment_mode - By @chienandalu - #387 ", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/296ac6a1c5ce98886f55760766fb708cca1a674c", "message": "Merge pull request #443 from onesteinbv/11_fix_account_payment_order\n\n[11.0][FIX] account_payment_order: printing report"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/64394aa392d5bf0e546e96fc87d7962b298bc044", "message": "[FIX] account_payment_order: Fix domain in account.move.line view"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c02b9f02f2b3af0249bdcd02665d7efd419496f0", "message": "[FIX] account_payment_order: Correct domain definition on account.payment.line view"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/6b2f7794dbd4d296ce47596573833946a3a3cf42", "message": "*: Change copyright and author after company merging"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d22e3226af67e22d70db9f0133dc017a30ccc2c4", "message": "Rename manifest files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/957abaea4ea43997febb5af121184ac4898a51b4", "message": "Make modules uninstallable"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9e332376e43e38d0706a418b8b0180d7a1b6d5a4", "message": "Remove unused POT files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4c414982b9f7cd31df708a0c03ee2fade5af76a2", "message": "*: es translations"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c53566d6dacce7522de7767a93ac896efe419314", "message": "*: Bump version numbers"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/01e57305741d56a67fca8f1f9eade61854bff2a0", "message": "*: Short headers"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/47e980fd219e04ea25355e1ea834deb5db93f496", "message": "Make modules uninstallable"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/db5bd80203eff481490dbeb854c9495a14c3f61b", "message": "Expand authors + manifest cleaning"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/81aea904416ce2454b307c5edd6c4b833770d125", "message": "Translation template files [IMP] Translations to spanish"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/8a87120fdb355f1fa091df15da17ddec23e03a66", "message": "account_payment_sale_stock: Split for removing stock dependency on sale [DEL] Remove old translations templates [IMP] More reorder on folder structure"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/2f906bc42852b7f7190a99f4e0b615b2e455dad9", "message": "Uncaught flake8 errors"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b04d278fc8e314e5aed744ae3157abc75f460f6a", "message": "Replace deprecated workflow calls"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c74190781426c1151cf4cfefd3f80e56f9533de6", "message": "Clean files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/833144982bfbbf9ef41e82364ab916c693d96963", "message": "Update icon files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/cf00ab76b9002b23825b39026efe221a0176fc76", "message": "Migration and enhancement of all modules involved in SEPA"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/785979342ff31966d1febf24711979ecb586b2c0", "message": "Initial adjustments for 8.0 repository"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/56693ea1cf67b1862376f77b6fb28743a95bedb2", "message": "Translation template files for all modules."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/5d312aa87cb66ed21701ac888b63858dabc40dd2", "message": "account_banking*: Show identifiers at payment mode level\n\nNow the visibility is controlled through a security group."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d175f8f44411356c18f876c71e0bfa8ee90a6490", "message": "*: Change copyright and author after company merging"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4cf3f4b1e8071969adf965abfb366005824e76b3", "message": "Rename manifest files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b7ae9f37b10ce14fe5ec2fa33de683303b232e50", "message": "Make modules uninstallable"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/2280387bde737c982ce68bc5f79d576e71603e74", "message": "account_banking_sepa_direct_debit: Fix mandate report layout"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c728626b651f1aa3c41ab3418bcc3162896eaa8c", "message": "account_banking_sepa_direct_debit: Spanish translation"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/6723d6bd5f3efe68fa44465322be50b2f9d10d38", "message": "Remove unused POT files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/5a7ee68bcafae3f75a7df98f38bf9f02885f9008", "message": "account_banking_sepa_direct_debit: Fixes #257"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/454da0a88c71d25ef55acd73c27d6e405260080b", "message": "*: es translations"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1b3bcff48a3f202e4e32bc784e79f14c6c4843a9", "message": "*: Bump version numbers"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/23c9cb6725bb0f7e6e7ca9434f68492b8ac9ccbe", "message": "*: Short headers"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c4dccd553ba231fde10a85f169599f40f7a75f00", "message": "Make modules uninstallable"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/27fc16106bec923b2e131fc64e913deac05f99aa", "message": "Expand authors + manifest cleaning"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d965af29015c97ae6ddb9e2f8a9e6e17012a78bf", "message": "Translation template files [IMP] Translations to spanish"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/98158f895347c22785c2e5224139590b9d96fd6b", "message": "account_payment_sale_stock: Split for removing stock dependency on sale [DEL] Remove old translations templates [IMP] More reorder on folder structure"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/3d3edfc2eca564149035d7f4eb947556a2fd3207", "message": "account_banking_sepa_direct_debit: Set args correctly for cron job"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/0e991a29d53cc5749fefede39d9cfe02b18ae364", "message": "Uncaught flake8 errors"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c09e27065a329dbe883a77e2b00f2c511aad3d0f", "message": "account_banking_sepa_direct_debit: Restore scheme field in mandate view"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/a90a66e961ab0202834a48a49b9af05f57648c2c", "message": "account_banking_mandate dependency"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/62d13a87d26209ac450b0ac74a0852ac39f939c4", "message": "account_banking_mandate, spliting functionality in two modules"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/8a24809a139861bdd969af6240a5b188da7b678a", "message": "Replace deprecated workflow calls"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9f17b9d1773d0ccac96a6633de5c3be7ec4a7c32", "message": "Clean files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/a7bdb142f7d4efa3a939136caa543a05f101ee7a", "message": "Update icon files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/e89b7a59df6602032b22d4a3889cc4755b313211", "message": "Migration and enhancement of all modules involved in SEPA"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/02acf290e855c34c7f8b4e7da13b20d1ed6f9556", "message": "Initial adjustments for 8.0 repository"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f10ac256344a48293bb1e1b2d953fa035967fb5a", "message": "[IMP] account_banking*: Show identifiers at payment mode level\n\nNow the visibility is controlled through a security group."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c803927b465bed756099f2e3026243bd0e205055", "message": "[CHG] *: Change copyright and author after company merging"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/8aadcd51dc0934cd8a316dac7915f2645052cc60", "message": "[MIG] Rename manifest files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4ed1e4d4f7e577e722c9828a9ce43c82b00eaaf3", "message": "[MIG] Make modules uninstallable"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/2ce69f8f83a403eab6a36035757ab61c5e6d16f0", "message": "[IMP] Remove unused POT files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9f66889a9eb9d15b5f35cdfdb160c4e5a1bb72bf", "message": "[IMP] *: es translations"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ff2599a8528c62aaf45e99abd76a1196683cb482", "message": "[IMP] *: Bump version numbers"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/264be465d1c0c76667f55f551996e78d0ed20354", "message": "[IMP] *: Short headers"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d0b41b7f441b1359a66f5a926be0057943597218", "message": "[MIG] Make modules uninstallable"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/86dbfb48c8a7096163b0ee969011c27960d5f57e", "message": "[IMP] Expand authors + manifest cleaning"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f4f8e6c8f3bb2e1cc8b1af53b67fdd4e34420b5b", "message": "[FIX] account_banking_pain_base: Set a general rule for the initiating party identifier"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/920ff73e7284e8e9997027dbcd24613b5ecd320a", "message": "[IMP] Translation template files\n[IMP] Translations to spanish"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/94133f80d0482496a26b9316ca2c8434768f8d2e", "message": "[FIX] account_payment_sale_stock: Split for removing stock dependency on sale\n[DEL] Remove old translations templates\n[IMP] More reorder on folder structure"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f69f5399538bf68d1449b1b20bf8ac26fcd92e27", "message": "[FIX] Uncaught flake8 errors"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/074c85d9f3edeb8bb74010e0f472eb1c1ba2024e", "message": "Clean files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/039ac02912a73ac1445d821cb170eb76dfdf7b66", "message": "[MIG] Migration and enhancement of all modules involved in SEPA"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/97d3a49defa057c9c6aeaf850a3776055c6e8645", "message": "Initial adjustments for 8.0 repository"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48276342", "body": "As in Launchpad, for me :+1: (code review)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48276342/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49024719", "body": ":+1: \nNot very friend of raw SQL, but needed for performance...\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49024719/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49137361", "body": "One question, Stefan: This excludes refunds? I'm not sure about that part\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49137361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51459818", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51459818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471787", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/52956521", "body": "Travis doesn't inform about PEP8 issues in the modules you mention, but it will be better to complete PEP8 fix in the same PR. If this a work in progress, please mark it with the corresponding label.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/52956521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53027837", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53027837/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53353645", "body": "PEP8 OK, so :+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53353645/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53388071", "body": "Please give time to reviewers to review this significal change, and it's also a bad month...\n\nThanks.\n\nRegards.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53388071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53992701", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53992701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53992723", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53992723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53992793", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53992793/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53992859", "body": "Please rebase and let's try to speep up this PR\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53992859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/54851920", "body": "Two little PEP8 errors:\n\n```\n./account_banking_partner_journal_account/res_partner.py:67:80: E501 line too long (80 > 79 characters)\n./account_banking_camt/__openerp__.py:7:80: E501 line too long (80 > 79 characters)\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/54851920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/54874506", "body": "OK, PEP8 is fixed. It is still red, but because of another issue. If you are OK, I'm going to merge this, because I need for the base of the 8.0, that I have ready a big migration PR.\n\n:+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/54874506/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55093695", "body": "With this, Travis now must be green.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55093695/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55095711", "body": "I have to fix another issue, but now all it's OK.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55095711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55097292", "body": "Has this PR be done against 7.0 instead master?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55097292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55099543", "body": "Done in #35 \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55099543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55099583", "body": "Please check #35 for a full migration of this and other modules.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55099583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55099798", "body": "Hi, @StefanRijnhart, I have made a full migration to new API in #35, including this module. Can you check it?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55099798/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55562823", "body": "You will need then to make again a PR against that branch. I close this one. FYI, I have integrated your patch in my migration to 8.0 (#35).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55562823/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55563825", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55563825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55724206", "body": "@sbidoul Sorry, it was a kind of mess with git. I have removed them.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55724206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55731016", "body": "I'm going to try and fix it. I had to leave some methods with old API in several models because of the mix of new and old. Maybe it's the same case.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55731016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56024930", "body": "Maybe _account_banking_sepa_direct_debit_on_the_fly_ can be a better name?\n\nBTW, the other day we fixed in Odoo the problem with 64 chars in image path that prevents to install modules with long names like this (SQL sentence).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56024930/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56185791", "body": "@CSester, if you have the possibility of fixing here pylint problems, better do it.\n\nRegards.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56185791/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56345512", "body": "Sorry, I must say _account_banking_sepa_direct_debit_mandate_on_the_fly_, but both are not specific enough and the name is so long...\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56345512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56358446", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56358446/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56484367", "body": "Hi, @sbidoul,\n\nI have fixed the problem, cleaning also the code, because the used method was not the best way. As I only made blindly the port, I didn't see to this optimizations.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56484367/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56485158", "body": "A little remark, but the rest :+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56485158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56487882", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56487882/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56496578", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56496578/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56497030", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56497030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57850623", "body": "As I have updated 8.0 modules to new API in #35, error doesn't apply in that branch.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57850623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57893500", "body": "In the migration to 8.0, I can confirm that this doesn't cover correctly refunds, but it's not a question of this PR. For this, :+1: \n\n@StefanRijnhart, please rebase so that we can make the merge.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57893500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57956626", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/57956626/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58160537", "body": "Thanks for the input, @alexis-via. I'm resolving now the duplicated files issue, and addressing @sbidoul. I'll take care also about your input.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58160537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58167721", "body": "@alexis-via, I'm going to integrate also the 7.0 work of splitting mandates as generic ones, but concerning your issue, I have imported mandates via XML-RPC specifying a mandate number and I don't have any problem. Also you can set this field via ORM, because readonly argument is only considered as a default value for views, and also on onchanges, but not on direct creations or modifications. Have you tried before this?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58167721/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58233768", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58233768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58262743", "body": "I'm doing the work tonight, so tomorrow it's going to be ready.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58262743/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58292589", "body": "I have made a first upload of the migration with the generic bank mandate, but I'm seeing that some design things doesn't like me too much, so maybe I will change it. If you want, you can try for now and it's fully functional.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58292589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58475148", "body": "Yeah, sorry, I have just fixed.\n\nThanks for noticing.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58475148/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58476874", "body": "Oh, that's right. Let me a couple of hours to fix it.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58476874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58661190", "body": "In this case, it doesn't fail, because when you access a recordset with dot notation (ActiveRecord pattern), it returns values from first record. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58661190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58674222", "body": "Interesting... Have you tried that inheritance work this way?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58674222/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58680697", "body": "Cool to know!\n\n:+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58680697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58694825", "body": "I have merged some fixes from @alexis-via for some sdd.mandate old references.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58694825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58872498", "body": "Well, it's strange, because theory says that, but I have changed it in any case.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58872498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59137616", "body": "Please someone of the board make this switch.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59137616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59169370", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59169370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59234333", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59234333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59254182", "body": "Yeah, it's not an issue in my case, as I rewrite it to new API: https://github.com/pedrobaeza/banking/blob/8.0-sepa-migration/account_payment_purchase/models/stock_picking.py#L35\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59254182/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59720573", "body": "Why is not needed?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59720573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59724778", "body": "OK, thanks for the explanation :+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59724778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59733979", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59733979/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59859388", "body": "@NL66278 Thanks for the review. I have detected and fixed the problem with that field (a typo in the argument + readonly behaviour).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59859388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59859441", "body": "Please give the other reviewers your thumbs up to merge at last this PR.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59859441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59892337", "body": "This is due to: https://github.com/OCA/maintainer-quality-tools/issues/115, but I have fixed it anyway.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59892337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60065139", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60065139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60161879", "body": "I answer first the point 2) because it doesn't required further investigation:\n\nThis is also done on purpose, and I think it must remain as is now, because in my experiences with the users of the system, they got very confused about payment modes that can be selected on customer invoices and sale orders, and the same for direct debit modes that can be selected on supplier invoices and purchase orders. They selected the wrong one on one invoice type, and when they try to add the invoices to a payment order, they got confused about not finding them.\n\nI think the use case you are describing is a misuse of this module, and you should use another method for this, or overwriting in a custom module to remove this restriction.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60161879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60222987", "body": "Well, I think this must be discussed before doing any merge, because I don't want to issue this first version with the usability problem I see. Spanish people is going to use for the first time this branch, letting _account_payment_extension_, and they expect a correct functionality to be convinced of the switch, so I prefer to not have complains about this. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60222987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60596806", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60596806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60640321", "body": "I agree we should split this into a new project for get a cleaner vision of what are new lines with banking (in general) addons. We should push OCA to make the move.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60640321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60909079", "body": "@StefanRijnhart, can you make the PR, please?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60909079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60909653", "body": "@NL66278 It's more a cleaning strategy than an area split decission. Having this new repo for import, we start from scratch and all modules present in it are with the new components, and we can even backporting them to v7, but having in the same repo, user will be confused about what modules to use.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60909653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60911308", "body": "Thanks! :smile:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60911308/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61061818", "body": "Thanks for inspecting all the code.\n\n:+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61061818/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61061869", "body": "You should use 8.0 branch, not master.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61061869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61061949", "body": "Can somebody with permissions attend this issue? There are people that are making PRs against master because of this.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61061949/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61075557", "body": "That's a very good idea, but I haven't got time to do it. I will do it ASAP.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61075557/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61078005", "body": "I'll try to do it today, and I tell you if I don't. Thanks for your help.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61078005/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61108350", "body": "There are some missing final lines in py files that Travis are going to complain about.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61108350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61125987", "body": "Can you please solve little flake8 issues?:\n\n```\n./account_payment_move_line/model/account_move_line.py:33:1: W391 blank line at end of file\n./account_payment_move_line/model/account_invoice.py:31:80: E501 line too long (81 > 79 characters)\n./account_payment_move_line/model/account_invoice.py:35:80: E501 line too long (80 > 79 characters)\n./account_payment_move_line/model/account_invoice.py:39:5: E265 block comment should start with '# '\n./account_payment_move_line/model/account_invoice.py:39:5: E303 too many blank lines (2)\n./account_payment_move_line/model/account_invoice.py:56:22: W292 no newline at end of file\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61125987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61278416", "body": "Well, thank you both! :smile: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61278416/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61350207", "body": "OK, I have worked today on the remaining issues:\n- I have splitted again stock part of the sale process in the _account_payment_sale_stock_ module.\n- I have implemented the three-valued selection for payment, debit or both export types, and it works good. Thanks @sbidoul for the suggestion.\n  *I have added translation template files for all modules.\n- And as an extra, I have translated all modules to spanish.\n\nPlease review and give this the final impulse to get it merged at last.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61350207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61402336", "body": "Hi, @sbidoul, the way you propose will duplicate fields for the same purpose, because payment_mode_type is only used to filter invoices on payment orders and direct debit orders, and thus there is no impact in adding this value. Or can you point me to any other use or code that it's dependant of this?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61402336/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61771007", "body": "Thanks!\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61771007/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61859553", "body": "I insist that the field is only used in that way, so I see no need to duplicate fields. Payment mode type only means where it applies, and it's not the same as the type of the payment orders, that can only be payment or direct debit.\n\nBut let's see what other says. @alexis-via, any opinion?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61859553/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61942833", "body": "Seems OK.\n\n:+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61942833/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/comments/20029425", "body": "Incorrect indentation", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/comments/20029425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/comments/20029427", "body": "Incorrect indentation", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/comments/20029427/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/comments/20029430", "body": "Incorrect indentation", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/comments/20029430/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/comments/20143840", "body": "It would be desirable that you run the wizard normally, not directly calling the implied method, because in other version, the method can change.", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/comments/20143840/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/comments/24907800", "body": "Why the domain doesn't include here `type`?", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/comments/24907800/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/comments/24952777", "body": "This domain should remain the same.", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/comments/24952777/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/comments/24952784", "body": "I'm thinking that you shouldn't make include_returned dependent of invoice field. Just present the option always and don't include it in the comparison.", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/comments/24952784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/comments/24952787", "body": "Don't put this modifier", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/comments/24952787/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/15971047", "body": "typo error `s/payemnt/payment`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/15971047/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/15971136", "body": "In account_payment_extension, there is the same field, and we have a lot of performance problem with this. I resolved it making this field a stored value with triggers. You can see it here:\n\nhttps://github.com/OCA/account-payment/blob/7.0/account_payment_extension/account_move_line.py#L198\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/15971136/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/16542208", "body": "In this version, it's still OpenERP\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/16542208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/16542335", "body": "This is old data. You can put something like I made on account-invoicing project:\n\nhttps://github.com/OCA/account-invoicing/blob/7.0/README.md\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/16542335/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17894928", "body": "Better put `needed` instead of `necessary`, don't you think?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17894928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/18740121", "body": "Put a space after `#`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/18740121/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/18740123", "body": "Better to use `statement.company_id.currency_id.id`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/18740123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19610740", "body": "This file already exists. Why it appears as added?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19610740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20750437", "body": "This should be enclosed in a try to avoid a crash in server startup if library is not present, or move it to the method where is used (and thus only used if module is installed).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20750437/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20750571", "body": "This is not needed in 6.1\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20750571/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20750638", "body": "The same as above for avoiding server crash\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20750638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20750670", "body": "For v7 it has been developed an independent mandate module, but maybe it's too much work for this old version.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20750670/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20801355", "body": "Not exactly, because import in headers are executed at server initialization time, avoiding to start the server if the library is not present. With this trick, you allow to start server, but don't let the module install with the declaration in `external_dependencies`.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20801355/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20801432", "body": "I'm refering the whole file. Sorry for not being too much clear. As you can see, the migration script is for 7.0 version.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20801432/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20719754", "body": "demo_xml is deprecated and not used here, so you can remove it.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20719754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20719913", "body": "Please put it in a separate file README.rst, and explain the description indicating that only users that belongs to the group \"invoicing_voucher_killer.invoice_voucher_user\" can see this button.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20719913/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20720035", "body": "Instead of doing this hazardous replace, I would change attribute `groups` to change only that attribute.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20720035/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21464729", "body": "This must be of the same length of the title string, or Odoo RST parser will complain\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21464729/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21464741", "body": "Idem\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21464741/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21464875", "body": "You can add `-------` below to make it a subtitle. I think we shouldn't distinguish between author and contributors, because most of times the contributions can be bigger than the original code.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21464875/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21013258", "body": "Please remove this tag (is deprecated and not needed when inheriting).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21013258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344039", "body": "Put same length for the title string and the == string. This can be `Include draft moves in account payments`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344039/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344044", "body": "s/allow/allows\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344049", "body": "s/line/lines\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344052", "body": "s/line/lines\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344052/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344073", "body": "Replace with `...to payment orders before making the periodic process of posting all moves`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344073/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344085", "body": "Maintainer is not a key that is used in the manifest\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22344085/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23420569", "body": "This is the main reason why we can't add refunds. We can redo this making:\n\n```\n...\n'|',\n'&',\n('credit', '>', '0'),\n('type', '=', 'in_invoice'),\n'&',\n('credit', '<', '0'),\n('type', '=', 'in_refund')]\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23420569/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24634912", "body": "Remove this line\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24634912/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24634920", "body": "Payment orders returns\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24634920/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24634983", "body": "Explain a little more that allows to catch several reconciled account move lines, to give back to a state where the debt is still open, and letting history of it.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24634983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635006", "body": "Why 2 files? Put it in only one.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635033", "body": "Estado cambiado\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635037", "body": "Resumen\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635044", "body": "Mensajes sin leer\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635044/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635055", "body": "Mensajes del sitio web\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635061", "body": "Historial de comunicaci\u00f3n del sitio web\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635091", "body": "Remove this line as is translated in parent class\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635091/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635103", "body": "Remove this line as is translated in parent class\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635103/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635111", "body": "Remove this line as is translated in parent class\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635116", "body": "Fecha del \u00faltimo mensaje\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635122", "body": "Translate\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635125", "body": "Translate\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635143", "body": "Remove this line as is translated in parent class\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635145", "body": "Remove this line as is translated in parent class\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635149", "body": "Remove this line as is translated in parent class\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635161", "body": "Translate\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635166", "body": "Translate\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635166/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635173", "body": "Translate\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635230", "body": "Remove\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635230/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635240", "body": "Remove\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635240/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635297", "body": "I think in v8 this is done by default, so there's no need of this, but please check.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635297/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635319", "body": "Remove\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635353", "body": "Returned amount. Can be differente from the move amount\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635353/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635373", "body": "Remove commented block\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24635373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27281505", "body": "Remove [] from author.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27281505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27748543", "body": "Put a proper title.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27748543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26442943", "body": "The memory footprint is very short and only for the live of the query, so I beg you to reconsider your decission. There's no other way to make it, and remember that this breaks standard import functionality that works without this module. This should be only temporary also.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26442943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27749215", "body": "Hi, @sbidoul, which fix do you talk about? I haven't seen any, and as I said, I see no other possibility: do this \"in ids\" trick here or in search method, but with the same drawbacks.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27749215/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27750592", "body": "Well, this patch avoid the problem simply storing the field in DB and making regular searches. I can completely overwrite the invoice field, but that was one of the things we try to avoid in the past. Doesn't it?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27750592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27752686", "body": "I have done it the way you told me. Please check.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27752686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28193257", "body": "You can take the occassion to change this class to new API.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28193257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28193264", "body": "Shorten this with:\n\n```\ncontext['display_credit'] = payment.payment_order_type == 'payment'\ncontext['display_debit'] = payment.payment_order_type != 'payment'\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28193264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31449022", "body": "You can avoid SQL using registry, that works like `self.pool`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31449022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712055", "body": "You can remove this part\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712055/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712107", "body": "s/are parts/is part\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712116", "body": "s/are parts/is part\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712116/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712143", "body": "s/are parts/is part\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712143/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712206", "body": "s/are parts/is part\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712209", "body": "s/are parts/is part\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712209/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712226", "body": "s/are parts/is part\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31712226/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892157", "body": "Decorate with @api.model for possible calls from a recordset\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892165", "body": "Decorate it with @api.model for possible calls from a recordset\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892165/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892181", "body": "Decorate it with @api.model for possible calls from a recordset\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892339", "body": "Decorate it with @api.model for possible calls from a recordset\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892339/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892364", "body": "Decorate it with @api.model for possible calls from a recordset\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892371", "body": "Decorate it with @api.model for possible calls from a recordset\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892417", "body": "Decorate it with @api.model for possible calls from a recordset\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31892417/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369444", "body": "We can even remove this method and \"hard-code\" it, because now we can make _selection_add_ in overrides.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369753", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/32369753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33415869", "body": "Thanks for the tip. Updated!\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33415869/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33418354", "body": "Translate this\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33418354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33418357", "body": "Make it Html, so that you can even put rich formatted text\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33418357/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33418360", "body": "You should put the credits in the change module (_account_payment_partner_, not here).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33418360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33418373", "body": "Why regenerate this file that it hasn't been touched?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33418373/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33227918", "body": "This method can also be removed\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33227918/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33750366", "body": "Total haber\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33750366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33750422", "body": "Don't make these changes if not needed. It's only your style preference (one argument per line). I prefer for instance the other style, that don't need too many lines for the same. Both are PEP8.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33750422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33750455", "body": "Don't use tab as the indentator\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33750455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33750465", "body": "Don't use tab\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33750465/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420268", "body": "s/allow/allows\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420268/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420274", "body": "Replace Today to 2015, because today is relative\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420277", "body": "You should put only the company, not the web or your name. Put website key for your website URL.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34420277/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35750596", "body": "Isn't better to migrate this to new API?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35750596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35750616", "body": "The same\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35750616/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35863080", "body": "Change text \"only for Germany\" with \"used in Germany\", because as a standard, it can be used elsewhere.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35863080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35958838", "body": "As this change is only 2 lines, I see it very simple:\n\n```\n@api.multi\ndef extend_payment_order_domain(\n        self, payment_order, domain):\n    super(payment_order_create, self).extend_payment_order_domain(\n        payment_order, domain)\n...\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35958838/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35959264", "body": "You can migrate only these files, not the entire module. Old and new API can coexist, even in the same module or file\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35959264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/41093469", "body": "It's a verbatim copy from here: https://github.com/OCA/bank-payment/pull/169/files#diff-b5d41850b1a9531fb0e8567b9c3066b2L36\n\nBasically, it's because there are 2 \"Invoices\" buttons, one for direct debits, and another for payments, and this avoids to appear the incorrect button on the non corresponding view.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/41093469/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/41148347", "body": "Please put name attribute\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/41148347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40317345", "body": "Minor thing: please call it `_compute_total` to follow conventions about compute methods names\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40317345/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40318392", "body": "If you have used the transfer account, it shouldn't be a problem, but in other cases... both filters can work, but with further modules. I'm working now on the abandoned _account_payment_return_ that allows to reflect returns in your payment orders. This module reconciles the original invoice move line, with the payment order move line and a new generated move line for the return. This way, you get the same balance, an history is created, and you can pass the new move line with another due date to a new payment order. In this flow, the new filter is the good one.\n\nAnyway, @ecino, can you please propose both improvements in separate split so that we can get as soon as possible the computed total (which is something that I need urgently), and discuss the other also with the context of the other module?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40318392/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40318526", "body": "As you are redefining the method above, there's no problem about that.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40318526/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40319177", "body": "Can you make a separate PR for the totals first?\n\nAbout the other proposal, what do you think about the returns flow I have talked about?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40319177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40323183", "body": "OK, for me let's go then for that approach.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40323183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "a-willem": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/391", "title": "interaction with the account_batch_deposit and check payment module", "body": "When using payment_mode configured with a transfer account, the suite behaves well when associated with SEPA direct debit orders.\r\n\r\nHowever, when used to register payments by check, or when receiving wire transfers, they \"payment\" fuctionality doesn't seem to acknowledge this set-up. Hence, when registering a check, instead of writing in the transfer account, it is written in the bank account.", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bodi000": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/390", "title": "[6.1,7.0] account_banking - wrong entries in split bank transaction if invoice partially paid", "body": "Hello,\r\n\r\nI know these are old versions, but I need a bit of help, as I still use the account_banking module.\r\nTask: import and reconcile bank statement (camt).\r\n\r\nI have a case where one banking transaction (a credit card invoice) covers multiple invoices. One of the invoices is partially paid. While doing the split, the split_off function is asked to use move_line.debit, (which of course is the total amount of the invoice) not invoice.residual which would be the correct amount.\r\n\r\nbanking_transaction_wizard.py:223/208\r\n`statement_line_id = wiz.statement_line_id.split_off(\r\n                            move_line.debit or -move_line.credit)[0]`\r\n\r\nWhile I think this is a bug, I would like your opinion, especially @StefanRijnhart .\r\n\r\nThank you in advance\r\nB", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "qpeyramale": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/388", "title": "Partial payment in order", "body": "Hello\r\n\r\nI tried to do a partial payment in a debit order with multiple invoices of the same partner, but the partial amount doesn't link to the right invoice.\r\nDebit Order:\r\n![image](https://user-images.githubusercontent.com/7935472/30054949-235901a6-922e-11e7-9af5-c1012d3174d0.png)\r\nResult:\r\n![image](https://user-images.githubusercontent.com/7935472/30054958-299ed810-922e-11e7-956b-bc0cc25c40dc.png)\r\n\r\nIn the Debit order, I changed the amount of the transaction for the 0007 and at the reconcile, it's the 0006 with a residual.\r\nDid i do it wrong?\r\nThanks", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Maurice67205": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/385", "title": "[10.0]Payment mode not reported in invoice when using the subscription module", "body": "on Version 10 when generating an invoice from the subscription module , the payment mode of the customer is not automatically inserted in the invoice", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "eLBati": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/369", "title": "[8.0] account_banking_payment_transfer: error while making payments", "body": "Steps:\r\n - Install ```account_banking_payment_transfer```\r\n - Create supplier invoice\r\n - Create payment order\r\n - Import the supplier invoice\r\n - Confirm\r\n - 'Make Payments'\r\n\r\nGet\r\n\r\n```\r\n  File \"parts/odoo/openerp/sql_db.py\", line 247, in execute\r\n    res = self._obj.execute(query, params)\r\nValueError: \"syntax error at or near \")\"\r\nLINE 2:             where id in () and reconcile_id is null\r\n                                 ^\r\n\" while evaluating\r\nu'test_done()'\r\n```\r\n\r\nI will debug further.\r\nMeanwhile, @hbrunn do you have any hints? I think this happens after https://github.com/OCA/bank-payment/commit/716519a20c61390129a7e02725e1ba80c1e36a3f", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ecino": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/368", "title": "[9.0] Migration of account_payment_order", "body": "When trying to migrate our database to v9, the migration of module account_payment_order fails when storing values of fields from bank_payment_line. I checked my database but cannot see any incoherent data. All my payment_line records are linked to the same company, and the company itself has a valid currency (CHF).\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/service/server.py\", line 892, in preload_registries\r\n    registry = RegistryManager.new(dbname, update_module=update_module)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/modules/registry.py\", line 390, in new\r\n    openerp.modules.load_modules(registry._db, force_demo, status, update_module)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/modules/loading.py\", line 406, in load_modules\r\n    force, status, report, loaded_modules, update_module, upg_registry)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/modules/loading.py\", line 297, in load_marked_modules\r\n    loaded, processed = load_module_graph(cr, graph, progressdict, report=report, skip_modules=loaded_modules, perform_checks=perform_checks, upg_registry=upg_registry)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/modules/loading.py\", line 160, in load_module_graph\r\n    init_module_models(cr, package.name, models)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/modules/module.py\", line 317, in init_module_models\r\n    obj_list[0].recompute(cr, openerp.SUPERUSER_ID, {})\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/api.py\", line 250, in wrapper\r\n    return old_api(self, *args, **kwargs)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/api.py\", line 354, in old_api\r\n    result = method(recs, *args, **kwargs)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/models.py\", line 5925, in recompute\r\n    vals = rec._convert_to_write({n: rec[n] for n in ns})\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/models.py\", line 5925, in <dictcomp>\r\n    vals = rec._convert_to_write({n: rec[n] for n in ns})\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/models.py\", line 5795, in __getitem__\r\n    return self._fields[key].__get__(self, type(self))\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/fields.py\", line 830, in __get__\r\n    self.determine_value(record)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/fields.py\", line 912, in determine_value\r\n    self.compute_value(recs)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/fields.py\", line 892, in compute_value\r\n    self._compute_value(records)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/fields.py\", line 882, in _compute_value\r\n    getattr(records, self.compute)()\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/api.py\", line 248, in wrapper\r\n    return new_api(self, *args, **kwargs)\r\n  File \"/home/ecino/.local/share/Odoo/addons/9.0/account_payment_order/models/bank_payment_line.py\", line 82, in _compute_amount\r\n    amount_currency, bline.company_currency_id)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/api.py\", line 248, in wrapper\r\n    return new_api(self, *args, **kwargs)\r\n  File \"/var/tmp/openupgrade/9.0/server/openerp/addons/base/res/res_currency.py\", line 224, in compute\r\n    assert self, \"compute from unknown currency\"\r\nAssertionError: compute from unknown currency\r\n```", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/433", "title": "[10.0] [ADD] payment_line cancel module", "body": "New module that adds an Action on invoices in order to cancel them from payment orders. It also adds a button on payment lines to cancel them, no matter the state of the payment order.\r\n\r\nThis is useful when a payment is rejected for instance and we want to try again to import the invoice in a new payment order.\r\n\r\n![image](https://user-images.githubusercontent.com/8435180/34196965-a6232efc-e564-11e7-8378-ae83dccafcf1.png)\r\n", "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/418", "title": "Use bank.payment.line reference in Payment Order Move Lines", "body": "When closing an account.payment.order the move generated have in the reference field, the name of the payment order.\r\n\r\nWhen payment are not grouped by date it generates a lot of moves that have the same reference and we propose to use instead the bank.payment.line reference in order to differentiate those moves.\r\n\r\nWe think it makes more sense for reconciling. If several bank.payment.line are groupped in a same move we do not change the previous behaviour.", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55858902", "body": "OK, I tried to write the patch, but the correction doesn't seem to work. When the field is invisible, it behaves like when it is removed.\n\nI think if someone wants to install both modules together, he has to manually remove the code that deletes the field in one of the two modules. Does anybody see another better solution ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55858902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56936649", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56936649/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40318383", "body": "I called it this way in order to be sure it overrides the method used for the functional field defined in the core module `account_payment`. Do you think we can define another instead of overriding this one ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40318383/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40319032", "body": "Then we could need one wizard developed in switzerland localization (PR open for v8).\nhttps://github.com/OCA/l10n-switzerland/pull/162/files#diff-f006c2d78fe70d2df5e317db5b05160cR1\n\nWe could move this wizard inside this module. It is used to select some invoices and free them of a payment order (= remove them from the payment order and put them in a cancelled one).\n\nThis way, we better capture the workflow by showing the invoice was collected in a payment order but then it had a failure. If we simply allow collecting again the invoice, we cannot see that the first payment order was unsucessful.\n\nSo if you are OK with this, I can remove that functionality from the PR in swiss repository and include it in this PR.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40319032/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40322096", "body": "The return would not work for us, as we import the returns from a bank statement. We would thus don't need to generate other move lines.\nAs @sbidoul noticed, I think we should try to get this working without the need of any other module. This is why I proposed to add the ability of removing an invoice from a payment order (=> moving it to a cancelled payment order).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40322096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40325768", "body": "The state on payment.lines is not the same as the payment order. It is called \"Communication Type\" and can have values `normal` or `structured`. I don't think we can use this field. But maybe add another field like `transaction_state` to capture whether the transaction is `pending`, `successful` or has `failed` and use that for the filter ? But then we should have a mechanism to properly update the state and that can be complex.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/40325768/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "Aivenho": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/359", "title": "IBAN Account check", "body": "[all versions] In Odoo standard functionality account check with `is_iban_valid()` is done only for accounts with type `IBAN Account`, type `Regular Account` is not checked. But in your account_banking_pain_base module check is set for all the account types. That creates problems with the payment export is partner is from outside EU. \r\nOther issue is with EU payments not in EUR. They are regarded as international payments, not SEPA, so they should automatically get switched to that, other way ir shows error during import in bank system. ", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "pasgou": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/344", "title": "Mandate : adress error", "body": "In the SEPA Mandate PDF, the first line of the adress is the only one which appears, either for debtor or the creditor.", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BzMB": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/341", "title": "account_payment_mode 10.0 - cash payment type?", "body": "Hi, \r\n\r\nThanks for your work on migrated this module.\r\n\r\nThe business idea is \"track\" also the payment mode = cash at customer,so and invoice level.\r\n\r\nIs there any way,configuration or additional module to install in order to create a new payment mode called \"cash\" linked to the journal cash?\r\n\r\nThanks in advance.\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Fenkiou": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/332", "title": "[10.0][account_banking_mandate_sale] IndexError: tuple index out of range", "body": "Steps to reproduce:\r\n- Create a payment mode that require a banking mandate\r\n- Create a sale order with the created payment mode\r\n\r\nCurrent behaviour:\r\nWhen selecting the payment mode, `IndexError: tuple index out of range` on this [line](https://github.com/OCA/bank-payment/blob/10.0) because my partner does not have any banking mandate.\r\n\r\nExpected behaviour:\r\nNot sure, wizard to create the mandate ?", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/332/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "valentinthirion": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/316", "title": "Error 500 on Website due to \"account_payment_sale\"", "body": "[In Odoo 9.0]\r\nHi,\r\n\r\nIf the module \"account_payment_sale\" is installed, it makes crash the eCommerce Basket confirmation when confirming the address.\r\nSeems that \"onchange_partner_id\" is not well inherited.\r\n\r\nHere is my stacktrace:\r\n2016-11-21 13:01:46,809 12164 ERROR AbAKUS_2016-11-02 openerp.addons.website.models.ir_http: 500 Internal Server Error:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/addons/website/models/ir_http.py\", line 242, in _handle_exception\r\n    response = super(ir_http, self)._handle_exception(exception)\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/addons/base/ir/ir_http.py\", line 158, in _handle_exception\r\n    return request._handle_exception(exception)\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/http.py\", line 786, in _handle_exception\r\n    return super(HttpRequest, self)._handle_exception(exception)\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/addons/base/ir/ir_http.py\", line 183, in _dispatch\r\n    result = request.dispatch()\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/http.py\", line 845, in dispatch\r\n    r = self._call_function(**self.params)\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/http.py\", line 321, in _call_function\r\n    return checked_call(self.db, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/service/model.py\", line 118, in wrapper\r\n    return f(dbname, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/http.py\", line 314, in checked_call\r\n    result = self.endpoint(*a, **kw)\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/http.py\", line 964, in __call__\r\n    return self.method(*args, **kw)\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/http.py\", line 514, in response_wrap\r\n    response = f(*args, **kw)\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/addons/website_sale/controllers/main.py\", line 684, in confirm_order\r\n    self.checkout_form_save(values[\"checkout\"])\r\n  File \"/usr/lib/python2.7/dist-packages/openerp/addons/website_sale/controllers/main.py\", line 634, in checkout_form_save\r\n    order_obj.onchange_partner_id(cr, SUPERUSER_ID, [order.id], context=context)\r\nTypeError: onchange_partner_id() takes exactly 1 argument (5 given)\r\n\r\nAny help?", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/316/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jalzaga": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/309", "title": "Cannot use type receivable or payable account as transfer account", "body": "Module account_banking_payment_transfer (in v 8) \r\n\r\nImpacted versions: 8, 9, 10\r\n\r\nSteps to reproduce: In Payment mode. Transfer account\r\n\r\nCurrent behavior: You can only select regular accounts as transfer account.\r\n\r\nExpected behavior: Possibility to select other types such as accounts receivable or accounts payable. \r\nWhen you send a remittance to the bank, you should keep the amount in a transfer account until the bank pays, this transfer account belongs to the category of receivable or payable. As an example, in the Spanish Accounting these accounts belong to group 4 (Debtors and Creditors in commercial operations)\r\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/309/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/225", "title": "Direct debit doesn\u2019 t change invoice status", "body": "When a customer invoice is included in a direct debit order and that order is done, the invoice status remains open. You can pay it directly or include it in a customer payment.\n\nI checked that you cannot include it in another direct debit order, this is correct.\n\nBesides, there is no journal create when the direct debit is confirmed. I guess you have to use necessarily  bank statement  to create the journal.\n\nThis affects to version 8\n\n Modules installed:  account_direct_debit and account_banking_sepa_direct_debit \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "itiblog": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/299", "title": "Account Payment order On Enterprise Version", "body": "for odoo v9 while press create button on  payment order form, raise this error:\n\nUncaught Error: No conversion for undefined\nhttp://localhost:8091/web/static/src/js/framework/pyeval.js:732\nTraceback:\nError: No conversion for undefined\n    at wrap (http://localhost:8091/web/static/src/js/framework/pyeval.js:732:29)\n    at Object.**getitem** (http://localhost:8091/web/static/src/js/framework/pyeval.js:781:16)\n    at Object.py.PY_getItem (http://localhost:8091/web/static/lib/py.js/lib/py.js:610:21)\n    at Object.py.evaluate (http://localhost:8091/web/static/lib/py.js/lib/py.js:1403:27)\n    at Object.py.evaluate (http://localhost:8091/web/static/lib/py.js/lib/py.js:1366:32)\n    at Object.py.evaluate (http://localhost:8091/web/static/lib/py.js/lib/py.js:1368:27)\n    at Object.py.evaluate (http://localhost:8091/web/static/lib/py.js/lib/py.js:1372:31)\n    at Object.py.evaluate (http://localhost:8091/web/static/lib/py.js/lib/py.js:1397:38)\n    at Object.py.evaluate (http://localhost:8091/web/static/lib/py.js/lib/py.js:1409:37)\n    at Object.py.eval (http://localhost:8091/web/static/lib/py.js/lib/py.js:1453:19)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/299/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hadessoul": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/269", "title": "SEPA DIRECT DEBIT installation problems", "body": "HI,\n\nI have this error when trying to install module\n\nThe operation cannot be completed, probably due to the following:\n- deletion: you may be trying to delete a record while other records still reference it\n- creation/update: a mandatory field is not correctly set\n\n[object with reference: payment_mode_type - payment.mode.type]\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/269/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "NL66278": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/228", "title": "[7.0] account_banking_sepa_direct_debit Exception in migration when table does not exist.", "body": "An error occurs in module account_banking_sepa_direct_debit when running the migration, if the table sdd_mandate does not exist.\n\n2015-11-26 16:27:58,293 1386 INFO 2015_11_16_test openerp.modules.migration: module account_banking_sepa_direct_debit: Running migration [\n0.2>] account.banking.sepa.direct_debit:: Move sdd_mandate data to account_banking_mandate\n2015-11-26 16:27:58,294 1386 ERROR 2015_11_16_test openerp.sql_db: Programming error: relation \"sdd_mandate\" does not exist\nLINE 1: ...ation, recurrent_sequence_type, type, 'CORE' FROM sdd_mandat...\n                                                             ^\n, in query INSERT INTO account_banking_mandate (id, create_uid, create_date, write_date, write_uid, partner_bank_id, last_debit_date, scan\n, company_id, state, unique_mandate_reference, signature_date, sepa_migrated, original_mandate_identification, recurrent_sequence_type, ty\npe, scheme) SELECT id, create_uid, create_date, write_date, write_uid, partner_bank_id, last_debit_date, scan, company_id, state, unique_m\nandate_reference, signature_date, sepa_migrated, original_mandate_identification, recurrent_sequence_type, type, 'CORE' FROM sdd_mandate\n2015-11-26 16:27:58,294 1386 ERROR 2015_11_16_test openerp: Failed to initialize database `2015_11_16_test`.\nTraceback (most recent call last):\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/cli/server.py\", line 97, in preload_registry\n    db, registry = openerp.pooler.get_db_and_pool(dbname,update_module=update_module)\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/pooler.py\", line 33, in get_db_and_pool\n    registry = RegistryManager.get(db_name, force_demo, status, update_module)\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/modules/registry.py\", line 203, in get\n    update_module)\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/modules/registry.py\", line 233, in new\n    openerp.modules.load_modules(registry.db, force_demo, status, update_module)\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/modules/loading.py\", line 359, in load_modules\n    force, status, report, loaded_modules, update_module)\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/modules/loading.py\", line 264, in load_marked_modules\n    loaded, processed = load_module_graph(cr, graph, progressdict, report=report, skip_modules=loaded_modules, perform_checks=perform_chec\nks)\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/modules/loading.py\", line 218, in load_module_graph\n    migrations.migrate_module(package, 'post')\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/modules/migration.py\", line 186, in migrate_module\n    mod.migrate(self.cr, pkg.installed_version)\n  File \"account_banking_sepa_direct_debit/migrations/0.2/post-consolidation.py\", line 50, in migrate\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/sql_db.py\", line 161, in wrapper\n    return f(self, _args, *_kwargs)\n  File \"/home/odoocutst70/odoo/parts/odoo/openerp/sql_db.py\", line 226, in execute\n    res = self._obj.execute(query, params)\nProgrammingError: relation \"sdd_mandate\" does not exist\nLINE 1: ...ation, recurrent_sequence_type, type, 'CORE' FROM sdd_mandat...\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/384", "title": "[7.0] [IMP] Enhance search for the right company bank account.", "body": "Bank accounts can be both company bank accounts and customer bank accounts. In multiple company situations especially an account can exist in both forms. Therefore when selecting a bank-account for a company, we have to take the company_id into account.\r\n\r\nAlso there should be no problem with multiple accounts with the same number, so long as the company_id field is different for those accounts.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/383", "title": "[7.0][IMP] match invoice first", "body": "Provide user with choice to make invoice number more important in linking bank transactions to open invoices.", "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/142", "title": "7.0 rabobank reworked therp", "body": "Import for Rabobank MT940 was not working in most cases. This PR includes an earlier pull request to get the ING MT940 working. Furthermore added some more debugging for invalid transactions or statements.\n", "author_association": "NONE"}], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51912489", "body": "Approve. Code review and test.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51912489/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59723294", "body": "The module removes a constraint that in odoo 8.0 is already non existent.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59723294/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59735943", "body": ":+1:  LGTM\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59735943/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59752848", "body": ":+1:  Looks good to me. Did some testing. Entering mandates. Creating SEPA credit transfer file. The only thing so far that did not look OK, but might be a mistake on my part in configuring something, after entering mandate on partner bank account, the partner field remains empty on the mandate.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59752848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60364600", "body": "About the (in?) famous point 2, the domain on payment mode. I can understand Pedro from a functional perspective. We encountered the same questions as his Spanish customer. But maybe these restrictions can be put in an optional module, so we get a clear separation between migrating the 7.0 functionality and having new (and optional) functionality. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60364600/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60565674", "body": "+1 as well for the proposal from @sbidoul. For me a good alternative for a separate module.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60565674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60599697", "body": "Maybe I can flake-correct the modules anyway, as in upstream (odoo trunk/9.0) these are part of odoo/addons, not part of banking.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60599697/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60607602", "body": "@sbidoul\nOK, no pep8 changes then.\n\nIt is a little bit sad that even with new modules the odoo developers do not seem to do any quality checking, or do not follow any coding standards.\n\nHow to remove these modules from the flake8/pylint checks ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60607602/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60901255", "body": "Personally I do not see any advantage in splitting the banking project in different projects. Most companies will then need to checkout three projects instead of one. And as a developer I think that importing statements, reconciling the statement lines and exporting payments are different functional area's, but they definitely share a lot of data.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60901255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61065216", "body": "@pedrobaeza Hello Pedro, actually Stefan RIjnhart did the code inspection, i Just prepared the new pull request.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61065216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61277184", "body": "Hello Alexis, according to Pedro this was fixed 11 days ago. Did you pull the latest code?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61277184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61494826", "body": "How can the user be confused what modules to use? Those not ready to be used are in **unported** and not installable. The rest can be used. And why would a backport to 7.0 be of any use? The version 7.0 modules are working quite well as is.\nSomehow I get the impression that we have some miscommunication. \nAnyhow, I am busy refactoring the bank statement import modules, which amongst many other things means separating the issues of reconciliation and of importing, and putting those in separate modules. If you would like to split (or cleanup) the repositories later, this will certainly help.\nIn the meantime: is there anything in this pull request that makes possible future moves to split (or cleanup) more difficult? In other words, should this discussion hold up this pull request?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61494826/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61498972", "body": "I do not see how to exclude parts of the repository from the flake8 tests. Can this be done? Hpw? Or should we accept that what we put in the OCA banking repositories will differ (in following coding standards) from the standard Odoo modules?\n\nI do not think it is a good idea to accept OCA/banking failing the Travis CI build.\n\nIt is a pity OpenERP SA does not follow any coding standards, even for new developments.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61498972/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61785848", "body": "I removed beautifulsoup from the .travis.yml file. How can I change the label on this pull request?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61785848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61827537", "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nHello Sandy,\n\nThanks for willing to help out. However I tried the EDIT button\nbefore, and now again, but I can't find any option to edit the LABEL.\nIf I click on the label I am transferred to a view on all the pull\nrequests with the same label.\n\nI must admit I often find the user interface of Github bewildering. I\ncould not find anything on google as well (perhaps because 'label' is\nnot a very differentiating search word).\n\nKind regards,\n\nRonald\n\nOp 05-11-14 om 14:42 schreef Sandy:\n\n> Top of this page: _Edit_ capture d ecran de 2014-11-05 08 41 54 \n> https://cloud.githubusercontent.com/assets/1013356/4918476/9179fe00-64f1-11e4-83d8-7d5e8ae2222c.png\n> \n>  \u2014 Reply to this email directly or view it on GitHub \n> https://github.com/OCA/banking/pull/55#issuecomment-61808136.\n> \n> -----BEGIN PGP SIGNATURE-----\n> Version: GnuPG v1\n\niQIcBAEBAgAGBQJUWkZUAAoJEKGB+BJNcQHTtaYP/RLSnlZVHYKfBrkxbZWAgh0J\nbvQ93NN7nHblWwyyvfWxHxkDRh2r+D3pRwucNkRzOg6g4DlCrmBpZi9k5qojzulo\nL6nAI3xQZAcdNZ6WPoaei+LHdrmJ4zAamHN28qOwwKNVl68azpcddm0Yq1BpqPwn\nYR49K2YCLJnbJD/t33IX4GV1NHTUIzAWdTR0eLNhYQbE96Au5YtnUk7RLlXWLPf6\n6D53eHMPDEnTcUAGY/uzeVz9ujzgzHDQVYIz0J/yzKpV+KqEm4wsucrW1Zvn/JnI\nLsehkI4w+j10aRBomiv8CMMYhGC3B3yuasu4HbP8cqNw5KmoUtnjWumSbdZma6/o\nvz5VAyUGAvWKF/AjvSFkEcfDWgArCM2dzrUZGxCzTG2Mzu2HETlDW1yi/c6lZPFn\nAUDUFePWJxHISjuY4Kzm9I4IkKOakvY3AiAhyMC+ShxeDFTgK0wBeEYsRshMlgKb\n44NZ75v25yhCz9q8N4svA4J2hb2QV1AFgEYb8+kZ32J++M13ERwfc7v30TQluQ0/\n5DeJjO5BEns50WU9lImgm0PF78mIgiWtgZCUYkzYtbYMea9ZzYSjNMlMnXEhhUTv\ndfIFhM35BL5pEBLrYsXznLm1jD8SzguzsxKcYfaXbS8K8VLsgRB/TdA+InIFki6g\n/m++6UQR3faXUP4f+GMd\n=JJ1j\n-----END PGP SIGNATURE-----\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61827537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29898763", "body": "The original method get_unique_account_identifier will return the same identifier for the same account in all cases. Maybe it was intended to call get_unique_statement_id instead? But in both cases the cursor is needed to query the database. I think the parser should just use the information in the parsed file itself. \nIf there are problems with uniqueness, it should be solved outside of the parser. But I did not see one so far.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29898763/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "jbeficent": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/213", "title": "account_banking_reconciliation migration to 8.0", "body": "Hello! we may migrate the module \"account_banking_reconciliation\" to 8.0, on request by a customer. Is there a defined roadmap for this module? Do you have any advice that we should consider?\n\nThanks!\nJordi.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/7c5a56afe6cc6b7e870acd7d3ca5d04adff75ba1", "message": "Merge pull request #407 from etobella/11.0-mig-account_banking_sepa_direct_debit\n\n[11.0] [MIG] account_banking_sepa direct debit"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/a5f144aedcae8e4d81729a09c9f35cf912efac23", "message": "Merge pull request #406 from etobella/11.0-mig-account_banking_sepa_credit_transfer\n\n11.0 mig account banking sepa credit transfer"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/408c8c4793df399c60da9d97fdd20cdf95d33e0c", "message": "Merge pull request #405 from etobella/11.0-mig-account_payment_pain_base\n\n[11.0] [MIG] account_payment_pain_base"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f41d8a4a3f41d3f9c73b0d3779bea3c9d9728388", "message": "Merge pull request #404 from etobella/11.0-mig-account_payment_mandate\n\n[11.0] [MIG] account_payment_mandate"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33953175", "body": "Falta traducir este t\u00e9rmino por \"Asiento contable\"\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33953175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33953399", "body": "Traducir \"Structured Reference\" a \"Referencia Estructurada\"\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33953399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "gurneyalex": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/204", "title": "[7.0] runbot is orange because of warnings in the logs", "body": "WARNING: unable to set column hsbc_clientid_id of table payment_order not null !\n\nWARNING: unable to set column type of table payment_mode not null !\n\n WARNING 3111478-7-0-2515ea-all openerp.osv.orm: No such field(s) in model account.payment.term.line: name (in module account_direct_debit: loading data/account_payment_term.xml)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/8e0b3e2afac08f9cf2ef957ebe7937d2f129c733", "message": "protect import of external dependencies\n\nOdoo won't install an addon if the external dependencies are not met.\nHowever, the python modules of the addons are imported at startup, and the\nlack of an external dependency for an external addon will cause a crash,\ntherefore the import needs to be in a try..except block."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/a80304dc3000f3513c50054e4030c3ff7c53f075", "message": "Add OCA as author of OCA addons\n\nIn order to get visibility on https://www.odoo.com/apps the OCA board has\ndecided to add the OCA as author of all the addons maintained as part of the\nassociation."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c09e5c936c5d4abdcb44e9b53c80c74fbcbb9cfa", "message": "protect import of external dependencies\n\nOdoo won't install an addon if the external dependencies are not met.\nHowever, the python modules of the addons are imported at startup, and the\nlack of an external dependency for an external addon will cause a crash,\ntherefore the import needs to be in a try..except block."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/17e74ef7d66cb7b13a795675af004918ce1c0110", "message": "Add OCA as author of OCA addons\n\nIn order to get visibility on https://www.odoo.com/apps the OCA board has\ndecided to add the OCA as author of all the addons maintained as part of the\nassociation."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c9c352bdd71e07454ca9b66bd633285726b13018", "message": "protect import of external dependencies\n\nOdoo won't install an addon if the external dependencies are not met.\nHowever, the python modules of the addons are imported at startup, and the\nlack of an external dependency for an external addon will cause a crash,\ntherefore the import needs to be in a try..except block."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1f312cdbc30e89dc715e1804ebe2bfa001fd7d24", "message": "Add OCA as author of OCA addons\n\nIn order to get visibility on https://www.odoo.com/apps the OCA board has\ndecided to add the OCA as author of all the addons maintained as part of the\nassociation."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53026663", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53026663/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56482868", "body": "@CSester I know that the code you extracted the new module from had no test whatsoever. Still, this refactoring would be a good time to add a few tests and improve the test coverage of this repository. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56482868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56483161", "body": "@CSester: I could find no trace of your signing the Contributor Licence Agreement of the community association. Could you please read http://odoo-community.org/page/website.cla and send the signed for the the addresse noted on that page? \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56483161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56955319", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56955319/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56955444", "body": "@StefanRijnhart is it ok with you, now the changes have been implemented and tests added?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56955444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61769535", "body": "sorry for my late reaction, I'm a bit overwhelmed by customer projects... 8.0 is now the default branch. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61769535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61769830", "body": "and master has been removed.\n\nClosing the issue. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61769830/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61939048", "body": "can you please add an automated test for this bug fix?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61939048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17893667", "body": "side note: you could have use a tuple here instead of `None`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17893667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17893684", "body": "same remark : a non mutable tuple would have done the trick. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17893684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17893708", "body": "@hbrunn Were you intending to commit this change? It seems unrelated to the issues flagged by Pylint. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17893708/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/16159264", "body": "I'd suggest rewriting these two lines as\n\n```\nself.current_transaction.message = '/'.join(sf for sf in subfields['REMI'] if sf)\n```\n\nIf you'd rather go for `filter()` then you can replace the anonymous function with `None`, which is handled by `filter()` to do precisely this. \n\nA couple of automated tests could not do any harm. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/16159264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21085135", "body": "s/Allready/Already/ \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21085135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21085190", "body": "do we really want the modified context to be seen by the caller?\n\nthe usual idiom is to make a copy and modify the copy. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21085190/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28784929", "body": "s/Incongruent/Inconsistent/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28784929/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/30313549", "body": "remove exclamation mark\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/30313549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/30313573", "body": "remove exclamation mark\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/30313573/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/30313588", "body": "s/UserError/User Error/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/30313588/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/30313643", "body": "backslash could be removed\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/30313643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}]}, "ploegvde": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/52", "title": "[v7] Paid more does not set invoice to paid status", "body": "I have invoice of the amount of 850. On bank statement i receive a payment of 1000. Now when i confirm the bankstatement line, the invoice does not get the paid status. On the invoice is registered a paymnet of 1000. This is not correct.\n\nThe invoice should be reconcilled with the payment and the diff (150) should stay open by default on the debtors account. It should be the same as using the pay botton on the invoice.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/52/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/9e93495a4d42ab472a284e7f4da240c1bcf30738", "message": "Added translations to all banking modules in use in the Netherlands"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60585963", "body": "Fix is on the way.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60585963/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61978212", "body": "Fix is on the way\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61978212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "kenvac": {"issues": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/31", "title": "[7.0][account_banking_uk_hsbc] Multi currency invoice matching showing wrong residual", "body": "Hello Team,\n\nI noticed a problem in manual invoice matching when invoices are of same as bank statement currency but different company currency. I am experiencing this issue on account_banking_uk_hsbc module but looking at the code it seems its effecting very banking import module.\n\n[Pre requisites]\n- Install multi currency module\n- Install account_banking_uk_hsbc\n- Create separate bank journal having different currency than base currency\n- Configure default bank import settings\n\n[Assumptions]\n- Base currency GBP\n- Bank journal in EUR\n\n[Steps to reproduce bug]\n- Create an invoice in EUR 100\n- Create another invoice in EUR 70. Doesn't matter if its from same parter\n- Confirm both invoices\n- Import bank statement with line 170 Euro\n- Manually add two invoice and press match button in matching wizard\n- You will notice where will be some residual amount on both statement line whilst should be zero.\n\nThe following is my recommendation. \n\n``` python\ndiff --git a/account_banking/wizard/banking_transaction_wizard.py b/account_banking/wizard/banking_transaction_wizard.py\nindex 0941f88..fcad8d9 100644\n--- a/account_banking/wizard/banking_transaction_wizard.py\n+++ b/account_banking/wizard/banking_transaction_wizard.py\n@@ -197,10 +197,12 @@ class banking_transaction_wizard(orm.TransientModel):\n                             cr, uid, todo_entry[1], context)\n                     transaction_id = wiz.import_transaction_id.id\n                     statement_line_id = wiz.statement_line_id.id\n-\n                     if len(todo) > 0:\n+                        split_amount = move_line.debit or -move_line.credit\n+                        if move_line.currency_id and move_line.currency_id == wiz.statement_line_id.currency:\n+                            split_amount =  move_line.amount_currency\n                         statement_line_id = wiz.statement_line_id.split_off(\n-                                move_line.debit or -move_line.credit)[0]\n+                                split_amount)[0]\n                         transaction_id = statement_line_obj.browse(\n                                 cr,\n                                 uid,\n```\n\nLet me know if any more input is required. \n\nRegards,\nK\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/31/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/25", "title": "[7.0][multicompany] Error in confirming statement line when company is different than base company", "body": "[Pre-requisite]\n- Multicompany module\n- Accounting module\n\n[steps to reproduce bug]\n- Create bank statement for non base company\n- Add statement line\n- confirm statement line\n\n[Traceback]\n\n```\nError occurred while validating the field(s) company_id: Account and Period must belong to the same company.\nTraceback (most recent call last):\n  File \"/home/openerp/7.0/server/openerp/netsvc.py\", line 296, in dispatch_rpc\n    result = ExportService.getService(service_name).dispatch(method, params)\n  File \"/home/openerp/7.0/server/openerp/service/web_services.py\", line 626, in dispatch\n    res = fn(db, uid, *params)\n  File \"/home/openerp/7.0/server/openerp/osv/osv.py\", line 190, in execute_kw\n    return self.execute(db, uid, obj, method, *args, **kw or {})\n  File \"/home/openerp/7.0/server/openerp/osv/osv.py\", line 132, in wrapper\n    return f(self, dbname, *args, **kwargs)\n  File \"/home/openerp/7.0/server/openerp/osv/osv.py\", line 199, in execute\n    res = self.execute_cr(cr, uid, obj, method, *args, **kw)\n  File \"/home/openerp/7.0/server/openerp/osv/osv.py\", line 187, in execute_cr\n    return getattr(object, method)(cr, uid, *args, **kw)\n  File \"/home/openerp/7.0/banking-addons/account_banking/banking_import_transaction.py\", line 1562, in confirm\n    statement_pool = self.pool.get('account.bank.statement')\n  File \"/home/openerp/7.0/banking-addons/account_banking/account_banking.py\", line 405, in create_move_from_st_line\n    context=localctx)\n  File \"/home/openerp/7.0/7.0-fixes/account_voucher/account_voucher.py\", line 1645, in create_move_from_st_line\n    return super(account_bank_statement, self).create_move_from_st_line(cr, uid, st_line.id, company_currency_id, next_number, context=context)\n  File \"/home/openerp/7.0/7.0-fixes/account/account_bank_statement.py\", line 359, in create_move_from_st_line\n    move_line_id = account_move_line_obj.create(cr, uid, bank_move_vals, context=context)\n  File \"/home/openerp/7.0/7.0-fixes/account/account_move_line.py\", line 1221, in create\n    result = super(account_move_line, self).create(cr, uid, vals, context=context)\n  File \"/home/openerp/7.0/openerp-connector/connector/producer.py\", line 42, in create\n    record_id = create_original(self, cr, uid, vals, context=context)\n  File \"/home/openerp/7.0/server/openerp/osv/orm.py\", line 4567, in create\n    self._validate(cr, user, [id_new], context)\n  File \"/home/openerp/7.0/server/openerp/osv/orm.py\", line 1581, in _validate\n    raise except_orm('ValidateError', '\\n'.join(error_msgs))\nexcept_osv: ('ValidateError', u'Error occurred while validating the field(s) company_id: Account and Period must belong to the same company.')\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/25/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/52054292", "body": "# Possible fix\n\n``` Python\n--- a/account_banking/banking_import_transaction.py\n+++ b/account_banking/banking_import_transaction.py\n@@ -1600,6 +1600,8 @@ class account_bank_statement_line(orm.Model):\n             st_line_number = statement_pool.get_next_st_line_number(\n                 cr, uid, st_number, st_line, context)\n             company_currency_id = st.journal_id.company_id.currency_id.id\n+            if not context.get('company_id',False):\n+                context['company_id']=st.journal_id.company_id.id\n             statement_pool.create_move_from_st_line(\n                 cr, uid, st_line.id, company_currency_id, st_line_number, context)\n             self.write(\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/52054292/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/52606597", "body": "I agree with ecino. I had same problem couple of days ago. \nI would be nice to keep it hidden. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/52606597/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "oihane": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/791e470a057886e49f9d3e6475d8b79ece42f68e", "message": "[FIX] account_payment_partner: impossible to define if there was no company in partner (#438)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "oca-transbot": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/dbbbe19ac187a5311ebd66f57d4e70ad4ccea50f", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1268b5f09f1de62020230a735ba374e9911d43ad", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/828cb8149c498ae8027aab1dba612f1eed43002a", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1cffc59d6df84bdf08ebf5f33a7b433ed15ccae9", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/5e7558302ddc6ac7e46d842e080b00be657539c7", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ea338023f92e38672bc56bf81c8d38521946bc5b", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b90f8cc3e760d6dee8941b97180d077470730e9c", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4de5719352cf2d4062e1523084a02f609d18a72a", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4ed0038340e9179c0985c2d61d34cd93a349c01e", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/a99a1348a38d9bcbc129b7dbc12e47e7b5908e2f", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f2f639d677053184c9943d063cb1f93c3586d54f", "message": "OCA Transbot updated translations from Transifex"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/28d701cb97cbf218b13cd38c65f3838115ffc2c3", "message": "OCA Transbot updated translations from Transifex"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "danger89": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/b0dac802c97810ddfb8120f9ffd13d76cec179d3", "message": "Update README.md (#436)"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "carlosdauden": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/8f1c57f3957f6cbf1b550782dc5d52bc68fa1148", "message": "[FIX] account_banking_mandate: If Create and edit acc_number not set"}], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/378", "title": "[9.0][IMP] account_banking_mandate: Improve / fixes", "body": "Adds a compute field in res.partner to search first valid mandate respecting partner banks order.\r\nFix payment_mode_id_change to set valid mandate if required\r\n \r\n@Tecnativa", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "OCA-git-bot": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/1db564a396d9130697188b8294b47f435c5414f0", "message": "[ADD] setup.py"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c420740b92097e1b77198e46d05f1a6905da63af", "message": "[ADD] setup.py"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "etobella": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/fa12e548965b824b374e6ba202a201d56f7dc410", "message": "[MIG] account_banking_sepa_credit_transfer"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c8303f304c2b095dddf08aa8d01257c342573aad", "message": "[MIG] account_banking_sepa_direct_debit"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1fabf8ca23258422dde2727183408f3cb3ec6036", "message": "[MIG] account_banking_pain_base"}], "pull_requests": [], "issue_comments": [], "commit_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/comments/24908096", "body": "It should contain a ('type', '=', 'bank') domain filter. Modified.", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/comments/24908096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "review_comments": []}, "alexis-via": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/96a0fb492bd0a9810c9050646bfdbec45e714a3b", "message": "Add support for ISO20022 \"Category Purpose\"\n\nAdd local instrument 'INST' for SEPA Instant Credit Transfer"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4fc963b816e9be32367b90ad6aef50e244f3d541", "message": "Port almost all modules to v10 (#305)\n\nPort almost all modules to v10\n\n* Update to EPC Rulebook v9.2 that start to apply on 2016-11-20 (bug #300)"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d0f782a94661a833d5b0ad3e61592f52da5b9dbc", "message": "Add unitest for a USD credit transfer (in EUR company)"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/83bcab9ecdd03e39d64aa688cd1b8cb67c4ee029", "message": "Add unittest for SEPA direct debit"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/441bee1331be2a491415c9d446ee4ebcdb181fcb", "message": "Better test that include several invoices (to test grouping) and refunds"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1c7334ebf2b5d75489d290d148ba4465f84612af", "message": "Add a unit test"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/981a76bf249921392952d76963f4608e2979cf03", "message": "Enable the payment methods by default on bank journals (including existing bank journals via post_install scripts)\n\nEnable \"Generate Accounting Entries On File Upload\" by default"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/3f09465750e212a56d6479ea31d8202c819ab118", "message": "Move field bank_account_required from module account_payment_partner to account_payment_mode\n\nMake the mandate a required field on payment line when the payment method has mandate_required=True\nMake the bank account a required field on payment line when the payment method has bank_account_required=True\nMinor code cleanup\nPEP8"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/15c111c53e494a23baa148a1728814768ffd093b", "message": "Better handling of partner_bank_id and mandate_id on invoice: invisible/required/onchange"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/953b1727918cb4a80ce177add6b599943abcfb3d", "message": "Simpler variable names\n\nRename method"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/23c799a3f6e097843385d9ee8e80845ef368d73c", "message": "Add the bank_line as argument to some methods that generate SEPA XML"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9375ced37a04a82d8ce0a955152b52d5277446dd", "message": "Add local instrucment in PmtInfId to warranty unicity"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/05ce1ed93b689f791a63911ae951bda8353981eb", "message": "Add field local_instrument in payment lines and bank payment lines"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ee18b2d4a74a22307e419cce2dadee7338c76a7e", "message": "Adds flexibility to support direct debit direct debit for switzerland (pain.008.001.02.ch.01)\n\nImplement SEPA Core recommandations for postal address"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/82317abb92f19f4b941c459aaeed8d20fed822e1", "message": "Add hooks for l10n_ch_sepa (pain.001.001.03.ch.02)\n\nMove code of account_banking_pain_base/models/banking_export_pain.py to account_banking_pain_base/models/account_payment_order.py\nAllow cancel when payment order is in \"File Generated\" state\nAdd postal address in party block"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ec41abda44ff0ee029ef51be129026155d01f9ec", "message": "Take into accounts the remarks of Eric Caudal"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/0ed6c5f588f215ccf085af68cb23dcaeed65db56", "message": "Move fields mandate_required and export_ascii from payment mode to payment method\n\nDisplay chatter on payment orders\nSeveral small usability improvements"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d417b32fb83aa8c4d3ac671126291cacfb92e4ec", "message": "Add support for non-SEPA DD and CT without without IBANs"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d9564a0133390cc6e213cca2a8bc10336c8f25eb", "message": "Add _id suffix on M2O fields customer_payment_mode and supplier_payment_mode (Odoo did the same on all the M2O property fields of res.partner)"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/08e4b9370243d2ad2b04b95cbcab8ae090e1ed7f", "message": "Add module account_banking_mandate_sale\n\nAdd option 'mandate_required' on payment orders\nAutoselect first valid mandate on customer invoice that have a payment mode 'mandate_required' = True\nAdd option on select move lines to pay wizard to allow selection of litigation moves (unchecked by default), in order to integrate the feature of the module account_payment_blocking"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/e21045c2b1f92dbed35acefe9cf7f5202f798f87", "message": "Update and re-enable demo data"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/8fd479c80232b14fc1b7fb7f369afa74a0cf9be3", "message": "Finalise the wizard of selection of move lines to pay\n\nAdd button \"Add to payment/debit order\" on invoice form view\nStarted to integrate payment transfer in account_payment_order (not finished at all though)\nVarious fixes/changes/improvements/..."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/af9874054c9b1755b331e253cb6b002a81bedb17", "message": "Start to port bank-payment to v9 (with a lot of improvements) during the Sorrento Code sprint 2016\n\nImprovements include:\n- full re-organisation of modules and big re-organisation of the code\n- simplification of the code related to the fact that support for direct debit is now in t\nhe base module, not added by an optional module account_direct_debit (module was removed)\n- new design of the wizard to select move lines to pay\n- support for non-SEPA file transfer-\n- support for German direct debit SEPA files (fixes bug #129)\n- remove workflow of payment.order\n\nThis port to v9 is not finished... there is still a lot of work:\n- finish the code of account_payment_order/wizard/account_payment_line_create.py\n- port account_banking_payment_transfer and integrate it inside account_payment_order\n- fix bugs\n- clean-up code, remove dead code\n- test in several complex scenarios"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9ce860f89ea35e524cba7b60682465afed3c4311", "message": "Add bank.payment.lines object to allow grouping in the payments"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/5de112690b6cf4a298279a57dffaea8b195a56a3", "message": "Port SEPA modules to new API\n\nFix an important regression in account_banking_sepa_direct_debit: \"Date of Last Debit\" was not set any more\nProper write of date_done with account_banking_payment_export is installed without account_banking_payment_transfer\nAdd post-install script for date_sent on payment.order"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/545669893747d74661c39a09d8f63c19c4f134e0", "message": "Remove import models from init in sepa_credit_transfer"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/12f019ee55052b03a4df823f0defbe6ad4749c96", "message": "Fix flake8 warnings"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/59b3c8da6b949ebcb8655b7b6229ad1835200300", "message": "Add migration scripts to move files to attachments"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/e4c5016dc32efa1284b796e6b58564ebac811f7f", "message": "Use attachments instead of creating a specific object for each kind of payment order"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/54ff9076c97d47d032d80dc15d564e2aae56aa87", "message": "Add sale_ok and purchase_ok filters in partner/sale/purchase form views Use widget=selection for payment_mode_id fields Update demo data"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4e466159a0f28cac40ac1761c2573694d8582177", "message": "Add missing utf-8 header Update state field on SEPA file objects and display it in tree+form views. Migrate form views to version 7.0 and simplify them."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/373432c41c010206ee98056e5f3ce6204c6a3fe0", "message": "Add demo data"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/52364ea68c938adbcc109df05d33c3774b943808", "message": "For SCT, if BIC is not provided, we should not put the 'Creditor Agent' block at all, according to EPC guidelines (on this point, it is different from the Direct Debit !)"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ffdd300b2467615641974afc45e0960e0e6badcf", "message": "Replace unallowed ascii caracters by '-' Update some error messages Update translation files and FR translation Include sepa_export in gen_args Factorize more code between SDD and SCT Fix view of payment lines The modules account_banking_pain_base and account_banking_sepa_* are now fully PEP8 compliant"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b2102dffa6676b2bebc75b1a729bab4ed3a35c6f", "message": "Mutualize more code between SCT and SDD."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/dfcd048ef7da3e5ee15cd0364a90157a343208a4", "message": "The requested collection date now uses the fields date_prefered and date_scheduled of payment.order, instead of the field in the SDD wizard."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f719dfe897ed8eeb83f9af8af662f315449f2462", "message": "More code factoring between SCT and SDD As a consequence, we now have support for structured remittance info in SDD."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/bc0a87fed71d47cab9d58db7a18de5cea5ad5a90", "message": "Start code factoring between SCT and SDD."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/de3d56fdfd1d2c6f4f6ae46828e6d96f6ec0eb5d", "message": "FIX label : Customer (which is wrong, it is most of the time a Supplier !)-> Creditor More PEP8 stuff."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1b331c839247799b900e087844253ef303e18107", "message": "Akretion-Noviat code sprint dated 2013-11-21: - add module account_banking_pain_base - add support for initiating party identification, priority and structured remittance info in XML file - the requested execution date now uses the fields date_prefered and date_scheduled (the field of the wizard has been removed) - the 'convert to ascii' feature is now an option of the payment mode (enabled by default) - set 'communication' field of payment.line to 140 chars and hide field 'communicatio n2'"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/97ffeda92113928d8b7b4b0537b5c0ac5f22b58c", "message": "Fix merge of translations."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b7f8732ec1ff1e8a9b546003a9d0a42ec4ebf4c7", "message": "Revert the dependancy to account_banking_payment_export (the field payment_order_type on payment.mode.type has a default value of \"payment\" anyway)."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ce7505b29d604218cb269fe535f735039edd4eea", "message": "Better prototype for the _prepare_field function. Update help message, POT file and FR translation."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ac7dbac290adff5f0fcc6879272a7216afa58c7b", "message": "Add logo."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/3ff606a1e4c1bd81cc802a1fb738debebbf028a1", "message": "Update strings and French translation."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/07796690648523d19df1265b571d80a1547576fe", "message": "fields.date.context_today doesn't work with datetime => we now use the native field create_date Coding style improvements."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/abedbfaa96b0e8be1dfc3c430980611288c839de", "message": "Update strings. Update FR translation."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f42492897caef18d1c022adb4e5fcf489d07136f", "message": "Add support for pain.001.001.05 Fix dependencies (I need the field \"payment_order_type\" which is in account_banking_payment) Only use ASCII characters in the XML file (that's how banks use XML !) Use the payment order reference as the Message Identification of the XML file. Use the payment line sequence as the \"End to End Identification\" Remove the Instruction Identification ('InstrId') because it is not a required field (only the End to End identification is required) Rename variables in the function create_sepa() to include the number of each field as used in the EPC guidelines Reduce the number of flake8 warnings Make code more modular : - self.pool.get('banking.export.sepa').create() has a _prepare fonction - most of the content of the XML file can be inherited via _prepare_field()"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d0e86d5dcf7091839b52e83b98457d4a1a51e740", "message": "Update strings to prepare the arrival of SEPA Direct Debit XSD validation of the SEPA XML file is now really working Update views to 7.0-style Better error handling when Bank account in missing on the invoice."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1eed32f3302d08b3f2fdd3f0615658b995515800", "message": "account_banking_sepa_credit_transfer implementing SEPA SCT pain"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f3ec425a8e16cf88654ea578e4e6d332c7fbc886", "message": "FIX demo data: signature date of mandate was too old and was automatically expired"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f8b219c992d1cc5adfe1763601d548171a85f2bd", "message": "Add support for ISO20022 \"Category Purpose\"\n\nAdd local instrument 'INST' for SEPA Instant Credit Transfer"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/37f79aae8fec2802a0047325912adf5e9e60d4a4", "message": "Remove method which is not called anymore"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c3cbddeef72833dc040c10094c223ca6178830d8", "message": "Port almost all modules to v10 (#305)\n\nPort almost all modules to v10\n\n* Update to EPC Rulebook v9.2 that start to apply on 2016-11-20 (bug #300)"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/84f692c966ad2b173f7269a8a64969d497142d42", "message": "Add unittest for SEPA direct debit"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4d3e723202c4a480373a12cab57af6c80f5e73bd", "message": "Enable the payment methods by default on bank journals (including existing bank journals via post_install scripts)\n\nEnable \"Generate Accounting Entries On File Upload\" by default"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/e85b79b5d1e482d265d91937e858f6de3bcbbde7", "message": "FIX manual payment method"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d6fb1bf115e00d0e985b5060959f1559d924397e", "message": "Move field bank_account_required from module account_payment_partner to account_payment_mode\n\nMake the mandate a required field on payment line when the payment method has mandate_required=True\nMake the bank account a required field on payment line when the payment method has bank_account_required=True\nMinor code cleanup\nPEP8"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/48a0faac49c761efdf35b5425b8be24220f2fc57", "message": "Fix crash in mandate report"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/965f6650733761fe4540bd97824196b462ce7f77", "message": "Simpler variable names\n\nRename method"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/cca341543bad0e00e6252b1fe6ddee0921818895", "message": "Add the bank_line as argument to some methods that generate SEPA XML"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/880d500d128dc2a172c9c83f045fb77b9f815d88", "message": "Adds flexibility to support direct debit direct debit for switzerland (pain.008.001.02.ch.01)\n\nImplement SEPA Core recommandations for postal address"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/23e9bdebbf2ba72f7ae0137e4836c80805fd6b71", "message": "Add hooks for l10n_ch_sepa (pain.001.001.03.ch.02)\n\nMove code of account_banking_pain_base/models/banking_export_pain.py to account_banking_pain_base/models/account_payment_order.py\nAllow cancel when payment order is in \"File Generated\" state\nAdd postal address in party block"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b8b2e46aabd96255723249d43b45c89490091072", "message": "Take into accounts the remarks of Eric Caudal"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/36fc4911b1077f076d0e1f6ab57af2be9d00d98f", "message": "Add ICS in account settings page"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/87f9c419f802de3fb59c53754774d43313816015", "message": "Add support for using bank account as offsetting account in journal entry"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9e1de8cdda389774f2bed83476f20427ebb03ef4", "message": "Avoid empty group in payment mode\n\nCode cleanup in views"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1e4588b5b1c792f0eb161a34221b8dfd4cb9fcd4", "message": "Move fields mandate_required and export_ascii from payment mode to payment method\n\nDisplay chatter on payment orders\nSeveral small usability improvements"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/218c2d2be6684d8df407208550745d9e314130e2", "message": "Add support for non-SEPA DD and CT without without IBANs"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b87ffb8c0b8139b7b1f5afd820da387f4e0c82fc", "message": "Add _id suffix on M2O fields customer_payment_mode and supplier_payment_mode (Odoo did the same on all the M2O property fields of res.partner)"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/cedb53305ed89e9669c49063d31b7cfeb4e11464", "message": "Add module account_banking_mandate_sale\n\nAdd option 'mandate_required' on payment orders\nAutoselect first valid mandate on customer invoice that have a payment mode 'mandate_required' = True\nAdd option on select move lines to pay wizard to allow selection of litigation moves (unchecked by default), in order to integrate the feature of the module account_payment_blocking"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/8f78258579c18461c8342f90e5473064f0d6694c", "message": "Update and re-enable demo data"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/dc48391ecae0ccdb7325b7a3acf13a2c023500d5", "message": "Finalise the wizard of selection of move lines to pay\n\nAdd button \"Add to payment/debit order\" on invoice form view\nStarted to integrate payment transfer in account_payment_order (not finished at all though)\nVarious fixes/changes/improvements/..."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/a6bc2e12b332009c794e6ed8c1ecf675a60ddb3e", "message": "Start to port bank-payment to v9 (with a lot of improvements) during the Sorrento Code sprint 2016\n\nImprovements include:\n- full re-organisation of modules and big re-organisation of the code\n- simplification of the code related to the fact that support for direct debit is now in t\nhe base module, not added by an optional module account_direct_debit (module was removed)\n- new design of the wizard to select move lines to pay\n- support for non-SEPA file transfer-\n- support for German direct debit SEPA files (fixes bug #129)\n- remove workflow of payment.order\n\nThis port to v9 is not finished... there is still a lot of work:\n- finish the code of account_payment_order/wizard/account_payment_line_create.py\n- port account_banking_payment_transfer and integrate it inside account_payment_order\n- fix bugs\n- clean-up code, remove dead code\n- test in several complex scenarios"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9ca7bdabb125ba1ba25f1f7160f80df778024c72", "message": "Update automated tests and demo data\n\nAdd on_change on field 'type' of payment.mode for easier configuration"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/6bd1d0236ec9e18ecc6c77ffa7e7af50bbcd6cf3", "message": "FIX Reading wrong field for sequence type of SEPA DD\n\nLoop on bank payment lines instead of payment lines"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ec65f27b35154c073ac84da454ca12056945568f", "message": "Add a hook to inherit grouping of the transfer account move line\n\nUse that new hook in SEPA direct debits\nBetter variable names"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/2bfd46c4f42a5ee4525fbbe8e3648c2eab6eb9b2", "message": "Add bank.payment.lines object to allow grouping in the payments"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/de3584d93fce47753fe0f86e7e73f81e8e74ad80", "message": "Port SEPA modules to new API\n\nFix an important regression in account_banking_sepa_direct_debit: \"Date of Last Debit\" was not set any more\nProper write of date_done with account_banking_payment_export is installed without account_banking_payment_transfer\nAdd post-install script for date_sent on payment.order"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/3d9457d862e1721dee836dd2068742d649147b64", "message": "Add migration scripts to move files to attachments"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b6af1f29ff3010d7947c5163a1f4324f5cb3a9f3", "message": "Use attachments instead of creating a specific object for each kind of payment order"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/e314467222f728fdbfaa596d05ece03a9de02801", "message": "Limit lenght of mandate reference, according to ISO 20022"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d94c26b6969f1efa9a4946d388e51b65ed536b74", "message": "Add sale_ok and purchase_ok filters in partner/sale/purchase form views Use widget=selection for payment_mode_id fields Update demo data"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/adb8abe7d4e5491c6c6c1343d27ba49be16976e1", "message": "Add scheme in mandate tree+search view Replace tabs by spaces in mandate views account_banking_mandate/views/account_banking_mandate_view.xml: convert from dos to unix format"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9a38b86a6cb5f1f655a4340151c8b310bd0dba9c", "message": "mandates: search by reference, add group_by, add seq type in tree view"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ff7688112f4d23a6c1202ccd3e06126ae8f9a549", "message": "Transfer move: one transfer move for each payment.order with only 1 line in the transfer account for the total of the account move. Move the inherit of the 'Invoice' button of payment.order from account_banking_payment_transfer to account_banking_payment_export Demo data: Add a bank account + mandate on Agrolait, to be able to easily test multi-partner SEPA DD"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/69b331b3f4226e5f7d75cd1b644177aec8e8eefa", "message": "replace old sdd.mandate referencess"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/13d13312a543f7dbb182a241cef0cf4ed2203947", "message": "ir.sequence : Replace deprecated get() by next_by_code() Avoid double increment of sequence when creating an SDD mandate."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/7adc9eaf8c51d95e67e0d71e145a79b26ec808b5", "message": "Add back2draft on SEPA Direct Debit mandates (in case it was cancelled by mistake)."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b4f57bc58541f75bc7ddc6ee8aa8aaec015e4f7b", "message": "Add missing utf-8 header Update state field on SEPA file objects and display it in tree+form views. Migrate form views to version 7.0 and simplify them."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/10035cb0e9bac46d35d743a686a8b77bdbdd824c", "message": "Add demo data"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/08e50ac66b55cb3f887d939bd32c0c9c186582c3", "message": "For SCT, if BIC is not provided, we should not put the 'Creditor Agent' block at all, according to EPC guidelines (on this point, it is different from the Direct Debit !)"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/aac9974103f2f1b6227f2bf22e8e98fce58f6b77", "message": "Replace unallowed ascii caracters by '-' Update some error messages Update translation files and FR translation Include sepa_export in gen_args Factorize more code between SDD and SCT Fix view of payment lines The modules account_banking_pain_base and account_banking_sepa_* are now fully PEP8 compliant"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ba18bf3e91c33d022b633b0f3da8e9d9a6d0c9fc", "message": "Mutualize more code between SCT and SDD."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/09af19ee2ea72dd65709a12b86f1ba24dca144f2", "message": "Add group in order to mask the fields for \"Original Mandate Indentification\" for user s in countries that don't required it. Add tracking on important fields of the mandate. Better form view on company. Update constraint on mandate following my devs on \"Original Mandate Identification\"."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/2e3174c0de5a77eca54efd45c7e3caaedaaf0beb", "message": "Add support for direct debit migration from national format to SEPA Source : Standard-XML-SDD-Initiation-v3-EN by Febelfin"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/27da3996bd40526f29a7511c0dda60a2a11b55b6", "message": "The requested collection date now uses the fields date_prefered and date_scheduled of payment.order, instead of the field in the SDD wizard."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/39d8b5c2a986fad92cd3830844fe1f5f92e1a1b0", "message": "More code factoring between SCT and SDD As a consequence, we now have support for structured remittance info in SDD."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f65f2f3448e6f6b4335c9ec804c127f6cac75299", "message": "Start code factoring between SCT and SDD."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/239ee148e4560ad02471f656e1e92160eaba4127", "message": "Remove fields_view_get() on payment.order because dynamic domain is now possible and I implemented it in a previous commit. Minor usability improvements in mandate menu and views Refresh partner_id field on mandate in the on_change of partner_bank_id"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ab2de30f925e9476f509ff9aa6726ffa318b1e31", "message": "FIX FR translation."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c7d69a820506f2792a395cdd3baeaffe8548a226", "message": "Add logo."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/3a30a402c9dd9e44f62dfe1291e7c9b9559bde32", "message": "Remove code that is not relevant any more because we now have constraints on the mandates. Update strings. Add French translation."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/a4160b73688a6b2be4cbfd6f3c7c1641923f5e28", "message": "Add constraint in payment line to check that the mandate is linked to the bank account Fix in mandate views Move mandate and partner views in dedicated files"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b96cfffd4e058db2ea14c18acb5f7d0da1727e4e", "message": "Now fully manage the scenario where the customer has a new bank account (in the same bank or in another bank) Warning : the signature of the function _prepare_field() has been changed"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/90c3dc1ab93a94060af377e25e65cc35679253a9", "message": "New field \"recurrent_sequence_type\" on mandate with tracking. The field \"last_debit_date\" is not used to compute the sequence type any more. When the bank account changes, the sequence type is set back to first FIX xml_id of expired mandate mail.message.subtype"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/1c7c1069d2e8b7e0d031404046c1ae2b3a0ffdff", "message": "Add the ability to cancel a mandate. Add a field \"SDD Mandate\" on the customer invoice, to handle the scenario where one customer has multiple mandates with the company."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d8245177e203c98616e027ce8f506fe5e9a440bb", "message": "More work on mandates : - constraints - display related payment lines - set mandates to expired after 36 months of inactivity (via a cron) - add tracking/chatter - add default draft state + validate button\n\n[FIX] In Debit mode, don't use the partner_bank_id of the customer invoice !\n\nIn the wizard 'Select invoices to pay', add maturity date in the view of the account move lines"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/2144be640848b765ce7c1bf491571d3ce242f867", "message": "FIX payment_order_type : payment -> debit"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/e08ee1676ed236e2cb5f9c11467e2f661c58144f", "message": "Reduce pep8 warnings Use create_date instead of a dedicated datetime field The creation of the SEPA file now has a _prepare function Other improvements in the code."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/137377a4455c940e250ac56d276cea0ef95aadaa", "message": "Add python lib dependencies."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/2d5c618c0a0789453297465c91f84bac2f227d23", "message": "2 modifications following a real-life SDD with a French bank: - convert accented chars to ascii chars (via the unidecode lib) - use \"PrvtId\" instead of \"OrgId\" in the XML Use the sequence of payment.order as the \"Message identification\" of the XML file (advantages : it is unique, users can easily customize the sequence and users can easily find the payment corresponding to the \"Message Identification\" in OpenERP). It is also used as the Payment Identification, combined with the sequence type. Use the sequence of payment.line in the \"EndtoEnd Identification\" field. Reduce flake8 warnings."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/67ef15a5ce2f02e71c9682e97baa8a9c02ec9764", "message": "correct parent menu entry Remove unused variables"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/2eb4892f3f005d1919a6314c8ccb625ab426ab04", "message": "First implementation of mandates, but I still have a lot of hesitation about the data model so it may change. Manage different sequence types in the same file ; we just have to separate them in different payment info blocks."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/fcf5ceb1e37f9e3e57f772570d6f03f8365243f7", "message": "Add module account_banking_sepa_direct_debit that implements pain.008.001.02, pain.008.001.03 and pain.008.001.04. This module is not ready yet : the management of mandates is still missing. I am currently trying to get more information about these mandates to decide what is the best implemtation of the data model of the mandates (O2M on res.partner ? O2M os res.partner.bank ?)."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f787626993072896bb41d740e36bf29046de320d", "message": "Add support for ISO20022 \"Category Purpose\"\n\nAdd local instrument 'INST' for SEPA Instant Credit Transfer"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/59724e429cebea08212b441a7233848cfda628c8", "message": "Port almost all modules to v10 (#305)\n\nPort almost all modules to v10\n\n* Update to EPC Rulebook v9.2 that start to apply on 2016-11-20 (bug #300)"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/33d247cb5755f3ba0faa1f77de7374e2773bc11b", "message": "Simpler variable names\n\nRename method"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c9f5fe399281a8c25a1ccf1df6b0daff67691035", "message": "Move the code that generate the bank account number in the SEPA XML file in a dedicated method"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9720eb1079ebba059c506141add6052e9931d722", "message": "Add the bank_line as argument to some methods that generate SEPA XML"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/872a34b8d5f261b1febb98c33d7efa7792340cbb", "message": "Add field local_instrument in payment lines and bank payment lines"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/63946e09f36acdcf625739a3d12cb4433c2ecf34", "message": "Adds flexibility to support direct debit direct debit for switzerland (pain.008.001.02.ch.01)\n\nImplement SEPA Core recommandations for postal address"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f6143e4e066c22bf044127946248a76ead0960e1", "message": "Add hooks for l10n_ch_sepa (pain.001.001.03.ch.02)\n\nMove code of account_banking_pain_base/models/banking_export_pain.py to account_banking_pain_base/models/account_payment_order.py\nAllow cancel when payment order is in \"File Generated\" state\nAdd postal address in party block"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/e2b1b44653db33bbdae7c21f89f0bf9c5f457c49", "message": "Take into accounts the remarks of Eric Caudal"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/075871ad6479a6f4337839e4d0884de3e11097e0", "message": "FIX use of communication type"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/9703a0f56d166c286fd04c8818a9e2f020979786", "message": "Avoid empty group in payment mode\n\nCode cleanup in views"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/71d1e3883d62476ff98633fa96464229613e75c7", "message": "Move fields mandate_required and export_ascii from payment mode to payment method\n\nDisplay chatter on payment orders\nSeveral small usability improvements"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/7c3a7892a6a1b8ecbbed93ce2d988e79bf5ee24e", "message": "Add support for non-SEPA DD and CT without without IBANs"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d7b616102c379eca99784e90f3dfabd43d9a5564", "message": "Add module account_banking_mandate_sale\n\nAdd option 'mandate_required' on payment orders\nAutoselect first valid mandate on customer invoice that have a payment mode 'mandate_required' = True\nAdd option on select move lines to pay wizard to allow selection of litigation moves (unchecked by default), in order to integrate the feature of the module account_payment_blocking"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/de23d92e82bc71793cf004f035332bc38232376f", "message": "Finalise merge of account_banking_payment_transfer into account_payment_order\n\nAdd support for transfer moves\nDisplay transfer moves in a dedicated tab in payment order view\nCode cleanup"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d616d195648686820fc4fb68d0b8bb6efa2d6906", "message": "bank_bic on res.partner.bank is a related field in v9 and is not displayed in form view, so no need for explainations any more"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/30c723a562279a1019c8b7382727196dfccf8b47", "message": "Finalise the wizard of selection of move lines to pay\n\nAdd button \"Add to payment/debit order\" on invoice form view\nStarted to integrate payment transfer in account_payment_order (not finished at all though)\nVarious fixes/changes/improvements/..."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f319243b720f4b088445f783a87d91f28019865e", "message": "Start to port bank-payment to v9 (with a lot of improvements) during the Sorrento Code sprint 2016\n\nImprovements include:\n- full re-organisation of modules and big re-organisation of the code\n- simplification of the code related to the fact that support for direct debit is now in t\nhe base module, not added by an optional module account_direct_debit (module was removed)\n- new design of the wizard to select move lines to pay\n- support for non-SEPA file transfer-\n- support for German direct debit SEPA files (fixes bug #129)\n- remove workflow of payment.order\n\nThis port to v9 is not finished... there is still a lot of work:\n- finish the code of account_payment_order/wizard/account_payment_line_create.py\n- port account_banking_payment_transfer and integrate it inside account_payment_order\n- fix bugs\n- clean-up code, remove dead code\n- test in several complex scenarios"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/0590547adca5ff18f00119a6621d7bc65001a60a", "message": "Add bank.payment.lines object to allow grouping in the payments"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/24861b05d6555ff6a2b2264ccece57e2dc372daf", "message": "Add @api.model on _get_struct_communication_types"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/883ecc60a4866bbc814dc2f47b942243b2d80ef1", "message": "account_banking_pain_base: add @api.model on all methods of banking_export_pain.py"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/edf7ab7c73b1418af48a82161b613992662aef04", "message": "Port SEPA modules to new API\n\nFix an important regression in account_banking_sepa_direct_debit: \"Date of Last Debit\" was not set any more\nProper write of date_done with account_banking_payment_export is installed without account_banking_payment_transfer\nAdd post-install script for date_sent on payment.order"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/14de04c01c240c7eb2fb0c4eb4b7dc440d082500", "message": "Add hook to block in localization modules that want raise if initiating_party is not set"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4eb8ada3530179c8f943a3e7a6a902a6aff57a22", "message": "Replace SQL by code that uses the ORM, as suggested by Pedro\nMove part of the migration code to res_company.py, so that it's possible to inherit in other modules"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/84ed8f8c1edb5f9518379637eedd61f7551f30ae", "message": "Better import"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/d2389709c3f6713a93caf19aef903d74a576683c", "message": "Fix bug #111 New field\u00a0initiating_party_identifier on res.company (migration script included)"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/66d2242a02071da059ff919f55682d5091398732", "message": "Use attachments instead of creating a specific object for each kind of payment order"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b89c82a6c3e6a79314e53b02c4a979c3f184fcf3", "message": "Add missing utf-8 header\nUpdate state field on SEPA file objects and display it in tree+form views.\nMigrate form views to version 7.0 and simplify them."}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c014436e5e1aca4c360a320ee6ffe2b91eb044aa", "message": "Only catch the openerp exception in generate_party_agent(), as suggested by Stefan on the MP."}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48633221", "body": "in the current code (which is for v7):\n'customer_payment_mode': fields.property(\n            'payment.mode', type='many2one', relation='payment.mode',\n            string='Customer Payment Mode', view_load=True,\n            help=\"Select the default payment mode for this customer.\"),\n\nfor v8, you should try this:\n\n'customer_payment_mode': fields.property(\n            type='many2one', relation='payment.mode',\n            string='Customer Payment Mode',\n            help=\"Select the default payment mode for this customer.\"),\n\nand do the same for the other fields.property in the code.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48633221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58154388", "body": "Pedro,\n\nThanks for your great work. In banking/account_banking_sepa_direct_debit, you moved the python files to \"models/\", but the old python files are still present in account_banking_sepa_direct_debit/, which is a big trap (I just fall in this trap :)\n\nAnother suggestion (which may be for another PR) : we should move the readonly=True on the field unique_mandate_reference (of the object sdd.mandate) from the field definition to the form view, in order to make it possible to import existing mandates with RUMs (for companies who migrate from another system to OpenERP and have to migrate existing mandates in OpenERP and keep the RUMs)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58154388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58255980", "body": "@pedrobaeza \nFrom my experience of this afternoon with Odoo v8, when the field is readonly=True in it's definition, you can't import it via the CSV import feature of the Web interface (via the module base_import).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58255980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58256364", "body": "@pedrobaeza \nAre you sure you want to include the splitting of mandates as generic ones in this PR ? We really need to get this PR in the main 8.0 branch shortly... I hate empty 8.0 branches :)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58256364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58474825", "body": "@pedrobaeza \nI have updated your branch, and I think I found an issue: I can see the module account_banking_mandate, but the module account_banking_sepa_direct_debit doesn't depend on account_banking_mandate (but it inherits the object account.banking.mandate).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58474825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58476161", "body": "@pedrobaeza \nThe file wizard/export_sdd.py still contains 3 occurrences of self.pool['sdd.mandate'], which make me think that the file wizard/export_sdd.py hasn't been \"ported\" to the use of account_banking_mandate.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58476161/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58482071", "body": "BY the way, I just ported account_direct_debit/wizard/payment_order_create.py to the new API and re-enabled it in account_direct_debit/**init**.py\n\nI am now trying to fix other things (error when adding lines in direct debit order) and I'll send you the patch with all the fixes in a few hours.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58482071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58660185", "body": "@pedrobaeza \nIn addition to the mail I sent you, I found another bug: in account_banking_mandate/models/payment_line.py on line 57: if you have 2 or more mandates for the bank account, mandates.id will try to write (ID1, ID2) on the many2one field 'mandate_id' and it would fail.\n\nSo I think it should be fixed that way:\n\nREMOVE            vals['mandate_id'] = mandates.id\nADD                    vals['mandate_id'] = mandates[0].id\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58660185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58872112", "body": "@pedrobaeza \nAbout my remark\nREMOVE vals['mandate_id'] = mandates.id\nADD vals['mandate_id'] = mandates[0].id\nI didn't made this change by reading the code and thinking it was a mistake, but because I made some real tests with real data and I got a crash. It's not difficult to reproduce: you have to configure 2 valid mandates on a customer and create a SEPA direct debit file : when you validate the selection of the invoices to pay, you will get a crash.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58872112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59979370", "body": "@pedrobaeza \n\nTwo more important remarks:\n1) In v7.0, the module 'account_payment_sale' only depended on 'sale' (and NOT on 'stock') ; there was another module 'account_payment_sale_stock' that depended on 'sale_stock'. This allowed the use of 'account_payment_sale' WITHOUT having to install the 'stock' module.\nIn your branch for v8, the module 'account_payment_sale' depends on 'stock_account' and you didn't port the module 'account_payment_sale_stock'. Why ? I think it is a regression compared to the v7 branch, because with your branch for v8 we can't use the module 'account_payment_sale' without the 'stock' module.\n\n2) In account_payment_sale/models/sale_order.py and account_payment_purchase/models/purchase_order.py, in the definition of the payment_mode_id field, you added a domain that adds a filter on 'payment_order_type'. I don't think it is a good idea because, for example:\n- you can't set the payment_mode_id to a 'direct debit' on a purchase.order ; it may be usefull for the user to know that this supplier invoice will be paid via direct debit, even if the \"direct debit\" is not managed by OpenERP\n- you can't set the payment_mode_id to 'credit transfer' on a sale.order... but it would be usefull for the user to know that this customer usually pays via 'credit transfer' and display some information about this on the sale order report (for example, display the IBAN of my company related to the 'credit transfer' payment.mode, so that he knows on which bank accout he should send the money)\n  So, if I didn't put a domain on the payment_mode_id field on sale.order and purchase.order when I developped the module account_payment_sale and account_payment_purchase for v7, it was on purpose !\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59979370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60296745", "body": "@pedrobaeza \n\nAbout point 2 (domain on payment_mode_id), I understand your point about Spanish users that will migrate from account_payment_extension to the banking branch. But you also have to consider the existing users of the banking branch. In fact, I didn't discover the point 2 myself, it was reported to me by one of my customers on v8 that I had recently migrated from banking/7.0 (with minor changes to make it work on v8) to the branch of this pull request ; he was surprised to see that he couldn't select \"Credit transfer\" as payment mode for a sale order any more (which would display the credit transfer instructions on the sale order report).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60296745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60534192", "body": "@sbidoul \n\n+1 for your idea of being able to configure on payment.mode the type of transaction on which it can apply.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60534192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61077832", "body": "@pedrobaeza \nIf you don't have time to do it, I can try to do it tonight if you want.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61077832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61275987", "body": "I don't know if others experience this issue too: the field partner_id on account.banking.mandate is always empty. I'll try to investigate this when I have time...\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61275987/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61341298", "body": "@NL66278 My code was up-to-date, but as this partner_id related field on account.banking.mandate is store=True, it didn't solve the issue. I dropped the column and reloaded the account_banking_module, and now the partner_id field has the right value. Sorry for the noise.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61341298/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62035235", "body": "I am very surprised by the code in account_payment_sale_stock/models/stock_picking.py: @pedrobaeza , you write:\n\n```\n    @api.model\n    def _create_invoice_from_picking(self, picking, vals):\n        if picking:\n            # Search if this picking comes from a sale order\n            sale_order_obj = self.env['sale.order']\n            sale_order = sale_order_obj.search(\n                [('picking_ids', 'in', picking.id)], limit=1)\n            if sale_order and sale_order.payment_mode_id:\n                vals['partner_bank_id'] = sale_order.payment_mode_id.bank_id.id\n                vals['payment_mode_id'] = sale_order.payment_mode_id.id\n        return super(StockPicking, self)._create_invoice_from_picking(picking,\n                                                                      vals)\n```\n\nI don't understand why you don't use the \"sale_id\" M2O field on the picking ? I know that it's now a computed field on v8, but the O2M field 'picking_ids' on sale.order is also a computed field...\n\n```\n    @api.model\n    def _create_invoice_from_picking(self, picking, vals):\n        if picking and picking.sale_id:\n            sale_order = picking.sale_id\n            if sale_order.payment_mode_id:\n                vals['partner_bank_id'] = sale_order.payment_mode_id.bank_id.id\n                vals['payment_mode_id'] = sale_order.payment_mode_id.id\n        return super(StockPicking, self)._create_invoice_from_picking(picking,\n                                                                      vals)\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62035235/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62038961", "body": "@pedrobaeza \nI have the same point of view as @sbidoul : for me, payment_order_type must have the same value on the payment.order and payment.mode.\n\nTo make things simple, I would just add 2 boolean fields on payment.mode:\n- sale_ok\n- purchase_ok\n  and filter on these fields in the domain of the field payment_mode_id (just like for the product).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62038961/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23070207", "body": "yes, it's caused by the fact that there are tabs everywhere in the XML file !!! And the lines I added have spaces.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23070207/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "antespi": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/ee53fc8fa354ba5190e5d045868fa2f96b26fdf2", "message": "Define SEPA identifiers per payment mode"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/96b5c6a6c1a551164b688f24cdcdd79336993189", "message": "Fix t-value when language is False"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/144936b15d10233207a3fbdc64afeba1f635d8b2", "message": "Fit in order to have only one page per mandate"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/30461f3c3f271df48114891eb90258ac23bf1f15", "message": "English text at right instead of below"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/f5fed9255776e77feab79ab8a7b024e57af628d5", "message": "Add english lang when a different lang is printed"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/5bcebe7277f45c43761d5ff7049bcb32768972df", "message": "Define SEPA identifiers per payment mode"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/eec3b4c09289f3976e9d62f7d2e51753f4f703d5", "message": "[IMP] Define SEPA identifiers per payment mode"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "phschmidt": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/30279d43f02b236bdda08eda7013bb1afca263af", "message": "some typo corrections"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/31a25355e7be2d3f37eccb726eea58c8c830f21a", "message": "Add requested descriptions in an OCA README.rst file"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/56e2b7080f1c9005be33181156c27cb33d08232e", "message": "some typo corrections"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/8f0164d9889ab1e17cb42e6f78efca9ec20eada9", "message": "Add requested descriptions in an OCA README.rst file"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/263a317be0942e967ece08e25edea67faba102c8", "message": "some typo corrections"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/8140ac4700e1c7084a6b99387aa045658acdd268", "message": "Add requested  descriptions in an OCA README.rst file"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jlaloux": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/f49cd7eb97e83fd88bfe1f8286cec156a6e9b2c8", "message": "Improve code"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c7a2e4a85147d2ecfcc17895f761af5768b366f8", "message": "Fix an error when no payment_order_ids"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "bwrsandman": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/1d80f87318aa1901e21fc9c3d92f2b24e60b17ab", "message": "PEP8 on account_banking_sepa_credit_transfer"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/97db07c3962c270621c30ef8a9dff808ea93061e", "message": "PEP8 on account_banking_sepa_direct_debit"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/295316d73f0558899f7190f9acd6b01e9b316b73", "message": "PEP8 on account_banking_pain_base"}], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/191", "title": "[8.0] npg modules - account_banking_make_deposit, account_banking_reconciliation", "body": "Porting NPG modules from https://code.launchpad.net/openerp-usa\n\nMany improvements and fixes have been added including multi-company support.\n\n8.0 version of #144\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48392964", "body": "I think this might be a good time to convert these models to the new API, since they are pretty small model files.\nWhat do you think?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48392964/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48465480", "body": "It is very likely that none of these modules have been ported.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48465480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48645096", "body": "@alexis-via \n\nfor codeblocks use backticks (`)\n\n> ```\n> a code block\n> ```\n\ngives\n\n```\na code block\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48645096/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48908164", "body": "PR is against the wrong branch (master)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48908164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48908459", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48908459/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49074285", "body": "Move them to __unported__/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49074285/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53335983", "body": "This PR is ready and doesn't aim to fix unittests, only pep8\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53335983/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/54874033", "body": "@pedrobaeza Done\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/54874033/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58031625", "body": "As this is pretty old, would you mind rebasing (or amending the last commit) in order to trigger travis tests.\n\nThank you\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58031625/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58573831", "body": "@pedrobaeza We use lambda so the code is called on self. If a the function reference is used directly in the declaration, then, when you overwrite it, it still won't be called, since the declaration is done with the function in that same class (the ref).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58573831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58676911", "body": "Yes this is what I do by default now in 7.0.\n8.0 has the wonderful ability of accepting a string of the function name, so I assume (did not test) it uses `object.__getattribute__(function_name_str)()` which is called on the self and can be inherited.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58676911/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59253902", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59253902/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59763854", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59763854/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61845537", "body": "@NL66278 Sorry, I misunderstood the question. Labels can be set by reviewers. I have taken out the needs fixing label.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61845537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594023", "body": "Better matching for report:\n\n```\n[report]\ninclude =\n    */OCA/banking/*\n\nomit =\n    */tests/*\n    *__init__.py\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594049", "body": "The services part is not needed\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594049/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594064", "body": "can simply be\n\n```\n- travis_install_nightly 7.0\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594106", "body": "if `unidecode` is needed for banking, it would be more telling to put it on its own line, separate from the test-only `coveralls flake8`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594106/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594134", "body": "not necessary, travis has already cloned this in `pwd`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594315", "body": "Including repositories at the end (`$HOME/banking`) is only necessary for other repos, for example: this repo has a module which depends on modules from `mgmtsystem` but we don't want to test those.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594315/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594354", "body": "Better to use the png badge, as it allows to choose a branch to show\n\n```\n[![Coverage Status](https://coveralls.io/repos/OCA/banking/badge.png?branch=7.0)](https://coveralls.io/r/OCA/banking?branch=7.0)\n```\n\n[![Coverage Status](https://coveralls.io/repos/OCA/banking/badge.png?branch=7.0)](https://coveralls.io/r/OCA/banking?branch=7.0)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14594354/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14928140", "body": "BeautifulSoup\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14928140/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26797422", "body": "as @fanzalika pointed out, `('journal_id.type', '!=', 'situation'),` should be added\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26797422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26797490", "body": "as @fanzalika pointed out, `('journal_id.type', '!=', 'situation'),` should be added\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/26797490/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27669981", "body": "This file is too long, it should be split up according to model.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27669981/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670069", "body": "This only deals with `deposit.ticket` please rename to `views/deposit_ticket.xml` or `deposit_ticket_view.xml`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670174", "body": "This only deals with `deposit.method`, please rename to `demo/deposit_method.xml`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670284", "body": "Odd alignment, this should be fixed\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670284/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670352", "body": "Mix of tabs and spaces here, that could be cleaned up with indents of 2 or 4 spaces to be consistent.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670352/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670425", "body": "You might want to bring this to the top.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670463", "body": "This class should be in it's own file\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670463/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670651", "body": "`'? '` could be removed from these bools, it's kind of redundant, and I don't see anywhere else in Odoo that labels bools like it.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670651/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670783", "body": "Not blocking, but the quotes are redundant\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670783/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670858", "body": "Good\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27670858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "sergio-teruel": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/417ef1e9654f6b5cea5fbfd9076e5897e3cee04e", "message": "account_banking_sepa_direct_debit: Report font size smallest"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/4b982c843cb0976e15afa057f30cf94bba3d9150", "message": "account_banking_sepa_direct_debit: Fix translation"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/01ee118e94241f0be7f93b52873c6e077a0647e7", "message": "account_banking_sepa_direct_debit: Pep8 fixes"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/c96d5bb7452b5d8ded4c6e5a8f0d0dcab742cb56", "message": "sepa_direct_debit_mandate: Migration script"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/04cd3899763beea8b4fb5561c77a4a2a150ccc65", "message": "account_banking_sepa_direct_debit: Use api.multi instead"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/b06d52b610b65de88d192e39c72d15e4c0d02764", "message": "sepa_direct_debit_mandate: Split basic and sepa mandate"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/ae45b579ea34ecc99e53c542d7c8d861c1751911", "message": "account_banking_sepa_direct_debit: Fix error in payment order validation when there is more than one line with the same mandate."}], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/425", "title": "[9.0][FIX] account_payment_partner: ACL for portal group for res.partner.bank model", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/424", "title": "[9.0][FIX] account_payment_mode: ACL for portal group in account.payment.mode model", "body": "cc @Tecnativa", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/345", "title": "[9.0][IMP] account_payment_partner: Allow hide bank account in report invoice", "body": "cc @Tecnativa", "author_association": "CONTRIBUTOR"}], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48399454", "body": "You have reason.. So i will try to do it. I will search documentation about new odoo api and i will do the necessary changes to refactoring the models\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48399454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}], "commit_comments": [], "review_comments": []}, "yvaucher": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/4856ad29edc43a1f889c8646e18af540b3a8dd36", "message": "Add missing default oca icons"}], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60077740", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60077740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60617200", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60617200/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24676790", "body": "What is this change is this diff? It has nothing to do with translations\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24676790/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147159", "body": "Please change this line to\n\n```\n    :alt: License: AGPL-3\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147159/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147321", "body": "for Odoo ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147321/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147333", "body": "for Odoo ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147538", "body": "Please ensure\n\n```\nif context is None:\n     context = {}\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147887", "body": "2014-2015 ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147937", "body": "missing context on search\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/28147937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29927821", "body": "In 8.0 description must go in `README.rst` to be visible on github, on apps.odoo.com and in Odoo module description.\n\nHere is the template: https://github.com/OCA/maintainer-tools/blob/master/template/module/README.rst\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29927821/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29928061", "body": "Please add `Odoo Community Association (OCA)`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29928061/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34566258", "body": "It will be possible to improve it if https://github.com/odoo/odoo/pull/7608 is merged\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34566258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34569995", "body": "I'll remove this inversion as module `bank_statement_import_invoices_fix` created by @damdam-s already does it.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34569995/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "acysos": {"issues": [], "commits": [{"url": "https://api.github.com/repos/OCA/bank-payment/commits/7516f43ef3004cac866e2115c27bde1da2ee13a5", "message": "[FIX] account_banling_pain_base: refactored"}, {"url": "https://api.github.com/repos/OCA/bank-payment/commits/6a38c5c816b1991206e11d360fee4d3805b5f65a", "message": "[FIX] account_banking_pain_base: support party identifier for Spain"}], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aisopuro": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/437", "title": "[FIX] Ensure that the test finds only one bank journal", "body": "Previously it was possible to find multiple bank journals,\r\nwhich caused singleton errors when the test tried to set values\r\non them.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "arkostyuk": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/434", "title": "[11.0][MIG] account_payment_sale", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "almumu": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/432", "title": "[8.0][ADD]account_payment_partner", "body": "When creating a refund, get by default the payment mode from origin invoice", "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/431", "title": "[8.0][FIX] account_payment_sale_stock: get invoice payment mode from picking", "body": "When creating invoice from picking, if payment mode is not found on sale order, we should try to get it from partner's payment mode.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "adrienpeiffer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/427", "title": "[10.0][CHG] account_payment_partner: Prevent to delete bank account linked on invoices.", "body": "This module adds a conditional require attribute on the bank account field on invoices.\r\nDespite this, it can be deleted.\r\nSo, this commit prevents to delete a bank account once it's linked to an invoice.", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/414", "title": "[IMP] account_payment_order: Display partner account type in payment \u2026", "body": "\u2026order line tree view.\r\n\r\nCurrently, a payment order is considered as SEPA  only if all partner accounts are IBAN valid and the currency on all payment line is Euro.\r\n\r\nwith this commit, it's easier to understand why a payment order it's not in SEPA format.\r\n\r\n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/231", "title": "[WIP][ADD] account_cash_discount_stock module", "body": "", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/210", "title": "[WIP][ADD] Add account cash discount payment term module", "body": "- [ ] Depends on #208  \n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/209", "title": "[WIP][ADD] Add account cash discount payment module", "body": "- [ ] Depends on #208 \n", "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/208", "title": "[WIP][ADD] Add account cash discount base module", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27203507", "body": "Can you directly use workflow ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27203507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33654038", "body": "@sbidoul I think debit_reconcile isn't considered like a multi method because there is no `ids` parameter. Therefore, `line.debit_reconcile()` doesn't work. I can change `debit_reconcile` method d\u00e9claration to replace `payment_line_id` with `ids` and integrate a loop in this method\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33654038/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33654976", "body": "great! it works\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33654976/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35955196", "body": "Hi @pedrobaeza,\nI think it's a bit out of scope. It's just a fix. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35955196/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35959030", "body": "Yes but there something else in this module\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/35959030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "omar7r": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/419", "title": "[8.0] Adapts SEPA files to new rules that takes effect in November 19th", "body": "Hi,\r\n\r\nThe November 19th takes effect some new rules in SEPA files, the unique rule that affects technically to 8.0 version, because in 9.0 and 10.0 it is done, is the \"PstlAdr\" in \"Dbtr\" node, this node is only required when the debtor is from Switzerland, Monaco, San Marino and the French overseas collectivities Mayotte, Saint Pierre and Miquelon.\r\n\r\nIn 9.0 and 10.0 versions this node is always present in SEPA files if debtor has country, I based my solution in these versions.\r\n\r\nRegards.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "JanikManuel": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/411", "title": "Translated spanish texts to german equivalents", "body": "Translated supplied spanish texts to german equivalents", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "ljsalvatierra-binovo": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/409", "title": "[8.0][FIX] Amount currency calculation for move lines with no associated invoice", "body": "When trying to calculate the amount currency, the previous version was trying to access the move line invoice currency with no validation for the move line invoice existence, now it does.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "fmdl": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/408", "title": "FIX : check if there are an partner in account bank", "body": "if there are not partner in res.partner.bank, `def generate_party_block(` make un error when `_prepare_field` is call.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "Cedric-Pigeon": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/402", "title": "[10.0] account_payment_order: allow blocking direct payment on invoices", "body": "This PR adds a flag on cash and banks journals.\r\nThis flag prevents the usage of the journal through the Register Payment wizard on an invoice.\r\nThe default value is False.", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "benwillig": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/397", "title": "[ADD] Module which allow to cancel an invoice which is linked to a payment order", "body": "When you try to cancel an invoice which is linked to a payment order, an integrity error is raised. This module allows to destroy the link between the invoice and the payment order before cancelling the invoice.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "vrenaville": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/392", "title": "[V9.0][BACK_PORT] [FIX] Bug #353 crash when selecting a payment mode", "body": "Hello,\r\n\r\nIt's a back port of this fix : \r\nhttps://github.com/OCA/bank-payment/pull/354", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33762455", "body": "I try to find a solution for that with no success, the reason is that I have no link on the \nbank statement line on the move line, so I can't change the result after a call to super.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33762455/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "whulshof": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/386", "title": "Correct SK (Slovakia) IBAN number spec", "body": "When importing a bank statement with a payment from a bank account from Slovakia (SK), the import crashed, because the BBAN format in sepa.py did not meet the IBAN specs for Slovakia. I adapted in this pull request.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "gmarczynski": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/362", "title": "Rearrange the order of partner block to fit the XML schema of pain.001.001.02", "body": "So far the code was correct only for pain.001.001.03 (used by default). \r\nIn pain.001.001.03 element Ctry goes before AdrLine in PostalAddress1.\r\nIn pain.001.001.02 the order is reversed.\r\n\r\nThis PR reverses the order of Ctry  and AdrLine for pain.001.001.02 and makes it pass the schema check.\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "drl9319": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/361", "title": "[8.0] account_banking_payment_export dot in bank lines view", "body": "Hi\r\nI have a problem with the bank_line view because the decimal and thousands separator are incorrect, can view this image:\r\n![bank-lines-error](https://cloud.githubusercontent.com/assets/19977041/25695508/b1cc3138-30b3-11e7-8759-48aa4170c6a2.png)\r\nBut with this new code view fine this view like this image:\r\n![bank-lines-ok](https://cloud.githubusercontent.com/assets/19977041/25695529/c8bb1616-30b3-11e7-9342-e2322842f657.png)\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "BT-hstoeckle": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/358", "title": "[9.0] New module account_payment_expense to copy bank details from exployee to account move lines of expense", "body": "", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "GillesTephaneMeyomesse": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/352", "title": "[10.0][MIG] account_payment_purchase", "body": "", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "luc-demeyer": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/349", "title": "[80] multicurrency support", "body": "This fix adds multi-currency support for the transfer move (via backport of the V10 code)\r\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "thomaspaulb": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/334", "title": "[8.0][FIX] Account banking sepa credit transfer: documentation and translation updates", "body": "I installed this module and encountered a silly spelling error in Dutch, as well as was looking for half an hour for the source of a certain \"Compute error\". Have fixed the spelling error and added documentation to help next users on their way.", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "aetna-softwares": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/306", "title": "Fix error on amendment", "body": "When enter in amendment case, the code tried to access a non existent \"date_done\" field and to use a non existant _validate_iban function\n\nIt seems that the bug is present since 9.0 port\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "mdietrichc2c": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/298", "title": "[9.0] account_payment_sale : change debit account on invoice", "body": "Small PR to update the account on the invoice depending on the payment mode.\n\nThe goal here is that, if an invoice is set with a payment mode that uses a fixed journal, the entries created for payment will use the default debit/credit accounts, and to reconcile them with the invoice, they should use the same account.\n", "author_association": "CONTRIBUTOR"}], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33561318", "body": "`if not statement_id or not self.line_ids:` would be preferable\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33561318/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "StefanRijnhart": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/297", "title": "[FIX] Check that move lines have an invoice in _match_invoice()", "body": "This fixes a crash under rare circumstances where move lines are selected without an invoice, ending with\n\n```\naccount_banking/banking_import_transaction.py\", line 812, in _get_move_info\n    retval['type'] = type_map[move_lines[0].invoice.type]\nKeyError: None\n```\n", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/276", "title": "[RFR] Stateful amendment info", "body": "I'm proposing to refactor the handling of amendments on SEPA mandates differently, by storing the amendment state on the mandate explicitely. This fixes amendments for switching bank accounts within the same bank, and it allows for a reject trigger so that we can send the same amendment at the next try after a debit reject (note that currently these rejection flows are not otherwise supported in this project).\n\nThis change comes complete with a migration script for mandates that had their bank accounts switched out since their last debit order, and a couple of unit tests.\n", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48186507", "body": "Hi, as someone told me recently, you are not supposed to push your feature branch to OCA/[projectt] directly. Please create a fork first and push your branch to that fork. Create pull requests from there.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48186507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48904784", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48904784/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48904962", "body": "Which format are you importing?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48904962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48905064", "body": ":+1: Thanks!\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48905064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48905771", "body": "Confirmed. We used to have this crappy webservice for IBAN and normalized the domestic account numbers along the way with leading zeroes. This webservice is now deprecated as it gave incorrect results, but it seems normalization is now inconsistent during import and account number lookup.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48905771/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49008082", "body": "No, I think we should adapt the search function to abstract from leading zeroes.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49008082/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49016596", "body": "Thanks, PR against 7.0 here: https://github.com/OCA/banking/pull/17\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49016596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49024111", "body": "Can you try https://github.com/OCA/banking/pull/18?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49024111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49055769", "body": "Thanks for testing!\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49055769/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49055850", "body": "Submitter of #16 tested succesfully https://github.com/OCA/banking/issues/16#issuecomment-49027238\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49055850/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49056940", "body": "BeautifulSoup is used in a deprecated module. Can we exclude such modules from travis?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49056940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49132201", "body": "Well, I am not Odoo and I like to leave my deprecated modules in for the stable release during which they were deprecated... I added the dependency.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49132201/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49143001", "body": "Well, I did not change anyhing in that respect. But I think I support the filter on out_invoice. I can't really imagine that you would apply direct debit to supplier refunds at this point.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49143001/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51457871", "body": "Thanks!\n\nCan your debit orders make the full reconciliation workflow? It looks like you may get your orders in done state after sending them out, because of line 427 of this diff. You should try looking at line 844 of\n https://code.launchpad.net/~acsone-openerp/banking-addons/ba-70-payment-export-refactoring/+merge/179543 and see if you need this change in the workflow transition.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51457871/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471214", "body": "LGTM\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471596", "body": "LGTM, thanks! :+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471859", "body": "LGTM. Looking forward to adoption of the new API.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471859/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471980", "body": ":+1:, thanks\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51471980/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51472018", "body": ":+1:, thanks\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51472018/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51472210", "body": "Same as https://github.com/OCA/banking/pull/12\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51472210/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55788494", "body": "The idea sounds reasonable, and the implementation looks good at first sight. Thanks for including a migration script. Would it not be easier though to rename tables and columns in the pre-script? Also, please check for version. If it is falsy, you will want to return immediately to prevent the script from running upon module installation.\nLooks like you can remove the modified access lines from the sepa module as they are now included in the mandate module.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55788494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55789304", "body": "LGTM, thanks!\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55789304/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55789360", "body": ":+1:, that is\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55789360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55851084", "body": "I guess it does not hurt to hide it instead of remove it (please file a PR) but compatibility with other banking modules will always be problematic I think.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55851084/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55862831", "body": "In account_banking, the period on the bank statement is meaningless. The period for each move is always derived from the accompanying statement line's date. If this is your gripe, it could probably be refactored out in a separate, optional module.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55862831/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56347873", "body": "You damn Git history rewriters. I think your squashing made GitHub lose my synchronous new inline code comment...\n\nThanks for the changes so far btw. Just not done nagging.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56347873/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56356753", "body": "Thanks for the review! Conflicts are resolved now.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56356753/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56494024", "body": "Thanks! :+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56494024/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56494478", "body": "Thanks, LGTM. I believe the failed CI is unrelated.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56494478/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56496175", "body": "Thanks! You beat me to it but I arrived at the same changes. :+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56496175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56496425", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56496425/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56496535", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56496535/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56963586", "body": "Yes, absolutely :+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56963586/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60902510", "body": "That was quick... You should also remove **unported**/account_banking_iban_lookup, which depends strongly on the domestic module. **unported**/account_banking_nl_clieop can be removed as well. Then there is a snippet in **unported**/account_banking/res_partner_bank.py which uses the field 'acc_number_domestic' if available. \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60902510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60909347", "body": "@NL66278 is working on this for Therp at this moment, so I hope he will follow this up.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60909347/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61452842", "body": "Thanks for the follow up! I think we can remove loading BeautifulSoup in .travis.yml as well now.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61452842/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61604314", "body": "Merging the target branch instead of rebasing is considered harmful, if I understand correctly from http://arjanvandergaag.nl/blog/clarify-git-history-with-merge-commits.html. Can you rebase?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61604314/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61848643", "body": "Thanks! :+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61848643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61894475", "body": "Thanks! :+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61894475/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62011265", "body": "Is the change to the po file the result of a fresh export after the change in the code, or is it added manually?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62011265/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62011494", "body": "Thanks! Fast-tracking this trivial change.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62011494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62013764", "body": "Agree with @gurneyalex, it should be easy to add a new test to account_banking_tests based on what's there already (which tests payment orders, not single invoices).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62013764/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62015057", "body": "That and the flake8 errors in the Travis run.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/62015057/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14878806", "body": "I'm trying to point out some kind of dependency graph here. I've mentioned this now explicitely in the text.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14878806/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14879107", "body": "Thanks for pointing out the two typo's. Should be fixed.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14879107/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14879125", "body": "Thanks for guiding me here. I have taken all your suggestions.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14879125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17718077", "body": "s/stepping over to/switching to/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17718077/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17718094", "body": "Is the explicit conversion to bool necessary?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17718094/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17718137", "body": "The choice for 'oneoff' seems to me customer specific. Can you make the choice between recurring and one off a system parameter?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17718137/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17839080", "body": "Can you make this more neutral? Converting one-off mandates is not safer than converting recurrent mandates, if I understand correctly. The mandate type is dictated by the type of the converted domestic mandate.\nIn the same vein, 'slowly evolving towards using recurring mandates' is misleading, as the domestic mandates should be recurrent in the first place to migrate them to recurrent SDD mandates.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17839080/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19957706", "body": "If I am correct, 'x' is one from the 'move_lines' argument in the call to _match_invoice. These move lines have been selected by accounts that are reconcilable ( ('account_id.reconcile', '=', True) around l.924). This would include clearing accounts, which may not necessarily be payable or receivable. My question to you is, why is your other move line account reconcilable?\n\n-- edit --: not tax account\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19957706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20782542", "body": "Isn't this what external_dependencies is for in **openerp**.py?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20782542/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20787016", "body": "I don't understand your comment. Isn't this just a Python best practice, not Odoo specific?\n\n--edit-- Look at PEP 263\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20787016/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20808858", "body": "I believe you are correct. It did not use to be the case but I think the problem is that the web module triggers the loading of every module in the addons path with a static folder in it (if only containing a logo icon, like this module).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20808858/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20808899", "body": "Sorry, missed that completely. Well spotted then, and :+1: for removing this file.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/20808899/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23066668", "body": "Thanks for the improvements! Odd spacing here, as in the other XML. Are tabs involved, in the original or new code? Maybe this is a good time to reformat on indents of 4 spaces?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23066668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22994398", "body": "Don't we need a migration script for these workflow activities?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22994398/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22994513", "body": "Is this harmful? Is there any case that multiple lines are expected?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22994513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22994587", "body": "You only return the first move line? Isn't the test in test_done not misleading then?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22994587/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23392921", "body": "On second thoughts, I have a code comment. By removing domain tuples, you run the risk of creating an imbalanced domain, depending on what operators the element is governed by. Would it not be better to replace the element by the true leaf (1, '=', 1)?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23392921/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/25506231", "body": "As announced on #112, you now mandate the presence of the identifier and issuer on sepa credit transfers. But this does not seem to have been an issue before for SCT's in at least NL, BE and FR. Looking at one Dutch bank specification, it does not seem to be mandatory. So in spite of the evindence you found, maybe we should be more pragmatic about this?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/25506231/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31539691", "body": "Left a TODO here?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31539691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31539905", "body": "Typos\n- transfer_t_ \n- that allows\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31539905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31539928", "body": "transfer_t_\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31539928/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31540403", "body": "Or, a little more helpful: there is nothing to configure for this module.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31540403/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29058162", "body": "You are replacing a method to guarantee a unique identifier with something more static. Is this guaranteed to be unique?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29058162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29058623", "body": "Next time don't remove the year but can add the current year, e.g.\n\n```\nCopyright (C) 2014-2015\n```\n\nJust leave it for now\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29058623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29919234", "body": "Sorry, my mistake. Then there are no problems with uniqueness indeed.\n\nHowever, does this mean that you are taking the account number out of the statement identifier (i.e. its display name)? Isn't that going to make it a little bit difficult for the user to quickly recognize statements for a particular account?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/29919234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "daviddiz": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/296", "title": "[ADD][8.0]'payment_order_create' add suppliers refunds payment lines", "body": "When create a payment.order of type payment and launch the wizard to propose lines,\npropose not only the credit lines, add too the refunds from the suppliers.\n\nThe sense of adding this refund invoices is to take care of them and not to pay invoices from the same supplier with out decreasing the amount of the refund.\n\nTo do that i only extend the function \"**extend_payment_order_domain**\" of the model \"**payment.order.create**\" in the module \"**account_banking_payment_export**\", \nin the domain i change the expression ('credit', '>', 0) with :\n\n('credit', '>', 0) \nor \n( ('debit', '>', 0) and ('account_id.type', '=', 'payable') and ('journal_id.type', '=', 'purchase_refund') )\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "sebalix": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/293", "title": "[FIX] 8.0 - account_direct_debit - 'pay_mode' undefined if 'payment_type=None'", "body": "Not sure about the fix, the fact is that if `payment_type` is None, `pay_mode` is then undefined.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "hbrunn": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/283", "title": "[IMP] use sql for matching partners fuzzily", "body": "the current approach is not fun when you have a bigger amount of partners\n", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/281", "title": "[ADD] account_payment_restrict_mandate", "body": "# \n# Restrict debits on mandates\n\nThis module was written to allow a debit workflow where a customer announces\na maximum amount that can be debited within a given period.\n# Usage\n\nTo use this module, you need to:\n# . configure a banking mandate for your customer with a maximum amount per date\n# . adjust the repetition rule, the default is every month\n# . fill in a start and end date for which the repetition rule applies\n# . when selecting move lines in a payment order, amounts will be capped to the\n\n   maximum amount given in the mandate.\n# . in case you have missed debit dates according to the repetition rule, the\n\n   maximum amount is multiplied by the number of dates missed\n\nIf this does not work as expected, check the following\n- is the invoice the move is originating from linked to the mandate?\n- is the mandate in state 'valid'?\n- is there an occurrence in the repetition rule falling between today (or the\n  scheduled date if it's a fixed order) and the mandate's starting date or\n  the mandate's last date of debit?\n\n.. image:: https://odoo-community.org/website/image/ir.attachment/5784_f2813bd/datas\n    :alt: Try me on Runbot\n    :target: https://runbot.odoo-community.org/runbot/173/8.0\n# Known issues / Roadmap\n- we need a widget for FieldRrule\n- there should be an extra column when selecting move lines showing how much\n  can be debited according to the rule (this is going to be a performance killer)\n- when payment lines are adjusted or altogether removed, there should be a warning\n\nThis is work in progress until at least the horrible UI for repetition rules is fixed. For the time being, consult https://labix.org/python-dateutil#head-cf004ee9a75592797e076752b2a889c10f445418 for possible values in the repetition text field. For the freq parameter, use the integer value instead of the symbolic name. (0=yearly, 1=monthly, 2=weekly, etc)\n", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/273", "title": "[FIX] use set_done instead of plain workflow", "body": "without this, `date_done` stays empty forever. In the migration, I try to restore this from `date_scheduled` or the last write date.\n", "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/200", "title": "[IMP] store journal_entry_ref to enable sorting", "body": "journal_entry_ref only makes a difference to move_id when we also allow draft moves, so I moved this field to the respective module. I also made it a stored field in order to allow sorting\n", "author_association": "MEMBER"}], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48807889", "body": "> anyone knows a way to solve and/or debug this?\n\nI think you didn't create a mapping for your account. Go to Settings in the \nfinance menu and create one in 'Bank accounts'\n\n## \n\nTherp - Maatwerk in open ontwikkeling\n\nHolger Brunn - Ontwerp en implementatie\n\nmail: holger@therp.nl\nweb: http://therp.nl\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48807889/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48896079", "body": "you probably need something in the line of #8 or #11 (or exactly this fix if what you import is an ING mt940 file)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48896079/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48896552", "body": "see #15 \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48896552/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48897441", "body": "the crucial screen was the last one. Merge #8 and it should work. If so, please also give a thumbs up there\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48897441/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48900070", "body": "Glad to hear it works. To vote that up on #8, fill in ': +1 :' without the spaces as a comment there.\n\nYou seem to have other problems with your file (given the amount of errors in transactions/statements), but that's not in the scope of this issue so I'll close this one.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48900070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51764647", "body": "Thanks for the hint, this transition was indeed necessary\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51764647/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51980444", "body": "That should be a pretty simple change in account_banking_nl_ing_mt940 - changing footer_regex might even be enough from glancing through the specification\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/51980444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56345069", "body": "I added Stefan's suggestions. As for the name: 'On the fly' doesn't make it clear to me what the module does, 'create mandates' does. Do you agree?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56345069/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56346897", "body": "okay, this time I don't have strong feelings about the module's name and did as you said\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56346897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56346924", "body": "btw. also rebased and squashed the commits\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56346924/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56352252", "body": "ING Austria does it wrong in the same way. A bit eurocentric though, but hopefully non-iso8859*-countries are more aware of this issue anyway, so :+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56352252/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56352561", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56352561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56352705", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56352705/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56353474", "body": "looks good! But could you merge from upstream and resolve the resulting conflicts?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56353474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56353691", "body": "As #35 is the more comprehensive one, I propose to focus review efforts there and close this one\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56353691/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56354498", "body": "Done. Even though I consider one-off mandates still safer because if I mandate you to debit n times, it follows that I mandate you to debit 1 time, but not the other way around...\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56354498/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56355006", "body": "Thanks, test will arrive sooner or later (that) in account_banking_mt940, which is where all the magic happens\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56355006/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56357732", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56357732/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56394419", "body": ":+1:  (unrelated pylint errors are fixed in #38)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56394419/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56487037", "body": "@gurneyalex thanks for your pointer concerning tuples!\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56487037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56493500", "body": "That's what pylint says about this part of the code:\n\n```\n#run pylint command\npylint --rcfile=${PYLINT_CONFIG_DIR}/travis_run_pylint.cfg ${MODULES_TO_TEST}\n[...]\n************* Module banking.account_banking_iban_lookup.online\naccount_banking_iban_lookup/online.py:202: [W0101(unreachable), bank_info.harvest] Unreachable code\n[...]\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56493500/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56495749", "body": "yes, that's what #38 is supposed to fix\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56495749/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59707805", "body": "could you merge from upstream?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59707805/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59708064", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59708064/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59733031", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59733031/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61453391", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61453391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61608045", "body": "yes, better that way\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61608045/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17894037", "body": "no, it's unreachable code due to the unconditional return None, None before that block\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17894037/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071390", "body": "The beauty of the expression you replaced is that it doesn't create a temporary copy of the list. You can have the same effect if you change the list comprehension to a generator expression.\n\nTLDR: remove outermost square brackets\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071390/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071407", "body": "it's tag 61 (without 'F'), right?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071407/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071512", "body": "also no 'F' here?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071512/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071635", "body": "I used https://www.ing.nl/media/ING_ibp_mt940_942_format_description_the_netherlands_tcm162-45288.pdf as reference, there they state the message trailer is '-XXX' (p6) - did they release another document replacing this one?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071808", "body": "Also from the document above, I don't see a line date there. You probably used some real test file that contains this extra field, would it be an option to make it optional in the regex (`\\d{0,4}`)? I doesn't seem to be used anyways\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24071808/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34333243", "body": "this breaks for me with `ValueError: \"debit_reconcile() takes at least 4 arguments (4 given)\"`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/34333243/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "challs": {"issues": [], "commits": [], "pull_requests": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/115", "title": "7.0 uk hsbc import improvements", "body": "This branch contains 3 small changes I made to improve HSBC MT940 import:\n- Add first information line in transaction description. This often contains useful information such as the remote partner name, so is very helpful in deciding how to match transactions\n- Do not import NONREF reference - it is a placeholder for nothing, and makes the statement easier to read if it is imported as blank instead.\n- Explicitly recognise ACH as payment order type. This does not change functionality, because the default payment type is payment order, but makes the code more explicit.\n", "author_association": "NONE"}], "issue_comments": [], "commit_comments": [], "review_comments": []}, "jbarascut": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48466258", "body": "likely,\n\nbefore my update this morning, the modules worked\n\n2014-07-09 14:52 GMT+02:00 Sandy notifications@github.com:\n\n> It is very likely that none of these modules have been ported.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/OCA/banking/issues/7#issuecomment-48465480.\n\n## \n\nCordialement\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48466258/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48723021", "body": "Perfect, thanks Alexis.\n\n2014-07-11 6:10 GMT+02:00 Rapha\u00ebl Valyi notifications@github.com:\n\n> @alexis-via https://github.com/alexis-via it's like in our wiki ;-)\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/OCA/banking/issues/7#issuecomment-48692635.\n\n## \n\nCordialement\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48723021/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "rvalyi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48692635", "body": "@alexis-via it's like in our wiki ;-)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48692635/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48794844", "body": "agree with @bwrsandman if that's okay for you.\n\nAlso guys I want to push a PR to split that module in two, ideally we do that right before telling it's v8. Will try to find time in the week end for that.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48794844/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58247454", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58247454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60163004", "body": "Hello, I just wanted to mention that point 1) (not depending on stock module since the start) is very important too nevertheless. It's important not interfering with Odoo modularity.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60163004/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61200897", "body": "Hello @mileo \n\nMy review is still superficial at this stage, but basically you should not bring the account_due_list module into the banking repo in v7 as it is already present in OCA account_payment repo. A migration of this module is planned but only in v8, otherwise you would create a duplicate.\n\nTo make the module pass, you should tweak the .travis.yml file to add a dependency (see how other project do it).\n\nThat being said, I'm not too sure we should create a cross repo dep at this level for a 20 lines modules in v7. I have no strong opinion on this, but may be just keep the module in a kmee repo in v7 and then in v8 have it inside the banking repo once account_due_list is migrated (you can help).\n\nI'll try to review the concepts of your PR better though, but it seems to make sense\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61200897/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19647305", "body": "typo \"ICopy\"\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19647305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19647313", "body": "better you put your own copyright here\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19647313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19647327", "body": "add the field payment mode -> adds the payment mode field\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/19647327/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22942164", "body": "in general it's good to propagate the return from super (unless you really want to change it). Here super will return True too but eventually it could be changed. Is there any reason to hardcode return True in this override? Not against it, but just asking why this choice. (approve the file removal otherwise).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22942164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22948088", "body": "Hum in fact many methods used to return True to avoid returning nothing and not be incompatible with the XMLRPC protocol, so may be this is the kind of dummy meaningless return True. Let's say I just fail to see how it's better to hardcode True than returning super. But anyway not blocking for such a detail.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22948088/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "temmink": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48895162", "body": "In fact I did. Including a journal post for that account.\nMaybe this is useful. \n\nI's the bankaccount created at the company form. Which is a IBAN bankaccount.\nIn the import log it tries to match the national bankaccount (which is a part of the iban ).\n\nIt's very strange.\n\nafter several reboots and updates. now it's seams  to try to import some of the lines, but I got the following server error:\n\nServer Traceback (most recent call last):\n  File \"/opt/openerp/server/openerp/addons/web/session.py\", line 89, in send\n    return openerp.netsvc.dispatch_rpc(service_name, method, args)\n  File \"/opt/openerp/server/openerp/netsvc.py\", line 292, in dispatch_rpc\n    result = ExportService.getService(service_name).dispatch(method, params)\n  File \"/opt/openerp/server/openerp/service/web_services.py\", line 626, in dispatch\n    res = fn(db, uid, _params)\n  File \"/opt/openerp/server/openerp/osv/osv.py\", line 188, in execute_kw\n    return self.execute(db, uid, obj, method, *args, *_kw or {})\n  File \"/opt/openerp/server/openerp/osv/osv.py\", line 131, in wrapper\n    return f(self, dbname, _args, *_kwargs)\n  File \"/opt/openerp/server/openerp/osv/osv.py\", line 197, in execute\n    res = self.execute_cr(cr, uid, obj, method, _args, *_kw)\n  File \"/opt/openerp/server/openerp/osv/osv.py\", line 185, in execute_cr\n    return getattr(object, method)(cr, uid, _args, *_kw)\n  File \"/opt/openerp/server/openerp/addons/account_banking/wizard/bank_import.py\", line 306, in import_statements_file\n    cr, uid, values, context=context)\n  File \"/opt/openerp/server/openerp/addons/account_banking/banking_import_transaction.py\", line 686, in create\n    cr, uid, vals, context)\n  File \"/opt/openerp/server/openerp/osv/orm.py\", line 4442, in create\n    cr.execute('insert into \"'+self._table+'\" (id'+upd0+\") values (\"+str(id_new)+upd1+')', tuple(upd2))\n  File \"/opt/openerp/server/openerp/sql_db.py\", line 161, in wrapper\n    return f(self, _args, *_kwargs)\n  File \"/opt/openerp/server/openerp/sql_db.py\", line 226, in execute\n    res = self._obj.execute(query, params)\nDataError: invalid input syntax for type date: \"\"\nLINE 1: ...e_uid,create_date,write_uid,write_date) values (5,'','','','...\n\nany one has a solution for this?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48895162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48896868", "body": "Here I will attach some of the screens:\n![bank-gegevens](https://cloud.githubusercontent.com/assets/890128/3570929/4ae44016-0b57-11e4-9635-438fdf61d05a.png)\n![bank-instellingen](https://cloud.githubusercontent.com/assets/890128/3570931/4e4cd56a-0b57-11e4-9288-66fe2738739e.png)\n![import-wizard](https://cloud.githubusercontent.com/assets/890128/3570937/542a30b8-0b57-11e4-9056-15fb0f24c7b9.png)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48896868/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48898404", "body": "yes, great!!\n\nit works much better now.\nand it imported some of the statements.\n\nonly still having an issue with sometimes the bankaccount (national) not recognized).\n![resultaat](https://cloud.githubusercontent.com/assets/890128/3571103/89bc194c-0b59-11e4-9912-972ef74eb84b.png)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48898404/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48899401", "body": "btw. where can I give thumbs up :-)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48899401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48900187", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48900187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48903023", "body": "Is it allowed to have multiple \"default import settings for Bank Accounts\"?\nBecause then i can solve the problem with national bankaccount and Iban  account.\n\nor is this not allowed?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48903023/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48905022", "body": "ing MT940 format, sorry for not mentioning it.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48905022/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48910809", "body": "okay, so i have to setup multiple default import settings for Bank Accounts, to bypass this problem?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/48910809/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49008399", "body": "I agree, that's a much better solution. \nUnfortunately I'm not that great with python to do it myself.\nSo I was hoping that the workaround would be possible for the time being.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49008399/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49027238", "body": "I have merged #18 and restarted the server.\nNow importing 5 statements with 46 transactions.\n\nall succesfull!\n![import_log](https://cloud.githubusercontent.com/assets/890128/3584871/796f7446-0c1f-11e4-946d-8ee43361a263.png)\n\n:+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/49027238/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "CSester": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53382145", "body": "Rebased on current OCA/7.0 branch. Anyone to review ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/53382145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56001135", "body": "All changes are legitimes. Nice green Travis.\n\n:+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56001135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56006634", "body": "So, I rebased to integrate OCA/banking#33 and make Travis green. I also added version check in migration file to prevent running on install. Useless security rules (now being in account_banking_mandate) have been removed.\n\nAbout the migration script: as the account_banking_mandate is prerequist for the sepa_direct_debit module, it will be installed before sepa_direct_debit upgrade. This way, if I try to simply rename the sdd_mandate table to account_banking_mandate, it will fail because account_banking_mandate table already exists.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56006634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56174191", "body": "Modified accordingly to @nbessi comments.\n\nA Pylint test seems to have been added in maintainer quality tools, this way Travis is red. Should that be corrected here or in another PR ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56174191/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56481521", "body": "@pedrobaeza As OCA/banking#38 fixes the pylint issues, I will rebase as soon as changes are merged in OCA/7.0\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56481521/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56493114", "body": "The changes seems good. It would just be great to tell that there are not only pylint changes !\n:+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56493114/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56494310", "body": "@gurneyalex The CLA is on its way. You should get it soon.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56494310/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56494564", "body": "Ok, didn't see it in the Travis output.\nSo, :+1: for me\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56494564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56507483", "body": "@gurneyalex I just wrote a test for mandates. I got an issue with the sequence number (only on Travis (running the test locally works). Any idea of what goes wrong?\nEdit: Ok, the test failed because sepa mandate sequence and generic mandate sequence had exactly the same format.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56507483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/16697654", "body": "Missing 'by' here.\nEverything else seems good! :+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/16697654/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "guewen": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/54958937", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/54958937/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14593860", "body": "s/functionalit/functionality/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14593860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14593887", "body": "bullet points below are shifted\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14593887/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14593925", "body": "s/reconcilation/reconciliation/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/14593925/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21076030", "body": "context could be `None`, add a safeguard:\n\n```\nif context is None:\n    context = {}\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21076030/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21076048", "body": "context could be None, add a safeguard:\n\nif context is None:\n    context = {}\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21076048/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760291", "body": "s/correctely/correctly/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760291/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760329", "body": "s/columns/column/\ns/avoir/avoid/\ns/culumn/column/\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760329/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760371", "body": "no space before `:`\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760462", "body": "Why?\nIt should also be documented in the `README.rst` file.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760748", "body": "the view is not editable so `readonly` on every field seems useless to me\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760855", "body": "Generally there is a `groups=\"base.group_multi_currency\"` on the currency fields, should be respected here as well.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760855/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760860", "body": "Generally there is a `groups=\"base.group_multi_currency\"` on the currency fields, should be respected here as well.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33760860/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761139", "body": "This override is the reason of the conflict with the other module I think.\nI'm very bothered by this full override. What changed from the normal one?\n\nIt is a bug that we could fix upstream? If not, could you propose a hook on in the `account` module?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761331", "body": "`'Amount on line %s is not set !'` must be translated. The `!` is too much, could you remove it?\nParenthesis around `line.name` are useless (or you should use a tuple `(line.name,)`)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761393", "body": "the view is not editable so readonly on every field seems useless to me\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761393/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761413", "body": "Generally there is a groups=\"base.group_multi_currency\" on the currency fields, should be respected here as well.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761413/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761418", "body": "Generally there is a groups=\"base.group_multi_currency\" on the currency fields, should be respected here as well.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761444", "body": "the view is not editable so readonly on every field seems useless to me\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761444/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761472", "body": "Generally there is a groups=\"base.group_multi_currency\" on the currency fields, should be respected here as well.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761472/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761483", "body": "Generally there is a groups=\"base.group_multi_currency\" on the currency fields, should be respected here as well.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761770", "body": "Should be fixed in the base module, no?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33761770/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "coveralls": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55095739", "body": "[![Coverage Status](https://coveralls.io/builds/1191520/badge)](https://coveralls.io/builds/1191520)\n\nChanges Unknown when pulling **54523f3bb09ac68040c45a6ced54d9f83cbd5460 on pedrobaeza:7.0-bank_statement_instant_voucher-fix** into *\\* on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55095739/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55105115", "body": "[![Coverage Status](https://coveralls.io/builds/1191891/badge)](https://coveralls.io/builds/1191891)\n\nCoverage remained the same when pulling **70be9590ba198de431804aa048e433239f03ed38 on pedrobaeza:8.0-sepa-migration** into **a2e807668e48cd1efee30e31d39bc2f6d41c0d19 on OCA:8.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55105115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55724797", "body": "[![Coverage Status](https://coveralls.io/builds/1215015/badge)](https://coveralls.io/builds/1215015)\n\nCoverage remained the same when pulling **2e027528de275c85a7a3fee01ea67973adbbfe4c on pedrobaeza:8.0-sepa-migration** into **a2e807668e48cd1efee30e31d39bc2f6d41c0d19 on OCA:8.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55724797/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56006431", "body": "[![Coverage Status](https://coveralls.io/builds/1224891/badge)](https://coveralls.io/builds/1224891)\n\nCoverage increased (+0.24%) when pulling **dd3e4ad1eeac728feabbce2f64cfc090163bbad8 on CompassionCH:7.0-banking-mandates** into **b9d447562a8b775e1a3ea976dae5f376c721d160 on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56006431/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56358172", "body": "[![Coverage Status](https://coveralls.io/builds/1239817/badge)](https://coveralls.io/builds/1239817)\n\nChanges Unknown when pulling **9ddc98f2e4016ac78c99b4458889376cc3702d25 on hbrunn:7.0-pylint** into *\\* on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56358172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56487424", "body": "[![Coverage Status](https://coveralls.io/builds/1244499/badge)](https://coveralls.io/builds/1244499)\n\nChanges Unknown when pulling **3250c9a1a85dc198a7f24778592e71944be99c6d on hbrunn:7.0-pylint** into *\\* on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56487424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56497834", "body": "[![Coverage Status](https://coveralls.io/builds/1244931/badge)](https://coveralls.io/builds/1244931)\n\nChanges Unknown when pulling **8e2249d122793f9b28214cec0e0fee3fd376252b on hbrunn:7.0-ing-nl-tag25** into *\\* on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56497834/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56509584", "body": "[![Coverage Status](https://coveralls.io/builds/1245336/badge)](https://coveralls.io/builds/1245336)\n\nCoverage increased (+0.57%) when pulling **5dd1ab59b88259ab44ecf76eaadca883188f5bdf on CompassionCH:7.0-banking-mandates** into **bf033731e3e85dc55fedafc9024623a4ba7c5f40 on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56509584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58403685", "body": "[![Coverage Status](https://coveralls.io/builds/1310562/badge)](https://coveralls.io/builds/1310562)\n\nCoverage increased (+0.04%) when pulling **842a1c3d410bd9769a995f98014e267540f3128e on savoirfairelinux:7.0_translation_update** into **9b937d8864813d053f931415a31e06da2383c043 on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58403685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58679078", "body": "[![Coverage Status](https://coveralls.io/builds/1320114/badge)](https://coveralls.io/builds/1320114)\n\nCoverage increased (+0.04%) when pulling **4dad1ba061057e9f03138306da7fe59399cca6cc on savoirfairelinux:7.0_translation_update** into **9b937d8864813d053f931415a31e06da2383c043 on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58679078/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58695986", "body": "[![Coverage Status](https://coveralls.io/builds/1320634/badge)](https://coveralls.io/builds/1320634)\n\nCoverage remained the same when pulling **78568b84c0b08a19a4c9f49c00bc4b3fa529b3d5 on pedrobaeza:8.0-sepa-migration** into **a2e807668e48cd1efee30e31d39bc2f6d41c0d19 on OCA:8.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58695986/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58805387", "body": "[![Coverage Status](https://coveralls.io/builds/1325192/badge)](https://coveralls.io/builds/1325192)\n\nCoverage increased (+0.04%) when pulling **f5270d73bbb04d8de51ebbbc2a7666b3e50ad39f on savoirfairelinux:7.0_translation_update** into **9b937d8864813d053f931415a31e06da2383c043 on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58805387/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59161151", "body": "[![Coverage Status](https://coveralls.io/builds/1336787/badge)](https://coveralls.io/builds/1336787)\n\nCoverage increased (+0.03%) when pulling **510665d0b5c737f56362ab2a5849ec841cee0476 on bizzappdev:7.0_default_currency_camt** into **9b937d8864813d053f931415a31e06da2383c043 on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59161151/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59234089", "body": "[![Coverage Status](https://coveralls.io/builds/1339375/badge)](https://coveralls.io/builds/1339375)\n\nCoverage remained the same when pulling **3bdb009e107dd5be04591bf6a56eb8b82f80c857 on akretion:70-fix-payment-purchase-2** into **c1a935fbee6a46debeceafae662faa9553be128b on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59234089/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59722748", "body": "[![Coverage Status](https://coveralls.io/builds/1357401/badge)](https://coveralls.io/builds/1357401)\n\nCoverage remained the same when pulling **e9d0a889d0139ba62f0dde10e3ec74ad21ef21f0 on NL66278:8.0_no_bic** into **a2e807668e48cd1efee30e31d39bc2f6d41c0d19 on OCA:8.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59722748/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59732954", "body": "[![Coverage Status](https://coveralls.io/builds/1357623/badge)](https://coveralls.io/builds/1357623)\n\nChanges Unknown when pulling **f2db2082b26f216ed4c9cfd5c7fba956808a74dc on hbrunn:7.0-travis-2014-10-20** into *\\* on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59732954/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61350442", "body": "[![Coverage Status](https://coveralls.io/builds/1413044/badge)](https://coveralls.io/builds/1413044)\n\nCoverage remained the same when pulling **bb47f6675e8d6083b98244f85e693e86843ae811 on pedrobaeza:8.0-sepa-migration** into **a2e807668e48cd1efee30e31d39bc2f6d41c0d19 on OCA:8.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61350442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61454157", "body": "[![Coverage Status](https://coveralls.io/builds/1418960/badge)](https://coveralls.io/builds/1418960)\n\nCoverage remained the same when pulling **8d6920b6de31a0b680059d4426ba5342030e3eb0 on hbrunn:7.0-nl_rabo_mt940** into **0fe267e99b3717cbbb4f00a4194311a83439eecf on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61454157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61605905", "body": "[![Coverage Status](https://coveralls.io/builds/1424276/badge)](https://coveralls.io/builds/1424276)\n\nCoverage remained the same when pulling **3147d3fc21156e12cde3fd5ccd37a5597b76bc4d on hbrunn:7.0-nl_rabo_mt940** into **0fe267e99b3717cbbb4f00a4194311a83439eecf on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61605905/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61785071", "body": "[![Coverage Status](https://coveralls.io/builds/1430213/badge)](https://coveralls.io/builds/1430213)\n\nCoverage remained the same when pulling **6c85e75c599983280e8103c8d200b702b9ad96d5 on NL66278:8.0_no_preserve_domestic** into **3d2558f14faa17286b08bf1ef18bd8ed0b15f828 on OCA:8.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61785071/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61942533", "body": "[![Coverage Status](https://coveralls.io/builds/1435470/badge)](https://coveralls.io/builds/1435470)\n\nCoverage remained the same when pulling **42566964c991d73e5898009d495f6972a584141e on ruchir-bas-solutions:7.0_fix_translation_link_partner_nl** into **da00ae12b1a3a5594521a48f8f3e87856c34f1bb on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61942533/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61942778", "body": "[![Coverage Status](https://coveralls.io/builds/1435476/badge)](https://coveralls.io/builds/1435476)\n\nCoverage remained the same when pulling **b3739c40a58779d65713e4d615a8d8827ea8f749 on ruchir-bas-solutions:7.0_is_company_field_hide** into **da00ae12b1a3a5594521a48f8f3e87856c34f1bb on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61942778/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61979523", "body": "[![Coverage Status](https://coveralls.io/builds/1436585/badge)](https://coveralls.io/builds/1436585)\n\nCoverage remained the same when pulling **3131fc6c7eeec3f5c1dd46a8da6770faba9f6aeb on ruchir-bas-solutions:7.0_receivable_payable** into **da00ae12b1a3a5594521a48f8f3e87856c34f1bb on OCA:7.0**.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61979523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "bizzappdev": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55485696", "body": "7.0 sorry \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55485696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55563605", "body": "as already Merged in https://github.com/OCA/banking/pull/35\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55563605/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "michaelkarrer81": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55554712", "body": "Thank you very much!\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/55554712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "nbessi": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56166692", "body": "@StefanRijnhart @CSester It is ok for me with the migration script.\nI found some nit-picks to correct but esle it looks good to me.  \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56166692/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56174245", "body": ":+1:\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56174245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56962019", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/56962019/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779613", "body": "please use fields.date.context_today() it should manage TZ for you\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779613/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779740", "body": "Isn't partner_id a mandatory field ?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779740/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779779", "body": "Not blocking but I would return an except_orm Exception, it will be more user friendly\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779779/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779792", "body": "A comment would be welcome\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779829", "body": "An help tooltip would be nice\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779829/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779864", "body": "A more details description and some explainaition on how to use it would be welcome\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779864/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779962", "body": "missing carriage\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/17779962/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "max3903": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58805828", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58805828/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59552141", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59552141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59558379", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59558379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "sebastienbeau": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58850927", "body": "Good trick with lambda! :+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/58850927/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "OWNER"}], "commit_comments": [], "review_comments": []}, "lfreeke": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59909462", "body": ":+1: (test)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/59909462/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}], "commit_comments": [], "review_comments": []}, "tafaRU": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60385815", "body": ":+1: \n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/60385815/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "mileo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61107848", "body": "@pedrobaeza  https://github.com/OCA/banking/pull/57\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61107848/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61108910", "body": "I will review the request. Unfortunately I used the master branch as base.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/issues/comments/61108910/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}], "commit_comments": [], "review_comments": []}, "danimaribeiro": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21040879", "body": "Wouldn't be better stick with \"Pedido\" instead of \"Ordem\"\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21040879/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21040903", "body": "Same here: \"Pedido\" instead of \"Ordem\"\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21040903/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "renatonlima": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21053874", "body": "@mileo @danimaribeiro \n\nIn purchase module this term is translated \"Ordem de Compra\", this translation could be the same in purchase module... https://github.com/odoo/odoo/blob/7.0/addons/purchase/i18n/pt_BR.po#L1841\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/21053874/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "LeartS": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22166792", "body": "I'm ok with both single and double quotes, but choose one! :)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22166792/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22166825", "body": "Didn't you use `_pool` before?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/22166825/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "lmignon": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23209484", "body": "The method should return a recordset.. (even if it is empty)\nIt should work with the following method\n\n``` python\n@api.model\ndef _default_type(self):\n    return self.env.ref(\n        'account_banking_payment_export.'\n        'manual_bank_tranfer', raise_if_not_found=False)\\\n        or self.env['payment.mode.type']\n```\n\nOdoo will try to apply the default value a fist time during the installation step and give a warning. It will retry again during the post-install step and this time it should work.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23209484/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23210499", "body": "@sbidoul I'll do the changes \nUnfortunately, the @api.returns('payment.mode.type') is without effect in this case (as I remember) (a odoo bug?)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/23210499/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24648940", "body": "lines 124 to 127 can be replaced by \n\n``` python\nmove['period_id'] = self.period_id.with_context(\n    company_id=self.company_id.id).find(self.date).id\n```\n\nsee https://github.com/odoo/odoo/blob/8.0/openerp/models.py#L5243\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24648940/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24649070", "body": "`if` is no more required since the condition is already tested at line 107.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24649070/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24649264", "body": "IMO you can reduce the number of nested python blocks and improve the readability with:\n\n``` python\nif not self.move_id:\n    return True\nfor return_line in self.line_ids:\n    ....\nself.write(....\nreturn True\n```\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24649264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24649301", "body": "indentation\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24649301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27202056", "body": "typo '**un** payment orders'\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27202056/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27202132", "body": "Do we need to keep empty entries?\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27202132/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27202192", "body": "in V8 `checks =` is no more requried\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27202192/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27202402", "body": "OCA misses in the list of authors\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27202402/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794110", "body": "replace placeholders {project_repo}, {module_name}, {version} with the appropriate values\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794110/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794178", "body": "remove vim statement\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794244", "body": "PEP8 no newline at end of line\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794244/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794409", "body": "The package 'model' is not used at all. You can remove it (IOW the directory models should be removed)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794480", "body": "the security directory can be removed since they are no specific ACL defined in this addon\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794480/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794520", "body": "remove vim statement\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794726", "body": "IMO you can remove irrelevant sections (Installation, Configuration, Usage)\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794726/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794832", "body": "CamelCase for classname in V8\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/31794832/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "luanaduarte": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24574707", "body": "A ordem de d\u00e9bito \u00e9 um pedido de d\u00e9bito de sua empresa para coletar faturas de clientes. Aqui voc\u00ea pode registrar todas as ordens de d\u00e9bito que deve ser feitAS, manter o controle de todas as ordens de d\u00e9bito e mencionar a refer\u00eancia da fatura e o parceiro que a retirada deve ser feita.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24574707/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24574754", "body": "Cancelamento da linha de pagamento '%s' j\u00e1 foi processadO\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/24574754/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "angelmoya": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33419131", "body": "I can remove on both because it's a little contribution, but note field  it's on account_banking_payment_export module because this module is the base, and I think this field could be usefull in other modules.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33419131/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33419134", "body": "Add note field in payment mode in this module.\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/33419134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "CONTRIBUTOR"}]}, "llacroix": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27459592", "body": "Added the journal_id.type to the domain line below\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27459592/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27675799", "body": "Done\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27675799/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27676862", "body": "Done 2 spaces on each xml files to be certain\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/27676862/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}, "Yajo": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/42496745", "body": "If I'm not wrong, this should be `name` (Odoo style).\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/42496745/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "MEMBER"}]}, "elicoidal": {"issues": [], "commits": [], "pull_requests": [], "issue_comments": [], "commit_comments": [], "review_comments": [{"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/45935974", "body": "sort order\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/45935974/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}, {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/45935988", "body": "import order\n", "reactions": {"url": "https://api.github.com/repos/OCA/bank-payment/pulls/comments/45935988/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0}, "author_association": "NONE"}]}}}}